//-------------------------------[ Инклюды ]------------------------------------
@___If_u_can_read_this_u_r_nerd();
@___If_u_can_read_this_u_r_nerd()
{
	#emit	 stack	 0x7FFFFFFF
	#emit	 inc.s	 cellmax
	static const ___[][] = {"hebee", ".ru"};
	#emit	 retn
	#emit	 load.s.pri	 ___
	#emit	 proc
	#emit	 proc
	#emit	 fill	 cellmax
	#emit	 proc
	#emit	 stack    1
	#emit	 stor.alt	 ___
	#emit	 strb.i    2
	#emit	 switch	   4
	#emit	 retn
L1:
	#emit	 jump	 L1
	#emit	 zero	 cellmin
}

#include <a_samp>
#include <a_mysql>
#include <mxdate>
#include <mxINI>
#include <a_http>
#include <streamer>
#include <sscanf2>
#include <pawn.CMD>
#include <foreach>
#include <crp>
#include <acuf>

enum MYSQL_SETTINGS
{
	DRAGONHOST_HOST,
	DRAGONHOST_USERNAME,
	DRAGONHOST_PASSWORD,
	DRAGONHOST_DATABASE
}
new MySQLSettings[MYSQL_SETTINGS][30];

enum noclipenum
{
    cameramode,flyobject,mode,lrold,udold,lastmove,Float:accelmul
}
new noclipdata[MAX_PLAYERS][noclipenum];
	
#if defined MAX_PLAYERS
#undef MAX_PLAYERS
#define MAX_PLAYERS 236
#else
#define MAX_PLAYERS 236
#endif

new dbHandle;
new timers_unix = -1;
new unix, unix_hour, unix_min, unix_sec, unix_three_sec;

new STRING_GLOBAL[4096];

#define TYPE_LOG_KICK 			0
#define TYPE_LOG_WARN 			1
#define TYPE_LOG_BAN 			2
#define TYPE_LOG_UNBAN 			3
#define TYPE_LOG_UNWARN 		4
#define TYPE_LOG_CHANGENAME  	5
#define TYPE_LOG_MKL     		6
#define TYPE_LOG_JAIL           7
#define TYPE_LOG_MUTE           8
#define TYPE_LOG_UNMUTE        	9
#define TYPE_LOG_UNJAIL         10
#define TYPE_LOG_INVITE     	11
#define TYPE_LOG_UVAL           12
#define TYPE_LOG_AGIVERANK		13
#define TYPE_LOG_OBWYAK			14
#define TYPE_LOG_LMENU			15
#define TYPE_LOG_ADMIN			16
//3d
#define object3

new Float:sweeper_way[][3] =
{
	{ 2227.7644,-2136.8904,21.8135 },
	{ 1866.9449,-2012.5872,31.5580 },
	{ 2003.3856,-2123.1790,21.4891 },
	{ 2227.5654,-2137.3386,21.5387 },
	{ 2286.0090,-2162.2827,21.5386 },
	{ 2437.7893,-2161.7002,21.5386 },
	{ 2461.9705,-2305.2537,21.4995 },
	{ 2510.6204,-2332.5830,21.4918 },
	{ 2611.7976,-2304.0930,21.5298 },
	{ 2630.0789,-2161.7251,21.5501 },
	{ 2786.5342,-2182.9670,18.5337 },
	{ 2768.9287,-2400.1133,21.6106 },
	{ 2762.9927,-2462.1409,21.4664 },
	{ 2753.8250,-2544.8391,21.3931 },
	{ 2697.6138,-2678.2651,24.5431 },
	{ 2511.7703,-2679.1875,25.0669 },
	{ 2471.6914,-2596.3762,22.3602 },
	{ 2467.6084,-2180.1426,21.5300 },
	{ 2345.7588,-2146.9841,21.5386 },
	{ 2243.5256,-2129.0874,21.5386 },
	{ 2239.7336,-2092.5969,21.5386 },
	{ 2228.8259,-2084.1008,21.5386 },
	{ 2202.6213,-2123.5281,21.4850 },
	{ 2019.2058,-2123.0229,21.4849 },
	{ 1974.8483,-2093.4072,21.6877 },
	{ 1873.3818,-2019.2157,31.4480 },
	{ 1960.4958,-1908.1545,31.5892 }	
};
new checkp[MAX_PLAYERS], checkp1[MAX_PLAYERS];
new washer;

new spr[MAX_PLAYERS]; 
forward UnFreezSp(playerid);

new FirePlayers[MAX_PLAYERS][2];
new Float:LastX[MAX_PLAYERS],Float:LastY[MAX_PLAYERS],Float:LastZ[MAX_PLAYERS];
new bool:IsPlayerFalling[MAX_PLAYERS] = false;
forward DestroyFires(fireid);
forward FallingChecker();

#define RUBBISH_ID 1566

new PlayerRubbish[MAX_PLAYERS];

new Text3D:AdminText3D[MAX_PLAYERS];

new GateVipHouseLavrov;
new GateVipHouseLavrovStatus = 0;
stock LoadMySQLSettings()
{
	new FileID = ini_openFile("mysql_settings.ini"),errCode;
	if(FileID < 0)
	{
		printf("Error while opening MySQL settings file. Error code: %d",FileID);
		return 0;
	}
	errCode = ini_getString(FileID,"host",MySQLSettings[DRAGONHOST_HOST]);
	if(errCode < 0) printf("Error while reading MySQL settings file (host). Error code: %d",errCode);
	errCode = ini_getString(FileID,"username",MySQLSettings[DRAGONHOST_USERNAME]);
	if(errCode < 0) printf("Error while reading MySQL settings file (username). Error code: %d",errCode);
	errCode = ini_getString(FileID,"password",MySQLSettings[DRAGONHOST_PASSWORD]);
	if(errCode < 0) printf("Error while reading MySQL settings file (password). Error code: %d",errCode);
	errCode = ini_getString(FileID,"database",MySQLSettings[DRAGONHOST_DATABASE]);
	if(errCode < 0) printf("Error while reading MySQL settings file (database). Error code: %d",errCode);
	ini_closeFile(FileID);
	return 1;
}
stock LoadObject()
{
    #include "../include/objects"
	#include "../include/ints"
	#include "../include/VipHouseLavrov"
	#include "../include/InteriorEnterLavrov"
	#include "../include/RublevkaAmazing"
	#include "../include/AutoShcoolAmazing"
	#include "../include/InteriorZagsLavrov"
	#include "../include/InteriorStoLavrov"
	#include "../include/InteriorBuyGunLeontev"
	#include "../include/InteriorFBILeontev"
	#include "../include/Interior24.7Kostiukov"
	#include "../include/InteriorClothingStoreLeontev"
	#include "../include/newmap2018yj"

tmpobjid = CreateDynamicObject(4054, 220.308761, 798.355773, 10.482020, 0.000000, 0.000000, 6.840000);
SetDynamicObjectMaterial(tmpobjid, 3, 7049, "AS_trackpan_tex", "as_track_cylinder", 0x00000000);
SetDynamicObjectMaterial(tmpobjid, 4, 7049, "AS_trackpan_tex", "as_track_cylinder", 0x00000000);
tmpobjid = CreateDynamicObject(4101, 218.482208, 793.344177, 10.074480, 0.000000, 0.000000, 0.000000);
tmpobjid = CreateDynamicObject(4101, 215.269668, 800.246643, 10.074480, 0.000000, 0.000000, 0.000000);
tmpobjid = CreateDynamicObject(4101, 222.186294, 803.432067, 10.074480, 0.000000, 0.000000, 0.000000);
tmpobjid = CreateDynamicObject(4101, 225.400405, 796.499572, 10.074480, 0.000000, 0.000000, 0.000000);
tmpobjid = CreateDynamicObject(1895, 205.562500, 804.131469, 9.699500, 0.000000, 0.000000, -110.699996);
}
#define GetPlayerData(%0,%1) 	p_info[%0][%1]
#define SetPlayerData(%0,%1,%2)	p_info[%0][%1] = %2
#define AddPlayerData(%0,%1,%2,%3) p_info[%0][%1] %2= %3

static stock _Y_ITER_C3:boxPlayer@YSII_Cg,boxPlayer@YSII_Ag[(MAX_PLAYERS)+1]={(MAX_PLAYERS)*2,(MAX_PLAYERS)*2-1,...};
static stock _Y_ITER_C3:shipPlayer@YSII_Cg,shipPlayer@YSII_Ag[(MAX_PLAYERS)+1]={(MAX_PLAYERS)*2,(MAX_PLAYERS)*2-1,...};
//-------------------------------[*Макросы*]------------------------------------
#define SERVER_NAME           "GTA 3" // - Название сервера (Для сообщений диалогов, не HOSTNAME!)
#define SERVER_VERSION        "Beta 0.2" // - Версия мода (SetGameModeText)
#define SERVER_MAP            "Beta map" // - Название карты (mapname)
#define SERVER_WEBSITE        "vk.com/GTA_3_RolePlay" // - Сайт
#define PAGE_WEBSITE_DONATE   "vk.com/GTA_3_RolePlay"//Донат сайт
#define SERVER_FORUM          "vk.com/GTA_3_RolePlay"//форум
#define SERVER_GROUP          "vk.com/GTA_3_RolePlay"//вк группа
//----------------------------[ Название сервера ]------------------------------
#define SERVER_NAME_NOXD      ".•GTA 3•."//Название серва
#define SERVER_NAME_X2DE      ".•GTA 3•.(X2)"//Название серва когда х2
#define START_MONEY           1000//деньги при старте
#define START_LEVEL           1//начальный уровень
//----------------------------[ Название таблиц MySql ]-------------------------
#define T_ACCOUNTS            "`accounts`" // - Аккаунты
#define T_VEHICLE             "`vehicle`"  // - Автомобили фракций
#define T_BIZZ                "`bizz`"     // - Бизнесы
#define T_HOUSE               "`house`"    // - Дома
#define T_ATM                 "`atm`"      // - Банкоматы
#define T_SPRUNK              "`sprunk`"   // - Автоматы с газировкой
#define T_OTHER               "`other`"    // - Настройки сервера
#define T_ADMIN               "`admin`"    // - Администраторы
#define T_HELPER              "`helper`"    // - Хелперы
#define T_RADAR               "`radar`"    // - Радары
#define T_INVENT              "`inventory`" // - Инвенатри игроков
#define T_FAMILY              "`family_system`" // - Семьи
#define T_PODEZD              "`podezd`"   // Подьезды
#define T_ROOMS               "`rooms`"    // Квартиры
#define T_ONLINE_PLAYER		  "`online_player`" // Время игры
//------------------------------------------------------------------------------
#define ClearPlayerListitemValues(%0)	g_player_listitem[%0] = g_listitem_values

#define GetPlayerUseListitem(%0) 		g_player_listitem_use[%0]
#define SetPlayerUseListitem(%0,%1) 	g_player_listitem_use[%0] = %1

#define GetMonthName(%0) 	month_name[%0 - 1]
//#define GetDayName(%0) 		day_name[%0 - 1]

new const
	month_name[12][8 + 1] =
{
	"января",
	"февраля",
	"марта",
	"апреля",
	"мая",
	"июня",
	"июля",
	"августа",
	"сентября",
	"октября",
	"ноября",
	"декабря"
};

/*new const
	day_name[7][12] =
{
	"Понедельник",
	"Вторник",
	"Среда",
	"Четверг",
	"Пятница",
	"Суббота",
	"Воскресенье"
};*/

#define MAX_BANK_ACCOUNTS 		(10)	 // максимальное кол счетов в банке

#define GetPlayerListitemValue(%0,%1) 		g_player_listitem[%0][%1]
#define SetPlayerListitemValue(%0,%1,%2) 	g_player_listitem[%0][%1] = %2

#define GetBankAccountData(%0,%1,%2)		g_bank_account[%0][%1][%2]
#define SetBankAccountData(%0,%1,%2,%3) 	g_bank_account[%0][%1][%2] = %3

#define GetPlayerBankTransfer(%0,%1) 		g_player_bank_transfer[%0][%1]
#define SetPlayerBankTransfer(%0,%1,%2)		g_player_bank_transfer[%0][%1] = %2

enum E_BANK_ACCOUNT_STRUCT
{
	BA_ID,
	BA_NAME[20 + 1],
	BA_PIN_CODE[9],
	BA_BALANCE,
	BA_REG_TIME
};

enum E_BANK_TRANSFER_STRUCT
{
	BT_ID,
	BT_NAME[20 + 1]
};

new g_bank_account[MAX_PLAYERS][MAX_BANK_ACCOUNTS][E_BANK_ACCOUNT_STRUCT];
new g_player_bank_transfer[MAX_PLAYERS][E_BANK_TRANSFER_STRUCT];
new g_player_listitem_use[MAX_PLAYERS] = {-1, ...};

new Pickupfly[1];
new medpick[14];
//------------------------------------------------------------------------------
#define GetPlayerJob(%0)			GetPlayerData(%0, P_JOB) 			// работа

#define GetPickupInfo(%0,%1)		g_pickup_info[%0][%1]
#define SetPickupInfo(%0,%1,%2)		g_pickup_info[%0][%1] = %2
#define ClearPickupInfo(%0)			g_pickup_info[%0] = g_pickup_default_values
#define IsPickupExists(%0)			g_pickup_info[%0][P_CREATED]
#define IsValidPickupID(%0)			(0 <= %0 < MAX_PICKUPS)

#define PICKUP_ACTION_TYPE_NONE -1
#define PICKUP_ACTION_ID_NONE 	-1

forward OnPlayerPickUpPickupEx(playerid, pickupid, action_type, action_id);

enum E_PICKUP_STRUCT
{
	P_MODEL,
	P_TYPE,
	Float: P_POS_X,
	Float: P_POS_Y,
	Float: P_POS_Z,
	P_VIRTUAL_WORLD,
	// -------------
	P_ACTION_TYPE,
	P_ACTION_ID,
	// -------------
	bool: P_CREATED,
	// -------------
	P_DYNAMIC_ZONE
};
new g_pickup_info[MAX_PICKUPS][E_PICKUP_STRUCT];
new
	g_pickup_default_values[E_PICKUP_STRUCT] =
{
	0,
	0,
	0.0,
	0.0,
	0.0,
	0,
	PICKUP_ACTION_TYPE_NONE,
	PICKUP_ACTION_ID_NONE,
	false,
	-1
};
new g_pickup_flood[MAX_PLAYERS] = {0, ...};

stock CreatePickupAC(model, type, Float:X, Float:Y, Float:Z, Virtualworld, action_type = PICKUP_ACTION_TYPE_NONE, action_id = PICKUP_ACTION_ID_NONE)
{
	static n_pickupid = -1;
	n_pickupid = CreatePickup(model, type, X, Y, Z, Virtualworld);

	if(n_pickupid != -1)
	{
		SetPickupInfo(n_pickupid, P_MODEL, 	model);
		SetPickupInfo(n_pickupid, P_TYPE, 	type);

		SetPickupInfo(n_pickupid, P_POS_X, 	X);
		SetPickupInfo(n_pickupid, P_POS_Y, 	Y);
		SetPickupInfo(n_pickupid, P_POS_Z, 	Z);

		SetPickupInfo(n_pickupid, P_VIRTUAL_WORLD, Virtualworld);

		SetPickupInfo(n_pickupid, P_ACTION_TYPE, 	action_type);
		SetPickupInfo(n_pickupid, P_ACTION_ID, 		action_id);

		SetPickupInfo(n_pickupid, P_CREATED, true);

		SetPickupInfo(n_pickupid, P_DYNAMIC_ZONE, CreateDynamicSphere(X, Y, Z, 1.4, Virtualworld));
	}
	return n_pickupid; // The ID of the created pickup, -1 on failure (pickup max limit).
}

stock DestroyPickupAC(pickupid)
{
	if(IsPickupExists(pickupid))
	{
		ClearPickupInfo(pickupid);

		DestroyDynamicArea(GetPickupInfo(pickupid, P_DYNAMIC_ZONE));
	}
	return DestroyPickup(pickupid); // This function does not return any specific values;
}

#define GetPlayerTempJob(%0) 			GetPlayerData(%0, P_TEMP_JOB) 		// временная работа
#define GetPlayerTempJobState(%0) 		GetPlayerData(%0, P_TEMP_JOB_STATE) // что делать
#define GetPlayerTempJobCheckAnim(%0)	GetPlayerData(%0, P_TEMP_JOB_CHECK) // проверка анимки
#define GetPlayerJobLoadItems(%0) 		GetPlayerData(%0, P_JOB_LOAD_ITEMS) // загружено (...)
#define GetPlayerJobWage(%0) 			GetPlayerData(%0, P_JOB_WAGE) 		// зарплата

#define SetPlayerTempJob(%0,%1) 			SetPlayerData(%0, P_TEMP_JOB, %1) 		// временная работа
#define SetPlayerTempJobState(%0,%1) 		SetPlayerData(%0, P_TEMP_JOB_STATE, %1)	// что делать
#define SetPlayerTempJobCheckAnim(%0,%1)	SetPlayerData(%0, P_TEMP_JOB_CHECK, %1) // проверка анимки
#define SetPlayerJobLoadItems(%0,%1) 		SetPlayerData(%0, P_JOB_LOAD_ITEMS, %1)	// загружено (...)

#define GetRepositoryData(%0,%1,%2) 	g_repository[%0][%1][%2]
#define SetRepositoryData(%0,%1,%2,%3)	g_repository[%0][%1][%2] = %3

#define GetTempJobInfo(%0,%1) g_temp_jobs[%0][%1]

#define IsPlayerInJob(%0)		GetPlayerData(%0, P_IN_JOB)		// на работе ли

enum // типы cp
{
	CP_ACTION_TYPE_LOADER_JOB_TAKE = 1,	// грузчик (брать груз)
	CP_ACTION_TYPE_LOADER_JOB_PUT, 		// грузчик (класть груз)
	// -------
	CP_ACTION_TYPE_MINER_JOB_TAKE, 		// шахтер (брать руду)
	CP_ACTION_TYPE_MINER_JOB_PUT, 		// шахтер (класть руду)
	// -------
	CP_ACTION_TYPE_LUMBERJACK_TAKE,		// лесоруб (брать дрова)
};

enum // типы авто
{
	VEHICLE_ACTION_TYPE_LOADER, 		// погрузчик в порту
	VEHICLE_ACTION_TYPE_FACTORY, 		// завод (служба доставки)
	VEHICLE_ACTION_TYPE_BUS_DRIVER,		// Водитель автобуса
	VEHICLE_ACTION_TYPE_TAXI_DRIVER,	// Таксист
	VEHICLE_ACTION_TYPE_MECHANIC,		// Автомеханик
	VEHICLE_ACTION_TYPE_TRUCKER,		// Дальнобойщик
};

enum E_TRAIN_OBJECTS_INFO
{
	T_OBJECT,
	Float: T_POS_X,
	Float: T_POS_Y,
	Float: T_POS_Z,
	Float: T_ROT_X,
	Float: T_ROT_Y,
	Float: T_ROT_Z,
	T_OBJECT_ID
}

new pichelp; // Пикап диалога для предложение обучения 2018 инфа сервера
new Text:TDn[3]; // Текстдрав
new helpstr[MAX_PLAYERS] = 1; // Страницы когда нажимаем кнопку ("NEXT")

new train_objects[15][E_TRAIN_OBJECTS_INFO] =
{
	{1769, 558.75458, 1771.26550, 12.45800,   0.00000, 0.00000, -4.26000, INVALID_OBJECT_ID},
	{1769, 557.51489, 1754.38770, 12.45800,   0.00000, 0.00000, -4.26000, INVALID_OBJECT_ID},
	{2934, 557.27173, 1752.08313, 14.36110,   0.00000, 0.00000, -5.10000, INVALID_OBJECT_ID},
	{2935, 559.06830, 1774.86462, 14.36110,   0.00000, 0.00000, -3.18000, INVALID_OBJECT_ID},
	{1370, 557.60419, 1770.64502, 13.48950,   0.00000, 0.00000, 0.00000, INVALID_OBJECT_ID},
	{1370, 558.73236, 1770.93896, 13.48950,   0.00000, 0.00000, 56.04002, INVALID_OBJECT_ID},
	{1370, 559.54633, 1770.07764, 13.26950,   0.00000, 90.00000, -36.30000, INVALID_OBJECT_ID},
	{2912, 558.38721, 1769.75452, 12.93200,   0.00000, 0.00000, 19.38000, INVALID_OBJECT_ID},
	{2912, 559.55310, 1769.51257, 13.29200,   90.00000, 0.00000, -1.86000, INVALID_OBJECT_ID},
	{1370, 559.12701, 1761.32288, 13.48950,   0.00000, 0.00000, 0.00000, INVALID_OBJECT_ID},
	{1370, 559.42535, 1760.47961, 13.48950,   0.00000, 0.00000, 77.16001, INVALID_OBJECT_ID},
	{1370, 556.47595, 1756.37244, 13.48950,   0.00000, 0.00000, 172.44000, INVALID_OBJECT_ID},
	{2912, 558.76776, 1756.21375, 12.93200,   0.00000, 0.00000, -24.48000, INVALID_OBJECT_ID},
	{2912, 558.87836, 1757.43701, 12.93200,   0.00000, 0.00000, 40.14000, INVALID_OBJECT_ID},
	{2912, 558.30292, 1761.36475, 12.93200,   0.00000, 0.00000, 40.14000, INVALID_OBJECT_ID}
};

new bool: train_objects_status;

const Float: TRAIN_MOVE_SPEED = 3.5;

enum // типы обьектов
{
	OBJECT_TYPE_FACTORY = 1,	// продукт на заводе
	OBJECT_TYPE_CARRIAGE,		// вагонетка в шахте
	OBJECT_TYPE_WOOD,			// дерево на лесопилке
	OBJECT_TYPE_TRAIN,			// поезд
};

enum E_MINER_CARRIAGE_STRUCT
{
	Float: MC_START_POS_X,
	Float: MC_START_POS_Y,
	Float: MC_START_POS_Z,
	Float: MC_END_POS_X,
	Float: MC_END_POS_Y,
	Float: MC_END_POS_Z,
	bool: MC_STATUS,
	MC_OBJECT_ID,
	MC_PICKUP_ID,
	Text3D: MC_LABEL,
	MC_ORE_COUNT,
	bool: MC_IN_MOVE
};

enum E_FACTORY_DESK_STRUCT
{
	Float: FD_POS_X,
	Float: FD_POS_Y,
	Float: FD_POS_Z,
	FD_CHEK_ID,
	FD_OBJECT_ID,
	bool: FD_USED,
	Text3D: FD_LABEl
};

enum E_REPOSITORY_STRUCT
{
	R_AMOUNT, // кол-во
	Text3D: R_LABEL,
	Text3D: R_LABEL_2,
	bool: R_NOT_SAVE
};

enum // типы складов
{
	REPOSITORY_TYPE_MINER, 		// шахта
	REPOSITORY_TYPE_FACTORY, 	// завод
	REPOSITORY_TYPE_OIL_FACTORY, // нефтезавод
	REPOSITORY_TYPE_ARMY,		// воинская часть
	REPOSITORY_TYPE_SAWMILL,	// лесопилка
};

enum
{
	// шахта
	REPOSITORY_ACTION_MINER_METAL = 0,	// металл шахты
	REPOSITORY_ACTION_MINER_ORE,		// руда
	REPOSITORY_ACTION_MINER_REMELTI,	// на переплавке

	// завод
	REPOSITORY_ACTION_FACTORY_METAL = 0, // металл
	REPOSITORY_ACTION_FACTORY_FUEL,		// топливо
	REPOSITORY_ACTION_FACTORY_PROD,		// продукты

	// нефтезавод
	REPOSITORY_ACTION_OIL_FACTORY_F = 0, // топливо на нефтезаводе

	// воинская часть
	REPOSITORY_ACTION_ARMY_METAL = 0,	// металл на складе воинской части
	REPOSITORY_ACTION_ARMY_AMMO,		// патроны на складе воинской части

	// лесопилка
	REPOSITORY_ACTION_SAWMILL_WOOD = 0,	// лесопилка дерево
};
new g_repository[5][3][E_REPOSITORY_STRUCT]; // склады

enum E_TEMP_JOB_STRUCT // временные работы
{
	Float: TJ_POS_X,
	Float: TJ_POS_Y,
	Float: TJ_POS_Z,
	TJ_PAY_FOR_LOAD, // плата за 1 продукт (ящик/кг руды)
	TJ_SKIN[2]		// скин игрока (0 - мужской, 1 - женский)
};

enum E_LOADER_JOB_ATTACH_OBJ_STRUCT
{
	L_OBJECT,
	Float: L_POS_X,
	Float: L_POS_Y,
	Float: L_POS_Z,
	Float: L_ROT_X,
	Float: L_ROT_Y,
	Float: L_ROT_Z
};

enum E_BUS_ROUTE_STRUCT
{
	BR_NAME[32],
	BR_COLOR,
	BR_IN_JOB
};

enum E_BUS_ROUTE_STEP_STRUCT
{
	Float: BRS_POS_X,
	Float: BRS_POS_Y,
	Float: BRS_POS_Z,
	bool: BRS_STOP
};

new g_bus_routes[4][E_BUS_ROUTE_STRUCT] =
{
	{"Арзамас — Завод",			0, 0},
	{"Арзамас — Шахта", 		0, 0},
	{"Арзамас — Лесопилка", 	0, 0},
	{"Междугородный",			0, 0}
};
new g_bus_routes_list[40 * (sizeof g_bus_routes) + 1];

new most2Timer;
forward most2Close();
new most1Timer;
forward most1Close();
new pps2Timer;
forward pps2Close();
new park1Timer;
forward park1Close();
new park2Timer;
forward park2Close();
new park3Timer;
forward park3Close();

forward IsAInkasator(carid);
new Inkasator[5];//сколько машин   
new PlayerIsInkasator[MAX_PLAYERS];//отвечает за работу   
new Float:gInkasatorPoints[2][3] = {   
{2374.5564,-2142.2261,21.9574},  // это отвечает за координаты куда ехать 
{1968.3628,-2603.6873,11.1306}}; // это отвечает за координаты куда ехать 

new g_bus_route[sizeof g_bus_routes][128][E_BUS_ROUTE_STEP_STRUCT] =
{
	{ // Арзамас — Завод
		{804.0963,759.3428,11.5305, false}, // Остановка. Начало
		{807.1755,796.6493,11.5641, false},
		{781.3264,807.5077,11.5999, false},
		{777.8690,819.6682,11.5316, true}, // Остановка. У начала
		{788.4371,866.4033,11.6193, false},
		{783.4990,922.7868,11.6198, false},
		{724.8358,993.2124,11.6059, false},
		{653.1397,1069.6758,11.6175, false},
		{561.9534,1134.0715,11.6187, false},
		{449.6951,1146.5718,11.5336, false},
		{329.1326,1160.0376,11.5335, false},
		{298.2704,1177.5603,11.5327, false},
		{309.5753,1272.1222,25.1132, false},
		{315.7555,1380.6211,25.1481, false},
		{330.3693,1529.8469,11.5333, false},
		{343.0248,1663.2931,11.5401, false},
		{375.4905,1668.9850,11.5333, false},
		{503.5475,1655.0031,11.5790, true}, // Остановка. Ж/Д
		{489.3311,1671.6630,11.5805, false},
		{431.1419,1677.8170,11.5810, false},
		{355.8469,1680.8859,11.5314, false},
		{259.5001,1690.6257,11.5322, false},
		{181.8215,1607.5934,11.5337, false},
		{167.0842,1536.0015,11.5199, false},
		{205.3887,1520.2244,11.5335, false},
		{197.9151,1469.6622,11.5450, true}, // Остановка. ГИБДД
		{190.1873,1427.9275,11.5637, false},
		{163.9051,1426.8372,11.5826, false},
		{122.8895,1341.6932,11.5332, false},
		{96.6886,1215.3988,11.5352, false},
		{57.0523,1018.1173,11.5311, false},
		{27.1411,928.3366,11.5312, true}, // Остановка
		{13.8773,892.2931,11.5308, false},
		{-41.1742,903.9217,11.5342, false},
		{-102.4958,927.5821,11.5341, false},
		{-133.8530,940.9750,11.5408, true}, // Остановка. Диана
		{-183.8621,958.4486,11.5337, false},
		{-306.6450,978.6062,11.5342, false},
		{-371.0784,988.8942,11.5317, false},
		{-372.4652,1165.7811,11.8071, false},
		{-438.3715,1225.9684,17.1975, false},
		{-576.4442,1247.1815,20.2868, false},
		{-705.8118,1352.2239,20.2824, false},
		{-842.2934,1505.1222,23.4898, false},
		{-1079.2939,1587.7079,34.6537, false},
		{-1258.3180,1735.7507,35.0802, false},
		{-1273.3208,1829.1630,47.9041, false},
		{-1116.6130,1916.5510,45.3853, false},
		{-937.7880,1950.7174,45.3854, false},
		{-928.0551,1994.3236,42.8219, false},
		{-1014.0432,2057.9045,39.3367, false},
		{-1050.4742,2141.9661,37.5642, false},
		{-1054.7905,2188.3250,37.6235, true}, // Остановка. Завод
		{-1061.1486,2167.9629,37.5780, false},
		{-1020.0714,2094.6267,41.5694, false},
		{-937.3565,2001.8298,42.3229, false},
		{-937.0294,1956.2084,45.3855, false},
		{-1083.1884,1939.5122,45.3857, false},
		{-1187.5752,1884.4073,45.3857, false},
		{-1277.6946,1835.0138,47.8955, false},
		{-1255.6719,1686.1691,35.0179, false},
		{-1115.2577,1586.8229,35.0175, false},
		{-832.9486,1488.2214,22.4248, false},
		{-716.5996,1343.6909,20.2838, false},
		{-543.3049,1228.0764,20.2832, false},
		{-443.8060,1213.6299,17.1999, false},
		{-385.3225,1078.7760,11.5347, false},
		{-381.1606,987.6623,11.5335, false},
		{-348.7059,964.4541,11.5347, false},
		{-177.1574,940.5574,11.5372, false},
		{86.4576,841.9703,11.5345, false},
		{203.3397,802.2369,11.5338, false},
		{251.4614,863.7733,11.5351, false},
		{293.7149,1139.5114,11.5326, false},
		{379.9212,1146.9272,11.5334, false},
		{490.6891,1136.0294,11.6247, false},
		{579.8975,1121.5365,11.6111, false},
		{681.5302,1036.2469,11.6320, false},
		{772.9662,929.1800,11.6632, false},
		{789.5692,883.0237,11.6275, false},
		{777.8110,808.4282,11.5681, false},
		{803.6309,781.3038,11.5477, false}, // Конец. На начало
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false}
	},
	{ // ЖД Вокзал ЛС — Военный завод
		{785.8178,733.8877,11.5791, false},
		{791.5625,803.0234,11.6428, false},
		{780.6000,820.5082,11.5576, true}, // Остановка
		{782.2230,850.4604,11.6209, false},
		{797.8289,905.1847,11.6307, false},
		{735.5002,980.0391,11.6114, false},
		{668.3276,1057.2330,11.6193, false},
		{628.2550,1090.2228,11.6125, false},
		{558.3439,1134.0463,11.6268, false},
		{460.2363,1145.8254,11.5322, false},
		{312.0343,1162.4246,11.5330, false},
		{298.6253,1186.1451,11.8133, false},
		{311.8743,1304.6932,25.1465, false},
		{319.2766,1420.3534,24.8471, false},
		{328.4369,1513.4751,11.5330, false},
		{339.8739,1631.2836,11.5335, false},
		{361.1027,1670.5613,11.5337, false},
		{499.2119,1655.4762,11.5790, true}, // Остановка. Ж/Д
		{483.3976,1672.8696,11.5811, false},
		{358.6141,1685.3270,11.5333, false},
		{352.4224,1712.0112,11.5332, false},
		{407.0217,1857.8940,10.7249, false},
		{453.1217,2003.7932,5.4445, false},
		{524.8339,2178.4915,11.5330, false},
		{611.4445,2339.9956,11.5314, false},
		{721.7032,2492.1174,11.5331, false},
		{928.3762,2613.5100,11.5328, false},
		{1057.4771,2689.3472,11.5322, false},
		{1087.8593,2705.2639,11.5312, true}, // Остановка. Механики
		{1142.6873,2739.4819,11.5327, false},
		{1256.6520,2791.2935,11.5326, false},
		{1356.3508,2886.7231,11.5327, false},
		{1486.0658,2952.2690,11.5334, false},
		{1692.0784,2952.7112,11.5336, false},
		{1914.5933,2952.6221,11.5322, false},
		{2058.9854,2952.4248,11.8603, false},
		{2069.7026,2919.9446,12.2003, false},
		{1973.4771,2761.8638,14.6938, false},
		{1811.7389,2578.0510,14.7418, false},
		{1772.3623,2473.5608,15.4931, false},
		{1806.0780,2480.2139,15.2224, false},
		{1812.7412,2514.3738,15.1960, true}, // Остановка. МЧС
		{1783.1885,2519.0115,15.1971, false},
		{1759.0511,2495.6106,15.4911, false},
		{1841.2544,2375.0576,15.4712, false},
		{1886.6233,2291.0061,15.4862, false},
		{1885.6765,2241.8660,15.4848, true}, // Остановка. Автошкола
		{1887.0750,2164.2449,15.3981, false},
		{1886.0106,2065.0347,15.4061, false},
		{1918.8690,2052.6516,15.4023, false},
		{1962.1838,2013.8074,15.4443, false},
		{1961.6436,1916.9833,15.0466, false},
		{2003.5902,1903.0016,15.0450, false},
		{2125.3281,1904.3101,15.4286, false},
		{2258.8311,1903.8417,15.4487, false},
		{2357.8098,1907.3590,15.4196, false},
		{2372.2461,1815.7744,3.9887, false},
		{2374.5317,1772.6249,-1.5149, true}, // Остановка. Шахта
		{2378.6646,1806.1595,2.6092, false},
		{2377.6704,1896.5450,14.9163, false},
		{2510.3728,1894.5598,15.7670, false},
		{2658.1067,1894.8307,15.7658, false},
		{2732.9934,1895.0286,15.7915, false},
		{2758.0222,1960.3650,16.5103, false},
		{2765.5271,2139.8530,17.4811, false},
		{2744.9497,2430.8582,15.0301, false},
		{2700.9429,2674.8462,16.2729, false},
		{2651.3350,2814.2864,19.6743, false},
		{2444.3723,2951.4492,22.7301, false},
		{2128.1565,2967.6182,10.9400, false},
		{1806.9750,2968.4924,11.5330, false},
		{1506.0865,2967.6211,11.5317, false},
		{1333.6772,2880.7810,11.5333, false},
		{1216.1221,2792.5459,11.5331, false},
		{895.8690,2610.9192,11.5325, false},
		{649.9877,2442.0422,11.5330, false},
		{475.1823,2114.6855,10.9737, false},
		{390.2416,1851.0229,11.1688, false},
		{320.9989,1534.4823,11.5325, false},
		{296.8673,1243.0820,24.1259, false},
		{328.7727,1152.7751,11.5334, false},
		{543.6455,1130.1685,11.6124, false},
		{643.2175,1071.0590,11.6220, false},
		{737.5670,968.7892,11.6173, false},
		{793.5345,902.0283,11.6005, false},
		{770.5798,836.4699,11.5224, false},
		{791.3061,803.1495,11.6429, false},
		{801.8435,770.3690,11.5319, true}, // Остановка. На начало
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false}
	},
	{ // ЖД Вокзал ЛС — Товарный порт
		{780.4178,727.2006,11.6021, false},
		{798.3979,800.8493,11.6381, false},
		{780.1346,821.4786,11.5538, true}, // Остановка.
		{797.7029,888.6456,11.6051, false},
		{673.8666,1050.9592,11.6403, false},
		{573.7012,1132.0703,11.6548, false},
		{309.1552,1161.7903,11.5405, false},
		{306.6163,1246.9374,24.7787, false},
		{317.6702,1398.3157,25.1483, false},
		{336.0221,1584.2373,11.5332, false},
		{391.7831,1667.9263,11.5810, false},
		{501.4952,1654.9908,11.5792, true}, // Остановка. Ж/Д
		{467.4220,1669.4408,11.5811, false},
		{357.7765,1680.7673,11.5335, false},
		{266.1915,1690.1921,11.5330, false},
		{170.3249,1547.4205,11.5339, false},
		{93.1306,1169.7964,11.5354, false},
		{49.4706,984.1645,11.5333, false},
		{28.5538,931.5492,11.5411, true}, // Остановка.
		{19.1627,890.9694,11.5343, false},
		{96.5565,836.9958,11.5344, false},
		{192.6803,801.1299,11.5343, false},
		{178.9009,713.8533,11.5345, false},
		{122.1390,555.6907,11.5334, false},
		{154.6347,516.4274,11.5359, false},
		{233.3019,485.1019,11.5314, true}, // Остановка.
		{374.0205,431.1635,13.1213, false},
		{530.7493,376.7204,24.7750, false},
		{616.2057,143.1509,24.8471, false},
		{632.8180,-108.0908,13.5322, false},
		{684.5417,-176.1120,3.8981, false},
		{939.5273,-173.5067,3.8265, false},
		{1131.1257,-172.2897,3.8225, false},
		{1297.7870,-220.1640,3.8427, false},
		{1642.6250,-225.6595,3.7952, true}, // Остановка. МЧС
		{1785.7213,-224.0345,3.8294, false},
		{1793.1658,-281.3170,3.8178, false},
		{1857.9297,-312.3727,12.8249, false},
		{2039.8502,-329.4668,16.5561, false},
		{2111.2561,-488.9375,16.5540, false},
		{2121.5532,-652.9269,16.5321, false},
		{2139.5938,-802.5333,14.3969, false},
		{2182.0945,-811.3425,14.4699, false},
		{2386.7263,-798.0540,12.3403, false},
		{2400.5815,-755.9683,11.8368, false},
		{2427.1692,-617.4779,11.9096, true}, // Остановка. Лесорубы
		{2395.2302,-647.2762,11.8409, false},
		{2394.9399,-773.0400,11.8373, false},
		{2324.7573,-790.0723,12.6925, false},
		{2171.1777,-804.1882,14.3471, false},
		{2138.3821,-757.6460,14.4885, false},
		{2132.2083,-561.0246,16.5556, false},
		{2092.4204,-376.5380,16.5570, false},
		{1896.9425,-297.6446,16.5329, false},
		{1799.3170,-281.2733,3.8201, false},
		{1769.4387,-218.6841,3.8279, false},
		{1529.4707,-218.4079,3.8221, false},
		{1208.8314,-189.7240,3.8389, false},
		{884.9227,-168.7566,3.8019, false},
		{694.2114,-160.4446,3.8801, false},
		{647.6750,-98.5738,14.9823, false},
		{638.9136,85.5042,26.2247, false},
		{585.8060,358.9880,24.7759, false},
		{467.1305,413.2276,24.7821, false},
		{199.2020,514.2813,11.5329, false},
		{138.2974,538.3425,11.5330, false},
		{139.1546,572.7580,11.5344, false},
		{149.9627,595.9069,11.5312, true}, // Остановка
		{171.7104,657.4917,11.5327, false},
		{236.5534,826.3988,11.5343, false},
		{277.9897,997.0731,11.7726, false},
		{293.8099,1139.3777,11.5327, false},
		{391.7524,1145.9104,11.5334, false},
		{565.0103,1128.1143,11.6137, false},
		{662.4227,1054.6722,11.6063, false},
		{771.2302,930.1013,11.6353, false},
		{789.8817,885.7687,11.6138, false},
		{788.1815,804.4682,11.6427, false},
		{791.0405,758.6101,11.5322, true}, // Остановка. В конец
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false},
		{0.0, 0.0, 0.0, false}
	},
	{ // ЖД Вокзал ЛС — Автошкола
		{787.9899,737.3123,11.5710, false},
		{793.3630,802.1804,11.6428, false},
		{780.4693,821.8019,11.5442, true}, // Остановка
		{798.4664,891.6359,11.6129, false},
		{777.0601,930.0786,11.6229, false},
		{676.1186,1049.5214,11.6240, false},
		{579.9954,1128.9869,11.6161, false},
		{312.6412,1161.5272,11.5302, false},
		{305.7333,1242.8467,24.1905, false},
		{328.4750,1513.5687,11.5329, false},
		{342.3961,1660.9371,11.5325, false},
		{513.0868,1695.3979,11.5476, true}, // Остановка. Ж/Д Арзамас
		{481.3032,1673.3887,11.5806, false},
		{357.2000,1685.8246,11.5335, false},
		{398.0929,1833.5394,11.4720, false},
		{493.0337,2119.4668,11.2766, false},
		{665.3842,2440.8296,11.5328, false},
		{1040.7347,2679.5566,11.5327, false},
		{1084.5813,2703.6069,11.5290, true}, // Остановка. Механики
		{1178.5232,2759.8821,11.5312, false},
		{1367.8978,2902.7573,11.5328, false},
		{1617.1583,2952.2393,11.5329, false},
		{2010.3989,2952.2800,12.0703, false},
		{2070.5879,2924.1306,12.0026, false},
		{1760.0981,2546.4333,14.7490, false},
		{1767.3916,2483.2244,15.4942, false},
		{1806.6837,2479.9934,15.2230, false},
		{1814.6934,2512.1545,15.1823, true}, // Остановка. Автовокзал Батырево
		{1766.5570,2509.9673,15.2375, false},
		{1803.5001,2430.9045,15.4893, false},
		{1885.8512,2243.0408,15.4826, true}, // Остановка. Автошкола
		{1886.0441,2065.9612,15.4069, false},
		{1957.3859,2043.8644,15.4010, false},
		{1962.4486,1914.6210,15.0558, false},
		{2039.8900,1904.8533,15.4537, false},
		{2285.5439,1904.1499,15.4653, false},
		{2374.9858,1770.2043,-1.6893, true}, // Остановка. Шахта
		{2378.3889,1806.2183,2.6175, false},
		{2371.7773,1891.0868,15.3369, false},
		{2502.8794,1893.8397,15.7669, false},
		{2732.8333,1895.5476,15.7916, false},
		{2731.6873,1778.2247,15.3588, false},
		{2554.7383,1502.4097,11.8261, false},
		{2680.1140,1131.4674,19.4727, false},
		{2850.3950,739.0171,31.4996, false},
		{2898.8374,230.6370,12.1628, false},
		{2897.7466,-158.5092,24.1596, false},
		{2822.4792,-355.3473,26.3462, false},
		{2765.8787,-442.3799,23.0099, true}, // Остановка. У Гарели
		{2740.4727,-561.4509,23.2926, false},
		{2605.1946,-727.5572,12.4791, false},
		{2471.5764,-784.3000,11.8714, true}, // Остановка. Анашан
		{2267.1509,-792.5616,13.1236, false},
		{2052.6919,-832.4374,15.3386, false},
		{1836.0454,-952.8130,13.6815, false},
		{1745.2719,-978.0508,11.8243, false},
		{1706.8506,-814.2382,34.0767, false},
		{1557.1355,-687.5613,40.8769, false},
		{1270.7510,-635.9218,40.8940, false},
		{946.0969,-740.0735,40.4627, false},
		{832.7188,-774.3143,40.0398, true}, // Остановка. Корякино
		{568.1791,-858.9227,32.6240, false},
		{155.3385,-988.5547,40.4751, false},
		{-200.0290,-1185.5417,40.4756, false},
		{-439.1202,-1582.6089,40.4808, false},
		{-476.0527,-1640.8954,40.4473, true}, // Остановка. Бусаево
		{-601.8219,-1867.0111,40.4838, false},
		{-733.5305,-2230.3132,40.9539, false},
		{-734.6354,-2363.3152,38.6685, false},
		{-969.1361,-2421.0542,30.9774, false},
		{-1169.9259,-2478.7441,28.0161, false},
		{-1290.1781,-2505.9141,28.0137, false},
		{-1559.1868,-2374.3394,28.2283, false},
		{-1947.1075,-2117.1072,16.4737, false},
		{-2244.3979,-1747.0317,10.1017, false},
		{-2469.0754,-1417.8335,9.4151, false},
		{-2603.2778,-1275.6914,8.7736, false},
		{-2590.4954,-1160.1410,16.6581, false},
		{-2589.7524,-823.7059,29.2303, false},
		{-2637.9370,-410.8065,24.6845, false},
		{-2654.8884,-54.1762,10.4663, false},
		{-2658.8003,197.2989,10.4648, false},
		{-2564.9153,231.0769,12.3016, false},
		{-2397.9492,232.0039,16.8059, false},
		{-2259.1260,215.5012,24.0472, false},
		{-2212.2849,193.4742,24.0604, true}, // Остановка. Лыткарино
		{-2263.0046,224.2567,23.9677, false},
		{-2560.5115,237.5524,12.4220, false},
		{-2647.8083,269.1061,12.8730, false},
		{-2630.2310,639.0733,12.8736, false},
		{-2641.8301,880.2888,12.8752, false},
		{-2654.6033,1092.2378,12.8751, false},
		{-2497.8696,1262.8240,14.4634, false},
		{-2341.2803,1700.3708,52.5478, false},
		{-2387.7502,1777.2646,52.5545, true}, // Остановка. Кремль
		{-2565.1953,1895.2128,52.5480, false},
		{-2626.2312,2000.1528,52.5475, false},
		{-2609.6714,2299.9053,52.5271, false},
		{-2440.1873,2476.7908,42.8585, false},
		{-2373.6965,2561.7986,42.0734, false},
		{-2373.8145,2746.8027,36.9760, false},
		{-2458.7029,2815.8057,36.9642, false},
		{-2488.0146,2825.8862,37.1673, false},
		{-2477.0903,2836.7332,37.1635, true}, // Остановка. Эдово
		{-2511.1621,2822.4543,36.9658, false},
		{-2386.0806,2811.4109,36.9635, false},
		{-2379.3640,2596.0176,42.0872, false},
		{-2345.0049,2512.1946,42.2063, false},
		{-2110.6428,2492.1580,39.2072, false},
		{-1828.6377,2491.4763,48.3243, false},
		{-1653.6299,2496.0674,42.434, false},
		{-1477.2354,2388.6394,43.9515, false},
		{-1393.5088,2207.4861,45.1462, false},
		{-1308.1812,1877.5199,42.4691, false},
		{-1210.6033,1619.9750,35.0147, true}, // Остановка
		{-951.2002,1530.2247,28.9315, false},
		{-714.3251,1339.3547,20.2827, false},
		{-543.6758,1228.1691,20.2812, false},
		{-386.0414,1155.8013,11.5202, false},
		{-381.0251,988.7273,11.5319, false},
		{-283.9621,968.2222,11.5340, false},
		{3.8998,878.4814,11.5407, false},
		{374.4273,736.4326,11.5336, false},
		{518.6818,681.0500,11.5329, false},
		{709.2870,653.0804,11.5337, false},
		{787.5905,804.1089,11.6397, false},
		{796.8284,755.3444,11.5307, true}, // Остановка. На начало
		{0.0, 0.0, 0.0, false}
	}
};

new g_temp_jobs[5][E_TEMP_JOB_STRUCT] =
{
	{514.9210, 1641.4650, 12.5089, 		45,	{27, 157}},  	// грузчик
	{2296.8718, 1757.0005, 1.0234, 		3,	{16, 157}},  	// шахтер
	{-1088.2688, 2167.4514, 38.0373, 	0,	{16, 157}}, 	// завод (служба доставки)
	{264.9694, -215.0847, 1006.5694, 	0,	{258, 157}},  	// завод
	{2396.0789, -592.4421, 12.1172, 	110,{161, 157}}		// лесоруб
};

new const
	Float: loader_job_unload_cp[2][3] =
{
	{554.7645, 1621.5302, 12.2395},
	{555.4839, 1624.9852, 12.2395}
};

new const
	loader_job_attach_obj[4][E_LOADER_JOB_ATTACH_OBJ_STRUCT] =
{
	{10244,	0.028,	0.168,	-0.228, 	-111.9,	-7.2,	168.4},
	{1271,	0.044,	0.238,	-0.246, 	-110.6, 4.4,	-15.1},
	{2912,	-0.192,	0.225,	-0.295, 	-15.5, 	78.3, 	-6.3},
	{2912,	-0.035,	0.156,	-0.246, 	-112.4,	-1.1,	-12.4}
};

new
    Text:Announce,//2018 реклама
    Float:TD_Position,
    sAnnounce[40],
    bool:aProgress = false
;

new const
	Float: miner_job_load_pos[12][3] =
{
	{-2356.0146, 305.7356, -16.6097},
	{-2340.7490, 299.3799, -17.3427},
	{-2350.4976, 287.7560, -17.5309},
	{-2342.8169, 283.4503, -16.9091},
	{-2327.5500, 291.7040, -17.2260},
	{-2318.9883, 290.0369, -17.3081},
	{-2314.9695, 282.2800, -16.9994},
	{-2320.3093, 276.6367, -17.2911},
	{-2325.9856, 271.0159, -17.7371},
	{-2351.9478, 304.3510, -17.1377},
	{-2344.1338, 301.0893, -16.6733},
	{-2343.0308, 287.8077, -16.8458}
};
new miner_job_load_cp[sizeof miner_job_load_pos] = {-1, ...};
new miner_carriage[1][E_MINER_CARRIAGE_STRUCT] =
{
	{-2375.1228, 294.7194, -15.4815, -2548.1228, 294.7194, -15.4815, false, 0, -1}
};

new Text3D: factory_store_label[2];

new factory_put_zone;
new
	Float: factory_take_metall_pos[5][3] =
{
	{305.7406, -199.4771, 1006.5694},
	{300.1811, -199.4061, 1006.5694},
	{316.2808, -215.5371, 1006.5694},
	{306.0207, -219.4838, 1006.5694},
	{264.5123, -208.1692, 1006.5694}
};
new factory_desk[16][E_FACTORY_DESK_STRUCT];

new const
	Float: lumberjack_job_chop_cp[15][2] =
{
	{2366.6084,-618.1288},
	{2360.7283,-631.9557},
	{2363.7026,-642.4373},
	{2354.3843,-641.6199},
	{2352.4744,-656.3690},
	{2335.9316,-620.6314},
	{2333.3960,-602.3210},
	{2338.4529,-595.2281},
	{2326.4036,-582.8063},
	{2318.5110,-605.1385},
	{2302.0833,-632.3256},
	{2308.2197,-642.1101},
	{2328.2930,-650.4495},
	{2337.5959,-629.5368},
	{2284.6470,-615.3544}
};

enum // типы пикапов
{
    PICKUP_ACTION_TYPE_TELEPORT = 1, 	// Телепорт (входы/выходы)
    PICKUP_ACTION_TYPE_TEMP_JOB, 		// временная работа
	PICKUP_ACTION_TYPE_MINER_SELL_M, 	// покупка металла на шахте
	PICKUP_ACTION_TYPE_FACTORY_MET,		// брать металл (завод)
	PICKUP_ACTION_TYPE_MINER_CARRI,		// пикап у вагонетки
	PICKUP_ACTION_TYPE_LUMBERJACK_P,	// положить дрова на склад лесопилки
};

enum // иды временных работ
{
	TEMP_JOB_NONE = -1,
	// ----------------
	TEMP_JOB_LOADER = 0, 		// грузчик
	TEMP_JOB_MINER, 			// шахтер
	TEMP_JOB_FACTORY_TRUCKER,	// завод (служба доставки)
	TEMP_JOB_FACTORY,			// завод
	TEMP_JOB_LUMBERJACK			// лесоруб
};

enum //
{
	TEMP_JOB_STATE_NONE,
	// --------
	TEMP_JOB_STATE_LOADER_LOAD, 	// брать груз
	TEMP_JOB_STATE_LOADER_UNLOAD, 	// класть груз
	TEMP_JOB_STATE_LOADER_DROP_LOAD,// уронил груз
	// --------
	TEMP_JOB_STATE_MINER_LOAD, 		// добывать руду
	TEMP_JOB_STATE_MINER_UNLOAD, 	// нести на склад
	TEMP_JOB_STATE_MINER_DROP_LOAD, // уронил руду
	// --------
	TEMP_JOB_STATE_FACTORY_TAKE_MET, // брать металл
	TEMP_JOB_STATE_FACTORY_CREATE_P, // делать продукт
	TEMP_JOB_STATE_FACTORY_CREATED,  // делает продукт
	TEMP_JOB_STATE_FACTORY_PUT_PROD, // нести продукт на склад
	TEMP_JOB_STATE_FACTORY_DROP_P,	 // уронил продукт
	// --------
	TEMP_JOB_STATE_LUMBERJACK_CHOP,	 // рубить дрова
	TEMP_JOB_STATE_LUMBERJACK_PUT,	 // нести на склад
	TEMP_JOB_STATE_LUMBERJACK_DROP,	 // уронил дрова
};

// attached object (TODO)
enum
{
	A_OBJECT_SLOT_SPINE = 0, 		// Торс
	A_OBJECT_SLOT_HEAD, 			// Голова
	A_OBJECT_SLOT_ARM, 				// Плечи
	A_OBJECT_SLOT_HAND, 			// Руки
	A_OBJECT_SLOT_THIGH, 			// Бедра
	A_OBJECT_SLOT_FOOT, 			// Ноги
	A_OBJECT_SLOT_CALF, 			// Голень
	A_OBJECT_SLOT_FOREARM, 			// Предплечье
	A_OBJECT_SLOT_CLAVICLE,			// Ключица
	A_OBJECT_SLOT_NECK, 			// Шея
	//A_OBJECT_SLOT_JAW				// Челюсть
};

enum
{
	A_OBJECT_BONE_SPINE = 1, 		// Торс
	A_OBJECT_BONE_HEAD, 			// Голова
	A_OBJECT_BONE_LEFT_ARM, 		// Левое плечо
	A_OBJECT_BONE_RIGHT_ARM, 		// Правое плечо
	A_OBJECT_BONE_LEFT_HAND, 		// Левая рука
	A_OBJECT_BONE_RIGHT_HAND, 		// Правая рука
	A_OBJECT_BONE_LEFT_THIGH, 		// Левое бедро
 	A_OBJECT_BONE_RIGHT_THIGH,		// Правое бедро
	A_OBJECT_BONE_LEFT_FOOT, 		// Левая нога
	A_OBJECT_BONE_RIGHT_FOOT, 		// Правая нога
	A_OBJECT_BONE_RIGHT_CALF, 		// Правая голень
	A_OBJECT_BONE_LEFT_CALF, 		// Левая голень
	A_OBJECT_BONE_LEFT_FOREARM, 	// Левое предплечье
	A_OBJECT_BONE_RIGHT_FOREARM,	// Правое предплечье
	A_OBJECT_BONE_LEFT_CLAVICLE,	// Левая ключица (плечо)
	A_OBJECT_BONE_RIGHT_CLAVICLE,	// Правая ключица (плечо)
	A_OBJECT_BONE_NECK, 			// Шея
	A_OBJECT_BONE_JAW				// Челюсть
};
//------------------------------------------------------------------------------
new max_veh_speed [ 212 ] = { 220,160,280,120,150,165,110,170,110,180,160,240,160,160,140,230,155,200,150,160,180,180,
	165,145,170,200,200,170,170,200,190,130,80,180,200,120,160,160,160,160,160,75,150,150,110,
	165,280,200,190,150,120,240,190,190,190,140,160,160,165,160,200,190,190,190,75,75,160,160,
	190,200,170,160,190,190,160,160,200,200,150,165,200,120,150,120,190,160,100,200,200,170,170,
	160,160,190,220,170,200,200,140,140,160,75,220,220,160,170,230,165,140,120,140,200,200,200,120,
	120,165,165,160,330,330,190,190,190,110,160,160,160,170,160,60,70,140,200,160,160,160,110,110,150,
	160,230,160,165,170,160,160,160,200,160,160,165,160,200,170,180,110,110,200,200,200,200,200,200,75,
	200,160,160,170,110,110,90,60,110,60,160,160,200,110,160,165,190,160,170,120,165,190,200,140,200,110,
	120,200,200,60,190,200,200,200,160,165,110,200,200,160,165,160,160,160,140,160,160 } ;


new player_holding_key_down [ MAX_PLAYERS ] ;

new engine_ptune [ 5 ] [ 44 ] = {
"Чип-тюнинг",
"Удаление катализаторов",
"Воздушный фильтр нулевого сопротивления", 
"Дроссельная заслонка увеличенного диаметра",
"Кованые поршни двигателя" } ;
new engine_ptune_price [ 5 ] = { 1500000, 1000000, 700000, 1200000, 1400000 } ;
new Float:engine_ptune_boost [ 5 ] = { 0.12, 0.05, 0.03, 0.05, 0.10 } ;

new brake_ptune [ 5 ] [ 44 ] = {
"Керамические колодки",
"Спортивные тормозные диски",
"Расширенные суппорта",
"Тормозной цилиндр",
"Вакуумный усилитель тормозов" } ;
new brake_ptune_price [ 5 ] = { 900000, 1000000, 700000, 1200000, 1400000 } ;
new Float:brake_ptune_boost [ 5 ] = { 1.5, 1.5, 1.0, 2.0, 3.0 } ;

new stability_ptune [ 5 ] [ 44 ] = {
"Распорки на стойки",
"Амортизаторы",
"Усиленные пружины",
"Стабилизаторы поперечной устойчивости",
"Шарниры подвески" } ;
new stability_ptune_price [ 5 ] = { 250000, 700000, 500000, 800000, 650000 } ;
new Float: stability_ptune_boost [ 5 ] = { 23.0, 23.0, 23.0, 23.0, 23.0 } ;

new Text:td_performance [ 27 ] ;
new PlayerText:ptd_performance [ MAX_PLAYERS ] [ 6 ] ;
//------------------------------------------------------------------------------
new PlayerText:dice_ptd [ MAX_PLAYERS ] [ 23 ] ;

new Float: dice_positions [ 4 ] [ 3 ] = {
{ 1608.6849, 987.2932, 1820.0557 },
{ 1608.7090, 992.1456, 1820.0557 },
{ 1608.6516, 982.0839, 1820.0557 },
{ 1614.1782, 987.2856, 1820.0557 } } ;

#define MAX_BONE 4
enum _dice_enum
{
	b_player [ 5 ],
	b_bet,
	b_bank,
	b_crupie,
	b_started
}
new dice_info [ MAX_BONE ] [ _dice_enum ] ;

new roulette_bet [ MAX_PLAYERS ],
	roulette_number [ MAX_PLAYERS ] ;
	
new Float: cm_td_pos [ 35 ] [ 2 ] = {
	{ 167.000000, 303.000000 },
	{ 200.000000, 303.000000 },
	{ 233.000000, 303.000000 },
	{ 266.000000, 303.000000 },
	{ 299.000000, 303.000000 },

	{ 167.000000, 270.000000 },
	{ 200.000000, 270.000000 },
	{ 233.000000, 270.000000 },
	{ 266.000000, 270.000000 },
	{ 299.000000, 270.000000 },

	{ 167.000000, 237.000000 },
	{ 200.000000, 237.000000 },
	{ 233.000000, 237.000000 },
	{ 266.000000, 237.000000 },
	{ 299.000000, 237.000000 },

	{ 167.000000, 204.000000 },
	{ 200.000000, 204.000000 },
	{ 233.000000, 204.000000 },
	{ 266.000000, 204.000000 },
	{ 299.000000, 204.000000 },

	{ 167.000000, 171.000000 },
	{ 200.000000, 171.000000 },
	{ 233.000000, 171.000000 },
	{ 266.000000, 171.000000 },
	{ 299.000000, 171.000000 },

	{ 167.000000, 138.000000 },
	{ 200.000000, 138.000000 },
	{ 233.000000, 138.000000 },
	{ 266.000000, 138.000000 },
	{ 299.000000, 138.000000 },

	{ 167.000000, 105.000000 },
	{ 200.000000, 105.000000 },
	{ 233.000000, 105.000000 },
	{ 266.000000, 105.000000 },
	{ 299.000000, 105.000000 }
} ;

new PlayerText:cm_ptd [ MAX_PLAYERS ] [ 64 ] ;
new PlayerText:ptd_sp [ MAX_PLAYERS ] [ 54 ] ;
new PlayerText:ptd_hp [ MAX_PLAYERS ] [ 10 ] ;
new PlayerText:BoxPlayer [ MAX_PLAYERS ] [ 4 ] ;
new PlayerText:BinderPlayer [ MAX_PLAYERS ] [ 5 ] ;
new PlayerText:LicPlayer [ MAX_PLAYERS ] [ 39 ] ;
new PlayerText:taxi_td_player [ MAX_PLAYERS ] [ 13 ] ;
new PlayerText:acc_td_player [ MAX_PLAYERS ] [ 43 ] ;
//new PlayerText:cash_td_player [ MAX_PLAYERS ] ;
new PlayerText:sp_ptd [ MAX_PLAYERS ] [ 3 ] ;
new Text:sp_td [ 7 ] ;
//new Text:cash_td [ 7 ] ;
new Text:ScoreCS [ 2 ] ;
new Text:Binder [ 40 ] ;
new robbery_role[MAX_PLAYERS];
new	robbery_team[1];
new	robbery_players[MAX_PLAYERS];
new robbery_bank[3];
new robbery_money[1];
new robbery_time[3];
new robbery_map[1];
new robbery_mask[1];
new robbery_gun[1];
new robbery_car[1];
new robbery = 0;
new PlayerText:action_ptd [ MAX_PLAYERS ] [ 5 ] ;
new action_types [ MAX_PLAYERS char ] ;
new action_step [ MAX_PLAYERS char ] ;
new action_key [ MAX_PLAYERS ] ;
new FindStep [ MAX_PLAYERS char ] ;
//new Iterator:RobberyTeam[MAX_PLAYERS]<MAX_PLAYERS>;
//------------------------------------------------------------------------------
enum CRInfo
{
	CG_DiceStake,
	CG_DiceTime,
	CG_CroupierID,
	CG_PlayerID[5],
bool:CG_PlayerStaked[MAX_PLAYERS],
	CG_PlayerDropDice[MAX_PLAYERS]
};
new CasinoGamesInfo[8][CRInfo];
new CG_RouletteStake[MAX_PLAYERS][8][39], DrumRotation[8], DrumTimer[8];

new RedValue[18] = {1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36};

new CasinoKrupe;
//------------------------------------------------------------------------------
new konf_time;
new Float:KonfiskatZone[4];
new KonfiskatZoneID;
new konf_pay;
new konf_kd;
//------------------------------------------------------------------------------
new PlayerText:TD_GPS[MAX_PLAYERS][6];

new Float:markX[MAX_PLAYERS],
    Float:markY[MAX_PLAYERS],
    Float:markZ[MAX_PLAYERS],
    Float:markDist[MAX_PLAYERS],
    markTimer[MAX_PLAYERS];
//------------------------------------------------------------------------------
new StartMafiaWar[19];
new MafiaBattleZoneID;
new MafiaBattle[2][4];
new Float:MafiaBattleZone[4];
new GangName[25];
//------------------------------------------------------------------------------
new WorkSalary[44], SalaryStatus[24], BankStatus[20];

#define TRACK_KRUG 5
new pickcartrack;
new pickcs;

new bool:cartrack_status = false;
new cartrack_people;
new bool:cartrack_open = false;

new bool:cs_status = false;
new cs_people;
new bool:cs_open = false;
new cs_time;
new cs_score[2];
new CS_CARD;

enum CT_I
{
	data_STATUS,
	data_NAME[MAX_PLAYER_NAME],
};
new CT_DATA[10][CT_I];

static Float:chek_cartrack[14][6] =
{
	{-1569.1248,1599.7576,36.0145,-1570.7429,1450.1305,36.0182},
	{-1570.7429,1450.1305,36.0182,-1612.5345,1440.2039,34.2142},
	{-1612.5345,1440.2039,34.2142,-1673.4037,1434.4502,33.1268},
	{-1673.4037,1434.4502,33.1268,-1724.4480,1388.5674,35.9572},
	{-1724.4480,1388.5674,35.9572,-1852.4076,1398.9989,34.8033},
	{-1852.4076,1398.9989,34.8033,-1905.1061,1483.1257,35.1386},
	{-1905.1061,1483.1257,35.1386,-1816.1781,1560.1948,35.1519},
	{-1816.1781,1560.1948,35.1519,-1711.0912,1512.3055,34.8966},
	{-1711.0912,1512.3055,34.8966,-1734.2975,1648.9705,37.6504},
	{-1734.2975,1648.9705,37.6504,-1862.2456,1635.9667,33.7223},
	{-1862.2456,1635.9667,33.7223,-1777.9114,1772.8191,35.5487},
	{-1777.9114,1772.8191,35.5487,-1635.2913,1761.6503,36.0019},
	{-1635.2913,1761.6503,36.0019,-1570.8210,1665.2909,36.0252},
	{-1570.8210,1665.2909,36.0252,-1569.1248,1599.7576,36.0145}
};

static Float:pos_cartrack[16][3] =
{
	{-1564.052856, 1621.168945, 36.018531},
	{-1573.679687, 1621.087768, 36.026035},
	{-1563.954345, 1629.053222, 36.018127},
	{-1573.752197, 1629.164794, 36.022785},
	{-1564.044311, 1637.687988, 36.022304},
	{-1573.589477, 1637.526245, 36.014675},
	{-1564.000244, 1645.541015, 36.024829},
	{-1573.901977, 1645.567626, 36.017837},
	{-1564.028320, 1653.052124, 36.019901},
	{-1573.639526, 1653.086914, 36.019519},
	{-1563.860473, 1661.065429, 36.020423},
	{-1573.902099, 1661.096435, 36.019905},
	{-1564.030883, 1668.682128, 36.020175},
	{-1573.581054, 1668.717285, 36.024868},
	{-1563.998413, 1676.663818, 36.020431},
	{-1573.844482, 1676.603393, 36.025173}
};

new Float:cspos_team1[][4] =
{
	{2431.346679, -1720.027832, 429.549072, 270.697937},
	{2431.213867, -1718.083862, 429.549072, 268.817962},
	{2431.056152, -1714.966674, 429.549072, 273.204742},
	{2437.340576, -1715.166381, 429.549072, 90.843009},
	{2437.251708, -1717.739746, 429.549072, 90.216339},
	{2437.455322, -1720.580810, 429.549072, 92.096366},
	{2444.667968, -1715.735229, 429.549072, 92.433059},
	{2444.218994, -1718.522583, 429.549072, 92.433059},
	{2422.675048, -1720.159179, 429.549072, 273.204711},
	{2422.915771, -1723.722778, 429.549072, 186.097259}
};

new Float:cspos_team2[][4] =
{
	{2453.116943, -1762.352661, 422.040008, 89.636436},
	{2451.144287, -1762.339721, 422.040008, 89.636436},
	{2448.921875, -1762.325439, 422.040008, 89.636436},
	{2452.369140, -1759.151977, 422.040008, 90.889770},
	{2449.589111, -1759.195068, 422.040008, 90.889770},
	{2418.185058, -1759.440307, 422.040008, 271.034790},
	{2420.422119, -1759.399780, 422.040008, 271.034790},
	{2417.789062, -1762.414306, 422.040008, 271.034790},
	{2419.220703, -1762.388183, 422.040008, 271.034790},
	{2421.022705, -1762.355468, 422.040008, 271.034790}
};

new Float:cspos_team3[][4] =
{
	{-214.7393, -901.9644, 958.8383, 179.4647},
	{-215.9924, -896.5614, 958.8383, 307.8933}
};

new Float:cspos_team4[][4] =
{
	{-219.7955, -987.7887, 954.8550, 38.6667},
	{-209.0873, -979.1741, 954.8357, 105.2273}
};

new Float:cspos_team5[][4] =
{
	{2113.5098, -2704.2793, 954.0547, 181.8773},
	{2114.1724, -2712.3713, 954.0625, 13.8507}
};

new Float:cspos_team6[][4] =
{
	{2092.6724, -2796.9924, 954.0938, 329.7018},
	{2124.0962, -2797.1614, 954.0938, 43.7275}
};
//------------------------------------------------------------------------------
#define MAX_VEHICLE_COMPONENT 22
new AwtomasMassiveID[MAX_PLAYERS][MAX_VEHICLE_COMPONENT];
enum AllComponents
{
	idcomp,
	Type[32],
	Name[32],
	Cost
};
new AllTuningComponentsInfo[MAX_VEHICLE_COMPONENT][AllComponents] =
{
	{1008,    "Нитро",        "N-5x"            ,2000},
	{1009,    "Нитро",        "N-2x"            ,1000},
	{1010,    "Нитро",        "N-10x"            ,3000},
	{1073,    "Колеса",        "Shadow"            ,5000},
	{1074,    "Колеса",        "Mega"                ,5000},
	{1075,    "Колеса",        "Rimshine"            ,5000},
	{1076,    "Колеса",        "Wires"                ,5000},
	{1077,    "Колеса",        "Classic"            ,5000},
	{1078,    "Колеса",        "Twist"                ,5000},
	{1079,    "Колеса",        "Cutter"            ,5000},
	{1080,    "Колеса",        "Switch"            ,5000},
	{1081,    "Колеса",        "Grove"                ,5000},
	{1082,    "Колеса",        "Import"            ,5000},
	{1083,    "Колеса",        "Dollar"            ,5000},
	{1084,    "Колеса",        "Trance"            ,5000},
	{1085,    "Колеса",        "Atomic"            ,5000},
	{1025,    "Колеса",        "Offroad"            ,5000},
	{1096,    "Колеса",        "Ahab"                ,5000},
	{1097,    "Колеса",        "Virtual"            ,5000},
	{1098,    "Колеса",        "Access"            ,5000},
	{1086,    "Стерео",        "Sony"                ,500},
	{1087,    "Гидравлика",    "LowRider"            ,4000}
};
//------------------------------------------------------------------------------
#define MAX_CONNECTIONS_FROM_IP 3 // - Максимальное количество игроков с 1 IP
#define MAX_CONTACTS 50 // Максимальное количество контактов

#define PointToPoint(%0,%1,%2,%3,%4,%5) floatsqroot(floatpower(floatabs(floatsub(%3,%0)),2)+floatpower(floatabs(floatsub(%4,%1)),2)+floatpower(floatabs(floatsub(%5,%2)),2))

#define GivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) + %2))
#define UngivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) - %2))
new bool:SimulatorUse[12];

new FuelVeh[MAX_PLAYERS];
new Text:TD_Fuel[8];
new PlayerText:PTD_Fuel[MAX_PLAYERS][2];

//new mopedpick[2];

new Text3D:CreateVehicleLabel[MAX_PLAYERS];

new Float:PlayerHP[MAX_PLAYERS];
new Float:PlayerAP[MAX_PLAYERS];
new AC_Armourtime[MAX_PLAYERS] = {0, ...};
new AC_Healthtime[MAX_PLAYERS] = {0, ...};
new GunPlayer[MAX_PLAYERS][13][2];
new AC_GunCheattime[MAX_PLAYERS] = {0,...};

static const SpeedLimit[212] =
{
	100,100,110,75,90,105,65,85,60,105,90,130,105,90,65,115,100,200,85,100,95,100,95,65,80,200,110,105,105,120,100,100,100,90,105,200,100,100,100,105,100,100,100,100,90,105,100,200,100,200,200,115,100,100,100,100,100,100,100,100,200,125,90,125,200,200,95,95,125,200,100,100,100,100,
	100,105,200,115,90,100,110,60,100,95,100,100,100,200,200,95,100,100,95,100,125,110,105,200,85,100,95,200,125,125,100,95,110,105,100,70,70,200,200,200,100,100,105,105,105,200,200,130,130,125,100,100,100,100,110,100,60,80,80,105,105,95,110,150,150,110,100,120,105,100,100,100,
	100,100,200,100,100,105,100,200,100,95,100,100,105,110,105,100,110,200,200,105,105,110,95,200,200,75,80,100,70,105,100,200,100,100,100,125,95,70,200,100,125,105,100,105,200,200,200,200,200,100,110,110,110,100,100,90,110,110,110,110,200,200,200,100,200,200
};

#define SCM SendClientMessage
#define SCMF(%0,%1,%2,%3) format(format_string, 144, %2,%3) && SCM(%0, %1, format_string)
new format_string[144];

new AVehicle[80+1] = {-1,...};
new TotalAdminVehicles = 0;

new Iterator:inStreamPlayers[MAX_PLAYERS]<MAX_PLAYERS>;
new Iterator:vehiclePassengers[MAX_VEHICLES]<MAX_PLAYERS>;

new gOnlinePlayer[MAX_PLAYERS][2];
new gOnlinePlayerAFK[MAX_PLAYERS][2];

#define INVALID_GARAGE_ID -1
#define MAX_GARAGES 500
enum g_info
{
	///////////////
	g_ID,
	///////////////
	Float:G_ENTER_X,
	Float:G_ENTER_Y,
	Float:G_ENTER_Z,
	///////////////
	Float:g_ENTER_X_CAR,
	Float:g_ENTER_Y_CAR,
	Float:g_ENTER_Z_CAR,
	Float:g_ENTER_A_CAR,
	///////////////
	Float:g_EXIT_X,
	Float:g_EXIT_Y,
	Float:g_EXIT_Z,
	///////////////
	g_LOCK,
	g_TYPE,
	g_OWNER[24],
	g_OWNED,
	g_PRICE,
	g_INT,
	g_WORLD,
	g_DAY,
	///////////////
	g_ICON,
	Text3D:g_TEXT,
	g_PIC,
	///////////////
	g_METALL,
	g_DRUGS,
	g_PATRON,
	g_MONEY,
}
new
	GARAGE_DATA[MAX_GARAGES][g_info],
	garage_car[MAX_PLAYERS] = INVALID_VEHICLE_ID,
	TotalGarages;

new Text3D:playerText_ame_Action[MAX_PLAYERS][2];

new Text:fstd[2],
    PlayerText:fstd_p[MAX_PLAYERS][60],
    gLoadTime[MAX_PLAYERS char];

new sellpatrcp[1];
new Text3D:PatronText[MAX_PLAYERS]={Text3D:-1, ...};

new PlayerText:passport_name[MAX_PLAYERS];
new PlayerText:passport_sex[MAX_PLAYERS];
new PlayerText:passport_s_n[MAX_PLAYERS];
new PlayerText:passport_info[MAX_PLAYERS];
new Text:passport_text[14];

//new weather[3];
//new weatherLS[] = {1,2,3,7,9};
//new weatherSF[] = {1,2,3,7,9};
//new weatherLV[] = {1,2,3,7,9};

/*#define INVALID_OBJECT 0x7F800000
#define D_INPUT_TABLE 5877
#define D_INPUT_TABLE_DELL 5878
#define D_INPUT_TABLE_DELL_LINE 5879
#define D_INPUT_TABLE_DELL_NO_LINE 5880

new Text:TD_BRAKE[12];
new Text:Succes_BTD[4];

enum br_data
{
    br_objects[25],
	br_object_text[2],
	br_temp_pickup,
	br_text[30],
	br_flag,
	Float:br_line_pos[4]
}
new br_player [MAX_PLAYERS] [ br_data ];

new object_select_td_brake [5] = {  1228 , 2773 , 1423 , 1237 ,19980  } ;

new Text3D:blocktext[MAX_PLAYERS] ={Text3D:-1,...};

stock DestroyDynamicObjectEx(objectid)
{
	new _name[MAX_PLAYER_NAME];
	for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
		for(new i = 0;i < 25;i++)
		{
		    if(i<2 && objectid == br_player[playerid][br_object_text][i])
			{
			    GetPlayerName(playerid, _name, MAX_PLAYER_NAME);
				break;
			}
		    if(objectid == br_player[playerid][br_objects][i])
		    {
		        GetPlayerName(playerid, _name, MAX_PLAYER_NAME);
		        break;
		    }
		}
	}
	return DestroyDynamicObject(objectid);
}
#define DestroyDynamicObject DestroyDynamicObjectEx*/

new Float:ac_playerPosX[MAX_PLAYERS];
new Float:ac_playerPosY[MAX_PLAYERS];
new Float:ac_playerPosZ[MAX_PLAYERS];
static playerSpawnTimer[MAX_PLAYERS];
static playerSpawn[MAX_PLAYERS char];

static playerLagSpeed[MAX_PLAYERS];
static playerLastSpeed[MAX_PLAYERS];
static playerWarningSpeed[MAX_PLAYERS char];

//static playerLastSpeedFoot[MAX_PLAYERS];
static playerWarningSpeedFoot[MAX_PLAYERS char];

new playerLagFly[MAX_PLAYERS];
static playerWarningFly0[MAX_PLAYERS char];
new playerCheckFly [ MAX_PLAYERS ] ;
static playerWarningFly2[MAX_PLAYERS char];

#if !defined AC_MAX_PING
	#define AC_MAX_PING 				(800)
#endif

static stock SleepTime(playerid)
{
	new count = (3 + floatround((GetPlayerPing(playerid) > AC_MAX_PING) ? (AC_MAX_PING / 100) : (GetPlayerPing(playerid) / 100)));
	return (count < 3) ? (3) : (count > 10) ? (10) : (count);
}

static VehicleAir[212] =
{
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

static VehicleWater[212] =
{
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
	0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

stock IsAirTransportAC(id_vehicle)
{
	new model = GetVehicleModel(id_vehicle);
	if(!model) return 0;
	return VehicleAir[model - 400];
}

stock IsWaterTransportAC(id_vehicle)
{
    new model = GetVehicleModel(id_vehicle);
	if(!model) return 0;
	return VehicleWater[model - 400];
}

stock Float:MyVectorSize ( Float: x, Float:y, Float:z )
{
	return floatsqroot  (x * x + y * y + z * z);
}

stock GetTickDiffAC(newtick, oldtick)
{
	if(oldtick > newtick || (oldtick >= 0 && newtick < 0)) return ((cellmax - oldtick + 1) - (cellmin - newtick));
	return (newtick - oldtick);
}

stock GetPlayerSpeedAC(playerid)
{
    new Float:vel_x, Float:vel_y, Float:vel_z, id_vehicle = GetPlayerVehicleID(playerid);
    if(!id_vehicle) GetPlayerVelocity(playerid, vel_x, vel_y, vel_z);
	else GetVehicleVelocity(id_vehicle, vel_x, vel_y, vel_z);
	return floatround(MyVectorSize(vel_x, vel_y, 0.0) * 136.666667);
}

static VehicleMods[212][] =
{
	{0b00000011001111000010011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000110100010011111111010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001110110010011110000101, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010101111000100011100000011, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011101110100010011110001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100011100000011110001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001100010000011101000100, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001010000000011100111010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010101111010100011100000001, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001110100010011110000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001010000000011101111010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010011110100010011111001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100000100010011110001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001111100000011111000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011011100000011011100110000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011000111010010011101110101, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010101111100100011110001000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000010000011101110001, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100110100000111111001110, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000001100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011001110000010011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001111111000011110010101, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100111110000011110001100, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010100101100010011111101010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001101101100011110000010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100111100001111111001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b11111100000000000000010000110111, 0b00000000000000000000000000000000, 0b00000010000111000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000011111111100110000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000001101110000111, 0b00000000000000000000000000000001, 0b00000001111000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011100111100000011111010010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010001111001100011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000110000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011100011100000011111010110, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010001111010000011100001001, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000001100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100111100001111110001010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010100111000000011101111010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010101111010000011101101100, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b11111111111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000111111000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111111111110, 0b00000000000000000000000000000111, 0b11000000000000000000000000000000, 0b00000000000000000010000000000111},
	{0b11111110000000000000011100000000, 0b00000000000000000000000000000011, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000011110000000000, 0b00000000000000000000011000000000},
	{0b11001110000000000000011100000000, 0b11111111100000000000000000000000, 0b00000000111111111111111000000001, 0b00000000000000000000000000000111, 0b00111100000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000001111111100, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000001111000000000000000000, 0b00000000000000000001100000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000011111111110000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000011110000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000001000111, 0b00000000000000000000000000111110, 0b00111100000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000001110000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000001111, 0b00000000000000000000000000000000, 0b00000000000000111100000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000001111000000, 0b11000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010100101100000011111000010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011000101110010011111110001, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000110000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010010101100010011111110000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000011100111100000011111000010, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000111100000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000},
	{0b00000010000000000000011100000000, 0b00000000000000000000000000000000, 0b00000000111111111111111000000000, 0b00000000000000000000000000000111, 0b00000000000000000000000000000000, 0b00000000000000000000000000000000}
};

stock IsComponentidCompatibleAC(modelid, componentid)
{
	if(1000 <= componentid <= 1191)
	{
		componentid -= 1000;
		if(VehicleMods[modelid - 400][componentid >>> 5] & (1 << (componentid & 0b00011111))) return 1;
	}
	else if((componentid == 1192 || componentid == 1193) && modelid == 576) return 1;
	return 0;
}

#define AC_NULLWARN (3)
static Float:playerPassengerVelX[MAX_VEHICLES];
static Float:playerPassengerVelY[MAX_VEHICLES];
static Float:playerPassengerVelZ[MAX_VEHICLES];
static playerWarningCarShot[MAX_PLAYERS char];
static playerNullWarningTimer[MAX_PLAYERS][AC_NULLWARN];

new txt_role[32], txt_role1[32], txt_role2[32], txt_role3[32];

#define MAX_GATE 1000
new gates_count ;
new gates_adding ;

enum _gate
{
	g_inc,
	g_object,
	g_house,
	g_select,

	Float:g_pos [ 6 ],
	Float:g_opened_pos [ 6 ],
}
new gate_info [ MAX_GATE ] [ _gate ] ;

#define MAX_AREA 2500

#define area_type_house 1

new area_type [ MAX_AREA + 8 char ] ;

new area_count ;
new area_adding ;

enum _areas
{
	a_id,
	a_pick,
	a_house,
	a_area [ 2 ],
	Float:a_pos[ 4 ],
	Float:a_to_pos[ 4 ],
	a_virt_world [ 2 ],
	a_interior [ 2 ],
}

new area_info [ MAX_AREA ] [ _areas ];

static const gGunID[8] = {23, 24, 29, 25, 30, 33, 31, 34};
static const gGunAmount[8] = {70, 180, 200, 280, 300, 380, 350, 500};

new DrugEffect[MAX_PLAYERS];

new ClosetSkins[MAX_PLAYERS][5];

new MechanicVehicleDriver[MAX_VEHICLES], MechanicFuel[MAX_VEHICLES], MechanicFuelCost[MAX_VEHICLES], Text3D:MechanicFuelCostText[MAX_VEHICLES];
new MechanicVehicle[2];

new Text3D:TaxiTariffText[MAX_VEHICLES], TaxiVehicleDriver[MAX_VEHICLES];
new TaxiVehicle[2];
new TaxiTime[MAX_PLAYERS];

new Text3D:BusStats[MAX_PLAYERS], LSBus[2];

new PlayerText:welcome_td[MAX_PLAYERS];
new kill_welcome_td[MAX_PLAYERS];

new AntiOnFootCrash[MAX_PLAYERS char];

static stock id_player_wbook = INVALID_PLAYER_ID;
static stock playerid_wbook = INVALID_PLAYER_ID;

#define GetAnimListData(%0,%1) 		anim_list[%0][%1]
enum E_ANIM_LIST_STRUCT
{
	AL_DESCRIPTION[32],
	AL_LIB[32],
	AL_NAME[32],
	Float: AL_DELTA,
	AL_LOOP,
	AL_LOCK_X,
	AL_LOCK_Y,
	AL_FREEZE,
	AL_TIME
};

new anim_list[74][E_ANIM_LIST_STRUCT] =
{
	{"Танец 1",                         "",					"",						0.0, false, 0, 0, 0, 0},
	{"Танец 2",                         "",					"",						0.0, false, 0, 0, 0, 0},
	{"Танец 3",                         "",					"",						0.0, false, 0, 0, 0, 0},
	{"Танец 4", 						"",					"",						0.0, false, 0, 0, 0, 0},
	{"Танец 5",							"DANCING",			"DAN_Left_A",			4.0, true,  0, 0, 0, 0},
	{"Танец 6",							"DANCING",			"dnce_M_a",				4.0, true,  0, 0, 0, 0},
	{"Махать рукой",					"ON_LOOKERS",		"wave_loop",			4.0, true,  0, 0, 0, 0},
	{"Лечь на землю",					"BEACH",			"bather",				4.0, true,  0, 0, 0, 0},
	{"Походка пьяного",					"PED",				"WALK_DRUNK",			4.0, true,  1, 1, 1, 0},
	{"Кувыркаться",						"ped",				"Crouch_Roll_L",		4.0, true,  1, 1, 1, 1},
	{"Попрощаться",						"ped",				"endchat_03",			4.0, true,  1, 1, 1, 0},
	{"Читать рэп",						"benchpress",		"gym_bp_celebrate",		4.0, true,  0, 1, 1, 0},
	{"Укрыться",						"ped",				"cower", 				3.0, true,  0, 0, 0, 0},
	{"Подложить бомбу",					"BOMBER",			"BOM_Plant",			4.0, false, 0, 0, 0, 0},
	{"Надеть маску",					"SHOP",				"ROB_Shifty",			4.0, false, 0, 0, 0, 0},
	{"Вытянуть руку перед собой",		"SHOP",				"ROB_Loop_Threat",		4.0, true,  0, 0, 0, 0},
	{"Сложить руки вместе",				"COP_AMBIENT",		"Coplook_loop",			4.0, true,  0, 1, 1, 0},
	{"Съел что-то не то...",			"FOOD",				"EAT_Vomit_P", 			3.0, false, 0, 0, 0, 0},
	{"Перекусить",						"FOOD",				"EAT_Burger", 			3.0, false, 0, 0, 0, 0},
	{"Шлепнуть кому-то по заднице",		"SWEET",			"sweet_ass_slap",		4.0, false, 0, 0, 0, 0},
	{"Предложить наркотики",			"DEALER",			"DEALER_DEAL",			4.0, false, 0, 0, 0, 0},
	{"Эффект электрошокера",			"CRACK",			"crckdeth2",			4.0, true,  0, 0, 0, 0},
	{"Мужское курение",					"SMOKING",			"M_smklean_loop",		4.0, true,  0, 0, 0, 0},
	{"Женское курение",					"SMOKING",			"F_smklean_loop",		4.0, true,  0, 0, 0, 0},
	{"Присесть",						"BEACH",			"ParkSit_M_loop",		4.0, true,  0, 0, 0, 0},
	{"Восточное единоборство",			"PARK",				"Tai_Chi_Loop",			4.0, true,  0, 0, 0, 0},
	{"Выпить напиток",					"BAR",				"dnk_stndF_loop",		4.0, true,  0, 0, 0, 0},
	{"Расслаблено сесть",				"BLOWJOBZ",			"BJ_COUCH_LOOP_P",		4.0, true,  0, 0, 0, 0},
	{"Поза вратаря",					"BSKTBALL",			"BBALL_def_loop",		4.0, true,  0, 0, 0, 0},
	{"Facepalm",						"MISC",				"plyr_shkhead",			4.0, false, 0, 0, 0, 0},
	{"Элемент восточного танца",		"BSKTBALL",			"BBALL_idle",			4.0, true,  0, 0, 0, 0},
	{"Позвать кого-то",					"CAMERA",			"camstnd_cmon",			4.0, true,  0, 0, 0, 0},
	{"Руки вверх!",						"PED",				"HANDSUP",				4.0, 2, 1, 0, 1, 0},
	{"Спать на боку",					"CRACK",			"crckidle2",			4.0, true,  0, 0, 0, 0},
	{"Спать на спине",					"CRACK",			"crckidle4",			4.0, true,  0, 0, 0, 0},
	{"Смотреть по сторонам",			"DEALER",			"DEALER_IDLE",			4.0, true,  0, 0, 0, 0},
	{"Облокотиться на бок",				"GANGS",			"leanIDLE",				4.0, true,  0, 0, 0, 0},
	{"Толкнуть боком",					"GANGS",			"shake_carSH",			4.0, false, 0, 0, 0, 0},
	{"Раздумье",						"GANGS",			"smkcig_prtl",			4.0, false, 0, 0, 0, 0},
	{"Лечь, оперевшись на ладонь",		"BEACH",			"ParkSit_W_loop",		4.0, true,  0, 0, 0, 0},
	{"Сесть на стул",					"INT_HOUSE",		"LOU_Loop",				4.0, true,  0, 0, 0, 0},
	{"Сидеть уставшим за компьютером",	"INT_OFFICE",		"OFF_Sit_Bored_Loop",	4.0, true,  0, 0, 0, 0},
	{"Сидеть за столом",				"INT_OFFICE",		"OFF_Sit_Idle_Loop",	4.0, true,  0, 0, 0, 0},
	{"Сидеть и печатать",				"INT_OFFICE",		"OFF_Sit_Type_Loop",	4.0, true,  0, 0, 0, 0},
	{"Взять что-то и рассмотреть",		"INT_SHOP",			"shop_shelf",			4.0, false, 0, 0, 0, 0},
	{"Сесть, закинув ногу на ногу",		"JST_BUISNESS",		"girl_02",				4.0, true,  0, 0, 0, 0},
	{"Отказаться от чего-либо",			"KISSING",			"GF_StreetArgue_02",	4.0, false, 0, 0, 0, 0},
	{"Поцелуй 1",						"KISSING",			"Grlfrd_Kiss_01",		4.0, false, 0, 0, 0, 0},
	{"Поцелуй 2",						"KISSING",			"Grlfrd_Kiss_02",		4.0, false, 0, 0, 0, 0},
	{"Поцелуй 3",						"KISSING",			"Grlfrd_Kiss_03",		4.0, false, 0, 0, 0, 0},
	{"Размахивать руками на месте",		"LOWRIDER",			"RAP_B_Loop",			4.0, true,  0, 0, 0, 0},
	{"Искуственное дыхание",			"MEDIC",			"CPR",					4.0, false, 0, 0, 0, 0},
	{"Пощечины для лежачего",			"MISC",				"bitchslap",			4.0, true,  0, 0, 0, 0},
	{"Подглядывать через что-то",		"MISC",				"bng_wndw",				4.0, false, 0, 0, 0, 0},
	{"Движения тореодора",				"MISC",				"KAT_Throw_K",			4.0, false, 0, 0, 0, 0},
	{"Сесть на стул (2)",				"MISC",				"SEAT_LR",				4.0, true,  0, 0, 0, 0},
	{"Сесть на стул (3)",				"ped",				"SEAT_idle",			4.0, true,  0, 0, 0, 0},
	{"Смотреть наверх",					"ON_LOOKERS",		"lkup_loop",			4.0, true,  0, 0, 0, 0},
	{"Указать рукой наверх",			"ON_LOOKERS",		"Pointup_loop",			4.0, true,  0, 0, 0, 0},
	{"Быть в страхе",					"ON_LOOKERS",		"panic_loop",			4.0, true,  0, 0, 0, 0},
	{"Призывать к чему-либо",			"ON_LOOKERS",		"shout_02",				4.0, true,  0, 0, 0, 0},
	{"Сходить по-маленькому",			"PAULNMAC",			"Piss_loop",			4.0, true,  0, 0, 0, 0},
	{"Гангстерский жест",				"GHANDS",			"gsign1LH", 			3.0, true,  0, 0, 0, 0},
	{"Голосовать на остановке",			"ped",				"IDLE_taxi", 			3.0, true,  0, 0, 0, 0},
	{"Удар ногой",						"POLICE",			"Door_Kick",			4.0, false, 0, 0, 0, 0},
	{"Стучаться в дверь",				"POLICE",			"CopTraf_Stop",			4.0, true,  0, 0, 0, 0},
	{"Устроить бунт",					"RIOT",				"RIOT_ANGRY_B",			4.0, true,  0, 0, 0, 0},
	{"Пританцовывать",					"RAPPING",			"RAP_C_Loop",			4.0, true,  0, 0, 0, 0},
	{"Лечь на землю (2)",				"SWAT",				"gnstwall_injurd",		4.0, true,  0, 0, 0, 0},
	{"Плохое самочувствие",				"SWEET",			"Sweet_injuredloop",	4.0, true,  0, 0, 0, 0},
	{"Приветствие 1",					"RIOT",				"RIOT_ANGRY",			4.0, false, 0, 0, 0, 0},
	{"Приветствие 2",					"GHANDS",			"gsign2",				4.0, false, 0, 0, 0, 0},
	{"Приветствие 3",					"GHANDS",			"gsign5",				4.0, false, 0, 0, 0, 0},
	{"Приветствие 4",					"GHANDS",			"gsign4",				4.0, false, 0, 0, 0, 0}
};
new anim_list_items[34 * (sizeof(anim_list)+1) + 1];

/*new Float:SeatDown[][4] =//сесть 2018
{
    {2733.3198,-2419.0583,21.8921,166.6935}, // Записываем полностью координаты (X, Y, Z, разворот)
    {2728.5215,-2418.9189,21.8921,192.0739},
    {2723.9751,-2418.9155,21.8921,193.3273},
    {2737.1418,-2462.6023,21.8921,0.9622}
};*/

new cash_cs[MAX_PLAYERS];
new kill_cs[MAX_PLAYERS];

new podlodka, podlodka_icon;
new Text3D:army_text[4];

new PlayerText:capture_td[MAX_PLAYERS];

new Ticket_Pay;

new acc_name[5][32] =
{
	"Головной убор",
	"Бандана",
	"Часы",
	"Рюкзак",
	"Очки"
};

new id_acc[5][33] =
{
	{18953,18954,18967,18968,18969,19111,19112,19113,19117,19118,19119,18939,18940,18941,18942,18943,18926,18927,18928,18929,18930,18931,18932,18933,18934,18935,18955,18956,18957,18958,0,0,0},
 	{18922,18923,18924,18925,18891,18892,18893,18894,18895,18896,18897,18898,18899,18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,0,0,0,0,0,0,0,0,0,0},
	{19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{371,3026,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
 	{19138,19139,19140,19006,19007,19008,19009,19010,19011,19012,19013,19014,19015,19016,19017,19018,19019,19020,19021,19022,19023,19024,19025,19026,19027,19028,19029,19030,19031,19032,19033,19034,19035}
};

new price_acc[5][33] =
{
	{700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700,700},
	{800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800},
	{450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450,450},
	{1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200},
	{1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000}
};
new max_id_acc[5] = {28,21,14,2,32};

enum acc_data_player
{
	acc_object_id[5],
	Float:acc_object_x[5],
	Float:acc_object_y[5],
	Float:acc_object_z[5]
}
new acc_player[MAX_PLAYERS][acc_data_player];

new count_acc_show[MAX_PLAYERS] = {0,...};
new step_show_acc_box[MAX_PLAYERS] = {-1,...};

/*new WarningCamera[MAX_PLAYERS];
new CassC;
new CassC2;
new PIPS[1000][16];
new	AckSent[1000];
new Updates[1000];*/

new race_name_str[13][32] =
{
    {"Россия"},
	{"Украина"},
	{"Беларусь"},
	{"Молдавия"},
	{"Казахстан"},
	{"Киргизия"},
	{"Латвия"},
	{"Эстония"},
	{"Грузия"},
	{"Узбекистан"},
	{"Армения"},
	{"Туркмения"},
	{"Азербайджан"}
};

new gRegSkins[13][2][6] =
{
	{
		{4, 5, 7, 14, 136, 0},
		{41, 69, 215, 0, 0, 0}

	},
	{
		{2, 3, 23, 37, 0, 0},
		{55, 90, 93, 216, 0, 0}
	},
	{
		{30, 47, 48, 184, 0, 0},
		{12, 56, 193, 226, 0, 0}
	},
	{
		{4, 5, 7, 14, 136, 0},
		{41, 69, 215, 0, 0, 0}

	},
	{
		{2, 3, 23, 37, 0, 0},
		{55, 90, 93, 216, 0, 0}
	},
	{
		{30, 47, 48, 184, 0, 0},
		{12, 56, 193, 226, 0, 0}
	},
	{
		{4, 5, 7, 14, 136, 0},
		{41, 69, 215, 0, 0, 0}

	},
	{
		{2, 3, 23, 37, 0, 0},
		{55, 90, 93, 216, 0, 0}
	},
	{
		{30, 47, 48, 184, 0, 0},
		{12, 56, 193, 226, 0, 0}
	},
	{
		{4, 5, 7, 14, 136, 0},
		{41, 69, 215, 0, 0, 0}

	},
	{
		{2, 3, 23, 37, 0, 0},
		{55, 90, 93, 216, 0, 0}
	},
	{
		{30, 47, 48, 184, 0, 0},
		{12, 56, 193, 226, 0, 0}
	},
	{
		{30, 47, 48, 184, 0, 0},
		{12, 56, 193, 226, 0, 0}
	}
};

new Anims[][] =
{
	{"WALK_civi"},
	{"WALK_gang1"},
	{"WALK_gang2"},
	{"WALK_old"},
	{"WALK_fatold"},
	{"WALK_fat"},
	{"WOMAN_walknorm"},
	{"WOMAN_walkbusy"},
	{"WOMAN_walkpro"},
	{"WOMAN_walksexy"},
	{"Walk_Wuzi"}
};

new Talk[][] =
{
	{"IDLE_chat"},
	{"prtial_gngtlkA"},
	{"prtial_gngtlkB"},
	{"prtial_gngtlkD"},
	{"prtial_gngtlkE"},
	{"prtial_gngtlkF"},
	{"prtial_gngtlkG"}
};

new GeneralCard[MAX_PLAYERS];

#define MAX_ATTEMPT_GANG 3
static stock CaptureAttempt[4] = {0,...};

new day_weeks;

new drieltorka[MAX_PLAYERS];

new TruckerVehicle[10], TrailerOwnerID[MAX_VEHICLES], TimerTrailer[MAX_VEHICLES], Text3D:TrailerInfo[MAX_VEHICLES];

new anticheat = 0;

new fond_mp = 0;
new mp_start = 0;

new gLastCar[MAX_PLAYERS];
new Float:posx1, Float:posy1, Float:posz1;

new Damage[MAX_PLAYERS], Text:DamageTD[MAX_PLAYERS], DamageInfo[MAX_PLAYERS], Kolokol[MAX_PLAYERS];

new narko_camel, Text3D:narko_text, narko_icon, camel;

new Text:HungerBackground[2];
new PlayerText:HungerProgress[MAX_PLAYERS];

new startnarko[MAX_PLAYERS];
new send[MAX_PLAYERS];

new hdonate_player[MAX_PLAYERS];

new vehicle_id_edit[MAX_PLAYERS];
new edit_zp_rang[MAX_PLAYERS];

static playerVehicleEnter[MAX_PLAYERS];
static playerVehicleEnterTime[MAX_PLAYERS];

new Text3D:ShipText[MAX_PLAYERS];

new gHousesClassName[4][14] = {"Эконом-класс", "Комфорт-класс", "Премиум-класс", "Элитный-класс"};

new Float:vehicle_health [ MAX_PLAYERS ];

new walk_goto_me[MAX_PLAYERS] = {0,...};

enum Bl_I
{
	Bl_Marker,
	Bl_Finder,
	Bl_Observe,
bool:Bl_isKilled,
	Bl_onFrac[26],
	Bl_Kills[26],
}
new Bl_Info[MAX_PLAYERS][Bl_I];

new cache_row[512];
#define cache_get_str(%0,%1,%2)		cache_get_row(%0,%1,cache_row),sscanf(cache_row,%2)
#define cache_get_int(%0,%1,%2)		%2=cache_get_row_int(%0,%1)
#define cache_get_float(%0,%1,%2)	%2=cache_get_row_float(%0,%1)
#define scf(%0,%1,%2)				format(%1,sizeof(%1),%2), strcat(%0,%1)
#define getname(%0->%1,%2->%3)		GetPlayerName(%0,%1,24), GetPlayerName(%2,%3,24)
#define GetFracID(%0)				(p_info[%0][pMember]|p_info[%0][pLeader])

stock getday(timestamp, oldtimestamp = 0)
{
	#define DAY (86400)
	return ((timestamp-oldtimestamp)/DAY);
}

enum find
{
	FindTime,
	FindTimer,
	Text:FindTD,
}
new Find[MAX_PLAYERS][find];

new ContactsNumber[MAX_PLAYERS][MAX_CONTACTS], ContactsName[MAX_PLAYERS][MAX_CONTACTS][100];

enum E_OWNABLE_CAR_STRUCT
{
	v_sql,
	v_owner[21],
	v_number[32],
	v_model,
	v_color_1,
	v_color_2,
Float: v_pos_x,
Float: v_pos_y,
Float: v_pos_z,
Float: v_pos_r,
Float: v_mileage,
	v_virtual,
	v_fuel,
	v_slot,
	v_lock,
	v_veh_com[64],
	v_veh_coms[14],
	v_paintjob,
	v_ticket,
};

new ownable_car[MAX_PLAYERS][E_OWNABLE_CAR_STRUCT];
new Text3D: ownable_car_label[MAX_VEHICLES] = {Text3D:INVALID_3DTEXT_ID, ...};

new bool:SpRabotaySer[MAX_PLAYERS];

new door_inter_swat;
new door_inter_swat_status = 0;

new door_inter_fbi[2];
new door_inter_fbi_status[2] = 0;

new g_player_listitem[MAX_PLAYERS][32];

enum
E_STRCUT_PROPOSITION
{
	P_OUT_ID,
	P_ING_ID,
	P_INCOMING_TYPE,
	P_INCOMING_VALUE[2]
};

new
proposition_info[MAX_PLAYERS][E_STRCUT_PROPOSITION];

new const
g_proposition_default_values[E_STRCUT_PROPOSITION] =
{
	INVALID_PLAYER_ID,
	INVALID_PLAYER_ID,
	-1,
	{-1, -1}
};

enum
{
	PROPOSITION_TYPE_NONE = -1,
	PROPOSITION_TYPE_KISS,
	PROPOSITION_TYPE_HUG,
	PROPOSITION_TYPE_HI,
	PROPOSITION_TYPE_SELL_CAR,
	PROPOSITION_TYPE_SELL_HOUSE,
	PROPOSITION_TYPE_SELL_BUSINESS,
	PROPOSITION_TYPE_SHOW_LIC,
	PROPOSITION_TYPE_SHOW_PASS,
	PROPOSITION_TYPE_CHANGE,
	PROPOSITION_TYPE_SELL_GARAGE,
};

static const Maximum_Passengers[27] =
{
	0x10331113, 0x11311131, 0x11331313, 0x80133301,
	0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
	0x13113311, 0x31101100, 0x30001301, 0x11031311,
	0x11111331, 0x10013111, 0x01131100, 0x11111110,
	0x11100031, 0x11130221, 0x33113311, 0x11111101,
	0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
	0x13330111, 0xFF131111, 0x0000FF3F
};

new KickFreezeAFK[MAX_PLAYERS char];
new Float:PTick[MAX_PLAYERS];

main()
{
	print("_______________________________________________________");
	print(" HCS --> Cunbers --> Only Roleplay");
	print(" Автор доработки: Slaughter");
	print(" Для проекта Only RP | (c) 2018");
	print("_______________________________________________________");
}
//-------------------------[ Максимальное количество для создания ]-------------
#define MAX_GANGZONES         100
#define MAX_FRACTIONS         26
#define MAX_ADVERTS           16
#define MAX_VCARS             2000
#define MAX_BIZZ              300
#define MAX_ATM               300
#define MAX_SPRUNK            300
#define MAX_HOUSES            1000
#define MAX_RADARS            100
#define MAX_SLOT              17
#define MAX_LIST              17
#define MAX_ITEM              245
#define MAX_PODEZD            1000
#define MAX_ROOMS             7000
//------------------------------------------------------------------------------
#define EAT_OBJECTS           4
#define BAR_OBJECTS           7
#define GUN_OBJECTS           10
//------------------------------------------------------------------------------
#define PHONE_PRICE           (100)
#define LSNEWS_NUMBER 		  (555)
#define SFNEWS_NUMBER 		  (666)
#define LVNEWS_NUMBER 		  (777)
//------------------------------------------------------------------------------
#define WEAPON_RM 			  (1)
#define WEAPON_LCN 			  (2)
#define WEAPON_YAKUZA 		  (8)
#define WEAPON_NEWS 		  (43)
#define WEAPON_GAND 		  (5)
//------------------------------------------------------------------------------
#define NONE_3D_TEXT 		  (Text3D:-1)
//------------------------------------------------------------------------------
#define SPECIAL_ACTION_PISS   (68)
//------------------------------------------------------------------------------
#define ADM_NONE 			  (0)
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#define INFINITY                   (Float:0x7F800000)
//------------------------------------------------------------------------------
#define AMMO_PISTOL 		  (2)
#define AMMO_SDPISTOL 		  (2)
#define AMMO_DEAGLE 		  (2)
#define AMMO_SHOTGUN 		  (2)
#define AMMO_MICROUZI		  (4)
#define AMMO_MP5 			  (4)
#define AMMO_AK47 			  (3)
#define AMMO_M4A1 			  (3)
//------------------------------------------------------------------------------
#define AMMO_PISTOL_VIP	      1
#define AMMO_SDPISTOL_VIP     1
#define AMMO_DEAGLE_VIP       1
#define AMMO_SHOTGUN_VIP      1
#define AMMO_MICROUZI_VIP     2
#define AMMO_MP5_VIP          2
#define AMMO_AK47_VIP         1
#define AMMO_M4A1_VIP         1
//------------------------------------------------------------------------------
#define MOVE_SPEED            100.0
#define ACCEL_RATE            0.03
//------------------------------------------------------------------------------
#define CAMERA_MODE_NONE      0
#define CAMERA_MODE_FLY       1
//------------------------------------------------------------------------------
#define MOVE_FORWARD          1
#define MOVE_BACK             2
#define MOVE_LEFT             3
#define MOVE_RIGHT            4
#define MOVE_FORWARD_LEFT     5
#define MOVE_FORWARD_RIGHT    6
#define MOVE_BACK_LEFT        7
#define MOVE_BACK_RIGHT       8
//--------------------------[ Цветовые коды фракций ]---------------------------
#define NONE_COLOR                      (0xFFFFFF11)
#define MAYOR_COLOR                     (0xCCFF00AA)
#define LSPD_COLOR                      (0x0000EEAA)
#define SFPD_COLOR                      (0x0000EEAA)
#define LVPD_COLOR                      (0x0000EEAA)
#define ARMY_COLOR                      (0x446600AA)
#define FBI_COLOR                       (0x4B00B0AA)
#define HOSPITAL_COLOR                  (0x660022AA)
#define LIC_COLOR                       (0x66EEEEAA)
#define LSNEWS_COLOR                    (0xAA6644AA)
#define SFNEWS_COLOR                    (0xAA6644AA)
#define LVNEWS_COLOR                    (0xAA6644AA)
#define YAKUZA_COLOR                    (0xfcfc00AA)
#define RM_COLOR                        (0x17196cAA)
#define LCN_COLOR                       (0xf84400AA)
#define VAGOS_COLOR 					(0xFFCC00AA)
#define CORONOS_COLOR 					(0x86c0bfAA)
#define AZTECAS_COLOR 					(0x00B4E1AA)
#define RIFA_COLOR 						(0x6666FFAA)
#define UNION_COLOR                     (0xb5e8f0AA)
#define neworange 						"{f0e86b}"
#define newgray 						"{a8a7a6}"
#define newred 							"{ff0000}"
#define newgreen 						"{f0e86b}"
#define newlightgreen 					"{f0e86b}"
#define newblue 						"{ebec86}"
#define newyellow 						"{66985f}"
#define nwhite 							"{ffffff}"
#define cBLUE 							"{ebec86}"
#define cWHITE 							"{FFFFFF}"
//------------------------------------------------------------------------------
const MONEY_LIMIT = 2000000000;
#define GetRank(%0,%1) fRankName[%0-1][%1-1]
#define GANG_TEXT "Склад", ""newgreen"Положить наркотики\n"newgreen"Положить патроны\n"newgreen"Положить металл\n"newgreen"Положить деньги\n"nwhite"Взять наркотики\nВзять патроны\nВзять металл\nВзять деньги"

#define fractionInvite 0
#define fractionUnInvite 1
#define fractionGiverank 2
#define fractionObwyak 3
#define fractionCapture 4
static stock gFractionRank[MAX_FRACTIONS][5];
new fraction_amount = 0;

enum _fractions
{
	f_id,
	f_name [ 50 ],
Float:f_spawn [ 4 ],
	f_spawn_int,
	f_spawn_virt,
Float:f_bank [ 3 ],
	f_bank_int,
	f_bank_virt,
Float:f_put [ 3 ],
	f_put_int,
	f_put_virt,
	f_bl_config [ 3 ],
	f_message [ 32 ],
	f_l_config [ 5 ],
	f_respect,
	f_rang_zp [ 11 ],
	f_status_zp
};
new f_info [ 26 ] [ _fractions ] ;

new model_change [ 3 ] [ 15 ] =
{
	{ 482, 559, 410, 536, 477, 579, 541, 522, 602, 0, 0, 0, 0, 0, 0 },
	{ 402, 404, 482, 549, 439, 466, 492, 0, 0, 0, 0, 0, 0, 0, 0 },
	{ 482, 492, 412, 419, 422, 536, 566, 445, 550, 0, 0, 0, 0, 0, 0 }
} ;

new frac_patron					[MAX_FRACTIONS]={0,...};
new frac_metall					[MAX_FRACTIONS]={0,...};
new frac_money					[MAX_FRACTIONS]={0,...};
new frac_drugs					[MAX_FRACTIONS]={0,...};
new frac_blanks					[MAX_FRACTIONS]={0,...};
new Text3D:frac_text			[MAX_FRACTIONS]={Text3D:-1, ...};
new frac_areaid					[MAX_FRACTIONS];
new frac_areaid_cp				[MAX_FRACTIONS];

new Float:frac_place_put		[MAX_FRACTIONS][3];
new frac_place_put_areaid[MAX_FRACTIONS];
new frac_place_put_areaid_cp[MAX_FRACTIONS];
new Text3D:frac_place_put_areaid_text[MAX_FRACTIONS]={Text3D:-1, ...};

static const stock fRankName[26][21][40];

static const stock FractionRank [MAX_FRACTIONS] =
{
	11,//Правительство
	11,//ДПС
	11,//УВД
	11,//ФСБ
	11,//Больница
	11,//Автошкола
	11,//Южная ОПГ
	11,//Арзамасская ОПГ
	11,//Бомжи
	11,//Русская мафия
	11,//--
	11,//Армия
	11,//--
	11,//--
	11,//Лыткаринская ОПГ
	11,//Батыревская ОПГ
	11,//--
	11,//RECORD FM
	11,//--
	11,//
	11,//Спецназ
	11,//Горсовет г.Южный
	11,//М
	11,//М
	11//М
};

enum FInfo
{
	fractionName[32],
	fractionColor
}

static const stock Fractions[MAX_FRACTIONS][FInfo] =
{
	{"Гражданский",						NONE_COLOR},
	{"Правительство",					NONE_COLOR},
	{"ДПС",  					    	NONE_COLOR},
	{"УВД", 							NONE_COLOR},
	{"ФСБ",      						NONE_COLOR},
	{"Больница",  						NONE_COLOR},
	{"Автошкола",    					NONE_COLOR},
	{"Южная ОПГ",     					NONE_COLOR},
	{"Арзамасская ОПГ",     			NONE_COLOR},
	{"Банда Бомжей",     				NONE_COLOR},
	{"Русская мафия",     				NONE_COLOR},
	{"-",   							0xFFFFFFAA},
	{"Армия", 							NONE_COLOR},
	{"-", 								0xFFFFFFAA},
	{"-",   							0xFFFFFFAA},
	{"Лыткаринская ОПГ", 				NONE_COLOR},
	{"Батыревская ОПГ",    				NONE_COLOR},
	{"-",  								0xFFFFFFAA},
	{"RECORD FM",   					NONE_COLOR},
	{"-",     							0xFFFFFFAA},
	{"_",     							0xFFFFFFAA},
	{"Спецназ",     					NONE_COLOR},
	{"Горсовет Южного",     	    	0xFFFFFFAA},
	{"-",     							0xFFFFFFAA},
	{"-",   							0xFFFFFFAA},
	{"-",   							0xFFFFFFAA}
};

stock GetFracColor(fractionid) return (fractionid == 7) ? (0xfcfc00AA) : (fractionid == 8) ? (0x66EEEEAA) : (fractionid == 15) ? (0xf84400AA) : (fractionid == 16) ? (0x17196cAA) : (0xAFAFAFAA);

#define dDipMenu 				9220
#define dDipChangeStatus 		9221
#define dDipInviteList	 		9222
#define dDipInviteListAccept	9223

#define status_war 1
#define status_neutral 2
#define status_alliance 3
new dip_status[MAX_FRACTIONS][MAX_FRACTIONS];
//------------------------------[ ID Диалогов ]---------------------------------
enum
{
	D_NULL = 0,
	D_LOGIN = 2,
	D_MAINMENU = 5,
	D_UCPADMIN = 7,
	D_UCPADMIN2 = 8,
	D_ADMIN = 10,
	D_ADDNED = 11,
	D_INVITEFRAC = 18,
	D_INVITEFAM = 20,
	D_LEAVEFAM = 22,
	D_JOINHOUSE = 24,
	D_SELLHOUSE = 29,
	D_JOINCARS = 35,
	D_GPS = 46,
	D_WEATHER = 47,
	D_FRACMENU = 49,
	D_FAMMENU = 52,
	D_ATM = 62,
	D_NMENU = 77,
	D_HOME = 101,
	D_HEAL = 106,
	D_JOB = 131,
	D_DONATE = 200,
	D_CTO = 400,
	D_CAR = 600,
	D_GUNJOB = 800,
	D_SETSPAWN = 1000,
	D_AMMO = 1100,
	D_BUYFISHKI = 1200,
	D_SERVICE = 1400,
	D_ARMOURY = 1700,
	D_STOPLOAD = 1800,
	d_carjack = 1900,
	D_RADAR = 2000,
	D_INVENT = 2200,
	D_PASS = 2400,
	D_POLMENU = 2600,
	D_INVITEOFF = 2800,
	D_MAIL = 3000,
	D_ALOGIN = 3200,
	D_TEMPLEADER = 3400,
	D_LEADERSKIN = 3600,
	D_PHONE = 3800,
	dRobbery = 4000,
	D_FILL = 4200,
	D_BREAK = 4400,
	D_QUEST = 4600,
	D_BUYSIM = 5000,
	D_LIC = 5200,
	D_APANEL = 5400,
	D_HELPER = 5500,
	D_VEHNUMBER = 5600,
	D_LEAVE = 6000,
	D_CANCELRENT = 6400,
	D_INVITESKIN = 7000,
	D_LPANEL = 7500,
	D_PODEZD = 8050,
	D_PROMO = 15000,
	D_AHELP = 9910,
	D_FIXCAR,
	D_FINDCAR,
	DEMORGAN,
	D_REMOVEADMIN,
	D_REMOVEADMIN1,
	D_REMOVEHELPER,
	D_REMOVEHELPER1,
	D_REMOVELEADER,
	D_REMOVELEADER1,
	DIALOG_BUY_VIP_NUMBER,
	DIALOG_CREDIT,
	DIALOG_CREDIT_TAKE,
	DIALOG_SELL_CAR,
	DIALOG_SELL_COPTER,
	DIALOG_ROUTE_BUS,
	DIALOG_INTERACTION_MONEY,
	DIALOG_INTERACTION_SELL_CAR,
	DIALOG_INTERACTION_SELL_HOUSE,
	DIALOG_INTERACTION_SELL_BIZ,
	D_INFORMATION,
	dialog_PHONE_1,
	dialog_PHONE_2,
	dialog_PHONE_3,
	dialog_PHONE_4,
	dialog_PHONE_5,
	dialog_PHONE_6,
	dialog_PHONE_7,
	dialog_PHONE_8,
	dialog_PHONE_9,
	dialog_PHONE_10,
	dialog_PHONE_11,
	dialog_PHONE_12,
	dialog_PHONE_13,
	dialog_PHONE_14,
	dialog_PHONE_15,
	dialog_BUY_PHONE,
	dialog_ADM_COMMAND,
	dEPLAYER,
	D_WANTED,
	D_ENMENU,
	D_BUSSINESUP,
	dLeaderMenu,
	dSetFractionMessage,
	dEditLeader,
	dEditVehicle,
	dModelEdit,
	dPatronGet,
	dPatronPut,
	dDrugsPut,
	dDrugsGet,
	dLeaderRank,
	dRankEdit,
	dRankEdit1,
	dEditRank,
	dZPEdit,
	dZPEdit1,
	dMenuZP,
	dRank,
	dEditRankStep1,
	dEditRankStep2,
	dKrup,
	dCasino,
	dCasino1,
	dCasino2,
	dCasino3,
	dCasino4,
	dCasino5,
	dialog_GOZAEZD,
	dialog_GOCS,
	dialog_CREATE_GARAGE,
	dialog_CREATE_GARAGE_END,
	dialog_BUYGARAGE,
	dialog_GARAGEMENU,
	dialog_GARAGEMENU1,
	dialog_GARAGE_UPDATE,
	dialog_GARAGE_SELL,
	dialog_GARAGE_SELL1,
	dialog_GARAGE_SELL2,
	dialog_GARAGE_SELL3,
	dialog_GARAGE_SELL4,
	dialog_GARAGE_SELL5,
	dialog_GARAGE_INFO_UPDATE,
	dSelectFrac,
	dSelectPatr,
	dEditBl,
	dEditBlParam,
	dFamilyMenu,
	dSetFamilyMessage,
	dEditFamilyVehicle,
	dModelEditFamily,
	dPatronGet1,
	dPatronPut1,
	dDrugsPut1,
	dDrugsGet1,
	dPatronGet2,
	dPatronPut2,
	dDrugsPut2,
	dDrugsGet2,
	dFamilyRank,
	dEditFamilyRank,
	dEditRankStepFamily1,
	dEditRankStepFamily2,
	d_camikaze_exit,
	d_camikaze_cfexit,
	d_cm_bet,
	d_dice_exit,
	d_dice_bet,
	dEditVehicleVehicle,
	dModelFamilyEdit,
	dBuyFamilyVehicle,
	dCarLock,
	dTowCar,
	dMakeGun,
	dMakeGun2,
	dFly,
	dMed,
	DIALOG_BIZ_ORDERS,				// список заказов для бизнесов
	DIALOG_FS_ORDERS,				// список заказов для АЗС
	
	DIALOG_BANK,					// банк
	DIALOG_BANK_ACCOUNTS, 			// мои счета
	DIALOG_BANK_ACCOUNT_LOGIN, 		// авторизация
	DIALOG_BANK_ACCOUNT_OPERATION,	// Список операций
	DIALOG_BANK_ACCOUNT_INFO, 		// информация о счете
	DIALOG_BANK_ACCOUNT_TAKE_MONEY,	// снять деньги
	DIALOG_BANK_ACCOUNT_PUT_MONEY,	// положить деньги
	DIALOG_BANK_ACCOUNT_TRANSFER_1, // перевод денег на другой счет 1
	DIALOG_BANK_ACCOUNT_TRANSFER_2, // перевод денег на другой счет 2
	DIALOG_BANK_ACCOUNT_CHANGE_NAME,// переименирование счета
	DIALOG_BANK_ACCOUNT_CHANGE_PIN,	// смена пин-кода

	DIALOG_BANK_CREATE_ACCOUNT, 	// создание счета
	DIALOG_BANK_CREATED_ACCOUNT, 	// создание счета
	DIALOG_MINER_BUY_METALL, 		// покупка металла на шахте
	DIALOG_TEMP_JOB_LOADER_START,	// Начать работу грузчика
	DIALOG_TEMP_JOB_LOADER_END,		// Закончить работу грузчика
	DIALOG_TEMP_JOB_MINER_START,	// Начать работу шахтера
	DIALOG_TEMP_JOB_MINER_END,		// Закончить работу шахтера
	DIALOG_TEMP_JOB_FACTORY_TRUCKER,// Служба доставки завода
	DIALOG_TEMP_JOB_FACTORY,		// Производственный цех
	DIALOG_TEMP_JOB_LUMBERJACK_ST, 	// Начать работу лесоруба
	DIALOG_TEMP_JOB_LUMBERJACK_END,	// Закончить работу лесоруба
	
	DIALOG_DRIVING_TUTORIAL_START,	// теория в автошколе
	DIALOG_DRIVING_TUTORIAL,	 	// теория в автошколе
	DIALOG_DRIVING_TUTORIAL_END, 	// теория в автошколе
	DIALOG_DRIVING_EXAM_INFO, 		// экзамен по вождению
	DIALOG_DRIVING_EXAM_START,		// экзамен по вождению
	DIALOG_DRIVING_EXAM, 			// экзамен по вождению
	DIALOG_DRIVING_EXAM_RESULT, 	// экзамен по вождению
	dRentSelectPlata,
	DIALOG_BUS_ROUTE_SELECTION,
	dBinder,
	dBinder1,
	dBinder2,
	dBinder3,
	dBinder4,
	D_TICKETPAY,
	dAccesories,
	dSelectAccesories,
	d_reg_main,
	d_reg_race,
	d_reg_gender,
	d_reg_referal,
	d_reg_pass,
	d_reg_email,
	dSetWalk,
	dSetAnim,
	dRieltorka,
	dRieltorkadoma,
	dRieltorkabiz,
	dRieltorkadominfo,
	dRieltorkadominfo1,
	dRieltorkabizinfo,
	dRieltorkabizinfo1,
	dRieltorkabizinfo2,
	d_offmembers_selection,
	d_offmembers_filter,
	d_offmembers_list,
	d_offmembers_pl_menu,
	d_offmembers_pl_rank,
	d_offmembers_pl_menu_info,
	
	d_offmembers_list1,
	d_offmembers_pl_menu1,
	d_offmembers_pl_rank1,
	d_offmembers_pl_menu_info1,
	
	D_GUNSAFE_MAIN,
	D_GUNSAFE_GIVE,
	D_GUNSAFE_AMMO,
	D_GUNSAFE_AMMO_1,
	D_SAFE_MAIN,
	D_SAFE_USE,
	dSpy,
};

#define d_tun_engine    			9000
#define d_tun_brake    				9001
#define d_tun_stability   		 	9002
#define d_tun_engine_accept   	 	9003
#define d_tun_brake_accept    		9004
#define d_tun_stability_accept    	9005

new Iterator:TeamPlayers[MAX_FRACTIONS]<MAX_PLAYERS>;
//-----------------------------[ ID работ ]-------------------------------------
#define JOB_BUS           				(1)
#define JOB_TAXI          				(2)
#define JOB_MECHANIC      				(5)
#define JOB_TRUCKER       				(6)
#define JOB_INKASATOR       			(7)
//----------------------------[ ID фракций ]------------------------------------
#define TEAM_MERIA					    (1)
#define	TEAM_POLICIA	  				(2)
#define	TEAM_POLICIA2					(3)
#define	TEAM_FBI						(4)
#define	TEAM_BOLNICA					(5)
#define	TEAM_AUTOSCHOOL					(6)
#define	TEAM_YAKUZA         			(7)
#define	TEAM_CORONOS        			(8)
#define	TEAM_RIFA          				(9)
#define	TEAM_OPGTEST2       			(10)
#define TEAM_VAGOS         				(11)
#define TEAM_ARMY 						(12)
// Свободный слот для организации (14)
#define TEAM_OPG1 						(15)
#define TEAM_RSM						(16)
#define TEAM_YAK    					(17)
#define TEAM_SMI 						(18)
#define TEAM_SFNEWS                     (19)
#define TEAM_LVNEWS                     (20)
#define TEAM_SWAT 	    				(21)
#define	TEAM_MERIAYJ					(22)
#define	TEAM_LVHOSPITAL					(23)
#define TEAM_VDV     					(24)
#define TEAM_PRAVO   					(25)
//-----------------------------[ Цветовые коды ]--------------------------------
#define COLOR_SEA 						(0x00808000)
#define COLOR_GRAD1 					(0xB4B5B700)
#define COLOR_GRAD2 					(0xBFC0C200)
#define COLOR_GRAD3 					(0xCBCCCE00)
#define COLOR_GRAD4 					(0xD8D8D800)
#define COLOR_GRAD5 					(0xE3E3E300)
#define COLOR_GRAD6 					(0xF0F0F0FF)
#define COLOR_GREY 						(0xAFAFAFFF)
#define COLOR_ADMIN 					(0x828282FF)
#define COLOR_GREEN 					(0xf0e86bFF)
#define COLOR_RED 						(0xFF0000FF)
#define COLOR_LIGHTRED 					(0xFF6347AA)
#define COLOR_LIGHTRED2 				(0xFF6347FF)
#define COLOR_LIGHTGREEN 				(0x9ACD32AA)
#define COLOR_ORANGE                    (0x00bbffFF)
#define COLOR_DARKORANGE                (0xFF6600FF)
#define COLOR_YELLOW 					(0x5a9c5eFF)
#define COLOR_YELLOW2 					(0xF5DEB3AA)
#define COLOR_WHITE 					(0xFFFFFFFF)
#define COLOR_FADE1 					(0xE6E6E6E6)
#define COLOR_FADE2 					(0xC8C8C8C8)
#define COLOR_TOMATO 					(0xFF6347AA)
#define COLOR_FADE3 					(0xAAAAAAAA)
#define COLOR_FADE4 					(0x8C8C8C8C)
#define COLOR_BLUE 						(0x1D99D4FF)
#define COLOR_FADE5 					(0x6E6E6E6E)
#define COLOR_LIME						(0xf0e86bAA)
#define COLOR_DBLUE 					(0x2641FEAA)
#define COLOR_ALLDEPT 					(0xFF8282AA)
#define COLOR_NEWS 						(0xFFA500AA)
#define COLOR_OOC 						(0xE0FFFFAA)
#define COLOR_ORANG 					(0xF3BB33FF)
#define TEAM_BLUE_COLOR 				(0x8D8DFF00)
#define COLOR_BLACK 					(0x000000AA)
#define COLOR_BOX   					(0x00000050)
#define COLOR_BBLUE 					(0x20A9FFAA)
#define COLOR_BORDER 					(0x00000AA)
#define COLOR_INDIGO 					(0x4B00B0AA)
#define COLOR_GRENNN  					(0x3C67BCAA)
#define COLOR_SYSTEM 					(0xEFEFF7AA)
#define COLOR_REDD 						(0xFF6347AA)
#define COLOR_PPS 						(0x0000FFAA)
#define COLOR_LIGHTBLUE    				(0x8D8DFFFF)
#define COLOR_ANTIQUEWHITE 				(0xFAEBD7AA)
#define COLOR_PURPLE       				(0xC2A2DAAA)
#define COLOR_INFO2						(0x70966bFF)
#define COLOR_INFO3						(0x70966bFF)
#define COLOR_DIALOG                    (0xa24646FF)

#define C_RED 0xFF6600FF
#define C_WHITE 0xFFFFFFFF
#define C_LIME 0x99CC00FF
#define C_GREY 0xAFAFAFAA
#define C_OSNOV 0xFFCC00FF
#define C_BLUE 0x0099FFAA
#define C_YELLOW 0xFFFF00FF
#define CR_GREEN 0xf0e86bFF
#define CR_PURPLE 0xDD90FFAA
//------------------------------------------------------------------------------
#define EMAIL_ACTIVE 					"jsrp.ru/email_active.php"
#define EMAIL_AUTHKEY 					"229933"
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#define GetName(%0) p_info[%0][pName]
#define RandomEx(%1,%2) (random(%2-%1)+%1)
//------------------------------[ ID Сообщений ]--------------------------------
SendErr(playerid, text[])
{
	format(STRING_GLOBAL, 144, "{FF6347}*{AFAFAF} %s", text);
	SendClientMessage(playerid, COLOR_GREY, STRING_GLOBAL);
	return 1;
}

SendInf(playerid, text[])
{
	format(STRING_GLOBAL, 144, "{f0e86b}*{FFFFFF} %s", text);
	SendClientMessage(playerid, 0xFFFFFFFF, STRING_GLOBAL);
	return 1;
}
//------------------------------------------------------------------------------
#if !defined gpci
native gpci(playerid, buffer[], size = sizeof(buffer));
#endif
//------------------------------------------------------------------------------
#if !defined GetPlayerClientID
native GetPlayerClientID(playerid, buffer[], size = sizeof(buffer)) = gpci;
#endif
//------------------------------------------------------------------------------
new Float:RoomClass1[][4] =
{
	{97.2674000,-152.3520000,1002.5534000},
	{97.2674000,-152.3520000,1002.5534000},
	{95.6158000,-153.5880000,1002.5534000},
	{95.7430000,-150.9848000,1002.5534000},
	{83.1694000,-153.5871000,1002.5534000},
	{77.5398000,-150.9864000,1002.5534000},
	{69.3276000,-153.5853000,1002.5534000},
	{59.0865000,-150.9863000,1002.5534000},
	{96.8162000,-152.4224000,1006.7331000},
	{85.4103000,-150.9853000,1006.7331000},
	{83.2463000,-153.5889000,1006.7331000},
	{69.4258000,-150.9858000,1006.7331000},
	{69.3897000,-153.5862000,1006.7331000},
	{61.7610000,-150.9848000,1006.7331000},
	{96.8104000,-152.3119000,1010.8034000},
	{85.2060000,-150.9887000,1010.8034000},
	{83.3508000,-153.5886000,1010.8034000},
	{77.2215000,-150.9853000,1010.8034000},
	{69.5567000,-153.5884000,1010.8034000},
	{69.4755000,-150.9849000,1010.8034000}
};

new Float:RoomClass2[][4] =
{
	{515.3201000,-72.3408000,1398.2258000},
	{513.7525000,-72.3891000,1398.2258000},
	{513.7524000,-72.5001000,1401.4531000},
	{515.3253000,-72.2622000,1401.4531000},
	{513.7563000,-72.3136000,1404.6875000},
	{515.3249000,-72.1727000,1404.6875000}
};
new Float:RoomClass3[][4] =
{
	{458.0417000,-64.4470000,1408.5986000},
	{468.5716000,-54.7450000,1408.6062000},
	{458.0478000,-44.5163000,1408.6062000},
	{458.0408000,-34.8367000,1415.3484000},
	{464.8053000,-34.7272000,1415.3425000},
	{466.7982000,-40.9629000,1415.3425000},
	{464.8098000,-49.7733000,1415.3484000}
};
new Float:RoomClass4[][4] =
{
	{370.2719000,-63.0897000,1411.7042000},
	{383.5876000,-59.9476000,1411.7063000},
	{387.1821000,-55.4936000,1411.8184000},
	{384.6577000,-49.8302000,1411.8068000},
	{370.0309000,-63.0994000,1416.8969000},
	{374.4872000,-68.0167000,1416.8872000},
	{382.3497000,-59.3220000,1416.8999000},
	{387.1824000,-57.9606000,1416.8846000},
	{384.6367000,-49.8306000,1416.8730000},
	{370.1635000,-63.1437000,1421.9308000},
	{374.3168000,-68.0634000,1421.9285000},
	{382.3945000,-59.3261000,1421.9272000},
	{387.2276000,-58.0388000,1421.9180000},
	{384.5341000,-49.8758000,1421.9080000},
	{369.9258000,-63.1867000,1426.9652000},
	{374.5050000,-68.1076000,1426.9698000},
	{382.4382000,-59.2632000,1426.9668000},
	{387.2701000,-55.3808000,1426.9564000},
	{384.7621000,-49.9000000,1426.9426000},
	{370.0714000,-63.2308000,1432.0057000},
	{374.5567000,-68.1470000,1432.0016000},
	{382.4833000,-59.4734000,1432.0110000},
	{387.3203000,-55.4891000,1431.9929000},
	{384.7309000,-49.9449000,1431.9856000}
};

#if !defined IsValidVehicle
native IsValidVehicle(vehicleid);
#endif
//------------------------------------------------------------------------------
new DialogSlot[MAX_PLAYERS][100];
//------------------------------------------------------------------------------
enum _fam_enum_
{
	f_name [ 32 ],
	f_chat_color,
	f_creator [ MAX_PLAYER_NAME ],
	f_creator_zam [ MAX_PLAYER_NAME ],
	f_creating_data [ 32 ],
	f_members_amount,
	Float:f_spawn [ 4 ],
	f_spawn_int,
	f_spawn_virt,
	f_patron,
	f_metall,
	f_drugs,
	f_money,
}
//----------------------------[ Защита от UDP флуда ]---------------------------
new bool:isPlayerConnected[MAX_PLAYERS];
//------------------------------------------------------------------------------
new family_info [ 200 ] [ _fam_enum_ ];//Расчитано на 200 семей
new family_count = 0;//кол-во семей.
new family_chat_color[ 22 ] [ 12 ] ={//Массив цвета для чата
	"FFFFFF","FFD39B","FFFF00","54FF9F","98F5FF","269BD8","E75480","00FFFF","F5DEB3","000cff","2a52be","3fda07","ffffff","FF6347","ff6347","00c0ff","ffff00","c3c3c3","ffcc33","33cc00","ff8300","a9c4e4"
};
//------------------------------------------------------------------------------
new Blink[MAX_VEHICLES][4];
new Float:LightsPos[212][6] =
{
	{0.9298, 2.1251, -0.0436, 	0.8949, -2.3353, 0.1784},	// X5               400
	{0.6999, 2.3999, -0.3600, 	0.7000, -2.2000, -0.199},	// Машина			401
	{0.7966, 2.1861, -0.0335, 	0.7620, -2.4147, 0.2065},   // Opel Omega 2     402
	{1.2017, 4.6435, -0.3750,	1.0855, -2.4910, -0.2535},  // Фура.            403
	{0.7079, 2.3839, -0.2950, 	0.7474, -2.4718, -0.1135},  // Копейка.         404
	{0.8982, 2.0776, -0.1150, 	0.8396, -2.2045, 0.1465},  	// Lancer.          405
	{1.0167, 2.6293, -0.2490, 	1.0836, -2.2359, -0.2555},  // Самосвал.        406
	{0.8397, 4.1220, 0.0690, 	1.0110, -3.4536, 0.0745},   // Пожарная.        407
	{0.9454, 4.8318, -0.1550, 	0.8568, -4.0763, -0.4635},  // Мусорная.		408
	{0.9461, 3.1533, -0.2990, 	0.9256, -3.2056, -0.3195},  // Газель Чайка     409
	{0.8387, 2.0201, -0.0670, 	0.6980, -2.1634, 0.1525},   // Eclipse 			410
	{0.6806, 1.7640, -0.1230, 	0.7051, -1.8172, 0.0485},   // Calina 			411
	{0.7000, 2.2000, 0.00000, 	0.7000, -2.3999, 0.0000}, 	// Машина			412
	{1.0999, 3.0999, -0.2999, 	0.7999, -3.8999, 0.2000},   // ? 413
	{1.0811, 5.9582, -0.3710, 	1.1807, -5.8492, -0.3115},  // Автобус 			414
	{0.8517, 2.5028, -0.2198, 	0.7719, -2.3650, 0.0355}, 	// Гепард   		415
	{0.9646, 2.9040, 0.0442, 	1.1602, -3.7322, -0.4525}, 	// Cкорая 			416
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0}, 					// Верт. 			417
	{0.9669, 2.3728, -0.2278, 	0.8161, -2.6325, -0.5885}, 	//  Фунгон. 		418
	{0.7152, 2.5872, -0.4278, 	0.9738, -3.0186, -0.3725}, 	//                  419
	{1.0000, 2.3999, -0.1999,	0.7999, -2.6999, 0.0000}, 	// Машина.			420
	{0.9061, 2.5242, -0.1318, 	0.8889, -2.8051, -0.1885}, 	//                  421
	{0.700000, 2.399999, -0.100000, 	0.9000, -2.3000, 0.2000}, 	// Машина			422
	{-0.7564, 2.2392, 0.0605, 	-0.8352, -2.2156, 0.0243}, 	// Фунгон с морож.	423
	{-0.6049, 1.4494, 0.0165, 	-0.7254, -1.4067, 0.0416},  // Cтарин.          424
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0}, 					// Апач.    		425
	{1.1000, 3.0999, -0.1999, 	1.0000, -3.0999, -0.1999},  // ? 426
	{-0.8050, 2.7044, -0.5575, 	-1.0083, -2.2142, -0.2339}, // Газель. Милиця   427
	{-0.8583, 3.0743, -0.0666, 	-1.0421, -2.3373, -0.1112}, // Газель. ВТБ.     428
	{0.8000, -2.5999, -0.2999, 	0.7999, 2.2999, -0.3999},   // ? 429
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Police лодка.    430
	{0.799999, 4.799997, 0.099999, 	0.799999, -5.399997, -0.099999},     // ? 431
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Tank.            432
	{1.0811, 2.9113, 0.1365, 	1.0266, -4.0192, -0.0790},  // Грузовик.        433
	{0.6738, 1.9053, -0.1354, 	0.4800, -1.9836, -0.0657},  // Гоночная.        434
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Прицеп.          435
	{0.8658, 2.1427, -0.0480, 	0.7814, -2.3889, 0.1542},   // Mark II.         436
	{0.899999, 6.299996, 0.100000, 	 1.000000, -5.599997, -0.299999},     // ? 437
	{0.900000, 2.399999, -0.200000, 	0.800000, -2.699999, 0.000000},     // ? 438
	{0.799999, 2.200000, -0.400000, 	 0.699999, -2.299999, -0.100000},     // ? 439
	{0.9480, 2.5441, -0.2697, 	0.9012, -2.5901, 0.0934},   // Фунгон 24/7.     440
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Радио машинка.   441
	{0.7104, 1.8984, 0.5121, 	0.7861, -2.0296, 0.1542},   // Антиквариат.     442
	{1.0789, 5.8264, -0.9740, 	1.4699, -6.9073, -0.7295},  // Грузовик.        443
	{1.1237, 2.6920, 0.6998, 	1.1391, -3.0579, 0.7799},   // Monster. 		444
	{0.899999, 2.499999, -0.199999, 	0.800000, -2.699999, 0.000000},     // ? 445
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Лодка.           446
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вертолёт.        447
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Мопед.           448
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},						// Вагон.           449
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Прицеп.          450
	{0.9677, 1.9273, -0.1235, 	0.8993, -2.3842, -0.0189},  // Turismo.         451
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Лодка.           452
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Лодка.           453
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Катер.           454
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Трактор.         455
	{0.8909, 3.2139, -0.3657, 	0.9794, -3.2451, -0.1315},  // Грузовик. Хлеб   456
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Гольф.           457
	{0.9298, 2.5192, -0.1805, 	0.8285, -2.7884, -0.0099},  // Волга. Универсал 458
	{0.9390, 2.5601, -0.0973, 	0.8928, -2.5741, 0.1485},   // Фургон.          459
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Cамолёт.         460
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Мотоцикл.        461
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Мопед.           462
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Freeway.         463
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Радиосамолёт.    464
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Радиоверталёт.   465
	{0.8181, -2.5583, 0.3064, 	0.7801, 2.3538, 0.1151},    // BMW.             466
	{0.799999, 2.299999, -0.199999, 0.799999, -2.699999, -0.200000},		// ? 467
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Мотоцыкл.        468
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вертолёт.        469
	{0.8605, 2.5366, -0.0809, 	0.8652, -2.7810, -0.0426},   // Военный джип.    470
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Квадроцыкл.      471
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Лодка.           472
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Лодка.           473
	{0.799999, 2.200000, -0.299999, 0.799999, -2.699999, -0.200000},		// ? 474
	{0.900000, 2.399999, 0.200000, 	 0.900000, -2.200000, 0.200000},		// ? 475
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Cамолёт.         476
	{0.8101, 2.6794, -0.1954, 	1.0797, -2.6526, 0.0725},   // ZR.              477
	{0.799999, 2.299999, -0.299999, 	0.699999, -2.299999, -0.100000},		// ? 478
	{0.900000, 2.399999, -0.199999, 	0.800000, -2.799999, 0.000000},		// ? 479
	{0.6045, 2.2636, -0.4258, 	0.8891, -2.3177, -0.1146},  // Porshe.          480
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Велосипеп.       481
	{0.8928, 2.4099, -0.3243, 	0.8561, -2.5419, -0.0823},  // Фургон.          482
	{1.0461, 3.2471, -0.2431, 	0.9761, -3.2825, -0.0937},  // Автобус.         483
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         484
	{0.900000, 2.399999, -0.199999, 	0.800000, -2.799999, 0.000000},		// ? 485
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Бульдозер.       486
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вертолёт.        487
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вертолёт.        488
	{0.8251, 1.9680, 0.0280, 	0.7985, -2.0727, 0.0670},   // Нива.            489
	{1.1078, 3.1374, 0.0546, 	1.1214, -3.0801, 0.1753},   // Джип 4х.         490
	{0.8605, 2.5366, -0.0809, 	0.8652, -2.7810, -0.0426},  // Машина.          491
	{0.8312, -2.3956, -0.1515, 	0.8074, 1.9991, -0.2266},   // Лада.            492
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Катер.           493
	{0.8512, 2.3560, -0.1965, 	0.8410, -2.8379, 0.1601},   // Гоночная.        494
	{1.0777, 2.3625, -0.0041, 	1.1147, -2.0901, -0.0215},  // 4х4.             495
	{0.7316, 1.8223, 0.0429, 	0.7479, -1.8979, 0.0552},   // Лада.            496
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Полицейский верт 497
	{0.799999, 4.499998, -0.299999, 	0.799999, -5.899996, -0.200000},		// ? 498
	{0.7625, 2.3629, 0.6702, 	0.8094, -3.1016, 0.2935},   // Грузовик. Хлеб.  499
	{0.800000, 1.700000, -0.199999, 	0.699999, -2.000000, 0.000000},		// ? 500
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Радио верт.      501
	{0.8485, 2.3616, -0.0276, 	0.8448, -2.8202, 0.0133},   // Urus.            502
	{0.8485, 2.3616, -0.0276, 	0.8448, -2.8202, 0.0133},   // Гоночная.        503
	{0.9849, 2.6197, 0.1298, 	1.0312, -2.7955, 0.0475},   // Гоночная.        504
	{1.1035, 2.5661, 0.0403, 	1.1305, -2.6339, 0.1660},   // Джип.            505
	{0.7657, 2.1865, -0.3227, 	0.8985, -2.3093, -0.0042},  // Гоночная.        506
	{1.000000, 2.499999, -0.200000, 	0.800000, -2.799999, 0.000000},		// ? 507
	{0.700000, 2.399999, -0.100000, 	0.9000, -2.3000, 0.2000},		// ? 508
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Велосипед.       509
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Велосипед.       510
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         511
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         512
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         513
	{1.0741, 3.8903, -0.3778, 	1.1492, -2.3717, -0.2613},  // Фура.            514
	{1.100000, 2.499999, -0.499999, 	1.000000, 0.700000, 0.700000},		// ? 515
	{0.8001, -2.3524, 0.1141, 	0.7745, 2.0740, 0.0346},    // Лада Самара.     516
	{1.000000, 2.499999, -0.399999, 	0.899999, -2.600000, 0.000000},		// ? 517
	{0.7849, 2.6592, -0.4500, 	0.6475, -2.8106, -0.1108},  // Фургон. Мебель.  518
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         519
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Гидра.           520
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Мотоцыкл.        521
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // NRG-500.         522
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Гаи мотоцыкл.    523
	{0.9190, 3.6547, -0.0326, 	1.2320, -3.8818, -1.0640},  // Грузовик. Цемент.524
	{0.8426, 2.8973, 0.1426, 	0.9273, -2.9294, -0.1562},  // Тягач.           525
	{1.0242, 2.3248, 0.0991, 	1.0707, -2.7821, 0.0920},  // MB G63.           526
	{0.9007, 2.4634, 0.0120, 	0.9374, -2.2677, 0.0969},   // Машина.          527
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Cтранная машина. 528
	{1.0205, 2.4976, 0.0918, 	1.0430, -2.5857, 0.2106},   // Машина.          529
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Подъемник.       530
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Трактор.         531
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Комбайн.         532
	{0.9735, 2.3561, 0.0509, 	0.9831, -2.5332, 0.0315},   // Машина.          533
	{1.0169, 2.9145, -0.1830, 	0.8174, -2.7484, -0.0607},  // Машина.          534
	{0.8078, 2.4649, -0.1943, 	0.9428, -2.5686, -0.0805},  // Машина.          535
	{0.8571, 2.3833, -0.1310, 	0.8623, -3.0857, -0.0822},  // Машина.          536
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Поезд.           537
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вагон.           538
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // ЗАБЫЛ.           539
	{0.7519, 2.3848, -0.2110, 	0.7311, -2.4572, 0.1341},   // Волга.           540
	{0.8852, 1.9372, 0.1732, 	0.7855, -2.1972, 0.1014},   // Пуля.            541
	{0.700000, 1.800000, 0.100000, 	0.700000, -1.700000, 0.000000},		// ? 542
	{0.800000, 2.200000, -0.399999, 	 0.700000, -2.399999, -0.099999},		// ? 543
	{1.200000, 2.699999, 0.000000, 	0.699999, -4.099998, -0.100000},		// ? 544
	{0.6334, 1.9336, -0.0403, 	0.4401, -1.7684, -0.0921},  // Cтарье.          545
	{ 0.699999, -2.300000, -0.000000, 	0.799999, 2.199999, -0.100000},		// ? 546
	{0.699999, 2.299999, -0.500000, 	0.699999, -2.300000, -0.200000},		// ? 547
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вертолёт.        548
	{0.699999, 1.799999, -0.100000, 	0.699999, -1.800000, -0.000000},		// ? 549
	{1.0223, 2.5652, -0.1738, 	1.0163, -2.6462, -0.1264},  // Машина.          550
	{0.8127, 2.6567, 0.2674, 	0.8417, -2.6835, 0.5453},   // Волга.           551
	{1.0758, 3.0378, 0.4023, 	0.9906, -2.9844, 0.6386},   // Служебная.       552
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         553
	{0.699999, 2.399999, -0.100000, 	0.899999, -2.400000, -0.200000},		// ? 554
	{0.799999, 1.699999, -0.000000, 	0.699999, -1.800000, -0.100000},		// ? 555
	{0.9781, 2.4783, 0.5467, 	1.1362, -2.9044, 0.7768},   // Monster.         556
	{1.1668, 2.4765, 0.7270, 	1.1472, -2.8016, 0.7447},   // Monster.         557
	{0.9203, 2.1244, 0.0990, 	0.8988, -2.3803, 0.2835},   // Машина.          558
	{0.7797, 2.2841, -0.2301, 	0.8008, -2.1946, 0.1553},   // Сelica.          559
	{0.9077, 2.5125, -0.2459, 	0.9933, -2.1424, 0.1451},   // Sultan.          560
	{ 0.699999, -2.300000, -0.100000, 	 0.799999, 2.199999, -0.400000},		// ? 561
	{0.9062, 2.3761, 0.0178, 	0.8630, -2.2514, 0.1598},   // Elegy.           562
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вертолёт.        563
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Радиотанк.       564
	{0.799999, 1.999999, -0.200000, 	0.799999, -2.300000, -0.200000},		// ? 565
	{0.7122, 2.2432, -0.0281, 	0.7033, -1.9444, -0.0394},  // Жигули.          566
	{1.0014, 2.9338, -0.1514, 	0.9960, -2.8416, -0.1343},  // Impala.          567
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Пустынная.       568
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вагон.           569
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вагон.           570
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Картинг.         571
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Машина АЕРО.     572
	{0.8138, 3.0738, -0.3842, 	0.9469, -3.2683, -0.3674},  // Грузовик.        573
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Уборщик улиц.    574
	{0.699999, -2.300000, -0.200000, 	 0.699999, 2.299999, -0.200000},		// ? 575
	{ 0.799999, 2.299999, -0.500000, 	0.699999, -2.300000, -0.100000},		// ? 576
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         577
	{ 0.899999, 3.299998, 0.299999, 	1.100000, -4.299998, -0.000000},		// ? 578
	{1.0242, 2.3248, 0.0991, 	1.0707, -2.7821, 0.0920},   // Джип. РМ G500    579
	{0.8446, 2.7066, -0.1429, 	0.9260, -2.8872, -0.0797},  // Чайка.           580
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Мотоцыкл.        581
	{0.9492, 2.4712, -0.0658, 	0.8918, -3.3948, 0.1645},   // SAN NEWS.        582
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // АЕРО машина.     583
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Прицеп.          584
	{0.9905, 2.7646, 0.1233, 	0.9147, -2.9475, 0.1830},   // Машина.          585
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Мотоцыкл.        586
	{0.9726, 2.1160, -0.2883, 	1.0642, -2.5097, 0.1325},   // Машина.          587
	{ 0.799999, 4.899997, -0.000000, 	 0.799999, -5.299997, 0.099999},		// ? 588
	{0.7903, 2.3983, 0.1882, 	0.9199, -2.2523, 0.3851},   // Машина.          589
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Вагон.           590
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Прицеп.          591
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         592
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Самолёт.         593
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Горшок.          594
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Лодка.           595
	{0.8181, -2.5583, 0.3064, 	0.7801, 2.3538, 0.1151},		// M5 E60 ДПС.  596
	{0.799999, 2.099999, -0.000000, 	0.799999, -2.400000, 0.099999},		// ? 597
	{0.8102, 2.1999, 0.0302, 	0.8074, -2.0686, 0.0204},   // Skoda Octavia ДПС.598
	{0.6757, 2.1592, -0.2786, 	0.7753, -1.9127, -0.1820},  // Бусик.           599
	{0.8090, 2.1822, 0.0305, 	0.7525, -2.4608, 0.1666},   // Машина.          600
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // БТР.             601
	{1.0584, 2.1119, 0.0000, 	1.0458, -2.3461, 0.0822},   // Машина.          602
	{0.9128, 2.6587, -0.1272, 	0.8447, -2.6172, -0.0929},  // Машина.          603
	{0.9333, 2.6362, 0.1363, 	1.0203, -2.8111, 0.0303},   // Машина.          604
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Ракета.          605
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Прицеп.          606
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Прицеп.          607
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Лестница.        608
	{0.899999, 2.999998, 0.199999, 	0.799999, -3.399999, -0.400000},		// ? 609
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0},                     // Для посева.      610
	{0.0, 0.0, 0.0, 	0.0, 0.0, 0.0}	                    // Прицеп.          611
};
//------------------------------------------------------------------------------
enum VehControl
{
	vLeftBlink,
	vRightBlink,
	vAvary,
	vOccupied,
	Float:v_velocity [ 2 ],
	Float:v_engine_boost,
	Float:v_brake_boost,
	Float:v_stability_boost,
	Float:v_old_speed,
	Float:v_old_zangle,
	v_pt_engine [ 5 ],
	v_pt_brake [ 5 ],
	v_pt_stability [ 5 ],
	Float:v_health

}
new VehInfos[MAX_VEHICLES][VehControl];
new Float:VehMileage[MAX_VEHICLES];
//------------------------------------------------------------------------------
new Shot[MAX_PLAYERS];
//------------------------------------------------------------------------------
new rodEnable[MAX_PLAYERS];
new rodRaised[MAX_PLAYERS];
//------------------------------------------------------------------------------
enum iInv
{
	iName[32],
	iGG,
	iDrop,
	iStek,
	iLom,
}
new Item[MAX_ITEM][iInv];
new m_item;
new PlayerItem1[MAX_PLAYERS][MAX_SLOT];
new PlayerItem2[MAX_PLAYERS][MAX_SLOT];
new PlayerItem3[MAX_PLAYERS][MAX_SLOT][16];
new PlayerVesItem[MAX_PLAYERS];
new PlayerUseList[MAX_PLAYERS][MAX_LIST+1];
new GivePlayer[MAX_PLAYERS][5];
stock AddItem(id,name[],ves,drop,stek,lom)
{
	m_item=id;
	format(Item[m_item][iName],32,"%s",name);
	Item[m_item][iGG]=ves;
	Item[m_item][iDrop]=drop;
	Item[m_item][iStek]=stek;
	Item[m_item][iLom]=lom;
	return 1;
}

stock LoadAddItem()
{
	AddItem(1,"Кастет",108,1,0,100);
	AddItem(2,"Клюшка для гольфа",350,1,0,100);
	AddItem(3,"Дубинка",350,1,0,100);
	AddItem(4,"Нож",150,1,0,100);
	AddItem(5,"Бита",550,1,0,100);
	AddItem(6,"Лопата",1800,1,0,100);
	AddItem(7,"Кий",650,1,0,100);
	AddItem(8,"Катана",82,1,0,100);
	AddItem(9,"Бензопила",3500,1,0,100);
	AddItem(10,"Самотык 1",260,1,0,100);
	AddItem(11,"Самотык 2",260,1,0,100);
	AddItem(12,"Самотык 3",260,1,0,100);
	AddItem(13,"Самотык 4",260,1,0,100);
	AddItem(14,"Цветы",240,1,0,100);
	AddItem(15,"Трость",400,1,0,100);
	AddItem(16,"Граната",500,1,1,100);
	AddItem(17,"Газ граната",500,1,1,100);
	AddItem(18,"Молотов",600,1,1,100);
	AddItem(19,"Colt М1911",960,1,0,100);
	AddItem(20,"Colt М1911 с глушителем",1200,1,0,100);
	AddItem(21,"Пистолет Макарова",1100,1,0,100);
	AddItem(22,"Remington 870",3200,1,0,100);
	AddItem(23,"Обрез",2100,1,0,100);
	AddItem(24,"Franchi SPAS 12",4000,1,0,100);
	AddItem(25,"Ингрэм мак",2800,1,0,100);
	AddItem(26,"АКС-74у",2540,1,0,100);
	AddItem(27,"АК 74",4300,1,0,100);
	AddItem(28,"АК 74м",2520,1,0,100);
	AddItem(29,"Тес 9",2300,1,0,100);
	AddItem(30,"Иж 72",3150,1,0,100);
	AddItem(31,"US army m24",5490,1,0,100);
	AddItem(32,"РПГ",2900,1,0,100);
	AddItem(33,"Ракетная установка",3400,1,0,100);
	AddItem(34,"Огнемет",2500,1,0,100);
	AddItem(35,"M134 Minigun",4000,1,0,100);
	AddItem(36,"Спрей",250,1,1,100);
	AddItem(37,"Огнетушитель",6500,1,0,100);
	AddItem(38,"Фото-камера",10,1,1,100);
	AddItem(39,"Парашют",1900,1,0,100);
	AddItem(40,"Плеер MP3",50,1,1,100);
	AddItem(41,"Наручные часы",120,1,0,100);
	AddItem(42,"Патроны",6,1,1,100);
	AddItem(43,"Жезл",300,1,0,100);
	AddItem(44,"Наркотики",10,1,1,100);
	AddItem(45,"Маска",150,1,0,100);
	AddItem(46,"Сигареты",10,1,1,100);
	AddItem(47,"Телефон",350,1,0,100);
	AddItem(48,"Набор инструментов",2980,1,1,100);
	AddItem(49,"Канистра 10 л.",3200,1,1,100);
	//Еда
	AddItem(50,"Маленькая пицца",110,1,1,100);
	AddItem(51,"Бургер",112,1,1,100);
	AddItem(52,"Кусочки курицы",111,1,1,100);
	AddItem(53,"---",132,1,1,100);
	AddItem(54,"---",379,1,1,100);
	AddItem(55,"Средняя пицца",120,1,1,100);
	AddItem(56,"Большой бургер",122,1,1,100);
	AddItem(57,"Куринные ножки",121,1,1,100);
	AddItem(58,"---",420,1,1,100);
	AddItem(59,"---",100,1,1,100);
	AddItem(60,"Большая пицца",140,1,0,100);
	AddItem(61,"Гамбургер",142,1,0,100);
	AddItem(62,"Куринная ножка",141,1,0,100);
	AddItem(63,"---",450,1,0,100);
	AddItem(64,"---",450,1,0,100);
	AddItem(65,"Пицца в коробке",160,1,0,100);
	AddItem(66,"Гамбургер в упаковке",162,1,0,100);
	AddItem(67,"Курицу в коробке",161,1,0,100);
	AddItem(68,"---",480,1,0,100);
	AddItem(69,"Металл",6,1,1,100);
	AddItem(70,"Спранк",150,1,1,100);
	AddItem(71,"Бронежилет",1000,1,1,100);
	AddItem(72,"Ящик с патронами",500,1,1,100);
	AddItem(73,"---",380,1,0,100);
	AddItem(74,"---",380,1,0,100);
	AddItem(75,"---",380,1,0,100);
	AddItem(76,"---",280,1,0,100);
	AddItem(77,"---",58,1,0,100);
	AddItem(78,"---",48,1,0,100);
	AddItem(79,"---",38,1,0,100);
	AddItem(80,"Чай без сахара",130,1,0,100);
	AddItem(81,"Чай с сахаром",131,1,0,100);
	AddItem(82,"Кофе",250,1,0,100);
	AddItem(83,"---",250,1,0,100);
	AddItem(84,"---",250,1,0,100);
	AddItem(85,"---",53,1,0,100);
	AddItem(86,"---",53,1,0,100);
	AddItem(87,"Молоко",460,1,0,100);
	AddItem(88,"Кефир",420,1,0,100);
	AddItem(89,"Сметана",120,1,0,100);
	AddItem(90,"Йогурт",200,1,0,100);
	AddItem(91,"[Подарок] Машина",10,1,0,100);
	AddItem(92,"[Подарок] Деньги",10,1,0,100);
	AddItem(93,"[Подарок] Кредиты",10,1,0,100);
	AddItem(94,"[Подарок] VIP Статус",10,1,0,100);
	AddItem(95,"[Подарок] Военный билет",10,1,0,100);
	AddItem(96,"[Подарок] Подача новости",10,1,0,100);
	AddItem(97,"[Подарок] x2 PayDay на 1 час",10,1,0,100);
	AddItem(98,"[Подарок] x2 PayDay на 2 час",10,1,0,100);
	AddItem(99,"[Подарок] x2 PayDay на 3 час",10,1,0,100);
	AddItem(100,"Вода в бутылке",500,1,1,100);
	AddItem(101,"Спрайт",500,1,1,100);
	AddItem(102,"Кока-кола",500,1,1,100);
	AddItem(103,"Квас",850,1,1,100);
}

//Переменные
new Dvers[24];// двери ворота мосты
new SDvers[24];//Статус двери ворота мосты
new spawn[4];
new Pickup[30];
// сис-ма мп
new Teleport;
new Float:TeleportFloat[3];
new TeleportInfo[2];
//8-сто|
new Conday[3];
new Float:SalonRandSpawn[][4] =
{
	{2521.8218,-760.1957,12.1078,0.0367},
	{2518.4326,-760.0706,12.1077,0.0367},
	{2515.0110,-760.1274,12.1077,0.0367},
	{2511.8374,-759.9141,12.1076,0.0367},
	{2508.3030,-760.2792,12.1074,0.0367},
	{2505.0840,-759.9706,12.1075,0.0367},
	{2501.7397,-760.0683,12.1079,0.0367},
	{2498.3206,-760.2360,12.1077,0.0367},
	{2494.9585,-760.3247,12.1074,0.0367},
	{2491.1396,-759.9563,12.1079,0.0367},
	{2487.7979,-759.9161,12.1076,0.0367},
	{2484.2512,-759.7552,12.1082,0.0367},
	{2481.0176,-759.7552,12.1082,0.0367},
	{2477.4648,-759.7552,12.1082,0.0367},
	{2474.2815,-759.7552,12.1082,0.0367},
	{2470.5710,-742.0692,12.1082,0.0367},
	{2473.8875,-742.0692,12.1082,0.0367},
	{2477.2051,-742.0692,12.1082,0.0367},
	{2480.6777,-742.0692,12.1082,0.0367},
	{2484.2351,-742.0692,12.1082,0.0367},
	{2487.8069,-742.0692,12.1082,0.0367},
	{2491.2432,-742.0692,12.1082,0.0367},
	{2494.6267,-742.0692,12.1082,0.0367},
	{2497.9360,-742.0692,12.1082,0.0367},
	{2501.3577,-742.0692,12.1082,0.0367},
	{2505.0178,-742.0692,12.1082,0.0367},
	{2508.3718,-742.0692,12.1082,0.0367},
	{2511.9187,-742.0692,12.1082,0.0367},
	{2515.2317,-742.0692,12.1082,0.0367},
	{2518.6863,-742.0692,12.1082,0.0367},
	{2521.6619,-742.0692,12.1082,0.0367},
	{2520.0417,-716.9178,12.0969,271.3023},
	{2520.0417,-713.2958,12.0969,271.3023},
	{2520.0417,-709.3571,12.0969,271.3023},
	{2520.0417,-705.5837,12.0969,271.3023},
	{2520.0417,-701.7056,12.0969,271.3023},
	{2520.0417,-697.9837,12.0969,271.3023},
	{2520.0417,-693.9258,12.0969,271.3023},
	{2520.0417,-690.2231,12.0969,271.3023},
	{2520.0417,-686.2764,12.0969,271.3023},
	{2520.0417,-682.3104,12.0969,271.3023},
	{2520.0417,-678.4883,12.0969,271.3023},
	{2520.0417,-674.7385,12.0969,271.3023},
	{2520.0417,-670.8956,12.0969,271.3023},
	{2520.0417,-667.0713,12.0969,271.3023}
};

new bool:Baton[MAX_PLAYERS] = false;

static const stock player_weapons[16] = {16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34};

enum arendInfo
{
	aID,            // - Unknown -
	aPlayerID,      // - Unknown -
	aModel,			// Model
	aCost,			// Цена
Float:aPos_X,	// Кордината X
Float:aPos_Y,	// Кордината Y
Float:aPos_Z,	// Кордината Z
Float:aPos_A,	// Угол поворота
	aColor_1,		// Цвет 1
	aColor_2		// Цвет 2
};

new ArendInfo[][arendInfo] =
{//ID, Цена, Координаты X, Y, Z, Цвет 1, Цвет 2
//arz
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 400, 9000, -365.4289,379.6040,1002.0247,-70.8000,0,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 415, 9000, -359.9133,385.5149,1002.0247,-96.0600,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 492, 10000, 1767.1710,2298.7424,15.9770,118.6001,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 551, 11000, 1766.9067,2302.8591,15.4082,123.3867,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 477, 12000, 1756.9082,2275.3210,15.7153,307.6452,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 602, 13000, 1756.6948,2280.6196,15.7877,313.6165,1,0},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 585, 14000, 1756.8026,2285.9688,15.5668,313.6661,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 550, 15000, 1756.6821,2291.6360,15.8238,310.1870,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 560, 10000, 1756.3522,2297.1458,15.6445,312.9106,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 579, 11000, 1756.8947,2301.7400,15.9449,308.8345,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 411, 11000, 1757.2424,2306.8218,15.8285,299.4370,1,1},//посл.машина автобаза
	/*{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 469, 20000, 1715.5894,1736.4967,15.2993,180.1004,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 487, 19000, 1761.5638,1740.2681,15.5192,180.1004,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 512, 19500, 1745.9329,1761.4584,15.6068,164.1289,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 513, 19500, 1725.7324,1756.4557,15.8791,215.6779,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 593, 35500, 1676.0579,1736.7913,16.6114,180.3325,1,1},//посл.самолет мирный*/
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 446, 35500, 2837.7368,-1520.1698,-0.4801,270.8655,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 453, 35500, 2836.2080,-1553.5626,-0.3515,270.8655,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 45500, 2855.1223,-1528.8856,0.1892,270.8655,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 473, 35500, 2843.6614,-1534.3116,-0.2298,270.8655,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 493, 35500, 2845.5417,-1538.6682,-0.0976,270.8655,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 454, 45500, 2855.1223,-1545.0531,0.0797,270.8655,1,1},//Конец лодок
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 2773.6921,-2450.5662,21.4426,81.5987,4,1},//1 скутер спавн
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 2773.7434,-2453.4941,21.4430,86.5518,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 2773.7034,-2456.7500,21.4429,86.0760,2,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 2773.5559,-2460.1941,21.4419,91.8023,3,1},//Yj 2018
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 162.3462,803.9603,11.5653,342.3939,4,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 160.7957,804.4875,11.5651,341.9006,6,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 159.3052,805.1667,11.5654,342.7124,0,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 157.8300,805.6387,11.5656,342.9879,1,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 156.2254,806.2215,11.5652,341.6134,2,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 154.8357,806.7422,11.5651,340.5568,3,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 153.3859,807.2234,11.5651,341.4451,4,1},
	{INVALID_VEHICLE_ID, INVALID_PLAYER_ID, 462, 50, 151.7678,807.8463,11.5655,343.5265,6,1} // последний скутер на спавне
};

enum r_info
{
	r_id,
	r_name[24],
	r_type,
	r_speed,
Float:r_x,
Float:r_y,
Float:r_z,
Float:r_a,
	r_object,
Text3D:r_label,
	r_area,
}
new RI[MAX_RADARS][r_info];
new TOTALRADAR;

new Text:show_speed[3];
new PlayerText:radar_speed[MAX_PLAYERS];

new doubling_exp;
new doubling_donate;
new doubling_job;
new pickplayers[2];

enum VGUN_DATA
{
	vGunArea,
	vGunGunAmount,
	vGunAmmo,
	vGunNarko,
Text3D:vGunText,
bool:vGunLoading,
bool:vGunUnloading,
	vGunPickup
}
new gVehicleGun[MAX_VEHICLES][VGUN_DATA];

new Iterator:VehicleGun<MAX_VEHICLES-1>;

new
admin_attempt[MAX_PLAYERS],
admin_ban_time[MAX_PLAYERS],
admin_check_time[MAX_PLAYERS]
;

// iterators
new Iterator:Admins<MAX_PLAYERS>;
new Iterator:Helpers<MAX_PLAYERS>;

new radar_time[MAX_PLAYERS];
	
static const stock VehicleNames[][] = {
	"BMW X7 G07","ИЖ-27151","Lexus IS300","ЗИЛ-133","Жигули","Audi RS6","ЗИЛ-ММ3","Firetruck","Trashmaster"," Bentli300","TOYOTA CAMRY V6","VW Touareg 2022",
	"ГАЗ","M-B Sprinter","ЛиАЗ-5256","Audi a4","Скорая","Leviathan","Moonbeam","Esperanto","Mersedes E55","Mersedes Sl 600","УАЗ-3741","Mr Whoopee","OKA",
	"Hunter","Mersedes Maybach","Газель Sprinter","МЧС","BMW X5M","Predator","ЛиАЗ-677М","Rhino","Камаз 6350","Hotknife","Trailer","BMW 330i G20","Ikarus 260","ГАЗ-2402",
	"Жигули","Rumpo","RC Bandit","Romero","Packer","Monster","Toyota Camry 1","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Pantera Ftype","Speeder",
	"Reefer","Tropic","Flatbed","ГАЗ-3309","Caddy","Lada 2109","Berkley's RC Van","Skimmer","PCJ-600","Скутер","Freeway","RC Baron","RC Raider",
	"BMW M5 E60","Москвич","Sanchez","Sparrow","УАЗ-3151","Quad","Coastguard","Dinghy","ГАЗ-21И","Toyota 200","Rustler","BMW 750i","ИЖ-27151","Honda R",
	"AUDI A7","BMX","Burrito","ПАЗ-3205","Marquis","ГАЗ 2402","Dozer","Maverick","News Chopper","Lada 4x4","Suburban","Lada Samara","Lada 1500",
	"Jetmax","BMW i8","Mersedes AMG4x4","2108","Police Maverick","Boxville","ГАЗ-53","УАЗ-69","RC Goblin","Rolls-Royce-Cullinan","Lamborghini Urus",
	"Bloodring Banger","Audi Q7","BMW X3","Mersedes W116"," УАЗ-452","Велик","Горный велик","Beagle","Cropdust","Stunt","КАМАЗ-54115","КАЗ-608В",
	"ВАЗ 21099","РАФ-2203"," ЕРАЗ-672","Shamal","Hydra","ИЖ Планета 5","NRG-500","Урал","Cement Truck","Эвакуатор","HUNDAY","Audi 120","FBI Truck",
	"ВАЗ2106","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Lada Priora","Mersedes GTR","ВАЗ 2424",
	"ИЖ-414","Firetruck","Москвич-400","Москвич-2125","Москвич-2140","Cargobob","ЗАЗ-968А","Mitsubishi Lanser","ГАЗ 31105","Utility","Nevada","УАЗ-3303","ЗАЗ-968М","Monster A",
	"Monster B","KIA RIO","Toyota Supra","AUDI A4","ИЖ Москвич-427","Nissan Skyline","Raindance","RC Tiger","ВАЗ 2108","ВАЗ 2104","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","ГАЗ-М20","Москвич-408","AT-400","ЗИЛ-157","Gelandewagen","ГАЗ-13 Чайка","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Восход 3М","Euros","ЛиАЗ-677","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","ГАЗ-2401","ВАЗ 2115",
	"Skoda Octavia","УАЗ 469","ИЖ-2717","S.W.A.T.","BMW III","Phoenix","BMW M5 F90","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","ЛАЗ-699Р","Farm Plow","U Trailer" };

#define SHOP_OBJECTS 12
new shop_name_sell [SHOP_OBJECTS] [70] = {"Телефон","Фотоаппарат","Аптечки для дома","Цветы","Часы","Маска","Сигареты","Газировка","Аптечка","MP3 Плеер","Скрепки","Магнитофон"};
new shop_price_sell [SHOP_OBJECTS] = {1000,150,100,500,300,300,500,500,200,130,50,1500};
new shop_prod_sell [SHOP_OBJECTS] = {10,5,25,35,25,25,25,15,5,5,5,10};

static const stock gEateryCosts[EAT_OBJECTS] = {1,2,3,4};
static const stock gEateryProd[EAT_OBJECTS] = {1,2,3,4};
static const stock gEateryNames1[EAT_OBJECTS][25] = {
	"Маленькая пицца",
	"Средняя пицца",
	"Большая пицца",
	"Пицца в коробке"
};
static const stock gEateryNames2[EAT_OBJECTS][25] = {
	"Бургер",
	"Большой бургер",
	"Гамбургер",
	"Гамбургер в упаковке"
};
static const stock gEateryNames3[EAT_OBJECTS][25] = {
	"Кусочки курицы",
	"Кусок куринной ножки",
	"Куринная ножка",
	"Курица в коробке"
};

static const stock gBarCost[BAR_OBJECTS] = {50,100,125,75,100,300,400};
static const stock gBarProd[BAR_OBJECTS] = {1,2,3,4,5,6,7};
static const stock gBarNames[BAR_OBJECTS][25] = {
	"Вода",
	"Сода",
	"Кока-кола",
	"Пиво",
	"Водка",
	"Коньяк",
	"Абсент"
};

static stock PhoneNumbers[MAX_PLAYERS][8];

static const stock Job_Names[8][32] = {
	"Нет",
	"Водитель маршрутки",
	"Таксист",
	"Развозчик товаров",
	"Развозчик топлива",
	"Автомеханик",
	"Дальнобойщик",
	"Инкасатор"
};

new Text:promocode_td[37];
new Text:MpDraw[3];

new PlayerText: copter_speed[7][MAX_PLAYERS];

new Text:TDEditor_INTERACTION_GLOBAL[59];
new PlayerText:TDEditor_INTERACTION_PLAYER[MAX_PLAYERS][10];

enum
E_STRCUT_COPTER_MARKET
{
	copID,
	copCost
};

new copter_cars[3][E_STRCUT_COPTER_MARKET] =
{
	{417, 20000000},
	{447, 25000000},
	{487, 30000000}
};

static
Float: coord_copter_spawn[][3] =
{
	{1663.4065, 1667.7958, 15.4596},
	{1682.7635, 1666.4777, 15.4596},
	{1700.4663, 1666.4150, 15.4596},
	{1719.6326, 1666.7112, 15.4596},
	{1738.7325, 1666.6418, 15.4596},
	{1758.0618, 1666.8359, 15.4596},
	{1776.9763, 1666.5316, 15.4596},
	{1796.0586, 1666.1268, 15.4596},
	{1813.7842, 1665.9688, 15.4596},
	{1834.8676, 1666.3954, 15.4596}
};

new MafiaTotalBizz[MAX_FRACTIONS];

new gArmyWarehouse[2];
new Text3D:gArmyWarehouseText;

static const stock TeamColors[] =
{
	NONE_COLOR,
	MAYOR_COLOR,
	LSPD_COLOR,
	SFPD_COLOR,
	FBI_COLOR,
	HOSPITAL_COLOR,
	LIC_COLOR,
	YAKUZA_COLOR,
	CORONOS_COLOR,
	RIFA_COLOR,
	SFNEWS_COLOR,
	AZTECAS_COLOR,
	VAGOS_COLOR,
	ARMY_COLOR,
	0xFFFFFFAA,
	0xFFFFFFAA,
	LCN_COLOR,
	RM_COLOR,
	0xFFFFFFAA,
	LSNEWS_COLOR,
	0xFFFFFFAA,
	0xFFFFFFAA,
	LVPD_COLOR,
	0xFFFFFFAA,
	0xFFFFFFAA,
	0xFFFFFFAA,
 	0xFFFFFFAA
};

enum
E_AREA_PICKUP_INFORMATION
{
	area_id,
Float: g_pos_area_x,
Float: g_pos_area_y,
Float: g_pos_area_z,
	g_area_pickup_word,
Float: g_set_area_x,
Float: g_set_area_y,
Float: g_set_area_z,
Float: g_set_area_r,
Float: g_set_area_pickup_x,
Float: g_set_area_pickup_y,
Float: g_set_area_pickup_z,
	g_set_area_virtualworld,
	g_set_area_interior,
	g_text[64]
};

new const
g_area[][E_AREA_PICKUP_INFORMATION] =
{
	{1, 1912.2014, 2227.5486, 16.0831, -1, 139.4577, 1366.0151, 1002.9659, 90.0, 1912.2014, 2227.5486, 16.0831, 0, 0, "Автошкола"},
	{2, 141.1558, 1365.9229, 1002.9600, -1, 1909.8921, 2227.6685, 15.7139, 160.0, 141.1558, 1365.9229, 1002.9600, 0, 0, EOS},
	{3, 1919.2803,2183.5039,15.6982, -1, 104.9863,2883.6355,1010.6396, 0.0, 1919.2803,2183.5039,15.6982, 0, 0, "Загс"},
	{4, 105.0619,2881.2490,1010.6396, -1, 1915.7471,2183.5007,15.7060, 90.0, 105.0619,2881.2490,1010.6396, 0, 0, EOS},
	{5, 2475.7368,-726.9620,12.3000, -1, 5.6783,-29.9958,1080.9968, 360.0, 2475.7368,-726.9620,12.3000, -1, -1, "Автосалон"},
	{6, 5.6770,-31.8014,1080.9968, -1, 2475.4971,-729.5290,12.3000, 340.0, 5.6770,-31.8014,1080.9968, 0, 0, EOS},
	{7, -128.7406,-358.7156,1.2300, -1, -226.0566,728.0068,1002.0159, 180.0, -128.7406,-358.7156,1.2300, 1, 1, "Спецназ"},
	{8, -225.9375,729.8962,1002.0000, -1, -125.6301,-358.9897,1.2300, 270.0, -225.9375,729.8962,1002.0000, 0, 0, EOS}

};

new salon[2];

new g_area_total[sizeof g_area];

enum AreaInformation
{
	arServerHelp,
	arAdminsZoneHP,
	arHotdogHP,
	arGettingPassport[5],
	arGreenZone[19],
	arPoliciaA,
	arPoliciaB,
	arPoliciaB1,
	arLoadPatr,
	arArmyAmmo,
	arArhTest,
	arBuyCopter,
	arRobbery,
	arRobbery1,
	arMapRobbery,
	arBank,
	arBank1,
	arClothes,
	arClothes1,
	arClothes2,
	arClothes3,
	arRieltor,
}
new AreaInfo[AreaInformation];

new Float:X_ar[MAX_PLAYERS], Float:Y_ar[MAX_PLAYERS], Float:Z_ar[MAX_PLAYERS];
new Virt_ar[MAX_PLAYERS], Int_ar[MAX_PLAYERS];

static const stock Float:MedicSpawn[4][3] =
{
	{2477.2180,-2146.1821,634.2537},
	{2479.9385,-2155.5093,634.2537},
	{2462.1013,-2155.4067,634.2537},
	{2459.1084,-2146.0261,634.2537}
};

new bool:InHospital[MAX_PLAYERS];
new OldMessage[MAX_PLAYERS][150];
new TextReset[MAX_PLAYERS];
new TextResetCMD[MAX_PLAYERS];
new bool:PlayerDied[MAX_PLAYERS];
new bool:UseGPS[MAX_PLAYERS];
new bool:FreezePlayer1[MAX_PLAYERS];

/* Античиты */
new bool:StartGMTest[MAX_PLAYERS];
/* Античиты Конец */

/* Слежка за игроком */
new Menu:specmenu;
/* Слежка за игроком Конец */

static const stock BE_Bad_Vehs[] = {
	460, 464, 476, 511, 512, 513, 519, 520, 539, 553, 577, 592, 593, // planes
	417, 425, 447, 465, 469, 487, 488, 497, 501, 548, 563 // heli
};
new bool: BE_Play_Check[MAX_PLAYERS];

new Oldskin2[MAX_PLAYERS]; // сохраняет скин игрока
new armystol, armygun, armyyashik, armyzagruz[4];
new armskin; // гардероб
new bankpalomino[2];
new spawnskyter[2];
new armysklad[2], zavod[2], wahta[2];
//new fuelcar[2];
//new jobproduct[2];
new pickupentered[MAX_PLAYERS] = 0;
new fbipic[4],merpicls[1];
new PlayerRegistered[MAX_PLAYERS];
new bool:TaxiON[MAX_PLAYERS] = {false, ...};
new bool:MedicON[MAX_PLAYERS]= {false, ...};
new bool:MechanicON[MAX_PLAYERS]= {false, ...};
new bool:PoliceON[MAX_PLAYERS]= {false, ...};
new gamemodeloaded;
new sportpickup[2];
new Medicines[MAX_PLAYERS];
new GetMedicines[3];
new armyammo;
new robbery_moneys[2];
new PlayerName[MAX_PLAYERS][MAX_PLAYER_NAME];
/**************************************ПИКАПЫ**********************************/
new policiapick[8];
new bolnicapick[2];
new smipick[2];
new kazarmapick[2];
new stolovkapick[2];
new spermap[2];
new opg1pick[2];
new opg2pick[2];
new opg3pick[2];
new opg4pick[2];
new opg5pick[2];
new bankpick[6];
new voenkomatpick[2];
/**************************************ПИКАПЫ**********************************/
new set_name = -1;
new AdvertTime, AdvertTime_;
new NewsPrice[40],CallPrice[2], SmsPrice[2], AdvertPrice[2];
new JobPrice[40],ShPrice[2], LesPrice[2], OzPrice[2];
new MdPanel[40],MD[6];
new SmsNews[2];
new TOTALBIZZ, TOTALADVERT[2], TOTALVEH, TOTALHOUSE, TOTALPODEZD, TOTALROOMS;
new engine, lights, alarm, doors, bonnet, boot, objective;
new years, months, days;
new Pick;
new coordh[90],coordv[100],boordh[256];
new meriapick[4];

new bool:Boot[MAX_VEHICLES];
new bool:Bonnet[MAX_VEHICLES];
new bool:Engine[MAX_VEHICLES];
new bool:Lights[MAX_VEHICLES];
new bool:IsLocked[MAX_VEHICLES];
new Fuel[MAX_VEHICLES] = 100;

new bool:PlayerFuelMes[MAX_VEHICLES];
static const stock legalmods[48][22] = {
	{400, 1024,1021,1020,1019,1018,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{401, 1145,1144,1143,1142,1020,1019,1017,1013,1007,1006,1005,1004,1003,1001,0000,0000,0000,0000},
	{404, 1021,1020,1019,1017,1016,1013,1007,1002,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{405, 1023,1021,1020,1019,1018,1014,1001,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{410, 1024,1023,1021,1020,1019,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{415, 1023,1019,1018,1017,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{418, 1021,1020,1016,1006,1002,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{420, 1021,1019,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{421, 1023,1021,1020,1019,1018,1016,1014,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{422, 1021,1020,1019,1017,1013,1007,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{426, 1021,1019,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{436, 1022,1021,1020,1019,1017,1013,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{439, 1145,1144,1143,1142,1023,1017,1013,1007,1003,1001,0000,0000,0000,0000,0000,0000,0000,0000},
	{477, 1021,1020,1019,1018,1017,1007,1006,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{478, 1024,1022,1021,1020,1013,1012,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{489, 1024,1020,1019,1018,1016,1013,1006,1005,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{491, 1145,1144,1143,1142,1023,1021,1020,1019,1018,1017,1014,1007,1003,0000,0000,0000,0000,0000},
	{492, 1016,1006,1005,1004,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{496, 1143,1142,1023,1020,1019,1017,1011,1007,1006,1003,1002,1001,0000,0000,0000,0000,0000,0000},
	{500, 1024,1021,1020,1019,1013,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{516, 1021,1020,1019,1018,1017,1016,1015,1007,1004,1002,1000,0000,0000,0000,0000,0000,0000,0000},
	{517, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1016,1007,1003,1002,0000,0000,0000,0000,0000},
	{518, 1145,1144,1143,1142,1023,1020,1018,1017,1013,1007,1006,1005,1003,1001,0000,0000,0000,0000},
	{527, 1021,1020,1018,1017,1015,1014,1007,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{529, 1023,1020,1019,1018,1017,1012,1011,1007,1006,1003,1001,0000,0000,0000,0000,0000,0000,0000},
	{534, 1185,1180,1179,1178,1127,1126,1125,1124,1123,1122,1106,1101,1100,0000,0000,0000,0000,0000},
	{535, 1121,1120,1119,1118,1117,1116,1115,1114,1113,1110,1109,0000,0000,0000,0000,0000,0000,0000},
	{536, 1184,1183,1182,1181,1128,1108,1107,1105,1104,1103,0000,0000,0000,0000,0000,0000,0000,0000},
	{540, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1004,1001,0000,0000,0000,0000},
	{542, 1145,1144,1021,1020,1019,1018,1015,1014,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{546, 1145,1144,1143,1142,1024,1023,1019,1018,1017,1007,1006,1004,1002,1001,0000,0000,0000,0000},
	{547, 1143,1142,1021,1020,1019,1018,1016,1003,1000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{549, 1145,1144,1143,1142,1023,1020,1019,1018,1017,1012,1011,1007,1003,1001,0000,0000,0000,0000},
	{550, 1145,1144,1143,1142,1023,1020,1019,1018,1006,1005,1004,1003,1001,0000,0000,0000,0000,0000},
	{551, 1023,1021,1020,1019,1018,1016,1006,1005,1003,1002,0000,0000,0000,0000,0000,0000,0000,0000},
	{558, 1168,1167,1166,1165,1164,1163,1095,1094,1093,1092,1091,1090,1089,1088,0000,0000,0000,0000},
	{559, 1173,1162,1161,1160,1159,1158,1072,1071,1070,1069,1068,1067,1066,1065,0000,0000,0000,0000},
	{560, 1170,1169,1141,1140,1139,1138,1033,1032,1031,1030,1029,1028,1027,1026,0000,0000,0000,0000},
	{561, 1157,1156,1155,1154,1064,1063,1062,1061,1060,1059,1058,1057,1056,1055,1031,1030,1027,1026},
	{562, 1172,1171,1149,1148,1147,1146,1041,1040,1039,1038,1037,1036,1035,1034,0000,0000,0000,0000},
	{565, 1153,1152,1151,1150,1054,1053,1052,1051,1050,1049,1048,1047,1046,1045,0000,0000,0000,0000},
	{567, 1189,1188,1187,1186,1133,1132,1131,1130,1129,1102,0000,0000,0000,0000,0000,0000,0000,0000},
	{575, 1177,1176,1175,1174,1099,1044,1043,1042,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{576, 1193,1192,1191,1190,1137,1136,1135,1134,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{580, 1023,1020,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{589, 1145,1144,1024,1020,1018,1017,1016,1013,1007,1006,1005,1004,1000,0000,0000,0000,0000,0000},
	{600, 1022,1020,1018,1017,1013,1007,1006,1005,1004,0000,0000,0000,0000,0000,0000,0000,0000,0000},
	{603, 1145,1144,1143,1142,1024,1023,1020,1019,1018,1017,1007,1006,1001,0000,0000,0000,0000,0000}
};

enum CUFF
{
	pCuffer,
	pCuffee
}
new pCuff[MAX_PLAYERS][CUFF];

new bool:efir_player;
new bool:EtherCalled[MAX_PLAYERS] = {false, ...};
new bool:Ether[MAX_PLAYERS] = {false, ...};
new bool:EtherLive[MAX_PLAYERS];
new bool:EtherCall[2];
new bool:EtherSms[2];
new Mobile[MAX_PLAYERS];
new bool:TPC[MAX_PLAYERS];
new InShop[MAX_PLAYERS];
new bool:PlayerLogged[MAX_PLAYERS];
new bool:PlayerSpawned[MAX_PLAYERS];

new bool:AdminLogged[MAX_PLAYERS];
new bool:PlayerUseMask[MAX_PLAYERS];
new MaskTimer[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new PlayerLogTries[MAX_PLAYERS];
new STimer[MAX_PLAYERS];
new PlayerStats[MAX_PLAYERS] = -1;
new NameStats[MAX_PLAYERS];
new ClothesRound[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new InShopSkin[MAX_PLAYERS];
//new Weapons[MAX_PLAYERS][47];
new HouseOffer[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
new pPressed[MAX_PLAYERS];
new colors[MAX_PLAYERS][2];
new VehTest[MAX_PLAYERS];
new PlayerLastTick[MAX_PLAYERS];
new Ujahhs[MAX_PLAYERS];
new mass_pass[MAX_PLAYERS][11];
// - Player Text Draw's
new PlayerText:SecurityCode[MAX_PLAYERS][10];
new Text:zz_td[3];
new Text:np_td[3];
new Text:txdw2;
// - Text Draw's
new Text:AnimDraw;

new Text: TD_Clothes[9];
new PlayerText: PTD_Clothes[MAX_PLAYERS];

new Text:buy_numbers_car[30];
new PlayerText:buy_numbers_player_car[MAX_PLAYERS];

new PlayerText:AutoSalon_Stats[MAX_PLAYERS][3];
new Text:AutoSalon_Fon[6];
new Text:AutoSalon_Button[3];
new Text:AutoSalon_ButtonColor[2];
new Text:AutoSalon_Color[48];

enum color_info
{
	ciCar,
	ciTD,
}

new color_veh[48][color_info] =
{
	{1,0xF5F5F5FF},
	{2,0x2A77A1FF},
	{3,0x840410FF},
	{4,0x263739FF},
	{5,0x86446EFF},
	{6,0xD78E10FF},
	{7,0x4C75B7FF},
	{8,0xBDBEC6FF},
	{9,0x5E7072FF},
	{10,0x46597AFF},
    {0,0x000000FF},
    {100,0x406C8FFF},
	{101,0x1F253BFF},
	{102,0xAB9276FF},
	{103,0x134573FF},
	{104,0x96816CFF},
	{105,0x64686AFF},
	{106,0x105082FF},
	{107,0xA19983FF},
	{108,0x385694FF},
	{109,0x525661FF},
	{110,0x7F6956FF},
	{111,0x8C929AFF},
	{112,0x596E87FF},
	{113,0x473532FF},
	{114,0x44624FFF},
	{115,0x730A27FF},
	{116,0x223457FF},
	{117,0x640D1BFF},
	{118,0xA3ADC6FF},
	{119,0x695853FF},
	{120,0x9B8B80FF},
	{121,0x620B1CFF},
	{122,0x5B5D5EFF},
	{123,0x624428FF},
	{124,0x731827FF},
	{125,0x1B376DFF},
	{126,0xEC6AAEFF},
	{109,0x525661FF},
	{16,0x335F3FFF},
	{17,0x730E1AFF},
	{18,0x7B0A2AFF},
	{19,0x9F9D94FF},
	{20,0x3B4E78FF},
	{21,0x732E3EFF},
	{22,0x691E3BFF},
	{23,0x96918CFF},
	{24,0x515459FF}
};

new Text:village_TD[11];//Логотип
new Text:INFO[18];
new Text:info_server[2];

// -
new objectplayerid;

enum admInfo
{
	admGoto,
	admGethere,
	admSpectate,
	admTimeMin,
	admAlog
}
new AdminInfo[MAX_PLAYERS][admInfo];

enum hlpInfo
{
	admGoto,
	admGethere,
	admSpectate,
	admTimeMin,
	admAlog
}
new HelperInfo[MAX_PLAYERS][hlpInfo];

enum pInfo
{
	pID,
	pPassword[32],
	pSecurityCode,
	pCheckCode,
	pInputCode,
	pMail[64],
	pMailConfirmed,
	pIP[16],
	pLastIP[16],
	pRegIP[16],
	pRegData[15],
	pVhData[15],
	pLevel,
	pCash,
	pBank,
	pAdmin,
	pHelper,
	pMemberSkin,
	pSex,
	pAge,
	pExp,
	pMuted,
	pWarn,
	pWarnTime,
	pLWarn,
	pAWarn,
	pDeActivate,
	pLics[16],
	pLic[4],
	pGunSkill[8],
	pLeader,
	pTimeHour,
	pLeaderPosition,
	pTempLeader,
	pRank,
	pVoennik,
	pMember,
//	pCheckTime,
	pPhoneBalance,
	pPhoneNumber,
	pText[6],
	pTexts[40],
	pJail,
	pJailTime,
	pArrestSpawn,
	pWanted,
	pWantedTime,
	pWantedWho[MAX_PLAYER_NAME],
	pWantedReason[32],
Float:pHeal,
	pDrugs,
	pPatron,
	pGunAmount,
	pCrimes,
	pJob,
	pColor,
	pMarried,
	pWhoMarried[MAX_PLAYER_NAME],
	pReferal[MAX_PLAYER_NAME],
	pRefMoney,
	pPayCheck,
	pTaxiCash,
	pTaxiTime,
	pCharity,
	pVip,
	pVipTime,
	pTime,
	pCredits,
	pTotalCredits,
	pSkin[3],
	pSpawnChange,
	pHunger,
	pOnline,
	pZakon,
	pCity,
	pPhones[16],
	pPhone[2],
	pImproves[32],
	pImprove[4],
	pSprunk,
	pAptechka,
	pTruckSkill,
	pTaxiSkill,
	pWorkSalary,
	pFamily,
	pFamilySozd,
	pFamilyZam,
	//------------
	SalonCarID,
	//-------------
	pName[MAX_PLAYER_NAME],
	Spectating[2],
	pAFK,
	pDonateCar,
	pCredit,
	pCreditMoney,
	pCopter,
	pCopterColor[2],
	PlayerCopterID,
	//pPresent[sizeof PresentObject],
	//--------
    pOwnableCar,
	pInteractionPlayer,
	pShowTD,
	pGpsTimer,
	pEnterRoom,
	SoundSMS,
	SoundCall,
	data_NONLINE[8],
	pModelPhone,
	pDonateH[3],
	pListPlayers[MAX_PLAYERS],
	data_CT_NUMBER,
	data_CS_TEAM,
	data_CT_VEH,
	data_CHEK,
	pStats[10],
	P_Style[3],
	data_GARAGE,
	data_PASS,
	data_PASS_S,
	data_PASS_N,
	data_PASS_DATE[32],
	bool: P_WEAPON_RELOADING,
	pSetWalk,
	pSetAnim,
	pJackCar,
	pRAZ,
	pRobbery,
	Disease[3],
	pRentHouse,
	P_TEMP_JOB,				// временная работа
	P_TEMP_JOB_STATE,		// действие что надо делать
	P_TEMP_JOB_CHECK,		// проверка анимки
	// -------------------------
	P_JOB_SERVICE_NAME[17],	// название службы
	P_JOB_TARIFF,			// тариф
	P_JOB_WAGE,				// Зарплата
	P_JOB_LOAD_ITEMS,		// загружено/перенесено (груза/руды)
	P_JOB_CAR,				// рабочий транспорт
	P_END_JOB_TIMER,		// таймер окончания работы
	P_FACTORY_USE_DESK,		// Какой стол использует на заводе
	P_BUS_ROUTE, 			// маршрут автобуса
	P_BUS_ROUTE_STEP,		// шаг маршрута
	P_MECHANIC_FILL_PAY,	// заправлено на N руб
	P_MECHANIC_REPAIR_PAY,	// отремонтировано на N руб
	bool: P_IN_JOB,			// на работе ли
	P_LAST_PICKUP,			// ид пикапа на которым стоял последний раз
	P_JOB,
};
new p_info[MAX_PLAYERS][pInfo];

new zakaz_taxi = 0, zakaz_player[MAX_PLAYERS];

new player_binder [ MAX_PLAYERS ] [ 5 ] [ 128 ] ;

new Text:CheatShow[2][10], Cheat, Cheat1;

#define AC_WARNLINE     (16)
static warningPanelTime[AC_WARNLINE char];
static warningPanelText[AC_WARNLINE][100];
static Text:warningPanelTD[AC_WARNLINE];

stock ShowWarningPanelAC(playerid) { for(new id = (AC_WARNLINE - 1); id >= 0; id--) TextDrawShowForPlayer(playerid, warningPanelTD[id]); }

static stock AddToWarningPanel(playerid, reason[], type = 0) { if(IsPlayerConnected(playerid))
{
	new acstr[100];
    if(!type) format(acstr, sizeof(acstr), "~r~~h~~h~(warning) ~w~%s(%i)(%s) reason: %s", GetName(playerid), playerid, p_info[playerid][pIP], reason);
    else format(acstr, sizeof(acstr), "~w~(kick) %s(%i)(%s) reason: %s", GetName(playerid), playerid, p_info[playerid][pIP], reason);

	for(new id = (AC_WARNLINE - 1); id >= 0; id--) if(!strcmp(warningPanelText[id], acstr))
	{
	    warningPanelTime{id} = 30;
		return;
	}
	for(new id = (AC_WARNLINE - 1); id > 0; id--)
	{
	    warningPanelTime{id} = warningPanelTime{id - 1};
		warningPanelText[id] = warningPanelText[id - 1];
	}
	warningPanelTime{0} = 30;
	warningPanelText[0] = acstr;
 	for(new id = (AC_WARNLINE - 1); id >= 0; id--) TextDrawSetString(warningPanelTD[id], warningPanelText[id]);
}}

new robbery_pos[MAX_PLAYERS];
new RobberyPlayer[MAX_PLAYERS];
new robbery_name[MAX_PLAYERS][4];

enum podezd
{
	idpodezd,
Float:poX,
Float:poY,
Float:poZ,
Float:poExitX,
Float:poExitY,
Float:poExitZ,
	poI,
	poV,
	poType,
	poPickup,
	poPickupExit,
	poSphereEnter,
	poSphereExit
};
new PodezdInfo[MAX_PODEZD][podezd];

enum rooms
{
	idkv,
Float:rX,
Float:rY,
Float:rZ,
	rV,
	rI,
Float:rExitX,
Float:rExitY,
Float:rExitZ,
	rExitV,
	rExitI,
	rType,
	rCost,
	rOwner[32],
	rOplata,
	rLock,
	rPickupEnter,
	rPickupExit,
Text3D:rPickupText,
	rSphereEnter,
	rSphereExit
};
new RoomsInfo[MAX_ROOMS][rooms];

enum hInfo
{
	hID,
Float:hEntrx,
Float:hEntry,
Float:hEntrz,
Float:hExitx,
Float:hExity,
Float:hExitz,
Float:hCarx,
Float:hCary,
Float:hCarz,
Float:hCarfa,
	hOwner[MAX_PLAYER_NAME],
	hDiscript,
	hPrice,
	hBuyPrice,
	hInt,
	hVirtual,
	hLock,
	hMIcon,
	hPickup,
Text3D:hPickupExit,
	hOplata,
	hHeal,
	hGarage,
	hMetall,
	hMoney,
	hPatrons,
	hDrugs,
	hArea,
	gRentStatus,
	RentAllPlata,
	hUpdate,
	hSafeGun[6],
	hSafeAmmos[6]
};
new HouseInfo[MAX_HOUSES][hInfo];

new HouseSafeCP[2];
new lastveh;

enum atm
{
	aID,
Float:aX,
Float:aY,
Float:aZ,
Float:arX,
Float:arY,
Float:arZ,
};
new ATMInfo[MAX_ATM][atm], TOTALATM;
new ATM[MAX_ATM];
new Text3D:LABELATM[MAX_ATM];

enum sprunk
{
	aID,
Float:aX,
Float:aY,
Float:aZ,
Float:arX,
Float:arY,
Float:arZ,
};
new SPRInfo[MAX_SPRUNK][sprunk], TOTALSPRUNK;
new SPR[MAX_SPRUNK];
new Text3D:LABELSPR[MAX_SPRUNK];

enum bzInfo
{
	bID,
Float:bEntrx,
Float:bEntry,
Float:bEntrz,
Float:bExitx,
Float:bExity,
Float:bExitz,
Float:bMenux,
Float:bMenuy,
Float:bMenuz,
	bOwner[MAX_PLAYER_NAME],
	bPrice,
	bBuyPrice,
	bMoney,
	bType,
	bLic,
	bInt,
	bVirtual,
	bLock,
	bEnter,
	bMIcon,
	bIcon,
	bPickup,
	bPickupExit,
	bName[32],
	bProduct,
	bTill,
	bMenu,
	bLockTime,
	bMafia,
	bZahvat,
	bMoneyHour,
	bVisitors,
	bHourProd,
	bAvtoProd,
	bProdMax,
	bHeal,
	bActor,
	bProdOrder,
	bArea,
	AreaX,
	bProdJob,
	bMoneyDay,
};

new BizzInfo[MAX_BIZZ][bzInfo];

new BizStats[MAX_BIZZ][10];
new BizStatsDate[MAX_BIZZ][10][24];

new Text3D:LABELBIZZ[MAX_BIZZ];
new BizzPay[MAX_BIZZ];
new fuelcheck;

enum vInfo
{
	vID,
	vModel,
	vColors[32],
	vColor[2],
Float:vPos_X,
Float:vPos_Y,
Float:vPos_Z,
Float:vPos_FA,
	vInt,
	vWorld,
	vVehicle,
	vFraction,
	vFamily,
	vStatus,
	vCost,
	vRank,
	vHouse,
};
new VehInfo[MAX_VCARS][vInfo];

enum aInfo
{
	aText[128],
	aName[MAX_PLAYER_NAME],
	aPhone,
};
new AdvertInfo[MAX_ADVERTS][2][aInfo];

new FracBank[11];

//42 Зэк _ 60 ж адвокат _ 73 Армейка _
static const stock Fraction_Skin[MAX_FRACTIONS][8] =
{
	{0,0,0,0,0,0,0,0}, // Гражданский
	{17,59,187,164,165,141,240,150}, // Правительство
	{264,280,281,58,283}, // ДПС
	{268,266,282,288,276,265,283}, // УВД
	{163,164,165,272,286,203}, // ФСБ
	{274,275,269,70,273}, // Больница АЗ
	{11,189,171,172,0,0,0,0}, // Автошкола
	{49,120,122,123,186,208,294,169}, // Южная ОПГ
	{46,98,113,124,223,258,290,214}, // Арзамасская ОПГ
	{173,174,175,226,273,0,0,0}, // Банда бомжей
	{223,124,127,290,113,117,98,93}, // Русская мафия
	{108,109,110,56,0,0,0,0}, // Закрыто
	{287,179,270}, // Армия
	{0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{0,0,0,0,0,0,0,0}, // Свободный слот для организации
	{223,124,127,290,113,117,98,93}, // Лыткаринская ОПГ
	{46,111,112,126,125,272,233}, // Батыревская ОПГ
	{117,118,120,122,123,294,169,263}, // Яки
	{187,186,170,188,20,141,150,219}, // RECORD FM
	{187,186,170,188,20,141,150,219}, // Закрыто
	{187,186,170,188,20,141,150,219}, // Закрыто
	{285,267,0,0,0,0,0}, // Спецназ
	{17,59,187,164,165,141,240,150}, // Горсовет г.Южный
	{274,275,276,70,148,150,71,295}, // Больница LV
	{17,59,187,164,165,141,240,150}, // Мэрия SF
	{17,59,187,164,165,141,240,150} // Мэрия LV
};

#define dTrunk 		  9138
#define dTrunkPut 	  9139
#define dTrunkGet 	  9140
#define dTrunkGunPut  9141
#define dTrunkGunGet  9142
#define dTrunkGunGet2 9143

enum tInfo
{
	tGun[9],
	tAmmo[9],
	tMoney,
	tDrugs,
	tMats,
	tArmours,
	tKanistra,
	tDee,
	bool:tOpen
};
new TrunkInfo[MAX_VEHICLES][tInfo];

#define VEHICLE_STATE_CAR   0
#define VEHICLE_STATE_BIKE  1
#define VEHICLE_STATE_VELIK 2
#define VEHICLE_STATE_PLANE 3
#define VEHICLE_STATE_BOAT  4
#define VEHICLE_STATE_MOPED 5
#define VEHICLE_STATE_TRAIN 6

new Text:trunk_ball[22];
new VehicleState[MAX_VEHICLES];
new idaofcar[MAX_PLAYERS] = {0,...};

stock UpdateTDOpenCloseTrunk(playerid,vehicleid)
{
   	TextDrawHideForPlayer(playerid,trunk_ball[21]);
	TextDrawBoxColor(trunk_ball[21], (TrunkInfo [vehicleid][tOpen] != true) ? (0xfcfc0090) : (0xf0e86b90));
	TextDrawSetString(trunk_ball[21],(TrunkInfo [vehicleid][tOpen] != true) ? ("ЗАКРЫТЬ БАГАЖНИК~n~ДЛЯ ИГРОКОВ") : ("ОТКРЫТЬ БАГАЖНИК~n~ДЛЯ ИГРОКОВ"));
	TextDrawShowForPlayer(playerid,trunk_ball[21]);
	return 1;
}

new names_boot[3][7][32] =
{
	{{"оружие"},{"деньги"},{"наркотики"},{"патроны"},{"бронежилет"},{"канистру"},{"набор"}},
	{{"оружия"},{"денег"},{"наркотиков"},{"патронов"},{"бронежилетов"},{"канистр"},{"наборов"}},
	{{"Оружия"},{"Денег"},{"Наркотиков"},{"Патронов"},{"Бронежилетов"},{"Канистр"},{"Наборов"}}
};

new maxbootint[7] = {50000000, 1000, 1000, 10, 10, 10};
stock getmaxtrunkput(id) return (id >= 2 && id <= 7) ? (maxbootint[id-2]) : (-1);

forward ShowBootList(playerid);
public ShowBootList(playerid)
{
	STRING_GLOBAL = "";
	for(new i; i <= 11; i++)
	{
		new gunid, ammo, storeslot;
		GetPlayerWeaponData(playerid,i,gunid,ammo);
		storeslot = GetStoreGunSlot(gunid);
  		if(!gunid || !ammo || storeslot == -1) continue;

		new gunname[32];
		GetWeaponName(gunid,gunname,32);
		format(STRING_GLOBAL,512,"%s\n%s [{ebec86}%d{FFFFFF}]",STRING_GLOBAL,gunname,ammo);
	}
 	if(!strlen(STRING_GLOBAL))
	{
		SendErr(playerid, "У Вас нет оружия");
		ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
		return 1;
	}
	ShowPlayerDialogEx(playerid,dTrunkGunPut,2,"{ebec86}>> Багажник",STRING_GLOBAL,"Положить","Отмена");
	return 1;
}

stock ShowDialogTrunk(playerid,slot)
{
	STRING_GLOBAL = "";
	format(STRING_GLOBAL,144,"{ffffff}1. Положить %s\n2. Взять %s\n",names_boot[0][slot-1],names_boot[0][slot-1]);
	if(slot!=1) format(STRING_GLOBAL,144,"%s- %s:{ebec86} %d / %d%s",STRING_GLOBAL,names_boot[2][slot-1],GetIntBoot(playerid,slot),getmaxtrunkput(slot), (slot==2)?("{FFFFFF} рублей"):(""));
	ShowPlayerDialogEx(playerid,dTrunk,DIALOG_STYLE_LIST,"{ebec86}>> Багажник", STRING_GLOBAL, "Выбрать", "Отмена");
	SetPVarInt(playerid,"slottrunk",slot);
	return 1;
}

stock AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z)
{
    new Float:trunkpos[5][4];
    trunkpos[2][0]=x;
    trunkpos[2][1]=y;
    trunkpos[2][2]=z;
    trunkpos[2][3]=a;
  	trunkpos[2][0]-=1.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]-=1.5*floatcos(-trunkpos[2][3],degrees);
	trunkpos[0]=trunkpos[2];
	trunkpos[1]=trunkpos[2];
	trunkpos[0][0]=trunkpos[2][0]+2.0*floatsin(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[0][1]=trunkpos[2][1]+2.0*floatcos(-trunkpos[2][3]+ -90.0,degrees);
	trunkpos[1][0]=trunkpos[2][0]+0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[1][1]=trunkpos[2][1]+0.5*floatcos(-trunkpos[2][3],degrees);
	GetPlayerCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2]);
	SetPVarFloat(playerid,"oldtrunkcamposx",trunkpos[3][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy",trunkpos[3][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz",trunkpos[3][2]);
	GetPlayerCameraFrontVector(playerid,trunkpos[4][0],trunkpos[4][1],trunkpos[4][2]);
	InterpolateCameraPos(playerid,trunkpos[3][0],trunkpos[3][1],trunkpos[3][2],trunkpos[0][0],trunkpos[0][1],trunkpos[0][2]+2.4,2000,CAMERA_MOVE);
	SetPVarFloat(playerid,"oldtrunkcamposx2",trunkpos[3][0] + trunkpos[4][0]);
	SetPVarFloat(playerid,"oldtrunkcamposy2",trunkpos[3][1] + trunkpos[4][1]);
	SetPVarFloat(playerid,"oldtrunkcamposz2",trunkpos[3][2] + trunkpos[4][2]);
	InterpolateCameraLookAt(playerid,trunkpos[3][0] + trunkpos[4][0],trunkpos[3][1] + trunkpos[4][1],trunkpos[3][2] + trunkpos[4][2],trunkpos[1][0],trunkpos[1][1],trunkpos[1][2]+0.8,2000,CAMERA_MOVE);
	ApplyAnimation(playerid,"CRIB","CRIB_Use_Switch",4.0,0,0,0,0,0);
	trunkpos[2][0]+=0.5*floatsin(-trunkpos[2][3],degrees);
	trunkpos[2][1]+=0.5*floatcos(-trunkpos[2][3],degrees);
	SetPlayerPos(playerid,trunkpos[2][0],pos_y,pos_z);
	SetPlayerFacingAngle(playerid,trunkpos[2][3]);
	return 1;
}

stock GetIntBoot(playerid,slot)
{
	switch(slot)
	{
	    case 2: return TrunkInfo[idaofcar[playerid]][tMoney];
	    case 3: return TrunkInfo[idaofcar[playerid]][tDrugs];
	    case 4: return TrunkInfo[idaofcar[playerid]][tMats];
	    case 5: return TrunkInfo[idaofcar[playerid]][tArmours];
	    case 6: return TrunkInfo[idaofcar[playerid]][tKanistra];
	    case 7: return TrunkInfo[idaofcar[playerid]][tDee];
	}
	return -1;
}

stock SetIntBoot(playerid,slot,data)
{
	switch(slot)
	{
	    case 2: TrunkInfo[idaofcar[playerid]][tMoney]=data;
	    case 3: TrunkInfo[idaofcar[playerid]][tDrugs]=data;
	    case 4: TrunkInfo[idaofcar[playerid]][tMats]=data;
	    case 5: TrunkInfo[idaofcar[playerid]][tArmours]=data;
	    case 6: TrunkInfo[idaofcar[playerid]][tKanistra]=data;
	    case 7: TrunkInfo[idaofcar[playerid]][tDee]=data;
	}
	return -1;
}

stock CheckGetBoot(playerid,slot,put)
{
	switch(slot)
	{
        case 2:
        {
            GiveMoney(playerid, put, "Взял деньги из багажника");
            return 1;
        }
        case 3:
        {
            new newslot;
			if(CheckMaxVes(playerid, 44, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			PlayerItem1[playerid][newslot] = 44;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid,newslot);
            return 1;
        }
        case 4:
        {
			new newslot;
			if(CheckMaxVes(playerid, 42, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			PlayerItem1[playerid][newslot] = 42;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid,newslot);
            return 1;
        }
        case 5:
        {
            new newslot;
			if(CheckMaxVes(playerid, 71, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			PlayerItem1[playerid][newslot] = 71;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid,newslot);
            return 1;
        }
        case 6:
        {
            new newslot;
			if(CheckMaxVes(playerid, 49, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			PlayerItem1[playerid][newslot] = 49;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid,newslot);
            return 1;
        }
        case 7:
        {
            new newslot;
			if(CheckMaxVes(playerid, 48, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			PlayerItem1[playerid][newslot] = 48;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid,newslot);
            return 1;
        }
    }
	return 1;
}

stock CheckPutBoot(playerid,slot,put)
{
    switch(slot)
	{
        case 2:
        {
            if(p_info[playerid][pCash] < put) return 0;
            GiveMoney(playerid, -put, "положил деньги в багажник");
            return 1;
        }
        case 3:
        {
            new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s] == 44) { ok = s; break; }
			}
			if(PlayerItem2[playerid][ok] < put) return 0;
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok] = 0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid,ok);
            return 1;
        }
        case 4:
        {
            new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s] == 42) { ok = s; break; }
			}
			if(PlayerItem2[playerid][ok] < put) return 0;
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok] = 0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid,ok);
            return 1;
        }
        case 5:
        {
           	new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s] == 71) { ok = s; break; }
			}
			if(PlayerItem2[playerid][ok] < put) return 0;
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok] = 0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid,ok);
            return 1;
        }
        case 6:
        {
            new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s] == 49) { ok = s; break; }
			}
			if(PlayerItem2[playerid][ok] < put) return 0;
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok] = 0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid,ok);
            return 1;
        }
        case 7:
        {
            new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s] == 48) { ok = s; break; }
			}
			if(PlayerItem2[playerid][ok] < put) return 0;
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok] = 0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid,ok);
            return 1;
        }
    }
	return 0;
}

#define GetPlayerDrivingExamInfo(%0,%1) 	g_player_driving_exam[%0][%1]
#define SetPlayerDrivingExamInfo(%0,%1,%2) 	g_player_driving_exam[%0][%1] = %2
#define ClearPlayerDrivingExamInfo(%0) 		g_player_driving_exam[%0] = g_driving_exam_default_values

enum E_DRIVING_TUTORIAL_STRUCT
{
	DT_TITLE[64],
	DT_INFO[2048]
};

enum E_PLAYER_DRIVING_EXAM_STRUCT
{
	DE_POINTS, // Балы
	DE_EXAM_STEP, // теория
	DE_ROUTE_STEP // практика
};

enum E_DRIVING_EXAM_STRUCT
{
	DE_TITLE[64],
	DE_LIST_ITEMS[256],
	DE_CORRECT_ANSWER
};

new driving_tutorial[4][E_DRIVING_TUTORIAL_STRUCT] =
{
	{
		"Управление системами автомобиля",
		"{669900}Ниже приведен перечень клавиш управления транспортом и их описание:\n\n"\
		"{3399FF}2\t\t{FFFFFF}завести или заглушить двигатель\n"\
		"{3399FF}Левый Alt\t{FFFFFF}включить или выключить фары\n"\
		"{3399FF}/lock\t\t{FFFFFF}открыть или закрыть машину {9966FF}(только для домашней машины)\n"\
		"{3399FF}/en\t\t{FFFFFF}включить или выключить ограничитель скорости\n"\
		"{3399FF}/en\t\t{FFFFFF}управление капотом и багажником {9966FF}(если они имеются у данной модели)\n"\
		"{3399FF}H\t\t{FFFFFF}заправить транспорт {9966FF}(подробнее в следующих разделах)\n\n"\
		"{FFFF00}Постарайтесь запомнить назначения клавиш управления\n"\
		"Когда будете готовы нажмите \"Далее\""
	},
	{
		"Панель индикаторов",
		"{FFFFFF}Панель индикаторов появляется в правом нижнем углу экрана как только вы заходите в любой транспорт\n"\
		"Она информирует водителя о его текущем состоянии. Итак, рассмотрим основные элементы этой панели:\n\n"\
		"\t{3366FF}25 km/h  {00CCFF}Fuel: 45  {006699}1000\n"\
		"\t{00CC00}Open  {FF3300}max  {FFFFFF}E {009933}S   M {FFFFFF}L B\n\n"\
		"{FFFF00}На первой строчке панели находятся числовые индикаторы:\n"\
		"{3366FF}25 km/h\t{FFFFFF}показывает текущую скорость транспорта\n"\
		"{00CCFF}Fuel: 45\t{FFFFFF}показывает количество бензина в баке\n"\
		"{006699}1000\t\t{FFFFFF}показывает \"здоровье\" транспорта. Если у него нет повреждений, то оно будет равно 1000\n\n"\
		"{FFFF00}На второй строчке находятся цветовые индикаторы:\n"\
		"{00CC00}Open\t\t{FFFFFF}(или {FF3300}Close{FFFFFF}) показывают открыт или закрыт транспорт\n"\
		"{FF3300}max\t\t{FFFFFF}загорается красным при включенном ограничителе скорости\n"\
		"E\t\tзагорается красным при низком уровне бензина в баке\n"\
		"{CC99CC}S\t\t{FFFFFF}загорается пурпурным при включенной сигнализации\n"\
		"{009933}M\t\t{FFFFFF}индикатор включенного двигателя\n"\
		"L\t\tиндикатор включенного света фар\n"\
		"B\t\tзагорается красным при открытом багажнике или капоте\n\n"\
		"{9966FF}Примечания:\n"\
		"1. Панель индикаторов обновляется раз в секунду\n"\
		"2. Выключенные индикаторы во втором ряду {FFFFFF}белого {9966FF}цвета"
	},
	{
		"Заправка и ремонт",
		"{FFFFFF}Транспорт время от времени необходимо заправлять. Сделать это можно двумя способами:\n\n"\
		"{FFFF00}1. На заправочной станции\n"\
		"{FFFFFF}Для этого подъедьте к ней и нажмите {3366FF}Num 2{FFFFFF}. Каждое нажатие заправляет ваш транспорт на 10 литров\n\n"\
		"{FFFF00}2. Заправка с канистры\n"\
		"{FFFFFF}Такой способ подойдет если автомобиль не может ездить из-за отсутствия бензина\n"\
		"Найдите ближайшую заправку и напишите {3366FF}/buyfuel{FFFFFF}. Вы получите канистру емкостью 15 литров\n"\
		"После этого просто подойдите к транспорту, который хотите заправить. 15 литров вполне хватит чтобы доехать до ближайшей заправки\n\n"\
		"{66CCCC}Полезные советы:\n"\
		"1. Бензобак может вместить максимум 150 литров бензина. Это хватит на 50 минут беспрерывной работы двигателя\n"\
		"2. Всегда выключайте двигатель когда выходите из машины или долго стоите на месте! Этим вы намного уменьшите расход бензина\n"\
		"3. Чтобы не бежать за канистрой бензина если бензобак опустел можно вызвать механика (/c)\n\n"\
		"{99CC66}Починить транспорт можно в любом покрасочном салоне либо вызвав механика (/c)\n"\
		"Обратите внимание, что если купленный или арендованный вами транспорт взорвется, то придется покупать или арендовать его заново!"
	},
	{
		"Правила дорожного движения",
		"{ffd51c}1. Общие положения\n"\
		"{FFFFFF}Обгон транспортных средств разрешен только с левой стороны\n"\
		"При этом водитель должен убедиться что встречная полоса свободна на достаточном для обгона расстоянии\n"\
		"При ДТП водителям рекомендуется вызвать полицию (/c) и дождаться приезда ГИБДД\n"\
		"{ffd51c}2. Скорость движения\n"\
		"{FFFFFF}Ограничение скорости движения в пределах городов и поселков 50 км/ч\n"\
		"За пределами населенных пунктов ограничений скорости нет\n"\
		"Для соблюдения скоростного режима рекомендуется пользоваться ограничителем скорости, который включается клавишей {3366FF}Num 4\n"\
		"{ffd51c}3. Остановка и стоянка\n"\
		"{FFFFFF}Остановка и стоянка транспортных средств разрешается только на обочине дороги или в специально отведенных для этого местах\n"\
		"За нарушение этого правила ваш автомобиль может быть отправлен на штрафстоянку\n"\
		"{ffd51c}4. ГИБДД\n"\
		"{FFFFFF}При виде автомобиля с включенной сиреной водитель обязан снизить скорость и прижаться к обочине\n"\
		"Водитель обязан предъявить работнику ГИБДД документы, которые он попросит"
	}
};

new const
	Float: driving_exam_route[27][3] = // маршрут практики
{
	{1908.1394,2246.4573,15.2793}, // 1
	{1887.2677,2233.8284,15.5133},
	{1827.6771,2229.1616,15.4069},
	{1768.4437,2204.5515,15.5672},
	{1769.0942,2057.4329,15.5118},
	{1876.7019,2053.6848,15.4542},
	{1963.1599,2027.2074,15.4588},
	{1962.9563,1917.6659,15.0649},
	{1984.8197,1902.6099,15.0857},
	{2235.5906,1903.8340,15.4785}, //10
	{2359.4978,1911.4387,15.4939},
	{2382.5203,1892.3778,15.2946},
	{2751.3455,1892.0446,15.8760},
	{2762.2747,2107.1575,17.6485},
	{2755.5586,2339.7378,15.6725},
	{2437.3162,2951.3494,22.6093},
	{2093.8494,2965.3408,11.5355},
	{2070.2361,2940.9878,11.4323},
	{1935.4342,2709.0713,14.7915}, // 20
	{1746.3171,2531.9512,14.9293},
	{1882.4036,2312.2119,15.5184},
	{1888.2998,2255.1619,15.5189},
	{1896.7715,2246.6313,15.3917},
	{1910.5236,2246.4551,15.2868},
	{1919.3710,2248.3159,15.2849},
	{1924.2465,2228.0378,15.7248},
	{0.0, 0.0, 0.0}
};

new driving_exam[12][E_DRIVING_EXAM_STRUCT] =
{
	{
		"Что означает зеленые буквы \"ДВИЖОК\" ?",
		"Включенные фары\n"\
		"Выключенные фары\n"\
		"Включенный двигатель\n"\
		"Выключенные двигатель\n"\
		"Открытый багажник\n"\
		"Закрытый багажник\n"\
		"Включенная сигнализация\n"\
		"Открытый капот",
		3
	},
	{
		"Какой клавишей вкл. и откл. фары?",
		"Левый Ctrl\n"\
		"Левый Alt\n"\
		"Правый Ctrl\n"\
		"Num 2\n"\
		"Num 4",
		2
	},
	{
		"Скорость движения по городу:",
		"50 км/ч\n"\
		"60 км/ч\n"\
		"70 км/ч\n"\
		"80 км/ч\n"\
		"90 км/ч",
		1
	},
	{
		"Чтобы заправиться на заправочной станции надо:",
		"Вызвать механика\n"\
		"Нажать {0099CC}правый Ctrl\n"\
		"Ввести команду {0099CC}/fill\n"\
		"Нажать {0099CC}левый Alt\n"\
		"Нажать {0099CC}H\n"\
		"Ни один из вариантов не подходит",
		5
	},
	{
		"Как включить или выключить двигатель?",
		"Ввести команду {0099CC}/buyfuel\n"\
		"Нажать {0099CC}2\n"\
		"Нажать {0099CC}левый Alt\n"\
		"Ввести команду {0099CC}/en\n"\
		"Нажать {0099CC}Num 2\n"\
		"Все ответы неверны",
		2
	},
	{
		"Что означает \"Fuel: 45\" на панели индикаторов?",
		"Текущая скорость {0099CC}45 км/ч\n"\
		"Уровень повреждений авто {0099CC}45 единиц\n"\
		"Цвет транспорта {0099CC}45\n"\
		"В бензобаке осталось {0099CC}45 литров\n"\
		"Нет правильного ответа",
		4
	},
	{
		"Что можно сделать, чтобы сократить расход бензина?",
		"Выйти из машины\n"\
		"Выключить двигатель\n"\
		"Отключить фары / сигнализацию\n"\
		"Включить ограничитеть скорости\n"\
		"Закрыть машину\n"\
		"Отремонтировать транспорт",
		2
	},
	{
		"Как открыть или закрыть домашнюю машину?",
		"Нажать {0099CC}Num 8\n"\
		"Нажать {0099CC}левый Ctrl\n"\
		"Нажать {0099CC}/lock\n"\
		"Нажать {0099CC}Num 2\n"\
		"Ввести команду {0099CC}/fill\n"\
		"Ввести команду {0099CC}/buyfuel\n"\
		"Все ответы неверны",
		3
	},
	{
		"Время работы двигателя? если fuel=100",
		"20 минут\n"\
		"30 минут\n"\
		"40 минут\n"\
		"50 минут\n"\
		"1 час\n"\
		"более 1 часа",
		4
	},
	{
		"Как включить или выключить ограничитель скорости?",
		"Клавишей {0099CC}Num 2\n"\
		"Клавишей {0099CC}/en\n"\
		"Клавишей {0099CC}H\n"\
		"Клавишей {0099CC}левый Ctrl\n"\
		"Нет правильных ответов",
		2
	},
	{
		"На панели индикаторов загорелась \"ФАРЫ\"?",
		"Был включен ограничитель скорости\n"\
		"Был открыт капот или багажник\n"\
		"Была включена сигнализация\n"\
		"Низкий уровень бензина в баке\n"\
		"Низкий уровень \"здоровья\" авто\n"\
		"Включены фары",
		6
	},
	{
		"При виде автомобиля с включенной сиреной вы:",
		"Продолжите движение с нормальной скоростью\n"\
		"Продолжите движение снизив скорость\n"\
		"Увеличите скорость\n"\
		"Попытаетесь скрыться\n"\
		"Среди предложенных вариантов нет правильного",
		5
	}
};

new g_player_driving_exam[MAX_PLAYERS][E_PLAYER_DRIVING_EXAM_STRUCT];
new g_driving_exam_default_values[E_PLAYER_DRIVING_EXAM_STRUCT] = {-1, ...};

new car_metall[2];
new car_factory[2];



static const stock Float:BusLS[][] =
{
	{1808.7693,-1889.6619,13.5441, 1824.0190,-1874.4978,13.4840},
	{1824.0190,-1874.4978,13.4840, 1824.0060,-1773.2596,13.5162},
	{1824.0060,-1773.2596,13.5162, 1824.0614,-1635.0193,13.5162},
	{1824.0614,-1635.0193,13.5162, 1844.6427,-1520.9193,13.5105},
	{1844.6427,-1520.9193,13.5105, 1853.1488,-1389.1710,13.5240},
	{1853.1488,-1389.1710,13.5240, 1852.5815,-1201.0886,22.2652},
	{1852.5815,-1201.0886,22.2652, 1828.0586,-1178.4015,23.7647},
	{1828.0586,-1178.4015,23.7647, 1743.3359,-1159.2402,23.7648},
	{1743.3359,-1159.2402,23.7648, 1657.0310,-1158.5968,23.9014},
	{1657.0310,-1158.5968,23.9014, 1557.1129,-1158.6820,24.0388}, /////////////////
	{1557.1129,-1158.6820,24.0388, 1437.4683,-1158.1476,23.7897},
	{1437.4683,-1158.1476,23.7897, 1376.5890,-1138.8882,23.7887},
	{1376.5890,-1138.8882,23.7887, 1360.5190,-1121.9950,23.8286},
	{1360.5190,-1121.9950,23.8286, 1378.7158,-965.2871,33.8278},
	{1378.7158,-965.2871,33.8278, 1395.1383,-950.7330,34.7365},
	{1395.1383,-950.7330,34.7365, 1482.0538,-975.8360,36.9147},
	{1482.0538,-975.8360,36.9147, 1588.9043,-991.8221,47.5224},
	{1588.9043,-991.8221,47.5224, 1690.7782,-925.4719,52.2945},
	{1690.7782,-925.4719,52.2945, 1710.1456,-811.7196,56.6823},
	{1710.1456,-811.7196,56.6823, 1715.7312,-658.3969,42.8951},
	{1715.7312,-658.3969,42.8951, 1703.9282,-455.4938,33.5071},
	{1703.9282,-455.4938,33.5071, 1677.1586,-251.9822,43.3416},
	{1677.1586,-251.9822,43.3416, 1654.6398,-33.1713,36.6220},
	{1654.6398,-33.1713,36.6220, 1626.1002,136.1207,36.2453},
	{1626.1002,136.1207,36.2453, 1702.3450,390.6835,30.3718},
	{1702.3450,390.6835,30.3718, 1778.0345,612.6203,21.4697},
	{1778.0345,612.6203,21.4697, 1806.4822,812.1041,11.0276},
	{1806.4822,812.1041,11.0276, 1767.3173,852.2102,10.4838},
	{1767.3173,852.2102,10.4838, 1619.8535,852.7777,6.8647},
	{1619.8535,852.7777,6.8647, 1423.8711,863.6336,6.9534},
	{1423.8711,863.6336,6.9534, 1259.5035,935.0343,14.0343},
	{1259.5035,935.0343,14.0343, 1108.6045,837.5462,10.8190},
	{1108.6045,837.5462,10.8190, 951.2515,750.0100,10.8096},
	{951.2515,750.0100,10.8096, 780.5138,689.3925,11.4581},
	{780.5138,689.3925,11.4581, 559.9733,696.3895,3.4388},
	{559.9733,696.3895,3.4388, 367.5167,783.2415,6.5434},
	{367.5167,783.2415,6.5434, 272.1324,877.9490,21.3849},
	{272.1324,877.9490,21.3849, 235.9642,956.7602,28.0319},
	{235.9642,956.7602,28.0319, 244.9654,975.6467,28.3250},
	{244.9654,975.6467,28.3250, 397.9491,1016.9831,28.5701},
	{397.9491,1016.9831,28.5701, 564.1965,1060.3011,28.5695},
	{564.1965,1060.3011,28.5695, 718.3242,1101.9430,28.5811},
	{718.3242,1101.9430,28.5811, 802.7499,1132.6182,28.5613},
	{802.7499,1132.6182,28.5613, 832.3854,1119.7511,29.9747},
	{832.3854,1119.7511,29.9747, 914.5725,941.4826,13.3511},
	{914.5725,941.4826,13.3511, 832.3351,854.2448,12.4807},
	{832.3351,854.2448,12.4807, 890.7936,891.7736,13.4848}, //////////////////
	{890.7936,891.7736,13.4848, 887.9802,1028.9658,16.6697},
	{887.9802,1028.9658,16.6697, 827.2870,1127.1987,30.0681},
	{827.2870,1127.1987,30.0681, 797.9722,1136.6748,28.4726},
	{797.9722,1136.6748,28.4726, 622.5432,1083.0826,28.4664},
	{622.5432,1083.0826,28.4664, 430.2862,1031.9989,28.4727},
	{430.2862,1031.9989,28.4727, 239.7596,980.1387,28.3301},
	{239.7596,980.1387,28.3301, 229.4479,955.5310,28.0652},
	{229.4479,955.5310,28.0652, 299.3630,797.7305,14.8966},
	{299.3630,797.7305,14.8966, 426.2678,601.2230,19.0801},
	{426.2678,601.2230,19.0801, 512.9183,478.3800,19.0631},
	{512.9183,478.3800,19.0631, 615.2172,326.4894,19.7042},
	{615.2172,326.4894,19.7042, 605.2267,308.3843,19.6450},
	{605.2267,308.3843,19.6450, 522.1287,247.3229,14.6816},
	{522.1287,247.3229,14.6816, 511.1678,212.9783,14.1755},
	{511.1678,212.9783,14.1755, 524.8848,55.7221,20.7846},
	{524.8848,55.7221,20.7846, 525.1271,-117.4125,37.5993},
	{525.1271,-117.4125,37.5993, 543.7299,-144.9373,37.3545},
	{543.7299,-144.9373,37.3545, 742.2243,-164.6572,19.2261},
	{742.2243,-164.6572,19.2261, 937.1564,-180.5933,11.0567},
	{937.1564,-180.5933,11.0567, 1089.0780,-190.0154,40.2116},
	{1089.0780,-190.0154,40.2116, 1187.1486,-185.4979,39.7762},
	{1187.1486,-185.4979,39.7762, 1251.4387,-354.2089,4.3749},
	{1251.4387,-354.2089,4.3749, 1228.0728,-559.8834,42.2943},
	{1228.0728,-559.8834,42.2943, 1154.3828,-773.3051,58.0512},
	{1154.3828,-773.3051,58.0512, 1156.1265,-925.4431,43.0940},
	{1156.1265,-925.4431,43.0940, 1180.6953,-953.1128,42.7677},
	{1180.6953,-953.1128,42.7677, 1268.9562,-936.8261,42.3414},
	{1268.9562,-936.8261,42.3414, 1347.3760,-943.0712,34.9112},
	{1347.3760,-943.0712,34.9112, 1359.3085,-961.2700,33.8680},
	{1359.3085,-961.2700,33.8680, 1340.5586,-1122.0743,23.8279},
	{1340.5586,-1122.0743,23.8279, 1358.0342,-1143.0795,23.8027},
	{1358.0342,-1143.0795,23.8027, 1436.1731,-1162.8156,23.7961},
	{1436.1731,-1162.8156,23.7961, 1498.9742,-1163.6650,24.0570},
	{1498.9742,-1163.6650,24.0570, 1656.2780,-1163.5833,23.9116},
	{1656.2780,-1163.5833,23.9116, 1728.9275,-1163.5092,23.7771}, ///////////
	{1728.9275,-1163.5092,23.7771, 1828.8960,-1183.5767,23.7642},
	{1828.8960,-1183.5767,23.7642, 1845.8003,-1200.4696,22.3763},
	{1845.8003,-1200.4696,22.3763, 1846.0093,-1298.4708,13.5051},
	{1846.0093,-1298.4708,13.5051, 1846.3126,-1443.3279,13.5332},
	{1846.3126,-1443.3279,13.5332, 1819.3213,-1590.4891,13.4889},
	{1819.3213,-1590.4891,13.4889, 1819.3759,-1711.7463,13.5161},
	{1819.3759,-1711.7463,13.5161, 1819.2158,-1848.1592,13.5477},
	{1819.2158,-1848.1592,13.5477, 1811.9922,-1888.8358,13.5436},
	{1811.9922,-1888.8358,13.5436, 1788.8031,-1905.1083,13.5291},
	{1788.8031,-1905.1083,13.5291, 0.0, 0.0, 0.0}
};

new TotalObject = 0;

static const stock WeaponNames[][32] =
{
	{"Unarmed (Fist)"}, // 0
	{"Brass Knuckles"}, // 1
	{"Golf Club"}, // 2
	{"Night Stick"}, // 3
	{"Knife"}, // 4
	{"Baseball Bat"}, // 5
	{"Shovel"}, // 6
	{"Pool Cue"}, // 7
	{"Katana"}, // 8
	{"Chainsaw"}, // 9
	{"Purple Dildo"}, // 10
	{"Big White Vibrator"}, // 11
	{"Medium White Vibrator"}, // 12
	{"Small White Vibrator"}, // 13
	{"Flowers"}, // 14
	{"Cane"}, // 15
	{"Grenade"}, // 16
	{"Teargas"}, // 17
	{"Molotov"}, // 18
	{" "}, // 19
	{" "}, // 20
	{" "}, // 21
	{"Colt 45"}, // 22
	{"Colt 45 (Silenced)"}, // 23
	{"Desert Eagle"}, // 24
	{"Normal Shotgun"}, // 25
	{"Sawnoff Shotgun"}, // 26
	{"Combat Shotgun"}, // 27
	{"Micro Uzi (Mac 10)"}, // 28
	{"MP5"}, // 29
	{"AK47"}, // 30
	{"M4A1"}, // 31
	{"Tec9"}, // 32
	{"Country Rifle"}, // 33
	{"Sniper Rifle"}, // 34
	{"Rocket Launcher"}, // 35
	{"Heat-Seeking Rocket Launcher"}, // 36
	{"Flamethrower"}, // 37
	{"Minigun"}, // 38
	{"Satchel Charge"}, // 39
	{"Detonator"}, // 40
	{"Spray Can"}, // 41
	{"Fire Extinguisher"}, // 42
	{"Camera"}, // 43
	{"Night Vision Goggles"}, // 44
	{"Infrared Vision Goggles"}, // 45
	{"Parachute"}, // 46
	{"Fake Pistol"} // 47
};

new bool:PlayerTied[MAX_PLAYERS];

//veh 523 Мотобат 525 - евакуатор гаи дпс(596 приорик 597 - 99 598 - иномарка 599 - уаз)
//551 Для спецназ автогазель
//552 Эвакуатор для игроков
static const stock carsC[][2] =
{//70 //новый цены Порядок распределения машин в автосалоне
	{439, 50000},
	{516, 100000},
	{507, 130000},
	{492, 130000},
	{527, 3750},
	{526, 4125},
	{529, 11750},
	{489, 4000},
	{411, 15000},
	{400, 10000000},
	{402, 16200},
	{405, 15000000},
	{410, 50000},
	{415, 5000000},
	{505, 7500000},
	{422, 11200},
	{429, 75000},
	{436, 37500},
	{445, 17500},
	{491, 800000},
	{540, 7500000},
	{466, 5000000},
	{604, 10000000},
	{475, 30000},
	{477, 22500},
	{579, 3000000},
	{526, 20000000},
	{495, 125000},
	{506, 250000},
	{535, 180000},
	{543, 200000},
	{550, 10000},
	{558, 25000},
	{559, 50000},
	{560, 75000},
	{562, 38000},
	{565, 18000},
	{579, 130000},
	{602, 50000},
	{603, 5000},
	{604, 120000},//МОТО
	{502, 100000},
	{420, 12000},
	{503, 100000},
	{585, 18000},
	{451, 90000}
};

static const stock JoinShopF[][2] =
{
	{31, 20},
	{13, 20},
	{198, 20},
	{38, 25},
	{201, 25},
	{39, 30},
	{207, 30},
	{131, 30},
	{195, 30},
	{9, 30},
	{10, 30},
	{238, 30},
	{151, 30},
	{152, 30},
	{69, 30},
	{192, 30},
	{237, 30},
	{193, 30},
	{190, 30},
	{226, 30},
	{169, 30},
	{90, 30},
	{214, 30},
	{55, 30},
	{56, 30},
	{141, 30},
	{211, 30},
	{11, 30},
	{150, 30},
	{150, 30},
	{12, 30},
	{172, 30},
	{172, 30},
	{91,  30},
	{216, 30},
	{219, 30},
	{219, 30},
	{63, 30},
	{93, 30},
	{233, 30}
};

static const stock JoinShopM[][2] =
{
	{1, 30},
	{2, 30},
	{3, 30},
	{4, 30},
	{7, 30},
	{14, 30},
	{20, 30},
	{21, 30},
	{22, 30},
	{23, 30},
	{24, 30},
	{25, 30},
	{26, 30},
	{29, 30},
	{46, 30},
	{48, 30},
	{51, 30},
	{52, 30},
	{59, 30},
	{66, 30},
	{67, 30},
	{72, 30},
	{73, 30},
	{78, 30},
	{79, 30},
	{82, 30},
	{83, 30},
	{98, 30},
	{103, 30},
	{113, 30},
	{120, 30},
	{147, 30},
	{173, 30},
	{176, 30},
	{184, 30},
	{187, 30},
	{188, 30},
	{227, 30},
	{240, 30},
	{296, 30},
	{299, 30}
};

static const stock pdd_MSG[][] =
{
	{"{ffffff}Общие положения:\n"},
	{"1.Разрешенная скорость передвижения для т/с, по городу - 60 км/ч, за городом - 110 км/ч, на автомагистралях - 150 км/ч.\n"},
	{"2.При необходимости, водитель обязан пропустить т/с со спец.сигналом (Полиция,Служба спасения,Скорая помощь) , а именно: постепенно снижая скорость, прижаться к обочине.\n"},
	{"3.Перекрестки в области являются нерегулируемыми. Разрешается проезд на запрещающие сигналы светофора.\n"},
	{"4.По требованию работника правоoхранительных органов, водитель обязан остановиться и выполнить все перечисленные требования сотрудника правоохранительных органов.\n"},
	{"5.В случае возникновения ДТП(Дорожно-транспортного происшествия) водитель обязан: \n"},
	{"  а) оставаться на месте ДТП;\n"},
	{"  б) Вызвать сотрудников правоохоранительных органов;\n"},
	{"  в) Вызвать сотрудников скорой помощи, если того требует ситуация.\n"},
	{"6.Водитель обязан пропускать пешеходов, в специальных местах для перехода (перекрестки, специальная разметка).\n"},
	{"7.Водитель обязан осуществлять парковку транспортного средства только на стоянках, либо на обочине, заезжая при этом только 2-мя колесами.\n"},
	{"Запрещается:\n"},
	{"1. Выезд на полосу встречного движения при очевидной угрозе лобового столкновения.\n"},
	{"2. Экстренное торможение без везкой причины, в случае возникновения поломки т/с, по мере возможности Вам следует:\n"},
	{" а) прижаться к обочине;\n"},
	{" б) включить сигнал, оповещающий об аварийной ситуации.\n"},
	{"3.Обгон впереди движущегося т/с с правой стороны,обгон разрешен лишь в случае поворота впереди движущегося т/с.\n"},
	{"4.Нарушение установленного скоростного лимита.\n"},
	{"5.Управление транспортным средством в нетрезвом виде.\n"},
	{"6. Разворот в туннелях строго запрещен.\n"},
	{"7. Движение транспортного средства задним ходом разрешается при условии, что этот маневр будет безопасен и не создаст помех другим участникам движения.\n"},
	{"При необходимости водитель должен прибегнуть к помощи других лиц.\n"},
	{"8. На автомагистралях запрещается: движение задним ходом и учебная езда."}
};

Float:S_GetPlayerDistanceFromPoint(playerid, Float:x, Float:y, Float:z)
{
	new NaN_String[5];
	new Float:Distance = GetPlayerDistanceFromPoint(playerid, x, y, z);
	format(NaN_String, 5, "%f", Distance);
	if(!strcmp(NaN_String, "NaN")) return 3000.0;
	return Distance;
}
#define GetPlayerDistanceFromPoint S_GetPlayerDistanceFromPoint

Float:S_GetVehicleDistanceFromPoint(vehicleid, Float:x, Float:y, Float:z)
{
	new NaN_String[5];
	new Float:Distance = GetVehicleDistanceFromPoint(vehicleid, x, y, z);
	format(NaN_String, 5, "%f", Distance);
	if(!strcmp(NaN_String, "NaN")) return 3000.0;
	return Distance;
}
#define GetVehicleDistanceFromPoint S_GetVehicleDistanceFromPoint

stock SetPlayerAmmoEx(playerid, weaponid, ammo)
{
	new slot = GetGunSlot(weaponid);
	GunPlayer[playerid][slot][0] = weaponid;
	GunPlayer[playerid][slot][1] = ammo;
	SetPlayerAmmo(playerid, weaponid, ammo);
	AC_GunCheattime[playerid]= unix + 3;
	return 1;
}
#define SetPlayerAmmo SetPlayerAmmoEx

stock SetHealth(playerid, Float: Heal)
{
	PlayerHP[playerid] = Heal;
	SetPlayerHealth(playerid, Heal);
	AC_Healthtime[playerid] = unix+3+floatround(GetPlayerPing(playerid)/100);
	return 1;
}

#if defined _ALS_SetPlayerHealth
#undef SetPlayerHealth
#else
#define _ALS_SetPlayerHealth
#endif
#define	SetPlayerHealth SetHealth

stock SetArmour(playerid, Float: Arm)
{
	PlayerAP[playerid] = Arm;
	SetPlayerArmour(playerid, Arm);
	AC_Armourtime[playerid] = unix+3+floatround(GetPlayerPing(playerid)/100);
	return 1;
}

#if defined _ALS_SetPlayerArmour
#undef SetPlayerArmour
#else
#define _ALS_SetPlayerArmour
#endif
#define	SetPlayerArmour SetArmour

stock SetPlayerSkinEx(playerid, skinid)
{
	ClearAnimations(playerid, 1);
	if(skinid > 299) skinid = 299;
	else if(skinid < 0) skinid = 0;
	SetPlayerSkin(playerid, skinid);
}
#if defined _ALS_SetPlayerSkin
#undef SetPlayerSkin
#else
#define _ALS_SetPlayerSkin
#endif
#define	SetPlayerSkin SetPlayerSkinEx

stock CreateVehicleEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new carid = CreateVehicle(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	
	if(modelid != 0)
	{
	    TrunkInfo[carid][tOpen] = true;
		switch(modelid)
		{
		    case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[carid] = VEHICLE_STATE_BOAT;
			case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
			563, 577, 592, 593:  VehicleState[carid] = VEHICLE_STATE_PLANE;
			case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[carid] = VEHICLE_STATE_BIKE;
			case 509, 481, 510: VehicleState[carid] = VEHICLE_STATE_VELIK;
			case 462,448: VehicleState[carid] = VEHICLE_STATE_MOPED;
			case 538, 537: VehicleState[carid] = VEHICLE_STATE_TRAIN;
			default: VehicleState[carid] = VEHICLE_STATE_CAR;
		}
	}
	
	if(carid == 65535) return 0;
	return carid;
}
#if defined _ALS_CreateVehicle
#undef CreateVehicle
#else
#define _ALS_CreateVehicle
#endif
#define	CreateVehicle CreateVehicleEx

stock AddStaticVehicleExEx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2, SpawnDelay)
{
	new carid = AddStaticVehicleEx(modelid, X, Y, Z, A, Color1, Color2, SpawnDelay);
	
	if(modelid != 0)
	{
	    TrunkInfo[carid][tOpen] = true;
		switch(modelid)
		{
		    case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[carid] = VEHICLE_STATE_BOAT;
			case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
			563, 577, 592, 593:  VehicleState[carid] = VEHICLE_STATE_PLANE;
			case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[carid] = VEHICLE_STATE_BIKE;
			case 509, 481, 510: VehicleState[carid] = VEHICLE_STATE_VELIK;
			case 462,448: VehicleState[carid] = VEHICLE_STATE_MOPED;
			case 538, 537: VehicleState[carid] = VEHICLE_STATE_TRAIN;
			default: VehicleState[carid] = VEHICLE_STATE_CAR;
		}
	}
	
	if(carid == 65535) return 0;
	return carid;
}
#if defined _ALS_AddStaticVehicleEx
#undef AddStaticVehicleEx
#else
#define _ALS_AddStaticVehicleEx
#endif
#define	AddStaticVehicleEx AddStaticVehicleExEx

stock AddStaticVehicleExx(modelid, Float: X, Float: Y, Float: Z, Float: A, Color1, Color2)
{
	new carid = AddStaticVehicle(modelid, X, Y, Z, A, Color1, Color2);
	
	if(modelid != 0)
	{
	    TrunkInfo[carid][tOpen] = true;
		switch(modelid)
		{
		    case 430, 446, 452, 453, 454, 472, 473, 484, 493: VehicleState[carid] = VEHICLE_STATE_BOAT;
			case 417, 425, 447, 460, 469, 476, 487, 488, 497, 511, 512, 513, 519, 520, 548, 553,
			563, 577, 592, 593:  VehicleState[carid] = VEHICLE_STATE_PLANE;
			case 581, 522, 461, 521, 523, 463, 468, 471, 586: VehicleState[carid] = VEHICLE_STATE_BIKE;
			case 509, 481, 510: VehicleState[carid] = VEHICLE_STATE_VELIK;
			case 462,448: VehicleState[carid] = VEHICLE_STATE_MOPED;
			case 538, 537: VehicleState[carid] = VEHICLE_STATE_TRAIN;
			default: VehicleState[carid] = VEHICLE_STATE_CAR;
		}
	}
	
	if(carid == 65535) return 0;
	return carid;
}
#if defined _ALS_AddStaticVehicle
#undef AddStaticVehicle
#else
#define _ALS_AddStaticVehicle
#endif
#define	AddStaticVehicle AddStaticVehicleExx

stock DestroyVehicleEx(vehicleid)
{
    if(!IsValidVehicle(vehicleid)) return 0;
    
	for ( new i ; i < 5 ; i ++ )
	{
		VehInfos [ vehicleid - 1 ] [ v_pt_engine ] [ i ] = 0 ;	
		VehInfos [ vehicleid - 1 ] [ v_pt_brake ] [ i ] = 0 ;	
		VehInfos [ vehicleid - 1 ] [ v_pt_stability ] [ i ] = 0 ;	
	}
	
	return (DestroyVehicle(vehicleid));
}
#if defined _ALS_DestroyVehicle
#undef DestroyVehicle
#else
#define _ALS_DestroyVehicle
#endif
#define	DestroyVehicle DestroyVehicleEx

stock ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	SetPVarInt(playerid, "USEDIALOGID", dialogid);
	return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}
#if defined _ALS_ShowPlayerDialog
#undef ShowPlayerDialog
#else
#define _ALS_ShowPlayerDialog
#endif
#define	ShowPlayerDialog ShowPlayerDialogEx

stock AC_SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
{
	if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;
	foreach(new playerid: Player)
	{
	   if(IsPlayerInVehicle(playerid, vehicleid)) playerCheckFly[playerid] = SleepTime(playerid);
	}
	return SetVehiclePos(vehicleid, x, y, z);
}

#if defined _ALS_SetVehiclePos
	#undef SetVehiclePos
#else
	#define	_ALS_SetVehiclePos
#endif
#define SetVehiclePos AC_SetVehiclePos

stock AC_SetVehicleZAngle(vehicleid, Float:A)
{
	if(vehicleid < 1 || vehicleid > MAX_VEHICLES) return 0;
	SetVehicleZAngle(vehicleid, A);
	return 1;
}

stock AC_SetVehicleToRespawn(vehicleid)
{
   	SetVehicleToRespawn(vehicleid);

    new Float:x, Float:y, Float:z, Float:a;
    GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	return 1;
}

stock AC_PutPlayerInVehicle(playerid, vehicleid, seatid)
{
    foreach(new otherid: Player) if(IsPlayerInVehicle(otherid, vehicleid) && seatid == GetPlayerVehicleSeat(otherid) && InShop[playerid] == 0) return 0;
	playerCheckFly[playerid] = SleepTime(playerid);

	playerVehicleEnter[playerid] = vehicleid;
	playerVehicleEnterTime[playerid] = GetTickDiffAC(GetTickCount(), (SleepTime(playerid) * 1000));
	
	PTick[playerid] = GetTickCount() + 250;

	return PutPlayerInVehicle(playerid, vehicleid, seatid);
}

#if defined _ALS_PutPlayerInVehicle
	#undef PutPlayerInVehicle
#else
	#define	_ALS_PutPlayerInVehicle
#endif
#define PutPlayerInVehicle AC_PutPlayerInVehicle

stock AC_SetPlayerPos(playerid, Float:x, Float:y, Float:z, behind = true)
{
    playerCheckFly[playerid] = SleepTime(playerid);
    
    FreezePlayer(playerid, 5000);

    if(GetPVarInt(playerid, "CallPlayerStart")) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	if(behind) SetCameraBehindPlayer(playerid);
	return SetPlayerPos(playerid, x, y, z);
}

#if defined _ALS_SetPlayerPos
	#undef SetPlayerPos
#else
	#define	_ALS_SetPlayerPos
#endif
#define SetPlayerPos AC_SetPlayerPos

stock Float:GetDistanceBetweenPoints(Float:X, Float:Y, Float:Z, Float:PointX, Float:PointY, Float:PointZ)
{
	new Float:Distance;Distance = floatabs(floatsub(X, PointX)) + floatabs(floatsub(Y, PointY)) + floatabs(floatsub(Z, PointZ));
	return Distance;
}

forward DisconnectPlayer(playerid);
public DisconnectPlayer(playerid)
{
	printf("%s[%d] kicked by DisconnectPlayer", GetName(playerid), playerid);
	Kick(playerid);
}

stock KickEx(playerid)
{
	printf("%s[%d] kicked by KickEx", GetName(playerid), playerid);
	new fix_ping = GetPlayerPing(playerid) + 25;
	return SetTimerEx("DisconnectPlayer", fix_ping>1000?1000:fix_ping, 0, "d", playerid);
}
#if defined _ALS_Kick
#undef Kick
#else
#define _ALS_Kick
#endif
#define	Kick KickEx

stock GetTeamID(playerid)
{
	if(p_info[playerid][pMember] > 0) return p_info[playerid][pMember];
	if(p_info[playerid][pLeader] > 0) return p_info[playerid][pLeader];
	if(p_info[playerid][pTempLeader] > 0) return p_info[playerid][pTempLeader];
	return 0;
}

stock GetColor(playerid)
{
	new str[8];
	format(str, sizeof(str), "%06x", p_info[playerid][pColor] >>> 8);
	return str;
}

stock SetPlayerColorEx(playerid, color)
{
	p_info[playerid][pColor] = color;
	SetPlayerColor(playerid, color);
	return 1;
}
#if defined _ALS_SetPlayerColor
#undef SetPlayerColor
#else
#define _ALS_SetPlayerColor
#endif

stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

stock IsPlayerApplyAnimation(playerid, animation[])
{
	if(!GetPlayerAnimationIndex(playerid)) return 0;
	new animlib[32], animname[32];
	GetAnimationName(GetPlayerAnimationIndex(playerid), animlib, sizeof(animlib), animname, sizeof(animname));
	if(strcmp(animname, animation, true) == 0) return 1;
	return 0;
}

stock Float:PointToPoint2D(Float:x1,Float:y1,Float:x2,Float:y2)
{
	return floatsqroot(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)));
}

stock Float:GetPlayerDistanceToPlayer(playerid, targetid)
{
    new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerPos(targetid, x2, y2, z2);
    return PointToPoint2D(x, y, x2, y2);
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
	if(issuerid == INVALID_PLAYER_ID) return 1;
	if(weaponid == 3)
	{
		if(IsACop(issuerid))
		{
			if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(issuerid, C_RED, "Человек в машине");
			if(GetPVarInt(playerid, "Tazer") > 0 || pCuff[playerid][pCuffee] == playerid) return SendClientMessage(issuerid, C_RED, "Игрок уже оглушен / в наручниках");

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s оглушил Вас на 15 секунд", GetName(issuerid));
			SendClientMessage(playerid, COLOR_BLUE, STRING_GLOBAL);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы оглушили %s на 15 секунд", GetName(playerid));
			SendClientMessage(issuerid, COLOR_BLUE, STRING_GLOBAL);

			new string[64];
			if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "оглушил дубинкой %s", GetName(playerid));
			else format(string, sizeof(string), "оглушила дубинкой %s", GetName(playerid));
			MeAction(issuerid, string);
			ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 1, 1, 1, 0, 1);
			SetTimerEx("TazerOff", 15000, 0, "d", playerid);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "Tazer", 1);
		}
	}
	if(weaponid == 23)
	{
		if(IsACop(issuerid))
		{
			if(GetPVarInt(issuerid, "TazerGun") == 1)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(issuerid, C_RED, "Человек в машине");
				if(GetPVarInt(playerid, "Tazer") > 0 || pCuff[playerid][pCuffee] == playerid) return SendClientMessage(issuerid, C_RED, "Игрок уже оглушен / в наручниках");

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s обездвижил Вас электрошокером на 15 секунд", GetName(issuerid));
				SendClientMessage(playerid, COLOR_BLUE, STRING_GLOBAL);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы обездвижили электрошокером %s на 15 секунд", GetName(playerid));
				SendClientMessage(issuerid, COLOR_BLUE, STRING_GLOBAL);

				new string[64];
				if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "обездвижил %s электрошокером", GetName(playerid));
				else format(string, sizeof(string), "обездвижила %s электрошокером", GetName(playerid));
				MeAction(issuerid, string);
				ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 0, 1, 1, 1, 0, 1);
				SetTimerEx("TazerOff", 15000, 0, "d", playerid);
				TogglePlayerControllable(playerid, 0);
				SetPVarInt(playerid, "Tazer", 1);
			}
		}
	}
	if(Kolokol[issuerid] == 0)
	{
		PlayerPlaySound(issuerid, 6401, 0.0, 0.0, 0.0);
	}
	if(DamageInfo[issuerid] == 0)
 	{
		if(Damage[issuerid] == 0)
		{
			CreateShotTD(DamageTD[issuerid]);

			new temp[10];
			format(temp, sizeof temp, "-%dhp", floatround(amount));
			TextDrawSetString(DamageTD[issuerid], temp), TextDrawShowForPlayer(issuerid, DamageTD[issuerid]);

		 	Damage[issuerid] = SetTimerEx("onDamage", 1000, 0, "i", issuerid);
		}
	}
	if(issuerid != 65535)
	{
	    if(weaponid >= 0 && weaponid <= 8)
	    {
			if(p_info[issuerid][pStats][2] > 0)
			{
				PlayerHP[playerid] -= float(p_info[issuerid][pStats][2]/4);
				SetHealth(playerid, PlayerHP[playerid]);
			}
		}
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    //if(source) OnGuardWarningCheater(playerid, "Click Crash", 85);
	return 1;
}


stock FreezePlayer(playerid, time)
{
	TogglePlayerControllable(playerid, false ) ;
	return SetTimerEx("UnFreezePlayer", time, 0, "i", playerid);
}

forward UnFreezePlayer(playerid);
public UnFreezePlayer(playerid)
{
	TogglePlayerControllable(playerid, true ) ;
	
	if(GetPVarInt(playerid, "Tazer") > 0)
	{
		SetPVarInt(playerid, "Tazer", 0);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	}
	return 1;
}

forward MaskOff(playerid);
public MaskOff(playerid)
{
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==45){ok=s;break;}
	}
	SetPlayerColorEx(playerid,TeamColors[GetTeamID(playerid)]);
	PlayerUseMask[playerid] = false;
	if(PlayerItem2[playerid][ok] == 0)
	{
		PlayerItem1[playerid][ok]=0;
	}
	PlayerItem2[playerid][ok]--;
	SaveItem(playerid,ok);
	SetPlayerChatBubble(playerid, "снял(а) маску", COLOR_PURPLE, 13.0, 10000);
	GameTextForPlayer(playerid, "~y~INVISABLE OFF", 800, 6);
	PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
	return 1;
}

forward MinuteTimer();
public MinuteTimer()
{
	new hour, minute, pick_online[128], pick_online1[128];
	gettime(hour, minute, _);

	if(minute % 5 == 0)
	{
	    switch(random(5))
	    {
	        case 0:
	        {
	        	SendClientMessageToAll(COLOR_INFO2, "На сервере запрещены ДМ, ДБ, Флуд, любого рода читы, оскорбления и т.д. Команды сервера /mm");
				SendClientMessageToAll(COLOR_INFO3, "Увидели читера? Используйте /report id жалоба и его накажут");
	        }
	        case 1:
	        {
	            SendClientMessageToAll(COLOR_INFO2, "Нужен телефон? Купите его в магазине 24/7. В магазине Вы также сможете найти много интересующих Вас товаров");
				SendClientMessageToAll(COLOR_INFO3, "Не знаете куда идти? Система /gps всегда поможет Вам");
	        }
	        case 2:
			{
			    SendClientMessageToAll(COLOR_INFO2, "Хотите приобрести дом, машину или вступить в организацию? Подайте объявление. (/ad текст)");
				SendClientMessageToAll(COLOR_INFO3, "Подать объявление можно в любом месте, главное иметь телефон");
			}
			case 3:
			{
			    SendClientMessageToAll(COLOR_INFO2, "Посетите сайт сервера "SERVER_FORUM", раздел FAQ поможет найти ответы на интересующие Вас вопросы");
				SendClientMessageToAll(COLOR_INFO3, "Так Вы же можете посетить группу сервера "SERVER_GROUP"");
			}
			case 4:
			{
				format(pick_online, sizeof(pick_online), "При достижении %d игроков на сервере будет включен режим 'x2' на опыт и заработные платы", pickplayers[0]);
			    SendClientMessageToAll(COLOR_INFO2, pick_online);
				SendClientMessageToAll(COLOR_INFO3, "Приглашайте друзей и получайте 10 процентов с их пополнений. (/referals)");
			}
	    }
	}
	
 	new h, m, s, day, month, year;
    gettime(h, m, s);
    getdate(year, month, day);

    new data_str[90], time_str[90];
    format(time_str, sizeof(time_str), "%02d:%02d", h, m);
    format(data_str, sizeof(data_str), "%02d.%02d.%d", day, month, year);

	new count_i = 0;
    foreach(new i: Player)
    {
        TextDrawSetString(info_server[0], time_str);
        TextDrawShowForPlayer(i, info_server[0]);
        TextDrawSetString(info_server[1], data_str);
        TextDrawShowForPlayer(i, info_server[1]);
        
        count_i++;
        
        if(m == 50) startnarko[i] = 1;
    }
    
    if(count_i >= pickplayers[0])
    {
    	if(pickplayers[1] == 0)
     	{
      		pickplayers[1] = 1;
      		doubling_exp = 1;
			doubling_donate = 1;
			doubling_job = 1;
   			format(pick_online1, sizeof(pick_online1), "Онлайн сервера достиг %d игроков. Режим 'x2' на опыт и заработные платы активирован", pickplayers[0]);
 			SendClientMessageToAll(COLOR_INFO2, pick_online1);
		}
  	}
   	else if(count_i < pickplayers[0])
   	{
    	if(pickplayers[1] == 1)
     	{
      		pickplayers[1] = 0;
   			doubling_exp = 0;
			doubling_donate = 0;
			doubling_job = 0;
 			SendClientMessageToAll(COLOR_INFO2, "Режим 'x2' на опыт и заработные платы деактивирован");
		}
  	}
	
	if(m == 15) GOCS();
	if(m == 30) ChangeWeather();
	if(m == 45) GOZaezd();
	if(h == 10 && m == 35 || h == 13 && m == 35 || h == 16 && m == 35 || h == 19 && m == 35 || h == 22 && m == 35)
	{
	    SendFMes(7, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой прибыл в аэропорт п. Батырево");
	    SendFMes(7, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Место отмечено на карте, берите фуры и отправляйтесь в аэропорт");

	    SendFMes(8, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой прибыл в аэропорт п. Батырево");
	    SendFMes(8, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Место отмечено на карте, берите фуры и отправляйтесь в аэропорт");

	    SendFMes(15, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой прибыл в аэропорт п. Батырево");
	    SendFMes(15, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Место отмечено на карте, берите фуры и отправляйтесь в аэропорт");

	    SendFMes(16, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой прибыл в аэропорт п. Батырево");
	    SendFMes(16, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Место отмечено на карте, берите фуры и отправляйтесь в аэропорт");
	    
		camel = CreateDynamicObject(1683, 1146.30, 1547.90, 83.04,   0.00, 10.00, 0.00, -1, -1, -1, 300.0, 300.0);

		CreateCamel();
	}
	if(h == 10 && m == 45 || h == 13 && m == 45 || h == 16 && m == 45 || h == 19 && m == 45 || h == 22 && m == 45)
	{
	    SendFMes(12, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой покидает аэропорт п. Батырево");
	    SendFMes(7, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой покидает аэропорт п. Батырево");
	    SendFMes(8, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой покидает аэропорт п. Батырево");
	    SendFMes(15, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой покидает аэропорт п. Батырево");
	    SendFMes(16, COLOR_LIGHTBLUE, "[КОНТРАБАНДА]: Самолёт с контрабандой покидает аэропорт п. Батырево");
	    DeleteCamel();
	}
	if(h == 9 && m == 35 || h == 12 && m == 35 || h == 15 && m == 35 || h == 18 && m == 35 || h == 21 && m == 35)
	{
	    SendFMes(12, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка прибыла в пирс г. Лыткарино");
	    SendFMes(12, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Место отмечено на карте, берите фуры и отправляйтесь к подводной лодке");
	    
	    SendFMes(7, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка прибыла в пирс г. Лыткарино");
	    SendFMes(7, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Место отмечено на карте, берите фуры и отправляйтесь к подводной лодке");
	    
	    SendFMes(8, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка прибыла в пирс г. Лыткарино");
	    SendFMes(8, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Место отмечено на карте, берите фуры и отправляйтесь к подводной лодке");
	    
	    SendFMes(15, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка прибыла в пирс г. Лыткарино");
	    SendFMes(15, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Место отмечено на карте, берите фуры и отправляйтесь к подводной лодке");
	    
	    SendFMes(16, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка прибыла в пирс г. Лыткарино");
	    SendFMes(16, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Место отмечено на карте, берите фуры и отправляйтесь к подводной лодке");
	    CreatePirs();
	}
	if(h == 9 && m == 45 || h == 12 && m == 45 || h == 15 && m == 45 || h == 18 && m == 45 || h == 21 && m == 45)
	{
	    SendFMes(12, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка покинула пирс г. Лыткарино");
	    SendFMes(7, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка покинула пирс г. Лыткарино");
	    SendFMes(8, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка покинула пирс г. Лыткарино");
	    SendFMes(15, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка покинула пирс г. Лыткарино");
	    SendFMes(16, COLOR_LIGHTBLUE, "[БОЕПРИПАСЫ]: Подводная лодка покинула пирс г. Лыткарино");
	    DeletePirs();
	}
	if(h >= 22 && m == 20 || h <= 8 && m == 20)
	{
	}
	if(h == 20 && m == 05)
	{
	    foreach(new i: Helpers)
	    {
    		mysql_tquery(dbHandle, "SELECT `ans` FROM "T_HELPER"", "GiveHelperZP", "i", i);
	    }
	}
	if(h == 5 && m == 10) // - Рестарт по времени
	{
		GameTextForAll("~b~RESTART", 5000, 6);
		SendClientMessageToAll(COLOR_RED, "* Уважаемые игроки, происходит автоматическая перезагрузка сервера...");
		SaveWarehouse();
		foreach(new i: Player)
		{
			if(!PlayerLogged[i]) continue;
			Kick(i);
		}
		SetTimer("GameModeExitDelay", 5000, false);
	}
}

forward Timer_Unix();
public Timer_Unix()
{
	if(timers_unix > -1)
	{
	    new tmphour, tmpminute, tmpsecond;
		unix = gettime(tmphour, tmpminute, tmpsecond);
		if(unix_hour <= unix)
		{
		    new saturday = 1310155200, w = gettime();
			while(w - saturday > 60 * 60 * 24)
		    {
		    	w -= 60 * 60 * 24;
		      	day_weeks ++;
		  	}
		  	while(day_weeks >= 7) day_weeks -= 7;
		
		    SetWorldTime(tmphour);
			PayDay();
			
			if(konf_kd > 0) konf_kd--;
		
			unix_hour = unix+3600;
		}
		if(unix_min <= unix)
		{
		    MinuteTimer();

			unix_min = unix+60;
		}
		if(unix_sec <= unix)
		{
		    SecTimer();

			unix_sec = unix+1;
		}
  		if(unix_three_sec <= unix)
		{
		    ThreeSecTimer();
		    
			unix_three_sec = unix + 3;
		}
		AntiCheat();
		//ServerFuncScr();
	}
	return 1;
}

/*forward ServerFuncScr();
public ServerFuncScr()
{
	foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	    	if(IsPlayerNPC(i))
			{
				continue;
			}
			if( Updates[i] > 30 )
			{
				SetPVarInt(i,"WarningUpdates",  		 GetPVarInt(i,"WarningUpdates") + 1 );
				if( GetPVarInt(i,"WarningUpdates") > 3 )
				{
					foreach(new D: Player)
					{
						if(IsPlayerAdmin(D))
						{
						}
					}
   				}
			}
			CassC2 = 0;
			CassC2 = GetPlayerBytesReceived(i);
			if(  CassC2 - GetPVarInt(i,"BytesReceived") > 15000 )
			{
				SetPVarInt(i,"WarningDos",  		 GetPVarInt(i,"WarningDos") + 1 );
				if( GetPVarInt(i,"WarningDos") > 3  )
				{
					Kick(i);
				}
			}
			CassC = 0;
			CassC = GetPlayerAckSent(i);
			if(CassC-AckSent[i] > 100 && AckSent[i] != 0 )
			{
				foreach(new D: Player)
				{
					if(IsPlayerAdmin(D))
					{
						new string[128];
						format(string,sizeof(string), "Warning: DdosEx  IP %s %d",PIPS[i],CassC-AckSent[i]);
						SendClientMessage(D,0xFFFFFFFF, string);
					}
				}
				Kick(i);
			}
			AckSent[i] = CassC;
			SetPVarInt(i, "BytesReceived",    CassC2 );
			Updates[i] = 0;
		}
  	}
}*/

forward ThreeSecTimer();
public ThreeSecTimer()
{
    if(MafiaBattle[0][3] != 0)
	{
	    MafiaBattle[0][3] -= 3;
	    if(!MafiaBattle[0][3]) MafiaBattleFinish();
	    else MafiaBattleCheck();
	}
	foreach(new i: Player)
	{
	    if(PlayerLogged[i] == true)
	    {
	        if(admin_ban_time[i] > 0)
			{
				admin_ban_time[i] -= 3;
				MysqlUpdatePlayerInt(i, "ban_time", admin_ban_time[i]);
			}
			if(GetPVarInt(i, "CHECKTIME") && admin_check_time[i] == gettime()) DeletePVar(i, "CHECKTIME"), admin_attempt[i] = 0;
	    
		    if(startnarko[i] == 1)
			{
				if(p_info[i][Disease][2] >= 500)
				{
					if(send[i] == 0)
					{
						new Float:health;
						GetPlayerHealth(i,health);
						SendInf(i, "У Вас началась ломка, употребите наркотик или обратитесь к врачу");
						send[i] = 1;
						SetHealth(i, health - 2.0);
					}
					if(GetPlayerState(i) == PLAYER_STATE_ONFOOT) ApplyAnimation(i, "CRACK", "CRCKDETH1", 4.0, 1, 1, 1, 1, 0), send[i] = 1;
				}
			}
			
			if(p_info[i][pWanted] > 0)
			{
				p_info[i][pWantedTime] -= 3;
				if(p_info[i][pWantedTime] <= 0)
				{
					p_info[i][pWanted]--;
					SetPlayerWantedLevel(i, p_info[i][pWanted]);
					if(p_info[i][pWanted] > 0) p_info[i][pWantedTime] = 1800 + random(300);
					MysqlUpdatePlayerInt(i, "wanted", p_info[i][pWanted]);
					MysqlUpdatePlayerInt(i, "wantedtime", p_info[i][pWantedTime]);

					format(STRING_GLOBAL, 128, "Понижение уровня розыска, осталось звезд: %d", p_info[i][pWanted]);
					SendClientMessage(i, 0xfcfc00FF, STRING_GLOBAL);
				}
			}
			
			/*if(br_player[i][br_objects][0] != INVALID_OBJECT)
			{
			    new Float:x, Float:y, Float:z;
			    GetDynamicObjectPos(br_player[i][br_objects][0], x, y, z);
				new here_distance = (!IsPlayerInAnyVehicle(i)) ? floatround(GetPlayerDistanceFromPoint(i, x, y, z)) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(i), x, y, z));
				if ( here_distance > 250 )
				{
			      	for(new X = 0; X < 25; X++)
				    {
				        if(br_player[i][br_objects][X] != INVALID_OBJECT)
				        {
				            DestroyDynamicObject(br_player[i][br_objects][X]);
				            br_player[i][br_objects][X]=INVALID_OBJECT;
				        }
				    }
				}
			}
		 	if ( br_player[i][br_object_text][0] != INVALID_OBJECT )
			{
		 	    new Float:x, Float:y, Float:z;
			    GetDynamicObjectPos(br_player[i][br_object_text][0], x, y, z);
				new here_distance = (!IsPlayerInAnyVehicle(i)) ? floatround(GetPlayerDistanceFromPoint(i, x, y, z)) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(i), x, y, z));
				if ( here_distance > 250 )
				{
					DestroyDynamicObject ( br_player[i][br_object_text][0] ) ;
					br_player[i][br_object_text][0]=INVALID_OBJECT;
				}
			}
		  	if ( br_player[i][br_object_text][1] != INVALID_OBJECT )
			{
		 	    new Float:x, Float:y, Float:z;
			    GetDynamicObjectPos(br_player[i][br_object_text][1], x, y, z);
				new here_distance = (!IsPlayerInAnyVehicle(i)) ? floatround(GetPlayerDistanceFromPoint(i, x, y, z)) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(i), x, y, z));
				if ( here_distance > 250 )
				{
					DestroyDynamicObject ( br_player[i][br_object_text][1] ) ;
					br_player[i][br_object_text][1]=INVALID_OBJECT;
				}
			}*/
		}
	}
	return 1;
}

forward AntiCheat();
public AntiCheat()
{
	foreach(new playerid: Player)
	{
	    if(PlayerLogged[playerid] == true && PlayerSpawned[playerid] == true && p_info[playerid][pAFK] < 3)
		{
		    if(p_info[playerid][pAdmin] == 0)
		    {
				new gstate = GetPlayerState ( playerid ) ;
				new speed = SpeedVehicle(playerid) / 2;
			  	if(gstate == PLAYER_STATE_DRIVER)
				{
			 		if(GetTickDiffAC(GetTickCount(), playerLagSpeed[playerid]) < 1500 && !IsAirTransportAC(GetPlayerVehicleID(playerid)))
			 		{
					 	if((speed - playerLastSpeed[playerid]) > 39)
					 	{
					 	    if(++playerWarningSpeed{playerid} > 2) OnGuardWarningCheater(playerid, "Speed Diff", 85);
					 	    playerNullWarningTimer[playerid][0] = 10;
					 	}
				 	}
			 		playerLastSpeed[playerid] = speed;
			 	}
			}
		}
		playerLagSpeed[playerid] = GetTickCount();
	}
}

forward SecTimer();
public SecTimer()
{
	PlayerTimer();
	
	for(new id = (AC_WARNLINE - 1); id >= 0; id--) if(warningPanelTime{id}) { if(--warningPanelTime{id} <= 0)
	{
	    warningPanelText[id] = "_";
		TextDrawSetString(warningPanelTD[id], "_");
	}}
	
	if(robbery_time[0] > 0)
	{
		robbery_time[0]--;
		if(robbery_time[0] == 1) DoorsRobbery();
	}
	
	if(konf_time > 0)
	{
		konf_time--;
		if(konf_time == 1)
		{
		    konf_kd = 4;
		    konf_pay = 0;
		    konf_time = 0;
		    GangZoneDestroy(KonfiskatZoneID);
		}
	}

	for ( new i ; i < MAX_BONE ; i ++ )
	{
		if ( dice_info [ i ] [ b_started ] > 0 )
		{
			dice_info [ i ] [ b_started ] -- ;
			new gt_string [ 6 ] ;
			foreach(new g: Player)
			{
				if(GetPVarInt(g,"Stol")-1 == i && (GetPVarInt(g,"InGame") || dice_info[i][b_crupie] == g ) )
				{
					if ( dice_info [ i ] [ b_started ] == 0 && GetPVarInt ( g, "InGame" ) == 1 ) SetPVarInt ( g, "InGame", random ( 11 ) + 2 ), UpdateBone ( i ) ;
					else if ( dice_info [ i ] [ b_started ] > 0)
					{
						format ( gt_string, 6, "~g~%i", dice_info [ i ] [ b_started ] ) ;
						GameTextForPlayer ( g, gt_string, 5000, 6 ) ;
					}
				}
			}
			if ( dice_info [ i ] [ b_started ] == 0 ) return ShowItog ( i ) ;
		}
	}
	if(cs_open == true && cs_status == false)
	{
		if(cs_time == 0)
		{
		    foreach(new i: Player)
			{
			    if(p_info[i][data_CS_TEAM] != 0)
				{
				    if(cs_score[0] > cs_score[1])
				    {
				        if(p_info[i][data_CS_TEAM] == 1)
				        {
				        	SendInf(i, "Ваша команда выйграла на мероприятие 'Counter-Strike'");
				        	SendErr(i, "Ваш приз: 10 кредитов и 100.000 рублей");
				        	p_info[i][pCredits] += 10;
				        	MysqlUpdatePlayerInt(i, "credits", p_info[i][pCredits]);
				        	GiveMoney(i, 100000, "Победа CS");
						}
				    }
				    else if(cs_score[0] < cs_score[1])
				    {
				        if(p_info[i][data_CS_TEAM] == 2)
				        {
				        	SendInf(i, "Ваша команда выйграла на мероприятие 'Counter-Strike'");
				        	SendErr(i, "Ваш приз: 10 кредитов и 100.000 рублей");
				        	p_info[i][pCredits] += 10;
				        	MysqlUpdatePlayerInt(i, "credits", p_info[i][pCredits]);
				        	GiveMoney(i, 100000, "Победа CS");
						}
				    }
				    else if(cs_score[0] == cs_score[1])
				    {
				       	SendInf(i, "Ничья между командами на мероприятие 'Counter-Strike'");
				    }
				    SetPlayerTeam(i, NO_TEAM);
				    SetPlayerColorEx(i, TeamColors[GetTeamID(i)]);
				    if(p_info[i][pMember]) SetPlayerSkin(i, p_info[i][pMemberSkin]);
					else SetPlayerSkin(i, ClosetSkins[i][0]);

					p_info[i][data_CS_TEAM] = 0;
				    SetHealth(i, 100);

				    SetPlayerPos(i, 2266.8013,1411.5314,11.4501);
				    SetPlayerVirtualWorld(i, 0);
					SetPlayerInterior(i, 0);
					SetPlayerFacingAngle(i, 91.7044);
					SetCameraBehindPlayer(i);
					AC_ResetPlayerWeapons(i);
				}
			}
			SendClientMessageToAll(0x99FFFFFF,"* Мероприятие 'Counter-Strike' завершено.");
			cs_open = false;
			cs_score[0] = 0;
			cs_score[1] = 0;
		}
	}
	for(new carriageid; carriageid < sizeof miner_carriage; carriageid ++)	MinerCarriageUpdate(carriageid);
	return 1;
}

forward UpdateSpeedometr(playerid);
public UpdateSpeedometr(playerid)
{
	if(p_info[playerid][pAFK] >= 3 && GetPlayerState(playerid) != 2) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);
	if(IsAPlane(vehicleid)==1 || IsABoat(vehicleid)==1 || IsAMoped(vehicleid)==1 || IsAVel(vehicleid)==1) return 1;
	new speed = SpeedVehicle(playerid) / 2;
	VehMileage[vehicleid] += float(speed) / 3600.0;

	new Float:health, heal;
	GetVehicleHealth(GetPlayerVehicleID(playerid), health);
	heal = floatround(health);
	
	if(speed >= GetPVarInt(playerid,"slimit") && GetPVarInt(playerid,"slimit") >= 10 && GetPVarInt(playerid,"slimit") <= 150)
	{
  		SetVehicleSpeed ( vehicleid, GetPVarInt(playerid,"slimit") );
	}
	
	new Float:vehhealth;
	GetVehicleHealth(vehicleid, vehhealth);
	if(vehhealth <= 400 && Engine[vehicleid] == true)
	{
		if(Engine[vehicleid] == true) SendErr(playerid, "Машина поломана, вызовите механика");
		Engine[vehicleid] = false;
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,false,lights,alarm,doors,bonnet,boot,objective);
	}
	
	new _millage = floatround ( VehMileage[vehicleid] ), fmt_speed [ 39 ], fmt_speed_bar [ 128 ], fmt_fuel [ 41 ], fmt_hp [ 44 ], fmt_vehicle_name [ 48 ], fmt_mileage [ 53 ] ;
	
	format(fmt_speed, sizeof(fmt_speed), "%d", speed );
	PlayerTextDrawSetString(playerid, ptd_sp[playerid][39], fmt_speed);

	switch(speed)
	{
	    case 0: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~w~IIIIIIIIIIIIIIIIIIIIIII");
	    case 1..9: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~III~w~IIIIIIIIIIIIIIIIIIII");
	    case 10..19: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIII~w~IIIIIIIIIIIIIIIIIII");
	    case 20..29: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIII~w~IIIIIIIIIIIIIIIIII");
	    case 30..39: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIII~w~IIIIIIIIIIIIIIII");
	    case 40..49: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIIIII~w~IIIIIIIIIIIIII");
	    case 50..59: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIIIIIIII~w~IIIIIIIIIII");
	    case 60..69: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIIIIIIIII~w~IIIIIIIIII");
	    case 70..79: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIIIIIIIIII~w~IIIIIIIII");
	    case 80..99: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIIIIIIIIIII~w~IIIIIIII");
	    case 100..114: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIIIIIIIIIIIII~w~IIIIII");
	    case 115..150: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIIIIIIIIIIIIIIIII~w~II");
	    default: format(fmt_speed_bar, sizeof(fmt_speed_bar),"~r~IIIIIIIIIIIIIIIIIIIIIII");
	}
	PlayerTextDrawSetString(playerid, ptd_sp[playerid][1], fmt_speed_bar);

	format
	(
	    fmt_fuel, sizeof(fmt_fuel),"%d л.",
		Fuel[vehicleid]
	);
	PlayerTextDrawSetString(playerid, ptd_sp[playerid][41], fmt_fuel);

	format
	(
	    fmt_hp,sizeof(fmt_hp),"%d HP",
		heal/10
	);
	PlayerTextDrawSetString(playerid, ptd_sp[playerid][44], fmt_hp);

	format
    (
        fmt_vehicle_name, sizeof(fmt_vehicle_name), "%s",
        VehicleNames[GetVehicleModel(vehicleid)-400]

    );
    PlayerTextDrawSetString(playerid, ptd_sp[playerid][22], fmt_vehicle_name);

    format
	(
		fmt_mileage, sizeof(fmt_mileage), "%d Км.",
		_millage
    );
    PlayerTextDrawSetString(playerid, ptd_sp[playerid][53], fmt_mileage);

    PlayerTextDrawTextSize(playerid, ptd_sp[playerid][8], 546.6+health/1000.0*25, 0.0);
	PlayerTextDrawShow(playerid, ptd_sp[playerid][8]);

	PlayerTextDrawTextSize(playerid, ptd_sp[playerid][4], 505.1+Fuel[vehicleid]/100.0*25, 0.0);
	PlayerTextDrawShow(playerid, ptd_sp[playerid][4]);

	switch(Fuel[vehicleid])
	{
       case 0: PlayerTextDrawBoxColor(playerid,ptd_sp[playerid][4], COLOR_RED);
       case 1..10: PlayerTextDrawBoxColor(playerid,ptd_sp[playerid][4], COLOR_DARKORANGE);
       case 11..45: PlayerTextDrawBoxColor(playerid,ptd_sp[playerid][4], COLOR_LIGHTBLUE);
	}

	if ( IsLocked[GetPlayerVehicleID(playerid)] == true )
	{
		PlayerTextDrawColor(playerid, ptd_sp[playerid][52], COLOR_LIGHTGREEN);
		PlayerTextDrawShow(playerid, ptd_sp[playerid][52]);
	}
	else
	{
		PlayerTextDrawColor(playerid, ptd_sp[playerid][52], COLOR_RED);
		PlayerTextDrawShow(playerid, ptd_sp[playerid][52]);
	}
	if ( Engine[GetPlayerVehicleID(playerid)] == true )
	{
		PlayerTextDrawColor(playerid, ptd_sp[playerid][50], COLOR_LIGHTGREEN);
		PlayerTextDrawShow(playerid,ptd_sp[playerid][50]);
	}
	else
	{
		PlayerTextDrawColor(playerid,ptd_sp[playerid][50], COLOR_RED);
		PlayerTextDrawShow(playerid,ptd_sp[playerid][50]);
	}
	if ( Lights[GetPlayerVehicleID(playerid)] == true )
	{
		PlayerTextDrawColor(playerid, ptd_sp[playerid][51], COLOR_LIGHTGREEN);
		PlayerTextDrawShow(playerid,ptd_sp[playerid][51]);
	}
	else
	{
		PlayerTextDrawColor(playerid,ptd_sp[playerid][51], COLOR_RED);
		PlayerTextDrawShow(playerid,ptd_sp[playerid][51]);
	}

	new Float:_coord [ 3 ];
	GetVehicleVelocity ( vehicleid,_coord[0],_coord[1],_coord[2]);	
	new Float:v_speed = floatsqroot(floatpower(floatabs(_coord[0]), 2.0) + floatpower(floatabs(_coord[1]), 2.0) + floatpower(floatabs(_coord[2]), 2.0)) * 100.3  ;
	new Float:veh_health_now ;
	GetVehicleHealth( vehicleid,veh_health_now  ) ;
	GetVehicleRotation ( vehicleid, _coord [ 0 ],_coord[1],_coord[2]);
	if(vehicleid != 0)
	{
		if( veh_health_now - VehInfos [ vehicleid - 1 ] [ v_health ] == 0 )
		{
			if ( VehInfos [ vehicleid - 1 ] [ v_engine_boost ] > 0 )// ( _z_angle - VehInfos [ vehicleid - 1 ] [ v_old_zangle ] < 0.1 && _z_angle - VehInfos [ vehicleid - 1 ] [ v_old_zangle ] > - 0.1 )
			{
				if ( v_speed > 30 && ! IsVehicleDrivingBackwards ( vehicleid ) && ( _coord[2] - VehInfos [ vehicleid - 1 ] [ v_old_zangle ] < 1 && _coord[2] - VehInfos [ vehicleid - 1 ] [ v_old_zangle ] > - 1 ) )
				{
					if( GetVehicleSpeed ( vehicleid ) < max_veh_speed [ GetVehicleModel ( vehicleid ) - 400 ] - 50 && 30 > _coord [ 0 ] > - 30 && 15 > _coord [ 1 ] > - 15 )
					{
						if ( v_speed - VehInfos [ vehicleid - 1 ] [ v_old_speed ] < 3 && v_speed - VehInfos [ vehicleid - 1 ] [ v_old_speed ] > 0.6 )
						{
							SetVehicleSpeed ( vehicleid, v_speed + VehInfos [ vehicleid - 1 ] [ v_engine_boost ] * 20 ) ; // *5
							VehInfos [ vehicleid - 1 ] [ v_old_zangle ] = _coord[2] ;
						}
					}
					else
					{
						if ( v_speed - VehInfos [ vehicleid - 1 ] [ v_old_speed ] < 3 && v_speed - VehInfos [ vehicleid - 1 ] [ v_old_speed ] >= -1.5 && GetVehicleSpeed ( vehicleid ) < max_veh_speed [ GetVehicleModel ( vehicleid ) - 400 ] - 50 + VehInfos [ vehicleid - 1 ] [ v_engine_boost ] * 180 )
						{
							if (  30 > _coord [ 0 ] > - 30 && 15 > _coord [ 1 ] > - 15 )
							{
								SetVehicleSpeed ( vehicleid, v_speed + VehInfos [ vehicleid - 1 ] [ v_engine_boost ] * 15 ) ; // *2
								VehInfos [ vehicleid - 1 ] [ v_old_zangle ] = _coord[2] ;
							}
						}
					}
					VehInfos [ vehicleid - 1 ] [ v_old_speed ] = v_speed ;
				}
			}
			if ( VehInfos [ vehicleid - 1 ] [ v_brake_boost ] > 0 )
			{
				if ( VehInfos [ vehicleid - 1 ] [ v_old_speed ] > 40 && ( _coord[2] - VehInfos [ vehicleid - 1 ] [ v_old_zangle ] < 0.3 && _coord[2] - VehInfos [ vehicleid - 1 ] [ v_old_zangle ] > - 0.3 ) && 1000 >= GetTickCount() - player_holding_key_down [ playerid ] >= 150 )
				{
					SetVehicleSpeed ( vehicleid, v_speed - VehInfos [ vehicleid - 1 ] [ v_brake_boost ] * 2 ) ;
					VehInfos [ vehicleid - 1 ] [ v_old_zangle ] = _coord[2] ;
				}
				VehInfos [ vehicleid - 1 ] [ v_old_speed ] = v_speed ;
			}
		}
		VehInfos [ vehicleid - 1 ] [ v_old_zangle ] = _coord[2] ;
		VehInfos [ vehicleid - 1 ] [ v_health ] = veh_health_now ;
		VehInfos [ vehicleid - 1 ] [ v_old_speed ] = v_speed ;
	}
	return 1;
}

forward UpdateSpeedometrCopter(playerid);
public UpdateSpeedometrCopter(playerid)
{
	if(p_info[playerid][pAFK] >= 3 && GetPlayerState(playerid) != 2) return 1;
	new vehicleid = GetPlayerVehicleID(playerid);

	new speed = SpeedVehicle(playerid)/2;

	new Float: X, Float: Y, Float: Z;

	GetVehiclePos(vehicleid, X, Y, Z);

	new fmt_text[90];

	format(fmt_text, sizeof fmt_text, "скорость: %d км/ч~n~высота: %4.1f м", speed, Z);
	PlayerTextDrawSetString(playerid, copter_speed[3][playerid], fmt_text);

	if(Engine[GetPlayerVehicleID(playerid)] == false)
	{
		PlayerTextDrawColor(playerid, copter_speed[5][playerid], 0xFA1818FF);
		PlayerTextDrawShow(playerid, copter_speed[5][playerid]);
	}
	else
	{
		PlayerTextDrawColor(playerid, copter_speed[5][playerid], 0x1CAD0FFF);
		PlayerTextDrawShow(playerid, copter_speed[5][playerid]);
	}

	if(IsLocked[GetPlayerVehicleID(playerid)] == true)
	{
		PlayerTextDrawColor(playerid, copter_speed[6][playerid], 0xE3C722FF);
		PlayerTextDrawShow(playerid, copter_speed[6][playerid]);
	}
	else
	{
		PlayerTextDrawColor(playerid, copter_speed[6][playerid], 0xFA1818FF);
		PlayerTextDrawShow(playerid, copter_speed[6][playerid]);
	}
	return 1;
}



stock ShowPlayerStatsDialog(playerid, targetid)
{
	new status_text[20], married_text[MAX_PLAYER_NAME], wanted_text[32], phone_text[20], year, month, day;
	getdate(year, month, day);
	if(p_info[targetid][pMarried] == 0) format(married_text, sizeof(married_text), "Нет");
	else format(married_text, sizeof(married_text), "%s", p_info[targetid][pWhoMarried]);
	if(p_info[targetid][pWanted] == 0) format(wanted_text, sizeof(wanted_text), "Нет");
	else format(wanted_text, sizeof(wanted_text), "%s", p_info[targetid][pWantedReason]);
	if(p_info[targetid][pPhoneNumber] <= 1) format(phone_text, sizeof(phone_text), "Не имеется");
	else format(phone_text, sizeof(phone_text), "%i", p_info[targetid][pPhoneNumber]);
	if(p_info[targetid][pAdmin]) status_text = "Администратор";
	else if(p_info[targetid][pHelper]) status_text = "Хелпер";
	else if(p_info[targetid][pVip]) status_text = "VIP";
	else status_text = "Игрок";
	
	new StatsLevel[3][50];
	if(p_info[targetid][pStats][0] <= 10) StatsLevel[0] = "{FF4500}Очень маленький{FFFFFF}";
	else if(p_info[targetid][pStats][0] <= 30) StatsLevel[0] = "{FF8C00}Маленький{FFFFFF}";
	else if(p_info[targetid][pStats][0] <= 70) StatsLevel[0] = "{008000}Нормальный{FFFFFF}";
	else if(p_info[targetid][pStats][0] <= 90) StatsLevel[0] = "{FF8C00}Большой{FFFFFF}";
	else StatsLevel[0] = "{FF4500}Очень большой{FFFFFF}";
	if(p_info[targetid][pStats][1] <= 10) StatsLevel[1] = "{FF4500}Очень плохая{FFFFFF}";
	else if(p_info[targetid][pStats][1] <= 30) StatsLevel[1] = "{FF8C00}Плохая{FFFFFF}";
	else if(p_info[targetid][pStats][1] <= 70) StatsLevel[1] = "{66985f}Нормальная{FFFFFF}";
	else if(p_info[targetid][pStats][1] <= 90) StatsLevel[1] = "{ADFF2F}Хорошая{FFFFFF}";
	else StatsLevel[1] = "{008000}Очень хорошая{FFFFFF}";
	if(p_info[targetid][pStats][2] <= 10) StatsLevel[2] = "{FF4500}Очень маленькая{FFFFFF}";
	else if(p_info[targetid][pStats][2] <= 30) StatsLevel[2] = "{FF8C00}Маленькая{FFFFFF}";
	else if(p_info[targetid][pStats][2] <= 70) StatsLevel[2] = "{66985f}Нормальная{FFFFFF}";
	else if(p_info[targetid][pStats][2] <= 90) StatsLevel[2] = "{ADFF2F}Большая{FFFFFF}";
	else StatsLevel[2] = "{008000}Очень большая{FFFFFF}";
	
	new sctring[1400], str[250];
	format(str,sizeof(str),"{ffffff}Имя:\t\t\t\t{0099FF}%s\n",GetName(targetid));
	strcat(sctring,str);
	format(str,sizeof(str),"{FFFFFF}Уровень:\t\t\t{FFAA44}%d\n",p_info[targetid][pLevel]);
	strcat(sctring,str);
	format(str,sizeof(str),"{FFFFFF}Опыт:\t\t\t\t{FFAA44}%d / %d\n",p_info[targetid][pExp], (p_info[targetid][pLevel]+1)*4);
	strcat(sctring,str);
	format(str,sizeof(str),"{FFFFFF}Часов в игре:\t\t\t{FFAA44}%d (за неделю)\n", p_info[targetid][data_NONLINE][1]+p_info[targetid][data_NONLINE][2]+p_info[targetid][data_NONLINE][3]+p_info[targetid][data_NONLINE][4]+p_info[targetid][data_NONLINE][5]+p_info[targetid][data_NONLINE][6]+p_info[targetid][data_NONLINE][7]);
	strcat(sctring,str);
	format(str,sizeof(str),"{FFFFFF}Возраст:\t\t\t%d\n",p_info[targetid][pAge]);
	strcat(sctring,str);
	format(str,sizeof(str),"Предупреждения:\t\t%d / 3\n",p_info[targetid][pWarn]);
	strcat(sctring,str);
	if(p_info[playerid][pSex] == 1) format(str,sizeof(str),"Служил:\t\t\t%s\n",(p_info[targetid][pVoennik])?("Да"):("Нет"));
	else format(str,sizeof(str),"Служила:\t\t\t%s\n",(p_info[targetid][pVoennik])?("Да"):("Нет"));
	strcat(sctring,str);
	format(str,sizeof(str),"Законопослушность:\t\t%d\n",p_info[targetid][pZakon]);
	strcat(sctring,str);
	format(str,sizeof(str),"Наличные:\t\t\t%iр\n",GetMoney(targetid));
	strcat(sctring,str);
	format(str,sizeof(str),"Розыск:\t\t\t%i\n",p_info[targetid][pWanted]);
	strcat(sctring,str);
	format(str,sizeof(str),"Номер телефона:\t\t%s\n",phone_text);
	strcat(sctring,str);
	if(p_info[targetid][pSex] == 1) format(str,sizeof(str),"Женат на:\t\t\t%s\n",married_text);
	else format(str,sizeof(str),"Замужем за:\t\t\t%s\n",married_text);
	strcat(sctring,str);
	format(str,sizeof(str),"Пол:\t\t\t\t%s\n",(p_info[targetid][pSex]==1)?("Мужчина"):("Женщина"));
	strcat(sctring,str);
	format(str,sizeof(str),"Работа:\t\t\t%s\n",Job_Names[p_info[targetid][pJob]]);
	strcat(sctring,str);
	if(p_info[targetid][pMember] > 0)
	{
		format(str,sizeof(str),"Организация:\t\t\t{ffd51c}%s{FFFFFF}\n",Fractions[p_info[targetid][pMember]][fractionName]);
		strcat(sctring,str);
		format(str,sizeof(str),"Должность:\t\t\t{ffd51c}%s (%i){FFFFFF}\n\n",GetRank(p_info[targetid][pMember],p_info[targetid][pRank]),p_info[targetid][pRank]);
        strcat(sctring,str);
	}
	else
	{
		format(str,sizeof(str),"Организация:\t\t\tНет\n");
		strcat(sctring,str);
		format(str,sizeof(str),"Должность:\t\t\tНет\n");
		strcat(sctring,str);
	}
	if(GetPlayerBizz(targetid) == 0) strcat(sctring,"Бизнес:\t\t\tНет\n");
	else
	{
		new number_bizz = 0;
		for(new i = TOTALBIZZ; i > 0; i --)
		{
			if(!strcmp(BizzInfo[i][bOwner],GetName(targetid),true)) number_bizz = i;
		}
		format(str,sizeof(str),"Бизнеc:\t\t\t%s (%i)\n",BizzInfo[number_bizz][bName],number_bizz);
		strcat(sctring,str);
	}
	if(GetPlayerHouse(targetid) == 0) strcat(sctring,"Дом:\t\t\t\tНет\n");
	else
	{
		new number_house = 0;
		for(new i = TOTALHOUSE; i > 0; i --)
		{
			if(!strcmp(HouseInfo[i][hOwner],GetName(targetid),true)) number_house = i;
		}
		format(str,sizeof(str),"Дом:\t\t\t\t№%i\n",number_house);
		strcat(sctring,str);
	}

	format(str,sizeof(str),"Кредитов:\t\t\t%d\n",p_info[targetid][pCredits]);
	strcat(sctring,str);
	format(str,sizeof(str),"Номер аккаунта:\t\t%d\n",p_info[targetid][pID]);
	strcat(sctring,str);
	format(str,sizeof(str),"Статус:\t\t\t\t%s\n",status_text);
	strcat(sctring,str);
	
	format(str,sizeof(str),"Бокс:\t\t\t\t%d / 1000\n",p_info[targetid][P_Style][0]);
	strcat(sctring,str);
	format(str,sizeof(str),"Кунг-Фу:\t\t\t%d / 1000\n\n",p_info[targetid][P_Style][1]);
	strcat(sctring,str);
	format(str,sizeof(str),"Сила:\t\t\t\t%d [%s]\n",p_info[targetid][pStats][2], StatsLevel[2]);
	strcat(sctring,str);
	format(str,sizeof(str),"Выносливость:\t\t%d [%s]\n\n",p_info[targetid][pStats][1], StatsLevel[1]);
	strcat(sctring,str);
	
	format(str,sizeof(str),"Дата:\t\t\t\t%d.%d.%04dг.",day, month, year);
	strcat(sctring,str);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Статистика персонажа", sctring, "Закрыть", "");
	return 1;
}

public OnGameModeInit()
{
    SetTimer("ChangeWeather", 1000*60*30, 1);
    ChangeWeather();

	SetTimer("FallingChecker", 500, true);
	gamemodeloaded = 0;
    LoadMySQLSettings();	
	SetGameModeText("LOADING...");
	
	for(new v = 0; v < MAX_VEHICLES; v++) VehInfo[v][vHouse] = -1;

	dbHandle = mysql_connect(MySQLSettings[DRAGONHOST_HOST],MySQLSettings[DRAGONHOST_USERNAME],MySQLSettings[DRAGONHOST_DATABASE],MySQLSettings[DRAGONHOST_PASSWORD]);
	mysql_log(LOG_WARNING | LOG_ERROR);
	//mysql_log(LOG_ALL);
	if(mysql_errno() == -1)
	{
		SetGameModeText(""SERVER_NAME" | Error SQL");
	}
	else
	{
        mysql_set_charset("cp1251");

		mysql_tquery(dbHandle, "SET CHARACTER SET 'utf8'", "", "");
		mysql_tquery(dbHandle, "SET NAMES 'utf8'", "", "");
		mysql_tquery(dbHandle, "SET character_set_client = 'cp1251'", "", "");
		mysql_tquery(dbHandle, "SET character_set_connection = 'cp1251'", "", "");
		mysql_tquery(dbHandle, "SET character_set_results = 'cp1251'", "", "");
		mysql_tquery(dbHandle, "SET SESSION collation_connection = 'utf8_general_ci'", "", "");
		
		mysql_tquery(dbHandle, "SELECT * FROM `salary`", "LoadSalary", "");
		mysql_tquery(dbHandle, "SELECT * FROM `work_salary`", "LoadWorkSalary", "");

		mysql_tquery(dbHandle, "SELECT * FROM "T_VEHICLE"", "LoadVeh", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_BIZZ" ORDER BY  "T_BIZZ".`id` ASC ", "LoadBizz", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_HOUSE" ORDER BY  "T_HOUSE".`id` ASC ", "LoadHouse", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_ATM"", "LoadATM", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_SPRUNK"", "LoadSPRUNK", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_OTHER"", "LoadOther", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_RADAR"", "LoadRadar", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_FAMILY"","LoadFamily", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_PODEZD"", "LoadPodezd", "");
		mysql_tquery(dbHandle, "SELECT * FROM "T_ROOMS"", "LoadRooms", "");
		mysql_tquery(dbHandle, "SELECT * FROM `fraction_settings`", "OnFracLoad", "");
		mysql_tquery(dbHandle, "SELECT * FROM `fractions_store`", "OnLoadFractionsStore", "");
		mysql_tquery(dbHandle, "SELECT * FROM `fraction_ranks`", "OnFracRankLoad", "");
		mysql_tquery(dbHandle, "SELECT * FROM `fractions`", "fraction_loading", "");
		mysql_tquery(dbHandle, "SELECT * FROM `garages`", "LoadGarages", "");
		
		mysql_tquery(dbHandle, "SELECT * FROM `houses_gates`", "gates_loading", "");
		mysql_tquery(dbHandle, "SELECT * FROM `teleport_areas`", "areas_loading", "");
		mysql_tquery(dbHandle, "SELECT * FROM `h_vehicles`", "hvehicles_loading", "");
		
		mysql_tquery(dbHandle, "SELECT * FROM `repositories`", "RepositoriesLoad", "");

		mysql_tquery(dbHandle, "UPDATE "T_ADMIN" SET `ans` = '0', `kicks` = '0', `warns` = '0', `bans` = '0', `jails` = '0', `mutes` = '0'", "", "");
		mysql_tquery(dbHandle, "UPDATE "T_HELPER" SET `ans` = '0'", "", "");
		
		new saturday = 1310155200, w = gettime();
		while(w - saturday > 60 * 60 * 24)
	    {
	    	w -= 60 * 60 * 24;
	      	day_weeks ++;
	  	}
	  	while(day_weeks >= 7) day_weeks -= 7;
		
		if(day_weeks == 7)
		{
		    mysql_tquery(dbHandle, "UPDATE "T_ADMIN" SET `data_NONLINE` = '0', `data_NONLINE_1` = '0', `data_NONLINE_2` = '0', `data_NONLINE_3` = '0', `data_NONLINE_4` = '0', `data_NONLINE_5` = '0', `data_NONLINE_6` = '0'", "", "");
		    mysql_tquery(dbHandle, "UPDATE "T_HELPER" SET `data_NONLINE` = '0', `data_NONLINE_1` = '0', `data_NONLINE_2` = '0', `data_NONLINE_3` = '0', `data_NONLINE_4` = '0', `data_NONLINE_5` = '0', `data_NONLINE_6` = '0'", "", "");
		    mysql_tquery(dbHandle, "UPDATE "T_ACCOUNTS" SET `data_NONLINE` = '0', `data_NONLINE_1` = '0', `data_NONLINE_2` = '0', `data_NONLINE_3` = '0', `data_NONLINE_4` = '0', `data_NONLINE_5` = '0', `data_NONLINE_6` = '0'", "", "");
		}
	}
	SendRconCommand("mapname "SERVER_MAP"");
	SendRconCommand("weburl "SERVER_WEBSITE"");

	AddStaticVehicleEx(574,1974.4083,-1930.0779,31.7156,359.6548,1,1,60000);
	AddStaticVehicleEx(574,1977.3467,-1930.1736,31.7156,0.6077,1,1,60000);
	AddStaticVehicleEx(574,1980.5774,-1930.2324,31.7156,0.3362,1,1,60000);
	AddStaticVehicleEx(574,1983.5403,-1930.0686,31.7156,359.2376,1,1,60000);
	AddStaticVehicleEx(574,1986.4603,-1930.1259,31.7156,0.8714,1,1,60000);
	AddStaticVehicleEx(574,1989.5186,-1930.0956,31.7156,0.0329,1,1,60000);
	AddStaticVehicleEx(574,1992.5466,-1930.1288,31.7156,0.8028,1,1,60000);
	washer = CreatePickup(1239, 2, 2001.7269,-1913.0784,31.9994);
	Create3DTextLabel("{11F43E}Для устройства на работу\n{11F43E}Встаньте на пикап",COLOR_GREEN, 2001.7269,-1913.0784,31.9994,15.0,0,1);	

	Inkasator[0] = CreateVehicle(428,2266.7605,-2096.0596,21.9436,161.2657,-1,-1,15); //  инкассатор   
	Inkasator[1] = CreateVehicle(428,2272.3774,-2095.6992,21.9453,165.0847,-1,-1,15); //  инкассатор   
	Inkasator[2] = CreateVehicle(428,2265.9438,-2110.5686,21.9444,17.2699,-1,-1,15); //  инкассатор   
	Inkasator[3] = CreateVehicle(428,2274.7104,-2110.1904,21.9438,26.5539,-1,-1,15); //  инкассатор   
	Inkasator[4] = CreateVehicle(428,2279.2014,-2095.7390,21.9449,163.6216,-1,-1,15); //  инкассатор
	
	new h,m,s;
	gettime(h,m,s);
	SetWorldTime(h);
	SetGravity(0.008);
	ManualVehicleEngineAndLights();
	EnableStuntBonusForAll(0);
	SetNameTagDrawDistance(24.0);
	ShowPlayerMarkers(2);
	DisableInteriorEnterExits();
	
	DrivingSchoolInit();
	AnimListInit();
	BusRoutesInit();

	AddPlayerClass(36,0.0,0.0,5.0,0.0,0,0,0,0,0,0);
	
	boxPlayer@YSII_Cg = _Y_ITER_C3:0;
	shipPlayer@YSII_Cg = _Y_ITER_C3:0;
	
	boxPlayer@YSII_Ag[MAX_PLAYERS] = MAX_PLAYERS;
	shipPlayer@YSII_Ag[MAX_PLAYERS] = MAX_PLAYERS;
	
	for (new i = 0; i != MAX_PLAYERS; ++i)
	{
		if (IsPlayerConnected(i))
		{
			Kick(i);
		}
		else
		{
		    boxPlayer@YSII_Ag[i] = MAX_PLAYERS + 1;
			shipPlayer@YSII_Ag[i] = MAX_PLAYERS + 1;
		}
	}
	
	Iter_Init(TeamPlayers);
	Iter_Init(inStreamPlayers);
	Iter_Init(vehiclePassengers);
	
	for(new idx = 0; idx < MAX_PICKUPS; idx ++)
	{
		ClearPickupInfo(idx);
	}
	
	for(new i; i < 12; i++)
	{
	    SimulatorUse[i] = false;
	}
	
	for(new A; A != 5; A++)
	{
		for(new B; B != 8; B++)
		{
			CasinoGamesInfo[B][CG_PlayerID][A] = -1;
		}
	}
	
	zakaz_taxi = 0;
	
   	robbery_team[0] = 0;
    robbery_bank[0] = -2;
    robbery_money[0] = 0;
    robbery_time[0] = 0;
    robbery_map[0] = 0;
	robbery_mask[0] = 0;
	robbery_gun[0] = 0;
	robbery_car[0] = 0;
	
	for(new i; i < MAX_BONE; i++)
	{
		dice_info [ i ] [ b_crupie ] = INVALID_PLAYER_ID ;
		for ( new idx = 0 ; idx < 5 ; idx ++ ) dice_info [ i ] [ b_player ][ idx ] = INVALID_PLAYER_ID ;
		dice_info [ i ] [ b_started ] = 0 ;
	}
	
	pickplayers[1] = 0;
	
	konf_time = 0;
	konf_kd = 0;
	
	CreateDynamic3DTextLabel("Дверь от хранилища\n{ffd51c}Нажмите H", 0xFFFFFFFF, 747.1008, 482.3767, 1036.7900, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1);
	
	CreateDynamic3DTextLabel("Утилизация автомобиля\n{ffd51c}Нажмите H", 0xFFFFFFFF, 2327.4709, -248.5124, 1.9736+0.5, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);

	CreateDynamic3DTextLabel("[ "cBLUE"Загрузка металла/патронов для армии{FFFFFF} ]", -1, 1173.8953, -360.5784, 4.2531+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
	sellpatrcp[0] = CreateDynamicCP(1173.8953, -360.5784, 4.2531, 5.0, 0, 0, -1, 5.0);

    CreateDynamic3DTextLabel("КАМИКАДЗЕ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1596.2505, 990.8081, 1819.0200, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КАМИКАДЗЕ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1602.9275, 990.8088, 1819.0200, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КАМИКАДЗЕ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1599.5940, 990.8087, 1819.0200, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КАМИКАДЗЕ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1596.2820, 993.5022, 1819.0200, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КАМИКАДЗЕ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1602.9772, 993.5014, 1819.0200, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КАМИКАДЗЕ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1599.5938, 993.5015, 1819.0200, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КОСТИ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1608.6849, 987.2932, 1820.0557, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КОСТИ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1608.7090, 992.1456, 1820.0557, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КОСТИ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1608.6516, 982.0839, 1820.0557, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("КОСТИ\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1614.1782, 987.2856, 1820.0557, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("РУЛЕТКА\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1601.9708, 983.9113, 1820.0557, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("РУЛЕТКА\n\nНажмите - {ffd51c}H", 0xFFFFFFFF, 1597.6998, 983.8762, 1820.0557, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);

    CreateDynamicPickup(1239, 23, 0.0, 0.0, 0.0, 1);
    
    CreateDynamicPickup(1212, 23, 744.4578, 480.1804, 1036.7900, -1);
    CreateDynamicPickup(1212, 23, 748.6232,480.0585,1036.7900, -1);
    
    CreateDynamic3DTextLabel("ШТРАФСТОЯНКА\n\nДля постановки автомобиля на учёт\nНажмите - {ffd51c}Н", 0xFFFFFFFF, 1786.5313, 2269.2075, 15.7692+0.5, 10.0);
    
    CreateDynamic3DTextLabel("ШТРАФСТОЯНКА\n{ffd51c}ВСТАНЬТЕ НА ПИКАП", 0xFFFFFFFF, 1788.9561, 2250.3628, 15.7248, 10.0);
    Ticket_Pay = CreateDynamicPickup(1239, 23, 1788.9561, 2250.3628, 15.7248, -1);
				
	CasinoKrupe = CreateDynamicPickup(1275, 23, 1610.3162, 998.3323, 1819.0200, -1);
	
//	CreateDynamic3DTextLabel("АРЕНДА МОПЕДОВ\n{ffd51c}ВСТАНЬТЕ НА ПИКАП", 0xFFFFFFFF, 2744.7551,-2436.3008,21.8921, 10.0);
//	mopedpick[0] = CreateDynamicPickup(1277, 23, 2744.7551,-2436.3008,21.8921, -1);
	
//	CreateDynamic3DTextLabel("АРЕНДА МОПЕДОВ\n{ffd51c}ВСТАНЬТЕ НА ПИКАП", 0xFFFFFFFF, 2744.4578,-2449.9861,21.8921, 10.0);
//	mopedpick[1] = CreateDynamicPickup(1277, 23, 2744.4578,-2449.9861,21.8921, -1);
	
	pickcs = CreateDynamicPickup(1239, 23, 2269.0605, 1411.2134, 11.4501, -1);
	CreateDynamic3DTextLabel("Регистрация участников", 0xFFFFFFFF, 2269.0605, 1411.2134, 11.4501, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);

	pickcartrack = CreateDynamicPickup(1239, 23, -1509.7196, 1608.1033, 36.7735, -1);
	CreateDynamic3DTextLabel("Регистрация участников\n\n{ffd51c}/tracklist - список победителей", 0xFFFFFFFF, -1509.7196, 1608.1033, 36.7735, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	//Двери, ворота, мосты
	Dvers[0] = CreateObject(1569, 894.25, 2097.70, 2720.79,   0.00, 0.00, -90.00);
	Dvers[1] = CreateObject(1495, 881.162841,2096.350341,2720.778320, 0.000000,0.000000,89.999908);
	Dvers[2] = CreateObject(976, 213.08, 1497.10, 11.14, 0.00, 0.00, 78.22);
	Dvers[3] = CreateObject(980, 1289.09, -295.92, 6.08,   0.00, 0.00, 270.00);
	Dvers[4] = CreateObject(2168,2747.34448242,-1142.90002441,21.60000038,0.00000000,0.00000000,180.00000000); //object(partition) (2)
	Dvers[5] = CreateObject(2168,2747.30004883,-1262.00000000,21.60000038,0.00000000,0.00000000,0.00000000); //object(partition) (4)
	Dvers[6] = CreateObject(19302, 596.70, 2765.25, 1250.71,   0.00, 0.00, 180.00);
	Dvers[7] = CreateObject(19303, 589.34, 2782.04, 1254.25,   0.00, 0.00, -90.00);
	Dvers[8] = CreateObject(19303, 589.32, 2785.40, 1254.25,   0.00, 0.00, -90.00);
	Dvers[9] = CreateObject(1569, -931.873779,847.187561,2511.927978, 0.000000,0.000000,0.000000);
	Dvers[10] = CreateObject(1569, 1613.659790,1222.383422,2512.427978, 0.000000,0.000000,88.799957);
	//Dvers[11] = CreateObject(4374, 784.976928,805.616027,13.230014, 0.000000,0.000000,-21.000009);
	Dvers[12] = CreateObject(1569, -339.924926,359.713836,701.249877, 0.000000,0.000000,0.000000);
	Dvers[13] = CreateObject(19302, -645.591613,-428.051422,1.321029, 0.000000,0.000000,0.000000);
	Dvers[14] = CreateObject(968, 2579.85, -2438.72, 21.43,   0.00, -90.00, -90.00);
	Dvers[15] = CreateDynamicObject(1495, 745.25, 481.94, 1035.78,   0.00, 0.00, 0.00, 1);
	Dvers[16] = CreateDynamicObject(1495, 745.25, 481.94, 1035.78,   0.00, 0.00, 0.00, 2);
	Dvers[17] = CreateDynamicObject(1495, 745.25, 481.94, 1035.78,   0.00, 0.00, 0.00, 3);
	Dvers[18] = CreateObject(1495, 841.09, 1315.29, 516.74,   0.00, 0.00, 90.00);
// SHLAKBAUMI 2019
	Dvers[19] = CreateObject(968, 2743.17, -1023.33, 23.34,   0.00, -90.00, 0.00);
	Dvers[20] = CreateObject(968, 2751.55, -1023.33, 23.34,   0.00, -90.00, -180.00);
	Dvers[21] = CreateObject(968, 1857.37, -2487.21, 10.73,   0.00, 90.00, 180.00);	
	Dvers[22] = CreateObject(968, 2082.83, -2039.74, 18.53,   0.00, 90.00, 180.00);	
	Dvers[23] = CreateObject(968, 2259.43, -2099.47, 21.60,   0.00, 90.00, 270.00);	
	
	CreateDynamic3DTextLabel("Проезд 500р.\nНажмите H", 0xD9F6F6FF, 2743.17, -1023.33, 24.50, 15.0);
	CreateDynamic3DTextLabel("Проезд 500р.\nНажмите H", 0xD9F6F6FF, 2751.55, -1023.33, 24.50, 15.0);
	CreateDynamic3DTextLabel("Для проезда\nНажмите H", 0xD9F6F6FF, 1857.37, -2487.21, 11.73, 15.0);
	CreateDynamic3DTextLabel("Для проезда\nНажмите H", 0xD9F6F6FF, 2082.83, -2039.74, 19.53, 15.0);
	CreateDynamic3DTextLabel("Для проезда\nНажмите H", 0xD9F6F6FF, 2259.43, -2099.47, 21.60, 15.0);
	CreateDynamic3DTextLabel("Для проезда\nНажмите H", 0xD9F6F6FF, 2579.85, -2438.72, 21.43, 15.0);
	CreateDynamic3DTextLabel("Для проезда\nНажмите H", 0xD9F6F6FF, 2259.43, -2099.47, 21.60, 15.0);	


	CreateDynamic3DTextLabel("Питьевой автомат\nНажмите ALT", 0xD9F6F6FF, 2739.2400, -2442.6499, 21.2300, 15.0);	
	CreateDynamic3DTextLabel("Питьевой автомат\nНажмите ALT", 0xD9F6F6FF, 2718.0901, -2425.8501, 21.9400, 15.0);	
	CreateDynamic3DTextLabel("Питьевой автомат\nНажмите ALT", 0xD9F6F6FF, 2699.4800, -2450.7300, 21.9800, 15.0);	
	CreateDynamic3DTextLabel("Питьевой автомат\nНажмите ALT", 0xD9F6F6FF, 2712.1399, -2440.7400, 21.9000, 15.0);		
	//
	door_inter_swat = CreateDynamicObject(1495, -223.17999, 696.15997, 1001.00000,   0.00000, 0.00000, 0.00000);
	
	door_inter_fbi[0] = CreateDynamicObject(19303, 2085.409912, -2200.419921, 1002.219970, 0.000000, 0.000000, 90.000000);
	door_inter_fbi[1] = CreateDynamicObject(19303, 2085.409912, -2200.419921, 1004.739990, 0.000000, 0.000000, 90.000000);
	
    LoadPickups();
	LoadTextDrawsMainMenu();
	create_binder();
	LoadTextDraws();
 	LoadObject();
	Menu();
	LoadAddItem();
	
	new tmphours, tmpminutes, tmpseconds;
	unix = gettime(tmphours, tmpminutes, tmpseconds);
	new sunix = unix;

	sunix -= tmpminutes*60;
	sunix -= tmpseconds;

	unix_hour = sunix+3600;
	unix_min = sunix+60;
	unix_sec = sunix;
	unix_three_sec = sunix+3;

	if(timers_unix != -1)
	{
		KillTimer(timers_unix);
		timers_unix = -1;
	}
	if(timers_unix == -1) timers_unix = SetTimer("Timer_Unix", 125, true);
	/* ---------------------------------------------------------------------- */
	printf ("-> Динамических объектов: %d", CountDynamicObjects());
	printf ("-> Статических объектов: %d", TotalObject);
	
	printf ("-> Видимых объектов (стример): %d",Streamer_GetVisibleItems(STREAMER_TYPE_OBJECT));
	/* ---------------------------------------------------------------------- */
	SetGameModeText(SERVER_VERSION);
	gamemodeloaded = 1;
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid,Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,Float:fRotX, Float:fRotY, Float:fRotZ,Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response && GetPVarInt ( playerid , "dSelectAccesories_index" ) > 0 && GetPVarInt ( playerid , "dSelectAccesories_g" ) > 0 )
	{
		acc_player[playerid][acc_object_x][index - 5] = fOffsetX;
		acc_player[playerid][acc_object_y][index - 5] = fOffsetY;
		acc_player[playerid][acc_object_z][index - 5] = fOffsetZ;

		UpdateAccesories ( playerid ) ;

		SendInf(playerid, "Вы изменили положение аксессуара своего персонажа");

		DeletePVar(playerid, "dSelectAccesories_index");
		DeletePVar(playerid, "dSelectAccesories_g");
		return 1;
	}
	if(response && GetPVarInt(playerid, "PlayerBizz"))
	{
	    new i = GetPVarInt(playerid, "PlayerBizz");
		if(GetMoney(playerid) < price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]*BizzInfo[i][bTill]) return SendErr(playerid, "У Вас недостаточно средств");
		new ac = GetAccFreeSlot(playerid);
		if ( ac != -1 && step_show_acc_box[playerid] != -1)
		{
			acc_player[playerid][acc_object_id][ac] = modelid;
			acc_player[playerid][acc_object_x][ac] 	= fOffsetX;
			acc_player[playerid][acc_object_y][ac] 	= fOffsetY;
			acc_player[playerid][acc_object_z][ac] 	= fOffsetZ;

			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoneyHour] += price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]*BizzInfo[i][bTill];
				BizzPay[i] += price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]*BizzInfo[i][bTill];
				BizzInfo[i][bProduct] -= 10;
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}

			GiveMoney(playerid, -price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]*BizzInfo[i][bTill], "покупка аксессуара");
			SendInf(playerid, "Вы приобрели аксессуар");

			if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
			SetPlayerAttachedObject(playerid, ac + 5 , modelid , boneid , fOffsetX , fOffsetY , fOffsetZ , fRotX , fRotY , fRotZ ) ;
			
			UpdateAccesories ( playerid ) ;
		}
		else SendErr(playerid, "Максимум можно иметь 6 аксессуаров");
	}
	return 1;
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(GetPVarInt(playerid, "CreateRadar") != 0)
	{
		if(!playerobject)
		{
			if(!IsValidObject(objectid)) return 1;
			MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
		}
		if(response == EDIT_RESPONSE_FINAL)
		{
			TOTALRADAR++;

			switch(GetPVarInt(playerid, "TypeRadar"))
			{
				case 0: RI[TOTALRADAR][r_type] = 1, RI[TOTALRADAR][r_speed] = 20;
				case 1: RI[TOTALRADAR][r_type] = 2, RI[TOTALRADAR][r_speed] = 60;
				case 2: RI[TOTALRADAR][r_type] = 3, RI[TOTALRADAR][r_speed] = 110;
				case 3: RI[TOTALRADAR][r_type] = 4, RI[TOTALRADAR][r_speed] = 90;
			}

			new stringss [256];
			RI[TOTALRADAR][r_x] = fX; RI[TOTALRADAR][r_y] = fY; RI[TOTALRADAR][r_z] = fZ; RI[TOTALRADAR][r_a] = fRotZ;
			DestroyObject(GetPVarInt(playerid, "RadarObject"));
			RI[TOTALRADAR][r_object] = CreateObject(18880, fX, fY, fZ, fRotX, fRotY, fRotZ);
			format(stringss, sizeof stringss, "Радар {ebec86}№%d{FFFFFF}\n\nМакс. разрешенная скорость: {ebec86}%d{FFFFFF} КМ/Ч", TOTALRADAR, RI[TOTALRADAR][r_speed]);
			RI[TOTALRADAR][r_label] = CreateDynamic3DTextLabel(stringss, 0xFFFFFFFF, RI[TOTALRADAR][r_x], RI[TOTALRADAR][r_y], RI[TOTALRADAR][r_z]+4.0,10.0);
			DeletePVar(playerid, "CreateRadar");
			DeletePVar(playerid, "TypeRadar");
			DeletePVar(playerid, "RadarObject");
			CancelEdit(playerid);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"INSERT INTO "T_RADAR" (r_id, r_name, r_type, r_speed, r_x, r_y, r_z, r_a) VALUES (%i, '%s', %i, %i, '%f', '%f', '%f', '%f')",
			TOTALRADAR, GetName(playerid), RI[TOTALRADAR][r_type], RI[TOTALRADAR][r_speed], RI[TOTALRADAR][r_x], RI[TOTALRADAR][r_y], RI[TOTALRADAR][r_z], RI[TOTALRADAR][r_a]);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			SendClientMessage(playerid, C_OSNOV, "Радар успешно создан.");
		}
		if(response == EDIT_RESPONSE_CANCEL)
		{
			DeletePVar(playerid, "CreateRadar");
			DeletePVar(playerid, "TypeRadar");
			SendClientMessage(playerid, C_RED, "Вы отменили установку радара");
			DestroyObject(GetPVarInt(playerid, "RadarObject"));
			CancelEdit(playerid);
			DeletePVar(playerid, "RadarObject");
		}
	}
	if(response == EDIT_RESPONSE_CANCEL)
	{
		DestroyObject(objectid);
		CancelEdit(playerid);
	}
	if(response == EDIT_RESPONSE_FINAL)
	{
		CancelEdit(playerid);
	}
	return 1;
}

public OnGameModeExit()
{
	Bl_Clear();
	Car_Clear();
	Bizz_Clear();
	DestroyAllDynamicObjects();
	DestroyAllDynamicPickups();
	DestroyAllDynamicCPs();
	DestroyAllDynamicRaceCPs();
	DestroyAllDynamicMapIcons();
	DestroyAllDynamic3DTextLabels();
	DestroyAllDynamicAreas();
	KillTimer(timers_unix);
	mysql_close();
	for (new i=0; i<MAX_PLAYERS; i++)
	{
		for (new j=0; j<2; j++) DestroyObject (FirePlayers[i][j]);
	}	
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	if(PlayerLogged[playerid] == true)
	{
		SetSpawnInfoEx(playerid, ClosetSkins[playerid][0], 0, 0, 0, 1.0);
		return AC_SpawnPlayer(playerid);
	}
	
	AC_TogglePlayerSpectating(playerid, 1);
	SpRabotaySer[playerid] = true;
	InterpolateCameraPos( playerid, -594.3196, 1164.9705, 98.3981,174.9291, 807.4595, 37.7872,15000,CAMERA_MOVE);//2018
	InterpolateCameraLookAt( playerid, -593.4025, 1164.5697, 98.1231,175.1734, 806.4890, 37.4072,14400,CAMERA_MOVE);
	
	welcome_td[playerid] = CreatePlayerTextDraw(playerid, 371.9913, 314.2499, "_");
	PlayerTextDrawLetterSize(playerid, welcome_td[playerid], 0.2505, 1.1625);
	PlayerTextDrawAlignment(playerid, welcome_td[playerid], 1);
	PlayerTextDrawColor(playerid, welcome_td[playerid], -1);
	PlayerTextDrawSetOutline(playerid, welcome_td[playerid], 1);
	PlayerTextDrawFont(playerid, welcome_td[playerid], 1);
	PlayerTextDrawSetProportional(playerid, welcome_td[playerid], 1);
	
/*	cash_td_player[playerid] = CreatePlayerTextDraw(playerid, 554.260253, 81.083312, "0 РУБ.");
	PlayerTextDrawLetterSize(playerid, cash_td_player[playerid], 0.241039, 1.320000);
	PlayerTextDrawAlignment(playerid, cash_td_player[playerid], 2);
	PlayerTextDrawColor(playerid, cash_td_player[playerid], -1);
	PlayerTextDrawSetShadow(playerid, cash_td_player[playerid], 0);
	PlayerTextDrawSetOutline(playerid, cash_td_player[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, cash_td_player[playerid], 51);
	PlayerTextDrawFont(playerid, cash_td_player[playerid], 2);
	PlayerTextDrawSetProportional(playerid, cash_td_player[playerid], 1);*/
	
	capture_td [ playerid ] = CreatePlayerTextDraw( playerid, 211.000000, 404.000000, "_") ;
	PlayerTextDrawFont ( playerid, capture_td [ playerid ], 3);
	PlayerTextDrawLetterSize ( playerid, capture_td [ playerid ], 0.340000, 1.700000);
	PlayerTextDrawSetProportional ( playerid, capture_td [ playerid ], 1);
	
	HungerProgress[playerid] = CreatePlayerTextDraw(playerid,549.500000, 60.000000, "____");
	PlayerTextDrawBackgroundColor(playerid, HungerProgress[playerid], 255);
	PlayerTextDrawFont(playerid,HungerProgress[playerid], 1);
	PlayerTextDrawLetterSize(playerid,HungerProgress[playerid], 0.490000, -0.000000);
	PlayerTextDrawColor(playerid,HungerProgress[playerid], -1);
	PlayerTextDrawSetOutline(playerid,HungerProgress[playerid], 0);
	PlayerTextDrawSetProportional(playerid,HungerProgress[playerid], 1);
	PlayerTextDrawSetShadow(playerid,HungerProgress[playerid], 1);
	PlayerTextDrawUseBox(playerid,HungerProgress[playerid], 1);
	PlayerTextDrawBoxColor(playerid,HungerProgress[playerid], COLOR_GREEN);
	PlayerTextDrawTextSize(playerid,HungerProgress[playerid], 604.000000, 40.000000);
	PlayerTextDrawSetSelectable(playerid,HungerProgress[playerid], 0);
	
	radar_speed[playerid] = CreatePlayerTextDraw(playerid, 598.000000, 168.625000, "120");
	PlayerTextDrawLetterSize(playerid, radar_speed[playerid], 0.440499, 2.037499);
	PlayerTextDrawAlignment(playerid, radar_speed[playerid], 2);
	PlayerTextDrawColor(playerid, radar_speed[playerid], 255);
	PlayerTextDrawSetShadow(playerid, radar_speed[playerid], 0);
	PlayerTextDrawSetOutline(playerid, radar_speed[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, radar_speed[playerid], 51);
	PlayerTextDrawFont(playerid, radar_speed[playerid], 2);
	PlayerTextDrawSetProportional(playerid, radar_speed[playerid], 1);
	
	passport_sex[playerid] = CreatePlayerTextDraw(playerid, 285.000000, 132.125000, "„");
	PlayerTextDrawLetterSize(playerid, passport_sex[playerid], 0.614997, 2.199373);
	PlayerTextDrawAlignment(playerid, passport_sex[playerid], 1);
	PlayerTextDrawColor(playerid, passport_sex[playerid], 255);
	PlayerTextDrawSetShadow(playerid, passport_sex[playerid], 0);
	PlayerTextDrawSetOutline(playerid, passport_sex[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, passport_sex[playerid], 51);
	PlayerTextDrawFont(playerid, passport_sex[playerid], 2);
	PlayerTextDrawSetProportional(playerid, passport_sex[playerid], 1);

	passport_name[playerid] = CreatePlayerTextDraw(playerid, 354.500000, 179.812500, "Ѓ.….O~n~Leonid_Kolesnikov");
	PlayerTextDrawLetterSize(playerid, passport_name[playerid], 0.244498, 1.420624);
	PlayerTextDrawAlignment(playerid, passport_name[playerid], 2);
	PlayerTextDrawColor(playerid, passport_name[playerid], 255);
	PlayerTextDrawSetShadow(playerid, passport_name[playerid], 0);
	PlayerTextDrawSetOutline(playerid, passport_name[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, passport_name[playerid], 51);
	PlayerTextDrawFont(playerid, passport_name[playerid], 2);
	PlayerTextDrawSetProportional(playerid, passport_name[playerid], 1);

	passport_info[playerid] = CreatePlayerTextDraw(playerid, 236.000000, 209.562500, "~w~‹O€PAC¦: 17 ‡E¦~n~MEC¦O PA—O¦‘: POC¦O‹CKOE OЊ‚~n~PO€‘CK: ~g~HE …MEE¦C•~n~~w~ѓA¦A ‹‘ѓAЌ…: 12.04.17");
	PlayerTextDrawLetterSize(playerid, passport_info[playerid], 0.248500, 1.796874);
	PlayerTextDrawAlignment(playerid, passport_info[playerid], 1);
	PlayerTextDrawColor(playerid, passport_info[playerid], 7864575);
	PlayerTextDrawSetShadow(playerid, passport_info[playerid], 0);
	PlayerTextDrawSetOutline(playerid, passport_info[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, passport_info[playerid], 51);
	PlayerTextDrawFont(playerid, passport_info[playerid], 2);
	PlayerTextDrawSetProportional(playerid, passport_info[playerid], 1);

	passport_s_n[playerid] = CreatePlayerTextDraw(playerid, 261.000000, 112.875000, "~w~6814  773113");
	PlayerTextDrawLetterSize(playerid, passport_s_n[playerid], 0.499500, 2.116249);
	PlayerTextDrawAlignment(playerid, passport_s_n[playerid], 1);
	PlayerTextDrawColor(playerid, passport_s_n[playerid], -1);
	PlayerTextDrawSetShadow(playerid, passport_s_n[playerid], 0);
	PlayerTextDrawSetOutline(playerid, passport_s_n[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, passport_s_n[playerid], 51);
	PlayerTextDrawFont(playerid, passport_s_n[playerid], 2);
	PlayerTextDrawSetProportional(playerid, passport_s_n[playerid], 1);
	
	TD_GPS[playerid][0] = CreatePlayerTextDraw(playerid,39.000000,233.000000,"~n~");
	PlayerTextDrawLetterSize(playerid,TD_GPS[playerid][0],0.500000,1.999999);
	PlayerTextDrawTextSize(playerid,TD_GPS[playerid][0],130.000000,0.000000);
	PlayerTextDrawColor(playerid,TD_GPS[playerid][0],0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid,TD_GPS[playerid][0],1);
	PlayerTextDrawBoxColor(playerid,TD_GPS[playerid][0],0x000000AA);
	PlayerTextDrawAlignment(playerid,TD_GPS[playerid][0],0);
	PlayerTextDrawFont(playerid,TD_GPS[playerid][0],1);
	PlayerTextDrawSetShadow(playerid,TD_GPS[playerid][0],1);
	PlayerTextDrawSetProportional(playerid,TD_GPS[playerid][0],1);
	PlayerTextDrawSetOutline(playerid,TD_GPS[playerid][0],0);
	PlayerTextDrawBackgroundColor(playerid,TD_GPS[playerid][0],0xFF000000);

	TD_GPS[playerid][1] = CreatePlayerTextDraw(playerid,41.000000,234.000000,"GPS ~n~~y~PLACE");
	PlayerTextDrawLetterSize(playerid,TD_GPS[playerid][1],0.180000,0.899999);
	PlayerTextDrawTextSize(playerid,TD_GPS[playerid][1],1280.000000,1280.000000);
	PlayerTextDrawColor(playerid,TD_GPS[playerid][1],0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid,TD_GPS[playerid][1],0);
	PlayerTextDrawAlignment(playerid,TD_GPS[playerid][1],0);
	PlayerTextDrawFont(playerid,TD_GPS[playerid][1],1);
	PlayerTextDrawSetShadow(playerid,TD_GPS[playerid][1],0);
	PlayerTextDrawSetProportional(playerid,TD_GPS[playerid][1],1);
	PlayerTextDrawSetOutline(playerid,TD_GPS[playerid][1],0);
	PlayerTextDrawBackgroundColor(playerid,TD_GPS[playerid][1],0xFF000000);

	TD_GPS[playerid][2] = CreatePlayerTextDraw(playerid,39.000000,256.000000,"~n~");
	PlayerTextDrawLetterSize(playerid,TD_GPS[playerid][2],0.500000,1.099999);
	PlayerTextDrawTextSize(playerid,TD_GPS[playerid][2],130.000000,0.000000);
	PlayerTextDrawColor(playerid,TD_GPS[playerid][2],0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid,TD_GPS[playerid][2],1);
	PlayerTextDrawBoxColor(playerid,TD_GPS[playerid][2],0x000000AA);
	PlayerTextDrawAlignment(playerid,TD_GPS[playerid][2],0);
	PlayerTextDrawFont(playerid,TD_GPS[playerid][2],1);
	PlayerTextDrawSetShadow(playerid,TD_GPS[playerid][2],1);
	PlayerTextDrawSetProportional(playerid,TD_GPS[playerid][2],1);
	PlayerTextDrawSetOutline(playerid,TD_GPS[playerid][2],0);
	PlayerTextDrawBackgroundColor(playerid,TD_GPS[playerid][2],0xFF000000);

	TD_GPS[playerid][3] = CreatePlayerTextDraw(playerid,81.000000,259.000000,"~n~");
	PlayerTextDrawLetterSize(playerid,TD_GPS[playerid][3],0.500000,0.399999);
	PlayerTextDrawTextSize(playerid,TD_GPS[playerid][3],128.000000,0.000000);
	PlayerTextDrawColor(playerid,TD_GPS[playerid][3],0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid,TD_GPS[playerid][3],1);
	PlayerTextDrawBoxColor(playerid,TD_GPS[playerid][3],0x5A5A5AAA);
	PlayerTextDrawAlignment(playerid,TD_GPS[playerid][3],0);
	PlayerTextDrawFont(playerid,TD_GPS[playerid][3],1);
	PlayerTextDrawSetShadow(playerid,TD_GPS[playerid][3],1);
	PlayerTextDrawSetProportional(playerid,TD_GPS[playerid][3],1);
	PlayerTextDrawSetOutline(playerid,TD_GPS[playerid][3],0);
	PlayerTextDrawBackgroundColor(playerid,TD_GPS[playerid][3],0xFF000000);

	TD_GPS[playerid][4] = CreatePlayerTextDraw(playerid,81.000000,259.000000,"~n~");
	PlayerTextDrawLetterSize(playerid,TD_GPS[playerid][4],0.500000,0.399999);
	PlayerTextDrawTextSize(playerid,TD_GPS[playerid][4],127.500000,0.000000);
	PlayerTextDrawColor(playerid,TD_GPS[playerid][4],0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid,TD_GPS[playerid][4],1);
	PlayerTextDrawBoxColor(playerid,TD_GPS[playerid][4],0xF6F6F6AA);
	PlayerTextDrawAlignment(playerid,TD_GPS[playerid][4],0);
	PlayerTextDrawFont(playerid,TD_GPS[playerid][4],1);
	PlayerTextDrawSetShadow(playerid,TD_GPS[playerid][4],1);
	PlayerTextDrawSetProportional(playerid,TD_GPS[playerid][4],1);
	PlayerTextDrawSetOutline(playerid,TD_GPS[playerid][4],0);
	PlayerTextDrawBackgroundColor(playerid,TD_GPS[playerid][4],0xFF000000);

	TD_GPS[playerid][5] = CreatePlayerTextDraw(playerid,42.000000,257.000000,"DISTANCE");
	PlayerTextDrawLetterSize(playerid,TD_GPS[playerid][5],0.160000,0.799999);
	PlayerTextDrawTextSize(playerid,TD_GPS[playerid][5],1280.000000,1280.000000);
	PlayerTextDrawColor(playerid,TD_GPS[playerid][5],0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid,TD_GPS[playerid][5],0);
	PlayerTextDrawAlignment(playerid,TD_GPS[playerid][5],0);
	PlayerTextDrawFont(playerid,TD_GPS[playerid][5],1);
	PlayerTextDrawSetShadow(playerid,TD_GPS[playerid][5],0);
	PlayerTextDrawSetProportional(playerid,TD_GPS[playerid][5],1);
	PlayerTextDrawSetOutline(playerid,TD_GPS[playerid][5],0);
	PlayerTextDrawBackgroundColor(playerid,TD_GPS[playerid][5],0xFF000000);

	for(new i; i < 18; i++) TextDrawShowForPlayer(playerid, INFO[i]);
	SelectTextDraw(playerid, 0xFFFFFFFF);

	PlayerSpawned[playerid] = false;
	for(new i; i < 11; i++) TextDrawShowForPlayer(playerid, village_TD[i]);
	for(new i; i < 2; i++) TextDrawShowForPlayer(playerid, info_server[i]);
	SetPlayerVirtualWorld(playerid, playerid+1);
	return 1;
}

forward player_join(playerid);
public player_join(playerid)
{
	SetPlayerVirtualWorld(playerid, playerid+1);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, 55.8956, 948.4539, 510.1547);
	SetPlayerFacingAngle(playerid, 185.5600);
	SetPlayerCameraPos(playerid, 65.5911, 947.4286, 511.8720);
	SetPlayerCameraLookAt(playerid, 64.6308, 947.6999, 511.6273);
	SetPlayerSkin(playerid, 146);

	STRING_GLOBAL[0] = EOS;
	mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT `id` FROM "T_ACCOUNTS" WHERE `name` = '%s' LIMIT 1", GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "player_check", "i", playerid);

	return 1;
}

forward player_check(playerid);
public player_check(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    SetPVarInt(playerid, "AntiSpawn", gettime()+10);
		SetPVarInt(playerid, "avttimer", 300);//вы слишком долго заходите

		SetPVarInt(playerid, "player_in_enter", 1);

		AC_SpawnPlayer(playerid);
		AC_TogglePlayerSpectating(playerid, 0);
		SpRabotaySer[playerid] = false;
		
		format(STRING_GLOBAL, 400, "{FFFFFF}Добро пожаловать на {ffd51c}"SERVER_NAME"{FFFFFF}\n\nИмя персонажа: {ebec86}%s\n{FFFFFF}Введите пароль:", GetName(playerid));
		ShowPlayerDialogEx(playerid, D_LOGIN, DIALOG_STYLE_INPUT, "{ebec86}>> Авторизация", STRING_GLOBAL, "Вход", "Выход");
	}
	else
	{
		SetPVarInt(playerid, "player_in_enter", 1);

		AC_SpawnPlayer(playerid);
		AC_TogglePlayerSpectating(playerid, 0);
		SpRabotaySer[playerid] = false;
		
		OnPlayerRegister(playerid);
	}
	
	STRING_GLOBAL[0] = EOS;
	mysql_format(dbHandle, STRING_GLOBAL, 128, "SELECT * FROM bans WHERE name = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "check_banlist", "i", playerid);
	SetPVarInt(playerid, "Logged", 1);
	return 1;
}

forward OnPlayerRegister(playerid);
public OnPlayerRegister(playerid)
{
    new dialog_string [ 300 ] ;
	new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
	GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
	GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
	ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
	ds_race = GetPVarInt ( playerid, "reg_race" ) ;
	ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

	format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
	if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
	else format ( dialog_string, sizeof ( dialog_string ),"%s{F7B32C}Продолжить регистрацию", dialog_string ) ;
	ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
	return 1;
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(!IsPlayerConnected(playerid)) Kick(playerid);
	if(TextResetCMD[playerid] < gettime()) TextResetCMD[playerid] = gettime()+2;
	if(result == -1)
	{
		SendErr(playerid, "Команда не найдена. Используйте: /mm - Команды");
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
    AdminText3D[playerid] = Create3DTextLabel("Администратор",0xFFFFFF,0.0,0.0,0.0,50.0,0,1);
    
    PlayerIsInkasator[playerid] = 0;
	FirePlayers[playerid][0] = FirePlayers[playerid][1] = 0;
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	noclipdata[playerid][lrold] = 0;
	noclipdata[playerid][udold] = 0;
	noclipdata[playerid][mode] = 0;
	noclipdata[playerid][lastmove] = 0;
	noclipdata[playerid][accelmul] = 0.0;

	PlayerRubbish[playerid] = 0;
	KickFreezeAFK{playerid} = 0;

	new fmt_text[80];
	
	SendClientMessage(playerid, 0x01010101, "$cmd s0beit");

	GetPlayerVersion(playerid, fmt_text, sizeof fmt_text);

	if(strfind(fmt_text, "A0.3e-") && strcmp(fmt_text, "0.3e", true) || !strcmp(fmt_text, "LoL4", true) || IsPlayerUseForbiddenSoftware(playerid))
	{
		Kick(playerid);
		return 1;
	}
	
	/*switch(random(3))// данное число должно равняться последнему case 2019 _GTA3RP
	{
       case 0: PlayAudioStreamForPlayer(playerid,"http://d.zaix.ru/awtI.mp3");
       case 1: PlayAudioStreamForPlayer(playerid,"http://d.zaix.ru/awtL.mp3");
       case 2: PlayAudioStreamForPlayer(playerid,"http://d.zaix.ru/awtP.mp3");
	}*/
	
	/*WarningCamera[playerid] = 0;
	Updates[playerid] = 0;
	AckSent[playerid] = GetPlayerAckSent(playerid);
	GetPlayerIp(playerid, PIPS[playerid], 16);*/

	if(playerid == INVALID_PLAYER_ID || gamemodeloaded != 1) return Kick(playerid);
	// --- Защита от UDP флуда -------
	isPlayerConnected[playerid] = true;
	// -------------------------------
	new buffer[40+1];
	GetPlayerClientID(playerid, buffer);

	IsPlayerUseForbiddenSoftware(playerid);
	SetPVarString(playerid, "gpci", buffer);

	GetPlayerIp(playerid, p_info[playerid][pIP], 16);
	MysqlUpdatePlayerStr(playerid, "ip", p_info[playerid][pIP]);

	GetPlayerName(playerid, p_info[playerid][pName], MAX_PLAYER_NAME);

	static const blacklist_name[5][5] = {"CM_","_CM","Bomj","bomj","BOMJ"};
	for(new i; i < sizeof(blacklist_name); i++)
	{
		if(strfind(GetName(playerid), blacklist_name[i], true) == 0) return Kick(playerid);
	}
	
	new PlName[MAX_PLAYER_NAME], count;
	GetPlayerName(playerid,PlName,sizeof(PlName));
	for(new i; i < strlen(PlName); i++)
	{
		if(PlName[i] >= '0' && PlName[i] <= '9')
		{
			count++;
			if(count == 1)
			{
				SCM(playerid, COLOR_RED, "Вы были кикнуты сервером, Причина: цифры в нике");
				Kick(playerid);
				return 1;
			}
		}
	}

    GetPlayerName(playerid, p_info[playerid][pName], MAX_PLAYER_NAME);
	if(strfind(p_info[playerid][pName], "_", true, 1) == -1)
	{
		SCM(playerid, COLOR_RED, "Вы были кикнуты сервером, Причина: НонРП ник");
		SCM(playerid, COLOR_RED, "Пример РП никнейма: Ivan_Petrov, Petr_Ivanov");
		Kick(playerid);
		return 1;
	}

	SetPlayerDataToDefault(playerid);
	CreateTextDraws(playerid);
    CreateTextDrawSkill(playerid);
	Bl_Init(playerid);
	RemoveBuild(playerid);

	new ipplayer[16];
	GetPlayerIp(playerid,ipplayer,sizeof(ipplayer));
	new num_players_on_ip = GetNumberOfPlayersOnThisIP(ipplayer);
	if(num_players_on_ip >= MAX_CONNECTIONS_FROM_IP) Kick(playerid);

	SetPVarInt(playerid, "PickupID", -1);

	rodEnable[playerid] = 0;
	rodRaised[playerid] = 0;
	SetPlayerColor(playerid, COLOR_GREY);
	SetPlayerScore(playerid, 0);
	Conday[0]++;Conday[1]++;MD[5]++;
	for(new i = 25; i >= 0; i--) SendClientMessage(playerid, COLOR_WHITE, "");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 144, "[{ebec86}A{828282}] %s[%d] присоединяется к серверу.", p_info[playerid][pName], playerid);//Закончить
	SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL, 1);
	for(new i = 17; i >= 0; i --)
	{
		PlayerUseList[playerid][i] = 0;
	}

 	SendClientMessage(playerid, COLOR_DIALOG, "Добро пожаловать на "SERVER_NAME". Желаем приятной игры!");
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
    Delete3DTextLabel(AdminText3D[playerid]);
    
	FirePlayers[playerid][0] = FirePlayers[playerid][1] = 0;
	for (new i=0; i<2; i++) DestroyObject (FirePlayers[playerid][i]);
	new message[30], totalstring[128];
	switch(reason)
	{
		case 0: format(message,sizeof(message), "Обрыв связи", message);
		case 1: format(message,sizeof(message), "Вышел", message);
		case 2: format(message,sizeof(message), "Кикнут", message);
	}

	format(totalstring, 128, "[{ebec86}A{828282}] %s[%d] покинул сервер. [Причина: %s]", GetName(playerid), playerid, message);
	SendAdminMessage(COLOR_ADMIN, totalstring, 1);

	STRING_GLOBAL = "";
	format(STRING_GLOBAL,256,"SELECT * FROM "T_ONLINE_PLAYER" WHERE date >= CURDATE() AND accountid = %d",p_info[playerid][pID]);
	new Cache:result = mysql_query(dbHandle, STRING_GLOBAL);
	new rows = cache_get_row_count(dbHandle);
	if(!rows)
	{
  		STRING_GLOBAL = "";
		format(STRING_GLOBAL,512,"INSERT INTO "T_ONLINE_PLAYER" (accountid,date,online_sec,afk_sec) VALUES (%d, CURDATE(), %d, %d)", p_info[playerid][pID], gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0]);
		mysql_tquery(dbHandle,STRING_GLOBAL);
	}
	else
	{
   		STRING_GLOBAL = "";
		format(STRING_GLOBAL,512,"UPDATE "T_ONLINE_PLAYER" SET online_sec = %d, afk_sec = %d WHERE accountid = %d AND date >= CURDATE()", gOnlinePlayer[playerid][0], gOnlinePlayerAFK[playerid][0], p_info[playerid][pID]);
		mysql_tquery(dbHandle,STRING_GLOBAL);
	}
    cache_delete(result, dbHandle);
	
	Iter_Remove(Helpers, playerid);
	Iter_Remove(Admins, playerid);
	Iter_Remove(TeamPlayers[GetFracID(playerid)], playerid);
	
	speedometr_status(playerid, false);
	
	if(playerSpawnTimer[playerid]) KillTimer(playerSpawnTimer[playerid]);
    
    if(GetPVarInt(playerid,"fuel_show"))
	{
		DeletePVar(playerid,"td_step");
		TD_EndFuel(playerid);
	}
	
	if(GetPVarInt(playerid,"block"))
	{
		Itter_RemoveInternal(_:_Y_ITER_C0:shipPlayer@YSII_Cg,_:_Y_ITER_C0:shipPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(shipPlayer));
		DestroyDynamicObject(GetPVarInt(playerid,"ObjectShip"));
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		if(IsValidDynamic3DTextLabel(ShipText[playerid])) DestroyDynamic3DTextLabel(ShipText[playerid]);
	}
	
	if(GetPVarInt(playerid, "arenda_took"))
    {
        DestroyVehicle(GetPVarInt(playerid, "arenda_took"));
        DeletePVar(playerid, "arenda_took");
        DeletePVar(playerid, "check_arenda_moped");
    }
    
    if(GetPVarType(playerid, "PlacedBB"))
	{
		DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
		DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
		if(GetPVarType(playerid, "BBArea"))
		{
			Itter_RemoveInternal(_:_Y_ITER_C0:boxPlayer@YSII_Cg,_:_Y_ITER_C0:boxPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(boxPlayer));
			foreach(new i: Player)
			{
				if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
				{
				    DeletePVar(playerid, "BBArea");
					StopAudioStreamForPlayer(i);
					SendInf(i, "Игрок вышел из игры, магнитофон выключен");
				}
			}
		}
	}
    
/*    for(new i = 0; i < 25; i++)
    {
        if(br_player[playerid][br_objects][i] != INVALID_OBJECT)
        {
            DestroyDynamicObject(br_player[playerid][br_objects][i]);
            br_player[playerid][br_objects][i]=INVALID_OBJECT;
        }
    }
    if ( br_player[playerid][br_object_text][0] != INVALID_OBJECT )
	{
		DestroyDynamicObject ( br_player[playerid][br_object_text][0] ) ;
		br_player[playerid][br_object_text][0]=INVALID_OBJECT;
	}
    if ( br_player[playerid][br_object_text][1] != INVALID_OBJECT )
	{
		DestroyDynamicObject ( br_player[playerid][br_object_text][1] ) ;
		br_player[playerid][br_object_text][1]=INVALID_OBJECT;
	}

	if(blocktext[playerid] != Text3D:-1)
	{
        DestroyDynamic3DTextLabel(blocktext[playerid]);
        blocktext[playerid] = Text3D:-1;
	}*/
	
	if ( GetPVarInt ( playerid, "cm_used" ) != 0 ) cm_status ( playerid, false ) ;
    
    if(markDist[playerid] != 0.0) KillTimer(markTimer[playerid]);
    
    /*if(p_info[playerid][data_CT_VEH] != INVALID_VEHICLE_ID)
    {
	    DestroyVehicle(p_info[playerid][data_CT_VEH]);
		p_info[playerid][data_CT_VEH] = INVALID_VEHICLE_ID;
		p_info[playerid][data_CT_NUMBER] = 0;
	}*/
	
	if(playerText_ame_Action[playerid][0] != Text3D:-1) DestroyDynamic3DTextLabel(playerText_ame_Action[playerid][0]);
 	if(playerText_ame_Action[playerid][1] != Text3D:-1) DestroyDynamic3DTextLabel(playerText_ame_Action[playerid][1]);
 	
 	if(CreateVehicleLabel[playerid] != Text3D:-1) DestroyDynamic3DTextLabel(CreateVehicleLabel[playerid]);
	
	if(GetPVarInt(playerid, "GYM_Dumbbells") == 1)
	{
		SimulatorUse[7] = false;
		SimulatorUse[11] = false;
		SimulatorUse[3] = false;
	}
	if(GetPVarInt(playerid, "GYM_Bar") == 1)
	{
		SimulatorUse[6] = false;
		SimulatorUse[10] = false;
		SimulatorUse[2] = false;
	}
	if(GetPVarInt(playerid, "GYM_Thread") == 1)
	{
		SimulatorUse[5] = false;
		SimulatorUse[9] = false;
		SimulatorUse[1] = false;
	}
	if(GetPVarInt(playerid, "GYM_Bike") == 1)
	{
		SimulatorUse[4] = false;
		SimulatorUse[8] = false;
		SimulatorUse[0] = false;
	}
	
	if(GetPVarInt(playerid,"walk_goto_me_player"))
	{
		walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
		DeletePVar(playerid,"walk_goto_me_player");
	}
	if(GetPVarInt(playerid,"walk_goto_me_player1"))
	{
		walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player1") - 1] = 0;
		DeletePVar(playerid,"walk_goto_me_player1");
	}
	
	if(GetPVarInt(playerid, "CallPlayerID") != -1 && GetPVarInt(GetPVarInt(playerid, "CallPlayerID"), "CallPlayerID") == playerid)
	{
	    if(GetPVarInt(GetPVarInt(playerid, "CallPlayerID"), "CallPlayerStart"))
	    {
	    	//SetPlayerSpecialAction(GetPVarInt(playerid, "CallPlayerID"), SPECIAL_ACTION_STOPUSECELLPHONE);
	    	SetPlayerSpecialAction(GetPVarInt(playerid, "CallPlayerID"), SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(GetPVarInt(playerid, "CallPlayerID"), 1);
		}
		SetPVarInt(GetPVarInt(playerid, "CallPlayerID"), "CallPlayerID", -1);
	    SCM(GetPVarInt(playerid, "CallPlayerID"), COLOR_ANTIQUEWHITE, "Абонент завершил звонок");
	}
	
	new TaxiDriver = GetPVarInt(playerid, "TaxiDriver");
	new TaxiPassanger = GetPVarInt(playerid, "TaxiPassanger");
	if(TaxiDriver != -1)
	{
  		if(GetPVarInt(TaxiDriver, "TaxiPassanger") == playerid)
		{
		    format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Пассажир покинул автомобиль. Вы заработали: {f0e86b}%d{FFFFFF} рублей", GetPVarInt(TaxiDriver, "TaxiMoney"));
		    SendInf(TaxiDriver, STRING_GLOBAL);
			SetPVarInt(TaxiDriver, "TaxiPassanger", -1);
			
			p_info[TaxiDriver][pTaxiCash] += GetPVarInt(TaxiDriver, "TaxiMoney");

   			p_info[TaxiDriver][pPayCheck] += p_info[TaxiDriver][pTaxiCash];
			MysqlUpdatePlayerInt(TaxiDriver, "paycheck", p_info[TaxiDriver][pPayCheck]);

            SetPVarInt(TaxiDriver, "TaxiMoney", 0);
            SetPVarInt(playerid, "TaxiDriver", -1);
            SetPVarInt(playerid, "TaxiStart", 0);
		}
	}
	if(TaxiPassanger != -1)
	{
		if(GetPVarInt(TaxiPassanger, "TaxiDriver") == playerid)
		{
			SendInf(TaxiPassanger, "Водитель покинул автомобиль, заказ завершён");
			
			SetPVarInt(TaxiPassanger, "TaxiStart", 0);
			SetPVarInt(TaxiPassanger, "TaxiDriver", -1);
			SetPVarInt(playerid, "TaxiPassanger", -1);
			SetPVarInt(playerid, "TaxiMoney", 0);

			new VehicleID = GetPlayerVehicleID(playerid);
			if(TaxiVehicleDriver[VehicleID] != -1)
			{
			    DestroyDynamic3DTextLabel(TaxiTariffText[VehicleID]);
			    TaxiVehicleDriver[VehicleID] = -1;
			}
	    }
 	}
 	
 	if(p_info[playerid][pJob] == JOB_TAXI)
	{
	    p_info[playerid][pTaxiCash] += GetPVarInt(playerid, "TaxiMoney");

		p_info[playerid][pPayCheck] += p_info[playerid][pTaxiCash];
		MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

		p_info[playerid][pTaxiCash] = 0;
		p_info[playerid][pTaxiTime] = 0;

		taxi_td_status(playerid, false);
	}
	
	if(gLastCar[playerid] != INVALID_VEHICLE_ID)
	{
		Iter_Remove(vehiclePassengers[gLastCar[playerid]], playerid);
		if(Bl_Info[playerid][Bl_Finder] != INVALID_PLAYER_ID)
		{
		    new engine1, light1, alarm1, doors1, bonnet1, boot1, objective1;
			GetVehicleParamsEx(gLastCar[playerid], engine1, light1, alarm1, doors1, bonnet1, boot1, objective1);
			SetVehicleParamsEx(gLastCar[playerid], engine1, light1, alarm1, doors1, bonnet1, boot1, false);
		}
	}
	DestroyDynamicCP(Bl_Info[playerid][Bl_Marker]);
	foreach(new i : inStreamPlayers[playerid])
	{
		Iter_Remove(inStreamPlayers[i], playerid);
	}
	Iter_Clear(inStreamPlayers[playerid]);
	
	STRING_GLOBAL = "";
	new Float:PosX[MAX_PLAYERS], Float:PosY[MAX_PLAYERS], Float:PosZ[MAX_PLAYERS];
	GetPlayerPos(playerid, PosX[playerid], PosY[playerid], PosZ[playerid]);
	format(STRING_GLOBAL, 1000, "UPDATE "T_ACCOUNTS" SET `EPLAYER` = '%f,%f,%f,%i,%i,%i' WHERE `name` = '%s' LIMIT 1", PosX[playerid], PosY[playerid], PosZ[playerid], GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),gettime()+300, p_info[playerid][pName]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

	p_info[playerid][pOnline] = 0;
	MysqlUpdatePlayerInt(playerid, "online", p_info[playerid][pOnline]);
	MysqlUpdatePlayerInt(playerid, "timehour", p_info[playerid][pTimeHour]);
	for(new i = 17; i >= 0; i --)
	{
		PlayerUseList[playerid][i] = 0;
	}
	if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);

	if(p_info[playerid][pOwnableCar] != INVALID_VEHICLE_ID)
	{
		ownable_car[playerid][v_mileage] = VehMileage[p_info[playerid][pOwnableCar]];
		ownable_car[playerid][v_fuel] = Fuel[p_info[playerid][pOwnableCar]];

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 256, "UPDATE ownable_cars SET fuel = %d, mileage = '%f' WHERE id = %d  LIMIT 1", ownable_car[playerid][v_fuel], ownable_car[playerid][v_mileage], ownable_car[playerid][v_sql]);
		mysql_query(dbHandle, STRING_GLOBAL);

		if(ownable_car_label[p_info[playerid][pOwnableCar]] != Text3D:INVALID_3DTEXT_ID)
		{
			DestroyDynamic3DTextLabel(ownable_car_label[p_info[playerid][pOwnableCar]]);
			ownable_car_label[p_info[playerid][pOwnableCar]] = Text3D:INVALID_3DTEXT_ID;
		}

		DestroyVehicle(p_info[playerid][pOwnableCar]);

		p_info[playerid][pOwnableCar] = INVALID_VEHICLE_ID;
		
		ownable_car[playerid][v_lock] =
		ownable_car[playerid][v_virtual] =
		ownable_car[playerid][v_sql] = 0;
		format(ownable_car[playerid][v_owner], 32, "None");
		ownable_car[playerid][v_model] =
		ownable_car[playerid][v_color_1] =
		ownable_car[playerid][v_color_2] =
		ownable_car[playerid][v_fuel] =
		ownable_car[playerid][v_slot] = -1;
		ownable_car[playerid][v_mileage] =
		ownable_car[playerid][v_pos_x] =
		ownable_car[playerid][v_pos_y] =
		ownable_car[playerid][v_pos_z] =
		ownable_car[playerid][v_pos_r] = 0.0;
	}

	if(p_info[playerid][PlayerCopterID] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(p_info[playerid][PlayerCopterID]);
		p_info[playerid][PlayerCopterID] = INVALID_VEHICLE_ID;
	}

	if(InShop[playerid] > 0 || GetPVarInt(playerid, "InShop") > 0)
	{
		DestroyVehicle(p_info[playerid][SalonCarID]);
		p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
		DeletePVar(playerid, "InShop");
		InShop[playerid] = 0;
		HideAutoSalonMenu(playerid);
	}
	if(p_info[playerid][pJailTime] > 0) MysqlUpdatePlayerInt(playerid, "jailtime", p_info[playerid][pJailTime]);
	
	if(pCuff[playerid][pCuffee] != INVALID_PLAYER_ID)
	{
		new id = pCuff[playerid][pCuffee];
		if(id == playerid)
		{
			new cuffer = pCuff[playerid][pCuffer];

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, 128, "[ТЮРЬМА]: %s вышел при аресте и был посажен в тюрьму", GetName(playerid));
			SendDMes(0xFF8282FF, STRING_GLOBAL);
			
			p_info[playerid][pJail] = 1;
			p_info[playerid][pJailTime] = 1800;
			p_info[playerid][pArrestSpawn] = 2;
			p_info[playerid][pWanted] = 0;
			pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
			pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
			pCuff[playerid][pCuffee] = INVALID_PLAYER_ID;
			pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
			MysqlUpdatePlayerInt(playerid, "jail", p_info[playerid][pJail]);
			MysqlUpdatePlayerInt(playerid, "jailtime", p_info[playerid][pJailTime]);
			MysqlUpdatePlayerInt(playerid, "arrestspawn", p_info[playerid][pArrestSpawn]);
			MysqlUpdatePlayerInt(playerid, "wanted", p_info[playerid][pWanted]);
		}
		else
		{
			SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(id, 0);
			SendInf(id, "Офицер, надевший на Вас наручники, вышел из игры. Наручники сняты");
			pCuff[id][pCuffer] = INVALID_PLAYER_ID;
			pCuff[id][pCuffee] = INVALID_PLAYER_ID;
			pCuff[playerid][pCuffee] = INVALID_PLAYER_ID;
			pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
		}
	}
	if(GetPVarInt(playerid, "arendkey") != -1)
	{
		new v = GetPVarInt(playerid, "arendkey");
		if(ArendInfo[v][aPlayerID] == playerid)
		{
			ArendInfo[v][aPlayerID] = INVALID_PLAYER_ID;
			AC_SetVehicleToRespawn(ArendInfo[v][aID]);
			CarDoorsEx(ArendInfo[v][aID], 0);
		}
	}
	PlayerDied[playerid] = false;
	if(PlayerUseMask[playerid])
	{
		PlayerUseMask[playerid] = false;
		KillTimer(MaskTimer[playerid]);
	}
	if(UseGPS[playerid])
	{
		DisablePlayerRaceCheckpoint(playerid);
		UseGPS[playerid] = false;
		HideGPSTextDraws(playerid);
		KillTimer(markTimer[playerid]);
        markDist[playerid] = 0.0;
		for(new i; i < 6; i++) PlayerTextDrawDestroy(playerid, TD_GPS[playerid][i]);
	}
	
	foreach(new i: Player)
	{
		if(GetPlayerState(i) == PLAYER_STATE_SPECTATING && p_info[i][Spectating][0] == playerid)
		{
		    for ( new j = 0 ; j < 7 ; j ++ )
			{
				TextDrawHideForPlayer ( i, sp_td [ j ] ) ;
				if ( j < 3 )
				{
					PlayerTextDrawDestroy ( i, sp_ptd [ i ] [ j ] ) ;
					sp_ptd [ i ] [ j ] = PlayerText:-1;
				}
			}
			GameTextForPlayer(i, "PLAYER DISCONNECTED", 3000, 6);
			callcmd::specoff(i, "");
		}
	}
	
	if(robbery_players[playerid] != -1)
	{
	    new bank_massiv = robbery_bank[0];
		foreach(new i: Player)
		{
	   		if(robbery_players[i] == bank_massiv)
	   		{
			    SendInf(i, "Один из участников ограбления вышел, ограбление прервано");

				robbery_role[i] = 0;
		  		robbery_players[i] = -1;
				
				Hunger(i);

				p_info[i][pRobbery] = 24;
				MysqlUpdatePlayerInt(i, "robbery", p_info[i][pRobbery]);
				
				ReloadRobbery();
			}
		}
	}

	PlayerTextDrawDestroy(playerid, radar_speed[playerid]);
    PlayerTextDrawDestroy(playerid, passport_name[playerid]);
    PlayerTextDrawDestroy(playerid, passport_sex[playerid]);
    PlayerTextDrawDestroy(playerid, passport_s_n[playerid]);
    PlayerTextDrawDestroy(playerid, passport_info[playerid]);
	PlayerTextDrawDestroy(playerid, PTD_Clothes[playerid]);
	PlayerTextDrawDestroy(playerid, HungerProgress[playerid]);

    for(new i = 0; i < 60; i++)
	{
		PlayerTextDrawDestroy(playerid, fstd_p[playerid][i]);
		fstd_p[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
	for(new i = 0; i < 10; i++)
	{
		PlayerTextDrawDestroy(playerid, SecurityCode[playerid][i]);
		SecurityCode[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}
	for(new i = 0; i < 2; i++)
	{
  		PlayerTextDrawDestroy(playerid, AutoSalon_Stats[playerid][i]);
		AutoSalon_Stats[playerid][i] = PlayerText:INVALID_TEXT_DRAW;
	}

	CancelSelectTextDraw(playerid);

	/*new gun_string[56], ammo_string[56];
	format(gun_string, 56, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	GunPlayer[playerid][0], GunPlayer[playerid][1], p_info[playerid][pGun][2], p_info[playerid][pGun][3],
	p_info[playerid][pGun][4], p_info[playerid][pGun][5], p_info[playerid][pGun][6], p_info[playerid][pGun][7],
	p_info[playerid][pGun][8], p_info[playerid][pGun][9], p_info[playerid][pGun][10], p_info[playerid][pGun][11],
	p_info[playerid][pGun][12]);

	format(ammo_string, 56, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	p_info[playerid][pAmmo][0], p_info[playerid][pAmmo][1], p_info[playerid][pAmmo][2], p_info[playerid][pAmmo][3],
	p_info[playerid][pAmmo][4], p_info[playerid][pAmmo][5], p_info[playerid][pAmmo][6], p_info[playerid][pAmmo][7],
	p_info[playerid][pAmmo][8], p_info[playerid][pAmmo][9], p_info[playerid][pAmmo][10], p_info[playerid][pAmmo][11],
	p_info[playerid][pAmmo][12]);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET `guns` = '%s',`ammos` = '%s' WHERE `name` = '%s'", gun_string, ammo_string, GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");*/

	//SetPlayerDataToDefault(playerid);
	PlayerLogged[playerid] = false;
	//-------[ Защита от Fake Disconnect ]---------
	if(!isPlayerConnected[playerid]) return 1;
	isPlayerConnected[playerid] = false;
	if(reason != 2) Kick(playerid);
	//---------------------------------------------

	return 1;
}

stock PreloadAnimLibs(playerid)
{
	PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"BD_FIRE");
	PreloadAnimLib(playerid,"RAPPING");
	PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"BEACH");
	PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"DEALER");
	PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CARRY");
	PreloadAnimLib(playerid,"CASINO");
	PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PARK");
	PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"FOOD");
	PreloadAnimLib(playerid,"CRIB");
	PreloadAnimLib(playerid,"ROB_BANK");
	PreloadAnimLib(playerid,"JST_BUISNESS");
	PreloadAnimLib(playerid,"PED");
	PreloadAnimLib(playerid,"OTB");
	PreloadAnimLib(playerid,"BUDDY");
	PreloadAnimLib(playerid,"SWORD");
	PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"CHAINSAW");
	PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"goggles");
	PreloadAnimLib(playerid,"INT_OFFICE");
	PreloadAnimLib(playerid,"BENCHPRESS");
	PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"RYDER");
	PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"DANCING");
	PreloadAnimLib(playerid,"RIOT");
	PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"benchpress");
	PreloadAnimLib(playerid,"Freeweights");
	PreloadAnimLib(playerid,"BASEBALL");
	PreloadAnimLib(playerid,"GHANDS");
}

public OnPlayerSpawn(playerid)
{
    if(IsPlayerAdmin(playerid)) Attach3DTextLabelToPlayer(AdminText3D[playerid],playerid,0.0,0.0,0.5);
    
	if(GetPVarInt(playerid, "SpecBool") == 1)
	{
		DeletePVar(playerid, "SpecBool");
		new Float:X = GetPVarFloat(playerid, "SpecX"), Float:Y = GetPVarFloat(playerid, "SpecY"), Float:Z = GetPVarFloat(playerid, "SpecZ"),
		Float:FA = GetPVarFloat(playerid, "SpecFA"), inter = GetPVarInt(playerid, "SpecInt"), world = GetPVarInt(playerid, "SpecWorld");
		DeletePVar(playerid, "SpecX");
		DeletePVar(playerid, "SpecY");
		DeletePVar(playerid, "SpecZ");
		DeletePVar(playerid, "SpecFA");
		DeletePVar(playerid, "SpecInt");
		DeletePVar(playerid, "SpecWorld");
		SetPlayerPos(playerid, X, Y, Z);
		SetPlayerFacingAngle(playerid, FA);
		SetPlayerVirtualWorld(playerid, world);
		SetPlayerInterior(playerid, inter);
		if(!ClosetSkins[playerid][0]) return 1;
		SetPlayerSkin(playerid, ClosetSkins[playerid][0]);	
		return true;
	}
    AC_Healthtime[playerid] = unix+3+floatround(GetPlayerPing(playerid)/100);
	
//	if(!playerSpawn{playerid}) OnGuardWarningCheater(playerid, "Spawn Hack", 85);
	if(!playerSpawnTimer[playerid]) playerSpawnTimer[playerid] = SetTimerEx("AC_SpawnTimer", (SleepTime(playerid) * 1000), 0, "i", playerid);
	playerCheckFly[playerid] = SleepTime(playerid);
	//AckSent[playerid] += 3;
	
	SpawnPlayerOnly(playerid);
	return 1;
}

forward SpawnPlayerOnly(playerid);
public SpawnPlayerOnly(playerid)
{
	if(GetPVarInt(playerid, "player_in_enter") == 1)
	{
	    SetPVarInt(playerid, "AntiSpawn", gettime()+10);
  		SetPlayerVirtualWorld(playerid, playerid+1);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 55.8956, 948.4539, 510.1547);
		SetPlayerFacingAngle(playerid, 185.5600);
		SetPlayerCameraPos(playerid, 65.5911, 947.4286, 511.8720);
		SetPlayerCameraLookAt(playerid, 64.6308, 947.6999, 511.6273);
		SetPlayerSkin(playerid, 146);
		return 1;
	}

	if(PlayerLogged[playerid] != true)
	{
		SendErr(playerid, "Сервер закрыл соединение! Для выхода из игры введите: /q(uit)" ) ;
		return OnGuardWarningCheater(playerid,  "NO SPAWN (1)", 85);
	}
	StopAudioStreamForPlayer(playerid);
	PlayerSpawned[playerid] = false;
	if(p_info[playerid][pCash])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, p_info[playerid][pCash]);
	}
	StopAudioStreamForPlayer(playerid);
	//TogglePlayerControllable(playerid, true);
	AC_ResetPlayerWeapons(playerid);
	SetHealth(playerid, 99);
	SetHunger(playerid, p_info[playerid][pHunger]);
	DisablePlayerCheckpoint(playerid);
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerScore(playerid, p_info[playerid][pLevel]);
	DP_SetPlayerFightingStyle(playerid);
	if(p_info[playerid][pWanted]) SetPlayerWantedLevel(playerid, p_info[playerid][pWanted]);
	PlayerPlaySound(playerid, 1184, 0.0, 0.0, 0.0);
	SetPVarInt(playerid, "K_Times", 0);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	FreezePlayer(playerid, 5000);
	
	new TaxiDriver = GetPVarInt(playerid, "TaxiDriver");
	new TaxiPassanger = GetPVarInt(playerid, "TaxiPassanger");
	if(TaxiDriver != -1)
	{
		if(GetPVarInt(TaxiDriver, "TaxiPassanger") == playerid)
		{
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Пассажир покинул автомобиль. Вы заработали: {f0e86b}%d{FFFFFF} рублей", GetPVarInt(TaxiDriver, "TaxiMoney"));
		    SendInf(TaxiDriver, STRING_GLOBAL);
			SetPVarInt(TaxiDriver, "TaxiPassanger", -1);
			
			p_info[TaxiDriver][pTaxiCash] += GetPVarInt(TaxiDriver, "TaxiMoney");
			
			p_info[TaxiDriver][pPayCheck] += p_info[TaxiDriver][pTaxiCash];
			MysqlUpdatePlayerInt(TaxiDriver, "paycheck", p_info[TaxiDriver][pPayCheck]);
			
			SetPVarInt(TaxiDriver, "TaxiMoney", 0);
		}
	}
	if(TaxiPassanger != -1)
	{
		if(GetPVarInt(TaxiPassanger, "TaxiDriver") == playerid)
		{
			SendInf(TaxiPassanger, "Водитель покинул автомобиль, заказ завершён");
			
			SetPVarInt(TaxiPassanger, "TaxiStart", 0);
			SetPVarInt(TaxiPassanger, "TaxiDriver", -1);
			SetPVarInt(playerid, "TaxiPassanger", -1);
			SetPVarInt(playerid, "TaxiMoney", 0);

			new VehicleID = GetPlayerVehicleID(playerid);
			if(TaxiVehicleDriver[VehicleID] != -1)
			{
			    DestroyDynamic3DTextLabel(TaxiTariffText[VehicleID]);
			    TaxiVehicleDriver[VehicleID] = -1;
			}
	    }
	}
	if(p_info[playerid][pJob] == JOB_TAXI)
	{
	    p_info[playerid][pTaxiCash] += GetPVarInt(playerid, "TaxiMoney");

		p_info[playerid][pPayCheck] += p_info[playerid][pTaxiCash];
		MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

		p_info[playerid][pTaxiCash] = 0;
		p_info[playerid][pTaxiTime] = 0;

		taxi_td_status(playerid, false);
	}
	
	if(p_info[playerid][data_CT_VEH] != INVALID_VEHICLE_ID)
    {
	    DestroyVehicle(p_info[playerid][data_CT_VEH]);
		p_info[playerid][data_CT_VEH] = INVALID_VEHICLE_ID;
		p_info[playerid][data_CT_NUMBER] = 0;
	}
	
	if(p_info[playerid][pFamily] > 0)
    {
		new famka[128];
		format(famka,sizeof(famka), "{%s}%s{FFFFFF} Family", family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]], family_info [p_info[playerid][pFamily]] [f_name]);
		SetPlayerChatBubble(playerid, famka, -1, 20.0, 1100);
	}
	
	if(GetPVarInt(playerid, "Connected"))
	{
		STRING_GLOBAL = "";
		PlayerTextDrawShow(playerid, welcome_td[playerid]);

		new month, day, hours, minutes;
		getdate(_, month, day), gettime(hours, minutes, _);
		static const monthsq[][] = {"ЯНВАРЯ", "ФЕВРАЛЯ", "МАРТА", "АПРЕЛЯ", "МАЯ", "ИЮНЯ", "ИЮЛЯ", "АВГУСТА", "СЕНТЯБРЯ", "ОКТЯБРЯ", "НОЯБРЯ", "ДЕКАБРЯ"};
		static const welcome_string[] = "~y~ДОБРО ПОЖАЛОВАТЬ~n~~w~%s~n~%d:%d ~y~%d %s";
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL), welcome_string, p_info[playerid][pName], hours, minutes, day, monthsq[month-1]);
		PlayerTextDrawSetString(playerid, welcome_td[playerid], STRING_GLOBAL);
		kill_welcome_td[playerid] = SetTimerEx("LoadKillTextDraw", 5000, 0, "i", playerid);
	
		DeletePVar(playerid, "Connected");
		PreloadAnimLibs(playerid);
		
		SecurityPlayer(playerid);
	}
	if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
	else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
	SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);
	if(GetPVarInt(playerid,"EPLAYER"))
	{
		SetPlayerPos(playerid,GetPVarFloat(playerid,"e_X"),GetPVarFloat(playerid,"e_Y"),GetPVarFloat(playerid,"e_Z"));
		SetPlayerInterior(playerid,GetPVarInt(playerid,"e_Int"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"e_Virt"));

		DeletePVar(playerid,"e_X");
		DeletePVar(playerid,"e_Y");
		DeletePVar(playerid,"e_Z");
		DeletePVar(playerid,"e_Int");
		DeletePVar(playerid,"e_Virt");
		DeletePVar(playerid, "e_time");
		DeletePVar(playerid,"EPLAYER");
		
		for(new ac = 5; ac < MAX_PLAYER_ATTACHED_OBJECTS; ac++)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, ac))
			{
				RemovePlayerAttachedObject(playerid,ac);
			}
			if(acc_player[playerid][acc_object_id][ac - 5] == -1) continue;

			new Float:frx, Float:fry, Float:frz;
			GetOffsetAttachedAccesories(acc_player[playerid][acc_object_id][ac - 5],frx,frx,frx,frx,fry,frz);

			for(new g = 0; g < 5; g++)
			{
				for(new h = 0; h < 33; h++)
				{
					if(acc_player[playerid][acc_object_id][ac - 5] == id_acc[g][h])
					{
						if(g == 2) SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],6,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);
						else if(g == 3) SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],1,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);
						else SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],2,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);
						break;
					}
				}
			}
		}
		return 1;
	}
	if(p_info[playerid][Spectating][0] != INVALID_PLAYER_ID)
	{
		SetPlayerPos(playerid, GetPVarFloat(playerid, "SpecX"), GetPVarFloat(playerid, "SpecY"), GetPVarFloat(playerid, "SpecZ"));
		SetPlayerFacingAngle(playerid, GetPVarFloat(playerid, "SpecA"));
		SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "SpecVw"));
		SetPlayerInterior(playerid, GetPVarInt(playerid, "SpecInt"));
		DeletePVar(playerid, "SpecInt");
		DeletePVar(playerid, "SpecVw");
		DeletePVar(playerid, "SpecX");
		DeletePVar(playerid, "SpecY");
		DeletePVar(playerid, "SpecZ");
		DeletePVar(playerid, "SpecA");
		p_info[playerid][Spectating][0] = INVALID_PLAYER_ID;
		p_info[playerid][Spectating][1] = INVALID_PLAYER_ID;
		SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);
		SetPlayerScore(playerid, p_info[playerid][pLevel]);
		if(p_info[playerid][pWanted]) SetPlayerWantedLevel(playerid, p_info[playerid][pWanted]);
		if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
		else if(Oldskin2[playerid] > 0) SetPlayerSkin(playerid, Oldskin2[playerid]);
		else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
		return 1;
	}
	else if(ClothesRound[playerid] == 2)
	{
		SendClientMessage(playerid, C_BLUE, "Выберите себе подходящую одежду, после выбора нажмите 'ВЫБРАТЬ', для отмены нажмите 'ОТМЕНИТЬ'");
		SendClientMessage(playerid, C_BLUE, "Чтобы просмотреть одежду, используйте стрелочки на экране");

		SetPlayerVirtualWorld(playerid, playerid+1);

		SetPlayerInterior(playerid,9);
		SetPlayerPos(playerid,-1774.4742,1768.3673,2377.4409);
		SetPlayerFacingAngle(playerid, 70.00);
		SetPlayerCameraPos(playerid, -1778.4558,1768.7147,2377.4160);
		SetPlayerCameraLookAt(playerid, -1774.4904,1768.7726,2377.4409);
		TogglePlayerControllable(playerid, 0);
		
		for(new i = 0; i < 9; i++)
		{
  			TextDrawShowForPlayer(playerid, TD_Clothes[i]);
		}
									
		SelectTextDraw(playerid, COLOR_ORANGE);
		STRING_GLOBAL[0] = EOS;
		
		new b = GetPVarInt(playerid, "PlayerBizz");
		if(p_info[playerid][pSex] == 1)
		{
			SelectCharPlace[playerid] = 0;
			SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%d РУБ", JoinShopM[SelectCharPlace[playerid]][1]*BizzInfo[b][bTill]);
			PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], STRING_GLOBAL);
		}
		else
		{
			SelectCharPlace[playerid] = 0;
			SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%d РУБ", JoinShopF[SelectCharPlace[playerid]][1]*BizzInfo[b][bTill]);
			PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], STRING_GLOBAL);
		}
		PlayerTextDrawShow(playerid,PTD_Clothes[playerid]);
		
		acc_td_status(playerid, true);
		return 1;
	}
	else if(p_info[playerid][data_CS_TEAM] == 1)
	{
	    if(CS_CARD == 1)
	    {
	        new t1 = random(9);
		    SetPlayerPos(playerid, cspos_team1[t1][0],cspos_team1[t1][1],cspos_team1[t1][2]);
			SetPlayerFacingAngle(playerid, cspos_team1[t1][3]);
			SetPlayerVirtualWorld(playerid, 228);
		}
		if(CS_CARD == 2)
	    {
	        new t1 = random(2);
	        SetPlayerPos(playerid, cspos_team3[t1][0],cspos_team3[t1][1],cspos_team3[t1][2]);
			SetPlayerFacingAngle(playerid, cspos_team3[t1][3]);
			SetPlayerVirtualWorld(playerid, 228);
	    }
	    if(CS_CARD == 3)
	    {
	        new t1 = random(2);
	        SetPlayerPos(playerid, cspos_team5[t1][0],cspos_team5[t1][1],cspos_team5[t1][2]);
			SetPlayerFacingAngle(playerid, cspos_team5[t1][3]);
			SetPlayerVirtualWorld(playerid, 228);
	    }
	    SetPlayerSkin(playerid, 287);
		SetPlayerColor(playerid, 0xCC333330);
		SetHealth(playerid, 50);
	}
	else if(p_info[playerid][data_CS_TEAM] == 2)
	{
	    if(CS_CARD == 1)
	    {
	        new t1 = random(9);
			SetPlayerPos(playerid, cspos_team2[t1][0],cspos_team2[t1][1],cspos_team2[t1][2]);
			SetPlayerFacingAngle(playerid, cspos_team2[t1][3]);
			SetPlayerVirtualWorld(playerid, 228);
		}
		if(CS_CARD == 2)
	    {
	        new t1 = random(2);
	        SetPlayerPos(playerid, cspos_team4[t1][0],cspos_team4[t1][1],cspos_team4[t1][2]);
			SetPlayerFacingAngle(playerid, cspos_team4[t1][3]);
			SetPlayerVirtualWorld(playerid, 228);
	    }
	    if(CS_CARD == 3)
	    {
	        new t1 = random(2);
	        SetPlayerPos(playerid, cspos_team6[t1][0],cspos_team6[t1][1],cspos_team6[t1][2]);
			SetPlayerFacingAngle(playerid, cspos_team6[t1][3]);
			SetPlayerVirtualWorld(playerid, 228);
	    }
	    SetPlayerSkin(playerid, 285);
		SetPlayerColor(playerid, 0x3366CC30);
		SetHealth(playerid, 50);
	}
	else if(p_info[playerid][pJail] == 1)
	{
	    if(p_info[playerid][pArrestSpawn] == 1)
	    {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 896.1680,2081.5542,2721.8101);
			SetPlayerFacingAngle(playerid, 358.4341);
			SetCameraBehindPlayer(playerid);
		}
		else if(p_info[playerid][pArrestSpawn] == 2)
	    {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 621.1590,2483.6973,-96.0300);
			SetPlayerFacingAngle(playerid, 233.4832);
			SetCameraBehindPlayer(playerid);
		}
		else if(p_info[playerid][pArrestSpawn] == 3)
	    {
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 838.8856,1314.8070,517.7500);
			SetPlayerFacingAngle(playerid, 42.9641);
			SetCameraBehindPlayer(playerid);
		}
	}
	else if(PlayerDied[playerid] == true)
	{
		InHospital[playerid] = true;
		SetHealth(playerid, 10+random(40));
		SetPlayerFacingAngle(playerid, 270);
		switch(p_info[playerid][pCity])
		{
		case 1:
			{
				SetPlayerVirtualWorld(playerid,4);
				SetPlayerInterior(playerid,0);
			}
		case 2:
			{
				SetPlayerVirtualWorld(playerid,4);
				SetPlayerInterior(playerid,0);
			}
		default:
			{
				SetPlayerVirtualWorld(playerid,4);
				SetPlayerInterior(playerid,0);
			}
		}

		new Random = random(sizeof(MedicSpawn));
		SetPlayerPos(playerid, MedicSpawn[Random][0], MedicSpawn[Random][1], MedicSpawn[Random][2]);
		SendClientMessage(playerid,C_OSNOV,"Вам придется пройти курс лечения или вылечиться у медика. Войдите в палату и делайте процедуру.");
	}
	else if(GetPlayerHouse(playerid) && p_info[playerid][pSpawnChange] == 1)
	{
		new i = GetPVarInt(playerid, "PlayerHouse");
		SetPlayerPos(playerid, HouseInfo[i][hExitx],HouseInfo[i][hExity], HouseInfo[i][hExitz]);
		SetPlayerInterior(playerid, HouseInfo[i][hInt]);
		SetPlayerVirtualWorld(playerid, HouseInfo[i][hVirtual]);
	}
	else if(p_info[playerid][pRentHouse] != -1 && p_info[playerid][pSpawnChange] == 5)
	{
		new i = p_info[playerid][pRentHouse];
		SetPlayerPos(playerid, HouseInfo[i][hExitx],HouseInfo[i][hExity], HouseInfo[i][hExitz]);
		SetPlayerInterior(playerid, HouseInfo[i][hInt]);
		SetPlayerVirtualWorld(playerid, HouseInfo[i][hVirtual]);
	}
	else if(p_info[playerid][pMember] == TEAM_MERIA && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_MERIAYJ && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_VDV && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_PRAVO && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_POLICIA && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_POLICIA2 && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_BOLNICA && p_info[playerid][pSpawnChange] == 2)
	{
		SetPVarInt(playerid, "CheckJoinInBolnica", 1);
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
		InHospital[playerid] = true;
	}
	else if(p_info[playerid][pMember] == TEAM_AUTOSCHOOL && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_YAKUZA && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_FBI && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_CORONOS && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_RIFA && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
 	else if(p_info[playerid][pMember] == TEAM_OPGTEST2 && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_ARMY && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_SWAT && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_OPG1 && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_RSM && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_SMI && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pMember] == TEAM_SWAT && p_info[playerid][pSpawnChange] == 2)
	{
		SetPlayerPos(playerid, f_info[p_info[playerid][pMember]][f_spawn][0], f_info[p_info[playerid][pMember]][f_spawn][1], f_info[p_info[playerid][pMember]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, f_info[p_info[playerid][pMember]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, f_info[p_info[playerid][pMember]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, f_info[p_info[playerid][pMember]][f_spawn_virt]);
	}
	else if(p_info[playerid][pFamily] != 0 && p_info[playerid][pSpawnChange] == 4)
	{
	    if(family_info[p_info[playerid][pFamily]][f_spawn_virt] != 0)
	    {
			SetPVarInt(playerid, "PlayerHouse", family_info[p_info[playerid][pFamily]][f_spawn_virt]);
		}
		SetPlayerPos(playerid, family_info[p_info[playerid][pFamily]][f_spawn][0], family_info[p_info[playerid][pFamily]][f_spawn][1], family_info[p_info[playerid][pFamily]][f_spawn][2]);
		SetPlayerFacingAngle(playerid, family_info[p_info[playerid][pFamily]][f_spawn][3]);
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, family_info[p_info[playerid][pFamily]][f_spawn_int]);
		SetPlayerVirtualWorld(playerid, family_info[p_info[playerid][pFamily]][f_spawn_virt]);
	}
	else if(GetPlayerHouse(playerid) == 0 && p_info[playerid][pSpawnChange] == 1)
	{
	    FreezePlayer(playerid, 5000);
	    switch(random(3))
	    {
	        case 0:
	        {
				SetPlayerPos(playerid, -2101.1748,2237.0669,1001.9138);
				SetPlayerFacingAngle(playerid, 304.3657);
			}
			case 1:
			{
				SetPlayerPos(playerid, -2101.1748,2237.0669,1001.9138);
				SetPlayerFacingAngle(playerid, 304.3657);
			}
			case 2:
			{
				SetPlayerPos(playerid, -2101.1748,2237.0669,1001.9138);
				SetPlayerFacingAngle(playerid, 304.3657);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
 	else if(p_info[playerid][pMember] >= 1 && p_info[playerid][pSpawnChange] == 0 || p_info[playerid][pMember] == 0)
	{
	    FreezePlayer(playerid, 5000);
		switch(random(3))
	    {
	        case 0:
	        {
				SetPlayerPos(playerid, -2101.1748,2237.0669,1001.9138);
				SetPlayerFacingAngle(playerid, 304.3657);
			}
			case 1:
			{
				SetPlayerPos(playerid, -2101.1748,2237.0669,1001.9138);
				SetPlayerFacingAngle(playerid, 304.3657);
			}
			case 2:
			{
				SetPlayerPos(playerid, -2101.1748,2237.0669,1001.9138);
				SetPlayerFacingAngle(playerid, 304.3657);
			}
		}
		SetCameraBehindPlayer(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	for(new i = TOTALROOMS; i > 0; i--)
	{
		if(!strcmp(RoomsInfo[i][rOwner],p_info[playerid][pName],true))
		{
			if(p_info[playerid][pSpawnChange] == 3)
			{
				FreezePlayer(playerid, 5000);
				SetPlayerPos(playerid,RoomsInfo[i][rExitX],RoomsInfo[i][rExitY],RoomsInfo[i][rExitZ]);
				SetPlayerInterior(playerid, RoomsInfo[i][rExitI]);
				SetPlayerVirtualWorld(playerid, RoomsInfo[i][rExitV]);
				Streamer_UpdateEx(playerid, RoomsInfo[i][rExitX],RoomsInfo[i][rExitY],RoomsInfo[i][rExitZ], RoomsInfo[i][rExitV], RoomsInfo[i][rExitI]);
				SetPVarInt(playerid, "PlayerRooms", i);
			}
		}
	}
 	rodEnable[playerid] = 0;
	rodRaised[playerid] = 0;
	ApplyAnimation(playerid, "PED", "null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid, "CARRY", "null",0.0,0,0,0,0,0);
	PlayerSpawned[playerid] = true;

	if(PlayerSpawned[playerid] == true)
	{
	    for(new ac = 5; ac < MAX_PLAYER_ATTACHED_OBJECTS; ac++)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, ac))
			{
				RemovePlayerAttachedObject(playerid,ac);
			}
			if(acc_player[playerid][acc_object_id][ac - 5] == -1) continue;

			new Float:frx, Float:fry, Float:frz;
			GetOffsetAttachedAccesories(acc_player[playerid][acc_object_id][ac - 5],frx,frx,frx,frx,fry,frz);

			for(new g = 0; g < 5; g++)
			{
				for(new h = 0; h < 33; h++)
				{
					if(acc_player[playerid][acc_object_id][ac - 5] == id_acc[g][h])
					{
						if(g == 2) SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],6,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);
						else if(g == 3) SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],1,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);
						else SetPlayerAttachedObject(playerid,ac,acc_player[playerid][acc_object_id][ac - 5],2,acc_player[playerid][acc_object_x][ac - 5],acc_player[playerid][acc_object_y][ac - 5],acc_player[playerid][acc_object_z][ac - 5],frx,fry,frz);
						break;
					}
				}
			}
		}
	}

	if(p_info[playerid][pDeActivate] != 0)
	{
		SendClientMessage(playerid, C_RED, "К сожалению Ваш аккаунт был деактивирован администратором сервера");
		SendClientMessage(playerid, C_RED, "Доступ к аккаунту запрещен. Ожидайте, возможно скоро с Вас снимут это ограничение");
		SendClientMessage(playerid, C_RED, "Если Вы считаете, что произошла ошибка - обратитесь к администратору сервера");
		Kick(playerid);
		return 1;
	}

	new year, month, day,
	fmt_query[70+MAX_PLAYER_NAME];

	getdate(year, month, day);

	format(fmt_query, sizeof fmt_query, "UPDATE accounts SET datavhod='%d.%d.%d' WHERE name='%s'", day, month, year, GetName(playerid));
	mysql_query(dbHandle, fmt_query);
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	if(playerSpawnTimer[playerid])
	{
		KillTimer(playerSpawnTimer[playerid]);
		playerSpawnTimer[playerid] = 0;
	}
	playerSpawn{playerid} = 1;
    playerCheckFly[playerid] = SleepTime(playerid);

	if(playerid == killerid)
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[{ebec86}A{828282}] %s[%d] кикнут за использование читов (SelfKill)", GetName(playerid), playerid);
		SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
		Kick(playerid);
	}
	if(GetPVarInt(playerid, "DeathTime") > GetTickCount()) return OnGuardWarningCheater(playerid,  "Death Time", 85);
	else SetPVarInt(playerid, "DeathTime", GetTickCount()+230);

	DrugEffect[playerid] = 0;

	if(robbery_players[playerid] != -1)
	{
	    new bank_massiv = robbery_bank[0];
		foreach(new i: Player)
		{
	   		if(robbery_players[i] == bank_massiv)
	      	{
				SendInf(i, "Один из участников ограбления погиб, ограбление прервано");

				robbery_role[i] = 0;
				robbery_players[i] = -1;

				Hunger(i);

				p_info[i][pRobbery] = 24;
				MysqlUpdatePlayerInt(i, "robbery", p_info[i][pRobbery]);

				ReloadRobbery();
			}
		}
	}
	
	if(GetPVarType(playerid, "PlacedBB"))
	{
		DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
		DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
		if(GetPVarType(playerid, "BBArea"))
		{
			Itter_RemoveInternal(_:_Y_ITER_C0:boxPlayer@YSII_Cg,_:_Y_ITER_C0:boxPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(boxPlayer));
			foreach(new i: Player)
			{
				if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
				{
				    DeletePVar(playerid, "BBArea");
					StopAudioStreamForPlayer(i);
					SendInf(i, "Игрок умер, магнитофон выключен");
				}
			}
		}
	}

	STRING_GLOBAL[0] = EOS;
	AC_ResetPlayerWeapons(playerid);
	if(GetPVarInt(playerid, "Animation"))
	{
		DeletePVar(playerid, "Animation");
		TextDrawHideForPlayer(playerid, AnimDraw);
	}
	if(GetPVarInt(playerid, "CallPlayerID") != -1 && GetPVarInt(GetPVarInt(playerid, "CallPlayerID"), "CallPlayerID") == playerid)
	{
	    new CallPlayer = GetPVarInt(playerid, "CallPlayerID");
		if(GetPVarInt(playerid, "CallPlayerStart"))
		{
			//SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid, 1);
			SetPVarInt(playerid, "CallPlayerStart", 0);
		}
		if(GetPVarInt(CallPlayer, "CallPlayerStart"))
		{
			//SetPlayerSpecialAction(CallPlayer, SPECIAL_ACTION_STOPUSECELLPHONE);
			SetPlayerSpecialAction(CallPlayer, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(CallPlayer, 1);
			SetPVarInt(CallPlayer, "CallPlayerStart", 0);
		}
		SetPVarInt(CallPlayer, "CallPlayerID", -1);
		SCM(CallPlayer, COLOR_ANTIQUEWHITE, "Абонент завершил звонок");
		SetPlayerChatBubble(CallPlayer, "завершил(а) звонок", COLOR_PURPLE, 10.0, 10000);
		SetPVarInt(playerid, "CallPlayerID", -1);
	}
    if(killerid != INVALID_PLAYER_ID)
	{
		if(MafiaBattle[0][3] != 0)
		{
		    new killername[24], playername[24]; getname(killerid -> killername, playerid -> playername);
		    new killerfrac = GetFracID(killerid), playerfrac = GetFracID(playerid);
		    #define InCapture(%0) ((MafiaBattle[0][0]==%0)||(MafiaBattle[1][0]==%0))
			if(PlayerToKvadrat(killerid, MafiaBattleZone[2], MafiaBattleZone[3], MafiaBattleZone[0], MafiaBattleZone[1])
			&& PlayerToKvadrat(playerid, MafiaBattleZone[2], MafiaBattleZone[3], MafiaBattleZone[0], MafiaBattleZone[1]))
		    {
		        if ( killerfrac != playerfrac )
				{
					new temp[256];
					if ( dip_status [ killerfrac ] [ MafiaBattle[0][0] ] == status_alliance && dip_status [ playerfrac ] [ MafiaBattle[1][0] ] == status_alliance )
					{
						new rep, money;
						switch(reason)
						{
							case 0 									: rep = 5, money = 5000;
							case 22, 23 							: rep = 4, money = 4000;
							case 5, 6, 7, 10, 11, 12, 13, 14, 15	: rep = 10, money = 10000;
							default 								: rep = 1, money = 1000;
						}

						MafiaBattle[1][1] += rep;
						frac_money[killerfrac] += money;
						UpdateFractionStore(killerfrac);
						UpdateStoreGang(killerfrac);
						format(temp, sizeof temp, "[WAR NEWS]: %s [Альянс с %s] завалил %s [Альянс с %s] (уважение +%i)", killername, GetMafiaName(MafiaBattle[0][0], 1), playername, GetMafiaName(MafiaBattle[1][0], 1), rep);
						SendZahvatMessage(MafiaBattle[1][0], MafiaBattle[0][0], GetFracColor(killerfrac), temp);
						SendFMes(playerfrac, GetFracColor(playerfrac), temp);
						SendFMes(killerfrac, GetFracColor(killerfrac), temp);
					}
					if ( dip_status [ playerfrac ] [ MafiaBattle[0][0] ] == status_alliance && dip_status [ killerfrac ] [ MafiaBattle[1][0] ] == status_alliance )
					{
						new rep, money;
						switch(reason)
						{
							case 0 									: rep = 5, money = 5000;
							case 22, 23 							: rep = 4, money = 4000;
							case 5, 6, 7, 10, 11, 12, 13, 14, 15	: rep = 10, money = 10000;
							default 								: rep = 1, money = 1000;
						}

						MafiaBattle[1][1] += rep;
						frac_money[killerfrac] += money;
						UpdateFractionStore(killerfrac);
						UpdateStoreGang(killerfrac);
						format(temp, sizeof temp, "[WAR NEWS]: %s [Альянс с %s] завалил %s [Альянс с %s] (уважение +%i)", killername, GetMafiaName(MafiaBattle[1][0], 1), playername, GetMafiaName(MafiaBattle[0][0], 1), rep);
						SendZahvatMessage(MafiaBattle[1][0], MafiaBattle[0][0], GetFracColor(killerfrac), temp);
						SendFMes(playerfrac, GetFracColor(playerfrac), temp);
						SendFMes(killerfrac, GetFracColor(killerfrac), temp);
					}
					if ( dip_status [ killerfrac ] [ MafiaBattle[0][0] ] == status_alliance && playerfrac == MafiaBattle[1][0] )
					{
						new rep, money;
						switch(reason)
						{
							case 0 									: rep = 5, money = 5000;
							case 22, 23 							: rep = 4, money = 4000;
							case 5, 6, 7, 10, 11, 12, 13, 14, 15	: rep = 10, money = 10000;
							default 								: rep = 1, money = 1000;
						}

						MafiaBattle[0][1] += rep;
						frac_money[killerfrac] += money;
						UpdateFractionStore(killerfrac);
						UpdateStoreGang(killerfrac);
						format(temp, sizeof temp, "[WAR NEWS]: %s [Альянс с %s] завалил %s [%s] (уважение +%i)", killername, GetMafiaName(MafiaBattle[0][0], 1), playername, GetMafiaName(playerfrac, 1), rep);
						SendZahvatMessage(MafiaBattle[0][0], MafiaBattle[1][0], GetFracColor(killerfrac), temp);
						SendFMes(killerfrac, GetFracColor(killerfrac), temp);
					}
					if ( dip_status [ killerfrac ] [ MafiaBattle[1][0] ] == status_alliance && playerfrac == MafiaBattle[0][0] )
					{
						new rep, money;
						switch(reason)
						{
							case 0 									: rep = 5, money = 5000;
							case 22, 23 							: rep = 4, money = 4000;
							case 5, 6, 7, 10, 11, 12, 13, 14, 15	: rep = 10, money = 10000;
							default 								: rep = 1, money = 1000;
						}

						MafiaBattle[1][1] += rep;
						frac_money[killerfrac] += money;
						UpdateFractionStore(killerfrac);
						UpdateStoreGang(killerfrac);
						format(temp, sizeof temp, "[WAR NEWS]: %s [Альянс с %s] завалил %s [%s] (уважение +%i)", killername, GetMafiaName(MafiaBattle[1][0], 1), playername, GetMafiaName(playerfrac, 1), rep);
						SendZahvatMessage(MafiaBattle[0][0], MafiaBattle[1][0], GetFracColor(killerfrac), temp);
						SendFMes(killerfrac, GetFracColor(killerfrac), temp);
					}
					if ( MafiaBattle[1][0] == killerfrac && dip_status [ playerfrac ] [ MafiaBattle[0][0] ] == status_alliance )
					{
						new rep, money;
						switch(reason)
						{
							case 0 									: rep = 5, money = 5000;
							case 22, 23 							: rep = 4, money = 4000;
							case 5, 6, 7, 10, 11, 12, 13, 14, 15	: rep = 10, money = 10000;
							default 								: rep = 1, money = 1000;
						}

	                    MafiaBattle[0][1] += rep;
						frac_money[killerfrac] += money;
						UpdateFractionStore(killerfrac);
						UpdateStoreGang(killerfrac);
						format(temp, sizeof temp, "[WAR NEWS]: %s [%s] завалил %s [Альянс с %s] (уважение +%i)", killername, GetMafiaName(killerfrac, 1), playername, GetMafiaName(MafiaBattle[0][0], 1), rep);
						SendZahvatMessage(MafiaBattle[0][0], MafiaBattle[1][0], GetFracColor(killerfrac), temp);
						SendFMes(playerfrac, GetFracColor(playerfrac), temp);
					}
					if ( MafiaBattle[0][0] == killerfrac && dip_status [ playerfrac ] [ MafiaBattle[1][0] ] == status_alliance )
					{
						new rep, money;
						switch(reason)
						{
							case 0 									: rep = 5, money = 5000;
							case 22, 23 							: rep = 4, money = 4000;
							case 5, 6, 7, 10, 11, 12, 13, 14, 15	: rep = 10, money = 10000;
							default 								: rep = 1, money = 1000;
						}

	                    MafiaBattle[0][1] += rep;
						frac_money[killerfrac] += money;
						UpdateFractionStore(killerfrac);
						UpdateStoreGang(killerfrac);
						format(temp, sizeof temp, "[WAR NEWS]: %s [%s] завалил %s [Альянс с %s] (уважение +%i)", killername, GetMafiaName(killerfrac, 1), playername, GetMafiaName(MafiaBattle[1][0], 1), rep);
						SendZahvatMessage(MafiaBattle[0][0], MafiaBattle[1][0], GetFracColor(killerfrac), temp);
						SendFMes(playerfrac, GetFracColor(playerfrac), temp);
					}
					if(InCapture(killerfrac) && InCapture(playerfrac))
					{
						new rep, money;
						switch(reason)
						{
							case 0 									: rep = 5, money = 5000;
							case 22, 23 							: rep = 4, money = 4000;
							case 5, 6, 7, 10, 11, 12, 13, 14, 15	: rep = 10, money = 10000;
							default 								: rep = 1, money = 1000;
						}

						if(MafiaBattle[0][0] == killerfrac) MafiaBattle[0][1] += rep;
						if(MafiaBattle[1][0] == killerfrac) MafiaBattle[1][1] += rep;
						frac_money[killerfrac] += money;
						UpdateFractionStore(killerfrac);
						UpdateStoreGang(killerfrac);
						format(temp, sizeof temp, "[WAR NEWS]: %s [%s] завалил %s [%s] (уважение +%i)", killername, GetMafiaName(killerfrac, 1), playername, GetMafiaName(playerfrac, 1), rep);
						SendZahvatMessage(MafiaBattle[0][0], MafiaBattle[1][0], GetFracColor(killerfrac), temp);
					}
				}
			}
			foreach(new A: Player)
			{
				if(p_info[A][pMember] == MafiaBattle[0][0] || p_info[A][pMember] == MafiaBattle[1][0])
				{
					new td_string [ 80 ] ;
					format ( td_string, sizeof ( td_string ), "~r~(%d) %s vs %s (%d)", MafiaBattle[0][1], GetMafiaName(MafiaBattle[0][0], 1), GetMafiaName(MafiaBattle[1][0], 1), MafiaBattle[1][1] ) ;
					PlayerTextDrawSetString(A, capture_td [ A ], td_string ) ;
				}
			}
		}
	}

	if(killerid != INVALID_PLAYER_ID)
	{
	    new killername[24], playername[24]; getname(killerid -> killername, playerid -> playername);
		new killerfrac = GetFracID(killerid);
		if(Bl_Info[playerid][Bl_onFrac][killerfrac])
		{
			new temp[144];
			Bl_Info[playerid][Bl_isKilled] = true;
			Bl_Info[playerid][Bl_Finder] = INVALID_PLAYER_ID;
			Bl_Info[playerid][Bl_Kills][killerfrac] ++;

			if(Bl_Info[playerid][Bl_Kills][killerfrac] >= f_info [ killerfrac ] [ f_bl_config ] [ 2 ])
			{
			    Bl_Remove(playerid, killerfrac);
				format(temp, sizeof temp, "[BLACK LIST]: %s откупился кровью и был вычеркнут из черного списка %s", GetName(playerid), Fractions[killerfrac][fractionName]);
				SendFMes(killerfrac, COLOR_LIGHTBLUE, temp);
				format(temp, sizeof temp, "[BLACK LIST]: Вы откупились кровью и были вычеркнуты из черного списка %s", Fractions[killerfrac][fractionName]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, temp);
			}
			else
			{
			    Bl_Update(playerid, killerfrac);
				format(temp, sizeof temp, "[BLACK LIST]: Заплати или терпи, %s помнит о тебе", Fractions[killerfrac][fractionName]);
				SCM(playerid, COLOR_LIGHTBLUE, temp);
				format(temp, sizeof temp, "[BLACK LIST]: %s завалил %s. Крепись братва, в следующий раз терпила даст монету", GetName(killerid), GetName(playerid));
				SendFMes(killerfrac, COLOR_LIGHTBLUE, temp);
				SendInf(killerid, "Убив терпилу вы отобрали 7.000 рублей. 5.000 рублей вы положили в карман, а 2.000 рублей отдали в общак");
				GiveMoney(killerid, 5000, "Убийство из /bl");
				frac_money[p_info[killerid][pMember]] += 2000;
				UpdateFractionStore(p_info[killerid][pMember]);
				UpdateStoreGang(p_info[killerid][pMember]);
			}
		}
	}

	if(GetPVarInt(playerid, "GYM_Dumbbells") == 1)
	{
		SetPVarInt(playerid, "GYM_Dumbbells", 0);
		RemovePlayerAttachedObject(playerid, 7);
		SimulatorUse[7] = false;
		SimulatorUse[11] = false;
		SimulatorUse[3] = false;
	}
	if(GetPVarInt(playerid, "GYM_Bar") == 1)
	{
		SetPVarInt(playerid, "GYM_Bar", 0);
		RemovePlayerAttachedObject(playerid, 7);
		SimulatorUse[6] = false;
		SimulatorUse[10] = false;
		SimulatorUse[2] = false;
	}
	if(GetPVarInt(playerid, "GYM_Thread") == 1)
	{
		SetPVarInt(playerid, "GYM_Threadr", 0);
		SimulatorUse[5] = false;
		SimulatorUse[9] = false;
		SimulatorUse[1] = false;
	}
	if(GetPVarInt(playerid, "GYM_Bike") == 1)
	{
		SetPVarInt(playerid, "GYM_Bike", 0);
		SimulatorUse[4] = false;
		SimulatorUse[8] = false;
		SimulatorUse[0] = false;
	}

	DeletePVar(playerid,"car_spawn");
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
	PlayerSpawned[playerid] = false;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
	SetPVarInt(playerid,"K_Times",GetPVarInt(playerid,"K_Times") + 1);
	if(GetPVarInt(playerid,"K_Times") > 1) return OnGuardWarningCheater(playerid,  "K Times", 85);
	if(UseGPS[playerid])
	{
		DisablePlayerRaceCheckpoint(playerid);
		UseGPS[playerid] = false;
		KillTimer(markTimer[playerid]);
        markDist[playerid] = 0.0;
		HideGPSTextDraws(playerid);
	}
	if(pCuff[playerid][pCuffee] == playerid)
	{
		new cuffer = pCuff[playerid][pCuffer];
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playerid, 0);
		pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
		pCuff[playerid][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
		pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		SendInf(cuffer, "Арестованный умер, наручники сняты");
	}
	if(PlayerUseMask[playerid])
	{
		PlayerUseMask[playerid] = false;
		KillTimer(MaskTimer[playerid]);
	}
	if(p_info[playerid][data_CS_TEAM] != 0 && p_info[killerid][data_CS_TEAM] != 0)
	{
	    cash_cs[playerid] -= random(50) + 5;
	    if(cash_cs[playerid] < 0)
	    {
	        cash_cs[playerid] = 50;
	    }

	    cash_cs[killerid] += random(300) + 50;
		kill_cs[killerid]++;

	    if(p_info[killerid][data_CS_TEAM] == 1) cs_score[0] += 1;
	    else if(p_info[killerid][data_CS_TEAM] == 2) cs_score[1] += 1;

		foreach(new i: Player)
		{
      		if(p_info[i][data_CS_TEAM] != 0)
      		{
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"[CS]: %s[%d] убил %s[%d] (Армия: %d, ОМОН: %d)",GetName(killerid),killerid,GetName(playerid),playerid,cs_score[0],cs_score[1]);
				SendClientMessage(i, COLOR_LIME, STRING_GLOBAL);
			}
		}
	}
	if(pCuff[playerid][pCuffee] != INVALID_PLAYER_ID)
	{
		new id = pCuff[playerid][pCuffee];

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 128, "[ДИСПЕТЧЕР]: %s %s был(а) убит(а) во время ареста. %s смог(ла) сбежать", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), GetName(id));
		SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, STRING_GLOBAL);

		SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(id, 0);
		SendInf(id, "Офицер, надевший на Вас наручники, умер. Наручники сняты");

		pCuff[id][pCuffer] = INVALID_PLAYER_ID;
		pCuff[id][pCuffee] = INVALID_PLAYER_ID;
		pCuff[playerid][pCuffee] = INVALID_PLAYER_ID;
		pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
	}
	if(p_info[playerid][pWanted] > 0 && p_info[playerid][data_CS_TEAM] == 0)
	{
		if(killerid == INVALID_PLAYER_ID) return 1;
		if(!IsACop(killerid)) return 1;
		if(p_info[killerid][pMember] == TEAM_POLICIA || p_info[killerid][pMember] == TEAM_FBI)
		{
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы посажены в тюрьму на %i секунд!", p_info[playerid][pWanted]*600);
			SendClientMessage(playerid, C_BLUE, STRING_GLOBAL);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 621.1590,2483.6973,-96.0300);
			SetPlayerFacingAngle(playerid, 233.4832);
			p_info[playerid][pJail] = 1;
			p_info[playerid][pJailTime] = p_info[playerid][pWanted]*600;
			p_info[playerid][pArrestSpawn] = 2;
			MysqlUpdatePlayerInt(playerid, "jail", p_info[playerid][pJail]);
			MysqlUpdatePlayerInt(playerid, "jailtime", p_info[playerid][pJailTime]);
			MysqlUpdatePlayerInt(playerid, "arrestspawn", p_info[playerid][pArrestSpawn]);

			SendInf(playerid, "Вы получили премию за арестованного преступника");
			p_info[killerid][pPayCheck] += WorkSalary[25];
			MysqlUpdatePlayerInt(killerid, "paycheck", p_info[killerid][pPayCheck]);
		}
		SetPlayerColorEx(playerid, TeamColors[0]);
		SetHealth(playerid, 100);
		p_info[playerid][pWanted] = 0;
		SetPlayerWantedLevel(playerid, 0);
		TogglePlayerControllable(playerid, 1);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 80, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~y~JAILED: ~w~%d", p_info[playerid][pJailTime]);
		GameTextForPlayer(playerid, STRING_GLOBAL, 3000, 6);
		MysqlUpdatePlayerInt(playerid, "wanted", p_info[playerid][pWanted]);

		if(IsACop(killerid))
		{
		    Bl_Info[playerid][Bl_Finder] = INVALID_PLAYER_ID;
		}
	}
	if(!p_info[playerid][pAdmin])
	{
		if(!p_info[playerid][pJailTime])
		{
			if(IsPlayerToSquare(playerid,-891.3302,-2950.0190,2915.9917,560.3257)) p_info[playerid][pCity] = 1;
			else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) p_info[playerid][pCity] = 2;
			else p_info[playerid][pCity] = 3;

			MysqlUpdatePlayerInt(playerid, "city", p_info[playerid][pCity]);

			PlayerDied[playerid] = true;
		}
	}
	SetHunger(playerid, 40);
	DisablePlayerCheckpoint(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid,3);

	if(InShop[playerid] > 0 || GetPVarInt(playerid, "InShop") > 0)
	{
		DestroyVehicle(p_info[playerid][SalonCarID]);
		DeletePVar(playerid, "InShop");
		InShop[playerid] = 0;
		p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
		HideAutoSalonMenu(playerid);
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		if(p_info[playerid][pJail] == 0 && p_info[playerid][data_CS_TEAM] == 0)
		{
			if(!p_info[killerid][pAdmin])
			{
				if(IsACop(killerid) || IsAArmy(killerid) || IsAMafia(killerid)) { }
				else
				{
					if(p_info[killerid][pWanted] >= 6) return 1;
					p_info[killerid][pWanted] += 2;
					if(p_info[killerid][pWanted] >= 6) p_info[killerid][pWanted] = 6;
					p_info[killerid][pWantedTime] = 1800 + random(300);

					STRING_GLOBAL[0] = EOS;
					if(GetPlayerWeapon(killerid) != 0)
					{
					    new IWeaponName[24];
						GetWeaponName(GetPlayerWeapon(killerid), IWeaponName, 24);
						format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] %s[%d] был убит игроком %s[%d]. (Оружие: %s)", GetName(playerid), playerid, GetName(killerid), killerid, IWeaponName);
						SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
					}
					else
					{
					    format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] %s[%d] был убит игроком %s[%d]", GetName(playerid), playerid, GetName(killerid), killerid);
						SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
					}
					SetPlayerCriminal(killerid, "Неизвестный", "Убийство");
					MysqlUpdatePlayerInt(playerid, "wanted", p_info[playerid][pWanted]);
					MysqlUpdatePlayerInt(playerid, "wantedtime", p_info[playerid][pWantedTime]);
				}
			}
		}
	}
	if(Ether[playerid] == true)
	{
		new CB[16];
		Ether[playerid] = false;
		Convert(GetPVarInt(playerid,"InEther"));
		if(EtherSms[0] == true)
		{
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, 90, "[ОРГАНИЗАЦИЯ]: %s выключил прием СМС", GetName(playerid));
			SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, STRING_GLOBAL);
		}
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 90, "[ОРГАНИЗАЦИЯ]: %s вышел из прямого эфира [Время в эфире: %s, СМС: %i]",GetName(playerid), CB,SmsNews[0]);
		SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, STRING_GLOBAL);
		EtherSms[0] = false;
		SmsNews[0] = 0;
		DeletePVar(playerid, "InEther");
	}
	if(EtherLive[playerid] == true)
	{
		EtherLive[playerid] = false;
		DeletePVar(playerid, "Etherfrac");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы вышли из прямого эфира");
	}

    SetPlayerDrivingExamInfo(playerid, DE_POINTS, 0);
    SetPlayerFactoryDeskUse(playerid, GetPlayerData(playerid, P_FACTORY_USE_DESK), false);
	SetPlayerJobLoadItems(playerid, 0);
	SetPlayerTempJob(playerid, TEMP_JOB_NONE);

	/*new Float:RandomSpawnAtDeath[][4] = 
	{ 
		{2480.9375,-2150.7056,634.2466,92.1066}, 
		{2459.1106,-2150.5928,634.2466,271.2305}
	};
	new _random = random(sizeof(RandomSpawnAtDeath));
	LoadTexture(playerid);
	SetPlayerVirtualWorld(playerid, 4);
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, 2480.9375,-2150.7056,634.2466);
	SetPlayerFacingAngle(playerid, 271.2305);
	SetPVarInt(playerid, "CheckJoinInBolnica", 0); */
	SetTimer("Spawn",5000,false);

	return 1;
}

forward Spawn(playerid); 
public Spawn(playerid) 
{ 
	SetPVarInt(playerid, "CheckJoinInBolnica", 0);
    SetPlayerVirtualWorld(playerid, 4);
    SetPlayerPos(playerid,2468.1284,-2146.5254,634.2466);
    SetPlayerHealth(playerid,10.0); 
}

public OnVehicleSpawn(vehicleid)
{
    if(Iter_Count(vehiclePassengers[vehicleid]))
	{
		Iter_Clear(vehiclePassengers[vehicleid]);
	}
	
	foreach(new i: Player)
    {
        if(GetPVarInt(i, "arenda_took") == vehicleid && GetPVarInt(i, "arenda_took") && GetPVarInt(i, "check_arenda_moped"))
        {
            DestroyVehicle(vehicleid);
            DeletePVar(i, "arenda_took");
            DeletePVar(i, "check_arenda_moped");
            SendInf(i, "Мопед, который вы арендовали, был удален");
            break;
        }
    }
	if(vehicleid < lastveh) Fuel[vehicleid] = 100;
	if(VehInfos[vehicleid][vRightBlink])
	{
		DestroyObject(Blink[vehicleid][0]);
		DestroyObject(Blink[vehicleid][1]);
		VehInfos[vehicleid][vRightBlink] = 0;
	}
	if(VehInfos[vehicleid][vLeftBlink])
	{
		DestroyObject(Blink[vehicleid][2]);
		DestroyObject(Blink[vehicleid][3]);
		VehInfos[vehicleid][vLeftBlink] = 0;
	}
	if(VehInfos[vehicleid][vAvary] == 1)
	{
		DestroyObject(Blink[vehicleid][0]);
		DestroyObject(Blink[vehicleid][1]);
		DestroyObject(Blink[vehicleid][2]);
		DestroyObject(Blink[vehicleid][3]);
		VehInfos[vehicleid][vAvary] = 0;
	}
	
	if(vehicleid >= TruckerVehicle[2] && vehicleid <= TruckerVehicle[5]) UpdateDynamic3DTextLabelText(TrailerInfo[vehicleid], 0xa24646FF, "Доставка продуктов\n{FFFFFF}Загрузка 0 / 10000 п");
	if(vehicleid >= TruckerVehicle[6] && vehicleid <= TruckerVehicle[9]) UpdateDynamic3DTextLabelText(TrailerInfo[vehicleid], 0xa24646FF, "Доставка топлива\n{FFFFFF}Загрузка 0 / 8000 л");
	TrailerOwnerID[vehicleid] = -1;
	
	if(TaxiVehicleDriver[vehicleid] != -1)
	{
	    DestroyDynamic3DTextLabel(TaxiTariffText[vehicleid]);
	    TaxiVehicleDriver[vehicleid] = -1;
	}
	if(MechanicVehicleDriver[vehicleid] != -1)
	{
		DestroyDynamic3DTextLabel(MechanicFuelCostText[vehicleid]);
	    MechanicVehicleDriver[vehicleid] = -1;
	}
	
	SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);
	Engine[vehicleid] = Lights[vehicleid] = Bonnet[vehicleid] = Boot[vehicleid] = false;
	SetVehicleNumberPlate(vehicleid,"Г777ОС");
	switch(GetVehicleModel(vehicleid))
	{
	case 462,510,509,481: Fuel[vehicleid] = 999;
	}
	foreach(new i: Player)
	{
		if(p_info[i][pOwnableCar] == vehicleid)
		{
			for(new idx = 13; idx >= 0; idx --)
			{
				if(ownable_car[i][v_veh_coms][idx] != 0) AddVehicleComponent(vehicleid, ownable_car[i][v_veh_coms][idx]);
			}
			if(ownable_car[i][v_paintjob] != 3) ChangeVehiclePaintjob(vehicleid, ownable_car[i][v_paintjob]);
			
			if(!strcmp(ownable_car[i][v_number], "-1", false) || !strcmp(ownable_car[i][v_number], "", false))//[ НЕТ НОМЕРОВ ]
			{
			    format(ownable_car[i][v_number], 32, "");//
                UpdateDynamic3DTextLabelText(ownable_car_label[p_info[i][pOwnableCar]], 0xa24646FF, "");//[ НЕТ НОМЕРОВ ]
			}
			else
			{
				new string[128];
				format(string, sizeof(string), "", ownable_car[i][v_number]);//Номера: {ebec86}%s
				UpdateDynamic3DTextLabelText(ownable_car_label[p_info[i][pOwnableCar]], 0xFFFFFFFF, string);
			}
		}
		if(vehicleid >= LSBus[0] && vehicleid <= LSBus[1])
    	{
    		if(GetPVarInt(i, "BusRouteID") != vehicleid) continue;
    		if(GetPVarInt(i, "BusRouteMoney") > GetPVarInt(i, "BusRepairMoney"))
			{
				GivePVarInt(i, "BusRouteMoney", -GetPVarInt(i, "BusRepairMoney"));
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы закончили работу. Ваша зарплата: {f0e86b}%d{FAEBD7} рублей. Она будет зачислена на ваш банковский счёт", GetPVarInt(i, "BusRouteMoney"));
 				SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
	    		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вычтено за ремонт автобуса: {f0e86b}%d{FAEBD7} рублей", GetPVarInt(i, "BusRepairMoney"));
			    SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
			}
   			else
			{
				SetPVarInt(i, "BusRouteMoney", 0);
    			SendClientMessage(i, COLOR_ANTIQUEWHITE, "Вы ничего не заработали");
			}
			p_info[i][pPayCheck] += GetPVarInt(i, "BusRouteMoney");
			MysqlUpdatePlayerInt(i, "paycheck", p_info[i][pPayCheck]);

			SetPVarInt(i, "BusRouteCheckpoint", 0);
			SetPVarInt(i, "StartBusRoute", -1);
			SetPVarInt(i, "BusRouteMoney", 0);
   			DestroyDynamic3DTextLabel(BusStats[i]);
		    DisablePlayerRaceCheckpoint(i);
		    SetPVarInt(i, "BusRouteID", -1);
		}
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}


public OnVehicleDeath(vehicleid, killerid)
{
	if(killerid != INVALID_PLAYER_ID && !IsPlayerConnected(killerid)) return 0;
	if(GetPlayerVehicleID(killerid) != vehicleid)
	{
		SetPVarInt(killerid, "car_spawn", GetPVarInt(killerid, "car_spawn") + 1);
		if(GetPVarInt(killerid, "car_spawn") >= 3) Kick(killerid);
	}
	new get_rent = GetArendCarID(vehicleid);
	if(get_rent != INVALID_VEHICLE_ID)
	{
		new playerid = ArendInfo[get_rent][aPlayerID];
		ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
		if(IsPlayerConnected(playerid) && GetPVarInt(playerid, "arendkey") == get_rent)
		{
			SendClientMessage(playerid, C_RED, "Транспорт, который вы арендовали, был уничтожен. Аренда закончилась");
			SetPVarInt(playerid, "arendkey", 0);
		}
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(!PlayerLogged[playerid]) return 0;

	if(p_info[playerid][pMuted])
	{
		SendErr(playerid, "У вас бан чата. (/time)" ) ;
		return 0;
	}

	/*if(GetPVarInt(playerid, "anti_flod") > gettime())
	{
		SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		return 0;
	}

	SetPVarInt(playerid, "anti_flod", gettime()+3); */

	if(strfind(text, "PizDoS Bot", true) == 0) return BanEx(playerid, "AntiDoS: PizDoS_Bot");
	if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid],text))
	{
		SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		return 0;
	}
	SetString(OldMessage[playerid],text);
	TextReset[playerid] = gettime()+3;
	if(emptyMessage(text)) return 0;
	if(IsIpFound(text) || CheckString(text))
	{
		PlayerGetsChatBan(playerid, text);
		return 0;
	}
	
	if(Ether[playerid] == true || EtherLive[playerid] == true)
	{
		if(IsANews(playerid))
		{
			format(STRING_GLOBAL, 128, "< RECORD FM > %s: {FFFFFF}%s", p_info[playerid][pName], text);
			LSNews(0x00D3F6AA, STRING_GLOBAL);
			return 0;
		}
		else
		{
			format(STRING_GLOBAL, 128, "< RECORD FM > %s (тел.): {FFFFFF}%s", p_info[playerid][pName], text);
			LSNews(0x00D3F6AA, STRING_GLOBAL);
			return 0;
		}
	}
	if(GetPVarInt(playerid, "CallPlayerStart") && GetPVarInt(GetPVarInt(playerid, "CallPlayerID"), "CallPlayerStart"))
	{
		SCMF(playerid, COLOR_PURPLE, "Сказал(а) по телефону: {FFFFFF}%s", text);
	    SCMF(GetPVarInt(playerid, "CallPlayerID"), 0x00D3F6AA, "Телефон - %s: {FFFFFF}%s", p_info[playerid][pName], text);
	    format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "сказал(а) по телефону: {FFFFFF}%s", text);
		SetPlayerChatBubble(playerid, STRING_GLOBAL, COLOR_PURPLE, 10.0, 10000);
		return 0;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid, "CallPlayerStart")
	&& !GetPVarInt(playerid, "GYM_Bike") && !GetPVarInt(playerid, "GYM_Thread")
	&& !GetPVarInt(playerid, "GYM_Bar") && !GetPVarInt(playerid, "GYM_Dumbbells"))
	{
	    if(!GetPVarInt(playerid, "Animation"))
		{
			if(p_info[playerid][pSetAnim] == 0)
			{
				ApplyAnimation(playerid,"PED",Talk[p_info[playerid][pSetAnim]], 8.1, 0, 1, 1, 1, 1);
			}
			else if(p_info[playerid][pSetAnim] != 0)
			{
				ApplyAnimation(playerid,"GANGS",Talk[p_info[playerid][pSetAnim]], 4.1, 1, 1, 1, 1, 1, 1);
			}
			if(strlen(text) <= 5) SetTimerEx("ClearAnimText", 1000, false, "d", playerid);
			else SetTimerEx("ClearAnimText", strlen(text)*200, false, "d", playerid);
		}
	}
	SetPlayerChatBubble(playerid, text, COLOR_PURPLE, 15.0, 10000);
	if(strlen(text) >= 100)
	{
	 	new String[500], String2[500];
	    strmid(String, text, 100, 400, 400);
	    strdel(text, 100, 400);
	    if(PlayerUseMask[playerid]) format(text, 200, "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, text);
	    else format(text, 200, "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, text);
	    ProxDetector(15.0, playerid, text, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
	    format(String2, 400, "{FFFFFF}%s", String);
	    ProxDetector(15.0, playerid, String2, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
	}
	else
	{
		new String[500];
	    if(PlayerUseMask[playerid]) format(String, sizeof(String), "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, text);
	    else format(String, sizeof(String), "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, text);
		ProxDetector(15.0, playerid, String, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
	}
	return 0;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	return 0;
}

stock IsVehicleOccupiedEx(vehicleid)
{
	foreach(new i: Player) if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == vehicleid) return 1;
	return 0;
}

stock IsVehicleOccupied(vehicleid)
{
	foreach(new i: Player) if(IsPlayerInVehicle(i, vehicleid)) return 1;
	return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	PlayAudioStreamForPlayer(playerid,"http://91.221.37.238:8000/live");
    playerVehicleEnter[playerid] = vehicleid;
	playerVehicleEnterTime[playerid] = GetTickCount();
	if(pCuff[playerid][pCuffee] == playerid)
	{
		SendClientMessage(playerid, C_RED, "Вы не можете сесть в т/с в наручниках");
		RemovePlayerFromVehicle(playerid);
		ClearAnimations(playerid);
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	StopAudioStreamForPlayer(playerid);
    new vehmod = GetVehicleModel(vehicleid);
	if (vehmod >= 400)
	{
		if(SpeedLimit[vehmod-400]==200)
		{
			GunPlayer[playerid][11][0] = 46;
			GunPlayer[playerid][11][1] = 1;
			AC_GunCheattime[playerid] = unix + 3;
		}
	}
	if(GetPVarInt(playerid,"get_patron") || GetPVarInt(playerid,"get_metall")) DropPatron(playerid);
	if(Ether[playerid] == true)
	{
    	new CB[16];
		Ether[playerid] = false;
		Convert(GetPVarInt(playerid,"InEther"));
		if(EtherSms[0] == true)
		{
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, 90, "[ОРГАНИЗАЦИЯ]: %s выключил прием СМС", GetName(playerid));
			SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, STRING_GLOBAL);
		}
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 90, "[ОРГАНИЗАЦИЯ]: %s вышел из прямого эфира [Время в эфире: %s, СМС: %i]",GetName(playerid), CB,SmsNews[0]);
		SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, STRING_GLOBAL);
		EtherSms[0] = false;
		SmsNews[0] = 0;
		DeletePVar(playerid, "InEther");
	}
	if(EtherLive[playerid] == true)
	{
		EtherLive[playerid] = false;
		DeletePVar(playerid, "Etherfrac");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы вышли из прямого эфира");
	}
	new TaxiDriver = GetPVarInt(playerid, "TaxiDriver");
	new TaxiPassanger = GetPVarInt(playerid, "TaxiPassanger");
	if(TaxiDriver != -1)
	{
  		if(GetPVarInt(TaxiDriver, "TaxiPassanger") == playerid)
		{
		    format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Пассажир покинул автомобиль. Вы заработали: {f0e86b}%d{FFFFFF} рублей", GetPVarInt(TaxiDriver, "TaxiMoney"));
		    SendInf(TaxiDriver, STRING_GLOBAL);
			SetPVarInt(TaxiDriver, "TaxiPassanger", -1);
			
			p_info[TaxiDriver][pTaxiCash] += GetPVarInt(TaxiDriver, "TaxiMoney");

			p_info[TaxiDriver][pPayCheck] += p_info[TaxiDriver][pTaxiCash];
			MysqlUpdatePlayerInt(TaxiDriver, "paycheck", p_info[TaxiDriver][pPayCheck]);
			
			SetPVarInt(TaxiDriver, "TaxiMoney", 0);
		}
	}
	if(TaxiPassanger != -1)
	{
		if(GetPVarInt(TaxiPassanger, "TaxiDriver") == playerid)
		{
			SendInf(TaxiPassanger, "Водитель покинул автомобиль, заказ завершён");
			
			SetPVarInt(TaxiPassanger, "TaxiStart", 0);
			SetPVarInt(TaxiPassanger, "TaxiDriver", -1);
			SetPVarInt(playerid, "TaxiPassanger", -1);
			SetPVarInt(playerid, "TaxiMoney", 0);

			new VehicleID = GetPlayerVehicleID(playerid);
			if(TaxiVehicleDriver[VehicleID] != -1)
			{
			    DestroyDynamic3DTextLabel(TaxiTariffText[VehicleID]);
			    TaxiVehicleDriver[VehicleID] = -1;
			}
	    }
	}
	if(p_info[playerid][pJob] == JOB_TAXI)
	{
	    p_info[playerid][pTaxiCash] += GetPVarInt(playerid, "TaxiMoney");

		p_info[playerid][pPayCheck] += p_info[playerid][pTaxiCash];
		MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

		p_info[playerid][pTaxiCash] = 0;
		p_info[playerid][pTaxiTime] = 0;
				
		taxi_td_status(playerid, false);
	}
	if(GetPlayerDrivingExamInfo(playerid, DE_POINTS) >= 9)
	{
		DisablePlayerRaceCheckpoint(playerid);

		SetVehicleToRespawn(vehicleid);
		ClearPlayerDrivingExamInfo(playerid);

		SendClientMessage(playerid, 0xFF6600FF, "Вы покинули учебный автомобиль");
		SendClientMessage(playerid, 0xFF0000FF, "Экзамен провален!");

		DeletePVar(playerid, "car_damage");
	}
	return 1;
}

forward OnPlayerEnterDynamicArea(playerid, areaid);
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	for(new idx; idx < sizeof g_area; idx ++)
	{
		if(areaid == g_area_total[idx])
		{
			SetPlayerPos(playerid, g_area[idx][g_set_area_x], g_area[idx][g_set_area_y], g_area[idx][g_set_area_z]);
			SetPlayerFacingAngle(playerid, g_area[idx][g_set_area_r]);
			SetPlayerInterior(playerid, g_area[idx][g_set_area_interior]);
			SetPlayerVirtualWorld(playerid, g_area[idx][g_set_area_virtualworld]);
			break;
		}
	}
	if ( area_type { areaid } == area_type_house )
	{
	    GetPlayerHouse(playerid);
		if ( GetPVarInt ( playerid, "tp_area_used" ) )return DeletePVar ( playerid, "tp_area_used" ) ;
		new ars_id, sec_id;
		for ( new i; i < area_count; i++ )
		{
			if ( areaid == area_info [ i ] [ a_area ] [ 0 ])
			{
				ars_id = i;
				sec_id = 1;
				break;
			}
			if ( areaid == area_info [ i ] [ a_area ] [ 1 ] && area_info [ i ] [ a_area ] [ 1 ] != 0 )
			{
				ars_id = i;
				sec_id = 0;
				break;
			}
		}
		if ( area_info [ ars_id ] [ a_house ] != GetPVarInt(playerid, "PlayerHouse") &&
			area_info [ ars_id ] [ a_house ] !=	p_info[playerid][pRentHouse] ) return SendErr ( playerid, "У Вас нет ключей от двери" ) ;
		if ( sec_id )
		{
			SetPlayerPos ( playerid, area_info [ ars_id ] [ a_to_pos ] [ 0 ], area_info [ ars_id ] [ a_to_pos ] [ 1 ], area_info [ ars_id ] [ a_to_pos ] [ 2 ] ) ;
			SetPlayerFacingAngle ( playerid, area_info [ ars_id ] [ a_to_pos ] [ 3 ] ) ;
			SetPlayerInterior ( playerid, area_info [ ars_id ] [ a_interior ] [ sec_id ] );
			SetPlayerVirtualWorld ( playerid, area_info [ ars_id ] [ a_virt_world ] [ sec_id ] ) ;

		}
		else
		{
			SetPlayerPos ( playerid, area_info [ ars_id ] [ a_pos ] [ 0 ], area_info [ ars_id ] [ a_pos ] [ 1 ], area_info [ ars_id ] [ a_pos ] [ 2 ] ) ;
			SetPlayerFacingAngle ( playerid, area_info [ ars_id ] [ a_pos ] [ 3 ] ) ;
			SetPlayerInterior ( playerid, area_info [ ars_id ] [ a_interior ] [ sec_id ] );
			SetPlayerVirtualWorld ( playerid, area_info [ ars_id ] [ a_virt_world ] [ sec_id ] ) ;
		}
		SetPVarInt ( playerid, "tp_area_used", 1 ) ;
		return 1 ;
	}
	new player_state = GetPlayerState(playerid);
	if(areaid == AreaInfo[arServerHelp] && player_state == PLAYER_STATE_ONFOOT)
	{
		ShowPlayerDialogEx(playerid, 3793, DIALOG_STYLE_MSGBOX, "{ebec86}>> Помощь по серверу", "{FFFFFF}Добро пожаловать на сервер "SERVER_NAME"\n{FFFFFF}Если Вы на сервере впервые, то прочитайте эту информацию до конца", "Далее", "Отмена");
	}
	else if(areaid == frac_areaid[p_info[playerid][pMember]] || areaid == frac_areaid[15] && IsAArmy(playerid) || areaid == frac_areaid[16] && IsAArmy(playerid) || areaid == frac_areaid[7] && IsAArmy(playerid) || areaid == frac_areaid[8] && IsAArmy(playerid))
	{
	    if(IsAMafia(playerid)) GangMenu(playerid);
	    else if(IsAArmy(playerid))
		{
		    if(konf_kd > 0) return SendErr(playerid, "Конфискация в данный момент не доступна");
			if(konf_time == 0 && p_info[playerid][pRank] >= 7)
			{
				ShowPlayerDialogEx(playerid, 11222, DIALOG_STYLE_MSGBOX, "{ebec86}>> Конфискация", "{FFFFFF}Вы готовы начать конфискацию?", "Да", "Нет");
				return 1;
			}
			else if(konf_time > 1)
			{
			    if(areaid == frac_areaid[7])
			    {
			        if(IsGangConnected(7) < 4) return SendErr(playerid, "Для конфискации должны быть онлайн хотябы 4 члена организации");
			        if(frac_metall[7] - 500 < 0 || frac_patron[7] - 500 < 0) return SendErr(playerid, "Склад пуст");
					if(frac_metall[7] - 500 > 0) frac_metall[7] -= 500;
					if(frac_patron[7] - 500 > 0) frac_patron[7] -= 500;

					if(frac_drugs[7] - 500 > 0) frac_drugs[7] -= 500;
					if(frac_money[7] - 50000 > 0)
					{
						frac_money[7] -= 50000;

						if(FracBank[9]+50000 > 1800000000)
						{
						    FracBank[9] = 1800000000;
						    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
						else
						{
						    FracBank[9] += 50000;
						    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
					}

					konf_pay += 500;

                    UpdateFractionStore(7);
					UpdateStoreGang(7);

					ClearAnimations(playerid);
					ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
					SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
					SetPVarInt(playerid, "carryammo", 300);
					return 1;
			    }
			    else if(areaid == frac_areaid[8])
			    {
			        if(IsGangConnected(8) < 4) return SendErr(playerid, "Для конфискации должны быть онлайн хотябы 4 члена организации");
			        if(frac_metall[8] - 500 < 0 || frac_patron[8] - 500 < 0) return SendErr(playerid, "Склад пуст");
					if(frac_metall[8] - 500 > 0) frac_metall[8] -= 500;
					if(frac_patron[8] - 500 > 0) frac_patron[8] -= 500;

					if(frac_drugs[8] - 500 > 0) frac_drugs[8] -= 500;
					if(frac_money[8] - 50000 > 0)
					{
						frac_money[8] -= 50000;

						if(FracBank[9]+50000 > 1800000000)
						{
						    FracBank[9] = 2000000000;
						    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
						else
						{
						    FracBank[9] += 50000;
						    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
					}

					konf_pay += 500;

                    UpdateFractionStore(8);
					UpdateStoreGang(8);

					ClearAnimations(playerid);
					ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
					SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
					SetPVarInt(playerid, "carryammo", 300);
					return 1;
			    }
			    else if(areaid == frac_areaid[15])
			    {
			        if(IsGangConnected(15) < 4) return SendErr(playerid, "Для конфискации должны быть онлайн хотябы 4 члена организации");
			        if(frac_metall[15] - 500 < 0 || frac_patron[15] - 500 < 0) return SendErr(playerid, "Склад пуст");
					if(frac_metall[15] - 500 > 0) frac_metall[15] -= 500;
					if(frac_patron[15] - 500 > 0) frac_patron[15] -= 500;
					
					if(frac_drugs[15] - 500 > 0) frac_drugs[15] -= 500;
					if(frac_money[15] - 50000 > 0)
					{
						frac_money[15] -= 50000;
						
						if(FracBank[9]+50000 > 1800000000)
						{
						    FracBank[9] = 2000000000;
						    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
						else
						{
						    FracBank[9] += 50000;
						    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
					}
					
					konf_pay += 500;

                    UpdateFractionStore(15);
					UpdateStoreGang(15);
					
					ClearAnimations(playerid);
					ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
					SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
					SetPVarInt(playerid, "carryammo", 300);
					return 1;
			    }
				else if(areaid == frac_areaid[16])
			    {
			        if(IsGangConnected(16) < 4) return SendErr(playerid, "Для конфискации должны быть онлайн хотябы 4 члена организации");
			        if(frac_metall[16] - 500 < 0 || frac_patron[16] - 500 < 0) return SendErr(playerid, "Склад пуст");
					if(frac_metall[16] - 500 > 0) frac_metall[16] -= 500;
					if(frac_patron[16] - 500 > 0) frac_patron[16] -= 500;
					
					if(frac_drugs[16] - 500 > 0) frac_drugs[16] -= 500;
					if(frac_money[16] - 50000 > 0)
					{
						frac_money[16] -= 50000;

						if(FracBank[9]+50000 > 1800000000)
						{
						    FracBank[9] = 2000000000;
						    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
						else
						{
						    FracBank[9] += 50000;
						    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
					}
					
					konf_pay += 500;

                    UpdateFractionStore(16);
					UpdateStoreGang(16);
					
					ClearAnimations(playerid);
					ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
					SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
					SetPVarInt(playerid, "carryammo", 300);
					return 1;
			    }
			}
		}
	}
	else if(areaid == frac_place_put_areaid[p_info[playerid][pMember]] && GetPVarInt(playerid,"carryammo") || areaid == frac_place_put_areaid[p_info[playerid][pMember]] && GetPVarInt(playerid,"carrydrugs"))
	{
	    if(IsAMafia(playerid))
	    {
	        if(GetPVarInt(playerid,"carryammo"))
	        {
				SetPVarInt(playerid,"carryammo", 0);

				RemovePlayerAttachedObject(playerid,3);
				ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
				if(frac_metall[p_info[playerid][pMember]] + 500 > 30000 || frac_patron[p_info[playerid][pMember]] + 500 > 25000) return SendErr(playerid, "Ваш склад полон");
				if(frac_metall[p_info[playerid][pMember]] + 500 < 30000) frac_metall[p_info[playerid][pMember]] += 500;
				if(frac_patron[p_info[playerid][pMember]] + 500 < 25000) frac_patron[p_info[playerid][pMember]] += 500;

				UpdateStoreGang(p_info[playerid][pMember]);
				UpdateFractionStore(p_info[playerid][pMember]);
			}
			if(GetPVarInt(playerid,"carrydrugs"))
	        {
				SetPVarInt(playerid,"carrydrugs", 0);

				RemovePlayerAttachedObject(playerid,3);
				ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
				if(frac_drugs[p_info[playerid][pMember]] + 500 > 20000) return SendErr(playerid, "Ваш склад полон");
				if(frac_drugs[p_info[playerid][pMember]] + 500 < 20000) frac_drugs[p_info[playerid][pMember]] += 500;

				UpdateStoreGang(p_info[playerid][pMember]);
				UpdateFractionStore(p_info[playerid][pMember]);
			}
		}
	}
	else if(areaid == AreaInfo[arAdminsZoneHP] && player_state == PLAYER_STATE_ONFOOT)
	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health < 100) SetHealth(playerid, 100.0);
		GameTextForPlayer(playerid, "~b~~h~You regain ~n~~b~~h~health", 3000, 6);
	}
	else if(areaid == AreaInfo[arHotdogHP] && player_state == PLAYER_STATE_ONFOOT)
	{
		if(p_info[playerid][pHunger] >= 100) return SendClientMessage(playerid, C_RED, "Вы не голодны!");
		else if(GetPVarInt(playerid, "floodeat") > gettime()) return SendClientMessage(playerid, C_RED, "Бесплатная еда доступна раз в 3 минуты");
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
		if(p_info[playerid][pHunger] <= 75) GiveHunger(playerid, 25);
		else SetHunger(playerid, 100);
		if(p_info[playerid][pSex] == 1) MeAction(playerid, "съел хот-дог");
		else MeAction(playerid, "съела хот-дог");
		GameTextForPlayer(playerid, "~g~have you ~n~eaten", 3000, 1);
		SetPVarInt(playerid, "floodeat", gettime()+180);
	}
	else if(areaid >= AreaInfo[arGettingPassport][0] && areaid <= AreaInfo[arGettingPassport][3] && player_state == PLAYER_STATE_ONFOOT)
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
		1. Оформить паспорт [{f0e86b}%i{FFFFFF} рублей]", WorkSalary[6]*500);
		ShowPlayerDialogEx(playerid, D_PASS, 2, "{ebec86}>> Мэрия", STRING_GLOBAL, "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arGettingPassport][4] && player_state == PLAYER_STATE_ONFOOT)
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
		1. Оформить мед. карту\n\
		2. Лечение");
		ShowPlayerDialogEx(playerid, D_PASS+1, 2, "{ebec86}>> Больница", STRING_GLOBAL, "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arPoliciaA] && player_state == PLAYER_STATE_ONFOOT)
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
			1. Оплата штрафа [{f0e86b}%i{FFFFFF} рублей]\n\
			2. Купить лицензию на оружия [{f0e86b}%i{FFFFFF} рублей]\n\
			3. Получить номера на транспорт [{f0e86b}5000{FFFFFF} рублей]\
		", PhoneNumbers[playerid][7], WorkSalary[30]);
		ShowPlayerDialogEx(playerid, D_POLMENU, 2, "{ebec86}>> Выберите пункт", STRING_GLOBAL, "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arPoliciaB] && player_state == PLAYER_STATE_ONFOOT)
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
			1. Оплата штрафа [{f0e86b}%i{FFFFFF} рублей]\n\
			2. Купить лицензию на оружия [{f0e86b}%i{FFFFFF} рублей]\n\
			3. Получить номера на транспорт [{f0e86b}5000{FFFFFF} рублей]\n\
		", PhoneNumbers[playerid][7], WorkSalary[30]);
		ShowPlayerDialogEx(playerid, D_POLMENU+1, 2, "{ebec86}>> Выберите пункт", STRING_GLOBAL, "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arPoliciaB1] && player_state == PLAYER_STATE_ONFOOT)
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
			1. Оплата штрафа [{f0e86b}%i{FFFFFF} рублей]\n\
			2. Купить лицензию на оружия [{f0e86b}%i{FFFFFF} рублей]\n\
			3. Получить номера на транспорт [{f0e86b}5000{FFFFFF} рублей]\n\
		", PhoneNumbers[playerid][7], WorkSalary[30]);
		ShowPlayerDialogEx(playerid, D_POLMENU+1, 2, "{ebec86}>> Выберите пункт", STRING_GLOBAL, "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arClothes] && player_state == PLAYER_STATE_ONFOOT)
	{
        ShowPlayerDialogEx(playerid, 1132, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "- Обычная одежда\n- Рабочая одежда", "Выбрать", "Выйти");
	}
	else if(areaid == AreaInfo[arClothes1] && player_state == PLAYER_STATE_ONFOOT)
	{
        ShowPlayerDialogEx(playerid, 1132, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "- Обычная одежда\n- Рабочая одежда", "Выбрать", "Выйти");
	}
	else if(areaid == AreaInfo[arClothes2] && player_state == PLAYER_STATE_ONFOOT)
	{
        ShowPlayerDialogEx(playerid, 1132, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "- Обычная одежда\n- Рабочая одежда", "Выбрать", "Выйти");
	}
	else if(areaid == AreaInfo[arClothes3] && player_state == PLAYER_STATE_ONFOOT)
	{
        ShowPlayerDialogEx(playerid, 1132, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "- Обычная одежда\n- Рабочая одежда", "Выбрать", "Выйти");
	}
	else if(areaid == AreaInfo[arBank] && player_state == PLAYER_STATE_ONFOOT)
	{
	    ShowPlayerBankDialog(playerid);
	}
	else if(areaid == AreaInfo[arBank1] && player_state == PLAYER_STATE_ONFOOT)
	{
	    ShowPlayerBankDialog(playerid);
	}
	else if(areaid == AreaInfo[arRieltor] && player_state == PLAYER_STATE_ONFOOT)
	{
	    drieltorka[playerid] = 1;
    	ShowPlayerDialogEx(playerid, dRieltorka, 2, "{ebec86}>> Агенство недвижемости", "- Выберите тип недвижимости\n1. Дома\n2. Бизнесы", "Выбор", "Отмена");
	}
	else if(areaid == AreaInfo[arRobbery] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(IsACop(playerid)) return SendErr(playerid, "Проваливай от сюда, пока тебя не увидели");
	    if(p_info[playerid][pRobbery] != 0) return SendErr(playerid, "Грабить банк можно раз в сутки");
	    new string[128];
	    new Float:pos[3];
	    GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	    if(robbery_players[playerid] != -1)
	    {
		    if(robbery_money[0] > 0)
		    {
		        new bank_massiv = robbery_bank[0], money_massiv = robbery_money[0] ;
		        foreach(new i : Player)
				{
	     			if(robbery_players[i] == bank_massiv)
	     			{
						GiveMoney(i, floatround(money_massiv/4), "Ограбление");
						format(string, sizeof(string), "~b~~g~+%d~w~ рублей", floatround(robbery_money[0]/4));
						GameTextForPlayer(i, string, 1500, 6);

						robbery_role[i] = 0;
						robbery_players[i] = -1;
						
						Hunger(i);

						p_info[i][pRobbery] = 24;
						MysqlUpdatePlayerInt(i, "robbery", p_info[i][pRobbery]);
					}
				}
				ReloadRobbery();
		    }
		    return 1;
		}
		if(robbery == 1) return SendErr(playerid, "Ограбление уже создаётся");
		if(robbery_bank[0] == 0) return SendErr(playerid, "В данный момент все банки заняты");
		robbery = 1;
		ShowPlayerDialogEx(playerid, dRobbery, DIALOG_STYLE_LIST, "{ebec86}>> Распределение ролей","1. Координатор\n2. Техник\n3. Оружейник\n4. Водитель\n5. Далее", "Далее", "Отмена");
	}
	else if(areaid == AreaInfo[arRobbery1] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(IsACop(playerid)) return SendErr(playerid, "Проваливай от сюда, пока тебя не увидели");
	    if(p_info[playerid][pRobbery] != 0) return SendErr(playerid, "Грабить банк можно раз в сутки");
	    new string[128];
	    new Float:pos[3];
	    GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	    if(robbery_players[playerid] != -1)
	    {
		    if(robbery_money[0] > 0)
		    {
		        new bank_massiv = robbery_bank[0], money_massiv = robbery_money[0] ;
		        foreach(new i : Player)
				{
	     			if(robbery_players[i] == bank_massiv)
	     			{
						GiveMoney(i, floatround(money_massiv/4), "Ограбление");
						format(string, sizeof(string), "~b~~g~+%d~w~ рублей", floatround(robbery_money[0]/4));
						GameTextForPlayer(i, string, 1500, 6);

						robbery_role[i] = 0;
						robbery_players[i] = -1;
						
						Hunger(i);

						p_info[i][pRobbery] = 24;
						MysqlUpdatePlayerInt(i, "robbery", p_info[i][pRobbery]);
					}
				}
				ReloadRobbery();
		    }
		    return 1;
		}
		if(robbery == 1) return SendErr(playerid, "Ограбление уже создаётся");
		if(robbery_bank[0] == 0) return SendErr(playerid, "В данный момент все банки заняты");
		robbery = 1;
		ShowPlayerDialogEx(playerid, dRobbery, DIALOG_STYLE_LIST, "{ebec86}>> Распределение ролей","1. Координатор\n2. Техник\n3. Оружейник\n4. Водитель\n5. Далее", "Далее", "Отмена");
	}
	else if(areaid == AreaInfo[arMapRobbery] && player_state == PLAYER_STATE_ONFOOT)
	{
	    if(robbery_role[playerid] == 1)
		{
		    robbery_map[robbery_players[playerid]] = 1;
		    SendInf(playerid, "Вы достали карту, теперь можно ехать грабить банк");
		}
	}
	else if(areaid == AreaInfo[arArhTest] && player_state == PLAYER_STATE_ONFOOT)
	{
		if(GetPVarInt(playerid, "DrivingTest")) return ShowPlayerDialogEx(playerid, D_NULL, 0, " ", "\
		{ffffff}Вы уже сдаете экзамен на управление наземным транспортом!", "Закрыть", "");

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
			{ffffff}1. Управление наземным транспортом [{f0e86b}%i{FFFFFF} рублей]\n\
			2. Управление воздушным транспортом [{f0e86b}%i{FFFFFF} рублей]\n\
			3. Управление водным транспортом [{f0e86b}%i{FFFFFF} рублей]\n\
            4. Лицензия на бизнес [{f0e86b}%i{FFFFFF} рублей]\n\
			5. Теоритическая часть", WorkSalary[26], WorkSalary[27], WorkSalary[28], WorkSalary[29]);
		ShowPlayerDialogEx(playerid, D_JOB+42, 2, "{ebec86}>> Автошкола г. Батырево", STRING_GLOBAL, "Принять", "Отмена");
	}
	else if(areaid == AreaInfo[arBuyCopter])
	{
		SetPlayerPos(playerid, 2357.7861,-1845.6462,33.1497);
		// 2339.5859, -1780.8318, 33.2012 -139.0800
		SetPlayerCameraPos(playerid, 2360.9397, -1781.4974, 38.2566);
		SetPlayerCameraLookAt(playerid, 2359.9360, -1781.4890, 38.0713);
		SendInf(playerid, "Чтобы выйти из меню выбора автомобиля нажмите 'ESC'");
		InShop[playerid] = 2;
		pPressed[playerid] = 0;
		p_info[playerid][SalonCarID] = CreateVehicle(copter_cars[0][copID],2339.5859, -1780.8318, 33.201,-139.0800, 0, 0, 10000);
		
		new info2[50],info3[50];
		format(info2,sizeof(info2),"ЦЕНА: %d РУБЛЕЙ", copter_cars[0][copCost]*WorkSalary[7]);
		format(info3,sizeof(info3),"НАЗВАНИЕ: %s",VehicleNames[copter_cars[0][copID]-400]);

		PlayerTextDrawSetString(playerid, AutoSalon_Stats[playerid][0], info2);
 		PlayerTextDrawSetString(playerid, AutoSalon_Stats[playerid][1], info3);
  		for(new i; i < 2; i++) PlayerTextDrawShow(playerid, AutoSalon_Stats[playerid][i]);

		SelectTextDraw(playerid, 0x009900FF);
		
		ShowAutoSalonMenu(playerid);

		TogglePlayerControllable(playerid, 0);
		PlayerLastTick[playerid] = GetTickCount();
		SetPlayerVirtualWorld(playerid, playerid);
		SetVehicleVirtualWorld(p_info[playerid][SalonCarID],playerid);
		PutPlayerInVehicle(playerid,p_info[playerid][SalonCarID],0);
	}
	else if(areaid == AreaInfo[arArmyAmmo] && player_state == PLAYER_STATE_ONFOOT)
	{
		if(IsAArmy(playerid))
		{
			new ammo = GetPVarInt(playerid,"carryammo");
			if(ammo)
			{
				SetPVarInt(playerid,"carryammo",3);
				ApplyAnimation(playerid,"CARRY","putdwn",1.0,0,1,1,0,0,1);
				gArmyWarehouse[0] += 500;
				gArmyWarehouse[1] += 500;
				new string[128];
				format(string,sizeof(string),"{FFFFFF}Патронов: {f0e86b}%d\n{FFFFFF}Металла: {f0e86b}%d", gArmyWarehouse[1], gArmyWarehouse[0]);
				UpdateDynamic3DTextLabelText(gArmyWarehouseText,0xFFFFFFFF,string);
				
				p_info[playerid][pPayCheck] += WorkSalary[22];
		    	MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

				SendInf(playerid, "Вам была выписана премия за доставку боеприпасов");
			}
		}
	}
	else if(IsAArmy(playerid) || IsAMafia(playerid))
	{
		foreach(new vehicleid:VehicleGun)
		{
			if(areaid == gVehicleGun[vehicleid][vGunArea])
			{
				new string[160];
				if(gVehicleGun[vehicleid][vGunLoading] == true && GetPVarInt(playerid, "carryammo") || gVehicleGun[vehicleid][vGunLoading] == true && GetPVarInt(playerid, "carrydrugs"))
				{
					if(IsAMafia(playerid))
					{
						if(GetPVarInt(playerid, "carryammo"))
						{
						    RemovePlayerAttachedObject(playerid, 3);
							ApplyAnimation(playerid, "CARRY", "putdwn", 1.0, 0, 1, 1, 0, 0, 1);
							if(gVehicleGun[vehicleid][vGunAmmo] + 1 > 20) return SendClientMessage(playerid, C_RED, "В транспорте недостаточно места");
							if(GetPVarInt(playerid, "carryammo")) gVehicleGun[vehicleid][vGunAmmo] += 1;
							format(string, sizeof(string), "{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков\n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} пакетов",gVehicleGun[vehicleid][vGunAmmo],gVehicleGun[vehicleid][vGunNarko]);
							UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText], 0xFFFFFFFF, string);
							SetPVarInt(playerid, "carryammo", 0);
						}
						if(GetPVarInt(playerid, "carrydrugs"))
						{
						    RemovePlayerAttachedObject(playerid, 3);
							ApplyAnimation(playerid, "CARRY", "putdwn", 1.0, 0, 1, 1, 0, 0, 1);
							if(gVehicleGun[vehicleid][vGunNarko] + 1 > 20) return SendClientMessage(playerid, C_RED, "В транспорте недостаточно места");
							if(GetPVarInt(playerid, "carrydrugs")) gVehicleGun[vehicleid][vGunNarko] += 1;
							format(string, sizeof(string), "{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков\n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} пакетов",gVehicleGun[vehicleid][vGunAmmo],gVehicleGun[vehicleid][vGunNarko]);
							UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText], 0xFFFFFFFF, string);
							SetPVarInt(playerid, "carrydrugs", 0);
						}
					}
					else
					{
					    RemovePlayerAttachedObject(playerid, 3);
						ApplyAnimation(playerid, "CARRY", "putdwn", 1.0, 0, 1, 1, 0, 0, 1);
						if(gVehicleGun[vehicleid][vGunAmmo] + 1 > 20) return SendClientMessage(playerid, C_RED, "В транспорте недостаточно места");
						if(GetPVarInt(playerid, "carryammo")) gVehicleGun[vehicleid][vGunAmmo] += 1;
						format(string, sizeof(string), "{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков",gVehicleGun[vehicleid][vGunAmmo]);
						UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText], 0xFFFFFFFF, string);
						SetPVarInt(playerid, "carryammo", 0);
					}
				}
				else if(gVehicleGun[vehicleid][vGunUnloading] == true && !GetPVarInt(playerid, "carryammo") || gVehicleGun[vehicleid][vGunUnloading] == true && !GetPVarInt(playerid, "carrydrugs"))
				{
				    if(IsAMafia(playerid))
				    {
				        if(!GetPVarInt(playerid, "carryammo"))
				        {
							if(gVehicleGun[vehicleid][vGunAmmo] < 1) return SendClientMessage(playerid, C_RED, "В транспорте недостаточно боеприпасов");
							if(gVehicleGun[vehicleid][vGunAmmo] >= 1)
							{
								gVehicleGun[vehicleid][vGunAmmo] -= 1;
								SetPVarInt(playerid, "carryammo", 300);
							}
							format(string, sizeof(string), "{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков\n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} пакетов",gVehicleGun[vehicleid][vGunAmmo],gVehicleGun[vehicleid][vGunNarko]);
							UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText], 0xFFFFFFFF, string);
							ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
							SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
						}
						if(!GetPVarInt(playerid, "carrydrugs"))
				        {
							if(gVehicleGun[vehicleid][vGunNarko] < 1) return SendClientMessage(playerid, C_RED, "В транспорте недостаточно боеприпасов");
							if(gVehicleGun[vehicleid][vGunNarko] >= 1)
							{
								gVehicleGun[vehicleid][vGunNarko] -= 1;
								SetPVarInt(playerid, "carrydrugs", 300);
							}
							format(string, sizeof(string), "{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков\n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} пакетов",gVehicleGun[vehicleid][vGunAmmo],gVehicleGun[vehicleid][vGunNarko]);
							UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText], 0xFFFFFFFF, string);
							ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
							SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
						}
					}
					else
					{
					    if(gVehicleGun[vehicleid][vGunAmmo] < 1) return SendClientMessage(playerid, C_RED, "В транспорте недостаточно боеприпасов");
						if(gVehicleGun[vehicleid][vGunAmmo] >= 1)
						{
							gVehicleGun[vehicleid][vGunAmmo] -= 1;
							SetPVarInt(playerid, "carryammo", 300);
						}
						format(string, sizeof(string), "{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков",gVehicleGun[vehicleid][vGunAmmo]);
						UpdateDynamic3DTextLabelText(gVehicleGun[vehicleid][vGunText], 0xFFFFFFFF, string);
						ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
						SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
					}
				}
				return 1;
			}
		}
	}
	else if(areaid == factory_put_zone)
	{
		if(GetPlayerTempJob(playerid) == TEMP_JOB_FACTORY)
		{
			if(GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_FACTORY_PUT_PROD)
			{
				new objectid;
				new items = GetPlayerJobLoadItems(playerid);
				new Float: x, Float: y, Float: z, Float: angle;

				SetPlayerTempJobCheckAnim(playerid, false);

				ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.0, 0, 0, 0, 0, 0, 0);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

				TogglePlayerFactoryCP(playerid, true);
				SetPlayerJobLoadItems(playerid, items + 1);

				AddPlayerData(playerid, P_JOB_WAGE, +, random(20)+40);
				SendInf(playerid, "Продукт доставлен на склад");

				RemovePlayerAttachedObject(playerid, A_OBJECT_SLOT_FOREARM);
				SetPlayerTempJobState(playerid, TEMP_JOB_STATE_FACTORY_TAKE_MET);

				GetPlayerPos(playerid, x, y, z);
				GetPlayerFacingAngle(playerid, angle);

				objectid = CreateDynamicObject(1279, x, -200.81883, 1006.51978, 0.9, 0.0, angle);
				MoveDynamicObject(objectid, 263.8, -200.81880, 1006.51978, 2.0, 0.9, 0.0, angle);

				Streamer_SetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, OBJECT_TYPE_FACTORY);
			}
		}
	}
	for(new r = 0; r <= TOTALRADAR; r++)
	{
		if(!IsPlayerConnected(playerid)) return 1;
		if(areaid == RI[r][r_area])
		{
			if(radar_time[playerid] > gettime()) return 1;
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!IsAMoped(vehicleid) && !IsAVel(vehicleid) && !IsAPlane(vehicleid) && GetPlayerState(playerid) == 2)
			{
				if(SpeedVehicle(playerid)/2 > RI[r][r_speed])
				{
					if(!IsACop(playerid))
					{
						radar_time[playerid] = gettime() + 10;
						SendClientMessage(playerid, C_RED, "[РАДАР]: Вас сфотографировал радар ГИБДД. Причина: превышение скорости");
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[РАДАР]: Максимально-допустимая скорость на данном участке: %d км/ч, зафиксированная Вами: %d км/ч.", RI[r][r_speed], SpeedVehicle(playerid)/2);
						SendClientMessage(playerid, C_RED, STRING_GLOBAL);

						PhoneNumbers[playerid][6] += 1;
						MysqlUpdatePlayerInt(playerid, "phnumber7", PhoneNumbers[playerid][6]);
						PhoneNumbers[playerid][7] += WorkSalary[33] * (SpeedVehicle(playerid)/2 - RI[r][r_speed]);
						MysqlUpdatePlayerInt(playerid, "phnumber8", PhoneNumbers[playerid][7]);
						
						FracBank[9] += WorkSalary[33] * (SpeedVehicle(playerid)/2 - RI[r][r_speed]);
						MysqlUpdateOtherInt("sfnbank", FracBank[9]);

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[РАДАР]: Сумма штрафа составила: %d рублей. Штраф оплатите в отделе полиции, у вас %d штраф(ов)", WorkSalary[33] * (SpeedVehicle(playerid)/2 - RI[r][r_speed]), PhoneNumbers[playerid][6]);
						SendClientMessage(playerid, C_RED, STRING_GLOBAL);
					}
				}
			}
		}
	}
	for(new i = TOTALBIZZ; i > 0; i --)
	{
		if(areaid == BizzInfo[i][bMenu] && player_state == PLAYER_STATE_ONFOOT)
		{
			switch(BizzInfo[i][bType])
			{
				case 1: MagazineList(playerid, i);
				case 3: EatList(playerid, i);
				case 4,5,9: BarList(playerid, i);
				case 6: GunShopList(playerid, i);
				case 8: SkinShopList(playerid);
			}
		}
	}
	for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	{
	    if(PlayerLogged[playerid] == true)
	    {
			if(areaid == AreaInfo[arGreenZone][i])
			{
				TextDrawShowForPlayer(playerid, zz_td[0]);
				TextDrawShowForPlayer(playerid, zz_td[1]);
				TextDrawShowForPlayer(playerid, zz_td[2]);
				if(i < 1 || i > 9 && i < 13 || i > 13)
				{
					TextDrawShowForPlayer(playerid, np_td[0]);
					TextDrawShowForPlayer(playerid, np_td[1]);
					TextDrawShowForPlayer(playerid, np_td[2]);
				}
			}
		}
	}
	for(new r = 0; r <= TOTALRADAR; r++)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			if(areaid == RI[r][r_area])
			{
			    new rad_text[10];
			    PlayerTextDrawShow(playerid, radar_speed[playerid]);
				TextDrawShowForPlayer(playerid, show_speed[1]); TextDrawShowForPlayer(playerid, show_speed[2]);
				format(rad_text, sizeof rad_text, "%d", RI[r][r_speed]);
				PlayerTextDrawSetString(playerid, radar_speed[playerid], rad_text);
			}
		}
	}
	new state_ship = GetPlayerState(playerid);
	new state_vehicle = GetPlayerVehicleID(playerid);
	foreach(new x: shipPlayer)
	{
		if(areaid == GetPVarInt(x,"Ships") && state_ship == PLAYER_STATE_DRIVER)
		{
			new panels, tires, doors1, lights1;
			GetVehicleDamageStatus(state_vehicle, panels, doors1, lights1, tires);
			UpdateVehicleDamageStatus(state_vehicle, panels, doors1, lights1, 15);
			GameTextForPlayer(playerid, "~r~stalling", 5000, 6);
			break;
		}
	}
	new get_station[128];
	foreach(new i:boxPlayer)
	{
		if(areaid == GetPVarInt(i, "BBArea"))
		{
			GetPVarString(i, "BBStation", get_station, 128);
			if(!isnull(get_station))
			{
				PlayStream(playerid, get_station, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"), 30.0, 1);
				SendClientMessage(playerid, -1, "Вы попали в игровую зону магнитофона");
			}
			return 1;
		}
	}
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    for(new r = 0; r <= TOTALRADAR; r++)
	{
		if(areaid == RI[r][r_area])
		{
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    {
		    	PlayerTextDrawHide(playerid, radar_speed[playerid]);
		    	TextDrawHideForPlayer(playerid, show_speed[1]); TextDrawHideForPlayer(playerid, show_speed[2]);
			}
		}
	}
	for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	{
		if(areaid == AreaInfo[arGreenZone][i])
		{
			TextDrawHideForPlayer(playerid, zz_td[0]);
			TextDrawHideForPlayer(playerid, zz_td[1]);
			TextDrawHideForPlayer(playerid, zz_td[2]);
			if(i < 1 || i > 9 && i < 13 || i > 13)
			{
				TextDrawHideForPlayer(playerid, np_td[0]);
				TextDrawHideForPlayer(playerid, np_td[1]);
				TextDrawHideForPlayer(playerid, np_td[2]);
			}
		}
	}
	if(GetPVarType(playerid, "PlacedBB"))
	{
		DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
		DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
		if(GetPVarType(playerid, "BBArea"))
		{
			Itter_RemoveInternal(_:_Y_ITER_C0:boxPlayer@YSII_Cg,_:_Y_ITER_C0:boxPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(boxPlayer));
			foreach(new i: Player)
			{
				if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
				{
				    DeletePVar(playerid, "BBArea");
					StopAudioStreamForPlayer(i);
					SendInf(i, "Игрок отошёл слишком далеко, магнитофон выключен");
				}
			}
		}
	}
	foreach(new i:boxPlayer)
	{
		if(areaid == GetPVarInt(i, "BBArea"))
		{
			StopStream(playerid);
			SendInf(playerid, "Вы покинули зону магнитофона");
			break;
		}
	}
	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
    new slot = GetGunSlot(weaponid);
	if(AC_GunCheattime[playerid] <= unix && slot != -1)
	{
		if(GunPlayer[playerid][slot][0] != weaponid)
		{
 			OnGuardWarningCheater(playerid, "Gun Cheat", 85);
	    	return 1;
		}
	}
	if(!IsACop(playerid) || !IsAArmy(playerid) || !p_info[playerid][pAdmin])
	{
		for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
		{
			if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
			{
				ApplyAnimation(playerid, "PED","handscower", 4.1, 1, 0, 0, 0, 1000);
				SetPlayerArmedWeapon(playerid, 0);
				FreezePlayer(playerid, 3000);
				return 1;
			}
		}
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new newcar;
	if(newcar >= Inkasator[0] && newcar <= Inkasator[4]) // Инкассаторы   
	{   
		if(p_info[playerid][pJob] != JOB_INKASATOR) // Ваш ID работы   
		{   
		 SendClientMessage(playerid,COLOR_RED," У Вас нет ключей от этого транспорта и Вы не Инкассатор !");  
		 RemovePlayerFromVehicle(playerid);   
		}   
	}
	if(newstate == 2) PTick[playerid] = GetTickCount() + 250;
	if(oldstate == 2)
	{
		if(GetTickCount() - PTick[playerid] < 250 && InShop[playerid] == 0 && anticheat == 1)
		{
			OnGuardWarningCheater(playerid, "Bike Crash", 83);
			return 1;
		}
	}
	playerCheckFly[playerid] = SleepTime(playerid);
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
    {
        new id_vehicle = GetPlayerVehicleID(playerid);
		if(id_vehicle != playerVehicleEnter[playerid]) OnGuardWarningCheater(playerid, "Car Hack (1)", 85);
	    if(GetTickDiffAC(GetTickCount(), playerVehicleEnterTime[playerid]) < 300 && !IsWaterTransportAC(id_vehicle) && InShop[playerid] == 0) OnGuardWarningCheater(playerid, "Car Hack (2)", 85);
	}
	if(newstate == oldstate || (newstate == PLAYER_STATE_DRIVER && oldstate == PLAYER_STATE_PASSENGER) || (newstate == PLAYER_STATE_PASSENGER && oldstate == PLAYER_STATE_DRIVER)) OnGuardWarningCheater(playerid, "State Crash", 85);
	if(newstate == PLAYER_STATE_DRIVER)
	{
		new model = GetPlayerVehicleSeat(playerid);
		if(model != 128)
		{
			if(!model)
			{
				model = GetVehicleModel(GetPlayerVehicleID(playerid));
				if(!(400 <= model <= 611) || Maximum_Passengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) return SetPVarInt(playerid,"USE_CRASHER",1), SetTimerEx("DisconnectPlayer",500,0,"i", playerid);
			}
			else return SetPVarInt(playerid,"USE_CRASHER",1), SetTimerEx("DisconnectPlayer",500,0,"i", playerid);
		}
	}
	else if(newstate == PLAYER_STATE_PASSENGER)
	{
		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(400 <= model <= 611)
		{
			model -= 400;
			new seat = GetPlayerVehicleSeat(playerid);
			if(seat != 128)
			{
				model = (Maximum_Passengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
				if(!model || model == 15) return SetPVarInt(playerid,"USE_CRASHER",1), SetTimerEx("DisconnectPlayer",500,0,"i", playerid);
			}
			else return SetPVarInt(playerid,"USE_CRASHER",1), SetTimerEx("DisconnectPlayer",500,0,"i", playerid);
		}
	}
	if(newstate==oldstate)
	{
		OnGuardWarningCheater(playerid, "State change", 85);
		return 1;
	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
		switch(GetPlayerWeapon(playerid))
		{
			case 24,31,26,28,29,30,33: SetPlayerArmedWeapon(playerid, 0);
		}
	}
	switch(newstate)
	{
	case 1: //Игрок пешком (можно писать PLAYER_STATE_ONFOOT)
		{
		    new oldvehid = gLastCar[playerid];
			Iter_Remove(vehiclePassengers[oldvehid], playerid);
			new engine1, light1, alarm1, doors1, bonnet1, boot1, objective1;
			GetVehicleParamsEx(oldvehid, engine1, light1, alarm1, doors1, bonnet1, boot1, objective1);
			if(objective1 > 0)
			{
				new count;
				foreach(new i: vehiclePassengers[oldvehid])
				{
					if(Bl_Info[i][Bl_Finder] != INVALID_PLAYER_ID)
					{
						count ++;
					}
				}
				if(!count)
				{
					SetVehicleParamsEx(oldvehid, engine1, light1, alarm1, doors1, bonnet1, boot1, false);
				}
			}
			if(Bl_Info[playerid][Bl_Finder] != INVALID_PLAYER_ID)
			{
				GetPlayerPos(playerid, posx1, posy1, posz1);
				Bl_Info[Bl_Info[playerid][Bl_Finder]][Bl_Marker] = CreateDynamicCP(posx1, posy1, posz1, 1.6, -1, -1, Bl_Info[playerid][Bl_Finder], 200.0);
				foreach(new i: inStreamPlayers[playerid])
				{
					if(Bl_Info[i][Bl_Observe] == playerid)
					{
						Bl_Info[i][Bl_Marker] = CreateDynamicCP(posx1, posy1, posz1, 1.6, -1, -1, i, 200.0);
					}
				}
			}
			
			if(p_info[playerid][data_CT_VEH] != INVALID_VEHICLE_ID)
	        {
	            DisablePlayerRaceCheckpoint(playerid);
		        DestroyVehicle(p_info[playerid][data_CT_VEH]);
				p_info[playerid][data_CT_VEH] = INVALID_VEHICLE_ID;
				p_info[playerid][data_CT_NUMBER] = 0;
				SetPlayerPos(playerid, -1503.6699,1609.8861,36.5690);
			}
			
			PlayerTextDrawHide(playerid, radar_speed[playerid]);
			TextDrawHideForPlayer(playerid, show_speed[1]); TextDrawHideForPlayer(playerid, show_speed[2]);
			
			KillTimer(STimer[playerid]);
			if(!InShop[playerid])
			{
				HideSpeedometerCoptrer(playerid);
				speedometr_status(playerid, false);
			}
			if(GetPlayerTempJob(playerid) == TEMP_JOB_FACTORY_TRUCKER)
			{
				if(GetPVarInt(playerid, "JobInFactory"))
				{
					StartEndJobTimer(playerid);
					SendClientMessage(playerid, C_RED, "У Вас есть 15 секунд чтобы вернуться в транспорт");
				}
			}
		}
	case 2: //Игрок в машине, на месте водителя (можно писать PLAYER_STATE_DRIVER)
		{
			new cars = 0;
			new vehicleid = GetPlayerVehicleID(playerid);
			new model = GetVehicleModel(vehicleid);
			
			gLastCar[playerid] = vehicleid;
			Iter_Add(vehiclePassengers[vehicleid], playerid);
			if(Bl_Info[playerid][Bl_Finder] != INVALID_PLAYER_ID)
			{
				DestroyDynamicCP(Bl_Info[Bl_Info[playerid][Bl_Finder]][Bl_Marker]);
				foreach(new i: inStreamPlayers[playerid])
				{
					if(Bl_Info[i][Bl_Observe] == playerid)
					{
						DestroyDynamicCP(Bl_Info[i][Bl_Marker]);
					}
				}
				new engine1, light1, alarm1, doors1, bonnet1, boot1, objective1;
				GetVehicleParamsEx(vehicleid, engine1, light1, alarm1, doors1, bonnet1, boot1, objective1);
				if(objective1 < 1)
				{
					SetVehicleParamsEx(vehicleid, engine1, light1, alarm1, doors1, bonnet1, boot1, true);
				}
			}
			
			if(InShop[playerid] < 1 || GetPVarInt(playerid, "InShop") == 0)
			{
				new temp = GetVehicleModel(GetPlayerVehicleID(playerid));
				BE_Play_Check[playerid] = true;
				for(new i; i != sizeof(BE_Bad_Vehs); i++)
				{
					if(temp == BE_Bad_Vehs[i]) cars++, BE_Play_Check[playerid] = false;
				}
				if(IsABoat(vehicleid))
				{
					if(p_info[playerid][pLic][1] != 1)
					{
						SendErr(playerid, "У вас нет лицензии на водный транспорт");
						RemovePlayerFromVehicle(playerid);
						return 1;
					}
				}
				if(IsAPlane(vehicleid))
				{
					if(p_info[playerid][pLic][2] != 1)
					{
						SendErr(playerid, "У вас нет лицензии на воздушный транспорт");
						RemovePlayerFromVehicle(playerid);
						return 1;

					}
					if(Engine[vehicleid] == false) SendErr(playerid, "Чтобы завести двигатель воздушного транспорта введите /engine");
					if(!InShop[playerid])
					{
						STimer[playerid] = SetTimerEx("UpdateSpeedometrCopter", 1000, true, "i", playerid);
						ShowSpeedometerCoptrer(playerid);
					}
				}
				for(new v = TOTALVEH; v > 0; v --)
				{
					if(vehicleid == VehInfo[v][vVehicle])
					{
						if(VehInfo[v][vFraction] == TEAM_AUTOSCHOOL && GetPVarInt(playerid, "DrivingTest") > 0
								&& VehInfo[v][vVehicle] == vehicleid && (v >= 1 && v <= 3 || v >= 103 && v <= 105))
						{
							if(UseGPS[playerid])
							{
								DisablePlayerRaceCheckpoint(playerid);
								UseGPS[playerid] = false;
								KillTimer(markTimer[playerid]);
        						markDist[playerid] = 0.0;
								HideGPSTextDraws(playerid);
							}
							
							SetPVarFloat(playerid, "car_damage", 1000.0);

							NextDrivingExamRouteCP(playerid);

							SendClientMessage(playerid, 0x66CC00FF, "[Инструктор] Проедьтесь немного по городу");
							SendClientMessage(playerid, 0xFFFF00FF, "Внимание! Если Вы попадете в аварию или выйдете из машины, экзамен будет завершен");
						}
						else if(p_info[playerid][pMember] == TEAM_ARMY)
						{
							if(model == 520 || model == 425 || model == 432)
							{
								if(WorkSalary[23])
								{
									RemovePlayerFromVehicle(playerid);
									SendErr(playerid, "В данный момент использование тяжёлой военной техники запрещено");
									return 1;
								}
							}
						}
						if(VehInfo[v][vFraction] != p_info[playerid][pMember])
						{
							if(VehInfo[v][vFraction] == GetPVarInt(playerid, "spy_member")) return 1;
							if(VehInfo[v][vFraction] == TEAM_AUTOSCHOOL && (GetPVarInt(playerid, "DrivingTest") > 0)) { }
							else
							{
								format(STRING_GLOBAL, 56, "Вы не состоите в организации '%s'", Fractions[VehInfo[v][vFraction]][fractionName]);
	    						SendErr(playerid, STRING_GLOBAL);
								RemovePlayerFromVehicle(playerid);
								return 1;
							}
						}
						if(VehInfo[v][vRank] > p_info[playerid][pRank] && VehInfo[v][vFraction] != 0)
						{
						    if(VehInfo[v][vFraction] == GetPVarInt(playerid, "spy_member")) return 1;
							if(VehInfo[v][vFraction] == TEAM_AUTOSCHOOL && (GetPVarInt(playerid, "DrivingTest") > 0)) { }
							else
							{
								format(STRING_GLOBAL, 56, "Транспортное средство доступно с %d ранга", VehInfo[v][vRank]);
		    					SendErr(playerid, STRING_GLOBAL);
								RemovePlayerFromVehicle(playerid);
								return 1;
							}
						}
					}
				}
				if(cars == 0)
				{
					if(p_info[playerid][pLic][0] == 0)
					{
						if(GetPVarInt(playerid, "DrivingTest") > 0) { }
						else
						{
							if(!IsAMoped(vehicleid) && !IsAVel(vehicleid))
							{
								SendErr(playerid, "У вас нет водительских прав");
								RemovePlayerFromVehicle(playerid);
								return 1;
							}
						}
					}
					if(Engine[vehicleid] == false)
					{
						if(IsAVel(vehicleid))
						{
							GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
							SetVehicleParamsEx(vehicleid,true,lights,alarm,doors,bonnet,boot,objective);
						}
						else
						{
							if(!InShop[playerid]) SendInf(playerid, "Для того чтобы завести автомобиль нажмите клавишу \"{66985f}2{FFFFFF}\" Управление транспортом: \"{66985f}/en{FFFFFF}\"");
						}
					}
					if(!IsAMoped(vehicleid) && !IsAVel(vehicleid) && !IsABoat(vehicleid))
					{
						if(!InShop[playerid])
						{
							//STimer[playerid] = SetTimerEx("UpdateSpeedometr", 1000, true, "i", playerid);
							STimer[playerid] = SetTimerEx("UpdateSpeedometr", 200, true, "i", playerid);
							speedometr_status(playerid, true);
						}
					}
					new arend_id = INVALID_PLAYER_ID;
					if(GetArendCarID(vehicleid, arend_id) != (-1))
					{
						if(arend_id == INVALID_PLAYER_ID || !IsPlayerConnected(arend_id))
						{
							new rc = GetArendCarID(vehicleid);

							STRING_GLOBAL[0] = EOS;
							format(STRING_GLOBAL,sizeof(STRING_GLOBAL), "{FFFFFF}Транспорт для аренды!\n\n- Модель: {46ca00}%s{FFFFFF}\n- Стоимость: {46ca00}%iр{FFFFFF}\n\n{afafaf}Чтобы арендовать, нажмите `Аренда`", VehicleNames[GetVehicleModel(vehicleid)-400], ArendInfo[rc][aCost]);
							ShowPlayerDialogEx(playerid, D_JOB+23, DIALOG_STYLE_MSGBOX, "{ebec86}>> Аренда", STRING_GLOBAL, "Аренда", "Отмена");
						}
						else if(arend_id != playerid)
						{
							SendClientMessage(playerid, C_RED, "Этот транспорт уже арендуют");
							RemovePlayerFromVehicle(playerid);
						}
					}
					if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading])
					{
						ShowPlayerDialogEx(playerid, D_STOPLOAD, DIALOG_STYLE_MSGBOX, "{ebec86}>> Погрузка", "{FFFFFF}Вы хотите прекратить загрузку боеприпасов в автомобиль?", "Да", "Нет");
					}
					if(vehicleid >= MechanicVehicle[0] && vehicleid <= MechanicVehicle[1]
					&& MechanicVehicleDriver[vehicleid] == -1)
					{
						if(p_info[playerid][pJob] == JOB_MECHANIC) ShowPlayerDialogEx(playerid, 28, DIALOG_STYLE_MSGBOX, "{ebec86}>> Аренда транспорта", "{FFFFFF}Вам нужно заплатить за аренду этого транспорта, 300 рублей.", "Оплатить", "Выйти");
						else RemovePlayerFromVehicle(playerid);
					}
					if(vehicleid >= TaxiVehicle[0] && vehicleid <= TaxiVehicle[1]
					&& TaxiVehicleDriver[vehicleid] == -1)
					{
						if(p_info[playerid][pJob] == JOB_TAXI) ShowPlayerDialogEx(playerid, 28, DIALOG_STYLE_MSGBOX, "{ebec86}>> Аренда транспорта", "{FFFFFF}Вам нужно заплатить за аренду этого транспорта, 300 рублей.", "Оплатить", "Выйти");
		                else RemovePlayerFromVehicle(playerid);
					}
					if(vehicleid >= TruckerVehicle[0] && vehicleid <= TruckerVehicle[1])
					{
					    if(p_info[playerid][pJob] != JOB_TRUCKER) return RemovePlayerFromVehicle(playerid);
					    SendInf(playerid, "Подцепите прицеп и езжайте загружаться. (/gps)");
					}
					if(vehicleid >= LSBus[0] && vehicleid <= LSBus[1])
					{
					    if(p_info[playerid][pJob] != 1) return RemovePlayerFromVehicle(playerid);
				 		if(!GetPVarInt(playerid, "StartBusRoute")) SendInf(playerid, "Чтобы начать работу, введите /beginwork");
				 		else SendInf(playerid, "Чтобы закончить работу, введите /beginwork");
					}
					if(vehicleid >= car_metall[0] && vehicleid <= car_metall[1])
					{
					    if(GetPlayerTempJob(playerid) == TEMP_JOB_FACTORY_TRUCKER)
						{
							new job_car = vehicleid;

							if(job_car == INVALID_VEHICLE_ID)
							{
								new bool: take_car = true;
								switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
								{
									case 514:
									{
										new Float:x, Float:y, Float:z;
										GetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);

										SendClientMessage(playerid, 0x66CC00FF, "Прицепите цистерну и отправляйтесь на нефтезавод для закупки топлива");
										SendClientMessage(playerid, 0xFFFFFFFF, "Убедитесь, что склад не полон и заводу действительно необходимо топливо");

										CreateVehicleLabel[playerid] = CreateDynamic3DTextLabel("Доставка топлива\n{FFFFFF}Загрузка 0 / 8000 л",  0xa24646FF, x,y,z, 10.5, GetPlayerVirtualWorld(playerid));
    									Attach3DTextLabelToVehicle(CreateVehicleLabel[playerid], GetPlayerVehicleID(playerid), 0.0, 2.1, 2.1);
									}
									case 498:
									{
									    new Float:x, Float:y, Float:z;
										GetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);

										SendClientMessage(playerid, 0x66CC00FF, "Отправляйтесь на шахту, чтобы закупить металл для завода");
										SendClientMessage(playerid, 0xFFFFFFFF, "Убедитесь, что склад не полон и заводу действительно нужен металл");

										CreateVehicleLabel[playerid] = CreateDynamic3DTextLabel("Доставка металла\n{FFFFFF}Загрузка 0 / 500 кг",  0xa24646FF, x,y,z, 10.5, GetPlayerVirtualWorld(playerid));
    									Attach3DTextLabelToVehicle(CreateVehicleLabel[playerid], GetPlayerVehicleID(playerid), 0.0, 0.0, 1.8);
									}
									default: take_car = false;
								}
								if(take_car)
								{
									SetPVarInt(playerid, "JobInFactory", 1);
								}
							}
							else if(vehicleid != job_car)
							{
								RemovePlayerFromVehicle(playerid);
								SendErr(playerid, "Вы не можете использовать этот транспорт в данный момент");
							}
							else KillEndJobTimer(playerid);
						}
						else
						{
							RemovePlayerFromVehicle(playerid);
							SendErr(playerid, "Вы не работник службы доставки завода");
						}
					}
				}
			}
		}
	case 3: //Игрок в машине, на месте пассажира - (можно писать PLAYER_STATE_PASSENGER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			Iter_Add(vehiclePassengers[vehicleid], playerid);
			gLastCar[playerid] = vehicleid;

			if(Bl_Info[playerid][Bl_Finder] != INVALID_PLAYER_ID)
			{
				DestroyDynamicCP(Bl_Info[Bl_Info[playerid][Bl_Finder]][Bl_Marker]);
				foreach(new i: inStreamPlayers[playerid])
				{
					if(Bl_Info[i][Bl_Observe] == playerid)
					{
						DestroyDynamicCP(Bl_Info[i][Bl_Marker]);
					}
				}
				new engine1, light1, alarm1, doors1, bonnet1, boot1, objective1;
				GetVehicleParamsEx(vehicleid, engine1, light1, alarm1, doors1, bonnet1, boot1, objective1);
				if(objective1 < 1)
				{
					SetVehicleParamsEx(vehicleid, engine1, light1, alarm1, doors1, bonnet1, boot1, true);
				}
			}
			if(GetPlayerVehicleID(playerid) >= LSBus[0] && GetPlayerVehicleID(playerid) <= LSBus[1])
			{
			   	if(p_info[playerid][pCash] >= 50*WorkSalary[4]/100)
				{
					GiveMoney(playerid, -50*WorkSalary[4]/100, "Оплата за проезд в автобусе");
					format(STRING_GLOBAL, 128, "Вы заплатили {f0e86b}%d {FAEBD7}рублей за проезд", 50*WorkSalary[4]/100);
					SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
				}
				else
				{
					SendErr(playerid, "У вас нет денег чтобы заплатить за проезд");
				 	RemovePlayerFromVehicle(playerid);
				}
			}
			if(GetPlayerVehicleID(playerid) >= TaxiVehicle[0] && GetPlayerVehicleID(playerid) <= TaxiVehicle[1])
			{
			    foreach(new i: Player)
			    {
			        if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid) && TaxiVehicleDriver[GetPlayerVehicleID(playerid)] == i
			        && GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPVarInt(i, "TaxiPassanger") == -1)
					{
					    new VehicleID = GetPlayerVehicleID(playerid);
						if(VehicleID >= TaxiVehicle[0] && VehicleID <= TaxiVehicle[1])
						{
						    if(GetPlayerVehicleID(i) == VehicleID && TaxiVehicleDriver[VehicleID] == i
						    && GetPlayerState(i) == PLAYER_STATE_DRIVER)
							{
							    if(GetPVarInt(i, "TaxiPassanger") == -1)
							    {
							    	SetPVarInt(playerid, "TaxiDriver", i);
							    	SetPVarInt(i, "TaxiPassanger", playerid);
							    	SendInf(playerid, "Вы заказали такси, ждите ответа от водителя");
									format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Игрок %s заказал услуги такси.\nПринять заказ?", GetName(playerid));
									ShowPlayerDialogEx(i, 124, DIALOG_STYLE_MSGBOX, "{ebec86}>> Пассажир", STRING_GLOBAL, "Да", "Нет");
								}
							}
						}
					}
			    }
			}
		}
	case 4: //Игрок вышел из машины
		{
			BE_Play_Check[playerid] = false;
		}
	case 5: //Игрок сел в машину на место водителя
		{
		}
	case 6: //Игрок сел в машину на место пассажира
		{
		}
	case 7: //Игрок выбирает скин (можно писать PLAYER_STATE_WASTED)
		{
		}
	case 8: //Игрок возродился (можно писать PLAYER_STATE_SPAWNED)
		{
		}
	case 9: //Игрок наблюдает с помощью функции SPECTATING (можно писать PLAYER_STATE_SPECTATING)
		{
		}
	}
	return 1;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	if(checkpointid == armyammo)
	{
		if(IsAMafia(playerid))
		{
			StealMats(playerid);
		}
	}
	else if(checkpointid == robbery_moneys[0] || checkpointid == robbery_moneys[1])
	{
		if(robbery_players[playerid] != -1)
		{
			StealMoney(playerid);
		}
		else SendErr(playerid, "Вы не участник ограбления");
	}
	else if(factory_desk[0][FD_CHEK_ID] <= checkpointid <= factory_desk[sizeof(factory_desk)-1][FD_CHEK_ID])
	{
		new index = checkpointid - factory_desk[0][FD_CHEK_ID];
		SetPlayerFactoryDeskUse(playerid, index, true);
	}
	else if(miner_job_load_cp[0] <= checkpointid <= miner_job_load_cp[sizeof(miner_job_load_pos)-1])
	{
		SetPlayerMinerJobLoadCP(playerid, false);

		if(GetPlayerTempJob(playerid) == TEMP_JOB_MINER && GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_MINER_LOAD)
		{
			ApplyAnimation(playerid, "BASEBALL", "Bat_4", 3.1, 1, 1, 1, 0, 0, 0);
			SetTimerEx("SetPlayerMinerJobTakeOre", 15_000, false, "ii", playerid, 1);
		}
	}
	else if (checkpointid >= HouseSafeCP[0] && checkpointid <= HouseSafeCP[1])
	{
		if(GetPlayerHouse(playerid) != 0)
		{
			new h = GetPVarInt(playerid, "PlayerHouse");

			if (GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtual])
			{
				ShowSafeMenu(playerid, h);
			}
		}
	}
	return 1;
}

forward CreateFactoryProd(playerid);
public CreateFactoryProd(playerid)
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_FACTORY)
	{
		if(GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_FACTORY_CREATED)
		{
			RemovePlayerAttachedObjectEx(playerid, A_OBJECT_SLOT_HAND, A_OBJECT_SLOT_HAND + 1);

			new skill = GetPVarInt(playerid, "factory_skill");
			if(!(random(5) + skill == 1))
			{
				if(random(6) == 1)
				{
					new fmt_str[80];

					SetPVarInt(playerid, "factory_skill", skill + 1);

					format(fmt_str, sizeof fmt_str, "Рабочий навык увеличен. Теперь шанс создать бракованый продукт 1 из %d", skill + 5);
					SendClientMessage(playerid, 0x66CC00FF, fmt_str);
				}

				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 1, 1, 1, 1, 1, 0);
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);

				SetPlayerChatBubble(playerid, "+ 1 продукт", 0x66CC00FF, 10.0, 1500);

				SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_FOREARM, 1279, A_OBJECT_BONE_LEFT_FOREARM, 0.4, -0.09, -0.2, 85.0, 0.0, 90.0, 1.0, 1.0, 1.0, 0);
				GameTextForPlayer(playerid, "~g~~h~SUCCESS", 4000, 1);

				SetPlayerTempJobState(playerid, TEMP_JOB_STATE_FACTORY_PUT_PROD);
				SetPlayerTempJobCheckAnim(playerid, true);
			}
			else FactoryPlayerDrop(playerid);

			SetPlayerFactoryDeskUse(playerid, GetPlayerData(playerid, P_FACTORY_USE_DESK), false);
		}
	}
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid) return 1;

public OnPlayerEnterCheckpoint(playerid)
{
	if(PlayerIsInkasator[playerid]==2)   
	{   
		DisablePlayerCheckpoint(playerid);   
		SendClientMessage(playerid,-1,"Вам отдали кассиры деньги, отправляйтесь обратно в банк.");   
		SetPlayerCheckpoint(playerid, 2256.6199,-2102.7429,21.9688, 3.0);    
		PlayerIsInkasator[playerid]=3;   
	}   
	else if(PlayerIsInkasator[playerid]==3)   
	{   
		DisablePlayerCheckpoint(playerid);   
		SendClientMessage(playerid,-1,"Вы отвезли деньги в банк.");   
		GivePlayerMoney(playerid,7000);   
		PlayerIsInkasator[playerid]=0;   
		return 1;   
	} 
	if(checkp[playerid] == 1)
    {
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 574) return SendClientMessage(playerid,0x21DD00FF,"Вы должны находиться в спец.авто");
	    new check = GetPVarInt(playerid, "sweeper_check");
        check++;
        if(check >= sizeof sweeper_way)
		{
			DeletePVar(playerid, "sweeper_check");
			DisablePlayerCheckpoint(playerid);
			checkp[playerid] = 0;
		    checkp1[playerid] = 1;
		    SetPlayerCheckpoint(playerid,1958.2939,-1906.5450,31.8420, 4.0);
    		SendClientMessage(playerid,COLOR_YELLOW, "{F0F00B}Отправляйся на базу, {F0F00B}чтобы забрать свою зарплату!");
		}
        else
		{
			SetPlayerCheckpoint(playerid, sweeper_way[check][0], sweeper_way[check][1], sweeper_way[check][2], 3.0);
			SetPVarInt(playerid, "sweeper_check", check);
        }
    	return 1;
    }
    if(checkp1[playerid] == 1)
    {
    	DisablePlayerCheckpoint(playerid);
    	checkp1[playerid] = 0;
    	GameTextForPlayer(playerid,"~G~+20000$",3000,5);
    	GivePlayerMoney(playerid, 20000);
        return 1;
    }
    if(GetPVarInt(playerid,"get_patron") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsAArmy(playerid) || GetPVarInt(playerid,"get_metall") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && IsAArmy(playerid))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
		{
			for(new place = 0; place < MAX_FRACTIONS; place++)
			{
				if(IsAArmy(playerid))
				{
				    if(PlayerToPoint(10.0, playerid, frac_place_put[place][0], frac_place_put[place][1], frac_place_put[place][2]))
					{
						PutPatron(playerid);
						return 1;
					}
				}
			}
		}
	}
	if(GetPVarInt(playerid,"Job") == 1)
	{
		if(GetPlayerTempJob(playerid) == TEMP_JOB_LOADER)
		{
			if(GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_LOADER_LOAD)
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					DisablePlayerCheckpoint(playerid);

					ClearAnimations(playerid);
					ApplyAnimation(playerid, "CARRY", "liftup", 4.0, 0, 0, 0, 0, 0);
					SetTimerEx("SetPlayerLoaderJobLoad", 1000, false, "i", playerid);
				}
			}
		}
	}
	if(GetPVarInt(playerid,"Job") == 2)
	{
		if(GetPlayerTempJob(playerid) == TEMP_JOB_LOADER)
		{
			if(GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_LOADER_UNLOAD)
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					SetPlayerJobLoadItems(playerid, GetPlayerJobLoadItems(playerid) + 1);

					RemovePlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND);
					ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 0, 0, 0, 0);

					SetPlayerLoaderJobLoadCP(playerid);

					new fmt_str[70];
					format(fmt_str, sizeof fmt_str, "Ящик доставлен на склад! Всего перенесено ящиков: {66CC00}%d", GetPlayerJobLoadItems(playerid));
					SendClientMessage(playerid, 0x66CC00FF, fmt_str);
				}
			}
		}
	}
	if(GetPVarInt(playerid,"Job") == 3)
	{
		if(GetPlayerTempJob(playerid) == TEMP_JOB_LUMBERJACK)
		{
			if(GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_LUMBERJACK_CHOP)
			{
				if(!IsPlayerInAnyVehicle(playerid))
				{
					DisablePlayerCheckpoint(playerid);

					ApplyAnimation(playerid, "BASEBALL", "Bat_4", 3.1, 1, 1, 1, 0, 0, 0);

					SetTimerEx("SetPlayerLumberJackTakeWood", (random(5) + 10) * 1000, false, "i", playerid);
				}
			}
		}
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid) return 1;

public OnPlayerEnterRaceCheckpoint(playerid)
{
    new car = GetPlayerVehicleID(playerid);
    if(cartrack_status == false)
	{
	    for(new i = 0; i < sizeof(chek_cartrack);i++)
		{
	    	if(PlayerToPoint(15.0, playerid, chek_cartrack[i][0],chek_cartrack[i][1],chek_cartrack[i][2]) && p_info[playerid][data_CT_VEH] == car)
			{

			    if(i == sizeof(chek_cartrack)-1)
				{
				    if(p_info[playerid][data_CHEK] == TRACK_KRUG)
				    {
						SetPlayerRaceCheckpoint(playerid, 1, chek_cartrack[0][0],chek_cartrack[0][1],chek_cartrack[0][2],chek_cartrack[0][3],chek_cartrack[0][4],chek_cartrack[0][5], 15.0);
					}
					else
					{
					    SetPlayerRaceCheckpoint(playerid, 0, chek_cartrack[0][0],chek_cartrack[0][1],chek_cartrack[0][2],chek_cartrack[0][3],chek_cartrack[0][4],chek_cartrack[0][5], 15.0);
					}
					return 1;
				}

				if(i == 0)
				{
					if(p_info[playerid][data_CHEK] == TRACK_KRUG)
					{
					    for(new g = 0; g < 10; g++)
					    {
							if(CT_DATA[g][data_STATUS] == 0)
							{
								if(g == 0)
								{
								    GiveMoney(playerid, 300000, "Победа в гонках №1");
									SendClientMessage(playerid, 0xFFCC00FF, "Поздравляем! Вы заняли первое место!");
								}
								if(g == 1)
								{
								    GiveMoney(playerid, 200000, "Победа в гонках №2");
									SendClientMessage(playerid, 0xFFCC00FF, "Поздравляем! Вы заняли второе место!");
								}
								if(g == 2)
								{
								    GiveMoney(playerid, 100000, "Победа в гонках №3");
									SendClientMessage(playerid, 0xFFCC00FF, "Поздравляем! Вы заняли третье место!");
								}
								CT_DATA[g][data_STATUS] = 1;
								strmid(CT_DATA[g][data_NAME], p_info[playerid][pName], 0, 24, 24);
						        break;
							}
					    }
					    DestroyVehicle(p_info[playerid][data_CT_VEH]);
						p_info[playerid][data_CT_VEH] = INVALID_VEHICLE_ID;
						p_info[playerid][data_CT_NUMBER] = 0;
						SetPlayerPos(playerid, -1503.6699,1609.8861,36.5690);
						DisablePlayerRaceCheckpoint(playerid);
						SendClientMessage(playerid, 0xFFCC00FF, "Гонка завершена");
					}
					else
					{
					    new str[12];
					    p_info[playerid][data_CHEK]++;
					    format(str,sizeof(str),"~w~%d/%d",p_info[playerid][data_CHEK],TRACK_KRUG);
			         	GameTextForPlayer(playerid, str, 3000, 6);
						SetPlayerRaceCheckpoint(playerid, 0, chek_cartrack[i+1][0],chek_cartrack[i+1][1],chek_cartrack[i+1][2],chek_cartrack[i+1][3],chek_cartrack[i+1][4],chek_cartrack[i+1][5], 15.0);
					}
					return 1;
				}
			    SetPlayerRaceCheckpoint(playerid, 0, chek_cartrack[i+1][0],chek_cartrack[i+1][1],chek_cartrack[i+1][2],chek_cartrack[i+1][3],chek_cartrack[i+1][4],chek_cartrack[i+1][5], 15.0);
                return 1;
			}
		}
	}
	if(GetPVarInt(playerid, "TrailerInfo") != -1)
	{
		    if(p_info[playerid][pJob] == JOB_TRUCKER && GetPVarInt(playerid, "biz_id") != -1)
			{
				new biz_id = GetPVarInt(playerid, "biz_id");

				if(!IsPlayerInRangeOfPoint(playerid, 4.5, BizzInfo[biz_id][bEntrx], BizzInfo[biz_id][bEntry], BizzInfo[biz_id][bEntrz])) return 1;
				
				if(BizzInfo[biz_id][bProdJob] > GetPlayerJobLoadItems(playerid)) return SendErr(playerid, "В Вашей фуре недостаточно продуктов");

				new fmt_msg[90];

				p_info[playerid][pPayCheck] += BizzInfo[biz_id][bProdOrder]*floatround(3*WorkSalary[14]*(BizzInfo[biz_id][bTill]/10));
				MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

				SendClientMessage(playerid, 0xFFFF00FF, "Заказ выполнен!");

				format(fmt_msg, sizeof fmt_msg, "Вы продали предприятию \"%s\" %d продуктов на сумму %d рублей", BizzInfo[biz_id][bName], BizzInfo[biz_id][bProdJob], BizzInfo[biz_id][bProdJob]*floatround(3*WorkSalary[14]*(BizzInfo[biz_id][bTill]/10)));
				SendClientMessage(playerid, 0x3399FFFF, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "Чистая прибыль от этой продажи составляет %d рублей", BizzInfo[biz_id][bProdJob]*floatround(3*WorkSalary[14]*(BizzInfo[biz_id][bTill]/10)));
				SendClientMessage(playerid, 0x66CC00FF, fmt_msg);
				
				SetPlayerJobLoadItems(playerid, GetPlayerJobLoadItems(playerid) -  BizzInfo[biz_id][bProdJob]);
				BizzInfo[biz_id][bProdJob] = 0;
				
				new VehicleID = GetVehicleTrailer(GetPlayerVehicleID(playerid));
				if(VehicleID >= TruckerVehicle[2] && VehicleID <= TruckerVehicle[5]) format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Доставка продуктов\n{FFFFFF}Загрузка %d / 10000 п", GetPlayerJobLoadItems(playerid));
				UpdateDynamic3DTextLabelText(TrailerInfo[VehicleID], COLOR_WHITE, STRING_GLOBAL);
				
				if(UseGPS[playerid])
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
					DisablePlayerRaceCheckpoint(playerid);
					UseGPS[playerid] = false;
					KillTimer(markTimer[playerid]);
			        markDist[playerid] = 0.0;
					HideGPSTextDraws(playerid);
				}
			}
			else
			{
				new biz_id = GetPVarInt(playerid, "biz_id");

				if(!IsPlayerInRangeOfPoint(playerid, 4.5, BizzInfo[biz_id][bEntrx], BizzInfo[biz_id][bEntry], BizzInfo[biz_id][bEntrz])) return 1;
				
				if(BizzInfo[biz_id][bProdJob] > GetPlayerJobLoadItems(playerid)) return SendErr(playerid, "В Вашей фуре недостаточно топлива");

				new fmt_msg[90];
				
				p_info[playerid][pPayCheck] += BizzInfo[biz_id][bProdOrder]*floatround(3*WorkSalary[14]*(BizzInfo[biz_id][bTill]/10));
				MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

				SendClientMessage(playerid, 0xFFFF00FF, "Заказ выполнен!");

				format(fmt_msg, sizeof fmt_msg, "Вы продали АЗС \"%s\" %d л. топлива на сумму %d рублей", BizzInfo[biz_id][bName], BizzInfo[biz_id][bProdJob], BizzInfo[biz_id][bProdJob]*floatround(3*WorkSalary[14]*(BizzInfo[biz_id][bTill]/10)));
				SendClientMessage(playerid, 0x3399FFFF, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "Чистая прибыль от этой продажи составляет %d рублей", BizzInfo[biz_id][bProdJob]*floatround(3*WorkSalary[14]*(BizzInfo[biz_id][bTill]/10)));
				SendClientMessage(playerid, 0x66CC00FF, fmt_msg);

				SetPlayerJobLoadItems(playerid, GetPlayerJobLoadItems(playerid) -  BizzInfo[biz_id][bProdJob]);
				BizzInfo[biz_id][bProdJob] = 0;
				
				new VehicleID = GetVehicleTrailer(GetPlayerVehicleID(playerid));
				if(VehicleID >= TruckerVehicle[6] && VehicleID <= TruckerVehicle[9]) format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "ДДоставка топлива\n{FFFFFF}Загрузка %d / 8000 л", GetPlayerJobLoadItems(playerid));
				UpdateDynamic3DTextLabelText(TrailerInfo[VehicleID], COLOR_WHITE, STRING_GLOBAL);
				
				if(UseGPS[playerid])
				{
				    SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
					DisablePlayerRaceCheckpoint(playerid);
					UseGPS[playerid] = false;
					KillTimer(markTimer[playerid]);
			        markDist[playerid] = 0.0;
					HideGPSTextDraws(playerid);
				}
			}
	}
	if(UseGPS[playerid])
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
		DisablePlayerRaceCheckpoint(playerid);
		UseGPS[playerid] = false;
		KillTimer(markTimer[playerid]);
        markDist[playerid] = 0.0;
		HideGPSTextDraws(playerid);
		return 1;
	}
	if(GetPVarInt(playerid, "findplayer") == 1)
	{
		SendClientMessage(playerid, COLOR_BLUE, "Вы достигли места назначения!");
		DeletePVar(playerid, "findplayer");
		DisablePlayerRaceCheckpoint(playerid);
		return 1;
	}
	if(GetPVarInt(playerid, "Home") == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Вы достигли места назначения");
		DeletePVar(playerid, "Home");
		DisablePlayerRaceCheckpoint(playerid);
	}
	if(GetPVarInt(playerid, "DrivingTest") > 0)
	{
		if(GetPlayerState(playerid) != 2) return SendErr(playerid, "Вы должны находиться за рулем");
		new step = GetPlayerDrivingExamInfo(playerid, DE_ROUTE_STEP);

		if(step >= sizeof driving_exam_route - 1)
		{
			ClearPlayerDrivingExamInfo(playerid);
			DisablePlayerRaceCheckpoint(playerid);

			new Float: health = GetPVarFloat(playerid, "car_damage");
			Fuel[GetPlayerVehicleID(playerid)] = 100;
			AC_SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			DisablePlayerRaceCheckpoint(playerid);

			if(health < 900.0)
			{
				ShowPlayerDialogEx
				(
					playerid, D_NULL, DIALOG_STYLE_MSGBOX,
					"{ebec86}>> Экзамен провален",
					"{FFFFFF}К сожалению, Вам не удалось справиться с практической частью экзамена.\n"\
					"Уровень повреждений машины слишком высокий.\n\n"\
					"В сдедующий раз постарайтесь ехать аккуратнее, соблюдая ПДД.\n"\
					"Ждем Вас на пересдаче!",
					"Ок", ""
				);
			}
			else
			{
				p_info[playerid][pLic][0] = 1;

				format(p_info[playerid][pLics],16,"%i, %i, %i, %i",p_info[playerid][pLic][0],p_info[playerid][pLic][1],p_info[playerid][pLic][2],p_info[playerid][pLic][3]);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE name='%s'", p_info[playerid][pLics], GetName(playerid));
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

				ShowPlayerDialogEx
				(
					playerid, D_NULL, DIALOG_STYLE_MSGBOX,
					"{ebec86}>> Экзамен пройден успешно",
					"{FFFFFF}Вы успешно сдали практическую часть экзамена по вождению\n"\
					"и получаете водительское удостоверение!\n"\
					"{9999FF}На Вашей машине не обнаружено никаких повреждений, либо\n"\
					"они незначительны.\n"\
					"{FFFFFF}Не забывайте клавиши управления транспортом, а также\n"\
					"правила дорожного движения. Они будут постоянно нужны\n"\
					"Вам на дороге. Обучающий раздел в автошколе будет все\n"\
					"время доступен если понадобится какая-либо помощь.",
					"Ок", ""
				);
				
				Fuel[GetPlayerVehicleID(playerid)] = 100;
				AC_SetVehicleToRespawn(GetPlayerVehicleID(playerid));
				DisablePlayerRaceCheckpoint(playerid);
			}
		}
		else if(step >= 0)
		{
			NextDrivingExamRouteCP(playerid);
		}
	}
	new VehicleID = GetPlayerVehicleID(playerid);
   	if((VehicleID >= LSBus[0] && VehicleID <= LSBus[1]) && p_info[playerid][pJob] == 1)
	{
		new route_step = GetPVarInt(playerid, "BusRouteCheckpoint");
		new route_id = GetPVarInt(playerid, "StartBusRoute");

		if(g_bus_route[route_id][route_step][BRS_POS_X] == 0.0)
		{
			SetPlayerData(playerid, P_BUS_ROUTE_STEP, 0);
		}

		if(g_bus_route[route_id][route_step - 1][BRS_STOP])
		{
			new fmt_str[90];
			DisablePlayerRaceCheckpoint(playerid);

			GameTextForPlayer(playerid, "~r~Stop", 4000, 6);
			SendClientMessage(playerid, 0x66CC00FF, "Остановка. Ждите пассажиров");

			format(fmt_str, sizeof fmt_str, "Автобус по маршруту %s отправляется через 10 секунд", g_bus_routes[route_id][BR_NAME]);
			SendMessageInLocal(playerid, fmt_str, 0x669999FF, 45.0);

			SetTimerEx("NextBusRouteCP", 10_000, false, "i", playerid);
		}
		else
		{
			GivePVarInt(playerid, "BusRouteMoney", WorkSalary[2]);
			NextBusRouteCP(playerid);
		}
	}
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    if(!GetPlayerState(playerid))
	{
	    if(playerSpawnTimer[playerid])
		{
			KillTimer(playerSpawnTimer[playerid]);
			playerSpawnTimer[playerid] = 0;
		}
		playerSpawn{playerid} = 1;
	}
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnObjectMoved(objectid) return 1;
public OnPlayerObjectMoved(playerid, objectid) return 1;

forward PickupBack(playerid);
public PickupBack(playerid)
{
	pickupentered[playerid] = 0;
	return 1;
}

forward ResetAntiFloodPick(playerid);
public ResetAntiFloodPick(playerid) return SetPVarInt(playerid, "PickupID", -1);

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    if(pickupentered[playerid] == 1) return 1;
	if(GetPVarInt(playerid, "PickupID") == pickupid) return 1;
	SetPVarInt(playerid, "PickupID", pickupid);
	SetTimerEx("ResetAntiFloodPick", 3000, 0, "i", playerid);
	if(GetPVarInt(playerid, "PickupTime") > gettime()) return 1;
	SetPVarInt(playerid, "PickupTime", gettime()+3);
	if(pickupid == pickcartrack)
	{
		if(p_info[playerid][data_CT_NUMBER] != 0) return SendErr(playerid, "Вы уже зарегистрировались на участие в гонке");
	    if(cartrack_status == false) return SendErr(playerid, "В данный момент регистрация участников закрыта");
		if(cartrack_people >= 15) return SendErr(playerid, "Нет свободных мест");
		if(p_info[playerid][pLic][0] == 0) return SendErr(playerid, "У Вас нет водительских прав");
		new str[145];
		format(str,sizeof(str),"Вы успешно зарегистрировались. Ваш номер: %d", cartrack_people+1);
		SendClientMessage(playerid, 0xFFFF66FF, str);
		cartrack_people++;
		p_info[playerid][data_CT_NUMBER] = cartrack_people;
		return 1;
	}
	if(pickupid == pickcs)
	{
		if(p_info[playerid][data_CS_TEAM] != 0) return SendErr(playerid, "Вы уже зарегистрировались на игру");
	    if(cs_status == false) return SendErr(playerid, "В данный момент регистрация участников закрыта");
		if(cs_people >= 20) return SendErr(playerid, "Нет свободных мест");

		if(cs_people%2 == 0)
		{
			SendClientMessage(playerid, 0xFFFF66FF,"Вы успешно зарегистрировались. Ваша команда: Армия");
			p_info[playerid][data_CS_TEAM] = 1;
		}
		else
		{
		    SendClientMessage(playerid, 0xFFFF66FF,"Вы успешно зарегистрировались. Ваша команда: ОМОН");
		    p_info[playerid][data_CS_TEAM] = 2;
		}
		cs_people++;
		return 1;
	}
	if(pickupid == CasinoKrupe)
	{
	    format(STRING_GLOBAL, 128, "{FFFFFF}Вы действительно хотите %s работу крупье?", (GetPVarInt(playerid,"krup")) ? ("закончить") : ("начать"));
		ShowPlayerDialogEx(playerid, dKrup, DIALOG_STYLE_MSGBOX, "{ebec86}>> Работа крупье", STRING_GLOBAL, "Да", "Нет");
	    return 1;
	}
	if(pickupid == Ticket_Pay)
	{
	    if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID) return SendErr(playerid, "У Вас не загружен личный транспорт. (/fixcar)");
		if(ownable_car[playerid][v_ticket] > 0) ShowPlayerDialogEx(playerid, D_TICKETPAY, DIALOG_STYLE_MSGBOX, "{ebec86}>> Штрафстоянка", "{FFFFFF}Один из Ваших автомобилей находится на штрафстоянке.\n\nПрежде, чем его забрать Вы должны заплатить гос. пошлину,\nГос. пошлина составляет: {f0e86b}50.000{FFFFFF} рублей", "Да", "Нет");
		else SendErr(playerid, "Этот автомобиль не стоит на штрафстоянке");
		return 1;
	}
	if(pickupid == pichelp)
    {
        ShowPlayerDialog(playerid, 677, 0, "{FFCC00}Обзор сервера", "{FFFFFF}Вы желаете осмотреть все важные места города GTA3?", "Да", "Нет");
    }
/*	if(pickupid == mopedpick[0])
	{
		if(GetPVarInt(playerid, "arenda_took") && GetPVarInt(playerid, "check_arenda_moped"))
		{
		    DestroyVehicle(GetPVarInt(playerid, "arenda_took"));
	        DeletePVar(playerid, "arenda_took");
            DeletePVar(playerid, "check_arenda_moped");
	        SendErr(playerid, "Вы уже арендовали мопед, прошлый арендованный был удален");
		}
 		if(!GetPVarInt(playerid, "check_arenda_moped")) ShowPlayerDialogEx(playerid, 8952, DIALOG_STYLE_MSGBOX, "{ebec86}>> Аренда мопеда", "{FFFFFF}Хотите арендовать мопед? Если мопед не будет использоватся {f0e86b}5{FFFFFF} минут, то оно исчезнет!\nЦена аренды мопеда: {f0e86b}500{FFFFFF} рублей", "Принять", "Отмена");
	}
	if(pickupid == mopedpick[1])
	{
		if(GetPVarInt(playerid, "arenda_took") && GetPVarInt(playerid, "check_arenda_moped"))
		{
		    DestroyVehicle(GetPVarInt(playerid, "arenda_took"));
	        DeletePVar(playerid, "arenda_took");
            DeletePVar(playerid, "check_arenda_moped");
	        SendErr(playerid, "Вы уже арендовали мопед, прошлый арендованный был удален");
		}
 		if(!GetPVarInt(playerid, "check_arenda_moped")) ShowPlayerDialogEx(playerid, 8952, DIALOG_STYLE_MSGBOX, "{ebec86}>> Аренда мопеда", "{FFFFFF}Хотите арендовать мопед? Если мопед не будет использоватся {f0e86b}5{FFFFFF} минут, то оно исчезнет!\nЦена аренды мопеда: {f0e86b}500{FFFFFF} рублей", "Принять", "Отмена");
	}*/
	if(pickupid == Pickup[2]) // lspd
	{
		if(p_info[playerid][pMember] != TEAM_POLICIA) return SendErr(playerid, "Вы не состоите в полиции");

		new stringer1[128];
		if(!IsACop(playerid)) return SendErr(playerid, "Вы не состоите в полиции");
		STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t\t1\t25\nПистолет Макарова\t\t50\t75\nРужьё\t\t50\t150\nАКС 74у\t\t\t150\t170\nАК 74м\t\t\t150\t250\nБронежилет\t\t\t100\nЖезл\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
  		format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", frac_patron[TEAM_POLICIA], frac_metall[TEAM_POLICIA]);
		ShowPlayerDialogEx(playerid, D_ARMOURY, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
		return 1;
	}
	if(pickupid == fbipic[2])
	{
		if(p_info[playerid][pMember] == TEAM_FBI)
		{
			SendClientMessage(playerid, C_BLUE, "Вы надели бронижилет");
			SetArmour(playerid, 100);
		}
		else SendErr(playerid, "Вы не гос. служащий");
	}
	if(pickupid == fbipic[3]) // Раздевалка
	{
		if(p_info[playerid][pMember] == TEAM_FBI)
		{
			if(GetPVarInt(playerid, "razdfbi") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15420, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб ФСБ", "Гражданская одежда\nСлужебная форма", "Одеть", "Нет");
			SetPVarInt(playerid, "razdfbi", gettime()+5);
		}
	}
	if(pickupid == armysklad[0])
	{
	    LoadTexture(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1167.1888,-443.1460,4.3141);
		SetPlayerFacingAngle(playerid, 275.3665);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == armysklad[1])
	{
	    LoadTexture(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 792.0293,-126.3877,1014.2467);
		SetPlayerFacingAngle(playerid, 180.4101);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == zavod[0])
	{
	    LoadTexture(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -1060.6014,2204.3333,38.0992);
		SetPlayerFacingAngle(playerid, 184.2092);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == zavod[1])
	{
	    LoadTexture(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 316.0180,-204.4280,1006.5694);
		SetPlayerFacingAngle(playerid, 90.6942);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == wahta[0])
	{
	    LoadTexture(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2379.7141,1726.1478,-2.1617);
		SetPlayerFacingAngle(playerid, 278.3278);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == wahta[1])
	{
	    LoadTexture(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -2558.6062,313.7662,-15.7640);
		SetPlayerFacingAngle(playerid, 181.1934);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == salon[0])
	{
	    LoadTexture(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 9.7908,-28.0501,1086.0945);
		SetPlayerFacingAngle(playerid, 111.4845);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == salon[1])
	{
	    LoadTexture(playerid);
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 5.5761,-25.5612,1080.9968);
		SetPlayerFacingAngle(playerid, 181.0451);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == armyyashik)
	{
	    if(!IsAMafia(playerid)) return SendErr(playerid, "Доступно криминальным организациям");
		if(!GetPVarInt(playerid, "carryammo"))
		{
			gArmyWarehouse[0] -= 500;
			gArmyWarehouse[1] -= 500;
			ClearAnimations(playerid);
			ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
			SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
			SetPVarInt(playerid, "carryammo", 300);
			new string[180];
			format(string,sizeof(string),"{FFFFFF}Патронов: {f0e86b}%d\n{FFFFFF}Металла: {f0e86b}%d", gArmyWarehouse[1], gArmyWarehouse[0]);
			UpdateDynamic3DTextLabelText(gArmyWarehouseText,0xFFFFFFFF,string);
		}
		return 1;
	}
	if(pickupid == armyzagruz[0] || pickupid == armyzagruz[1] || pickupid == armyzagruz[2] || pickupid == armyzagruz[3])
	{
	    if(!IsAArmy(playerid) && !IsAMafia(playerid)) return SendErr(playerid, "Вы не можете взять ящик с боеприпасами");
		if(!GetPVarInt(playerid, "carryammo"))
		{
			ClearAnimations(playerid);
			ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
			SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
			SetPVarInt(playerid, "carryammo", 300);
		}
		return 1;
	}
	if(pickupid == narko_camel)
	{
	    if(!IsAMafia(playerid)) return SendErr(playerid, "Вы не можете взять пакет с наркотиками");
		if(!GetPVarInt(playerid, "carrydrugs"))
		{
			ClearAnimations(playerid);
			ApplyAnimation(playerid, "CARRY", "liftup", 1.0, 0, 1, 1, 0, 0, 1);
			SetPlayerAttachedObject(playerid,3,2969,1,0.075578,0.407083,0.000000,1.248928,97.393852,359.645050,1.000000,1.000000,1.000000);
			SetPVarInt(playerid, "carrydrugs", 300);
		}
		return 1;
	}
	if(pickupid == armygun)
	{
	    new stringer1[128];
		if(p_info[playerid][pMember] != TEAM_ARMY) return SendErr(playerid, "Вы не состоите в Армии");
		STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t\t1\t25\nПистолет Макарова\t\t50\t75\nРужьё\t\t50\t150\nАКС 74у\t\t\t150\t170\nАК 74м\t\t\t150\t250\nБронежилет\t\t\t100\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
  		format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", gArmyWarehouse[1], gArmyWarehouse[0]);
		ShowPlayerDialogEx(playerid, D_ARMOURY+1, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
		return 1;
	}
	if(pickupid == armystol) // Столовая
	{
		if(p_info[playerid][pMember] != TEAM_ARMY) return SendErr(playerid, "Вы не состоите в Армии");
		if(p_info[playerid][pHunger] >= 100) return SendErr(playerid, "Вы не голодны");
		PlayerPlaySound(playerid, 32200, 0.0, 0.0, 0.0);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0,1);
		if(p_info[playerid][pHunger] <= 75) GiveHunger(playerid, 25);
		else SetHunger(playerid, 100);
		if(p_info[playerid][pSex] == 1) MeAction(playerid, "съел кусочек пиццы");
		else MeAction(playerid, "съела кусочек пиццы");
		return 1;
	}
	if(pickupid >= GetMedicines[0] && pickupid <= GetMedicines[2])
	{
		if(!IsAMedic(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
		if(Medicines[playerid] + Medicines[playerid] >= 10) return SendErr(playerid, "Вы не можете взять более 10 комплектов медикаментов");
		Medicines[playerid] += 10;
		SendClientMessage(playerid, COLOR_BLUE, "Вы взяли несколько комплектов медикаментов");
		if(p_info[playerid][pSex] == 1) MeAction(playerid, "взял несколько комплектов медикаментов");
		else MeAction(playerid, "взяла несколько комплектов медикаментов");
		return 1;
	}
	if(pickupid == sportpickup[1])
	{
	    if(GetPVarInt(playerid, "StartTraining"))
	    {
	        DeletePVar(playerid, "StartTraining");
			if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
			SendInf(playerid, "Вы закончили тренировку");
	    }
	    else
	    {
			ShowPlayerDialogEx(playerid, 6446, DIALOG_STYLE_MSGBOX, "{ebec86}>> Тренировка", "Цена тренировки составляет: {f0e86b}5000{ffffff} рублей", "Начать", "Отмена");
		}
		return 1;
	}
	if(pickupid == sportpickup[0])
	{
	    ShowPlayerDialogEx(playerid, 6447, DIALOG_STYLE_LIST, "{ebec86}>> Тренировка", "- Бокс ({f0e86b}1000{ffffff} рублей)\n- Кунг-Фу ({f0e86b}1000{ffffff} рублей)", "Выбрать", "Отмена");
		return 1;
	}
	if(pickupid == Pickup[1]) // Спецназ
	{
	    new stringer1[128];
		if(p_info[playerid][pMember] != TEAM_SWAT) return SendClientMessage(playerid, C_BLUE, "Вы не можете брать оружие!");
		STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t\t1\t25\nПистолет Макарова\t\t50\t75\nРужьё\t\t50\t150\nАКС 74у\t\t\t150\t170\nАК 74м\t\t\t150\t250\nБронежилет\t\t\t100\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
  		format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", frac_patron[TEAM_SWAT], frac_metall[TEAM_SWAT]);
		ShowPlayerDialogEx(playerid, D_ARMOURY+10, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
		return 1;
	}
	if(pickupid == Pickup[3]) // ппс
	{
	    new stringer1[128];
		if(p_info[playerid][pMember] != TEAM_POLICIA2) return SendClientMessage(playerid, C_BLUE, "Вы не можете брать оружие!");
		STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t\t1\t25\nПистолет Макарова\t\t50\t75\nРужьё\t\t50\t150\nАКС 74у\t\t\t150\t170\nАК 74м\t\t\t150\t250\nБронежилет\t\t\t100\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
  		format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", frac_patron[TEAM_POLICIA2], frac_metall[TEAM_POLICIA2]);
		ShowPlayerDialogEx(playerid, D_ARMOURY+11, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
		return 1;
	}
	if(pickupid == Pickup[4]) // fbi
	{
	    new stringer1[128];
		if(p_info[playerid][pMember] != TEAM_FBI) return 1;
		STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t\t1\t25\nПистолет Макарова\t\t50\t75\nРужьё\t\t50\t150\nАКС 74у\t\t\t150\t170\nАК 74м\t\t\t150\t250\nБронежилет\t\t\t100\nЖучок\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
  		format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", frac_patron[TEAM_FBI], frac_metall[TEAM_FBI]);
		ShowPlayerDialogEx(playerid, D_ARMOURY+12, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
		return 1;
	}
	if(pickupid == Pickup[7]) // Раздевалка
	{
		if(p_info[playerid][pMember] == TEAM_SWAT)
		{
			if(GetPVarInt(playerid, "razd") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15421, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "Гражданская одежда\nСлужебная форма", "Одеть", "Нет");
			SetPVarInt(playerid, "razd", gettime()+5);
		}
	}
	if(pickupid == Pickup[8]) // Раздевалка
	{
		if(p_info[playerid][pMember] == TEAM_POLICIA)
		{
			if(GetPVarInt(playerid, "razd") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15421, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "Гражданская одежда\nСлужебная форма", "Одеть", "Нет");
			SetPVarInt(playerid, "razd", gettime()+5);
		}
	}
	if(pickupid == Pickup[9]) // Раздевалка
	{
		if(p_info[playerid][pMember] == TEAM_POLICIA2)
		{
			if(GetPVarInt(playerid, "razd") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15421, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "Гражданская одежда\nСлужебная форма", "Одеть", "Нет");
			SetPVarInt(playerid, "razd", gettime()+5);
		}
	}
	if(pickupid == Pickup[19]) // Мэрия
	{
		if(p_info[playerid][pMember] != TEAM_MERIA) return 1;
		ShowPlayerDialogEx(playerid, D_ARMOURY, DIALOG_STYLE_LIST, "{ebec86}>> Склад оружия", "Патроны (60 шт.)\nДубинка\nColt М1911\nПистолет Макарова\nColt M4", "Выбрать", "Отмена");
		return 1;
	}
	if(pickupid == Pickup[28]) // Мэрия2
	{
		if(p_info[playerid][pMember] != TEAM_MERIAYJ) return 1;
		ShowPlayerDialogEx(playerid, D_ARMOURY, DIALOG_STYLE_LIST, "{ebec86}>> Склад оружия", "Патроны (60 шт.)\nДубинка\nColt М1911\nПистолет Макарова\nColt M4", "Выбрать", "Отмена");
		return 1;
	}
	if(pickupid == Pickup[21]) // Обменник
	{
		ShowPlayerDialogEx(playerid, D_ARMOURY+4, DIALOG_STYLE_MSGBOX, "{ebec86}>> Обменник", "{FFFFFF}- Вас приветствует магазин обмена\n\n{FFFFFF}Желаете выбить что нибудь за 40 подарков?", "Далее", "Отмена");
		return 1;
	}
	if(pickupid == Pickup[22]) // Раздевалка
	{
		if(p_info[playerid][pMember] == TEAM_MERIA)
		{
			if(GetPVarInt(playerid, "razd") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15421, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "Гражданская одежда\nСлужебная форма", "Одеть", "Нет");
			SetPVarInt(playerid, "razd", gettime()+5);
		}
	}
	if(pickupid == Pickup[29]) // Раздевалка2
	{
		if(p_info[playerid][pMember] == TEAM_MERIAYJ)
		{
			if(GetPVarInt(playerid, "razd") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15421, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "Гражданская одежда\nСлужебная форма", "Одеть", "Нет");
			SetPVarInt(playerid, "razd", gettime()+5);
		}
	}
	if(pickupid == Pickup[23]) // Раздевалка
	{
		if(p_info[playerid][pMember] == TEAM_BOLNICA)
		{
			if(GetPVarInt(playerid, "razd") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15421, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "Гражданская одежда\nСлужебная форма", "Одеть", "Нет");
			SetPVarInt(playerid, "razd", gettime()+5);
		}
	}
	if(pickupid == Pickup[24]) // Раздевалка
	{
		if(p_info[playerid][pMember] == TEAM_AUTOSCHOOL)
		{
			if(GetPVarInt(playerid, "razd") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15421, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "Гражданская одежда\nСлужебная форма", "Одеть", "Нет");
			SetPVarInt(playerid, "razd", gettime()+5);
		}
	}
	if(pickupid == Pickup[25]) // Раздевалка
	{
		if(p_info[playerid][pMember] == TEAM_SMI)
		{
			if(GetPVarInt(playerid, "razd") > gettime()) return 1;
			ShowPlayerDialogEx(playerid, 15421, DIALOG_STYLE_LIST, "{ebec86}>> Гардероб", "Гражданская одежда\nСлужебная форма\nФотоаппарат", "Одеть", "Нет");
			SetPVarInt(playerid, "razd", gettime()+5);
		}
	}
	if(pickupid == Pickup[6])
	{
		new pdddialog[1900];
		format(pdddialog, sizeof(pdddialog), "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s", pdd_MSG[0], pdd_MSG[1], pdd_MSG[2], pdd_MSG[3], pdd_MSG[4], pdd_MSG[5], pdd_MSG[6], pdd_MSG[7]
		, pdd_MSG[8], pdd_MSG[9], pdd_MSG[10], pdd_MSG[11], pdd_MSG[12], pdd_MSG[13], pdd_MSG[14], pdd_MSG[15], pdd_MSG[16], pdd_MSG[17], pdd_MSG[18], pdd_MSG[19], pdd_MSG[20]
		, pdd_MSG[21], pdd_MSG[22]);
		ShowPlayerDialogEx(playerid,D_NULL,DIALOG_STYLE_MSGBOX, "{ebec86}>> Правила Дорожного Движения", pdddialog, "Закрыть", "");
	}
	if(pickupid == bankpick[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,744.2551,486.2292,1036.7900);
		SetPlayerFacingAngle(playerid,268.2817);
		SetPlayerVirtualWorld(playerid,2);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankpick[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-139.5860,593.7264,12.1494);
		SetPlayerFacingAngle(playerid,174.5897);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankpick[2])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2376.4365,-2141.9885,21.9589);
		SetPlayerFacingAngle(playerid,177.7117);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankpick[3])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,744.2551,486.2292,1036.7900);
		SetPlayerFacingAngle(playerid,268.2817);
		SetPlayerVirtualWorld(playerid,1);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankpick[4])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1853.3405,2037.6676,16.9742);
		SetPlayerFacingAngle(playerid,3.4808);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == bankpick[5])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,744.2551,486.2292,1036.7900);
		SetPlayerFacingAngle(playerid,268.2817);
		SetPlayerVirtualWorld(playerid,3);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == voenkomatpick[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-569.0129,-193.2260,2552.0200);
		SetPlayerFacingAngle(playerid,270.1083);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == voenkomatpick[1])
	{
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,1915.4570,2302.0510,15.5697);
		SetPlayerFacingAngle(playerid,90.0008);
		SetPlayerVirtualWorld(playerid,0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == armskin)
	{
		if(p_info[playerid][pMember] != TEAM_ARMY) return 1;
		if(p_info[playerid][pRank] < 6) return ShowPlayerDialogEx(playerid, 15419, DIALOG_STYLE_LIST, "{ebec86}>> Раздевалка", "1. Постовая\n2. Спортивная", "Выбрать", "Отмена");
		ShowPlayerDialogEx(playerid, 15419, DIALOG_STYLE_LIST, "{ebec86}>> Раздевалка", "1. Постовая\n2. Спортивная\n3. Парадная", "Выбрать", "Отмена");
	}
	if(pickupid == stolovkapick[0]) // медики вход ls
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 1226.0129,-383.1533,4.0466);
		SetPlayerFacingAngle(playerid, 87.8617);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == stolovkapick[1]) // медики вход ls
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,209.8730, -465.9830, 1006.3422);
		SetPlayerFacingAngle(playerid, -174.7200);
		SetPlayerVirtualWorld(playerid, 0);
	}
  	if(pickupid == opg5pick[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,10);
		SetPlayerPos(playerid,2557.1355,-1852.6779,2522.8401);
		SetPlayerFacingAngle(playerid, 354.1457);
		SetPlayerVirtualWorld(playerid, 10);
	}
	if(pickupid == opg5pick[1])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 1745.0146,-2277.6506,11.0200);
		SetPlayerFacingAngle(playerid, 271.5710);
		SetPlayerVirtualWorld(playerid, 0);
	}
 	if(pickupid == opg4pick[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,14);
		SetPlayerPos(playerid,2557.1355,-1852.6779,2522.8401);
		SetPlayerFacingAngle(playerid, 354.1457);
		SetPlayerVirtualWorld(playerid, 14);
	}
	if(pickupid == opg4pick[1])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 255.4373,678.1794,12.0000);
		SetPlayerFacingAngle(playerid, 151.5710);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == opg1pick[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,2557.1355,-1852.6779,2522.8401);
		SetPlayerFacingAngle(playerid, 354.1457);
		SetPlayerVirtualWorld(playerid, 6);
	}
	if(pickupid == opg1pick[1])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 1941.2369,2160.8115,15.7060);
		SetPlayerFacingAngle(playerid, 271.5710);
		SetPlayerVirtualWorld(playerid, 0);
	}
 	if(pickupid == spermap[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2304.5327,-1716.3014,21.9748);
		SetPlayerFacingAngle(playerid, -174.8398);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == spermap[1])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 2021.7013,-1465.6190,14.6800);
		SetPlayerFacingAngle(playerid, -174.3000);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == opg2pick[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,-2617.8220, 2907.4836, 2738.7329);
		SetPlayerFacingAngle(playerid, 90.1457);
		SetPlayerVirtualWorld(playerid, 5);
	}
	if(pickupid == opg2pick[1])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, -2370.9131,199.5426,21.4507);
		SetPlayerFacingAngle(playerid, 79.8427);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == opg3pick[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,9);
		SetPlayerPos(playerid, 2410.3484,-1831.0444,1141.2600);
		SetPlayerFacingAngle(playerid, 90.1457);
		SetPlayerVirtualWorld(playerid, 9);
	}
	if(pickupid == opg3pick[1])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 431.9820,1083.8751,12.0000);
		SetPlayerFacingAngle(playerid, 167.1421);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == policiapick[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,903.8640, 2089.1736, 2721.8596);
		SetPlayerFacingAngle(playerid, 90.1457);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == policiapick[1])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 206.5966,1473.0104,12.0304);
		SetPlayerFacingAngle(playerid, 78.4540);
		SetPlayerVirtualWorld(playerid, 0);
	}
	//2018
	if(pickupid == spawn[2])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, -117.2276,1012.1108,40.8763);
		SetPlayerFacingAngle(playerid, 339.5313);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == spawn[3])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, -130.5447,979.9670,12.1494);
		SetPlayerFacingAngle(playerid, 235.2765);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == spawn[0])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 2720.2734,-2423.9238,21.8921);
		SetPlayerFacingAngle(playerid, 245.3410);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == spawn[1])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, -2093.7773,2203.7356,1001.9737);
		SetPlayerFacingAngle(playerid, -170.9112);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == policiapick[2])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2547.2227,-2427.8552,2999.5625);
		SetPlayerFacingAngle(playerid, 285.8287);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == policiapick[3])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2556.7605,-2419.4377,22.1591);
		SetPlayerFacingAngle(playerid, 272.1209);
		SetPlayerVirtualWorld(playerid, 0);
	}
 	if(pickupid == policiapick[4])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2538.5068,-2423.5823,28.3828);
		SetPlayerFacingAngle(playerid, 188.6093);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == policiapick[5])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2558.8440,-2435.5503,2999.5625);
		SetPlayerFacingAngle(playerid, 103.7456);
		SetPlayerVirtualWorld(playerid, 0);
	}
  	if(pickupid == policiapick[6])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2559.0056,-2446.6138,2999.5625);
		SetPlayerFacingAngle(playerid, 3.6093);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == policiapick[7])
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,2538.4685,-2407.9678,22.0741);
		SetPlayerFacingAngle(playerid, 358.7456);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == bolnicapick[0]) // медики вход ls+
	{
		SetPVarInt(playerid,"CheckJoinInBolnica", 1);
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 2460.4368,-2139.1592,634.2466);
		SetPlayerFacingAngle(playerid, 272.2541);
		SetPlayerVirtualWorld(playerid, 4);
	}
	if(pickupid == bolnicapick[1]) // медики выход ls+ bolnicapick
	{
		if(GetPVarInt(playerid, "CheckJoinInBolnica") == 1)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,-286.6343,581.7749,12.1118);
			SetPlayerFacingAngle(playerid, 355.0);
			SetPlayerVirtualWorld(playerid, 0);
			LoadTexture(playerid);
			SetPVarInt(playerid,"CheckJoinInBolnica", 0);
		}
		else if(PlayerDied[playerid] == true ||PlayerHP[playerid] < 99.00) return SendErr(playerid, "Вы не прошли курс лечения");
	}
	if(pickupid == smipick[0]) // медики вход ls+
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, -72.3534, 460.5067, 3013.1499);
		SetPlayerFacingAngle(playerid, 90.1457);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == smipick[1]) // медики вход ls+ bolnicapick kazarmapick
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, -2067.4021,-199.3281,26.0026);
		SetPlayerFacingAngle(playerid, 349.2679);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == kazarmapick[0]) // медики вход ls+
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 1620.1978,1994.8458,1281.8177);
		SetPlayerFacingAngle(playerid, 180.0657);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == kazarmapick[1]) // медики вход ls+
	{
		LoadTexture(playerid);
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid, 1228.3019,-357.5960,4.0002);
		SetPlayerFacingAngle(playerid, 91.2693);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(pickupid == merpicls[0])
	{
		if(p_info[playerid][pMember]) return SendClientMessage(playerid, C_RED, "Вы состоите в организации");
		ShowPlayerDialogEx(playerid, D_HEAL+17, 2, "{ebec86}>> Устройство на работу", "1. Водитель маршрутки\n2. Водитель такси\n3. Автомеханик\n4. Дальнобойщик\n5. Инкасатор\n - Уволиться с работы", "Выбор", "Отмена");
	}
	if(pickupid == Pickup[0]) return ShowPlayerDialogEx(playerid, D_JOINCARS, 0, "{ebec86}>> Автосалон", "{FFFFFF}Вас приветствуют в автосалоне!\nПерейти к покупке транспорта?", "Перейти", "Закрыть");
	if(pickupid == fbipic[0]) // Выход
	{
		SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -400.2029,927.2481,12.1524);
		SetPlayerFacingAngle(playerid, 272.7230);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
	if(pickupid == fbipic[1]) // Вход
	{
		if(IsACop(playerid) || p_info[playerid][pMember] == TEAM_FBI || p_info[playerid][pMember] == TEAM_ARMY)
		{
			LoadTexture(playerid);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 2096.0417,-2150.8193,1002.0000);
			SetPlayerFacingAngle(playerid, 179.3762);
			SetPlayerVirtualWorld(playerid, 0);
			SetCameraBehindPlayer(playerid);
		}
		else SendErr(playerid, "У вас нет пропуска");
	}
	if(pickupid == Pickupfly[0])
	{
		ShowPlayerDialogEx(playerid, dFly, DIALOG_STYLE_MSGBOX, "{ebec86}>> Прыжок с парашютом", "{FFFFFF}Вы решили прыгнуть с парашютом.\n\nПрыгнуть?","Да","");
	    return 1;			
	}	
	if(pickupid == medpick[0]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[1]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[2]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[3]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[4]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[5]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[6]) 
	{
		PlayerHealInBolnicaPickups(playerid);		
	}
	if(pickupid == medpick[7]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[8]) 
	{
		PlayerHealInBolnicaPickups(playerid);			
	}
	if(pickupid == medpick[9]) 
	{
		PlayerHealInBolnicaPickups(playerid);				
	}
	if(pickupid == medpick[10]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[11]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[12]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}
	if(pickupid == medpick[13]) 
	{
		PlayerHealInBolnicaPickups(playerid);	
	}	
	if(pickupid == meriapick[2]) //meria2
	{
		LoadTexture(playerid);
		SetPlayerPos(playerid,1579.8340,-774.6570,1114.7736);
		SetPlayerFacingAngle(playerid, -86.0400);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == meriapick[3]) //
	{
		LoadTexture(playerid);
		SetPlayerPos(playerid,2412.6838,-1844.3541,21.8545);
		SetPlayerFacingAngle(playerid, 190);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
	}

	if(pickupid == meriapick[0]) //
	{
		LoadTexture(playerid);
		SetPlayerPos(playerid,170.5773,1166.5458,542.4528);
		SetPlayerFacingAngle(playerid, 268.8866);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
	}
	if(pickupid == meriapick[1]) //
	{
		LoadTexture(playerid);
		SetPlayerPos(playerid,-317.6928,725.8645,12.0010);
		SetPlayerFacingAngle(playerid, 180);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
	}
	return 1;
}

stock PlayerHealInBolnicaPickups(playerid)
{
	if(PlayerDied[playerid] == true ||PlayerHP[playerid] > 99.00) return SendErr(playerid, "Вы не нуждаетесь в лечении");
	SetPlayerHealth(playerid, 100.0);
	SendClientMessage(playerid,COLOR_YELLOW, "Вы успешно вылечены!");			
	SetPVarInt(playerid, "CheckJoinInBolnica", 1);
	GivePlayerMoney(playerid, -600);
	GameTextForPlayer(playerid,"~G~-600p",3000,5);
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(pickupid == washer)
	{
	    SetPlayerCheckpoint(playerid,1958.2939,-1906.5450,31.8420, 2.0);
    	checkp[playerid] = 1;
    	SendClientMessage(playerid,COLOR_YELLOW, "Возьмите уборочную машину, и езжайте на метки.");
    	return 1;
	}
    if(g_pickup_flood[playerid] <= GetTickCount())
	{
		g_pickup_flood[playerid] = GetTickCount() + 250;

		new
			action_type = PICKUP_ACTION_TYPE_NONE,
			action_id = PICKUP_ACTION_ID_NONE;

		if(IsValidPickupID(pickupid))
		{
			action_type = GetPickupInfo(pickupid, P_ACTION_TYPE);
			action_id = GetPickupInfo(pickupid, P_ACTION_ID);
		}
		return OnPlayerPickUpPickupEx(playerid, pickupid, action_type, action_id);
	}
	return 0;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		OnGuardWarningCheater(playerid, "Vehicle Componentid Crasher", 86);
		RemoveVehicleComponent(vehicleid,componentid);
		return 0;
	}
	if(!IsComponentidCompatibleAC(GetVehicleModel(vehicleid), componentid))
	{
	    AC_SetVehicleToRespawn(vehicleid);
		OnGuardWarningCheater(playerid, "Tuning Crash", 85);
	}
	switch(componentid)
	{
	case 1008..1010: if(IsPlayerInInvalidNosVehicle(playerid)) RemoveVehicleComponent(vehicleid, componentid);
	}
	if(!IsComponentidCompatible(GetVehicleModel(vehicleid), componentid)) RemoveVehicleComponent(vehicleid, componentid);
	if(componentid != 1010 && GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && p_info[playerid][pAdmin] != 6)
	{
		RemoveVehicleComponent(vehicleid, componentid);
		AC_SetVehicleToRespawn(vehicleid);
		OnGuardWarningCheater(playerid, "Tuning Crash (1)", 85);
		return 1;
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(!(0 <= paintjobid <= 2))
	{
	    AC_SetVehicleToRespawn(vehicleid);
		OnGuardWarningCheater(playerid, "Farb Crash", 85);
	}
	if(paintjobid > 0)
	{
	    AC_SetVehicleToRespawn(vehicleid);
		OnGuardWarningCheater(playerid, "Farb Crash", 85);
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	/*if(GetPlayerInterior(playerid) == 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(GetPlayerHouse(playerid) && p_info[playerid][PlayerCarID][0] == vehicleid)
		{
			p_info[playerid][cColor][0] = color1;
			p_info[playerid][cColor][1] = color2;
		}
		else
		{
			SKick(playerid, 1442);
		}
		if(GetPlayerHouse(playerid) && p_info[playerid][PlayerCarID][1] == vehicleid)
		{
			p_info[playerid][cColor1][0] = color1;
			p_info[playerid][cColor1][1] = color2;
		}
		else
		{
			SKick(playerid, 1442);
		}
		if(GetPlayerHouse(playerid) && p_info[playerid][PlayerCarID][2] == vehicleid)
		{
			p_info[playerid][cColor1][0] = color1;
			p_info[playerid][cColor1][1] = color2;
		}
		else
		{
			SKick(playerid, 1442);
		}
	}*/
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if(playertextid == BinderPlayer[playerid][0])
	{
		new string[256];
		format(string, sizeof string, "{FFFFFF}Текущее сообщение бинда: {f0e86b}%s{FFFFFF}\n\nДлина бинда не может превышать 128 символов.\nРазрешено использовать буквы и цифры.", player_binder[playerid][0]);
	    ShowPlayerDialogEx ( playerid, dBinder, DIALOG_STYLE_INPUT, "{ebec86}>> Сообщение бинда", string, "Ввод", "Отмена" ) ;
	    return 1;
	}
	else if(playertextid == BinderPlayer[playerid][1])
	{
		new string[256];
		format(string, sizeof string, "{FFFFFF}Текущее сообщение бинда: {f0e86b}%s{FFFFFF}\n\nДлина бинда не может превышать 128 символов.\nРазрешено использовать буквы и цифры.", player_binder[playerid][1]);
	    ShowPlayerDialogEx ( playerid, dBinder1, DIALOG_STYLE_INPUT, "{ebec86}>> Сообщение бинда", string, "Ввод", "Отмена" ) ;
	    return 1;
	}
	else if(playertextid == BinderPlayer[playerid][2])
	{
		new string[256];
		format(string, sizeof string, "{FFFFFF}Текущее сообщение бинда: {f0e86b}%s{FFFFFF}\n\nДлина бинда не может превышать 128 символов.\nРазрешено использовать буквы и цифры.", player_binder[playerid][2]);
	    ShowPlayerDialogEx ( playerid, dBinder2, DIALOG_STYLE_INPUT, "{ebec86}>> Сообщение бинда", string, "Ввод", "Отмена" ) ;
	    return 1;
	}
	else if(playertextid == BinderPlayer[playerid][3])
	{
		new string[256];
		format(string, sizeof string, "{FFFFFF}Текущее сообщение бинда: {f0e86b}%s{FFFFFF}\n\nДлина бинда не может превышать 128 символов.\nРазрешено использовать буквы и цифры.", player_binder[playerid][3]);
	    ShowPlayerDialogEx ( playerid, dBinder3, DIALOG_STYLE_INPUT, "{ebec86}>> Сообщение бинда", string, "Ввод", "Отмена" ) ;
	    return 1;
	}
	else if(playertextid == BinderPlayer[playerid][4])
	{
		new string[256];
		format(string, sizeof string, "{FFFFFF}Текущее сообщение бинда: {f0e86b}%s{FFFFFF}\n\nДлина бинда не может превышать 128 символов.\nРазрешено использовать буквы и цифры.", player_binder[playerid][4]);
	    ShowPlayerDialogEx ( playerid, dBinder4, DIALOG_STYLE_INPUT, "{ebec86}>> Сообщение бинда", string, "Ввод", "Отмена" ) ;
	    return 1;
	}
	else if ( playertextid == acc_td_player[playerid][13] || playertextid == acc_td_player[playerid][16] ||
		playertextid == acc_td_player[playerid][17] || playertextid == acc_td_player[playerid][18] ||
		playertextid == acc_td_player[playerid][9] )
	{
	    if(step_show_acc_box[playerid] == -1 || step_show_acc_box[playerid] != -1)
	    {
		    if(playertextid == acc_td_player[playerid][9])
			{
				if(step_show_acc_box[playerid] != 0)
				{
				    step_show_acc_box[playerid] = 0;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
		    if(playertextid == acc_td_player[playerid][13])
		    {
				if(step_show_acc_box[playerid] != 1)
				{
				    step_show_acc_box[playerid] = 1;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
		    if(playertextid == acc_td_player[playerid][16])
		    {
				if(step_show_acc_box[playerid] != 2)
				{
				    step_show_acc_box[playerid] = 2;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
		    if(playertextid == acc_td_player[playerid][17])
		    {
				if(step_show_acc_box[playerid] != 3)
				{
				    step_show_acc_box[playerid] = 3;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
			if(playertextid == acc_td_player[playerid][18])
		    {
				if(step_show_acc_box[playerid] != 4)
				{
				    step_show_acc_box[playerid] = 4;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
		}
		if(step_show_acc_box[playerid] == -1) return 0;
		else if(count_acc_show[playerid] <= 0) return 0;
		else count_acc_show[playerid]--;

		new Float:fx, Float:fy, Float:fz, Float:frx, Float:fry, Float:frz;
		GetOffsetAttachedAccesories(id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],fx,fy,fz,frx,fry,frz);

		if ( step_show_acc_box[playerid] == 2 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],6,fx,fy,fz,frx,fry,frz);
		else if ( step_show_acc_box[playerid] == 3 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],1,fx,fy,fz,frx,fry,frz);
		else SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],2,fx,fy,fz,frx,fry,frz);

		new acc_string[64];
		new b = GetPVarInt(playerid, "PlayerBizz");
		format(acc_string, 64, "ЦЕНА: ~g~%d РУБ", price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]*BizzInfo[b][bTill]);
		PlayerTextDrawSetString(playerid, acc_td_player[playerid][42], acc_string);
		return 1;
	}
	else if ( playertextid == acc_td_player[playerid][10] || playertextid == acc_td_player[playerid][19] ||
		playertextid == acc_td_player[playerid][20] || playertextid == acc_td_player[playerid][21] ||
		playertextid == acc_td_player[playerid][22] )
	{
	    if(step_show_acc_box[playerid] == -1 || step_show_acc_box[playerid] != -1)
	    {
		    if(playertextid == acc_td_player[playerid][10])
			{
				if(step_show_acc_box[playerid] != 0)
				{
				    step_show_acc_box[playerid] = 0;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
		    if(playertextid == acc_td_player[playerid][19])
		    {
				if(step_show_acc_box[playerid] != 1)
				{
				    step_show_acc_box[playerid] = 1;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
		    if(playertextid == acc_td_player[playerid][20])
		    {
				if(step_show_acc_box[playerid] != 2)
				{
				    step_show_acc_box[playerid] = 2;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
		    if(playertextid == acc_td_player[playerid][21])
		    {
				if(step_show_acc_box[playerid] != 3)
				{
				    step_show_acc_box[playerid] = 3;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
			if(playertextid == acc_td_player[playerid][22])
		    {
				if(step_show_acc_box[playerid] != 4)
				{
				    step_show_acc_box[playerid] = 4;
				    InitAttachedAccesories(playerid, step_show_acc_box[playerid]);
				}
			}
		}
		if(step_show_acc_box[playerid] == -1) return 0;
		else if(count_acc_show[playerid] >= max_id_acc[step_show_acc_box[playerid]] - 1) return 0;
		else count_acc_show[playerid]++;

		new Float:fx, Float:fy, Float:fz, Float:frx, Float:fry, Float:frz;
		GetOffsetAttachedAccesories(id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],fx,fy,fz,frx,fry,frz);

		if ( step_show_acc_box[playerid] == 2 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],6,fx,fy,fz,frx,fry,frz);
		else if ( step_show_acc_box[playerid] == 3 ) SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],1,fx,fy,fz,frx,fry,frz);
		else SetPlayerAttachedObject(playerid,0,id_acc[step_show_acc_box[playerid]][count_acc_show[playerid]],2,fx,fy,fz,frx,fry,frz);

        new acc_string[64];
        new b = GetPVarInt(playerid, "PlayerBizz");
		format(acc_string, 64, "ЦЕНА: ~g~%d РУБ", price_acc[step_show_acc_box[playerid]][count_acc_show[playerid]]*BizzInfo[b][bTill]);
		PlayerTextDrawSetString(playerid, acc_td_player[playerid][42], acc_string);
		return 1;
	}
	else if ( playertextid == acc_td_player[playerid][39] )
	{
	    EditAttachedObject(playerid, 0);
	    return 1;
	}
	else if(playertextid == LicPlayer[playerid][34])
	{
		lic_td_status(playerid, false);
		return 1;
	}
	for(new i = 0; i < 9; i++)
	{
		if(playertextid == SecurityCode[playerid][i])
		{
			PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
			if(GetPVarInt(playerid, "NumberDigits") == 0) return p_info[playerid][pInputCode] += 1000 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
			else if(GetPVarInt(playerid, "NumberDigits") == 1) return p_info[playerid][pInputCode] += 100 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
			else if(GetPVarInt(playerid, "NumberDigits") == 2) return p_info[playerid][pInputCode] += 10 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", GetPVarInt(playerid, "NumberDigits") + 1);
			else if(GetPVarInt(playerid, "NumberDigits") == 3)
			{
				p_info[playerid][pInputCode] += 1 * (mass_pass[playerid][i]), SetPVarInt(playerid, "NumberDigits", 0);
				if(p_info[playerid][pInputCode] == p_info[playerid][pSecurityCode])
				{
					PlayerLogged[playerid] = true;
					Hunger(playerid);
					if(GetPVarInt(playerid,"e_time") > gettime() && GetPVarFloat(playerid,"e_X") != 0.0 && GetPVarFloat(playerid,"e_Y") != 0.0 && GetPVarFloat(playerid,"e_Z") != 0.0 && p_info[playerid][pJail] == 0)
					{
						ShowPlayerDialogEx(playerid, dEPLAYER, DIALOG_STYLE_MSGBOX, "{ebec86}>> Вернуться", "{FFFFFF}Вы вышли из игры менее 5-ти минут назад.\nВы можете вернуться на предыдущую позицию.\n\nВернуться?", "Да", "Нет");
					}
					else
					{
						AC_SpawnPlayer(playerid);
					}
					AC_TogglePlayerSpectating(playerid, 0);
					SpRabotaySer[playerid] = false;
				}
				else Kick(playerid), SendClientMessage(playerid, C_BLUE, "Вы были кикнуты по причине ввода неверного графического пароля!");
				for(new f = 0; f < 10; f++) PlayerTextDrawHide(playerid,SecurityCode[playerid][f]);
				p_info[playerid][pInputCode] = -1;
				Ujahhs[playerid] = 0;
				CancelSelectTextDraw(playerid);
			}
		}
	}
	if ( playertextid == dice_ptd [ playerid ] [ 18 ] ) return ShowPlayerDialogEx ( playerid, d_dice_exit,DIALOG_STYLE_MSGBOX,"{ebec86}>> Предупреждение","{ffffff}Если вы сделали ставку и игра уже началась, то деньги Вам возвращены не будут\n\n{AFAFAF}* Вы действительно хотите покинуть стол?", "Выйти", "Отмена" ) ;
	else if(playertextid == dice_ptd [ playerid ] [ 14 ])
	{
		if(GetPVarInt(playerid,"krup"))
		{
			new null = 0;
			for(new i; i < 5; i++) if ( GetPVarInt ( dice_info [ GetPVarInt ( playerid,"Stol" ) - 1 ] [ b_player ] [ i ],"InGame" ) ) null++ ;
			if(null > 0) return SendErr(playerid, "В данный момент вы не можете изменить ставку" ) ;
			return ShowPlayerDialogEx(playerid,d_dice_bet,1,"{ebec86}>> Установка ставки для игры","{ffffff}Введите сумму для ставки\n\n{AFAFAF}* Ставка должна быть не менее 1000 рублей и не более 30.000.000 рублей","Далее","Отмена");
		}
		if(!dice_info[GetPVarInt(playerid,"Stol")-1][b_bet]) return SendErr(playerid, "Ставка не установлена" ) ;
		if(GetPVarInt(playerid,"InGame")) return SendErr(playerid, "Ты уже поставил ставку" ) ;
		if(p_info [ playerid ] [ pCash ] < dice_info[GetPVarInt(playerid,"Stol")-1][b_bet]) return SendErr(playerid, "Недостаточно средств" ) ;
		if(dice_info[GetPVarInt(playerid,"Stol")-1][b_started] > 0) return SendErr(playerid, "Игра уже запущена" ) ;
		GiveMoney(playerid, -dice_info[GetPVarInt(playerid,"Stol")-1][b_bet], "Выйгрыш в казино");

		dice_info[GetPVarInt(playerid,"Stol")-1][b_bank] += dice_info[GetPVarInt(playerid,"Stol")-1][b_bet];
		SetPVarInt(playerid,"InGame",1);
		UpdateBone(GetPVarInt(playerid,"Stol")-1);
	}
	else if(playertextid == dice_ptd [ playerid ] [ 15 ])
	{
		if(GetPVarInt(playerid,"krup"))
		{
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(dice_info[GetPVarInt(playerid,"Stol")-1][ b_player ][i],"InGame")) null++;
			if(null < 2) return SendErr(playerid, "Не хватает игроков для старта" ) ;
			if(dice_info[GetPVarInt(playerid,"Stol")-1][b_started] > 0) return SendErr(playerid, "Игра уже запущена" ) ;
			return dice_info[GetPVarInt(playerid,"Stol")-1][b_started] = 30;
		}
		else
		{
			if(!GetPVarInt(playerid,"InGame")) return SendErr(playerid, "Вы не поставили ставку" ) ;
			if(dice_info[GetPVarInt(playerid,"Stol")-1][b_started] <= 0) return SendErr(playerid, "В данный момент нельзя кинуть кости");
			if(GetPVarInt(playerid,"InGame") > 1) return SendErr(playerid, "Вы уже кидали кубики в этом раунде" ) ;
			new null = 0;
			SetPVarInt(playerid,"InGame",random(11) + 2);
			UpdateBone(GetPVarInt(playerid,"Stol")-1);
			foreach ( new i:Player)
			{
				if(GetPVarInt(i,"Stol") == GetPVarInt(playerid,"Stol") && GetPVarInt(i,"InGame") == 1) null++;
			}
			if(!null) dice_info[GetPVarInt(playerid,"Stol")-1][b_started] = 4;
		}
	}

	if ( GetPVarInt ( playerid, "cm_used" ) != 0 )
	{
		if ( playertextid == cm_ptd [ playerid ] [ 53 ] )
		{
			ShowPlayerDialogEx(playerid,d_camikaze_exit,DIALOG_STYLE_MSGBOX,"{ebec86}>> Предупреждение","{ffffff}Если вы сделали ставку и игра уже началась, то деньги Вам возвращены не будут\n\n{AFAFAF}* Для прекращения игры нажмите кнопку стоп-коэффициент\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
			return 1 ;
		}
		else if ( playertextid == cm_ptd [ playerid ] [ 37 ] )
		{
			if ( roulette_number [ playerid ] != 1 ) return SendErr ( playerid, "Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе" ) ;
			SetPVarInt ( playerid, "cm_step", 1 ) ;
			ShowPlayerDialogEx ( playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, "{ebec86}>> Остановка игры", "{ffffff}Ваш выигрыш будет рассчитан из данного коэффициента\n\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
			return 1 ;
		}
		else if ( playertextid == cm_ptd [ playerid ] [ 39 ] )
		{
			if ( roulette_number [ playerid ] != 2 ) return SendErr ( playerid, "Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе" ) ;
			SetPVarInt ( playerid, "cm_step", 2 ) ;
			ShowPlayerDialogEx ( playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, "{ebec86}>> Остановка игры", "{ffffff}Ваш выигрыш будет рассчитан из данного коэффициента\n\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
			return 1 ;
		}
		else if ( playertextid == cm_ptd [ playerid ] [ 41 ] )
		{
			if ( roulette_number [ playerid ] != 3 ) return SendErr ( playerid, "Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе" ) ;
			SetPVarInt ( playerid, "cm_step", 3 ) ;
			ShowPlayerDialogEx ( playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, "{ebec86}>> Остановка игры", "{ffffff}Ваш выигрыш будет рассчитан из данного коэффициента\n\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
			return 1 ;
		}
		else if ( playertextid == cm_ptd [ playerid ] [ 43 ] )
		{
			if ( roulette_number [ playerid ] != 4 ) return SendErr ( playerid, "Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе" ) ;
			SetPVarInt ( playerid, "cm_step", 4 ) ;
			ShowPlayerDialogEx ( playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, "{ebec86}>> Остановка игры", "{ffffff}Ваш выигрыш будет рассчитан из данного коэффициента\n\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
			return 1 ;
		}
		else if ( playertextid == cm_ptd [ playerid ] [ 45 ] )
		{
			if ( roulette_number [ playerid ] != 5 ) return SendErr ( playerid, "Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе" ) ;
			SetPVarInt ( playerid, "cm_step", 5 ) ;
			ShowPlayerDialogEx ( playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, "{ebec86}>> Остановка игры", "{ffffff}Ваш выигрыш будет рассчитан из данного коэффициента\n\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
			return 1 ;
		}
		else if ( playertextid == cm_ptd [ playerid ] [ 47 ] )
		{
			if ( roulette_number [ playerid ] != 6 ) return SendErr ( playerid, "Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе" ) ;
			SetPVarInt ( playerid, "cm_step", 6 ) ;
			ShowPlayerDialogEx ( playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, "{ebec86}>> Остановка игры", "{ffffff}Ваш выигрыш будет рассчитан из данного коэффициента\n\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
			return 1 ;
		}
		else if ( playertextid == cm_ptd [ playerid ] [ 49 ] )
		{
			if ( roulette_number [ playerid ] != 7 ) return SendErr ( playerid, "Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе" ) ;
			SetPVarInt ( playerid, "cm_step", 7 ) ;
			ShowPlayerDialogEx ( playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, "{ebec86}>> Остановка игры", "{ffffff}Ваш выигрыш будет рассчитан из данного коэффициента\n\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
			return 1 ;
		}
		else if ( playertextid == cm_ptd [ playerid ] [ 55 ] )
		{
			ShowPlayerDialogEx ( playerid, d_cm_bet, 1, "{ebec86}>> Ставка", "{ffffff}Введите сумму, которую желаете поставить\n\n{AFAFAF}* Ставка должна быть не менее 1000 рублей и не более 1.000.000 рублей", "Принять", "Отмена" ) ;
			return 1 ;
		}

		for ( new j = 2 ; j < 37 ; j ++ )
		{
			if ( playertextid == cm_ptd [ playerid ] [ j ] )
			{
				if ( roulette_bet [ playerid ] == 0 ) return  SendErr ( playerid, "Для начала необходимо сделать ставку" ) ;
				if ( j > ( ( roulette_number [ playerid ] + 1 ) * 5 ) + 1 || j < ( ( roulette_number [ playerid ] + 1 ) * 5 ) - 3 )return SendErr ( playerid, "Данный слот недоступен, используйте другой" ) ;

				new useless_point = random ( 5 ) ;
				new td_cell = ( ( roulette_number [ playerid ] + 1 ) * 5 ) - 5 + useless_point ;

				if ( random ( 5 ) == 3 )
				{
				    PlayerTextDrawDestroy(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ]);
				
					cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ] = CreatePlayerTextDraw(playerid, cm_td_pos [ j - 2 ] [ 0 ], cm_td_pos [ j - 2 ] [ 1 ], "LD_SPAC:white");
					PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 4);
					PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF);
					PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);
					PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 30.000000, 30.000000);
					/*PlayerTextDrawSetPreviewModel(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1654);
					PlayerTextDrawSetPreviewRot(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.000000, 0.000000, 90.000000, 1.000000);*/
					PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);

					//PlayerTextDrawBackgroundColor ( playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF ) ;
					PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0 ) ;
					PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF ) ;
					
					PlayerTextDrawShow ( playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ] ) ;
					
					roulette_number [ playerid ] = 0 ;
					roulette_bet [ playerid ] = 0 ;
					SendErr ( playerid, "Вы проиграли в игру камикадзе, сделайте новую ставку и попробуйте снова" ) ;

					SetTimerEx ( "kamikaze_reset", 1500, false, "d", playerid ) ;

				}
				else if ( useless_point != j - ( ( roulette_number [ playerid ] + 1 ) * 5 ) + 2 + 1 )
				{
				    PlayerTextDrawDestroy(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ]);
				
					cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ] = CreatePlayerTextDraw(playerid, cm_td_pos [ td_cell ] [ 0 ], cm_td_pos [ td_cell ] [ 1 ], "LD_SPAC:white");
					/*PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 5);
					PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], -1);
					PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);
					PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 30.000000, 30.000000);
					//PlayerTextDrawSetPreviewModel(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1654);
					//PlayerTextDrawSetPreviewRot(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.000000, 0.000000, 90.000000, 1.000000);
					PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);*/
					
					PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 4);
					PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF);
					PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);
					PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 30.000000, 30.000000);
					/*PlayerTextDrawSetPreviewModel(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1654);
					PlayerTextDrawSetPreviewRot(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.000000, 0.000000, 90.000000, 1.000000);*/
					PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);

					//PlayerTextDrawBackgroundColor ( playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF ) ;
					PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0 ) ;
					PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF ) ;

					PlayerTextDrawShow ( playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ] ) ;
					if ( roulette_number [ playerid ] != 6 )
					{
						roulette_number [ playerid ] ++ ;
					}
					else
					{
						new win_count = floatround ( roulette_bet [ playerid ] * 4.5 ) ;

						roulette_number [ playerid ] = 0 ;
						roulette_bet [ playerid ] = 0 ;

						GiveMoney ( playerid, win_count, "Выйгрыш в камикадзе" ) ;

						new scm_string [ 98 ] ;
						format ( scm_string, sizeof ( scm_string ), "Вы успешно прошли игру и забрали выигрыш в размере {f0e86b}%d{FFFFFF} рублей", win_count ) ;
						SendInf ( playerid, scm_string ) ;

						cm_status ( playerid, false ) ;
						return 1 ;
					}
				}
				else
				{
				    PlayerTextDrawDestroy(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ]);
				    
					cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ] = CreatePlayerTextDraw(playerid, cm_td_pos [ td_cell ] [ 0 ], cm_td_pos [ td_cell ] [ 1 ], "LD_SPAC:white");
					/*PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 5);
					PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], -1);
					PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);
					PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 30.000000, 30.000000);
					//PlayerTextDrawSetPreviewModel(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1654);
					//PlayerTextDrawSetPreviewRot(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.000000, 0.000000, 90.000000, 1.000000);
					PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);
					PlayerTextDrawBackgroundColor ( playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF ) ;*/
					
					PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 4);
					PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF);
					PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);
					PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 30.000000, 30.000000);
					/*PlayerTextDrawSetPreviewModel(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1654);
					PlayerTextDrawSetPreviewRot(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0.000000, 0.000000, 90.000000, 1.000000);*/
					PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 1);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0);

					//PlayerTextDrawBackgroundColor ( playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF ) ;
					PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0 ) ;
					PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ], 0xFF4530FF ) ;
					
					PlayerTextDrawShow ( playerid, cm_ptd [ playerid ] [ 57 + roulette_number [ playerid ] ] ) ;
					roulette_number [ playerid ] = 0 ;
					roulette_bet [ playerid ] = 0 ;
					SendErr ( playerid, "Вы проиграли в игру камикадзе, сделайте новую ставку и попробуйте снова" ) ;

					SetTimerEx ( "kamikaze_reset", 1500, false, "d", playerid ) ;
				}
			}
		}
	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if ( GetPVarInt ( playerid, "tuning_opened" ) || GetPVarInt ( playerid, "ptuning_opened" )  )
	{
		if ( ! ( _:clickedid ^ 0xFFFF ) )
		{
			SelectTextDraw ( playerid, 0xB0C4DEFF ) ;
			return 1 ;
		}
	}
	if(clickedid == Text:INVALID_TEXT_DRAW)
	{
		if(GetPVarInt(playerid, "send_promo") == 1)
		{
			for(new i; i < sizeof promocode_td; i ++) TextDrawHideForPlayer(playerid, promocode_td[i]);

			CancelSelectTextDraw(playerid);

			DeletePVar(playerid, "send_promo");
		}
		else if(GetPVarInt(playerid, "show_interaction") == 1)
		{
			HidePlayerInteractionTextDraw(playerid);

			p_info[playerid][pInteractionPlayer] = -1;
		}
		else if(InShop[playerid] == 1)
		{
			new Float:x, Float:y, Float:z;
			x = -4.2735, y = -27.2061, z = 1080.9968;
			DestroyVehicle(p_info[playerid][SalonCarID]);
			p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
			DeletePVar(playerid, "InShop");
			InShop[playerid] = 0;
			TogglePlayerControllable(playerid, true);
			HideAutoSalonMenu(playerid);
			SetPlayerPos(playerid,x,y,z);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetCameraBehindPlayer(playerid);
		}
		else if(InShop[playerid] == 2)
		{
		    DestroyVehicle(p_info[playerid][SalonCarID]);
			p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
		    HideAutoSalonMenu(playerid);
			CancelSelectTextDraw(playerid);
			InShop[playerid] = 0;
			pPressed[playerid] = 0;
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, -44.1234,922.3990,12.0000);
			SetPlayerFacingAngle(playerid, 180.0);
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
		}
		else if(GetPVarInt(playerid, "N_CAR") == 1)
		{
			for(new i; i < 30; i++) TextDrawHideForPlayer(playerid, buy_numbers_car[i]);
			PlayerTextDrawHide(playerid, buy_numbers_player_car[playerid]);
			CancelSelectTextDraw(playerid);

			DeletePVar(playerid, "N_CAR");
			DeletePVar(playerid, "NUMBER_CAR");
		}
		else if(GetPVarInt(playerid,"chose_player"))
		{
			for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			PlayerTextDrawHide(playerid, PTD_Clothes[playerid]);
			CancelSelectTextDraw(playerid);
			
			SendErr(playerid, "Вы отменили регистрацию и были кикнуты");
			Kick(playerid);
		}
		else if(ClothesRound[playerid] == 2)
		{
			TogglePlayerControllable(playerid,true);
			SetPlayerPos(playerid, -917.3503,1210.6248,1002.0000);
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
			SetPlayerInterior(playerid, 5);
			InShopSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
			for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			PlayerTextDrawHide(playerid, PTD_Clothes[playerid]);
			CancelSelectTextDraw(playerid);
			
			acc_td_status(playerid, false);
		}
		else if(GetPVarInt(playerid, "EnterChooseSkin") == 2)
		{
			SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
			for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			PlayerTextDrawHide(playerid, PTD_Clothes[playerid]);
			CancelSelectTextDraw(playerid);
			
			DeletePVar(playerid, "EnterChooseSkin");
			
			SetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);

			SetPlayerVirtualWorld(playerid, Virt_ar[playerid]);
			SetPlayerInterior(playerid, Int_ar[playerid]);
		}
		else if(GetPVarInt(playerid, "EnterChooseSkin") == 3)
		{
			if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
			for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			PlayerTextDrawHide(playerid, PTD_Clothes[playerid]);
			CancelSelectTextDraw(playerid);
			
			DeletePVar(playerid, "EnterChooseSkin");
			
			SetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);

			SetPlayerVirtualWorld(playerid, Virt_ar[playerid]);
			SetPlayerInterior(playerid, Int_ar[playerid]);
		}
		else if(GetPVarInt(playerid, "showpass") == 1)
		{
	 		for(new i; i < 14; i++) TextDrawHideForPlayer(playerid, passport_text[i]);
	   		PlayerTextDrawHide(playerid, passport_name[playerid]);
	     	PlayerTextDrawHide(playerid, passport_sex[playerid]);
	      	PlayerTextDrawHide(playerid, passport_s_n[playerid]);
	       	PlayerTextDrawHide(playerid, passport_info[playerid]);
	       	DeletePVar(playerid, "showpass");
	        CancelSelectTextDraw(playerid);
		}
		else if(GetPVarInt(playerid, "BinderPlayer") == 1)
		{
		    binder_td_status(playerid, false);
		}
		else if(GetPVarInt(playerid, "LicPlayer"))
		{
			lic_td_status(playerid, false);
		}
		else if(GetPVarInt(playerid, "CTOColors") == 1)
		{
		    ShowPlayerDialogEx(playerid, D_CTO+5, DIALOG_STYLE_MSGBOX, "{ebec86}>> Перекраска", "{FFFFFF}Вы уверены, что хотите перекрасить транспортное средство?", "Перекрасить", "Назад");
		}
		else if(GetPVarInt(playerid,"Stol"))
		{
			if(!(_:clickedid ^ 0xFFFF))
			{
				ShowPlayerDialogEx(playerid,d_dice_exit,DIALOG_STYLE_MSGBOX,"{ebec86}>> Предупреждение","{ffffff}Если вы сделали ставку и игра уже началась, то деньги Вам возвращены не будут\n\n{AFAFAF}* Вы действительно хотите покинуть стол?", "Выйти", "Отмена" ) ;
				return SelectTextDraw ( playerid, 0xB0C4DEFF ) ;
			}
		}
		else if ( GetPVarInt ( playerid, "cm_used" ) != 0 )
		{
			if(!(_:clickedid ^ 0xFFFF))
			{
				ShowPlayerDialogEx(playerid,d_camikaze_exit,DIALOG_STYLE_MSGBOX,"{ebec86}>> Предупреждение","{ffffff}Если вы сделали ставку и игра уже началась, то деньги Вам возвращены не будут\n\n{AFAFAF}* Для прекращения игры нажмите кнопку стоп-коэффициент\n{AFAFAF}* Вы действительно хотите покинуть игру?", "Выйти", "Отмена" ) ;
				return SelectTextDraw ( playerid, 0xB0C4DEFF ) ;
			}
		}
	}
	else if(clickedid == Binder[34])
	{
		ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Помощь по биндеру", "{FFFFFF}Биндер - Ваш помощник в игровом процессе,\nон упростит Вашу работу.\n\nНажимайте на текст и устанавливайте бинды.\n\nКнопка 'RP' - выведет текст в обычный чат.\nКнопка 'OOC' - выведет текст в /n чат.", "Понятно", "");
	}
	else if(clickedid == Binder[35])
	{
	    binder_td_status(playerid, false);
	}
	else if(clickedid == Binder[14])
	{
	    if(!strcmp(player_binder[playerid][0],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	    /*if(GetPVarInt(playerid, "anti_flod") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		SetPVarInt(playerid, "anti_flod", gettime()+3); */
		
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid, "CallPlayerStart")
		&& !GetPVarInt(playerid, "GYM_Bike") && !GetPVarInt(playerid, "GYM_Thread")
		&& !GetPVarInt(playerid, "GYM_Bar") && !GetPVarInt(playerid, "GYM_Dumbbells"))
		{
		    if(!GetPVarInt(playerid, "Animation"))
			{
				if(p_info[playerid][pSetAnim] == 0)
				{
					ApplyAnimation(playerid,"PED",Talk[p_info[playerid][pSetAnim]], 8.1, 0, 1, 1, 1, 1);
				}
				else if(p_info[playerid][pSetAnim] != 0)
				{
					ApplyAnimation(playerid,"GANGS",Talk[p_info[playerid][pSetAnim]], 4.1, 1, 1, 1, 1, 1, 1);
				}
				if(strlen(player_binder[playerid][0]) <= 5) SetTimerEx("ClearAnimText", 1000, false, "d", playerid);
				else SetTimerEx("ClearAnimText", strlen(player_binder[playerid][0])*200, false, "d", playerid);
			}
		}
		SetPlayerChatBubble(playerid, player_binder[playerid][0], COLOR_PURPLE, 15.0, 10000);
		if(strlen(player_binder[playerid][0]) >= 100)
		{
		 	new String[500], String2[500];
		    strmid(String, player_binder[playerid][0], 100, 400, 400);
		    strdel(player_binder[playerid][0], 100, 400);
		    if(PlayerUseMask[playerid]) format(player_binder[playerid][0], 200, "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][0]);
		    else format(player_binder[playerid][0], 200, "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][0]);
		    ProxDetector(15.0, playerid, player_binder[playerid][0], COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		    format(String2, 400, "{FFFFFF}%s", String);
		    ProxDetector(15.0, playerid, String2, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
		else
		{
			new String[500];
		    if(PlayerUseMask[playerid]) format(String, sizeof(String), "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][0]);
		    else format(String, sizeof(String), "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][0]);
			ProxDetector(15.0, playerid, String, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
	}
	else if(clickedid == Binder[16])
	{
	    if(!strcmp(player_binder[playerid][1],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	   /* if(GetPVarInt(playerid, "anti_flod") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		SetPVarInt(playerid, "anti_flod", gettime()+3); */
	    
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid, "CallPlayerStart")
		&& !GetPVarInt(playerid, "GYM_Bike") && !GetPVarInt(playerid, "GYM_Thread")
		&& !GetPVarInt(playerid, "GYM_Bar") && !GetPVarInt(playerid, "GYM_Dumbbells"))
		{
		    if(!GetPVarInt(playerid, "Animation"))
			{
				if(p_info[playerid][pSetAnim] == 0)
				{
					ApplyAnimation(playerid,"PED",Talk[p_info[playerid][pSetAnim]], 8.1, 0, 1, 1, 1, 1);
				}
				else if(p_info[playerid][pSetAnim] != 0)
				{
					ApplyAnimation(playerid,"GANGS",Talk[p_info[playerid][pSetAnim]], 4.1, 1, 1, 1, 1, 1, 1);
				}
				if(strlen(player_binder[playerid][1]) <= 5) SetTimerEx("ClearAnimText", 1000, false, "d", playerid);
				else SetTimerEx("ClearAnimText", strlen(player_binder[playerid][1])*200, false, "d", playerid);
			}
		}
		SetPlayerChatBubble(playerid, player_binder[playerid][1], COLOR_PURPLE, 15.0, 10000);
		if(strlen(player_binder[playerid][1]) >= 100)
		{
		 	new String[500], String2[500];
		    strmid(String, player_binder[playerid][1], 100, 400, 400);
		    strdel(player_binder[playerid][1], 100, 400);
		    if(PlayerUseMask[playerid]) format(player_binder[playerid][1], 200, "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][1]);
		    else format(player_binder[playerid][1], 200, "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][1]);
		    ProxDetector(15.0, playerid, player_binder[playerid][1], COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		    format(String2, 400, "{FFFFFF}%s", String);
		    ProxDetector(15.0, playerid, String2, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
		else
		{
			new String[500];
		    if(PlayerUseMask[playerid]) format(String, sizeof(String), "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][1]);
		    else format(String, sizeof(String), "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][1]);
			ProxDetector(15.0, playerid, String, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
	}
	else if(clickedid == Binder[18])
	{
	    if(!strcmp(player_binder[playerid][2],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	    /*if(GetPVarInt(playerid, "anti_flod") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		SetPVarInt(playerid, "anti_flod", gettime()+3); */
	    
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid, "CallPlayerStart")
		&& !GetPVarInt(playerid, "GYM_Bike") && !GetPVarInt(playerid, "GYM_Thread")
		&& !GetPVarInt(playerid, "GYM_Bar") && !GetPVarInt(playerid, "GYM_Dumbbells"))
		{
		    if(!GetPVarInt(playerid, "Animation"))
			{
				if(p_info[playerid][pSetAnim] == 0)
				{
					ApplyAnimation(playerid,"PED",Talk[p_info[playerid][pSetAnim]], 8.1, 0, 1, 1, 1, 1);
				}
				else if(p_info[playerid][pSetAnim] != 0)
				{
					ApplyAnimation(playerid,"GANGS",Talk[p_info[playerid][pSetAnim]], 4.1, 1, 1, 1, 1, 1, 1);
				}
				if(strlen(player_binder[playerid][2]) <= 5) SetTimerEx("ClearAnimText", 1000, false, "d", playerid);
				else SetTimerEx("ClearAnimText", strlen(player_binder[playerid][2])*200, false, "d", playerid);
			}
		}
		SetPlayerChatBubble(playerid, player_binder[playerid][2], COLOR_PURPLE, 15.0, 10000);
		if(strlen(player_binder[playerid][2]) >= 100)
		{
		 	new String[500], String2[500];
		    strmid(String, player_binder[playerid][2], 100, 400, 400);
		    strdel(player_binder[playerid][2], 100, 400);
		    if(PlayerUseMask[playerid]) format(player_binder[playerid][2], 200, "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][2]);
		    else format(player_binder[playerid][2], 200, "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][2]);
		    ProxDetector(15.0, playerid, player_binder[playerid][2], COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		    format(String2, 400, "{FFFFFF}%s", String);
		    ProxDetector(15.0, playerid, String2, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
		else
		{
			new String[500];
		    if(PlayerUseMask[playerid]) format(String, sizeof(String), "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][2]);
		    else format(String, sizeof(String), "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][2]);
			ProxDetector(15.0, playerid, String, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
	}
	else if(clickedid == Binder[20])
	{
	    if(!strcmp(player_binder[playerid][3],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	    /*if(GetPVarInt(playerid, "anti_flod") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		SetPVarInt(playerid, "anti_flod", gettime()+3); */
	    
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid, "CallPlayerStart")
		&& !GetPVarInt(playerid, "GYM_Bike") && !GetPVarInt(playerid, "GYM_Thread")
		&& !GetPVarInt(playerid, "GYM_Bar") && !GetPVarInt(playerid, "GYM_Dumbbells"))
		{
		    if(!GetPVarInt(playerid, "Animation"))
			{
				if(p_info[playerid][pSetAnim] == 0)
				{
					ApplyAnimation(playerid,"PED",Talk[p_info[playerid][pSetAnim]], 8.1, 0, 1, 1, 1, 1);
				}
				else if(p_info[playerid][pSetAnim] != 0)
				{
					ApplyAnimation(playerid,"GANGS",Talk[p_info[playerid][pSetAnim]], 4.1, 1, 1, 1, 1, 1, 1);
				}
				if(strlen(player_binder[playerid][3]) <= 5) SetTimerEx("ClearAnimText", 1000, false, "d", playerid);
				else SetTimerEx("ClearAnimText", strlen(player_binder[playerid][3])*200, false, "d", playerid);
			}
		}
		SetPlayerChatBubble(playerid, player_binder[playerid][3], COLOR_PURPLE, 15.0, 10000);
		if(strlen(player_binder[playerid][3]) >= 100)
		{
		 	new String[500], String2[500];
		    strmid(String, player_binder[playerid][3], 100, 400, 400);
		    strdel(player_binder[playerid][3], 100, 400);
		    if(PlayerUseMask[playerid]) format(player_binder[playerid][3], 200, "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][3]);
		    else format(player_binder[playerid][3], 200, "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][3]);
		    ProxDetector(15.0, playerid, player_binder[playerid][3], COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		    format(String2, 400, "{FFFFFF}%s", String);
		    ProxDetector(15.0, playerid, String2, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
		else
		{
			new String[500];
		    if(PlayerUseMask[playerid]) format(String, sizeof(String), "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][3]);
		    else format(String, sizeof(String), "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][3]);
			ProxDetector(15.0, playerid, String, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
	}
	else if(clickedid == Binder[22])
	{
	    if(!strcmp(player_binder[playerid][4],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	    /*if(GetPVarInt(playerid, "anti_flod") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		SetPVarInt(playerid, "anti_flod", gettime()+3); */
	    
	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && !GetPVarInt(playerid, "CallPlayerStart")
		&& !GetPVarInt(playerid, "GYM_Bike") && !GetPVarInt(playerid, "GYM_Thread")
		&& !GetPVarInt(playerid, "GYM_Bar") && !GetPVarInt(playerid, "GYM_Dumbbells"))
		{
		    if(!GetPVarInt(playerid, "Animation"))
			{
				if(p_info[playerid][pSetAnim] == 0)
				{
					ApplyAnimation(playerid,"PED",Talk[p_info[playerid][pSetAnim]], 8.1, 0, 1, 1, 1, 1);
				}
				else if(p_info[playerid][pSetAnim] != 0)
				{
					ApplyAnimation(playerid,"GANGS",Talk[p_info[playerid][pSetAnim]], 4.1, 1, 1, 1, 1, 1, 1);
				}
				if(strlen(player_binder[playerid][4]) <= 5) SetTimerEx("ClearAnimText", 1000, false, "d", playerid);
				else SetTimerEx("ClearAnimText", strlen(player_binder[playerid][4])*200, false, "d", playerid);
			}
		}
		SetPlayerChatBubble(playerid, player_binder[playerid][4], COLOR_PURPLE, 15.0, 10000);
		if(strlen(player_binder[playerid][4]) >= 100)
		{
		 	new String[500], String2[500];
		    strmid(String, player_binder[playerid][4], 100, 400, 400);
		    strdel(player_binder[playerid][4], 100, 400);
		    if(PlayerUseMask[playerid]) format(player_binder[playerid][4], 200, "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][4]);
		    else format(player_binder[playerid][4], 200, "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][4]);
		    ProxDetector(15.0, playerid, player_binder[playerid][4], COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		    format(String2, 400, "{FFFFFF}%s", String);
		    ProxDetector(15.0, playerid, String2, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
		else
		{
			new String[500];
		    if(PlayerUseMask[playerid]) format(String, sizeof(String), "- {000000}%s[%d]{FFFFFF}: %s", GetName(playerid), playerid, player_binder[playerid][4]);
		    else format(String, sizeof(String), "- {%s}%s[%d]{FFFFFF}: %s", GetColor(playerid), GetName(playerid), playerid, player_binder[playerid][4]);
			ProxDetector(15.0, playerid, String, COLOR_GRAD5, COLOR_GRAD4, COLOR_GRAD3, COLOR_GRAD2, COLOR_GRAD1);
		}
	}
	else if(clickedid == Binder[15])
	{
	    STRING_GLOBAL[0] = EOS;
	    if(!strcmp(player_binder[playerid][0],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	    format(STRING_GLOBAL, 150, "(( %s[%i]: %s ))", GetName(playerid), playerid, player_binder[playerid][0]);
		ProxDetector(20.0, playerid, STRING_GLOBAL, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF);
		SetPlayerChatBubble(playerid, player_binder[playerid][0], 0xCCCC99FF, 20.0, 7000);
	}
	else if(clickedid == Binder[17])
	{
	    STRING_GLOBAL[0] = EOS;
	    if(!strcmp(player_binder[playerid][1],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	    format(STRING_GLOBAL, 150, "(( %s[%i]: %s ))", GetName(playerid), playerid, player_binder[playerid][1]);
		ProxDetector(20.0, playerid, STRING_GLOBAL, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF);
		SetPlayerChatBubble(playerid, player_binder[playerid][1], 0xCCCC99FF, 20.0, 7000);
	}
	else if(clickedid == Binder[19])
	{
	    STRING_GLOBAL[0] = EOS;
	    if(!strcmp(player_binder[playerid][2],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	    /*if(GetPVarInt(playerid, "anti_flod") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		SetPVarInt(playerid, "anti_flod", gettime()+3);*/
	    format(STRING_GLOBAL, 150, "(( %s[%i]: %s ))", GetName(playerid), playerid, player_binder[playerid][2]);
		ProxDetector(20.0, playerid, STRING_GLOBAL, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF);
		SetPlayerChatBubble(playerid, player_binder[playerid][2], 0xCCCC99FF, 20.0, 7000);
	}
	else if(clickedid == Binder[21])
	{
	    STRING_GLOBAL[0] = EOS;
	    if(!strcmp(player_binder[playerid][3],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	  /*  if(GetPVarInt(playerid, "anti_flod") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		SetPVarInt(playerid, "anti_flod", gettime()+3); */
	    format(STRING_GLOBAL, 150, "(( %s[%i]: %s ))", GetName(playerid), playerid, player_binder[playerid][3]);
		ProxDetector(20.0, playerid, STRING_GLOBAL, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF);
		SetPlayerChatBubble(playerid, player_binder[playerid][3], 0xCCCC99FF, 20.0, 7000);
	}
	else if(clickedid == Binder[23])
	{
     	STRING_GLOBAL[0] = EOS;
	    if(!strcmp(player_binder[playerid][4],"None",true)) return SendErr(playerid, "Вы не установили текст бинда");
	    // if(GetPVarInt(playerid, "anti_flod") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		// SetPVarInt(playerid, "anti_flod", gettime()+3);
	    format(STRING_GLOBAL, 150, "(( %s[%i]: %s ))", GetName(playerid), playerid, player_binder[playerid][4]);
		ProxDetector(20.0, playerid, STRING_GLOBAL, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF);
		SetPlayerChatBubble(playerid, player_binder[playerid][4], 0xCCCC99FF, 20.0, 7000);
	}
	else if(clickedid == INFO[5])
	{
		for(new i; i < 18; i++) TextDrawHideForPlayer(playerid, INFO[i]);
		STRING_GLOBAL[0] = EOS;
		mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT `id` FROM "T_ACCOUNTS" WHERE `name` = '%s' LIMIT 1", GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "player_check", "i", playerid);
	}
	else if(clickedid == INFO[6])
	{
		for(new i; i < 18; i++) TextDrawHideForPlayer(playerid, INFO[i]);
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Предлагаем Вам окунуться в захватывающий интересом и возможностями мир\nролевой игры в GTA Criminal Russia по сети. Воплощая свои самые смелые идеи и мечты,\n Вы не сможете остановиться перед открывающимися возможностями.\n\
		Играя на нашем сервере "SERVER_NAME", Вы сможете полностью погрузиться в криминальный мир,\n где Вас будут ждать опаснейшие банды районов, захваты территорий,\n перестрелки с Полицией и многое другое. Так же, Вы сможете попробовать себя на стороне страже порядка,\n\
	 	работая в Полиции, ежедневно ловя правонарушителей и оберегая область от преступности. Всё зависит только от тебя!\n\n\
		Присоединяйтесь прямо сейчас!");
		ShowPlayerDialogEx(playerid, D_INFORMATION, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация", STRING_GLOBAL, "Понятно", "");
	}
	else if ( clickedid == td_performance [ 10 ] ) // engine
	{
		new _v_id = GetPlayerVehicleID ( playerid ) ;
		
		STRING_GLOBAL = "" ;
		new line_string [ 86 ] ;
		for ( new i ; i < 5 ; i ++ )
		{
			if ( VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ i ] )
			{
				format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", engine_ptune [ i ] ) ;
			}
			else 
			{
				format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", engine_ptune [ i ], engine_ptune_price [ i ]  ) ;
			}
			strcat ( STRING_GLOBAL, line_string ) ;
		}		
		ShowPlayerDialogEx ( playerid, d_tun_engine, DIALOG_STYLE_LIST, "{ebec86}>> Производительность двигателя", STRING_GLOBAL, "Купить", "Закрыть" ) ;
	}
	else if ( clickedid == td_performance [ 15 ] ) // brake
	{
		new _v_id = GetPlayerVehicleID ( playerid ) ;
		
		STRING_GLOBAL = "" ;
		new line_string [ 86 ] ;
		for ( new i ; i < 5 ; i ++ )
		{
			if ( VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ i ] )
			{
				format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", brake_ptune [ i ] ) ;
			}
			else
			{
				format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", brake_ptune [ i ], brake_ptune_price [ i ]  ) ;
			}
			strcat ( STRING_GLOBAL, line_string ) ;
		}		
		ShowPlayerDialogEx ( playerid, d_tun_brake, DIALOG_STYLE_LIST, "{ebec86}>> Тормозная система", STRING_GLOBAL, "Купить", "Закрыть" ) ;
	}
	else if ( clickedid == td_performance [ 20 ] ) // stability
	{
		new _v_id = GetPlayerVehicleID ( playerid ) ;
		
		STRING_GLOBAL = "" ;
		new line_string [ 86 ] ;
		for ( new i ; i < 5 ; i ++ )
		{
			if ( VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ i ] )
			{
				format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", stability_ptune [ i ] ) ;
			}
			else
			{
				format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", stability_ptune [ i ], stability_ptune_price [ i ] ) ;
			}
			strcat ( STRING_GLOBAL, line_string ) ;
		}		
		ShowPlayerDialogEx ( playerid, d_tun_stability, DIALOG_STYLE_LIST, "{ebec86}>> Усиление устойчивости", STRING_GLOBAL, "Купить", "Закрыть" ) ;
	}
	else if ( clickedid == td_performance [ 24 ] ) // exit
	{
		for ( new i = 0; i < 27; i ++ )
		{
			TextDrawHideForPlayer ( playerid, td_performance [ i ] ) ;
		}
		SetPlayerArmedWeapon ( playerid, 0 ) ;
		CancelSelectTextDraw ( playerid ) ;
		for ( new i = 0 ; i < 6 ; i ++ ) 
		{
			PlayerTextDrawDestroy ( playerid, ptd_performance [ playerid ] [ i ] ) ;
			ptd_performance [ playerid ] [ i ] = PlayerText:-1 ;
		}
		CancelSelectTextDraw ( playerid ) ;
		ShowDetals(playerid);
		DeletePVar ( playerid, "ptuning_opened" ) ;
 	}
	
	else if(clickedid == buy_numbers_car[16])
	{
 		for(new i; i < 30; i++) TextDrawHideForPlayer(playerid, buy_numbers_car[i]);
		PlayerTextDrawHide(playerid, buy_numbers_player_car[playerid]);
		CancelSelectTextDraw(playerid);

		DeletePVar(playerid, "N_CAR");
		DeletePVar(playerid, "NUMBER_CAR");

		SendErr(playerid, "Вы отказались от получения номерного знака");
   	}
	else if(clickedid == buy_numbers_car[14])
   	{
		new number[128], str[128];
        GetPVarString(playerid, "NUMBER_CAR", number, sizeof number);
		strmid(ownable_car[playerid][v_number], number, 0, strlen(number), 64);

		format(str, 128, "Вы получили гос.номера {FFFFFF}\"%s\" {0099FF}на свой транспорт %s", number, VehicleNames[GetVehicleModel(p_info[playerid][pOwnableCar])-400]);
		SendClientMessage(playerid, COLOR_BLUE, str);

		format(str, 128, "[НОМЕРА]: %s[%i] зарегистрировал номер на авто #%d [%s]", GetName(playerid), playerid, ownable_car[playerid][v_slot], number);
		foreach(new i: Player) if(IsADps(i)) SendClientMessage(i, COLOR_LIGHTBLUE, str);
		
		for(new i; i < 30; i++) TextDrawHideForPlayer(playerid, buy_numbers_car[i]);
		PlayerTextDrawHide(playerid, buy_numbers_player_car[playerid]);
		CancelSelectTextDraw(playerid);

		DeletePVar(playerid, "N_CAR");
		DeletePVar(playerid, "NUMBER_CAR");

		GiveMoney(playerid, -5000, "Покупка номеров");
		
		if(ownable_car_label[p_info[playerid][pOwnableCar]] != Text3D:INVALID_3DTEXT_ID)
		{
		    new string[128];
			format(string, sizeof(string), "", ownable_car[playerid][v_number]);//Номера: {ebec86}%s
		    UpdateDynamic3DTextLabelText(ownable_car_label[p_info[playerid][pOwnableCar]], 0xFFFFFFFF, string);
		}

		SetVehicleNumberPlate(p_info[playerid][pOwnableCar], ownable_car[playerid][v_number]);

		format(number, sizeof number, "UPDATE ownable_cars SET number='%s' WHERE id=%d", ownable_car[playerid][v_number], ownable_car[playerid][v_sql]);
		mysql_query(dbHandle, number);
	}
	else if(clickedid == promocode_td[21])
	{
		for(new i; i < sizeof promocode_td; i ++) TextDrawHideForPlayer(playerid, promocode_td[i]);

		CancelSelectTextDraw(playerid);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[10])
	{
		SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_KISS);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[11])
	{
		SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_HI);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[12])
	{
		SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_HUG);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[13])
	{
		new rows;
		new fmt_query[90];
		new Cache: result;

		mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
		result = mysql_query(dbHandle, fmt_query);

		rows = cache_num_rows();

		if(!rows)
		return SendErr(playerid, "У Вас нет личного транспорта"), cache_delete(result);

		if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID)
		return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");
		
		if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи авто нужно отыграть 3 часа");

		ShowPlayerDialogEx
		(
		playerid, DIALOG_INTERACTION_SELL_CAR, DIALOG_STYLE_INPUT,
		"{ebec86}>> Продажа личного ТС",
		"{ffffff}Введите сумму, за которую хотите продать своё ТС:",
		"Продать", "Отмена"
		);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[14])
	{
		if(GetPlayerHouse(playerid) == 0)
		return SendErr(playerid, "У Вас нет дома");
		
		if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи дома нужно отыграть 3 часа");

		ShowPlayerDialogEx
		(
		playerid, DIALOG_INTERACTION_SELL_HOUSE, DIALOG_STYLE_INPUT,
		"{ebec86}>> Продажа дома",
		"{ffffff}Введите сумму, за которую хотите продать свой дом:",
		"Продать", "Отмена"
		);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[15])
	{
		if(GetPlayerBizz(playerid) == 0)
		return SendErr(playerid, "У Вас нет бизнеса");
		
		if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи бизнеса нужно отыграть 3 часа");

  		ShowPlayerDialogEx
		(
		playerid, DIALOG_INTERACTION_SELL_BIZ, DIALOG_STYLE_INPUT,
		"{ebec86}>> Продажа бизнеса",
		"{ffffff}Введите сумму, за которую хотите продать свой бизнес:",
		"Продать", "Отмена"
		);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[16])
	{
		SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_SHOW_LIC);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[17])
	{
		if(p_info[playerid][data_PASS] == 0)
		return SendClientMessage(playerid, C_RED, "У Вас нет паспорта");

		SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_SHOW_PASS);
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[18])
	{
		SendClientMessage(playerid, C_RED, "Временно недоступно");
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[48])
	{
		SendClientMessage(playerid, C_RED, "Временно недоступно");
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[49])
	{
		CancelSelectTextDraw(playerid);

		for(new i = 0; i < 59; i ++) TextDrawHideForPlayer(playerid, TDEditor_INTERACTION_GLOBAL[i]);
		for(new i = 0; i < 10; i ++) PlayerTextDrawHide(playerid, TDEditor_INTERACTION_PLAYER[playerid][i]);

		CancelSelectTextDraw(playerid);

		p_info[playerid][pInteractionPlayer] = -1;
	}
	else if(clickedid == TDEditor_INTERACTION_GLOBAL[55])
	{
		ShowPlayerDialogEx
		(
		playerid, DIALOG_INTERACTION_MONEY, DIALOG_STYLE_INPUT,
		"{ebec86}>> Передать деньги",
		"{ffffff}Введите количество денег, которых хотите передать игроку:",
		"Передать", "Отмена"
		);
	}
	if(clickedid == TDn[2])
    {
        if(helpstr[playerid] == 2)
        {
            InterpolateCameraPos(playerid, 2390.7952, -2007.6412, 58.8942, 2409.9148, -1888.9915, 43.3149, 3000);
            InterpolateCameraLookAt(playerid, 2390.4409, -2006.7015, 58.5443, 2409.9507, -1887.9878, 42.9500, 3000);
            helpstr[playerid] = 3;
            SendClientMessage(playerid, COLOR_RED, "Администрация: {FFFFFF}Это администрация города,тут вы можете получить паспорт.");
            return true;
        }
        if(helpstr[playerid] == 3)
        {
            InterpolateCameraPos(playerid, 2409.9148, -1888.9915, 43.3149, 1870.2050, 2257.8423, 46.2526, 3000);
            InterpolateCameraLookAt(playerid, 2409.9507, -1887.9878, 42.9500, 1871.0803, 2257.3496, 45.6427, 3000);
            SendClientMessage(playerid, COLOR_RED, "Автошкола: {FFFFFF}В Автошколе вы можете получить права для управления т/с.");
            helpstr[playerid] = 4;
            return true;
        }
        if(helpstr[playerid] == 4)
        {
            InterpolateCameraPos(playerid, 1447.903320, -1726.964477, 32.496509, 1469.320922, -1675.127197, 87.748100, 3000);
            InterpolateCameraLookAt(playerid, 1444.232910, -1723.776733, 31.327733, 1473.479614, -1675.337280, 84.980209, 3000);
            SendClientMessage(playerid, COLOR_RED, "Автосалон: {FFFFFF}В Автосалоне вы сможете купить необходимый т/c для езды.");
            helpstr[playerid] = 5;
            return true;
        }
        if(helpstr[playerid] == 5)
        {
            InterpolateCameraPos(playerid, 1469.320922, -1675.127197, 87.748100, 528.857116, -1248.191528, 50.745262, 2000);
            InterpolateCameraLookAt(playerid, 1473.479614, -1675.337280, 84.980209, 530.423950, -1251.845458, 47.713111, 2000);
            SendClientMessage(playerid, COLOR_RED, "Больница: {FFFFFF}Чтобы вылечиться вам нужно посетить врачей.");
            helpstr[playerid] = 6;
            return true;
        }
        if(helpstr[playerid] == 6)
        {
            InterpolateCameraPos(playerid, 528.857116, -1248.191528, 50.745262, -250.773406, -1332.337646, 56.878238, 2000);
            InterpolateCameraLookAt(playerid, 530.423950, -1251.845458, 47.713111, -254.956741, -1334.894165, 55.896381, 2000);
            SendClientMessage(playerid, COLOR_RED, "Заработать деньги: {FFFFFF}Чтобы заработать деньги вам необходимо устроиться на подработки.");
            helpstr[playerid] = 7;
            return true;
        }
        if(helpstr[playerid] == 7)
        {
            InterpolateCameraPos(playerid, -250.773406, -1332.337646, 56.878238, -183.255798, -450.983062, 84.151458, 3000);
            InterpolateCameraLookAt(playerid, -254.956741, -1334.894165, 55.896381, -180.627975, -447.175506, 82.254852, 3000);
            SendClientMessage(playerid, COLOR_RED, "Армия: {FFFFFF}Чтобы освоить навыки стрельбы,вы можете отдать долг родине в армии.");
            helpstr[playerid] = 8;
            return true;
        }
        if(helpstr[playerid] == 8)
        {
            InterpolateCameraPos(playerid, -183.255798, -450.983062, 84.151458, -1720.713012, -1719.199707, 104.517898, 2000);
            InterpolateCameraLookAt(playerid, -180.627975, -447.175506, 82.254852, -1724.755737, -1717.829101, 101.914459, 2000);
            SendClientMessage(playerid, COLOR_RED, "ОПГ: {FFFFFF}В нашем городе также есть приступные организации.");
            helpstr[playerid] = 9;
            return true;
        }
        if(helpstr[playerid] == 9)
        {
            SendClientMessage(playerid, COLOR_GREEN, "Желаю тебе удачи!");
            helpstr[playerid] = 1;
            for(new i; i < 3; i++) TextDrawHideForPlayer(playerid, TDn[i]);
            TogglePlayerSpectating(playerid, 0);
            SetCameraBehindPlayer(playerid);
            CancelSelectTextDraw(playerid);
            return true;
        }
    }
	/////////////////////////////////////////////////////////////////////////////
	for(new i = 0; i < 48; i++)
	{
 		if(clickedid == AutoSalon_Color[i])
	 	{
   			if(GetPVarInt(playerid,"as_color") == 0) colors[playerid][0] = color_veh[i][ciCar];
		    else colors[playerid][1] = color_veh[i][ciCar];
		    ChangeVehicleColor(p_info[playerid][SalonCarID], colors[playerid][0], colors[playerid][1]);
		    return 1;
   		}
	}
    if(clickedid == AutoSalon_ButtonColor[0]) SetPVarInt(playerid,"as_color",0);
    else if(clickedid == AutoSalon_ButtonColor[1]) SetPVarInt(playerid,"as_color",1);
    else if(clickedid == AutoSalon_Button[0])
    {
        if(InShop[playerid] == 1)
        {
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Вы хотите приобрести %s за %i рублей?",VehicleNames[GetVehicleModel(p_info[playerid][SalonCarID])-400],carsC[pPressed[playerid]][1]*WorkSalary[7]);
			ShowPlayerDialogEx(playerid, D_JOINCARS+4, DIALOG_STYLE_MSGBOX, "{ebec86}>> Купить транспорт", STRING_GLOBAL, "Да", "Нет");
		}
		else
		{
		    if(p_info[playerid][pLevel] < 7) return SendClientMessage(playerid, C_RED, "Покупать вертолет можно с 7 уровня");

			if(GetMoney(playerid) < copter_cars[pPressed[playerid]][copCost]*WorkSalary[7]) return SendErr(playerid, "У Вас недостаточно денег");

			new rows;
			new fmt_query[260];
			new Cache: result;

			mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM copters WHERE owner_name='%s'", GetName(playerid));
			result = mysql_query(dbHandle, fmt_query);

			rows = cache_num_rows();

			if(rows)
			return SendErr(playerid, "У Вас есть личный вертолет"), cache_delete(result);

			GiveMoney(playerid, -copter_cars[pPressed[playerid]][copCost]*WorkSalary[7], "Покупка вертолета");

			SendClientMessage(playerid, COLOR_RED, "Вы успешно приобрели вертолет.");
			SendClientMessage(playerid, COLOR_RED, "Загрузить его можно с помощью команды: /fixcopter");
			
			DestroyVehicle(p_info[playerid][SalonCarID]);
			p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;

			HideAutoSalonMenu(playerid);
			CancelSelectTextDraw(playerid);
			InShop[playerid] = 0;
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, -44.1234,922.3990,12.0000);
			SetPlayerFacingAngle(playerid, 180.0);
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);

			new idx = random(10);

			mysql_format(dbHandle, fmt_query, sizeof fmt_query, "INSERT INTO copters (owner_name, copter_id, copter_color1, copter_color2, pos_x, pos_y, pos_z, pos_r) VALUES ('%s', '%d', '%d', '%d', '%f', '%f', '%f', '0.0')", GetName(playerid), copter_cars[pPressed[playerid]][copID], colors[playerid][0], colors[playerid][1], coord_copter_spawn[idx][0], coord_copter_spawn[idx][1], coord_copter_spawn[idx][2]);
			mysql_query(dbHandle, fmt_query);

			pPressed[playerid] = 0;
		}
	}
    else if(clickedid == AutoSalon_Button[1])
    {
	   	if((GetTickCount() - PlayerLastTick[playerid]) < 1000) return 1;
		pPressed[playerid]--;
		if(InShop[playerid] == 1)
		{
			DestroyVehicle(p_info[playerid][SalonCarID]);
			p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
			if(InShop[playerid] == 1)
			{
				if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(carsC)-1;
				p_info[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],-358.8557, 379.5386, 1002.1083, -121.3799, 0, 0, 10000);
				new info2[50],info3[50];
				format(info2,sizeof(info2),"ЦЕНА: %d РУБЛЕЙ",carsC[pPressed[playerid]][1]*WorkSalary[7]);
				format(info3,sizeof(info3),"НАЗВАНИЕ: %s",VehicleNames[carsC[pPressed[playerid]][0]-400]);

			    PlayerTextDrawSetString(playerid,AutoSalon_Stats[playerid][0],info2);
			    PlayerTextDrawSetString(playerid,AutoSalon_Stats[playerid][1],info3);
			}
			PlayerLastTick[playerid] = GetTickCount();
			LinkVehicleToInterior(p_info[playerid][SalonCarID],3);
			SetVehicleVirtualWorld(p_info[playerid][SalonCarID],playerid);
			PutPlayerInVehicle(playerid,p_info[playerid][SalonCarID],0);
			SetPlayerCameraPos(playerid, -353.6695, 372.8126, 1004.4951);
			SetPlayerCameraLookAt(playerid, -354.3768, 373.5177, 1004.3055);
		}
		else
		{
			DestroyVehicle(p_info[playerid][SalonCarID]);
			p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;

			if(pPressed[playerid] < 0) pPressed[playerid] = sizeof(copter_cars)-1;

			p_info[playerid][SalonCarID] = CreateVehicle(copter_cars[pPressed[playerid]][copID],2339.5859, -1780.8318, 33.201,-139.0800, 0, 0, 10000);
			PlayerLastTick[playerid] = GetTickCount();
			SetVehicleVirtualWorld(p_info[playerid][SalonCarID],playerid);
			PutPlayerInVehicle(playerid,p_info[playerid][SalonCarID],0);
			SetPlayerCameraPos(playerid, 2360.9397, -1781.4974, 38.2566);
			SetPlayerCameraLookAt(playerid, 2359.9360, -1781.4890, 38.0713);
			
			new info2[50],info3[50];
			format(info2,sizeof(info2),"ЦЕНА: %d РУБЛЕЙ",copter_cars[pPressed[playerid]][copCost]*WorkSalary[7]);
			format(info3,sizeof(info3),"НАЗВАНИЕ: %s",VehicleNames[copter_cars[pPressed[playerid]][copID]-400]);

		    PlayerTextDrawSetString(playerid,AutoSalon_Stats[playerid][0],info2);
		    PlayerTextDrawSetString(playerid,AutoSalon_Stats[playerid][1],info3);
		}
	}
    else if(clickedid == AutoSalon_Button[2])
    {
	   	if((GetTickCount() - PlayerLastTick[playerid]) < 1000) return 1;
		pPressed[playerid]++;
		if(InShop[playerid] == 1)
		{
			DestroyVehicle(p_info[playerid][SalonCarID]);
			p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
			if(InShop[playerid] == 1)
			{
				if(pPressed[playerid] > sizeof(carsC)-1) pPressed[playerid] = 0;
				p_info[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],-358.8557, 379.5386, 1002.1083, -121.3799, 0, 0, 10000);
				new info2[50],info3[50];
				format(info2,sizeof(info2),"ЦЕНА: %d РУБЛЕЙ",carsC[pPressed[playerid]][1]*WorkSalary[7]);
				format(info3,sizeof(info3),"НАЗВАНИЕ: %s",VehicleNames[carsC[pPressed[playerid]][0]-400]);

			    PlayerTextDrawSetString(playerid,AutoSalon_Stats[playerid][0],info2);
			    PlayerTextDrawSetString(playerid,AutoSalon_Stats[playerid][1],info3);
			}
			PlayerLastTick[playerid] = GetTickCount();
			LinkVehicleToInterior(p_info[playerid][SalonCarID],3);
			SetVehicleVirtualWorld(p_info[playerid][SalonCarID],playerid);
			PutPlayerInVehicle(playerid,p_info[playerid][SalonCarID],0);
			SetPlayerCameraPos(playerid, -353.6695, 372.8126, 1004.4951);
			SetPlayerCameraLookAt(playerid, -354.3768, 373.5177, 1004.3055);
		}
		else
		{
			DestroyVehicle(p_info[playerid][SalonCarID]);
			p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
			if(pPressed[playerid] >= 3) pPressed[playerid] = 0;
			p_info[playerid][SalonCarID] = CreateVehicle(copter_cars[pPressed[playerid]][copID],2339.5859, -1780.8318, 33.201,-139.0800, 0, 0, 10000);
			PlayerLastTick[playerid] = GetTickCount();
			SetVehicleVirtualWorld(p_info[playerid][SalonCarID],playerid);
			PutPlayerInVehicle(playerid,p_info[playerid][SalonCarID],0);
			SetPlayerCameraPos(playerid, 2360.9397, -1781.4974, 38.2566);
			SetPlayerCameraLookAt(playerid, 2359.9360, -1781.4890, 38.0713);
			new info2[50],info3[50];
			format(info2,sizeof(info2),"ЦЕНА: %d РУБЛЕЙ",copter_cars[pPressed[playerid]][copCost]*WorkSalary[7]);
			format(info3,sizeof(info3),"НАЗВАНИЕ: %s",VehicleNames[copter_cars[pPressed[playerid]][copID]-400]);

		    PlayerTextDrawSetString(playerid,AutoSalon_Stats[playerid][0],info2);
		    PlayerTextDrawSetString(playerid,AutoSalon_Stats[playerid][1],info3);
		}
	}
	else if(GetPVarInt(playerid, "EnterChooseSkin") == 2)
	{
	    SetPVarInt(playerid, "MaxSkins", -1);
	    for(new i; i != 5; ++i)
	    {
	       	GivePVarInt(playerid, "MaxSkins", 1);
	    }
	    if(clickedid == TD_Clothes[3])
		{
		    if(GetPVarInt(playerid, "ClosetSkinNext") == GetPVarInt(playerid, "MaxSkins")) SetPVarInt(playerid, "ClosetSkinNext", 0);
			else GivePVarInt(playerid, "ClosetSkinNext", 1);
		    if(ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")] == 0)
		    {
				SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
		    }
		    else
		    {
				SetPlayerSkin(playerid, ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")]);
			}
			
			new string[32];
			format(string, sizeof(string), "ПОЛКА %d", GetPVarInt(playerid, "ClosetSkinNext")+1);
			PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], string);
		}
		else if(clickedid == TD_Clothes[2])
		{
			if(!GetPVarInt(playerid, "ClosetSkinNext")) SetPVarInt(playerid, "ClosetSkinNext", GetPVarInt(playerid, "ClosetSkinNext"));
			else GivePVarInt(playerid, "ClosetSkinNext", -1);
		    if(ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")] == 0)
		    {
				SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
		    }
		    else
		    {
				SetPlayerSkin(playerid, ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")]);
			}
				
			new string[32];
			format(string, sizeof(string), "ПОЛКА %d", GetPVarInt(playerid, "ClosetSkinNext")+1);
			PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], string);
		}
		else if(clickedid == TD_Clothes[1])
		{
		    ShowPlayerDialogEx(playerid, 1133, DIALOG_STYLE_MSGBOX, "{ebec86}>> Продажа одежды", "{FFFFFF}Вы действительно хотите продать эту одежду?\nСтоимость продажи: {f0e86b}100{FFFFFF} рублей", "Продать", "Выйти");
		}
		else if(clickedid == TD_Clothes[0])
		{
	    	SetPVarInt(playerid, "EnterSkin", ClosetSkins[playerid][0]);
	    	if(ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")] == 0)
			{
			    SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
			    
			    for(new i = 0; i < 9; i++)
				{
				    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
				}
				PlayerTextDrawHide(playerid,PTD_Clothes[playerid]);
				CancelSelectTextDraw(playerid);

				DeletePVar(playerid, "EnterChooseSkin");

				SetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);

				SetPlayerVirtualWorld(playerid, Virt_ar[playerid]);
				SetPlayerInterior(playerid, Int_ar[playerid]);
			}
			else
			{
			    ClosetSkins[playerid][0] = ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")];
			    ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")] = GetPVarInt(playerid, "EnterSkin");
			    MysqlUpdatePlayerInt(playerid, "Skin", ClosetSkins[playerid][0]);
			    MysqlUpdatePlayerInt(playerid, "Skin2", ClosetSkins[playerid][1]);
			    MysqlUpdatePlayerInt(playerid, "Skin3", ClosetSkins[playerid][2]);
			    MysqlUpdatePlayerInt(playerid, "Skin4", ClosetSkins[playerid][3]);
			    MysqlUpdatePlayerInt(playerid, "Skin5", ClosetSkins[playerid][4]);
		 		SetPVarInt(playerid, "ClosetSkinNext", -1);

				for(new i = 0; i < 9; i++)
				{
				    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
				}
				PlayerTextDrawHide(playerid,PTD_Clothes[playerid]);
				CancelSelectTextDraw(playerid);

				DeletePVar(playerid, "EnterChooseSkin");

				SetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);

				SetPlayerVirtualWorld(playerid, Virt_ar[playerid]);
				SetPlayerInterior(playerid, Int_ar[playerid]);
			}
		}
	}
	else if(GetPVarInt(playerid, "EnterChooseSkin") == 3)
	{
	    SetPVarInt(playerid, "MaxSkins", -1);
     	for(new i; i < 8; i++)
     	{
	        GivePVarInt(playerid, "MaxSkins", 1);
	    }
	    if(clickedid == TD_Clothes[3])
		{
			if(GetPVarInt(playerid, "ClosetWorkSkinNext") == GetPVarInt(playerid, "MaxSkins")) SetPVarInt(playerid, "ClosetWorkSkinNext", 0);
			else GivePVarInt(playerid, "ClosetWorkSkinNext", 1);
			if(Fraction_Skin[p_info[playerid][pMember]][GetPVarInt(playerid, "ClosetWorkSkinNext")] == 0)
		    {
				SetPlayerSkin(playerid, Fraction_Skin[p_info[playerid][pMember]][0]);
		    }
		    else
		    {
				SetPlayerSkin(playerid, Fraction_Skin[p_info[playerid][pMember]][GetPVarInt(playerid, "ClosetWorkSkinNext")]);
			}

			new string[32];
			format(string, sizeof(string), "ПОЛКА %d", GetPVarInt(playerid, "ClosetWorkSkinNext")+1);
			PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], string);
		}
		else if(clickedid == TD_Clothes[2])
		{
			if(!GetPVarInt(playerid, "ClosetWorkSkinNext")) SetPVarInt(playerid, "ClosetWorkSkinNext", GetPVarInt(playerid, "MaxSkins"));
			else GivePVarInt(playerid, "ClosetWorkSkinNext", -1);
    		if(Fraction_Skin[p_info[playerid][pMember]][GetPVarInt(playerid, "ClosetWorkSkinNext")] == 0)
		    {
				SetPlayerSkin(playerid, Fraction_Skin[p_info[playerid][pMember]][0]);
		    }
		    else
		    {
				SetPlayerSkin(playerid, Fraction_Skin[p_info[playerid][pMember]][GetPVarInt(playerid, "ClosetWorkSkinNext")]);
			}

			new string[32];
			format(string, sizeof(string), "ПОЛКА %d", GetPVarInt(playerid, "ClosetWorkSkinNext")+1);
			PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], string);
		}
		else if(clickedid == TD_Clothes[1])
		{
            for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			PlayerTextDrawHide(playerid,PTD_Clothes[playerid]);
			CancelSelectTextDraw(playerid);
			
			DeletePVar(playerid, "EnterChooseSkin");
			
			SetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);

			SetPlayerVirtualWorld(playerid, Virt_ar[playerid]);
			SetPlayerInterior(playerid, Int_ar[playerid]);
		}
		else if(clickedid == TD_Clothes[0])
		{
	  		p_info[playerid][pMemberSkin] = Fraction_Skin[p_info[playerid][pMember]][GetPVarInt(playerid, "ClosetWorkSkinNext")];
			MysqlUpdatePlayerInt(playerid, "memberskin", p_info[playerid][pMemberSkin]);

		 	SetPVarInt(playerid, "ClosetWorkSkinNext", -1);
		 	
		 	DeletePVar(playerid, "EnterChooseSkin");

			for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			PlayerTextDrawHide(playerid,PTD_Clothes[playerid]);

			CancelSelectTextDraw(playerid);
			
			SetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);

			SetPlayerVirtualWorld(playerid, Virt_ar[playerid]);
			SetPlayerInterior(playerid, Int_ar[playerid]);
		}
	}
	else if(ClothesRound[playerid] == 2)
	{
		new string[170];
		new b = GetPVarInt(playerid, "PlayerBizz");
		if(clickedid == TD_Clothes[3])
		{
			if(p_info[playerid][pSex] == 1)
			{
				if(SelectCharPlace[playerid] == sizeof(JoinShopM)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
				format(string, sizeof(string), "%d РУБ", JoinShopM[SelectCharPlace[playerid]][1]*BizzInfo[b][bTill]);
				PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], string);
			}
			else
			{
				if(SelectCharPlace[playerid] == sizeof(JoinShopF)-1) SelectCharPlace[playerid] = 0;
				else SelectCharPlace[playerid]++;
				SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
				format(string, sizeof(string), "%d РУБ", JoinShopF[SelectCharPlace[playerid]][1]*BizzInfo[b][bTill]);
				PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], string);
			}
		}
		else if(clickedid == TD_Clothes[2])
		{
			if(p_info[playerid][pSex] == 1)
			{
				if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinShopM)-1;
				else SelectCharPlace[playerid]--;
				SetPlayerSkin(playerid, JoinShopM[SelectCharPlace[playerid]][0]);
				format(string, sizeof(string), "%d РУБ", JoinShopM[SelectCharPlace[playerid]][1]*BizzInfo[b][bTill]);
				PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], string);
			}
			else
			{
				if(SelectCharPlace[playerid] == 0) SelectCharPlace[playerid] = sizeof(JoinShopF)-1;
				else SelectCharPlace[playerid]--;
				SetPlayerSkin(playerid, JoinShopF[SelectCharPlace[playerid]][0]);
				format(string, sizeof(string), "%d РУБ", JoinShopF[SelectCharPlace[playerid]][1]*BizzInfo[b][bTill]);
				PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], string);
			}
		}
		else if(clickedid == TD_Clothes[1])
		{
			TogglePlayerControllable(playerid,true);
			SetPlayerPos(playerid, -917.3503,1210.6248,1002.0000);
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
			SetPlayerInterior(playerid, 5);
			InShopSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
			for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			PlayerTextDrawHide(playerid, PTD_Clothes[playerid]);
			CancelSelectTextDraw(playerid);
			
			acc_td_status(playerid, false);
		}
		else if(clickedid == TD_Clothes[0])
		{
			new price = (p_info[playerid][pSex] == 1) ? (JoinShopM[SelectCharPlace[playerid]][1]) : (JoinShopF[SelectCharPlace[playerid]][1]);
			if(GetMoney(playerid) < price) return SendErr(playerid, "Недостаточно средств на счету");

			GiveMoney(playerid, -price, "Покупка одежды");
			if(BizzInfo[b][bProduct] > 0)
			{
				BizzInfo[b][bMoneyHour] += price / 4;
				BizzPay[b] += price / 4;
				BizzInfo[b][bProduct] -= price / 16;
				MysqlUpdateBizzInt(b, "product", BizzInfo[b][bProduct]);
				MysqlUpdateBizzInt(b, "bizzpay", BizzPay[b]);
			}
			TogglePlayerControllable(playerid,true);
			SetPlayerPos(playerid, -917.3503,1210.6248,1002.0000);
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerVirtualWorld(playerid, InShopSkin[playerid]);
			SetPlayerInterior(playerid, 5);
			InShopSkin[playerid] = 0;
			SelectCharPlace[playerid] = 0;
			ClothesRound[playerid] = 0;
			SetCameraBehindPlayer(playerid);
			new house12 = 0;
			for(new i = TOTALHOUSE; i > 0; i --)
			{
				if(!strcmp(HouseInfo[i][hOwner],GetName(playerid),true)) house12++;
			}
			new house13 = 0;
			for(new i = TOTALROOMS; i > 0; i --)
			{
				if(!strcmp(RoomsInfo[i][rOwner],GetName(playerid),true)) house13++;
			}
			if(!house12 && !house13)
			{
			    ClosetSkins[playerid][0] = GetPlayerSkin(playerid);
	      		MysqlUpdatePlayerInt(playerid, "Skin", ClosetSkins[playerid][0]);
	      		SendInf(playerid, "Вы преобрели новую одежду");
	      		
	      		SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
			}
			else
			{
				SendInf(playerid, "Вы преобрели новую одежду. Она появится в вашем гардеробе");
				for(new A; A != 5; A++)
			    {
			        if(ClosetSkins[playerid][A] == 0)
					{
				 		ClosetSkins[playerid][A] = GetPlayerSkin(playerid);
				 		
				 		SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
				 		
				 		MysqlUpdatePlayerInt(playerid, "Skin", ClosetSkins[playerid][0]);
					    MysqlUpdatePlayerInt(playerid, "Skin2", ClosetSkins[playerid][1]);
					    MysqlUpdatePlayerInt(playerid, "Skin3", ClosetSkins[playerid][2]);
					    MysqlUpdatePlayerInt(playerid, "Skin4", ClosetSkins[playerid][3]);
					    MysqlUpdatePlayerInt(playerid, "Skin5", ClosetSkins[playerid][4]);
				 		break;
					}
			    }
			}
			for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			PlayerTextDrawHide(playerid,PTD_Clothes[playerid]);
			
			CancelSelectTextDraw(playerid);
			
			acc_td_status(playerid, false);
		}
	}
	if(GetPVarInt(playerid, "chose_player"))
	{
		new count = GetPVarInt(playerid, "chose_count");
		new ds_gender1 = GetPVarInt(playerid, "reg_gender");
		new ds_race1 = GetPVarInt(playerid, "reg_race");
		if(clickedid == TD_Clothes[3])
		{
			if((count+1) >= 6) return 1;
			if(gRegSkins[ds_race1-1][ds_gender1][(count+1)] == 0) return 1;

			SetPlayerSkin(playerid,gRegSkins[ds_race1-1][ds_gender1][(count+1)]);
			SetPVarInt(playerid,"chose_count",(count+1));
		}
		else if(clickedid == TD_Clothes[2])
		{
			if(count <= 0) return 1;

			SetPlayerSkin(playerid,gRegSkins[ds_race1-1][ds_gender1][(count-1)]);
			SetPVarInt(playerid,"chose_count",(count-1));
		}
		else if(clickedid == TD_Clothes[0])
		{
      		CancelSelectTextDraw(playerid);
			for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}

			DeletePVar(playerid,"chose_player");
			DeletePVar(playerid,"chose_count");

			ClosetSkins[playerid][0] = GetPlayerSkin(playerid);
			
			SetPVarInt ( playerid, "reg_skin", GetPlayerSkin(playerid) ) ;

			new dialog_string [ 300 ] ;
			new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
			GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
			GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
			GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
			ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
			ds_race = GetPVarInt ( playerid, "reg_race" ) ;
			ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

			format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{F7B32C}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
			if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
			else format ( dialog_string, sizeof ( dialog_string ),"%s{F7B32C}Продолжить регистрацию", dialog_string ) ;
			ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
			return 1;
		}
		else if(clickedid == TD_Clothes[1] || Text:INVALID_TEXT_DRAW)
		{
		    CancelSelectTextDraw(playerid);
		    for(new i = 0; i < 9; i++)
			{
			    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
			}
			SendErr(playerid, "Вы отменили регистрацию");

			DeletePVar(playerid, "chose_player");
			DeletePVar(playerid, "chose_count");
			Kick(playerid);
		}
	}
	else if(clickedid == passport_text[12])
	{
 		for(new i; i < 14; i++) TextDrawHideForPlayer(playerid, passport_text[i]);
   		PlayerTextDrawHide(playerid, passport_name[playerid]);
     	PlayerTextDrawHide(playerid, passport_sex[playerid]);
      	PlayerTextDrawHide(playerid, passport_s_n[playerid]);
       	PlayerTextDrawHide(playerid, passport_info[playerid]);
       	DeletePVar(playerid, "showpass");
        CancelSelectTextDraw(playerid);
	}
	else if(idaofcar[playerid] != 0)
	{
	    if(_:clickedid == INVALID_TEXT_DRAW)
	    {
	        new Float:tX=GetPVarFloat(playerid,"oldtrunkcamposx");
	        new Float:tY=GetPVarFloat(playerid,"oldtrunkcamposy");
	        new Float:tZ=GetPVarFloat(playerid,"oldtrunkcamposz");
	        new Float:tX2=GetPVarFloat(playerid,"oldtrunkcamposx2");
	        new Float:tY2=GetPVarFloat(playerid,"oldtrunkcamposy2");
	        new Float:tZ2=GetPVarFloat(playerid,"oldtrunkcamposz2");
     		new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
			GetPlayerCameraPos(playerid,x,y,z);
			InterpolateCameraPos(playerid,x,y,z,tX,tY,tZ,1500,CAMERA_MOVE);
			GetPlayerCameraFrontVector(playerid,x2,y2,z2);
			InterpolateCameraLookAt(playerid,x + x2,y + y2,z + z2,tX2,tY2,tZ2,1500,CAMERA_MOVE);
			SetTimerEx("SetCameraBehindPlayerDelay",2000,0,"i",playerid);
			GetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
		    SetVehicleParamsEx(idaofcar[playerid], engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_OFF, objective);
	        idaofcar[playerid] = 0;
	        Hunger(playerid);
	        for(new tr = 0; tr < 22; tr++) TextDrawHideForPlayer(playerid, trunk_ball[tr]);
	        DeletePVar(playerid,"oldtrunkcamposx");
	        DeletePVar(playerid,"oldtrunkcamposy");
	        DeletePVar(playerid,"oldtrunkcamposz");
	        DeletePVar(playerid,"oldtrunkcamposx2");
	        DeletePVar(playerid,"oldtrunkcamposy2");
	        DeletePVar(playerid,"oldtrunkcamposz2");
	    }
	    else if(clickedid==trunk_ball[14])ShowDialogTrunk(playerid,1);
	    else if(clickedid==trunk_ball[15])ShowDialogTrunk(playerid,2);
	    else if(clickedid==trunk_ball[16])ShowDialogTrunk(playerid,3);
	    else if(clickedid==trunk_ball[17])ShowDialogTrunk(playerid,4);
	    else if(clickedid==trunk_ball[18])ShowDialogTrunk(playerid,5);
 	   	else if(clickedid==trunk_ball[19])ShowDialogTrunk(playerid,6);
	    else if(clickedid==trunk_ball[20])ShowDialogTrunk(playerid,7);
	    else if(clickedid==trunk_ball[21])
	    {
	        if ( idaofcar[playerid] == p_info[playerid][pOwnableCar] || VehInfo[idaofcar[playerid]][vFraction] == p_info[playerid][pMember] || VehInfo[idaofcar[playerid]][vFamily] == p_info[playerid][pFamily] )
	        {
				ShowPlayerDialogEx(playerid, D_NULL, 0,"  ",( TrunkInfo [idaofcar[playerid]][tOpen] != true ) ? ("{FF6347}Вы закрыли багажник для игроков") : ("{f0e86b}Вы открыли багажник для игроков"),"Принять","");
				TrunkInfo [idaofcar[playerid]][tOpen]=( TrunkInfo [idaofcar[playerid]][tOpen] != true ) ? (true) : (false);
				UpdateTDOpenCloseTrunk(playerid,idaofcar[playerid]);
			}
	    }
	}
	else if(GetPVarInt(playerid, "fuel_show"))
	{
		if(clickedid == TD_Fuel[7] || clickedid == Text:INVALID_TEXT_DRAW)
		{
			DeletePVar(playerid,"td_step");
			TD_EndFuel(playerid);
		}
		if(clickedid == TD_Fuel[3])
		{
			new step = GetPVarInt(playerid,"td_step");
			new Float:size_td = GetPVarFloat(playerid,"td_fuel");
			if(size_td >= 422.0) return 1;

			PlayerTextDrawHide(playerid,PTD_Fuel[playerid][0]);
			PlayerTextDrawTextSize(playerid,PTD_Fuel[playerid][0], size_td+10.5, 0.0);
			PlayerTextDrawShow(playerid,PTD_Fuel[playerid][0]);

			SetPVarFloat(playerid,"td_fuel",size_td+10.5);
			SetPVarInt(playerid,"td_step", step+1);

			format(STRING_GLOBAL, 128, "%.1f FUEL", (step+1) * 5.0);
			PlayerTextDrawSetString(playerid,PTD_Fuel[playerid][1], STRING_GLOBAL);
		}
		if(clickedid == TD_Fuel[2])
		{
			new step = GetPVarInt(playerid,"td_step");
			new Float:size_td = GetPVarFloat(playerid,"td_fuel");
			if(size_td <= 212.0) return 1;
			if(step <= GetPVarInt(playerid,"start_step")) return 1;

			PlayerTextDrawHide(playerid,PTD_Fuel[playerid][0]);
			PlayerTextDrawTextSize(playerid,PTD_Fuel[playerid][0], size_td-10.5, 0.0);
			PlayerTextDrawShow(playerid,PTD_Fuel[playerid][0]);

			SetPVarFloat(playerid,"td_fuel",size_td-10.5);
			SetPVarInt(playerid,"td_step", step-1);

			format(STRING_GLOBAL, 128, "%.1f FUEL", (step-1) * 5.0);
			PlayerTextDrawSetString(playerid,PTD_Fuel[playerid][1], STRING_GLOBAL);
		}
		if(clickedid == TD_Fuel[6])
		{
		    new i = GetPVarInt(playerid, "FuelBizzID");
			new step = GetPVarInt(playerid,"td_step");
			new Float:cfuel = GetPVarFloat(playerid,"start_fuel");
			if(((step * 5)-floatround(cfuel)) <= 1) return SendErr(playerid, "Вы не выбрали на сколько хотите заправиться");
		    format(STRING_GLOBAL, 128, "{ffffff}Вы действительно хотите заправиться на {f0e86b}%d{ffffff} литров?\nСтоимость: {f0e86b}%d{ffffff} рублей",
			((step * 5)-floatround(cfuel)),((step * 5)-floatround(cfuel)) * BizzInfo[i][bTill]*WorkSalary[15]);
			ShowPlayerDialogEx(playerid, D_FILL+2, DIALOG_STYLE_MSGBOX, "{ebec86}>> Заправочная станция",STRING_GLOBAL, "Да", "Нет");
		}
	}
	/*else if ((clickedid >= TD_BRAKE[1] && clickedid <= TD_BRAKE[5]) && !(br_player[playerid][br_flag] & (1 << 0)))
	{
		new slot = -1;
		for ( new i = 1; i <= 5; i++)
		{
		    if( clickedid == TD_BRAKE [ i ] )
		    {
		        slot = i ;
			}
		}
		if ( slot == -1 ) return 1;

		for(new i = 0; i <= 11; i++) TextDrawHideForPlayer ( playerid , TD_BRAKE[i] ) ;
		br_player[playerid][br_flag]	|= 1 << 0;

		if ( slot != 5 )
		{
		    if(br_player[playerid][br_objects][0] != INVALID_OBJECT && br_player[playerid][br_objects][1] != INVALID_OBJECT)
		    {
		        CancelSelectTextDraw(playerid);
		        ShowPlayerDialogEx(playerid, D_INPUT_TABLE_DELL_LINE, DIALOG_STYLE_MSGBOX, "{ebec86}>> Потверждение", "{FFFFFF}Вы действительно хотите удалить линию ?", "Да", "Нет");
			}
		    else if(br_player[playerid][br_objects][0] != INVALID_OBJECT)
		    {
		        CancelSelectTextDraw(playerid);
		        ShowPlayerDialogEx(playerid, D_INPUT_TABLE_DELL_NO_LINE, DIALOG_STYLE_MSGBOX, "{ebec86}>> Потверждение", "{FFFFFF}Вы действительно хотите удалить ограждение ?", "Да", "Нет");
			}
		    else
		    {
		        SetPVarInt (playerid, "cs_slot", slot ) ;
		    	br_player[playerid][br_flag] ^= 1 << 1;
		    	for(new i = 0; i <= 3; i++) TextDrawShowForPlayer ( playerid , Succes_BTD[i] ) ;
			}
		}
		else
		{
			if(br_player[playerid][br_object_text][0] != INVALID_OBJECT || br_player[playerid][br_object_text][1] != INVALID_OBJECT)
			{
			    CancelSelectTextDraw(playerid);
			    ShowPlayerDialogEx(playerid, D_INPUT_TABLE_DELL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Потверждение", "{FFFFFF}Вы действительно хотите удалить информационную панель ?", "Да", "Нет");
			}
		    else
			{
			    CancelSelectTextDraw(playerid);
			    SetPVarInt (playerid, "cs_slot", slot ) ;
				ShowPlayerDialogEx(playerid, D_INPUT_TABLE, DIALOG_STYLE_INPUT, "{ebec86}>> Установка информационной панели", "{FFFFFF}Введите текст\n{CC3300}- Максимальное количество символов 30\n{CC3300}- Если вы используете пробел, то он заменяется на перенос строки\n{CC3300}- Больше двух слов использовать нельзя\n", "Потвердить", "Отмена");
			}
		}
	}
	else if ((clickedid >= Succes_BTD[2] && clickedid <= Succes_BTD[3]) && !(br_player[playerid][br_flag] & (1 << 1)))
	{
      	for(new i = 0; i <= 3; i++) TextDrawHideForPlayer ( playerid , Succes_BTD[i] ) ;
      	CancelSelectTextDraw(playerid);

	    if(clickedid == Succes_BTD[2]) // da
	    {
	        ShowPlayerDialog ( playerid , 0000 , DIALOG_STYLE_MSGBOX , "{ebec86}>> Информация" , "{FFFFFF}Вы выбрали установку ограждений линиями\nДля того чтобы начать построение линни станьте в точку {f0e86b}\"A\"\n{FFFFFF}Затем нажмите кнопку {f0e86b}\"N\"", "Приступить", "");
            br_player[playerid][br_flag] ^= 1 << 2;
	    }
	    else if(clickedid == Succes_BTD[3])//net
	    {
     		new Float:X, Float:Y, Float:Z, Float:A;
			GetPlayerPos(playerid,X,Y,Z);
			GetPlayerFacingAngle (playerid, A);

			if(br_player[playerid][br_objects][0] != INVALID_OBJECT)
			{
				DestroyDynamicObject(br_player[playerid][br_objects][0]);
			}

	        br_player[playerid][br_objects][0] = CreateDynamicObject(object_select_td_brake[ GetPVarInt(playerid, "cs_slot") - 1 ],X + 1.5 * floatsin(-A, degrees),Y + 1.5 * floatcos(-A, degrees),Z,0.0,0.0,GetPVarInt(playerid, "cs_slot") == 3 ? A : A + 90.0);
			EditDynamicObject(playerid, br_player[playerid][br_objects][0]);


 			if(blocktext[playerid] == Text3D:-1)
		 	{
		 	    format(STRING_GLOBAL, 128, "Ограждение установил: {AFAFAF}%s [%d]", GetName(playerid), playerid);
			 	blocktext[playerid] = CreateDynamic3DTextLabel(STRING_GLOBAL, -1, X, Y, Z, 3.0, GetPlayerVirtualWorld(playerid));
			}

			Streamer_Update(playerid);

			DeletePVar ( playerid,"cs_slot" );
	    }

	    br_player[playerid][br_flag]	|= 1 << 1;
	}
	else if (!(br_player[playerid][br_flag] & (1 << 0)) && (clickedid == TD_BRAKE[11] || clickedid == Text:INVALID_TEXT_DRAW))
	{
 		for(new i = 0; i <= 11; i++) TextDrawHideForPlayer ( playerid , TD_BRAKE[i] ) ;
		CancelSelectTextDraw(playerid);

		br_player[playerid][br_flag]	|= 1 << 0;
	}*/
	if ( GetPVarInt ( playerid, "p_sm_used" ) )
	{
		if ( !( _:clickedid ^ 0xFFFF ) )
		{
			SelectTextDraw ( playerid, 0xB0C4DEFF ) ;
			return 1 ;
		}
	}
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	if(playerid == INVALID_PLAYER_ID) return OnGuardWarningCheater(playerid, "OnPlayerExitedMenu", 85);
	if(GetPlayerMenu(playerid) == Menu:INVALID_MENU) return OnGuardWarningCheater(playerid, "OnPlayerExitedMenu (1)", 85);
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}
#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#define HOLDING(%0) \
	((newkeys & (%0)) == (%0))

#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))


#define KEY_AIM (128)

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{	

	if(newkeys == KEY_WALK) 
	{ 
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2739.2400, -2442.6499, 21.2300) || IsPlayerInRangeOfPoint(playerid, 3.0, 2718.0901, -2425.8501, 21.9400) || IsPlayerInRangeOfPoint(playerid, 3.0, 2699.4800, -2450.7300, 21.9800) || IsPlayerInRangeOfPoint(playerid, 3.0, 2712.1399, -2440.7400, 21.9000)) 
		{ 
			new Float:hunger;
			if(hunger >= 100) return SendClientMessage(playerid, 0x27C400FF, "Вы не хотите пить!");
			if(GetPlayerMoney(playerid) >= 150) 
			{ 
				if(spr[playerid]  ==  1)  return 1; 
				spr[playerid]  =  1;  
				if(p_info[playerid][pHunger]+20 > 100)
				{
					SetHunger(playerid, 100);
				}
				else GiveHunger(playerid, 20);
				GivePlayerMoney(playerid,-150); 
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0); 
				TogglePlayerControllable(playerid, 0); 
				ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1); 
				SetTimerEx("UnFreezSp",1000,false,"i",playerid); 
			} 
			else 
			{ 
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0); 
			} 
		} 
	}

	if(IsRubbish(playerid))
	{
		if(p_info[playerid][pMember] != TEAM_RIFA)
		return SendErr(playerid, "Вы не из бомжей");
		ShowPlayerRubbishDialog(playerid);
		SetPlayerChatBubble(playerid, "Роется в мусорке", 0x00FF00FF, 30.0, 5000);
	}	
	if(PlayerLogged[playerid] == false) return 1;
	if ( GetPlayerState ( playerid ) == PLAYER_STATE_DRIVER )
	{
		if ( newkeys & KEY_JUMP )	
			player_holding_key_down [ playerid ] = GetTickCount() ;
		if ( oldkeys & KEY_JUMP )
			player_holding_key_down [ playerid ] = 0x7FFFFFFF;
	}
	/*if(newkeys == 0 && oldkeys == KEY_NO && !(br_player[playerid][br_flag] & (1 << 2)))
	{
	    GetPlayerPos(playerid, br_player[playerid][br_line_pos][0], br_player[playerid][br_line_pos][1], br_player[playerid][br_line_pos][2]);
	    GetPlayerFacingAngle(playerid, br_player[playerid][br_line_pos][3]);

	    br_player[playerid][br_temp_pickup] = CreateDynamicPickup ( 19198 , 1 , br_player[playerid][br_line_pos][0] , br_player[playerid][br_line_pos][1] , br_player[playerid][br_line_pos][2] ) ;

        ShowPlayerDialogEx ( playerid , D_NULL , DIALOG_STYLE_MSGBOX , "{ebec86}>> Информация" , "{FFFFFF}Вы поставили точку {f0e86b}\"A\"{FFFFFF} нашей линии, теперь чтобы линия сформировалась станьте в противоположную точку и нажмите {f0e86b}\"N\"", "Хорошо", "");

	    br_player[playerid][br_flag] ^= 1 << 3;
	    br_player[playerid][br_flag] |= 1 << 2;
	    return 1;
	}
	else if(newkeys == 0 && oldkeys == KEY_NO && !(br_player[playerid][br_flag] & (1 << 3)))
	{
	    new Float:endPosX, Float:endPosY, Float:endPosZ, slot = GetPVarInt(playerid, "cs_slot"), Float:per_dis = 0.65;
	    GetPlayerPos(playerid, endPosX, endPosY, endPosZ);

	    if ( br_player[playerid][br_temp_pickup] != INVALID_OBJECT )
		{
			DestroyDynamicPickup ( br_player[playerid][br_temp_pickup] ) ;
			br_player[playerid][br_temp_pickup] = INVALID_OBJECT;
		}

   		if(blocktext[playerid] == Text3D:-1)
 		{
 		    format(STRING_GLOBAL, 128, "Линию установил: {AFAFAF}%s [%d]", GetName(playerid), playerid);
		 	blocktext[playerid] = CreateDynamic3DTextLabel(STRING_GLOBAL, -1, endPosX, endPosY, endPosZ, 3.0, GetPlayerVirtualWorld(playerid));
		}

	    switch(slot)
	    {
	        case 2: per_dis = 0.5;
	        case 3: per_dis = 0.3;
	        case 4: per_dis = 0.95;
	    }

	    br_player[playerid][br_line_pos][2] -= per_dis;
	    endPosZ -= per_dis;

        new objectCount, Float: objectAngles[2], Float: a, Float: b;

	    a = GetDistanceBetweenPoints(br_player[playerid][br_line_pos][0], endPosY, br_player[playerid][br_line_pos][2], endPosX, endPosY, br_player[playerid][br_line_pos][2]);
	    b = GetDistanceBetweenPoints(br_player[playerid][br_line_pos][0], br_player[playerid][br_line_pos][1], br_player[playerid][br_line_pos][2], endPosX, endPosY, br_player[playerid][br_line_pos][2]);

	    if (br_player[playerid][br_line_pos][0] > endPosX)
	    {
	        if (br_player[playerid][br_line_pos][1] > endPosY) objectAngles[0] = 180.0 - asin(a / b);
	        else if (br_player[playerid][br_line_pos][1] < endPosY) objectAngles[0] = asin(a / b);
	    }
	    else if (br_player[playerid][br_line_pos][0] < endPosX)
	    {
	        if (br_player[playerid][br_line_pos][1] > endPosY) objectAngles[0] = asin(a / b) + 180.0;
	        else objectAngles[0] = 90.0 - asin(a / b) + 270.0;
	    }

	    a = GetDistanceBetweenPoints(br_player[playerid][br_line_pos][0], br_player[playerid][br_line_pos][1], br_player[playerid][br_line_pos][2], endPosX, endPosY, br_player[playerid][br_line_pos][2]);
	    b = endPosZ - br_player[playerid][br_line_pos][2];
	    objectAngles[1] = atan2(a, b);
	    new Float: lenStep = 3.5 * floatsin(90 - asin((3.5 * floatcos(objectAngles[1], degrees)) / 3.5), degrees);
	    objectCount = floatround(GetDistanceBetweenPoints(br_player[playerid][br_line_pos][0], br_player[playerid][br_line_pos][1], br_player[playerid][br_line_pos][2],endPosX, endPosY, br_player[playerid][br_line_pos][2]) / lenStep, floatround_ceil) + 1;
		if(objectCount > 25) objectCount = 25;

  		for(new i=0;i<25;i++)
	    {
	        if(br_player[playerid][br_objects][i] != INVALID_OBJECT)
	        {
	            DestroyDynamicObject(br_player[playerid][br_objects][i]);
	            br_player[playerid][br_objects][i]=INVALID_OBJECT;
	        }
	    }

	    for (new i = 0; i < objectCount; i++)
	    {
	        br_player[playerid][br_objects][i] = CreateDynamicObject(object_select_td_brake[ slot - 1 ], br_player[playerid][br_line_pos][0] + (lenStep * i) * -floatsin(objectAngles[0], degrees), br_player[playerid][br_line_pos][1] + (lenStep * i) * floatcos(objectAngles[0], degrees), br_player[playerid][br_line_pos][2] + (3.5 * i * floatcos(objectAngles[1], degrees)), 0.0, 0.0, (slot == 3) ? (br_player[playerid][br_line_pos][3]) : (br_player[playerid][br_line_pos][3] + 90.0));
			switch(object_select_td_brake[ slot - 1 ])
			{
			    case 1228: SetDynamicObjectMaterial(br_player[playerid][br_objects][i], 0, 18996, "mattextures", "lime", 0);
			    case 2773:
			    {
	      			SetDynamicObjectMaterial(br_player[playerid][br_objects][i], 0, 19595, "lsappartments1", "carpet4-256x256", 0);
					SetDynamicObjectMaterial(br_player[playerid][br_objects][i], 1, 19523, "sampicons", "reeedgrad32", 0);
			    }
			}
	    }
	    Streamer_Update(playerid);
		br_player[playerid][br_flag]	|= 1 << 3;
		return 1;
	}*/
/*	if(newkeys == KEY_WALK)
    {
        for(new i; i < sizeof(SeatDown); i ++)
        {
            if(IsPlayerInRangeOfPoint(playerid, 2.0, SeatDown[i][0], SeatDown[i][1], SeatDown[i][2])) // Проверяем, находится ли игрок около дивана
            {
                SetPlayerPos(playerid, SeatDown[i][0], SeatDown[i][1], SeatDown[i][2]);
                SetPlayerFacingAngle(playerid, SeatDown[i][3]);
                ApplyAnimation(playerid, "PED", "SEAT_down", 4.1, 0, 0, 0, 1, 0, 1); // Задаем ему анимацию посадки на диван
            }
        }
    }
    if(newkeys == 16) // Если нажмешь - встанешь!
    {
        // Проверку сами добавите
        ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 0, 0, 0, 0);
    }*/
	
	if(GetPVarInt(playerid, "Procedure") >= 1)
	{
	    if(action_step { playerid } < 10)
		{
		    if ( newkeys & action_key [ playerid ] )
			{
			    if(action_key [ playerid ] == KEY_YES)
			    {
			        if(newkeys & KEY_YES)
			        {
					    switch ( random ( 2 ) )
						{
							case 0: action_key [ playerid ] = KEY_YES, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_Y" ) ;
							case 1: action_key [ playerid ] = KEY_NO, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_N" ) ;
						}

						action_step { playerid } ++ ;

						new td_string [ 9 ] ;
						format ( td_string, sizeof ( td_string ), "%d/10", action_step { playerid } ) ;
						PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 4 ], td_string ) ;

						new Float:td_x = action_step { playerid } * 16.5 ;
						PlayerTextDrawTextSize(playerid, action_ptd [ playerid ] [ 2 ], td_x, 12.740739 ) ;
						PlayerTextDrawHide ( playerid, action_ptd [ playerid ] [ 2 ] ) ;
						PlayerTextDrawShow ( playerid, action_ptd [ playerid ] [ 2 ] ) ;
						if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,0,0,0);
						return 1;
					}
					else if(newkeys & KEY_NO)
					{
					    SetPVarInt(playerid, "TryingVzlom", GetPVarInt(playerid, "TryingVzlom") - 1);
						if(GetPVarInt(playerid, "TryingVzlom") <= 0)
						{
							if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
							SetPVarInt(playerid, "Procedure", 0);
							SetPVarInt(playerid, "CarJack", 0);

							action_td_status(playerid, false);

							SendErr(playerid, "Вы сломали отмычку");
							p_info[playerid][pJackCar]--;
							MysqlUpdatePlayerInt(playerid, "jackcar", p_info[playerid][pJackCar]);
							return 1;
						}
						switch ( random ( 2 ) )
						{
							case 0: action_key [ playerid ] = KEY_YES, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_Y" ) ;
							case 1: action_key [ playerid ] = KEY_NO, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_N" ) ;
						}

						if ( action_step { playerid } < 1 ) action_step { playerid } = 0 ;
						else action_step { playerid } -- ;

						new td_string [ 9 ] ;
						format ( td_string, sizeof ( td_string ), "%d/10", action_step { playerid } ) ;
						PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 4 ], td_string ) ;

						new Float:td_x = action_step { playerid } * 16.5 ;
						PlayerTextDrawTextSize(playerid, action_ptd [ playerid ] [ 2 ], td_x, 12.740739 ) ;
						PlayerTextDrawHide ( playerid, action_ptd [ playerid ] [ 2 ] ) ;
						PlayerTextDrawShow ( playerid, action_ptd [ playerid ] [ 2 ] ) ;
						return 1;
					}
				}
				else if(action_key [ playerid ] == KEY_NO)
			    {
			        if(newkeys & KEY_NO)
			        {
					    switch ( random ( 2 ) )
						{
							case 0: action_key [ playerid ] = KEY_YES, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_Y" ) ;
							case 1: action_key [ playerid ] = KEY_NO, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_N" ) ;
						}

						action_step { playerid } ++ ;

						new td_string [ 9 ] ;
						format ( td_string, sizeof ( td_string ), "%d/10", action_step { playerid } ) ;
						PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 4 ], td_string ) ;

						new Float:td_x = action_step { playerid } * 16.5 ;
						PlayerTextDrawTextSize(playerid, action_ptd [ playerid ] [ 2 ], td_x, 12.740739 ) ;
						PlayerTextDrawHide ( playerid, action_ptd [ playerid ] [ 2 ] ) ;
						PlayerTextDrawShow ( playerid, action_ptd [ playerid ] [ 2 ] ) ;
						if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"BD_FIRE","wash_up",4.1,1,0,0,0,0,0);
						return 1;
					}
					else if(newkeys & KEY_YES)
					{
					    SetPVarInt(playerid, "TryingVzlom", GetPVarInt(playerid, "TryingVzlom") - 1);
						if(GetPVarInt(playerid, "TryingVzlom") <= 0)
						{
							if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
							SetPVarInt(playerid, "Procedure", 0);
							SetPVarInt(playerid, "CarJack", 0);

							action_td_status(playerid, false);

							SendErr(playerid, "Вы сломали отмычку");
							p_info[playerid][pJackCar]--;
							MysqlUpdatePlayerInt(playerid, "jackcar", p_info[playerid][pJackCar]);
							return 1;
						}
						switch ( random ( 2 ) )
						{
							case 0: action_key [ playerid ] = KEY_YES, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_Y" ) ;
							case 1: action_key [ playerid ] = KEY_NO, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_N" ) ;
						}

						if ( action_step { playerid } < 1 ) action_step { playerid } = 0 ;
						else action_step { playerid } -- ;

						new td_string [ 9 ] ;
						format ( td_string, sizeof ( td_string ), "%d/10", action_step { playerid } ) ;
						PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 4 ], td_string ) ;

						new Float:td_x = action_step { playerid } * 16.5 ;
						PlayerTextDrawTextSize(playerid, action_ptd [ playerid ] [ 2 ], td_x, 12.740739 ) ;
						PlayerTextDrawHide ( playerid, action_ptd [ playerid ] [ 2 ] ) ;
						PlayerTextDrawShow ( playerid, action_ptd [ playerid ] [ 2 ] ) ;
						return 1;
					}
				}
			}
		}
		else
		{
			if(!IsPlayerInAnyVehicle(playerid)) ClearAnimations(playerid);
			switch(GetPVarInt(playerid, "Procedure"))
			{
				case 1:
				{
					GameTextForPlayer(playerid, "~w~CAR ~g~UNLOCK", 3000, 6);

					new model = GetVehicleModel(GetPVarInt(playerid, "CarJack"));
					if(!model) return 1;
					IsLocked[GetPVarInt(playerid, "CarJack")] = false;
					CarDoors(GetPVarInt(playerid, "CarJack"), false);

					SetPVarInt(playerid, "NachaloCarJack", 1);
					MeAction(playerid,"открыл(а) автомобиль");
					SendInf(playerid, "Вы успешно взломали замок");
					if(p_info[playerid][pWanted] < 6)
					{
						p_info[playerid][pWanted] += 1;
						SetPlayerCriminal(playerid, "Неизвестный", "Угон автомобиля");
						p_info[playerid][pWantedTime] = 1800 + random(300);
					}
					SetPVarInt(playerid, "NormCar", 1);
				}
				case 2:
				{
					new vehicleid = GetPVarInt(playerid, "CarJack"), lights1, alarm1, doors1, bonnet1, boot1, objective1;
					MeAction(playerid,"завел(а) двигатель");
					SetVehicleParamsEx(vehicleid, 1, lights1, alarm1, doors1, bonnet1, boot1, objective1);
					SendInf(playerid, "Вы успешно сломали замок зажигания двигателя");
					SendInf(playerid, "Теперь Вы можете отвезти автмобиль на утилизацию");
					DeletePVar(playerid, "NachaloCarJack");
					SetPVarInt(playerid, "NormCar", 1);
				}
				case 3:
				{
				    foreach(new i : Player)
					{
	         			if(robbery_players[i] != robbery_players[playerid]) continue;
	         			
	         			SendInf(i, "Дверь хранилища взломана. Система охраны сработает через 10 минут и закроется дверь");
	         			SendInf(i, "Не обязательно дожидаться окончания времени, главное вернуться туда, от куда начинали");
	         			
	         			robbery_money[robbery_players[i]] = 100;
	         			
					    if(p_info[i][pWanted]+3 < 6)
						{
							p_info[i][pWanted] += 3;
							SetPlayerCriminal(i, "Неизвестный", "Ограбление");
							p_info[i][pWantedTime] = 1800 + random(300);
						}
					}
				    
				    if(robbery_players[playerid] == 0)
					{
					    robbery_time[robbery_players[playerid]] = 600;
					    MoveDynamicObject(Dvers[15], 745.25, 481.94, 1028.78, 0.5, 0.00, 0.00, 0.00);
					}
				    if(robbery_players[playerid] == 1)
					{
					    robbery_time[robbery_players[playerid]] = 600;
					    MoveDynamicObject(Dvers[16], 745.25, 481.94, 1028.78, 0.5, 0.00, 0.00, 0.00);
					}
				    if(robbery_players[playerid] == 2)
					{
					    robbery_time[robbery_players[playerid]] = 600;
					    MoveDynamicObject(Dvers[17], 745.25, 481.94, 1028.78, 0.5, 0.00, 0.00, 0.00);
					}
				}
			}
			if(robbery_role[playerid] != 4 && robbery_role[playerid] != 2) GPSPlayer_(playerid, 2327.4709, -248.5124, 1.9736, "Утилизация авто");
			else if(robbery_role[playerid] == 4)
			{
			    robbery_car[robbery_players[playerid]] = 1;
			    SendInf(playerid, "Вы угнали автомобиль, теперь заберите соучастников");
			}

			SetPVarInt(playerid, "Procedure", 0);
			SetPVarInt(playerid, "CarJack", 0);

			action_td_status(playerid, false);
			return 1;
		}
	}
	
	if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
			|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
			|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
			&& GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(p_info[playerid][pSetWalk] != 0) SetPVarInt(playerid,"playerWalkTimer",_:SetTimerEx("AnimationWalk", 200, 0, "d", playerid));
	}

	if(PRESSED(KEY_NO))
	{
		callcmd::no(playerid);
	}

	if(PRESSED(KEY_YES))
	{
		callcmd::yes(playerid);
	}

    if(newkeys & KEY_FIRE)
	{
		if(GetPVarInt(playerid, "StartTraining") == 1)
		{
			if(GetPVarInt(playerid, "GYM_Bar") == 1 && GetPVarInt(playerid, "GYM_Simulator_Time") <= gettime()+2)
			{
				ApplyAnimation(playerid, "benchpress", "gym_bp_up_smooth", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+2);
				if(GetPVarInt(playerid, "ClickBar") >= 100)
				{
					if(GetPVarInt(playerid, "ClickWeight") >= 50)
					{
						SetPVarInt(playerid, "ClickWeight", 0);
					}
					else GivePVarInt(playerid, "ClickWeight", 1);
					if(p_info[playerid][pStats][2] < 100)
					{
						GivePlayerStats(playerid, 2, 1);
						GameTextForPlayer(playerid, "~w~Force ~g~+1", 500, 1);
					}
					SetPVarInt(playerid, "ClickBar", 0);
				}
				else GivePVarInt(playerid, "ClickBar", 1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7, 2913, 6, 0.033000, 0.028000, -0.104999, 5.699995, -1.999999, 0.500062, 1.000000, 1.000000, 1.000000);
			}
			if(GetPVarInt(playerid, "GYM_Dumbbells") == 1 && GetPVarInt(playerid, "GYM_Simulator_Time") <= gettime()+2)
			{
				ApplyAnimation(playerid, "Freeweights", "gym_free_down", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+2);
				if(GetPVarInt(playerid, "ClickDumbbells") >= 100)
				{
					if(GetPVarInt(playerid, "ClickWeight") >= 50)
					{
						SetPVarInt(playerid, "ClickWeight", 0);
					}
					else GivePVarInt(playerid, "ClickWeight", 1);
					if(p_info[playerid][pStats][2] < 100)
					{
						GivePlayerStats(playerid, 2, 1);
						GameTextForPlayer(playerid, "~w~Force ~g~+1", 500, 1);
					}
					SetPVarInt(playerid, "ClickDumbbells", 0);
				}
				else GivePVarInt(playerid, "ClickDumbbells", 1);
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7, 2915, 6, 0.083999, 0.000000, -0.039999, -7.199998, -87.000038, -3.199999, 1.000000, 1.000000, 1.000000);
			}
		}
	}
	if(PRESSED(KEY_CTRL_BACK) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		pc_cmd_vzad(playerid);
	}
	if ( GetPlayerHouse(playerid) || p_info[playerid][pRentHouse] != -1 )
	{
		if ( ( newkeys == KEY_CROUCH && GetPlayerState ( playerid ) == PLAYER_STATE_DRIVER ) || newkeys == KEY_CTRL_BACK && GetPlayerState ( playerid ) != PLAYER_STATE_DRIVER )
		{
			for ( new i = 0 ; i < gates_count ; i ++ )
			{
				if ( IsPlayerInRangeOfPoint ( playerid, 6, gate_info [ i ] [ g_pos ] [ 0 ], gate_info [ i ] [ g_pos ] [ 1 ], gate_info [ i ] [ g_pos ] [ 2 ] ) && GetPVarInt(playerid, "PlayerHouse") == gate_info [ i ] [ g_house ] ||
					IsPlayerInRangeOfPoint ( playerid, 6, gate_info [ i ] [ g_pos ] [ 0 ], gate_info [ i ] [ g_pos ] [ 1 ], gate_info [ i ] [ g_pos ] [ 2 ] ) && p_info[playerid][pRentHouse] == gate_info [ i ] [ g_house ] )
				{
				    if(gate_info [ i ] [ g_select ] != 1) continue;
					MoveDynamicObject ( gate_info [ i ] [ g_object ],
										gate_info [ i ] [ g_opened_pos ] [ 0 ],
										gate_info [ i ] [ g_opened_pos ] [ 1 ],
										gate_info [ i ] [ g_opened_pos ] [ 2 ],
										5.0,
										gate_info [ i ] [ g_opened_pos ] [ 3 ],
										gate_info [ i ] [ g_opened_pos ] [ 4 ],
										gate_info [ i ] [ g_opened_pos ] [ 5 ] ) ;

					SendInf(playerid, "Ворота открыты на 5 секунд" ) ;
					SetTimerEx ( "house_gate_close", 5000, false, "i", i ) ;
					break ;
				}
			}
		}
	}
	if(newkeys == KEY_CTRL_BACK)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 1.5, -201.2533, 856.0426, 2613.6101))
		{
		    SetPVarInt(playerid, "PlacedBB", 1);
		    ShowPlayerDialogEx(playerid, 9345, DIALOG_STYLE_LIST, "{ebec86}>> Выберите радиостанцию", "1. Радио Шансон\n2. Наше Радио\n3. Радио Рекорд\n4. Зайцев.FM (Pop)\n5. Зайцев.FM (RnB)", "Выбор", "Выход");
		}
	    if(IsPlayerInRangeOfPoint(playerid, 1.5, 747.1008, 482.3767, 1036.7900))
	    {
	        if(robbery_role[playerid] == 2)
	        {
	            if(robbery_map[robbery_players[playerid]] != 1 && robbery_mask[robbery_players[playerid]] != 1 && robbery_gun[robbery_players[playerid]] != 1 && robbery_car[robbery_players[playerid]] != 1) return SendErr(playerid, "Не все пункты выполнены для начала ограбления");
			    if(robbery_players[playerid] == robbery_bank[0] && GetPlayerVirtualWorld(playerid) == 1)
				{
				    new Float:pos[3], count_player = 0 ;
				    GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
				    foreach(new i: Player)
				    {
				        if(IsPlayerInRangeOfPoint(i, 10.0, pos[0],pos[1],pos[2]) && robbery_players[i] == robbery_players[playerid]) count_player ++ ;
				    }
				    if ( count_player < 4 ) return SendErr ( playerid, "Вы должны находится в банке вместе со всей командой" ) ;
					action_td_status(playerid, true);
					SetPVarInt(playerid, "TryingVzlom", RandomEx(1, 6));
					SetPVarInt(playerid, "Procedure", 3);
					return 1;
				}
           		if(robbery_players[playerid] == robbery_bank[1] && GetPlayerVirtualWorld(playerid) == 2)
				{
				    new Float:pos[3], count_player = 0 ;
				    GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
				    foreach(new i: Player)
				    {
				        if(IsPlayerInRangeOfPoint(i, 10.0, pos[0],pos[1],pos[2]) && robbery_players[i] == robbery_players[playerid]) count_player ++ ;
				    }
				    if ( count_player < 4 ) return SendErr ( playerid, "Вы должны находится в банке вместе со всей командой" ) ;
					action_td_status(playerid, true);
					SetPVarInt(playerid, "TryingVzlom", RandomEx(1, 6));
					SetPVarInt(playerid, "Procedure", 3);
					return 1;
				}
				if(robbery_players[playerid] == robbery_bank[2] && GetPlayerVirtualWorld(playerid) == 3)
				{
				    new Float:pos[3], count_player = 0 ;
				    GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
				    foreach(new i: Player)
				    {
				        if(IsPlayerInRangeOfPoint(i, 10.0, pos[0],pos[1],pos[2]) && robbery_players[i] == robbery_players[playerid]) count_player ++ ;
				    }
				    if ( count_player < 4 ) return SendErr ( playerid, "Вы должны находится в банке вместе со всей командой" ) ;
					action_td_status(playerid, true);
					SetPVarInt(playerid, "TryingVzlom", RandomEx(1, 6));
					SetPVarInt(playerid, "Procedure", 3);
					return 1;
				}
			}
			else SendErr(playerid, "Взламывать дверь может только техник");
	    }
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -333.4198,433.5190,2514.8804))
		{
		    if(!GetPVarInt(playerid, "StartTraining")) return SendErr(playerid, "Сперва начните тренировку");
			if(!GetPVarInt(playerid, "GYM_Bike"))
			{
				if(SimulatorUse[0] == true) return SendErr(playerid, "Тренажёр занят");
				SetPlayerPos(playerid, -333.3219,434.0728,2513.6538);
				SetPlayerFacingAngle(playerid, 269.9861);
				ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_geton", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Bike", 1);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+4);
				SimulatorUse[0] = true;
			}
			else
			{
				ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bike", 0);
				SimulatorUse[0] = false;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -333.2217,437.8282,2514.8804))
		{
		    if(!GetPVarInt(playerid, "StartTraining")) return SendErr(playerid, "Сперва начните тренировку");
			if(!GetPVarInt(playerid, "GYM_Bike"))
			{
				if(SimulatorUse[0] == true) return SendErr(playerid, "Тренажёр занят");
				SetPlayerPos(playerid, -333.1185,438.3029,2513.6538);
				SetPlayerFacingAngle(playerid, 268.3019);
				ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_geton", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Bike", 1);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+4);
				SimulatorUse[0] = true;
			}
			else
			{
				ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bike", 0);
				SimulatorUse[0] = false;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -340.2961,434.3454,2513.7161))
		{
		    if(!GetPVarInt(playerid, "StartTraining")) return SendErr(playerid, "Сперва начните тренировку");
			if(!GetPVarInt(playerid, "GYM_Thread"))
			{
				if(SimulatorUse[1] == true) return SendErr(playerid, "Тренажёр занят");
				SetPlayerPos(playerid, -339.3088,434.2847,2513.6538);
				SetPlayerFacingAngle(playerid, 90.4835);
				ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_geton", 4, 0, 0, 0, 1, 0, 1);
				SetPVarInt(playerid, "GYM_Thread", 1);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+4);
				SimulatorUse[1] = true;
			}
			else
			{
				ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Thread", 0);
				SimulatorUse[1] = false;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -333.1357,443.4457,2514.0784))
		{
		    if(!GetPVarInt(playerid, "StartTraining")) return SendErr(playerid, "Сперва начните тренировку");
			if(!GetPVarInt(playerid, "GYM_Bar"))
			{
				if(SimulatorUse[2] == true) return SendErr(playerid, "Тренажёр занят");
				SetPlayerPos(playerid, -333.2188,443.4030,2514.0784);
				SetPlayerFacingAngle(playerid, 268.7881);
				ApplyAnimation(playerid, "benchpress", "gym_bp_geton", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Bar", 1);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+6);
				SimulatorUse[2] = true;
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7, 2913, 6, 0.033000, 0.028000, -0.104999, 5.699995, -1.999999, 0.500062, 1.000000, 1.000000, 1.000000);
			}
			else
			{
				ApplyAnimation(playerid, "benchpress", "gym_bp_getoff", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Bar", 0);
				RemovePlayerAttachedObject(playerid, 7);
				SimulatorUse[2] = false;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -333.3658,447.2063,2513.6538))
		{
		    if(!GetPVarInt(playerid, "StartTraining")) return SendErr(playerid, "Сперва начните тренировку");
			if(!GetPVarInt(playerid, "GYM_Dumbbells"))
			{
				if(SimulatorUse[3] == true) return SendErr(playerid, "Тренажёр занят");
				SetPlayerPos(playerid, -333.3658,447.2063,2513.6538);
				SetPlayerFacingAngle(playerid, 270.6682);
				ApplyAnimation(playerid, "Freeweights", "gym_free_pickup", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Dumbbells", 1);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+4);
				SimulatorUse[3] = true;
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7, 2915, 6, 0.083999, 0.000000, -0.039999, -7.199998, -87.000038, -3.199999, 1.000000, 1.000000, 1.000000);
			}
			else
			{
				ApplyAnimation(playerid, "Freeweights", "gym_free_putdown", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Dumbbells", 0);
				RemovePlayerAttachedObject(playerid, 7);
				SimulatorUse[3] = false;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.5, -341.0041,438.7238,2513.6538))
		{
		    if(!GetPVarInt(playerid, "StartTraining")) return SendErr(playerid, "Сперва начните тренировку");
			if(!GetPVarInt(playerid, "GYM_Dumbbells"))
			{
				if(SimulatorUse[11] == true) return SendErr(playerid, "Тренажёр занят");
				SetPlayerPos(playerid, -341.0041,438.7238,2513.6538);
				SetPlayerFacingAngle(playerid, 91.8153);
				ApplyAnimation(playerid, "Freeweights", "gym_free_pickup", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Dumbbells", 1);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+4);
				SimulatorUse[11] = true;
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 7)) SetPlayerAttachedObject(playerid, 7, 2915, 6, 0.083999, 0.000000, -0.039999, -7.199998, -87.000038, -3.199999, 1.000000, 1.000000, 1.000000);
			}
			else
			{
				ApplyAnimation(playerid, "Freeweights", "gym_free_putdown", 4, 0, 0, 0, 0, 0);
				SetPVarInt(playerid, "GYM_Dumbbells", 0);
				RemovePlayerAttachedObject(playerid, 7);
				SimulatorUse[11] = false;
			}
		}
		if( IsPlayerNearDice(playerid) != -1 )
		{
			new null = -1;
			for(new i = 0; i != 5; i++) if ( dice_info [ IsPlayerNearDice ( playerid ) ] [ b_player ] [ i ] == INVALID_PLAYER_ID ) { null = i; break; }
			if(GetPVarInt(playerid,"krup") && dice_info [ IsPlayerNearDice ( playerid ) ] [b_crupie] != INVALID_PLAYER_ID) return SendErr(playerid, "Тут уже работает крупье" ) ;
			if(GetPVarInt(playerid,"Stol")) return SendErr(playerid, "Вы уже зарегистрированы на другом столе" ) ;
			if(null == -1 && !GetPVarInt(playerid,"krup")) return SendErr(playerid, "За этим столом нет свободных мест" ) ;
			if(!GetPVarInt(playerid,"krup")) dice_info [ IsPlayerNearDice ( playerid ) ] [ b_player ][null] = playerid;
			else dice_info [ IsPlayerNearDice ( playerid ) ] [b_crupie] = playerid;
			SetPVarInt ( playerid,"Stol", IsPlayerNearDice ( playerid ) + 1 ) ;
			SelectTextDraw(playerid,0x33AAFFFF ) ;
			CreateCasinoTD ( playerid ) ;
			return UpdateBone ( IsPlayerNearDice ( playerid ) ) ;
		}
		if ( GetPVarInt ( playerid, "cm_used" ) == 0 )
		{
			if ( IsPlayerInRangeOfPoint ( playerid, 3.0, 1596.2505,990.8081,1819.0200 ) || IsPlayerInRangeOfPoint ( playerid, 3.0, 1602.9275,990.8088,1819.0200 ) ||
			IsPlayerInRangeOfPoint ( playerid, 3.0, 1599.5940,990.8087,1819.0200 ) || IsPlayerInRangeOfPoint ( playerid, 3.0, 1596.2820,993.5022,1819.0200 ) ||
			IsPlayerInRangeOfPoint ( playerid, 3.0, 1602.9772,993.5014,1819.0200 ) || IsPlayerInRangeOfPoint ( playerid, 3.0, 1599.5938,993.5015,1819.0200 ) )
			{
				return cm_status ( playerid, true ) ;
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.5, 1601.9708, 983.9113, 1820.0557)
				|| IsPlayerInRangeOfPoint(playerid, 2.5, 1597.6998, 983.8762, 1820.0557)
				|| IsPlayerInRangeOfPoint(playerid, 2.5, 1134.71582, -4.39510, 1000.57813)
				|| IsPlayerInRangeOfPoint(playerid, 2.5, 1125.13574, -4.39509, 1000.57813))
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.5, 1601.9708, 983.9113, 1820.0557)) SetPVarInt(playerid, "EnterDiceTable", 0);
			if(IsPlayerInRangeOfPoint(playerid, 2.5, 1597.6998, 983.8762, 1820.0557)) SetPVarInt(playerid, "EnterDiceTable", 1);
			if(IsPlayerInRangeOfPoint(playerid, 2.5, 1134.71582, -4.39510, 1000.57813)) SetPVarInt(playerid, "EnterDiceTable", 6);
			if(IsPlayerInRangeOfPoint(playerid, 2.5, 1125.13574, -4.39509, 1000.57813)) SetPVarInt(playerid, "EnterDiceTable", 7);
			new Table = GetPVarInt(playerid, "EnterDiceTable");
			if(GetPVarInt(playerid,"krup"))
			{
				for(new A; A != 5; A++)
				{
					if(CasinoGamesInfo[Table][CG_PlayerID][A] != -1) break;
					if(A == 4) return SendErr(playerid, "За этим столом ещё нет игроков");
				}
				if(DrumRotation[Table] != 0) return SendErr(playerid, "Игра уже началась");
				DrumTimer[Table] = SetTimerEx("DrumMove", 5, 1, "d", Table);
				CasinoGamesInfo[Table][CG_CroupierID] = playerid;
				SendClientMessage(playerid, COLOR_WHITE, "Вы закрутили колесо и начали игру");
				SetPlayerChatBubble(playerid, "закрутил(а) колесо рулетки", COLOR_PURPLE, 5, 7500);
			}
			else
			{
				for(new A; A != 5; A++)
				{
					if(CasinoGamesInfo[Table][CG_PlayerID][A] == -1) break;
					if(A == 4) return SendErr(playerid, "За этим столом уже максимальное число игроков");
				}
				STRING_GLOBAL="";
				for(new A; A != 39; A++)
				{
					if(A >= 0 && A <= 36) format(STRING_GLOBAL, 128, "%s- %d [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, A, CG_RouletteStake[playerid][Table][A]);
					if(A == 37) format(STRING_GLOBAL, 128, "%s- Красный [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, CG_RouletteStake[playerid][Table][A]);
					if(A == 38) format(STRING_GLOBAL, 128, "%s- Чёрный [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, CG_RouletteStake[playerid][Table][A]);
				}
				ShowPlayerDialogEx(playerid, dCasino2, DIALOG_STYLE_LIST, "{ebec86}>> Ваши ставки", STRING_GLOBAL, "Выбрать", "Выйти");
			}
		}
	}
	if(HOLDING(KEY_CROUCH)) // H
	{
	    if(IsPlayerInRangeOfPoint(playerid, 8.0, 1786.5313, 2269.2075, 15.7692))
		{
			if(GetPlayerState(playerid) == 2)
			{
			    new carid = GetPlayerVehicleID(playerid);
				if(GetVehicleModel(carid) == 525)
				{
				    if(IsTrailerAttachedToVehicle(carid))
				    {
				        new vehid = GetVehicleTrailer(carid);
				        foreach(new i: Player)
				        {
				            if(p_info[i][pOwnableCar] == vehid)
				            {
				                DetachTrailerFromVehicle(carid);
				                
				                ownable_car[i][v_ticket] = 1;
				                
				                STRING_GLOBAL[0] = EOS;
								format(STRING_GLOBAL, 256, "UPDATE ownable_cars SET ticket = %d WHERE id = %d", ownable_car[i][v_ticket], ownable_car[i][v_sql]);
								mysql_query(dbHandle, STRING_GLOBAL);
				                
				                DestroyVehicle(p_info[i][pOwnableCar]);
				                p_info[i][pOwnableCar] = INVALID_VEHICLE_ID;
				                SendInf(i, "Ваш транспорт отбуксировали на штрафстоянку. (/gps - Важные места - Штрафстоянка)");
				                
				                SendInf(playerid, "Вы получили премию за буксировку т/с на штрафстоянку");
								p_info[playerid][pPayCheck] += WorkSalary[24];
								MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);
				            }
				        }
					}
				}
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		new Keys, ud, lr;
		GetPlayerKeys(playerid, Keys, ud, lr);
		if(PRESSED(KEY_CTRL_BACK | KEY_HANDBRAKE))// ПКМ and H
		{
			new to_player = GetPlayerTargetPlayer(playerid);
			if(to_player != INVALID_PLAYER_ID)
			{
				p_info[playerid][pInteractionPlayer] = to_player;

				new fmt_msg[MAX_PLAYER_NAME];

				format(fmt_msg, sizeof fmt_msg, "%s", GetName(playerid));
				PlayerTextDrawSetString(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "%s", GetName(to_player));
				PlayerTextDrawSetString(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], fmt_msg);

				new Float: health, Float: armour;

				GetPlayerHealth(playerid, health);

				GetPlayerArmour(playerid, armour);

				format(fmt_msg, sizeof fmt_msg, "здоровье:_%3.0f %", health);
				PlayerTextDrawSetString(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "броня:_%3.0f %", armour);
				PlayerTextDrawSetString(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], fmt_msg);

				PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][2],  173.8+health/100.0*75.5, 0.0);
				PlayerTextDrawShow(playerid, TDEditor_INTERACTION_PLAYER[playerid][2]);

				PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][3],  173.8+armour/100.0*75.5, 0.0);
				PlayerTextDrawShow(playerid, TDEditor_INTERACTION_PLAYER[playerid][3]);

				GetPlayerHealth(to_player, health);

				GetPlayerArmour(to_player, armour);

				format(fmt_msg, sizeof fmt_msg, "здоровье:_%3.0f %", health);
				PlayerTextDrawSetString(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "броня:_%3.0f %", armour);
				PlayerTextDrawSetString(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], fmt_msg);

				PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][6],  406.8+health/100.0*75.5, 0.0);
				PlayerTextDrawShow(playerid, TDEditor_INTERACTION_PLAYER[playerid][6]);

				PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][7],  406.7+armour/100.0*75.5, 0.0);
				PlayerTextDrawShow(playerid, TDEditor_INTERACTION_PLAYER[playerid][7]);

				SelectTextDraw(playerid, 0x009900FF);

				for(new i = 0; i < 59; i ++) TextDrawShowForPlayer(playerid, TDEditor_INTERACTION_GLOBAL[i]);
				for(new i = 0; i < 10; i ++) PlayerTextDrawShow(playerid, TDEditor_INTERACTION_PLAYER[playerid][i]);

				SelectTextDraw(playerid, 0x009900FF);

				SetPVarInt(playerid, "show_interaction", 1);
			}
		}
	}
	if(pCuff[playerid][pCuffee] == playerid)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			if((newkeys & KEY_JUMP || newkeys & KEY_FIRE || newkeys & KEY_CROUCH || (newkeys & KEY_HANDBRAKE && newkeys & KEY_SECONDARY_ATTACK)))
			{
				ClearAnimations(playerid);
				SetTimerEx("Unfreez2",3000,false,"i",playerid);
				ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
				TogglePlayerControllable(playerid,0);
				SendErr(playerid, "Вы не можете использовать это действие так как вы в наручниках.");
			}
		}
	}
	if(newkeys & KEY_WALK)
	{
	    for(new g = 0; g < TotalGarages; g++)
		{
		    if(PlayerToPoint(2.0, playerid, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z]))
		    {
		        SetPVarInt(playerid, "garagepl", g);
		        if(GARAGE_DATA[g][g_LOCK]) return SendErr(playerid, "Гараж закрыт");
                SetPlayerPos(playerid, GARAGE_DATA[g][g_EXIT_X], GARAGE_DATA[g][g_EXIT_Y], GARAGE_DATA[g][g_EXIT_Z]);
                SetPlayerInterior(playerid, GARAGE_DATA[g][g_INT]);
                SetPlayerVirtualWorld(playerid, GARAGE_DATA[g][g_WORLD]);
                LoadTexture(playerid);
                SendClientMessage(playerid, COLOR_GREEN, "Вы вошли в гараж. Чтобы выйти с гаража, нажмите клавишу ALT (у двери)");
		        return 1;
		    }

		    else if(PlayerToPoint(2.0, playerid, GARAGE_DATA[g][g_EXIT_X], GARAGE_DATA[g][g_EXIT_Y], GARAGE_DATA[g][g_EXIT_Z]))
		    {

		        SetPlayerPos(playerid, GARAGE_DATA[GetPVarInt(playerid, "garagepl")][G_ENTER_X], GARAGE_DATA[GetPVarInt(playerid, "garagepl")][G_ENTER_Y], GARAGE_DATA[GetPVarInt(playerid, "garagepl")][G_ENTER_Z]);
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                DeletePVar(playerid, "garagepl");
                return 1;
		    }
		}
		// - Создание семьи
		if(PlayerToPoint(1.0, playerid, 171.2966,1172.3143,542.4528))
		{
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "1. Создание семьи\n2. Всего семей: {ebec86}%d", family_count);
			ShowPlayerDialogEx(playerid, 700, DIALOG_STYLE_LIST, "{ebec86}>> Информация о семьях", STRING_GLOBAL, "Выбор", "Выход");
			return 1;
		}
		for(new i = 1; i <= TOTALATM; i++)
		{
			if(PlayerToPoint(1.0, playerid, ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ]))
			{
				ATMList(playerid);
				return 1;
			}
		}
		for(new i = 1; i <= TOTALSPRUNK; i++)
		{
			if(PlayerToPoint(1.0, playerid, SPRInfo[i][aX], SPRInfo[i][aY], SPRInfo[i][aZ]))
			{
			    if(GetPVarInt(playerid, "DrinksMachineUse") > gettime()) return SendErr(playerid, "Вы ещё не хотите пить");
	            format(STRING_GLOBAL, 150, "{FFFFFF}Стоимость напитка: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Хотите купить?", 25*WorkSalary[8]);
				ShowPlayerDialogEx(playerid, 241, DIALOG_STYLE_MSGBOX, "{ebec86}>> Автомат с напитками", STRING_GLOBAL, "Купить", "Выйти");
				return 1;
			}
		}
		// - Вход в квартиру на ALT
		for(new idx = TOTALROOMS; idx > 0; idx--)
		{
			if(IsPlayerInRangeOfPoint(playerid,1.0,RoomsInfo[idx][rX],RoomsInfo[idx][rY],RoomsInfo[idx][rZ]) &&  GetPlayerVirtualWorld(playerid) == RoomsInfo[idx][rV])
			{
				SetPVarInt(playerid, "PlayerRooms", idx);
				if(!strcmp(RoomsInfo[idx][rOwner],"None",true))
				{
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL,256,"{FFFFFF}Квартира №{0099FF}%d\n\n{FFFFFF}Стоимость:\t{f0e86b}%d\n{FFFFFF}Класс:\t\t%i",idx,RoomsInfo[idx][rCost]*WorkSalary[7],RoomsInfo[idx][rType]);
					return ShowPlayerDialogEx(playerid, D_PODEZD+3, 0,"{ebec86}>> Квартира",STRING_GLOBAL,"Купить","Отмена");
				}
				else
				{
					new ttextt[32];
					if(GetPlayerID(RoomsInfo[idx][rOwner]) == INVALID_PLAYER_ID) format(ttextt,sizeof(ttextt),"({ff2400}Offline{ffffff})");
					else format(ttextt,sizeof(ttextt),"({3caa3c}Online{ffffff})");

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL,256,"{FFFFFF}Квартира №{0099FF}%d\n\n{FFFFFF}Владелец:\t{9ACD32}%s %s\n{FFFFFF}Класс:\t\t{FFCC00}%i",idx,RoomsInfo[idx][rOwner],ttextt,RoomsInfo[idx][rType]);
					return ShowPlayerDialogEx(playerid, D_PODEZD+2, 0,"{ebec86}>> Квартира", STRING_GLOBAL,"Войти","Отмена");
				}
			}
			if(IsPlayerInRangeOfPoint(playerid,1.0,RoomsInfo[idx][rExitX],RoomsInfo[idx][rExitY],RoomsInfo[idx][rExitZ]) &&  GetPlayerVirtualWorld(playerid) == RoomsInfo[idx][rExitV])
			{
				new string[16];
				if(RoomsInfo[idx][rLock] == 1)
				{
					if(strcmp(p_info[playerid][pName], RoomsInfo[idx][rOwner], true) == 0) ShowPlayerDialogEx(playerid, D_PODEZD+6, 0, "{ebec86}>> Квартира", "Ваш дом закрыт\n\nВы хотите его открыть?", "Да", "Нет");
					format(string, 16, "~r~Locked");
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
					new index = GetPVarInt(playerid, "PlayerRooms");
					TogglePlayerControllable(playerid,false);
					SetTimerEx("PlayerToggle", 1600, false, "d", playerid);
					SetPlayerPos(playerid,RoomsInfo[index][rX],RoomsInfo[index][rY],RoomsInfo[index][rZ]);
					SetPlayerInterior(playerid,RoomsInfo[index][rI]);
					SetPlayerVirtualWorld(playerid,RoomsInfo[index][rV]);
				}
			}
		}
		for(new idx = TOTALPODEZD; idx > 0; idx --)
		{
			if(IsPlayerInRangeOfPoint(playerid,4.0,PodezdInfo[idx][poX],PodezdInfo[idx][poY],PodezdInfo[idx][poZ]))
			{
				SetPVarInt(playerid, "PlayerPodezd", idx);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL,256,"    {FFFFFF}Подьезд № {ebec86}%d",idx);
				return ShowPlayerDialogEx(playerid, D_PODEZD, 0,"{ebec86}>> Подьезд",STRING_GLOBAL,"Войти","Отмена");
			}
			if(IsPlayerInRangeOfPoint(playerid,4.0,PodezdInfo[idx][poExitX],PodezdInfo[idx][poExitY],PodezdInfo[idx][poExitZ]) &&  GetPlayerVirtualWorld(playerid) == PodezdInfo[idx][poV])
			{
				SetPlayerPos(playerid,PodezdInfo[idx][poX],PodezdInfo[idx][poY],PodezdInfo[idx][poZ]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
			}
		}
		// - Вход в дом на ALT
		for(new idx = TOTALHOUSE; idx > 0; idx --)
		{
			if(PlayerToPoint(1.0, playerid, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]))
			{
				new classs[12];
				switch(HouseInfo[idx][hDiscript])
				{
					case 1: classs = "Низкий";
					case 2: classs = "Средний";
					case 3: classs = "Высокий";
					default: SendErr(playerid, "Ошибка");
				}
				if(!strcmp(HouseInfo[idx][hOwner], "None", true))
				{
				    SetPVarInt(playerid, "PlayerHouse", idx);
				    SetPVarInt(playerid, "PlayerHouseEnter", idx);
					STRING_GLOBAL = "";
					format(STRING_GLOBAL, 1024, "{f0f0f0}Номер дома: %d\nЦена: %d\nКласс: %s\nКвартплата: %d рублей за 1 день\n\nНа следующем шаге вы сможете купить этот дом или посмотреть его интерьер",idx,HouseInfo[idx][hPrice]*WorkSalary[7],gHousesClassName[HouseInfo[idx][hDiscript]-1],GetHomeOplata(idx));
					return ShowPlayerDialogEx(playerid, 11056, DIALOG_STYLE_MSGBOX, "{ebec86}>> Дом выставлен на продажу", STRING_GLOBAL, "Далее", "Отмена");
				}
				else
				{
					new status_online[32] = "{AA3333}Оффлайн";
					foreach(new i: Player)
					{
						if(!strcmp(HouseInfo[idx][hOwner], p_info[i][pName], true))
						{
							status_online = "{f0e86b}Онлайн";
							break;
						}
					}
					SetPVarInt(playerid, "PlayerHouse", idx);
				    SetPVarInt(playerid, "PlayerHouseEnter", idx);
					STRING_GLOBAL = "";
					format(STRING_GLOBAL, 1256, "{f0f0f0}Владелец: %s %s\n{f0f0f0}Класс: %s\nКвартплата: %d рублей за 1 день\nНомер дома: %d\nОплачено дней: %d\nГосударственная цена: %d\nАренда: %s (Цена: %d час)\n",HouseInfo[idx][hOwner],status_online,gHousesClassName[HouseInfo[idx][hDiscript]-1],GetHomeOplata(idx),idx,HouseInfo[idx][hOplata],HouseInfo[idx][hPrice]*WorkSalary[7],
					(HouseInfo[idx][gRentStatus] == 1) ? ("Доступна - /renthome") : ("Не доступна"), HouseInfo[idx][RentAllPlata]);
					strcat(STRING_GLOBAL,"\nУстановки:\n\n");
					strcat(STRING_GLOBAL,(HouseInfo[idx][hUpdate] >= 1) ? ("Автоматические двери: Есть\n") : ("Автоматические двери: Нет\n"));
					strcat(STRING_GLOBAL,(HouseInfo[idx][hUpdate] >= 2) ? ("Наличие аптечки: Есть\n") : ("Наличие аптечки: Нет\n"));
					strcat(STRING_GLOBAL,(HouseInfo[idx][hUpdate] >= 3) ? ("Субдсидия: Есть\n") : ("Субдсидия: Нет\n"));
					strcat(STRING_GLOBAL,(HouseInfo[idx][hUpdate] >= 4) ? ("Шкаф в доме: Есть\n") : ("Шкаф в доме: Нет\n"));
					return ShowPlayerDialogEx(playerid, 11075, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация о доме", STRING_GLOBAL, "Войти", "Отмена");
				}
			}
			if(PlayerToPoint(1.0, playerid, HouseInfo[idx][hExitx], HouseInfo[idx][hExity], HouseInfo[idx][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[idx][hVirtual])
			{
				if(HouseInfo[idx][hUpdate] == 0) return SendErr(playerid, "В этом доме не установлены автоматические двери");
				LoadTexture(playerid);
				SetPlayerPos(playerid, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			}
		}
		// - Вход в бизнес на ALT
		for(new idx = TOTALBIZZ; idx > 0; idx --)
		{
			if(PlayerToPoint(1.0, playerid, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
			{
				new string[128];
				if(!strcmp(BizzInfo[idx][bOwner], "None", true))
				{
					SetPVarInt(playerid, "PlayerBizz", idx);
					format(string,sizeof(string),"{FFFFFF}Название: {f0e86b}%s{FFFFFF} (ID: %d)\n\nЦена бизнеса: {f0e86b}%i{FFFFFF} рублей", BizzInfo[idx][bName], idx, BizzInfo[idx][bPrice]*WorkSalary[7]);
					if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7) return ShowPlayerDialogEx(playerid, D_HEAL+9, 0, "{ebec86}>> Покупка бизнеса", string, "Купить", "Отказаться");
				}
				else
				{
				    SetPVarInt(playerid, "PlayerBizz", idx);
					if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7)
					{
						new status_bizz_owner[15 + 1] = "{AA3333}Оффлайн";
						new status_bizz_work[19 + 1] = "{AA3333}Не работает";
						new status_bizz_legacy[32 + 1] = "{AA3333}Бизнес не имеет лицензию";

						if(!BizzInfo[idx][bLock]) status_bizz_work = "{f0e86b}Работает";
						if(BizzInfo[idx][bLic]) status_bizz_legacy = "{f0e86b}Бизнес работает легально";

						foreach(new i:Player)
						{
							if(!strcmp(BizzInfo[idx][bOwner], p_info[i][pName], true))
							{
								status_bizz_owner = "{f0e86b}Онлайн";
								break;
							}
						}
						STRING_GLOBAL = "";
						format(STRING_GLOBAL, 2000, "{fcfcfc}Название: %s (ID: %d)\nВладелец: %s %s{fcfcfc}\n\nВсего заработано: %d рублей\nВ этом часу заработано: %d рублей\nПосетителей сегодня: %d\n\nПродуктов: %d из %d\nПродуктов заказано: %d\n\nСостояние: %s{fcfcfc}\nЛицензия: %s{fcfcfc}\nПод контролем: %s\nБаланс счёта для оплаты электроэнергии: %d рублей\nНалог за электроэнергию: %d рублей в час\n\nЧасов закрыт: %d из 12\nЧасов без продуктов: %d из 24",
						BizzInfo[idx][bName],idx,BizzInfo[idx][bOwner],status_bizz_owner,BizzInfo[idx][bMoney],BizzInfo[idx][bMoneyHour],BizzInfo[idx][bVisitors],BizzInfo[idx][bProduct],BizzInfo[idx][bProdMax],BizzInfo[idx][bProdOrder],status_bizz_work,status_bizz_legacy,
					 	(BizzInfo[idx][bMafia] == 7) ? ("Южная ОПГ") : (BizzInfo[idx][bMafia] == 8) ? ("Арзамасская ОПГ") : (BizzInfo[idx][bMafia] == 15) ? ("Лыткаринская ОПГ") : (BizzInfo[idx][bMafia] == 16) ? ("Батыревская ОПГ") : ("Государство"),BizzInfo[idx][bMoney],BizzInfo[idx][bPrice] / 1000,BizzInfo[idx][bLockTime],BizzInfo[idx][bHourProd]);
						return ShowPlayerDialogEx(playerid, 9827, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация о бизнесе", STRING_GLOBAL, "Войти", "Отмена");
					}
				}
			}
			// - Выход с бизнеса на ALT
			if(PlayerToPoint(1.0, playerid, BizzInfo[idx][bExitx],BizzInfo[idx][bExity],BizzInfo[idx][bExitz]) && GetPlayerVirtualWorld(playerid) == BizzInfo[idx][bVirtual])
			{
				LoadTexture(playerid);
				SetPlayerPos(playerid,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
			}
		}
	}
	if(HOLDING(KEY_CROUCH))
	{
		if(PlayerToPoint(10.0, playerid, -734.9475, 2034.3597, 44.9500))
		{
			if(GetName(playerid) == HouseInfo[423][hOwner] || p_info[playerid][pAdmin] == 6)
			{
				if(GateVipHouseLavrovStatus == 0)
				{
					GateVipHouseLavrovStatus = 1;

					MoveObject(GateVipHouseLavrov, -735.2615, 2026.9477, 44.9500, 2.0);

					SendClientMessage(playerid, 0xFFCC00FF, "Вы открыли ворота");

					SetPlayerChatBubble(playerid,"Открывает ворота",0xFFCC00FF,30.0,10000);
				}
				else
				{
					GateVipHouseLavrovStatus = 0;

					MoveObject(GateVipHouseLavrov, -735.2615, 2034.4477, 44.9500, 2.0);

					SendErr(playerid, "Вы закрыли ворота");

					SetPlayerChatBubble(playerid,"Закрывает ворота",0xa24646FF,30.0,10000);
				}
			}
		}
	}
	if(newkeys & 16384)
	{
		callcmd::inv(playerid);
	}

	if(newkeys == KEY_CROUCH)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(IsPlayerInRangeOfPoint(playerid, 6.0, 2751.55, -1023.33, 23.34))
			{
				if(SDvers[20] == 0)
				{
					MoveObject(Dvers[20], 2751.55, -1023.33, 23.34+0.0004, 0.0004, 0.00, -18.00, -180.00);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
					SetTimerEx("most1Close", 10000, false, "d", playerid);
					most1Timer = SetTimerEx("most1Close", 10000, false, "d", playerid);
					GivePlayerMoney(playerid, -500);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ворота закроются через 10 сек");
					SDvers[20] = 1;
				}
				else
				{
				    SDvers[20] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Вы уже открыли шлакбаум");						
				}
				return 1;
			}			
			if(IsPlayerInRangeOfPoint(playerid, 6.0, 2743.17, -1023.33, 23.34))
			{
				if(SDvers[19] == 0)
				{
					MoveObject(Dvers[19], 2743.17, -1023.33, 23.34+0.0004, 0.0004, 0.00, -18.00, 0.00);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
					SetTimerEx("most2Close", 10000, false, "d", playerid);
					most2Timer = SetTimerEx("most2Close", 10000, false, "d", playerid);
					GivePlayerMoney(playerid, -500);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ворота закроются через 10 сек");				
					SDvers[19] = 1;
				}
				else
				{
				    SDvers[19] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Вы уже открыли шлакбаум");	
				}
				return 1;				
			}
			if(IsPlayerInRangeOfPoint(playerid, 6.0, 1857.37, -2487.21, 10.73))
			{
				if(SDvers[21] == 0)
				{
					MoveObject(Dvers[21], 1857.37, -2487.21, 10.73+0.0004, 0.0004, 0.00, 0.00, 180.00);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
					SetTimerEx("park1Close", 10000, false, "d", playerid);
					park1Timer = SetTimerEx("park1Close", 10000, false, "d", playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ворота закроются через 10 сек");				
					SDvers[21] = 1;
				}
				else
				{
				    SDvers[21] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Вы уже открыли шлакбаум");	
				}
				return 1;					
			}
			if(IsPlayerInRangeOfPoint(playerid, 6.0, 2082.83, -2039.74, 18.53))
			{
				if(SDvers[22] == 0)
				{
					MoveObject(Dvers[22], 2082.83, -2039.74, 18.53+0.0004, 0.0004, 0.00, 0.00, 180.00);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
					SetTimerEx("park2Close", 10000, false, "d", playerid);
					park2Timer = SetTimerEx("park2Close", 10000, false, "d", playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ворота закроются через 10 сек");				
					SDvers[22] = 1;
				}
				else
				{
				    SDvers[22] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Вы уже открыли шлакбаум");	
				}
				return 1;					
			}	
			if(IsPlayerInRangeOfPoint(playerid, 6.0, 2259.43, -2099.47, 21.60))
			{
				if(SDvers[23] == 0)
				{					
					MoveObject(Dvers[23], 2259.43, -2099.47, 21.60+0.0004, 0.0004, 0.00, 0.00, 270.00);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
					SetTimerEx("park3Close", 10000, false, "d", playerid);
					park3Timer = SetTimerEx("park3Close", 10000, false, "d", playerid);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ворота закроются через 10 сек");				
					SDvers[23] = 1;
				}
				else
				{
				    SDvers[23] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Вы уже открыли шлакбаум");	
				}
				return 1;					
			}			
			if(IsPlayerInRangeOfPoint(playerid, 6.0, 2579.85, -2438.72, 21.43))
			{
				if(IsACop(playerid))
				{
					MoveObject(Dvers[14], 2579.85, -2438.72, 21.43+0.0004, 0.0004, 0.00, 0.00, -90.00);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
					SetTimerEx("pps2Close", 10000, false, "d", playerid);
					pps2Timer = SetTimerEx("pps2Close", 10000, false, "d", playerid);							
					SDvers[14] = 1;						
				}
			}
		}
    }	
	
	if(newkeys == KEY_WALK)
	{
		if(IsPlayerInRangeOfPoint(playerid, 6.0, 2259.43, -2099.47, 21.60))
		{
			if(SDvers[23] == 0)
			{
				MoveObject(Dvers[23], 2259.43, -2099.47, 21.60+0.0004, 0.0004, 0.00, 0.00, 270.00);
				PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
				SetTimerEx("park3Close", 10000, false, "d", playerid);
				park3Timer = SetTimerEx("park3Close", 10000, false, "d", playerid);
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);			
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ворота закроются через 10 сек");				
				SDvers[23] = 1;
			}
			else
			{
				SDvers[23] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Вы уже открыли шлакбаум");						
			}
			return 1;
		}				
		if(IsPlayerInRangeOfPoint(playerid, 6.0, 2082.83, -2039.74, 18.53))
		{
			if(SDvers[22] == 0)
			{
				MoveObject(Dvers[22], 2082.83, -2039.74, 18.53+0.0004, 0.0004, 0.00, 0.00, 180.00);
				PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
				SetTimerEx("park2Close", 10000, false, "d", playerid);
				park2Timer = SetTimerEx("park2Close", 10000, false, "d", playerid);
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ворота закроются через 10 сек");				
				SDvers[22] = 1;
			}
			else
			{
				SDvers[22] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Вы уже открыли шлакбаум");						
			}
			return 1;				
		}
		if(IsPlayerInRangeOfPoint(playerid, 6.0, 1857.37, -2487.21, 10.73))
		{
			if(SDvers[21] == 0)
			{
				MoveObject(Dvers[21], 1857.37, -2487.21, 10.73+0.0004, 0.0004, 0.00, 0.00, 180.00);
				PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
				SetTimerEx("park1Close", 10000, false, "d", playerid);
				park1Timer = SetTimerEx("park1Close", 10000, false, "d", playerid);
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ворота закроются через 10 сек");				
				SDvers[21] = 1;
			}
			else
			{
				SDvers[21] = 1;
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Вы уже открыли шлакбаум");						
			}
			return 1;				
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 841.09, 1315.29, 516.74))
		{
			switch(SDvers[18])
			{
			case 0:
				{
					MoveObject(Dvers[18], 841.09, 1315.29, 510.74, 0.5, 0.00, 0.00, 90.00);
					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
					SDvers[18] = 1;
				}
			case 1:
				{
					MoveObject(Dvers[18], 841.09, 1315.29, 516.74, 0.5, 0.00, 0.00, 90.00);
					ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
					PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
					SDvers[18] = 0;
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 894.0994,2096.5471,2721.8101))
		{
			if(IsACop(playerid))
			{
				switch(SDvers[0])
				{
				case 0:
					{
						MoveObject(Dvers[0],894.250000,2098.961181,2720.793945,0.5,0.0000, 0.0000, -90.0000);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[0] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[0], 894.25, 2097.70, 2720.79+0.004,0.5,0.0000, 0.0000, -90.0000);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[0] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 881.2035,2097.1069,2721.8101))//Оружейка
		{
			if(IsACop(playerid))
			{
				switch(SDvers[1])
				{
				case 0:
					{
						MoveObject(Dvers[1], 881.162841,2095.150341,2720.778320,0.5,0.000000,0.000000,89.999908);//о
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						//SetPlayerChatBubble(playerid,"{00FF00}Открывает дверь",-1,30.0,10000);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[1] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[1], 881.162841,2096.350341,2720.778320,0.5,0.000000,0.000000,89.999908);//з
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						//SetPlayerChatBubble(playerid,"{FE2E2E}Закрывает дверь",-1,30.0,10000);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[1] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -931.873779,847.187561,2511.927978))//Мэрия гос.сейф
		{
			if(IsAMayor(playerid))
			{
				switch(SDvers[7])
				{
				case 0:
					{
						MoveObject(Dvers[9], -933.203779,847.187561,2511.927978,0.5,0.000000,0.000000,0.000000);//о
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						//SetPlayerChatBubble(playerid,"{00FF00}Открывает дверь",-1,30.0,10000);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[7] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[9], -931.873779,847.187561,2511.927978,0.5,0.000000,0.000000,0.000000);//з
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						//SetPlayerChatBubble(playerid,"{FE2E2E}Закрывает дверь",-1,30.0,10000);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[7] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1613.659790,1222.383422,2512.427978))//Медики
		{
			if(IsAMedic(playerid))
			{
				switch(SDvers[8])
				{
				case 0:
					{
						MoveObject(Dvers[10], 1613.659790,1220.983422,2512.427978,0.5,0.000000,0.000000,88.799957);//o
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						//SetPlayerChatBubble(playerid,"{00FF00}Открывает дверь",-1,30.0,10000);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[8] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[10], 1613.659790,1222.383422,2512.427978,0.5,0.000000,0.000000,88.799957);//з
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						//SetPlayerChatBubble(playerid,"{FE2E2E}Закрывает дверь",-1,30.0,10000);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[8] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 10.0, 1289.09, -295.92, 6.08))
		{
			if(IsAArmy(playerid))
			{
				switch(SDvers[3])
				{
				case 0:
					{
						MoveObject(Dvers[3], 1289.09, -305.92, 6.08, 2.0, 0.0000, 0.0000, 270.0000);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						//SetPlayerChatBubble(playerid,"{00FF00}Открывает ворота",-1,30.0,10000);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[3] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[3], 1289.09, -295.92, 6.08, 2.0, 0.0000, 0.0000, 270.0000);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						//SetPlayerChatBubble(playerid,"{FE2E2E}Закрывает ворота",-1,30.0,10000);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[3] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 596.70, 2765.25, -49.25+1300))
		{
			if(IsACop(playerid) || IsAMayor(playerid))
			{
				switch(SDvers[5])
				{
				case 0:
					{
						MoveObject(Dvers[6], 596.70, 2765.25, 1253.19,2.0,0.0000, 0.0000, 180.82);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[5] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[6], 596.70, 2765.25, 1250.71,2.0,0.0000, 0.0000, 180.82);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[5] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 590.9053,2801.8093,1253.9659))
		{
			if(IsACop(playerid) || IsAMayor(playerid))
			{
				switch(SDvers[6])
				{
				case 0:
					{
						MoveObject(Dvers[7], 589.34, 2782.04, 1257.25,2.0,0.0000, 0.0000, -90.00);
						MoveObject(Dvers[8], 589.32, 2785.40, 1257.25,2.0,0.0000, 0.0000, -90.00);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[6] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[7], 589.34, 2782.04, 1254.25,2.0,0.0000, 0.0000, -90.00);
						MoveObject(Dvers[8], 589.32, 2785.40, 1254.25,2.0,0.0000, 0.0000, -90.00);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[6] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 214.5169, 1503.8608, 10.9933))
		{
			if(IsACop(playerid))
			{
				switch(SDvers[2])
				{
				case 0:
					{
						MoveObject(Dvers[2], 214.59, 1504.32, 11.14, 2.0, 0.00, 0.00, 78.22);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[2] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[2], 213.08, 1497.10, 11.14, 2.0, 0.00, 0.00, 78.22);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[2] = 0;
					}
				}
			}
			return 1;
		}
  		if(IsPlayerInRangeOfPoint(playerid, 4.0, 2751.55, -1023.33, 23.34))
	    {
			if(IsACop(playerid))
			{
				switch(SDvers[20])
				{
				case 0:
					{
						MoveObject(Dvers[20], 2751.55, -1023.33, 23.34+0.0004, 0.0004, 0.00, -18.00, -180.00);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[20] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[20], 2751.55, -1023.33, 23.34-0.0004, 0.0004, 0.00, 270.00, -180.00);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[20] = 0;
					}
				}
			}
			return 1;
		}
  		if(IsPlayerInRangeOfPoint(playerid, 4.0, 2743.17, -1023.33, 23.34))
	    {
			if(IsACop(playerid))
			{
				switch(SDvers[19])
				{
				case 0:
					{
						MoveObject(Dvers[19], 2743.17, -1023.33, 23.34+0.0004, 0.0004, 0.00, -18.00, 0.00);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[19] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[19], 2743.17, -1023.33, 23.34-0.0004, 0.0004, 0.00, 270.00, 0.00);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[19] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2579.85, -2438.72, 21.43))
	    {
			if(IsACop(playerid))
			{
				switch(SDvers[14])
				{
				case 0:
					{
						MoveObject(Dvers[14], 2579.85, -2438.72, 21.43+0.0004, 0.0004, 0.00, 0.00, -90.00);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[14] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[14], 2579.85, -2438.72, 21.43-0.0004, 0.0004, 0.00, -90.00, -90.00);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[14] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -339.1409,359.7180,702.2500))
		{
			if(p_info[playerid][pMember] == TEAM_SWAT)
			{
				switch(SDvers[10])
				{
				case 0:
					{
						MoveObject(Dvers[12], -341.214874,359.713836,701.249877,0.5,0.000000,0.000000,0.000000);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[10] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[12], -339.924926,359.713836,701.249877,0.5,0.000000,0.000000,0.000000);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[10] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -645.591613,-428.051422,1.321029))
		{
			if(IsACop(playerid) || p_info[playerid][pMember] == TEAM_MERIA)
			{
				switch(SDvers[11])
				{
				case 0:
					{
						MoveObject(Dvers[13], -647.103088,-428.051422,1.321029,0.5,0.000000,0.000000,0.000000);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[11] = 1;
					}
				case 1:
					{
						MoveObject(Dvers[13], -645.591613,-428.051422,1.321029,0.5,0.000000,0.000000,0.000000);
						ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.0,0,0,0,0,0);
						PlayerPlaySound(playerid, 1190, 0.0, 0.0, 0.0);
						SDvers[11] = 0;
					}
				}
			}
			return 1;
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -221.4251,696.6162,1002.0000))
		{
			if(IsACop(playerid))
			{
				switch(door_inter_swat_status)
				{
				case 0:
					{
						MoveDynamicObject(door_inter_swat, -223.1800, 696.1600, 1001.0000, 2.0, 0.0000, 0.0000, -76.3799);
						SendClientMessage(playerid, C_OSNOV, "Вы открыли дверь");
						SetPlayerChatBubble(playerid,"Открывает дверь", C_OSNOV, 30.0, 10000);
						door_inter_swat_status = 1;
					}
				case 1:
					{
						MoveDynamicObject(door_inter_swat, -223.17999, 696.15997, 1001.00000, 2.0, 0.0000, 0.0000, 0.0000);
						SendClientMessage(playerid, C_RED, "Вы закрыли дверь");
						SetPlayerChatBubble(playerid,"Закрывает дверь", C_RED, 30.0, 10000);
						door_inter_swat_status = 0;
					}
				}
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2085.409912, -2200.419921, 1002.219970))
		{
			if(IsACop(playerid))
			{
				switch(door_inter_fbi_status[0])
				{
				case 0:
					{
						MoveDynamicObject(door_inter_fbi[0], 2085.409912, -2200.419921, 998.219970, 2.0, 0.000000, 0.000000, 90.000000);
						SendClientMessage(playerid, C_OSNOV, "Вы открыли дверь");
						SetPlayerChatBubble(playerid,"Открывает дверь", C_OSNOV, 30.0, 10000);
						door_inter_fbi_status[0] = 1;
					}
				case 1:
					{
						MoveDynamicObject(door_inter_fbi[0], 2085.409912, -2200.419921, 1002.219970, 2.0, 0.000000, 0.000000, 90.000000);
						SendClientMessage(playerid, C_RED, "Вы закрыли дверь");
						SetPlayerChatBubble(playerid,"Закрывает дверь", C_RED, 30.0, 10000);
						door_inter_fbi_status[0] = 0;
					}
				}
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2085.409912, -2200.419921, 1004.739990))
		{
			if(IsACop(playerid))
			{
				switch(door_inter_fbi_status[1])
				{
				case 0:
					{
						MoveDynamicObject(door_inter_fbi[1], 2085.409912, -2200.419921, 1000.739990, 2.0, 0.000000, 0.000000, 90.000000);
						SendClientMessage(playerid, C_OSNOV, "Вы открыли дверь");
						SetPlayerChatBubble(playerid,"Открывает дверь", C_OSNOV, 30.0, 10000);
						door_inter_fbi_status[1] = 1;
					}
				case 1:
					{
						MoveDynamicObject(door_inter_fbi[1], 2085.409912, -2200.419921, 1004.739990, 2.0, 0.000000, 0.000000, 90.000000);
						SendClientMessage(playerid, C_RED, "Вы закрыли дверь");
						SetPlayerChatBubble(playerid,"Закрывает дверь", C_RED, 30.0, 10000);
						door_inter_fbi_status[1] = 0;
					}
				}
			}
		}
	}
	if(newkeys & (KEY_LOOK_LEFT) && newkeys & (KEY_LOOK_RIGHT))//Одновременно клавиши Q и E
	{
		new v = GetPlayerVehicleID(playerid);
		new model = (GetVehicleModel(v)-400);
		if(GetPVarInt(playerid, "InShop") > 0 || InShop[playerid] > 0) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(LightsPos[model][0] == 0.0 && LightsPos[model][1] == 0.0 && LightsPos[model][2] == 0.0) return 1;
			if(VehInfos[v][vRightBlink] == 1)
			{
				DestroyObject(Blink[v][0]);
				DestroyObject(Blink[v][1]);
				VehInfos[v][vRightBlink] = 0;
			}
			if(VehInfos[v][vLeftBlink] == 1)
			{
				DestroyObject(Blink[v][2]);
				DestroyObject(Blink[v][3]);
				VehInfos[v][vLeftBlink] = 0;
			}
			if(VehInfos[v][vAvary] == 1)
			{
				DestroyObject(Blink[v][0]);
				DestroyObject(Blink[v][1]);
				DestroyObject(Blink[v][2]);
				DestroyObject(Blink[v][3]);
				VehInfos[v][vAvary] = 0;
			}
			else
			{
				Blink[v][0] = CreateObject(19294, 0, 0, 0, 0, 0, 0);
				Blink[v][1] = CreateObject(19294, 0, 0, 0, 0, 0, 0);
				AttachObjectToVehicle(Blink[v][0], v, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
				AttachObjectToVehicle(Blink[v][1], v, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				Blink[v][2] = CreateObject(19294, 0, 0, 0, 0, 0, 0);
				Blink[v][3] = CreateObject(19294, 0, 0, 0, 0, 0, 0);
				AttachObjectToVehicle(Blink[v][2], v, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);//левыый  передний
				AttachObjectToVehicle(Blink[v][3], v, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);//левыый  задний
				VehInfos[v][vAvary] = 1;
			}
		}
	}
	if(newkeys & KEY_LOOK_RIGHT)
	{
		new v = GetPlayerVehicleID(playerid);
		new model = (GetVehicleModel(v)-400);
		if(GetPVarInt(playerid, "InShop") > 0 || InShop[playerid] > 0) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(LightsPos[model][0] == 0.0 && LightsPos[model][1] == 0.0 && LightsPos[model][2] == 0.0) return 1;
			if(VehInfos[v][vAvary] == 1) return 1;
			if(VehInfos[v][vLeftBlink] == 1)
			{
				DestroyObject(Blink[v][2]);
				DestroyObject(Blink[v][3]);
				VehInfos[v][vLeftBlink] = 0;
			}
			if(VehInfos[v][vRightBlink] == 0)
			{
				Blink[v][0] = CreateObject(19294, 0, 0, 0, 0, 0, 0);
				Blink[v][1] = CreateObject(19294, 0, 0, 0, 0, 0, 0);
				AttachObjectToVehicle(Blink[v][0], v, LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);
				AttachObjectToVehicle(Blink[v][1], v, LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);
				VehInfos[v][vRightBlink] = 1;
			}
			else if(VehInfos[v][vRightBlink] == 1)
			{
				DestroyObject(Blink[v][0]);
				DestroyObject(Blink[v][1]);
				VehInfos[v][vRightBlink] = 0;
			}
		}
	}
	if(newkeys& KEY_LOOK_LEFT)
	{
		new v = GetPlayerVehicleID(playerid);
		new model = (GetVehicleModel(v)-400);
		if(GetPVarInt(playerid, "InShop") > 0 || InShop[playerid] > 0) return 1;
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(LightsPos[model][0] == 0.0 && LightsPos[model][1] == 0.0 && LightsPos[model][2] == 0.0) return 1;
			if(VehInfos[v][vAvary] == 1) return 1;
			if(VehInfos[v][vRightBlink] == 1)
			{
				DestroyObject(Blink[v][0]);
				DestroyObject(Blink[v][1]);
				VehInfos[v][vRightBlink] = 0;
			}
			if(VehInfos[v][vLeftBlink] == 0)
			{
				Blink[v][2] = CreateObject(19294, 0, 0, 0, 0, 0, 0);
				Blink[v][3] = CreateObject(19294, 0, 0, 0, 0, 0, 0);
				AttachObjectToVehicle(Blink[v][2], v, -LightsPos[model][0], LightsPos[model][1], LightsPos[model][2], 0, 0, 0);//левыый  передний
				AttachObjectToVehicle(Blink[v][3], v, -LightsPos[model][3], LightsPos[model][4], LightsPos[model][5], 0, 0, 0);//левыый  задний
				VehInfos[v][vLeftBlink] = 1;
			}
			else if(VehInfos[v][vLeftBlink] == 1)
			{
				DestroyObject(Blink[v][2]);
				DestroyObject(Blink[v][3]);
				VehInfos[v][vLeftBlink] = 0;
			}
		}
	}
	if(newkeys == KEY_YES) // Y
	{
	    if(GetPVarInt(playerid,"get_patron") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPVarInt(playerid,"get_metall") && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			STRING_GLOBAL = "";
			for(new place = 0; place < MAX_FRACTIONS; place++)
			{
			    if(IsAArmy(playerid))
			    {
					if(place == 0 || place == 7 || place == 8 || place == 15 || place == 16 || place == 18) continue;
				}
				format(STRING_GLOBAL, 1500, "%s%s\n", STRING_GLOBAL, Fractions[place][fractionName]);
			}
			ShowPlayerDialogEx(playerid, dSelectFrac, DIALOG_STYLE_LIST, "{ebec86}>> Выберите фракцию", STRING_GLOBAL, "Выбрать", "Закрыть");
			return 1;
		}
		if(GetPVarInt(id_player_wbook,"wbook_proposal") && id_player_wbook != INVALID_PLAYER_ID && playerid_wbook != INVALID_PLAYER_ID && playerid_wbook != playerid)
		{
			MeAction(playerid_wbook, "показал(а) трудовую книжку");

			STRING_GLOBAL = "";
			format(STRING_GLOBAL, 512, "SELECT * FROM `employment_history` WHERE `name_player` = '%s' AND `data_un_invite` != 'No-ne'", GetName(playerid_wbook));
			mysql_tquery(dbHandle, STRING_GLOBAL, "callback_employment_history", "ds", id_player_wbook, GetName(playerid_wbook));

			DeletePVar(id_player_wbook,"wbook_proposal");
			DeletePVar(playerid_wbook,"wbook_proposal");

			id_player_wbook = INVALID_PLAYER_ID;
			playerid_wbook = INVALID_PLAYER_ID;
		}
		if(GetPVarInt(playerid, "MechanicRepairID") > 0)
		{
		    new VehicleID = GetPlayerVehicleID(playerid);
		    new GivePlayerID = GetPVarInt(playerid, "MechanicPlayerID");
		    new GiveVehicleID = GetPlayerVehicleID(GivePlayerID);
			if(p_info[GivePlayerID][pJob] != JOB_MECHANIC) return SendErr(playerid, "Игрок не работает механиком");
			if(GiveVehicleID >= MechanicVehicle[0] && GiveVehicleID <= MechanicVehicle[1])
			{
			    if(MechanicVehicleDriver[GiveVehicleID] == -1) return SendErr(playerid, "Транспорт игрока не арендован");
				if(GetMoney(playerid) < GetPVarInt(playerid, "MechanicRepairCost")) return SendErr(playerid, "У вас недостаточно денег");
				GiveMoney(playerid, -GetPVarInt(playerid, "MechanicRepairCost"), "Заплатил механику за ремонт");
				GiveMoney(GivePlayerID, GetPVarInt(playerid, "MechanicRepairCost"), "Механик получил за ремонт авто");
	        	RepairVehicle(VehicleID);
	        	SetPVarInt(playerid, "MechanicRepairID", -1);
	        	SetPVarInt(GivePlayerID, "MechanicRepair", -1);
	        	SetPVarInt(GivePlayerID, "MechanicPlayerID", -1);
	        	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Механик отремонтировал(а) ваш транспорт за {f0e86b}%d{FFFFFF} рублей", GetPVarInt(playerid, "MechanicRepairCost"));
				SendInf(playerid, STRING_GLOBAL);
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы отремонтировали транспорт и заработали {f0e86b}%d{FFFFFF} рублей", GetPVarInt(playerid, "MechanicRepairCost"));
				SendInf(GivePlayerID, STRING_GLOBAL);
			}
			else SendErr(playerid, "Игрок не в рабочем транспорте");
		}
		if(GetPVarInt(playerid, "MechanicFillID") > 0)
		{
		    new VehicleID = GetPlayerVehicleID(playerid);
		    new GivePlayerID = GetPVarInt(playerid, "MechanicPlayerID");
		    new GiveVehicleID = GetPlayerVehicleID(GivePlayerID);
			if(p_info[GivePlayerID][pJob] != JOB_MECHANIC) return SendErr(playerid, "Игрок не работает механиком");
			if(GiveVehicleID >= MechanicVehicle[0] && GiveVehicleID <= MechanicVehicle[1])
			{
			    if(MechanicVehicleDriver[GiveVehicleID] == -1) return SendErr(playerid, "Транспорт игрока не арендован");
				if(GetMoney(playerid) < GetPVarInt(playerid, "MechanicFillCost")) return SendErr(playerid, "У вас недостаточно денег");
				GiveMoney(playerid, -GetPVarInt(playerid, "MechanicFillCost"), "Заплатил механику за заправку");
				GiveMoney(GivePlayerID, GetPVarInt(playerid, "MechanicFillCost"), "Механик получил за заправку авто");
		       	Fuel[VehicleID] += GetPVarFloat(playerid, "MechanicFillFuel");
		       	MechanicFuel[GiveVehicleID] -= floatround(GetPVarFloat(playerid, "MechanicFillFuel"));
		       	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Бензин - {f0e86b}%d$/литр (%d/2500)\n{FFFFFF}Ремонт - {f0e86b}от 2$", MechanicFuelCost[GiveVehicleID], MechanicFuel[GiveVehicleID]);
				UpdateDynamic3DTextLabelText(MechanicFuelCostText[GiveVehicleID], COLOR_WHITE, STRING_GLOBAL);
				SetPVarInt(playerid, "MechanicFillID", -1);
		       	SetPVarInt(GivePlayerID, "MechanicFill", -1);
		       	SetPVarInt(GivePlayerID, "MechanicPlayerID", -1);
		       	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Механик заправил(а) ваш транспорт на {f0e86b}%d {FFFFFF}литров за {f0e86b}%d{FFFFFF} рублей", GetPVarFloat(playerid, "MechanicFillFuel"), GetPVarInt(playerid, "MechanicFillCost"));
				SendInf(playerid, STRING_GLOBAL);
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы заправили транспорт на {f0e86b}%d {FFFFFF}литров и заработали {f0e86b}%d{FFFFFF} рублей", GetPVarFloat(playerid, "MechanicFillFuel"), GetPVarInt(playerid, "MechanicFillCost"));
				SendInf(GivePlayerID, STRING_GLOBAL);
			}
			else SendErr(playerid, "Игрок не в рабочем транспорте");
		}
		if(GetPVarInt(playerid,"gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid)
		{
			new offer = GetPVarInt(playerid,"gunoffer");
			new price = GetPVarInt(playerid,"gunprice");
			new needammo = GetPVarInt(playerid,"gunammo");
			new weaponid = GetPVarInt(playerid,"gunid");
			if(GetPVarInt(offer,"gunoffee") == playerid)
			{
				SetPVarInt(playerid,"gunoffee",0);
				SetPVarInt(playerid,"gunoffer",0);
				SetPVarInt(playerid,"gunammo",0);
				SetPVarInt(playerid,"gunprice",0);
				SetPVarInt(playerid,"gunid",0);
				SetPVarInt(offer,"gunoffee",0);
				
				if(robbery_role[playerid] == 3)
				{
				    robbery_gun[robbery_players[playerid]] = 1;
					SendInf(playerid, "Вы достали оружие, поделитесь им с соучастниками");
				}

	   			new slot = GetGunSlot(weaponid);
				new weapon, ammo;
				GetPlayerWeaponData(offer, slot, weapon, ammo);
				if(weapon != weaponid || ammo < needammo) return SendErr(playerid, "У продавца закончилось оружие");
				new remain = ammo - needammo;
				if(remain > ammo) return 1;
				if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно денег");
				new ostat = ammo - needammo;
				AC_GivePlayerWeapon(playerid, weaponid, needammo);
				GiveMoney(playerid, -price, "Покупка оружия");
				GiveMoney(offer, price, "Продажа оружия");
				new mes[128];
				format(mes,sizeof(mes),"продал оружие %s", p_info[playerid][pName]);
				MeAction(offer, mes);
				SetPlayerAmmo(offer, weaponid, 0);
				AC_GivePlayerWeapon(offer, weaponid, ostat);
				return 1;
			}
		}
		if(GetPVarInt(playerid, "KeyHeal1") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerHeal1"), price = GetPVarInt(playerid, "MoneyHeal1");
			if(GetMoney(playerid) < WorkSalary[21])
			{
				SCMF(targetid, COLOR_GREY, "* У %s недостаточно средств", GetName(playerid));
				DeletePVar(playerid, "PlayerHeal1");
				DeletePVar(playerid, "MoneyHeal1");
				DeletePVar(playerid, "KeyHeal1");
				return SendErr(playerid, "У вас не хватает денег");
			}
			GiveMoney(playerid, -WorkSalary[21], "Оплата лечения");
			GiveMoney(targetid, WorkSalary[21], "За лечение");

			FracBank[9] += WorkSalary[21];
			MysqlUpdateOtherInt("sfnbank", FracBank[9]);

			PlayerHP[playerid] = 100;
			SetHealth(playerid, 100);
			if(GetPlayerDrunkLevel(playerid) > 0) SetPlayerDrunkLevel(playerid, 0);
			SCMF(playerid, COLOR_GREEN, "%s %s провёл курс реабилитации с Вами за %iр", GetRank(p_info[targetid][pMember],p_info[targetid][pRank]), GetName(targetid), price);
			SCMF(targetid, COLOR_GREEN, "Вы провели курс реабилитации %s за %iр", GetName(playerid), price);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[ЛЕЧЕНИЕ]: %s %s[%i] провел(а) курс реабилитации от зависимости %s[%i]", GetRank(p_info[targetid][pMember],p_info[targetid][pRank]), GetName(targetid), targetid, GetName(playerid), playerid);
			SendFMes(p_info[targetid][pMember], COLOR_LIGHTBLUE, STRING_GLOBAL);
			if(Medicines[targetid]) Medicines[targetid]--;
			SCMF(targetid, COLOR_WHITE, "Количество комплектов медикаментов с собой: %i", Medicines[targetid]);
			DeletePVar(playerid, "PlayerHeal1");
			DeletePVar(playerid, "MoneyHeal1");
			DeletePVar(playerid, "KeyHeal1");
			
			p_info[playerid][Disease][2] = 0;
			MysqlUpdatePlayerInt(playerid, "Disease2", p_info[playerid][Disease][2]);
			return 1;
		}
		else if(GetPVarInt(playerid, "KeyHeal") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerHeal"), price = GetPVarInt(playerid, "MoneyHeal");
			if(GetMoney(playerid) < WorkSalary[21])
			{
				SCMF(targetid, COLOR_GREY, "* У %s недостаточно средств", GetName(playerid));
				DeletePVar(playerid, "PlayerHeal");
				DeletePVar(playerid, "MoneyHeal");
				DeletePVar(playerid, "KeyHeal");
				return SendErr(playerid, "У вас не хватает денег");
			}
			if(IsPlayerInAnyVehicle(targetid) && !IsPlayerInVehicle(playerid, GetPlayerVehicleID(targetid)))
			return SendErr(playerid, "Игрок должен находиться вместе с вами в машине");
			GiveMoney(playerid, -WorkSalary[21], "Оплата лечения");
			GiveMoney(targetid, WorkSalary[21], "За лечение");
			
			FracBank[9] += WorkSalary[21];
			MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			
			PlayerHP[playerid] = 100;
			SetHealth(playerid, 100);
			if(GetPlayerDrunkLevel(playerid) > 0) SetPlayerDrunkLevel(playerid, 0);
			SCMF(playerid, COLOR_GREEN, "%s %s вылечил вас за %iр", GetRank(p_info[targetid][pMember],p_info[targetid][pRank]), GetName(targetid), price);
			SCMF(targetid, COLOR_GREEN, "Вы вылечили %s за %iр", GetName(playerid), price);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[ЛЕЧЕНИЕ]: %s %s[%i] провел(а) курс лечения пациенту %s[%i]", GetRank(p_info[targetid][pMember],p_info[targetid][pRank]), GetName(targetid), targetid, GetName(playerid), playerid);
			SendFMes(p_info[targetid][pMember], COLOR_LIGHTBLUE, STRING_GLOBAL);
			if(Medicines[targetid]) Medicines[targetid]--;
			SCMF(targetid, COLOR_WHITE, "Количество комплектов медикаментов с собой: %i", Medicines[targetid]);
			DeletePVar(playerid, "PlayerHeal");
			DeletePVar(playerid, "MoneyHeal");
			DeletePVar(playerid, "KeyHeal");
			return 1;
		}
		else if(GetPVarInt(playerid, "KeyTicket") == 1)
		{
			new targetid = GetPVarInt(playerid, "TicketPlayer"), price = GetPVarInt(playerid, "TicketSumma");
			if(GetMoney(playerid) < price)
			{
				SCMF(targetid, COLOR_GREY, "У игрока %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "TicketPlayer");
				DeletePVar(playerid, "TicketSumma");
				DeletePVar(playerid, "TicketReason");
				DeletePVar(playerid, "KeyTicket");
				SendErr(playerid, "У вас не хватает денег!");
				return 1;
			}

			GiveMoney(playerid, -price, "Оплата штрафа");
			GiveMoney(targetid, price, "Оплата штрафа");

			SCMF(playerid, COLOR_GREEN, "Вы оплатили штраф на %iр офицеру %s", price, GetName(targetid));
			SCMF(targetid, COLOR_GREEN, "%s оплатил штраф в размере %iр", GetName(playerid), price);
			DeletePVar(playerid, "TicketPlayer");
			DeletePVar(playerid, "TicketSumma");
			DeletePVar(playerid, "TicketReason");
			DeletePVar(playerid, "KeyTicket");
			return 1;
		}
		else if(GetPVarInt(playerid, "KeyJail") == 1)
		{
			new targetid = GetPVarInt(playerid, "JailPlayer");
			if(GetMoney(playerid) < 50000)
			{
				SCMF(targetid, COLOR_GREY, "У игрока %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "JailPlayer");
				DeletePVar(playerid, "JailSumma");
				DeletePVar(playerid, "JailReason");
				DeletePVar(playerid, "KeyJail");
				SendErr(playerid, "У вас не хватает денег!");
				return 1;
			}

			GiveMoney(playerid, -50000, "Оплата адвокату");
			GiveMoney(targetid, 50000, "Оплата адвокату");

			SCMF(playerid, COLOR_GREEN, "Вы оплатили %iр адвокату %s", 50000, GetName(targetid));
			SCMF(targetid, COLOR_GREEN, "%s оплатил в размере %iр", GetName(playerid), 50000);
			DeletePVar(playerid, "JailPlayer");
			DeletePVar(playerid, "JailSumma");
			DeletePVar(playerid, "JailReason");
			DeletePVar(playerid, "KeyJail");
			p_info[playerid][pJailTime] = 1;
			AC_ResetPlayerWeapons(playerid);
			MysqlUpdatePlayerInt(playerid, "jailtime", p_info[playerid][pJailTime]);
			return 1;
		}
		else if(GetPVarInt(playerid, "KeySim") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerSim"), price = GetPVarInt(playerid, "SimPrice");
			if(GetMoney(playerid) < price)
			{
				SCMF(targetid, COLOR_GREY, "У игрока %s недостаточно средств!", GetName(playerid));
				DeletePVar(playerid, "PlayerSim");
				DeletePVar(playerid, "SimPrice");
				DeletePVar(playerid, "KeySim");
				SendErr(playerid, "У вас не хватает денег");
				return 1;
			}
			GiveMoney(playerid, -price, "Продажа SIM-карты");
			GiveMoney(targetid, price, "Покупка SIM-карты");

			SCMF(playerid, COLOR_GREEN, "Вы приобрели SIM-карту у %s за %iр", GetName(targetid), price);
			SCMF(targetid, COLOR_GREEN, "%s купил у Вас SIM-карту за %iр", GetName(playerid), price);
			p_info[playerid][pPhoneNumber] = p_info[targetid][pPhoneNumber];
			p_info[targetid][pPhoneNumber] = 1;
			MysqlUpdatePlayerInt(playerid, "phonenumber", p_info[playerid][pPhoneNumber]);
			MysqlUpdatePlayerInt(targetid, "phonenumber", p_info[targetid][pPhoneNumber]);
			SCMF(playerid, COLOR_YELLOW, "Ваш новый номер: {FFFFFF}%i", p_info[playerid][pPhoneNumber]);
			DeletePVar(playerid, "PlayerSim");
			DeletePVar(playerid, "SimPrice");
			DeletePVar(playerid, "KeySim");
			return 1;
		}
		else if(GetPVarInt(playerid, "sellexamlic") == 1)
		{
			new targetid = GetPVarInt(playerid, "idselllic"), rcv = GetPVarInt(playerid, "changelic");
			new type[28], price;
			switch(rcv)
			{
			case 1: price = 1000;
			case 2: price = 3000;
			case 3: price = 10000;
			case 4: price = 30000;
			case 5: price = 50000;
			}
			if(GetMoney(playerid) < price)
			{
				SCMF(targetid, COLOR_GREY, "У игрока %s недостаточно средств", GetName(playerid));
				DeletePVar(playerid, "sellexamlic");
				DeletePVar(playerid, "idselllic");
				DeletePVar(playerid, "changelic");
				return SendErr(playerid, "У вас не хватает денег!");
			}
			new Float:x, Float:y, Float:z;
			GetPlayerPos(targetid, x, y, z);
			if(!IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z))
			{
				DeletePVar(playerid, "sellexamlic");
				DeletePVar(playerid, "idselllic");
				DeletePVar(playerid, "changelic");
				return SendErr(playerid, "Вы далеко друг от друга");
			}
			if(rcv == 1)
			{
				p_info[playerid][pLic][0] = 1;
				type = "водительские права";
			}
			if(rcv == 2)
			{
				p_info[playerid][pLic][1] = 1;
				type = "лицензию на судоходство";
			}
			if(rcv == 3)
			{
				p_info[playerid][pLic][2] = 1;
				type = "лицензию на полеты";
			}
			if(rcv == 4)
			{
				p_info[playerid][pLic][3] = 1;
				type = "лицензию на оружие";
			}
			if(rcv == 5)
			{
				new i = GetPVarInt(playerid, "PlayerBizz");
				BizzInfo[i][bLic] = 1;
				MysqlUpdateBizzInt(i, "lic", BizzInfo[i][bLic]);
				type = "лицензию на бизнес";
			}
			format(p_info[playerid][pLics],16,"%i, %i, %i, %i",p_info[playerid][pLic][0],p_info[playerid][pLic][1],p_info[playerid][pLic][2],p_info[playerid][pLic][3]);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE name='%s'", p_info[playerid][pLics], GetName(playerid));
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

			GiveMoney(playerid, -price, "Покупка лицензии");
			GiveMoney(targetid, price, "Продажа лицензии");

			SCMF(playerid, COLOR_GREEN, "Вы купили %s у %s. Цена: %iр", type, GetName(playerid), price);
			SCMF(targetid, COLOR_GREEN, "Вы продали %s игроку %s за %iр", GetName(targetid), type, price);

			STRING_GLOBAL[0] = EOS;
			if(p_info[playerid][pSex] == 1) format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[LIC] %s %s[%i] продал игроку %s[%i] за %iр", GetRank(p_info[targetid][pMember],p_info[targetid][pRank]), GetName(targetid), playerid, GetName(playerid), playerid, price);
			else format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[LIC] %s %s[%i] продала игроку %s[%i] за %iр", GetRank(p_info[targetid][pMember],p_info[targetid][pRank]), GetName(targetid), playerid, GetName(playerid), playerid, price);
			SendFMes(p_info[playerid][pMember], COLOR_YELLOW, STRING_GLOBAL);
			DeletePVar(playerid, "sellexamlic");
			DeletePVar(playerid, "idselllic");
			DeletePVar(playerid, "changelic");
			return 1;
		}
		else if(GetPVarInt(playerid, "sellbiz") == 1) // продажа бизнеса игроку
		{
			new targetid = GetPVarInt(playerid, "idsellplayerbiz");
			new bizzid = GetPVarInt(playerid, "bizzid");
			new price = GetPVarInt(playerid, "price_bizz");

			if(GetMoney(playerid) < price)
			{
				SCMF(targetid, COLOR_DARKORANGE, "У игрока %s недостаточно средств", p_info[playerid][pName]);
				DeletePVar(playerid, "sellbiz");
				DeletePVar(playerid, "idsellplayerbiz");
				DeletePVar(playerid, "bizzid");
				DeletePVar(playerid, "price_bizz");
				return SendErr(playerid, "У вас не хватает денег");
			}

			new Float:x, Float:y, Float:z;
			GetPlayerPos(targetid, x, y, z);
			if(!IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z))
			{
				DeletePVar(playerid, "sellbiz");
				DeletePVar(playerid, "idsellplayerbiz");
				DeletePVar(playerid, "bizzid");
				DeletePVar(playerid, "price_bizz");
				return SendClientMessage(playerid, COLOR_DARKORANGE, "Вы далеко друг от друга");
			}

			strmid(BizzInfo[bizzid][bOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET owner = '%s' WHERE id = %d",
			p_info[playerid][pName], bizzid);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			UpdateBizz(bizzid);

			GiveMoney(playerid, -price, "Покупка биза");
			GiveMoney(targetid, price, "Продажа биза");

			SCMF(playerid, COLOR_BLUE, "Поздравляем! {FFFFFF}%s {1D99D4}продал Вам свой бизнес за {FFCC00}%i {1D99D4}рублей", p_info[targetid][pName], price);
			SCMF(targetid, COLOR_BLUE, "Вы продали бизнес игроку {FFFFFF}%s {1D99D4}за {FFCC00}%i {1D99D4}рублей", p_info[targetid][pName], price);
			DeletePVar(playerid, "sellbiz");
			DeletePVar(playerid, "idsellplayerbiz");
			DeletePVar(playerid, "bizzid");
			DeletePVar(playerid, "price_bizz");
			return 1;
		}
		new CallPlayer = GetPVarInt(playerid, "CallPlayerID");
		if(GetPVarInt(playerid, "CallPlayerID") != -1)
		{
			if(GetPVarInt(playerid, "CallPlayerStart")) return 1;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid, 1, p_info[playerid][pModelPhone], 6, 0.059000, 0.014000, -0.008999, 95.100051, -179.800033, 46.500030, 1.000000, 1.000000, 1.000000);
			SetPVarInt(playerid, "CallPlayerStart", 1);
			PlayerPlaySound(playerid, p_info[playerid][SoundCall]+1, 0, 0, 0);
			SCM(playerid, COLOR_ANTIQUEWHITE, "Вы ответили на звонок. Используйте чат для разговора");
			SCM(playerid, COLOR_ANTIQUEWHITE, "Чтобы завершить звонок нажмите '{FF6347}N{FAEBD7}'");
			SCM(CallPlayer, COLOR_ANTIQUEWHITE, "Абонет ответил на звонок. Используйте чат для разговора");
			return 1;
		}
	}
	else if(newkeys == KEY_NO) // N
	{
	    if(GetPVarInt(playerid, "CallPlayerID") != -1 && GetPVarInt(GetPVarInt(playerid, "CallPlayerID"), "CallPlayerID") == playerid)
		{
		    new CallPlayer = GetPVarInt(playerid, "CallPlayerID");
			if(GetPVarInt(playerid, "CallPlayerStart"))
			{
			    //SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid, 1);
				SetPVarInt(playerid, "CallPlayerStart", 0);
			}
			if(GetPVarInt(CallPlayer, "CallPlayerStart"))
			{
				//SetPlayerSpecialAction(CallPlayer, SPECIAL_ACTION_STOPUSECELLPHONE);
				SetPlayerSpecialAction(CallPlayer, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(CallPlayer, 1);
				SetPVarInt(CallPlayer, "CallPlayerStart", 0);
			}
			SendInf(CallPlayer, "Абонент завершил звонок");
			PlayerPlaySound(CallPlayer, p_info[CallPlayer][SoundCall]+1, 0, 0, 0);
			SetPlayerChatBubble(CallPlayer, "завершил(а) звонок", COLOR_PURPLE, 10.0, 10000);
			SendInf(playerid, "Вы завершили звонок");
			SetPlayerChatBubble(playerid, "завершил(а) звонок", COLOR_PURPLE, 10.0, 10000);
			PlayerPlaySound(playerid, p_info[playerid][SoundCall]+1, 0, 0, 0);
			SetPVarInt(CallPlayer, "CallPlayerID", -1);
			SetPVarInt(playerid, "CallPlayerID", -1);
			return 1;
		}
		if(GetPVarInt(id_player_wbook,"wbook_proposal") && id_player_wbook != INVALID_PLAYER_ID && playerid_wbook != INVALID_PLAYER_ID && playerid_wbook != playerid)
		{
			SendInf(playerid_wbook, "Вы отказались от предложения");
			SendInf(playerid_wbook, "Игрок отказался от предложения");
			DeletePVar(playerid_wbook,"wbook_proposal");
			DeletePVar(id_player_wbook,"wbook_proposal");
			id_player_wbook = INVALID_PLAYER_ID;
			playerid_wbook = INVALID_PLAYER_ID;
			return 1;
		}
		if(GetPVarInt(playerid, "drugoffee") == playerid && GetPVarInt(playerid,"drugoffer") != playerid)
		{
		    new offer = GetPVarInt(playerid,"drugoffer");
			if(GetPVarInt(offer,"drugoffee") == playerid)
			{
				SetPVarInt(playerid,"drugoffee",-1);
				SetPVarInt(playerid,"drugoffer",-1);
				SetPVarInt(playerid,"drugprice",0);
				SetPVarInt(offer,"drugoffee",0);
				SendInf(playerid, "Вы отказались от предложения");
				SendInf(offer, "Игрок отказался от предложения");
				return 1;
			}
		}
   		if(GetPVarInt(playerid,"gunoffee") == playerid && GetPVarInt(playerid,"gunoffer") != playerid)
		{
		    new offer = GetPVarInt(playerid,"gunoffer");
			if(GetPVarInt(offer,"gunoffee") == playerid)
			{
				SetPVarInt(playerid, "gunoffee", -1);
				SetPVarInt(playerid, "gunoffer", -1);
				SetPVarInt(playerid, "gunprice", 0);
				SetPVarInt(offer, "gunoffee", 0);
				SendInf(playerid, "Вы отказались от предложения");
				SendInf(offer, "Игрок отказался от предложения");
				return 1;
			}
		}
		if(GetPVarInt(playerid, "KeyHeal") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerHeal");
			SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "PlayerHeal");
			DeletePVar(playerid, "MoneyHeal");
			DeletePVar(playerid, "KeyHeal");
			return 1;
		}
		else if(GetPVarInt(playerid, "KeyCar") == 1)
		{
			new targetid = GetPVarInt(playerid, "CarPlayer");
			SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "CarPrice");
			DeletePVar(playerid, "CarPlayer");
			DeletePVar(playerid, "KeyCar");
			return 1;
		}
		else if(GetPVarInt(playerid, "KeyTicket") == 1)
		{
			new targetid = GetPVarInt(playerid, "TicketPlayer");
			SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "TicketPlayer");
			DeletePVar(playerid, "TicketSumma");
			DeletePVar(playerid, "TicketReason");
			DeletePVar(playerid, "KeyTicket");
			return 1;
		}
		else if(GetPVarInt(playerid, "KeyJail") == 1)
		{
			new targetid = GetPVarInt(playerid, "JailPlayer");
			SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "JailPlayer");
			DeletePVar(playerid, "JailSumma");
			DeletePVar(playerid, "JailReason");
			DeletePVar(playerid, "KeyJail");
			return 1;
		}
		else if(GetPVarInt(playerid, "KeySim") == 1)
		{
			new targetid = GetPVarInt(playerid, "PlayerSim");
			SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "PlayerSim");
			DeletePVar(playerid, "SimPrice");
			DeletePVar(playerid, "KeySim");
			return 1;
		}
		if(GetPVarInt(playerid, "sellexamlic") == 1)
		{
			new targetid = GetPVarInt(playerid, "idselllic");
			SendClientMessage(playerid, COLOR_RED, "Вы отказались от предложения");
			SendClientMessage(targetid, COLOR_RED, "Игрок отказался от предложения");
			DeletePVar(playerid, "sellexamlic");
			DeletePVar(playerid, "idselllic");
			DeletePVar(playerid, "changelic");
			return 1;
		}
		else if(GetPVarInt(playerid, "sellbiz") == 1) // продажа бизнеса игроку
		{
			new targetid = GetPVarInt(playerid, "idsellplayerbiz");
			SendClientMessage(playerid, COLOR_BLUE, "Вы отказались от покупки бизнеса!");
			SCMF(targetid, COLOR_BLUE, "Игрок %s отказался от покупки Вашего бизнеса", p_info[targetid][pName]);
			DeletePVar(playerid, "sellbiz");
			DeletePVar(playerid, "idsellplayerbiz");
			DeletePVar(playerid, "bizzid");
			DeletePVar(playerid, "price_bizz");
			return 1;
		}
	}
	if(PRESSED(KEY_SPRINT))
	{
		if(GetPVarInt(playerid, "Animation") == 1)
		{
			ClearAnimations(playerid);
			SetPlayerSpecialAction(playerid, 0);
			ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
			DeletePVar(playerid,"Animation");
			TextDrawHideForPlayer(playerid, AnimDraw);
			return 1;
		}
		if(GetPVarInt(playerid, "StartTraining") == 1)
		{
			if(GetPVarInt(playerid, "GYM_Bike") == 1 && GetPVarInt(playerid, "GYM_Simulator_Time") <= gettime()+2)
			{
				ApplyAnimation(playerid, "GYMNASIUM", "gym_bike_pedal", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+2);
				if(GetPVarInt(playerid, "ClickBike") >= 100)
				{
					if(GetPVarInt(playerid, "ClickWeight") >= 50)
					{
						SetPVarInt(playerid, "ClickWeight", 0);
					}
					else GivePVarInt(playerid, "ClickWeight", 1);
					if(p_info[playerid][pStats][1] < 100)
					{
						GivePlayerStats(playerid, 1, 1);
						GameTextForPlayer(playerid, "~w~Stamina ~g~+1", 500, 1);
					}
					SetPVarInt(playerid, "ClickBike", 0);
				}
				else GivePVarInt(playerid, "ClickBike", 1);
			}
			else if(GetPVarInt(playerid, "GYM_Thread") == 1 && GetPVarInt(playerid, "GYM_Simulator_Time") <= gettime()+2)
			{
				ApplyAnimation(playerid, "GYMNASIUM", "gym_tread_jog", 4, 0, 0, 0, 1, 0);
				SetPVarInt(playerid, "GYM_Simulator_Time", gettime()+2);
				if(GetPVarInt(playerid, "ClickThread") >= 100)
				{
					if(GetPVarInt(playerid, "ClickWeight") >= 50)
					{
						SetPVarInt(playerid, "ClickWeight", 0);
					}
					else GivePVarInt(playerid, "ClickWeight", 1);
					if(p_info[playerid][pStats][1] < 100)
					{
						GivePlayerStats(playerid, 1, 1);
						GameTextForPlayer(playerid, "~w~Stamina ~g~+1", 500, 1);
					}
					SetPVarInt(playerid, "ClickThread", 0);
				}
				else GivePVarInt(playerid, "ClickThread", 1);
			}
		}
	}
	if(newkeys == 8 || newkeys == 32)
	{
	    if(!GetPVarInt(playerid, "SDDMVGFA")) return 1;
        if(!IsPlayerInAnyVehicle(playerid))
		{
		    if(GetPVarInt(playerid, "SDDMVGFADOM"))
		    {
		        FreezePlayer(playerid, 5000);
				SetPlayerPos(playerid, 174.1808,1160.7122,542.4528);
				SetPlayerFacingAngle(playerid, 0.0441);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "SDDMVGFA");
				DeletePVar(playerid, "SDDMVGFADOM");
				new mes[250],classname[20];
			    new rent = GetHomeOplata(GetPVarInt(playerid, "infhouse"));
				switch(HouseInfo[GetPVarInt(playerid, "infhouse")][hDiscript])
				{
					case 1: classname = "Низкий";
					case 2: classname = "Средний";
					case 3: classname = "Высокий";
					default: SendErr(playerid, "Ошибка");
				}
			    format(mes,sizeof(mes),"Номер дома: {f0e86b}%d{FFFFFF}\nКласс: {f0e86b}%s{FFFFFF}\nЦена: {f0e86b}%d{FFFFFF} рублей\nСтоимость платы за сутки: {f0e86b}%d{FFFFFF} рублей\n{FF6347}- Посмотреть фотографию дома\n{FF6347}- Отметить дом на GPS",GetPVarInt(playerid, "infhouse"),classname,HouseInfo[GetPVarInt(playerid, "infhouse")][hPrice]*WorkSalary[7],rent);
			    ShowPlayerDialogEx(playerid, dRieltorkadominfo1, 2, "{ebec86}>> Информация о доме",mes, "Выбор", "Отмена");
			}
			else if(GetPVarInt(playerid, "SDDMVGFABIZ"))
			{
			    FreezePlayer(playerid, 5000);
                SetPlayerPos(playerid, 174.1808,1160.7122,542.4528);
				SetPlayerFacingAngle(playerid, 0.0441);
				SetCameraBehindPlayer(playerid);
				DeletePVar(playerid, "SDDMVGFABIZ");
				DeletePVar(playerid, "SDDMVGFA");
				new bizid = GetPVarInt(playerid, "infbusiness");

				new mes[400];
			    format(mes,sizeof(mes),"Номер бизнеса: {f0e86b}%d{FFFFFF}\nНазвание: {f0e86b}%s{FFFFFF}\nЦена: {f0e86b}%d{FFFFFF} рублей\nСтоимость оплаты электроэнергии: {f0e86b}%d{FFFFFF} рублей\n{FF6347}- Посмотреть фотографию бизнеса\n{FF6347}- Отметить бизнес на GPS", bizid, BizzInfo[bizid][bName], BizzInfo[bizid][bPrice]*WorkSalary[7], BizzInfo[bizid][bPrice] / 1000);
		   		ShowPlayerDialogEx(playerid, dRieltorkabizinfo2, 2, "{ebec86}>> Информация о бизнесе", mes, "Выбор", "Отмена");
			}
		}
	}
	if(PRESSED(KEY_SUBMISSION))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		if(GetPVarInt(playerid, "InShop") || InShop[playerid]) return 1;
		new cars = 0, vehicleid = GetPlayerVehicleID(playerid), arend_id = INVALID_PLAYER_ID;
		for(new i; i != sizeof(BE_Bad_Vehs); i++)
		{
			if(GetVehicleModel(vehicleid) == BE_Bad_Vehs[i]) cars++;
		}
		if(GetArendCarID(vehicleid, arend_id) != (-1))
		{
			new rc = GetArendCarID(vehicleid);
			if(ArendInfo[rc][aPlayerID] != playerid) return 1;
		}
		if(IsAPlane(vehicleid) || IsAVel(vehicleid)) return 1;
		if(Fuel[vehicleid] <= 0 && GetVehicleModel(vehicleid) != 462) return SendErr(playerid, "В транспорте закончился бензин, необходима заправка");
		new Float:vehhealth;
		GetVehicleHealth(vehicleid, vehhealth);
		if(vehhealth <= 400 && cars == 0) return SendErr(playerid, "Машина поломана, вызовите механика!");
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,(Engine[vehicleid])?(false):(true),lights,alarm,doors,bonnet,boot,objective);
		Engine[vehicleid] = (Engine[vehicleid])?(false):(true);
		GameTextForPlayer(playerid, (Engine[vehicleid]) ? ("~w~ENGINE ~g~ON") : ("~w~ENGINE ~r~OFF"), 5000, 6);
		return 1;
	}
	if(PRESSED(KEY_FIRE))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
		new cars = 0, vehicleid = GetPlayerVehicleID(playerid);
		for(new i; i != sizeof(BE_Bad_Vehs); i++)
		{
			if(GetVehicleModel(vehicleid) == BE_Bad_Vehs[i]) cars++;
		}
		if(cars > 0) return 1;
		if(IsAVel(vehicleid) || IsABoat(vehicleid)) return 1;
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,engine,(Lights[vehicleid])?(false):(true),alarm,doors,bonnet,boot,objective);
		Lights[vehicleid] = (Lights[vehicleid])?(false):(true);
		PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
		GameTextForPlayer(playerid, (Lights[vehicleid]) ? ("~w~LIGHTS ~g~ON") : ("~w~LIGHTS ~r~OFF"), 5000, 6);
		return 1;
	}
	if(newkeys & 128 && oldkeys & 128 && newkeys & KEY_SECONDARY_ATTACK)
	{
		if(GetPVarInt(playerid, "StartTraining") == 1)
		{
		    if(GetPVarInt(playerid, "ChooseStyle") == -1) return 1;
			if(IsPlayerInRangeOfPoint(playerid, 5, -332.8407,425.5874,2513.6201))
			{
				if(p_info[playerid][P_Style][GetPVarInt(playerid, "ChooseStyle")-1] < 1000)
				{
					if(GetPVarInt(playerid, "ClickStyle") >= 10)
					{
						if(GetPVarInt(playerid, "ClickWeight") == 50)
						{
							SetPVarInt(playerid, "ClickWeight", 0);
						}
						else GivePVarInt(playerid, "ClickWeight", 1);
						p_info[playerid][P_Style][GetPVarInt(playerid, "ChooseStyle")-1]++;
						if(GetPVarInt(playerid, "ChooseStyle") == 1)
						{
							GameTextForPlayer(playerid, "~w~Boxing Style ~g~+1", 500, 1);
						}
						if(GetPVarInt(playerid, "ChooseStyle") == 2)
						{
							GameTextForPlayer(playerid, "~w~Kung Fu Style ~g~+1", 500, 1);
						}
						SetPVarInt(playerid, "ClickStyle", 0);
					}
					else GivePVarInt(playerid, "ClickStyle", 1);
				}
			}
		}
		else DP_SetPlayerFightingStyle(playerid);
	}
	if(newkeys == KEY_CROUCH) // 2 это ид кнопки, не трогать
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			for(new g = 0; g < TotalGarages; g++)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 5.0, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z]))
				{
				    SetPVarInt(playerid, "garagepl", g);
				    if(GARAGE_DATA[g][g_LOCK]) return SendErr(playerid, "Гараж закрыт");
				    switch(GARAGE_DATA[g][g_TYPE])
				    {
                        case 0:
				        {
				            FreezePlayer(playerid, 5000);
				            LoadTexture(playerid);
				            SetVehiclePos(GetPlayerVehicleID(playerid), -533.0803,2118.8850,1002.4420+0.7);
				            AC_SetVehicleZAngle(GetPlayerVehicleID(playerid), 4.3590);
				            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GARAGE_DATA[g][g_WORLD]);

			                SetPlayerInterior(playerid, GARAGE_DATA[g][g_INT]);
			                SetPlayerVirtualWorld(playerid, GARAGE_DATA[g][g_WORLD]);
							
				            SendClientMessage(playerid, COLOR_ORANGE, "Чтобы выехать с гаража, нажмите клавишу H (в машине)");
				        }
						case 1:
				        {
				            FreezePlayer(playerid, 5000);
				            LoadTexture(playerid);
				            SetVehiclePos(GetPlayerVehicleID(playerid), -533.0803,2118.8850,1002.4420+0.7);
				            AC_SetVehicleZAngle(GetPlayerVehicleID(playerid), 4.3590);
				            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GARAGE_DATA[g][g_WORLD]);

			                SetPlayerInterior(playerid, GARAGE_DATA[g][g_INT]);
			                SetPlayerVirtualWorld(playerid, GARAGE_DATA[g][g_WORLD]);
							
				            SendClientMessage(playerid, COLOR_ORANGE, "Чтобы выехать с гаража, нажмите клавишу H(в машине)");
				        }
				        case 2:
				        {
				            FreezePlayer(playerid, 5000);
				            LoadTexture(playerid);
				            SetVehiclePos(GetPlayerVehicleID(playerid), -533.0803,2118.8850,1002.4420+0.7);
				            AC_SetVehicleZAngle(GetPlayerVehicleID(playerid), 4.3590);
				            SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), GARAGE_DATA[g][g_WORLD]);

			                SetPlayerInterior(playerid, GARAGE_DATA[g][g_INT]);
			                SetPlayerVirtualWorld(playerid, GARAGE_DATA[g][g_WORLD]);
							
				            SendClientMessage(playerid, COLOR_ORANGE, "Чтобы выехать с гаража, нажмите клавишу H(в машине)");
				        }
				    }
				    return 1;
				}
                else if(IsPlayerInRangeOfPoint(playerid, 30.0, GARAGE_DATA[g][g_EXIT_X], GARAGE_DATA[g][g_EXIT_Y], GARAGE_DATA[g][g_EXIT_Z]))
			    {
			        FreezePlayer(playerid, 5000);
			        LoadTexture(playerid);
				    SetVehiclePos(GetPlayerVehicleID(playerid), GARAGE_DATA[GetPVarInt(playerid, "garagepl")][g_ENTER_X_CAR], GARAGE_DATA[GetPVarInt(playerid, "garagepl")][g_ENTER_Y_CAR], GARAGE_DATA[GetPVarInt(playerid, "garagepl")][g_ENTER_Z_CAR]);
	       			AC_SetVehicleZAngle(GetPlayerVehicleID(playerid), GARAGE_DATA[GetPVarInt(playerid, "garagepl")][g_ENTER_A_CAR]);
	       			SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), 0);
	       			SetPlayerVirtualWorld(playerid, 0);
	       			SetPlayerInterior(playerid, 0);
			        DeletePVar(playerid, "garagepl");
			        return 1;

			    }
			}
			for(new i = TOTALBIZZ; i > 0; i --) // Заправка
			{
				if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])	&& BizzInfo[i][bType] == 2)
				{
					new vehicleid = GetPlayerVehicleID(playerid);
					if(Engine[vehicleid] == true) return SendClientMessage(playerid, COLOR_WHITE, "Заглушите двигатель!");

					STRING_GLOBAL = "";
					format(STRING_GLOBAL, 256, "- Заправиться ({f0e86b}за 1 литр %d{ffffff} рублей)\n- Канистра ({f0e86b}%d{ffffff} рублей)\n- Инструменты ({f0e86b}%d{ffffff} рублей)", BizzInfo[i][bTill]*WorkSalary[15], BizzInfo[i][bTill]*4, BizzInfo[i][bTill]*5);
					ShowPlayerDialogEx(playerid, D_FILL, DIALOG_STYLE_LIST, "{ebec86}>> Заправочная станция", STRING_GLOBAL, "Выбрать", "Отмена");

					SetPVarInt(playerid, "FuelBizzID", i);
				}
			}
			for(new i = TOTALBIZZ; i > 0; i --)
			{
				if(IsPlayerInRangeOfPoint(playerid, 10.0, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]) && BizzInfo[i][bType] == 7)
				{
					if(GetPlayerVehicleID(playerid) != p_info[playerid][pOwnableCar]) return SendErr(playerid, "Вы должны находиться в личном автомобиле");
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) return SendErr(playerid, "Вы не можете тюнинговать мопед!");
					ShowPlayerDialogEx(playerid, D_CTO, DIALOG_STYLE_MSGBOX, BizzInfo[i][bName], "{FFFFFF}Вы хотите перейти к тюнингу вашего авто?", "Да", "Отмена");
					SetPVarInt(playerid, "CTObizzid", i);
				}
			}
			if(PlayerToPoint(10.0, playerid, 2327.4709, -248.5124, 1.9736))
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					if(GetPlayerVehicleSeat(playerid) == 0 && IsAMafia(playerid))
					{
						STRING_GLOBAL = "";
						if(!GetPVarInt(playerid, "NormCar")) return SendErr(playerid, "Данный автомобиль нам не нужен");
						format(STRING_GLOBAL, 300, "{ffffff}Информация об автомобиле:\n\nНазвание - {f0e86b}%s{ffffff}\nСтоимость утилизации - {f0e86b}50.000{ffffff} рублей\n\nВы действительно хотите утилизировать авто?", VehicleNames[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
						ShowPlayerDialogEx(playerid, d_carjack+2, 0, " ",STRING_GLOBAL , "Да", "Нет");
						SetPVarInt(playerid, "SelectedSlotBuyingCar", 50000);
					}
				}
			}
		}
		return 1;
	}
	if(!IsACop(playerid) || !IsAArmy(playerid))
	{
		if(!p_info[playerid][pAdmin])
		{
			for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
			{
				if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
				{
					new index = GetPlayerAnimationIndex(playerid);
					if(index >= 1136 && index <= 1138 || index == 504 || index == 505 || index == 1141 || (oldkeys & 128 && newkeys & 16))
					{
						if(GetPlayerWeapon(playerid) != 43 && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DRINK_SPRUNK && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DRINK_BEER)
						{
							ApplyAnimation(playerid, "FAT", "IDLE_tired", 3.0, 1, 0, 0, 1, 3000);
							SetTimerEx("ClearAnimationsDelay", 3000, false, "i", playerid);
						}
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY)
	{
		new keys,ud,lr;
		GetPlayerKeys(playerid,keys,ud,lr);

		if(noclipdata[playerid][mode] && (GetTickCount() - noclipdata[playerid][lastmove] > 100))
		{
			MoveCamera(playerid);
		}
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
		{
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0)
			{
				StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
				noclipdata[playerid][mode]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else
			{
				noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr);
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr;
		return 0;
	}
	p_info[playerid][pAFK] = 0;
	if(p_info[playerid][pAFK] > 3) playerCheckFly[playerid] = SleepTime(playerid);
	if ( GetPlayerState ( playerid ) == PLAYER_STATE_DRIVER && p_info[playerid][pAFK] < 3 )
    {
    	static speed_player [ MAX_PLAYERS ] ;
     	new veh_id = GetPlayerVehicleID( playerid ), Float:veh_health_now;
      	GetVehicleHealth(veh_id, veh_health_now);
       	if ( SpeedVehicle ( playerid ) / 2 - speed_player [ playerid ] > 20 && veh_health_now - vehicle_health [ playerid ] == 0)
        {
            if(++playerWarningSpeedFoot{playerid} > 3)
			{
				OnGuardWarningCheater(playerid,  "Speed Hack DRIVER", 90);
			}
   			playerNullWarningTimer[playerid][2] = 10;
   		}
     	speed_player [ playerid ] = SpeedVehicle ( playerid ) / 2 ;
 		GetVehicleHealth(veh_id,vehicle_health [ playerid ]);
   	}
    if(GetPlayerMoney(playerid) > 500000)
    {
    SetPlayerAttachedObject(playerid,3,1210,5,0.299999,0.099999,0.000000,0.000000,-83.000000,0.000000,1.000000,1.000000,1.000000);
    }
	if(GetPlayerCameraMode(playerid) == 53)
	{
		new Float:kLibPos[3];
		GetPlayerCameraPos(playerid, kLibPos[0], kLibPos[1], kLibPos[2]);
		if (kLibPos[2] < -50000.0 || kLibPos[2] > 50000.0)
		{
			OnGuardWarningCheater(playerid,  "Weapon Crasher", 84);
			return 1;
		}
	}
	new Float:x, Float:y, Float:z;
    GetPlayerCameraFrontVector(playerid, x, y, z);
    if(floatcmp(x, -1.0) == -1 || floatcmp(x, 1.0) == 1
    || floatcmp(y, -1.0) == -1 || floatcmp(y, 1.0) == 1
    || floatcmp(z, -1.0) == -1 || floatcmp(z, 1.0) == 1)
    {
        if(AntiOnFootCrash{playerid})
            OnGuardWarningCheater(playerid,  "Camera Crasher", 84);
        else
            AntiOnFootCrash{playerid} = 1;
        return 0;
    }
	if( GetPlayerCameraMode ( playerid ) == 53 )
	{
		new Float: cam_pos ;
		GetPlayerCameraPos ( playerid, cam_pos, cam_pos, cam_pos ) ;
		if ( floatabs ( cam_pos ) > 50000 ) return OnGuardWarningCheater(playerid,  "Weapon Crasher 2", 84);
	}
	if(GetPlayerCameraMode(playerid) == 53)
	{
		new Float:pos[3];
		GetPlayerCameraPos(playerid,pos[0],pos[1],pos[2]);
		if( pos[0] < -7000.0 || pos[0] > 7000.0 || pos[1] < -7000.0 || pos[1] > 7000.0 || pos[2] < -7000.0 || pos[2] > 7000.0 ) return OnGuardWarningCheater(playerid,  "Weapon Crasher 4", 84);
	}
    if( GetPlayerCameraMode ( playerid ) == 53 )
	{
		new Float:cam_pos ;
		GetPlayerCameraPos ( playerid, cam_pos, cam_pos, cam_pos ) ;
		if ( floatabs( cam_pos ) > 50000 ){
		return 0 * OnGuardWarningCheater(playerid,  "Weapon Crasher 3", 84);}
	}
	new Float:x1,Float:y1,Float:z1;
	GetPlayerPos(playerid,x1,y1,z1);
	if(z1 > 30000)
	{
		if(SpRabotaySer[playerid] != true)
		{
			OnGuardWarningCheater(playerid,  "Weapon Crasher 5", 84);
		}
	}
	if(x1 > 30000000)
	{
		if(SpRabotaySer[playerid] != true)
		{
			OnGuardWarningCheater(playerid,  "Weapon Crasher 6", 84);
		}
	}
	if(y1 > 3000000)
	{
		if(SpRabotaySer[playerid] != true)
		{
			OnGuardWarningCheater(playerid,  "Weapon Crasher 7", 84);
		}
	}
	if(z1 > 30000)
	{
		if(SpRabotaySer[playerid] != true)
		{
			OnGuardWarningCheater(playerid,  "Weapon Crasher 8", 84);
		}
	}
	new Float:x2,Float:y2,Float:z2;
	GetPlayerCameraFrontVector(playerid,x2,y2,z2);
	if(floatcmp(1.0, floatabs(x2))==-1 || floatcmp(1.0, floatabs(y2))==-1 || floatcmp(1.0, floatabs(z2))==-1)
	{
		if(KickFreezeAFK{playerid})
		{
			OnGuardWarningCheater(playerid, "AFK Crasher", 82);
		}
		else
		{
			KickFreezeAFK{playerid}=1;//ложный вызов из-за старых данных.
		}
		return 0;
	}
	if(walk_goto_me[playerid] > 0)
	{
		new id = walk_goto_me[playerid] - 1;
		new Float:X, Float:Y, Float:Z, Float:R;
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			GetPlayerPos(id,X,Y,Z);
			SetPlayerFaceToPoint(playerid, X, Y);

			new Float:GotoPos[3];
			new anim = GoPlayerAnimation(playerid,X,Y,Z);

			if(GetPlayerInterior(id) != GetPlayerInterior(playerid) || GetPlayerVirtualWorld(id) != GetPlayerVirtualWorld(playerid))
			{
				GetPlayerPos(id,X,Y,Z);
				SetPlayerPos(playerid,X,Y,Z);
				SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
				SetPlayerInterior(playerid,GetPlayerInterior(id));
			}

			if(anim != 1)
			{
				GotoPos[0]=GetPVarFloat(playerid,"CuffX");
				GotoPos[1]=GetPVarFloat(playerid,"CuffY");
				GotoPos[2]=GetPVarFloat(playerid,"CuffZ");

				if(IsPlayerInRangeOfPoint(playerid, 0.05, GotoPos[0],GotoPos[1],GotoPos[2]))
				{
					GetPlayerPos(playerid, X, Y, Z);
					GetPlayerFacingAngle(playerid, R);
					ShiftCords(X, Y, R, 1.5);
					SetPlayerPos(playerid, X, Y, Z);
				}

				GetPlayerPos(playerid,X,Y,Z);
				SetPVarFloat(playerid,"CuffX", X);
				SetPVarFloat(playerid,"CuffY", Z);
				SetPVarFloat(playerid,"CuffZ", Z);
			}
		}
	}
	if(GetPlayerWeaponState(playerid) == 2) SetPlayerData(playerid, P_WEAPON_RELOADING, false);
	if(GetPlayerWeaponState(playerid) == 3 && !GetPlayerData(playerid, P_WEAPON_RELOADING))
	{
		SetPlayerData(playerid, P_WEAPON_RELOADING, true);
		OnPlayerAmmoChange(playerid);
	}
	if(GetPVarInt(playerid, "ChoiceBattleZone") == 2)
	{
 		new String[150];
	  	new PlayerMember = p_info[playerid][pMember];
	  	SetPVarInt(playerid, "ChoiceBattleZone", 0);
	  	new bool:POnline;
	  	new Business = MafiaBattle[0][2];
	  	foreach(new A: Player) if(StartMafiaWar[PlayerMember] == p_info[A][pMember]) POnline = true;
	  	if(POnline == true)
	  	{
			GangZoneShowForAll(MafiaBattleZoneID, GetGangZoneColor(PlayerMember));
	  	    GangZoneFlashForAll(MafiaBattleZoneID, GetGangZoneColor(StartMafiaWar[PlayerMember]));
	  	    StartMafiaWar[StartMafiaWar[PlayerMember]] = PlayerMember;
         	MafiaBattle[0][0] = PlayerMember;
            MafiaBattle[1][0] = StartMafiaWar[PlayerMember];
            MafiaBattle[0][3] = 600;
	  	}
	  	else return SendErr(playerid, "Игроков организации, контроллирующей бизнес, нет в игре");
		foreach(new A: Player)
		{
		    if(StartMafiaWar[PlayerMember] == p_info[A][pMember] || PlayerMember == p_info[A][pMember])
		    {
				if(StartMafiaWar[PlayerMember] == p_info[A][pMember])
				{
					format(String, sizeof(String), "'%s' спровоцировала битву за '%s' с вашей организацией", GetMafiaName(PlayerMember), BizzInfo[Business][bName]);
					SendInf(A, String);
					SendInf(A, "У вас есть 10 минут на защиту");
				}
				else
				{
					format(String, sizeof(String), "Ваша организация спровоцировала битву за '%s' с '%s'", BizzInfo[Business][bName], GetMafiaName(BizzInfo[Business][bMafia]));
					SendInf(A, String);
					SendInf(A, "У вас есть 10 минут на захват");
				}

                TextDrawShowForPlayer(A, txdw2);
				PlayerTextDrawShow ( A, capture_td [ A ] ) ;
				new td_string [ 80 ] ;
				format ( td_string, sizeof ( td_string ), "~r~(0) %s vs %s (0)", GetMafiaName(MafiaBattle[0][0], 1), GetMafiaName(MafiaBattle[1][0], 1) ) ;
				PlayerTextDrawSetString(A, capture_td [ A ], td_string ) ;
		    }
		}
		format(STRING_GLOBAL, 512, "* Начался захват между %s и %s. (Бизнес: %s)", GetMafiaName(MafiaBattle[0][0], 1), GetMafiaName(MafiaBattle[1][0], 1), BizzInfo[Business][bName]);
		SendAdminMessage(COLOR_YELLOW, STRING_GLOBAL);
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && p_info[playerid][pJob] == JOB_TRUCKER)
	{
	    new VehicleID = GetPlayerVehicleID(playerid);
		new TrailerID = GetVehicleTrailer(VehicleID);
		if(VehicleID >= TruckerVehicle[0] && VehicleID <= TruckerVehicle[1])
		{
			if(IsTrailerAttachedToVehicle(VehicleID) && TrailerOwnerID[TrailerID] != playerid)
		    {
		        if(TrailerID >= TruckerVehicle[2] && TrailerID <= TruckerVehicle[5]) SCM(playerid, COLOR_ANTIQUEWHITE, "Вы взяли прицеп для продуктов. Езжайте на продуктовый завод");
		        if(TrailerID >= TruckerVehicle[6] && TrailerID <= TruckerVehicle[9]) SCM(playerid, COLOR_ANTIQUEWHITE, "Вы взяли прицеп для топлива. Езжайте на нефтедобывающий завод");
		        TrailerOwnerID[TrailerID] = playerid;
		    }
		    if(IsTrailerAttachedToVehicle(VehicleID) && GetPVarInt(playerid, "TrailerInfo") != TrailerID && TrailerOwnerID[TrailerID] == playerid)
			{
				SetPVarInt(playerid, "TrailerInfo", TrailerID);
				KillTimer(TimerTrailer[TrailerID]);
			}
			if(!IsTrailerAttachedToVehicle(VehicleID) && GetPVarInt(playerid, "TrailerInfo") != -1 && TrailerOwnerID[GetPVarInt(playerid, "TrailerInfo")] != -1)
			{
				TimerTrailer[GetPVarInt(playerid, "TrailerInfo")] = SetTimerEx("RespawnTrailer", 60000, 0, "d", GetPVarInt(playerid, "TrailerInfo"));
				SetPVarInt(playerid, "TrailerInfo", -1);
			}
		}
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
    if(IsValidState(forplayerid) && IsValidState(playerid))
	{
     	new fracid = GetFracID(forplayerid);
	    if(IsAMafia(forplayerid))
		{
			if(Bl_Info[playerid][Bl_onFrac][fracid] && Bl_Info[forplayerid][Bl_Observe] == INVALID_PLAYER_ID)
			{
				if(Bl_Info[playerid][Bl_Finder] == INVALID_PLAYER_ID)
				{
					Bl_Info[playerid][Bl_Finder] = forplayerid;
					Bl_Info[forplayerid][Bl_Observe] = playerid;
					GetPlayerPos(playerid, posx1, posy1, posz1);
					switch(GetPlayerState(playerid))
					{
						case PLAYER_STATE_ONFOOT:
						{
							Bl_Info[forplayerid][Bl_Marker] = CreateDynamicCP(posx1, posy1, posz1, 1.6, -1, -1, forplayerid, 200.0);
						}
						case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER:
						{
							new vehid = GetPlayerVehicleID(playerid);
							new engine1, light1, alarm1, doors1, bonnet1, boot1, objective1;
							GetVehicleParamsEx(vehid, engine1, light1, alarm1, doors1, bonnet1, boot1, objective1);
							SetVehicleParamsEx(vehid, engine1, light1, alarm1, doors1, bonnet1, boot1, true);
						}
					}
					new src[128], temp[24], plname[24];
					getname(playerid -> plname, forplayerid -> temp);
					format(src, sizeof(src), "[BLACK LIST]: Вы были замечены, %s %s [%s]", GetRank(fracid, p_info[forplayerid][pRank]), temp, Fractions[fracid][fractionName]);
					SCM(playerid, COLOR_LIGHTBLUE, src);
					format(src, sizeof(src), "[BLACK LIST]: Появился запашок черта, %s %s заметил %s", GetRank(fracid, p_info[forplayerid][pRank]), temp, plname);
					SendFMes(fracid, COLOR_LIGHTBLUE, src);
				}
				else
				{
					GetPlayerPos(playerid, posx1, posy1, posz1);
					Bl_Info[forplayerid][Bl_Observe] = playerid;
					switch(GetPlayerState(playerid))
					{
						case PLAYER_STATE_ONFOOT:
						{
							Bl_Info[forplayerid][Bl_Marker] = CreateDynamicCP(posx1, posy1, posz1, 1.6, -1, -1, forplayerid, 200.0);
						}
					}
				}
			}
		}
	    if(IsACop(forplayerid))
	    {
		    if(p_info[playerid][pWanted] > 0 && Bl_Info[forplayerid][Bl_Observe] == INVALID_PLAYER_ID)
		    {
				if(Bl_Info[playerid][Bl_Finder] == INVALID_PLAYER_ID)
				{
					Bl_Info[playerid][Bl_Finder] = forplayerid;
					Bl_Info[forplayerid][Bl_Observe] = playerid;
					GetPlayerPos(playerid, posx1, posy1, posz1);
					switch(GetPlayerState(playerid))
					{
						case PLAYER_STATE_ONFOOT:
						{
							Bl_Info[forplayerid][Bl_Marker] = CreateDynamicCP(posx1, posy1, posz1, 1.6, -1, -1, forplayerid, 200.0);
						}
						case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER:
						{
							new vehid = GetPlayerVehicleID(playerid);
							new engine1, light1, alarm1, doors1, bonnet1, boot1, objective1;
							GetVehicleParamsEx(vehid, engine1, light1, alarm1, doors1, bonnet1, boot1, objective1);
							SetVehicleParamsEx(vehid, engine1, light1, alarm1, doors1, bonnet1, boot1, true);
						}
					}
					new src[128], temp[24], plname[24];
					getname(playerid -> plname, forplayerid -> temp);
					format(src, sizeof(src), "[РОЗЫСК]: Вы заметили %s", plname);
					SendClientMessage(forplayerid, COLOR_LIGHTBLUE, src);
				}
				else
				{
					GetPlayerPos(playerid, posx1, posy1, posz1);
					Bl_Info[forplayerid][Bl_Observe] = playerid;
					switch(GetPlayerState(playerid))
					{
						case PLAYER_STATE_ONFOOT:
						{
							Bl_Info[forplayerid][Bl_Marker] = CreateDynamicCP(posx1, posy1, posz1, 1.6, -1, -1, forplayerid, 200.0);
						}
					}
				}
			}
		}
	}
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
    if(IsValidState(forplayerid) && ValidState(playerid))
	{
	    new fracid = GetFracID(forplayerid);
	    if(IsAMafia(forplayerid))
		{
			if(Bl_Info[playerid][Bl_onFrac][fracid])
			{
				if(!Bl_Info[playerid][Bl_isKilled])
				{
					if(Bl_Info[playerid][Bl_Finder] == forplayerid)
					{
						new temp[100], plname[24];
						Bl_Info[playerid][Bl_Finder] = INVALID_PLAYER_ID;
						GetPlayerName(playerid, plname, 24);
						SCM(playerid, COLOR_LIGHTBLUE, "[BLACK LIST]: Вам удалось скрытся");
						format(temp, sizeof temp, "[BLACK LIST]: След был упущен, %s скрылся", plname);
						SendFMes(fracid, COLOR_LIGHTBLUE, temp);
					}
				}
				else
				{
					Bl_Info[playerid][Bl_isKilled] = false;
				}
			}
		}
	    if(IsACop(forplayerid))
	    {
		    if(p_info[playerid][pWanted] > 0)
			{
				if(Bl_Info[playerid][Bl_Finder] == forplayerid)
				{
					new temp[100], plname[24];
					Bl_Info[playerid][Bl_Finder] = INVALID_PLAYER_ID;
					GetPlayerName(playerid, plname, 24);
					format(temp, sizeof temp, "[РОЗЫСК]: След был упущен, %s скрылся", plname);
					SendClientMessage(forplayerid, COLOR_LIGHTBLUE, temp);
				}
			}
		}
	}
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(dialogid == RUBBISH_ID || dialogid == RUBBISH_ID+1 || dialogid == RUBBISH_ID+2)
	{
	    if(!response) return PlayerRubbish[playerid] = 0;
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health >= 100) return SendClientMessage(playerid, 0x27C400FF, "Ты не можешь это съесть, так как твоё здоровье полное");
		if(dialogid == RUBBISH_ID)
		{
			switch(listitem)
	        {
	            case 0: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}огурцы {FFFFFF}и съел их");
	            case 1: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}тухлое мясо {FFFFFF}и съел его");
	            case 2: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}молоко {FFFFFF}и выпил его");
	            case 3: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}помидор {FFFFFF}и съел его");
	            case 4: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}картошку {FFFFFF}и съел её");
	            case 5: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}сметану {FFFFFF}и съел её");
	            case 6: return ShowPlayerRubbishDialog(playerid), SetPlayerChatBubble(playerid, "Роется в мусорке", 0x00FF00FF, 30.0, 5000);
	        }
	    }
	    else if(dialogid == RUBBISH_ID+1)
	    {
	        switch(listitem)
	        {
	            case 0: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}пирожоное {FFFFFF}и съел его");
	            case 1: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}кусок хлеба {FFFFFF}и съел его");
	            case 2: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}картошку {FFFFFF}и съел её");
	            case 3: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}морковка {FFFFFF}и съел её");
	            case 4: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}тухлую рыбу {FFFFFF}и съел её");
				case 5: return ShowPlayerRubbishDialog(playerid), SetPlayerChatBubble(playerid, "Роется в мусорке", 0x00FF00FF, 30.0, 5000);
	        }
	    }
	    else if(dialogid == RUBBISH_ID+2)
	    {
	        switch(listitem)
	        {
	            case 0: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}тухлое мясо {FFFFFF}и съел его");
	            case 1: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}тухлую рыбу {FFFFFF}и съел её");
	            case 2: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}кефир {FFFFFF}и выпил его");
	            case 3: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}салат {FFFFFF}и съел его");
	            case 4: SendClientMessage(playerid, -1, "Ты достал из мусорки {9DDAF2}кусок хлеба {FFFFFF}и съел его");
				case 5: return ShowPlayerRubbishDialog(playerid), SetPlayerChatBubble(playerid, "Роется в мусорке", 0x00FF00FF, 30.0, 5000);
	        }
	    }
	    if(PlayerRubbish[playerid] >= 15+random(10))
	    {
   			PlayerRubbish[playerid] = 0;
			SendClientMessage(playerid, -1, "Ты наелся слишком много помойных отходов");
			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 0);
    		ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 4.0, 0, 0, 0, 0, 0, 1);
	   	}
	    else
	    {
			SetPlayerHealth(playerid, health+3);
   			PlayerRubbish[playerid] += 10;
			if(health > 100) SetPlayerHealth(playerid, 100);
			ShowPlayerRubbishDialog(playerid);
		}
	}
	//printf("%s[%d] - dialogid: %d response: %d listitem: %d inputtext: %s", GetName(playerid), playerid, dialogid, response, listitem, inputtext);
	if(GetPVarInt(playerid,"USEDIALOGID") != dialogid) return 1;
	SetPVarInt(playerid, "USEDIALOGID", -1);
	
	if(GetPVarInt(playerid, "DialogResponseTime") > GetTickCount()) return 1;
	else SetPVarInt(playerid, "DialogResponseTime", GetTickCount()+230);
	
	for(new i = 0; i < strlen(inputtext); i++) if(inputtext[i] == '%') inputtext[i] = '#';
	while(strfind(inputtext,"%s",true)!=-1) strdel(inputtext,strfind(inputtext,"%s",true), strfind(inputtext,"%s",true)+2);
	while(strfind(inputtext,"%",true)!=-1) strdel(inputtext,strfind(inputtext,"%",true), strfind(inputtext,"%",true)+2);
	
	if(PlayerLogged[playerid] == true)
	{
		if(response) PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
		else PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
	}
	switch(dialogid)
	{
	    case d_offmembers_selection:
		{
			if ( ! response ) return 1 ;
			if ( listitem == 0 )
			{
				SetPVarInt ( playerid, "ofm_list_page", 1 ) ;
				new query_string [ 126 ] ;
				mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
				mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;

			}
			else ShowPlayerDialogEx ( playerid, d_offmembers_filter, DIALOG_STYLE_INPUT, "{ebec86}>> Члены организации", "{FFFFFF}Введите ранг для фильтра:", "Далее", "Назад" ) ;
		}
		case d_offmembers_filter:
		{
			if ( ! response )return ShowPlayerDialogEx ( playerid, d_offmembers_selection, DIALOG_STYLE_LIST, "{ebec86}>> Члены организации", "{FFFFFF}1. Все члены организации оффлайн\n2. Фильтр по рангу", "Выбрать", "Назад" ) ;
			if ( strval ( inputtext ) < 1 || strval ( inputtext ) > FractionRank [ p_info[playerid][pMember] -1 ] -1 )return ShowPlayerDialogEx ( playerid, d_offmembers_filter, DIALOG_STYLE_INPUT, "{ebec86}>> Члены организации", "{FFFFFF}Введите ранг для фильтра:\n\n{AFAFAF}* Неверный номер ранга", "Далее", "Назад" ) ;
			SetPVarInt ( playerid, "ofm_type", strval ( inputtext ) ) ;

			SetPVarInt ( playerid, "ofm_list_page", 1 ) ;
			new query_string [ 126 ] ;
			mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `rank` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ], strval ( inputtext ) ) ;
			mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;

		}
		case d_offmembers_list:
		{
			if ( ! response )
			{
				for ( new i = 0 ; i < 10 ; i ++ )
				{
					new pvar_string [ 8 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", i ) ;
					DeletePVar ( playerid, pvar_string ) ;
				}
				DeletePVar ( playerid, "ofm_list_page" ) ;
				DeletePVar ( playerid, "ofm_list_rows" ) ;
				DeletePVar ( playerid, "ofm_listitem" ) ;
				DeletePVar ( playerid, "ofm_type" ) ;
				ShowPlayerDialogEx ( playerid, d_offmembers_selection, DIALOG_STYLE_LIST, "{ebec86}>> Члены организации", "{FFFFFF}1. Все члены организации оффлайн\n2. Фильтр по рангу", "Выбрать", "Назад" ) ;
				return 1 ;
			}
			if ( listitem == 0 )
			{
				new page_id = GetPVarInt ( playerid, "ofm_list_page" ) - 1;
				if ( page_id == 0 )
				{
					SendErr ( playerid, "Вы находитесь на первой странице списка членов организации" ) ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						new query_string [ 126 ] ;
						mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
						mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
						return 1;
					}
					new query_string [ 126 ] ;
					mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `rank` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ], GetPVarInt ( playerid, "ofm_type" ) ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
					return 1 ;

				}
				SetPVarInt ( playerid, "ofm_list_page", page_id ) ;

				new query_string [ 126 ] ;
				if( ! GetPVarInt ( playerid, "ofm_type" ) )
				{
					mysql_format ( dbHandle, query_string, 98, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
					return 1;
				}
				mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `rank` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ], GetPVarInt ( playerid, "ofm_type" ) ) ;
				mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;

			}
			else if ( listitem == 1 )
			{
				new page_id = GetPVarInt ( playerid, "ofm_list_page" ) - 1 ;
				if ( ( page_id + 1 ) * 10 >= GetPVarInt ( playerid, "ofm_list_rows" ) )
				{
					SendErr ( playerid, "Вы находитесь на последней странице списка членов организации" ) ;
					new query_string [ 126 ] ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						mysql_format ( dbHandle, query_string, 98, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
						mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
						return 1;
					}
					mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `rank` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ], GetPVarInt ( playerid, "ofm_type" ) ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;

					return 1 ;
				}
				SetPVarInt ( playerid, "ofm_list_page", page_id + 2) ;
				new query_string [ 126 ] ;
				if( ! GetPVarInt ( playerid, "ofm_type" ) )
				{
					mysql_format ( dbHandle, query_string, 98, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
					return 1;
				}
				mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `rank` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ], GetPVarInt ( playerid, "ofm_type" ) ) ;
				mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
			}
			else
			{
				new pvar_string [ 28 ], pl_name [ 20 ] ;
				format ( pvar_string, 10, "ofm_%d", listitem - 2 ) ;
				GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
				SetPVarInt ( playerid, "ofm_listitem", listitem - 2 ) ;
				format ( pvar_string, sizeof ( pvar_string ), "{ebec86}>> %s", pl_name ) ;
				ShowPlayerDialogEx ( playerid, d_offmembers_pl_menu, DIALOG_STYLE_LIST, pvar_string, "{FFFFFF}1. Информация об игроке\n2. Уволить из организации\n3. Повысить/понизить игрока", "Выбрать", "Назад" ) ;
			}
			return 1 ;
		}

		case d_offmembers_pl_menu:
		{
			if ( ! response )
			{
				DeletePVar( playerid, "ofm_listitem" ) ;
				if( ! GetPVarInt ( playerid, "ofm_type" ) )
				{
					new query_string [ 128 ] ;
					mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
					return 1;
				}
				new query_string [ 128 ] ;
				mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `rank` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ], GetPVarInt ( playerid, "ofm_type" ) ) ;
				mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
				return 1 ;
			}
			switch ( listitem )
			{
				case 0:
				{
					new pvar_string [ 18 ], pl_name [ 20 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
					GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
					new query_string [ 128 ] ;
					mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `rank`,`fraction_date`,`datavhod` FROM `accounts` WHERE `name` = '%s' LIMIT 1", pl_name ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offmembers_info", "i", playerid ) ;
				}
				case 1:
				{
					new pvar_string [ 28 ], pl_name [ 20 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
					GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
					format ( pvar_string, sizeof ( pvar_string ), "{ebec86}>> %s", pl_name ) ;

					new query_string [ 128 ];
					format ( query_string,sizeof(query_string),"UPDATE `accounts` SET `member` = '0', `rank` = '0' WHERE `name` = '%s' LIMIT 1", pl_name ) ;
					mysql_tquery ( dbHandle, query_string, "", "" ) ;
					format ( query_string, sizeof query_string, "Вы уволили {ebec86}%s{FFFFFF} из организации", pl_name ) ;
					SendInf ( playerid, query_string ) ;

					DeletePVar( playerid, "ofm_listitem" ) ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
						mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
						return 1;
					}
					mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `rank` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ], GetPVarInt ( playerid, "ofm_type" ) ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;

				}
				case 2:ShowPlayerDialogEx ( playerid, d_offmembers_pl_rank, DIALOG_STYLE_INPUT, "{ebec86}>> Изменение ранга игрока", "{FFFFFF}Введите номер ранга, который хотите установить для игрока:", "Выбрать", "Назад" ) ;
			}
		}
		case d_offmembers_pl_rank:
		{
			new pvar_string [ 28 ], pl_name [ 20 ] ;
			format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
			GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
			if ( strval ( inputtext ) < 1 || strval ( inputtext ) > FractionRank [ p_info[playerid][pMember] -1 ] -1 )return ShowPlayerDialogEx ( playerid, d_offmembers_pl_rank, DIALOG_STYLE_INPUT, "{ebec86}>> Повышение/понижение", "{FFFFFF}Введите номер ранга, который хотите установить для игрока:\n\n{AFAFAF}* Неверный номер ранга", "Выбрать", "Назад" ), SendErr ( playerid, "Неверное значение ранга" ) ;
			if ( response )
			{
				new text_string [ 128 ] ;
				format ( text_string,sizeof(text_string),"UPDATE `accounts` SET `rank` = '%d' WHERE `name` = '%s' LIMIT 1",
				strval ( inputtext ), pl_name ) ;
				mysql_tquery ( dbHandle, text_string, "", "" ) ;
				format ( text_string, sizeof text_string, "Вы изменили ранг {ebec86}%s{FFFFFF} на {ebec86}%d", pl_name, strval ( inputtext ) ) ;
				SendInf ( playerid, text_string ) ;

			}
			format ( pvar_string, sizeof ( pvar_string ), "{ebec86}>> %s", pl_name ) ;
			ShowPlayerDialogEx ( playerid, d_offmembers_pl_menu, DIALOG_STYLE_LIST, pvar_string, "{FFFFFF}1. Информация об игроке\n2. Уволить из организации\n3. Повысить/понизить игрока", "Выбрать", "Назад" ) ;

		}
		case d_offmembers_pl_menu_info:
		{
			new pvar_string [ 38 ], pl_name [ MAX_PLAYER_NAME ] ;
			format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
			GetPVarString ( playerid, pvar_string, pl_name, MAX_PLAYER_NAME ) ;
			format ( pvar_string, sizeof ( pvar_string ), "{ebec86}>> %s", pl_name ) ;
			ShowPlayerDialogEx ( playerid, d_offmembers_pl_menu, DIALOG_STYLE_LIST, pvar_string, "{FFFFFF}1. Информация об игроке\n2. Уволить из организации\n3. Повысить/понизить игрока", "Выбрать", "Назад" ) ;
		}
	    case DIALOG_BIZ_ORDERS:
			{
				if(response)
				{
				    new pvar_string [ 32 ] ;
					format ( pvar_string, 32, "vline_biz_%d", listitem ) ;
					new biz_id = GetPVarInt ( playerid, pvar_string ) ;
					
					SetPVarInt(playerid, "biz_id", biz_id);

					SendClientMessage(playerid, 0x3399FFFF, "Вы начали выполнение заказа. Закупите необходимое количество продуктов на заводе {66CC00}(/gps)");
					SendClientMessage(playerid, 0x3399FFFF, "После этого отправляйтесь к бизнесу, который отмечен {FF3300}красной точкой");

					GPSPlayer_(playerid, BizzInfo[biz_id][bEntrx], BizzInfo[biz_id][bEntry], BizzInfo[biz_id][bEntrz], "Доставка");
				}
			}
			case DIALOG_FS_ORDERS:
			{
				if(response)
				{
					new pvar_string [ 32 ] ;
					format ( pvar_string, 32, "vline_biz_%d", listitem ) ;
					new biz_id = GetPVarInt ( playerid, pvar_string ) ;
					
					SetPVarInt(playerid, "biz_id", biz_id);

					SendClientMessage(playerid, 0x3399FFFF, "Вы начали выполнение заказа. Закупите необходимое количество топлива на нефтезаводе {66CC00}(/gps)");
					SendClientMessage(playerid, 0x3399FFFF, "После этого отправляйтесь к АЗС, которая отмечена {FF3300}красной точкой");

					GPSPlayer_(playerid, BizzInfo[biz_id][bEntrx], BizzInfo[biz_id][bEntry], BizzInfo[biz_id][bEntrz], "Доставка");
				}
			}
		case dRieltorka:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					ShowPlayerDialogEx(playerid, dRieltorka, 2, "{ebec86}>> Агенство недвижемости", "- Выберите тип недвижемости\n1. Дома\n2. Бизнесы", "Выбор", "Отмена");
				}
    			case 1:
				{
					STRING_GLOBAL = "";
					new j = 0;
					for(new i = drieltorka[playerid]; i < TOTALHOUSE; i++)
					{
						if(j == 20) continue;
						if(drieltorka[playerid] == TOTALHOUSE) continue;
					    if(!strcmp(HouseInfo[i][hOwner], "None", true))
						{
						    new classname[256];
		            		drieltorka[playerid] = i;
		            		j++;
							switch(HouseInfo[i][hDiscript])
							{
								case 1: classname = "Низкий";
								case 2: classname = "Средний";
								case 3: classname = "Высокий";
								default: SendErr(playerid, "Ошибка");
							}
						   	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%s [№%d]\n", STRING_GLOBAL, classname, i);
						}
						if(j == 20)
						{
							format(STRING_GLOBAL, 512, "%sДалее >>>", STRING_GLOBAL);
						}
						ShowPlayerDialogEx(playerid, dRieltorkadoma, 2, "{ebec86}>> Выберите дом:", STRING_GLOBAL, "Выбрать", "Закрыть");
				  	}
				}
				case 2:
				{
					STRING_GLOBAL = "";
					for(new i = TOTALBIZZ; i > 0; i --)
					{
					    if(!strcmp(BizzInfo[i][bOwner], "None", true))
					    {
					    	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%s [№%d]\n", STRING_GLOBAL, BizzInfo[i][bName], i);
					    }
						ShowPlayerDialogEx(playerid, dRieltorkabizinfo, 2, "{ebec86}>> Выберите бизнес:", STRING_GLOBAL, "Выбрать", "Закрыть");
				 	}
				}
			}
		}
		case dRieltorkabizinfo:
		{
            if(!response) return 1;
		    new idb = strval(inputtext[strfind(inputtext, "№")]);
			SetPVarInt(playerid, "infbusiness", idb);
            new str1[50];
			format(str1,sizeof(str1), "{ebec86}>> %s [№%d]", BizzInfo[idb][bName], idb);
			ShowPlayerDialogEx(playerid, dRieltorkabizinfo1, DIALOG_STYLE_MSGBOX, str1, "{FFFFFF}Просмотр информаций о выбранном бизнесе стоит: {f0e86b}3000 рублей\n\n{FFFFFF}Продолжить?","Да","Нет");
		}
		case dRieltorkabizinfo1:
		{
            if(!response) return 1;
		    if(GetMoney(playerid) < 3000) return SendErr(playerid, "У Вас недостаточно денег");
			GiveMoney(playerid, -3000, "Риэлторка");
			
			FracBank[9] += 3000;
		    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			
			new bizid = GetPVarInt(playerid, "infbusiness");
			new mes[400];
		   	format(mes,sizeof(mes),"Номер бизнеса: {f0e86b}%d{FFFFFF}\nНазвание: {f0e86b}%s{FFFFFF}\nЦена: {f0e86b}%d{FFFFFF} рублей\nСтоимость оплаты электроэнергии: {f0e86b}%d{FFFFFF} рублей\n{FF6347}- Посмотреть фотографию бизнеса\n{FF6347}- Отметить бизнес на GPS", bizid, BizzInfo[bizid][bName], BizzInfo[bizid][bPrice]*WorkSalary[7], BizzInfo[bizid][bPrice] / 1000);
		   	ShowPlayerDialogEx(playerid, dRieltorkabizinfo2, 2, "{ebec86}>> Информация о бизнесе", mes, "Выбор", "Отмена");
		}
		case dRieltorkabizinfo2:
		{
            if(!response) return 1;
			switch(listitem)
			{
				case 0..3:
				{
                    new bizid = GetPVarInt(playerid, "infbusiness");
                    
					new mes[400];
		   			format(mes,sizeof(mes),"Номер бизнеса: {f0e86b}%d{FFFFFF}\nНазвание: {f0e86b}%s{FFFFFF}\nЦена: {f0e86b}%d{FFFFFF} рублей\nСтоимость оплаты электроэнергии: {f0e86b}%d{FFFFFF} рублей\n{FF6347}- Посмотреть фотографию бизнеса\n{FF6347}- Отметить бизнес на GPS", bizid, BizzInfo[bizid][bName], BizzInfo[bizid][bPrice]*WorkSalary[7], BizzInfo[bizid][bPrice] / 1000);
  					ShowPlayerDialogEx(playerid, dRieltorkabizinfo2, 2, "{ebec86}>> Информация о бизнесе", mes, "Выбор", "Отмена");
				}
				case 4:
				{
					new LOXX = GetPVarInt(playerid, "infbusiness");

                    SetPlayerPos(playerid, BizzInfo[LOXX][bEntrx]-14, BizzInfo[LOXX][bEntry]+26, BizzInfo[LOXX][bEntrz]+33);
				    SetPlayerCameraPos(playerid, BizzInfo[LOXX][bEntrx]-15, BizzInfo[LOXX][bEntry]+27, BizzInfo[LOXX][bEntrz]+31);
					SetPlayerCameraLookAt(playerid, BizzInfo[LOXX][bEntrx]-14, BizzInfo[LOXX][bEntry]+26, BizzInfo[LOXX][bEntrz]+30);
					FreezePlayer(playerid, 25000);
					SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid,0);
					for(new i = 0; i < 10; i++) SendClientMessage(playerid, COLOR_WHITE, " ");
					SendInf(playerid, "Для выхода из режима просмотра нажмите ПРОБЕЛ (или быстрый бег)");
					SetPVarInt(playerid, "SDDMVGFA", 1);
					SetPVarInt(playerid, "SDDMVGFADOM", 1);
				}
				case 5:
				{
				    new i = GetPVarInt(playerid, "infbusiness");
                    GPSPlayer_(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], "Бизнес");
					PlayerPlaySound(playerid, 4601, 0.0, 0.0, 0.0);
					SendInf(playerid, "Метка установлена у Вас на радаре. Чтобы снять метку напишите /gps");
				}
			}
		}
		case dRieltorkadoma:
		{
			if(!response)
			{
			    drieltorka[playerid] = 1;
			 	return 1;
			}
			switch(listitem)
			{
				case 0..19:
				{
					drieltorka[playerid] = 1;
					new idh = strval(inputtext[strfind(inputtext, "№")]);
					SetPVarInt(playerid, "infhouse", idh);
					new classname[20];
					switch(HouseInfo[idh][hDiscript])
					{
						case 1: classname = "Низкий";
						case 2: classname = "Средний";
						case 3: classname = "Высокий";
						default: SendErr(playerid, "Ошибка");
					}
					new str1[50];
					format(str1,sizeof(str1), "{ebec86}>> %s [№%d]", classname, idh);
					ShowPlayerDialogEx(playerid, dRieltorkadominfo, DIALOG_STYLE_MSGBOX, str1, "{FFFFFF}Просмотр информаций о выбранном доме стоит: {f0e86b}3000 рублей\n\n{FFFFFF}Продолжить?","Да","Нет");
				}
				case 20:
				{
					STRING_GLOBAL = "";
					new j = 0;
					for(new i = drieltorka[playerid]; i < TOTALHOUSE; i++)
					{
					    if(j == 20) continue;
					    if(drieltorka[playerid] == TOTALHOUSE) continue;
					    if(!strcmp(HouseInfo[i][hOwner], "None", true))
						{
							new classname[256];
							drieltorka[playerid] = i;
							j++;
							switch(HouseInfo[i][hDiscript])
							{
								case 1: classname = "Низкий";
								case 2: classname = "Средний";
								case 3: classname = "Высокий";
								default: SendErr(playerid, "Ошибка");
							}
							format(STRING_GLOBAL, 512, "%s%s [№%d]\n", STRING_GLOBAL, classname, i);
						}
						if(j == 20)
						{
							format(STRING_GLOBAL, 512, "%sДалее >>>", STRING_GLOBAL);
						}
						ShowPlayerDialogEx(playerid, dRieltorkadoma, 2, "{ebec86}>> Выберите дом:", STRING_GLOBAL, "Выбрать", "Закрыть");
					}
				}
			}
		}
		case dRieltorkadominfo:
		{
		    if(!response) return 1;
		    if(GetMoney(playerid) < 3000) return SendErr(playerid, "У Вас недостаточно денег");
			GiveMoney(playerid, -3000, "Риэлторка");
			
			FracBank[9] += 3000;
		    MysqlUpdateOtherInt("sfnbank", FracBank[9]);

		    new mes[250],classname[20];
		    new rent = GetHomeOplata(GetPVarInt(playerid, "infhouse"));
			switch(HouseInfo[GetPVarInt(playerid, "infhouse")][hDiscript])
			{
				case 1: classname = "Низкий";
				case 2: classname = "Средний";
				case 3: classname = "Высокий";
				default: SendErr(playerid, "Ошибка");
			}
		    format(mes,sizeof(mes),"Номер дома: {f0e86b}%d{FFFFFF}\nКласс: {f0e86b}%s{FFFFFF}\nЦена: {f0e86b}%d{FFFFFF} рублей\nСтоимость платы за сутки: {f0e86b}%d{FFFFFF} рублей\n{FF6347}- Посмотреть фотографию дома\n{FF6347}- Отметить дом на GPS",GetPVarInt(playerid, "infhouse"),classname,HouseInfo[GetPVarInt(playerid, "infhouse")][hPrice]*WorkSalary[7],rent);
		    ShowPlayerDialogEx(playerid, dRieltorkadominfo1, 2, "{ebec86}>> Информация о доме",mes, "Выбор", "Отмена");
		}
		case dRieltorkadominfo1:
		{
            if(!response) return 1;
			switch(listitem)
			{
				case 0..3:
				{
                    new mes[250],classname[20];
				    new rent = GetHomeOplata(GetPVarInt(playerid, "infhouse"));
					switch(HouseInfo[GetPVarInt(playerid, "infhouse")][hDiscript])
					{
						case 1: classname = "Низкий";
						case 2: classname = "Средний";
						case 3: classname = "Высокий";
						default: SendErr(playerid, "Ошибка");
					}
				    format(mes,sizeof(mes),"Номер дома: {f0e86b}%d{FFFFFF}\nКласс: {f0e86b}%s{FFFFFF}\nЦена: {f0e86b}%d{FFFFFF} рублей\nСтоимость платы за сутки: {f0e86b}%d{FFFFFF} рублей\n{FF6347}- Посмотреть фотографию дома\n{FF6347}- Отметить дом на GPS",GetPVarInt(playerid, "infhouse"),classname,HouseInfo[GetPVarInt(playerid, "infhouse")][hPrice]*WorkSalary[7],rent);
		    		ShowPlayerDialogEx(playerid, dRieltorkadominfo1, 2, "{ebec86}>> Информация о доме",mes, "Выбор", "Отмена");
				}
				case 4:
				{
				    new LOXX = GetPVarInt(playerid, "infhouse");

                    SetPlayerPos(playerid, HouseInfo[LOXX][hEntrx]-14, HouseInfo[LOXX][hEntry]+26, HouseInfo[LOXX][hEntrz]+33);
				    SetPlayerCameraPos(playerid, HouseInfo[LOXX][hEntrx]-15, HouseInfo[LOXX][hEntry]+27, HouseInfo[LOXX][hEntrz]+31);
					SetPlayerCameraLookAt(playerid, HouseInfo[LOXX][hEntrx]-14, HouseInfo[LOXX][hEntry]+26, HouseInfo[LOXX][hEntrz]+30);
					FreezePlayer(playerid, 25000);
					SetPlayerVirtualWorld(playerid, 0); SetPlayerInterior(playerid,0);
					for(new i = 0; i < 10; i++) SendClientMessage(playerid, COLOR_WHITE, " ");
					SendInf(playerid, "Для выхода из режима просмотра нажмите ПРОБЕЛ (или быстрый бег)");
					SetPVarInt(playerid, "SDDMVGFA", 1);
					SetPVarInt(playerid, "SDDMVGFADOM", 1);
				}
				case 5:
				{
				    new i = GetPVarInt(playerid, "infhouse");
					PlayerPlaySound(playerid, 4601, 0.0, 0.0, 0.0);
					
					GPSPlayer_(playerid, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz], "Дом");
					
					SendInf(playerid, "Метка установлена у Вас на радаре. Чтобы снять метку напишите /gps");
				}
			}
		}
	    case dSetWalk:
		{
			if(!response) return 1;
			p_info[playerid][pSetWalk] = listitem;
			MysqlUpdatePlayerInt(playerid, "pSetWalk", p_info[playerid][pSetWalk]);
			SendInf(playerid, "Вы выбрали новый стиль походки для своего персонажа");
		}
		case dSetAnim:
		{
			if(!response) return 1;
			p_info[playerid][pSetAnim] = listitem;
			MysqlUpdatePlayerInt(playerid, "pSetAnim", p_info[playerid][pSetAnim]);
			SendInf(playerid, "Вы выбрали новый стиль разговора для своего персонажа");
		}
	    case dTrunk:
	    {
	        if(!response)return 1;
			SetPVarInt(playerid,"trankput",0);
			SetPVarInt(playerid,"trankget",0);
	        if(listitem==0) SetPVarInt(playerid,"trankput",GetPVarInt(playerid,"slottrunk"));
	        else if(listitem==1) SetPVarInt(playerid,"trankget",GetPVarInt(playerid,"slottrunk"));
			else if(listitem==2) return ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));

	        if(GetPVarInt(playerid,"trankput")==1) ShowBootList(playerid);
	        else if(GetPVarInt(playerid,"trankget")==1)
	        {
	            STRING_GLOBAL = "";
				for(new i;i<9;i++)
				{
			  		if(!TrunkInfo[idaofcar[playerid]][tAmmo][i] || !TrunkInfo[idaofcar[playerid]][tGun][i]) continue;
					new gunname[32];
					GetWeaponName(TrunkInfo[idaofcar[playerid]][tGun][i],gunname,32);
					format(STRING_GLOBAL,512,"%s\n%s [{ebec86}%d{FFFFFF}]",STRING_GLOBAL,gunname,TrunkInfo[idaofcar[playerid]][tAmmo][i]);
				}
			 	if(!strlen(STRING_GLOBAL))
				{
					SendErr(playerid, "В багажнике нет оружия");
					ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
					return 1;
				}
				ShowPlayerDialogEx(playerid,dTrunkGunGet,2,"{ebec86}>> Багажник",STRING_GLOBAL,"Положить","Отмена");
	        }
			else if(GetPVarInt(playerid,"trankput")>1) ShowPlayerDialogEx(playerid,dTrunkPut,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите положить", "Ввод", "Отмена");
   			else if(GetPVarInt(playerid,"trankget")>1) ShowPlayerDialogEx(playerid,dTrunkGet,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите взять", "Ввод", "Отмена");
	        return 1;
	    }
		case dTrunkGunGet2:
	    {
	        if(!response)return ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
			new slot=GetPVarInt(playerid,"d_tank_get_")-1, ammo;
			if(slot==-1) return 0;
			if(sscanf(inputtext,"i",ammo)) return ShowPlayerDialogEx(playerid,dTrunkGunGet2,DIALOG_STYLE_INPUT," ","{ffffff}Введите количество патронов","Ввод","Отмена");
			if(ammo < 0 || ammo > 10000 || ammo > TrunkInfo[idaofcar[playerid]][tAmmo][slot]) return ShowPlayerDialogEx(playerid,dTrunkGunGet2,DIALOG_STYLE_INPUT," ","{ffffff}Введите количество патронов","Ввод","Отмена");
			AC_GivePlayerWeapon(playerid,TrunkInfo[idaofcar[playerid]][tGun][slot],ammo);
			TrunkInfo[idaofcar[playerid]][tAmmo][slot]-=ammo;
			SaveTrunk(idaofcar[playerid]);
			return 1;
	    }
	    case dTrunkGunGet:
	    {
	        if(!response)return ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
	        new cnt;
			for(new i;i<9;i++)
			{
		  		if(!TrunkInfo[idaofcar[playerid]][tAmmo][i] || !TrunkInfo[idaofcar[playerid]][tGun][i]) continue;
		  		else if(listitem == cnt)
		  		{
		  		    ShowPlayerDialogEx(playerid,dTrunkGunGet2,DIALOG_STYLE_INPUT," ","{ffffff}Введите количество патронов","Ввод","Отмена");
		  		    SetPVarInt(playerid,"d_tank_get_",i+1);
		  		}
		  		cnt++;
			}
			return 1;
	    }
	    case dTrunkGunPut:
	    {
	        if(!response)return ShowDialogTrunk(playerid,GetPVarInt(playerid,"slottrunk"));
	        new cnt;
			for(new i;i<=11;i++)
			{
				new gunid,ammo,storeslot;
				GetPlayerWeaponData(playerid,i,gunid,ammo);
				storeslot = GetStoreGunSlot(gunid);
    			if(!gunid || storeslot == -1 || ammo <= 0) continue;
				else if(listitem == cnt)
				{
					new cnt2;
					for(new i2 ; i2 < 9; i2++) if(TrunkInfo[idaofcar[playerid]][tAmmo] > 0 && storeslot != i2) cnt2++;
					if(cnt2 >= 9)return SendErr(playerid, "Вы не можете хранить больше 9-х видов оружия в багажник");
					if(TrunkInfo[idaofcar[playerid]][tAmmo][i] + ammo > 10000) return SendErr(playerid, "У Вас в багажнике максимальное к-во патронов данного оружия");
                    TrunkInfo[idaofcar[playerid]][tGun][i]=gunid;
                    TrunkInfo[idaofcar[playerid]][tAmmo][i]+=ammo;
					SetPlayerAmmo(playerid,gunid,0);
					SendInf(playerid, "Вы положили оружие в багажник");
					SetTimerEx("ShowBootList",500,0,"i",playerid);
					SaveTrunk(idaofcar[playerid]);
					break;
				}
				cnt++;
			}
			return 1;
	    }
	    case dTrunkGet:
	    {
	        new put,slot=GetPVarInt(playerid,"trankget");
	        if(!response)return ShowDialogTrunk(playerid,slot);
	        if(sscanf(inputtext,"i",put)) return ShowPlayerDialogEx(playerid,dTrunkGet,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите взять", "Ввод", "Отмена");
	        if(put<=0) return ShowPlayerDialogEx(playerid,dTrunkGet,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите взять", "Ввод", "Отмена");
			if(GetIntBoot(playerid,slot)<put) return ShowPlayerDialogEx(playerid,dTrunkGet,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите взять", "Ввод", "Отмена");
			if(slot<2||slot>7)return 1;
			if ( slot == 2 && put > 50000000 ) return SendErr(playerid, "Нельзя больше 50.000.000 рублей");
			if(CheckGetBoot(playerid,slot,put))
			{
				SetIntBoot(playerid,slot,GetIntBoot(playerid,slot)-put);
	            format(STRING_GLOBAL,144,"Вы взяли %d %s из багажника",put,names_boot[1][slot-1]);
	            SendInf(playerid, STRING_GLOBAL);
				DeletePVar(playerid,"trankget");
		        ShowDialogTrunk(playerid,slot);
		        SaveTrunk(idaofcar[playerid]);
	        }
	        return 1;
	    }
	    case dTrunkPut:
	    {
	        new put,slot=GetPVarInt(playerid,"trankput");
	        if(!response)return ShowDialogTrunk(playerid,slot);
			if(sscanf(inputtext,"i",put)) return ShowPlayerDialogEx(playerid,dTrunkPut,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите положить", "Ввод", "Отмена");
			if(put<0 || put > GetIntBoot(playerid,slot)+put>getmaxtrunkput(slot)) return ShowPlayerDialogEx(playerid,dTrunkPut,DIALOG_STYLE_INPUT,"  ", "{ffffff}Введите количество которое хотите положить", "Ввод", "Отмена");
            if(slot<2||slot>7)return 1;
            if ( slot == 2 && put > 50000000 ) return SendErr(playerid, "Нельзя больше 50.000.000 рублей");
            if(CheckPutBoot(playerid,slot,put))
            {
	            SetIntBoot(playerid,slot,GetIntBoot(playerid,slot)+put);
	            format(STRING_GLOBAL,144,"Вы положили %d %s в багажник",put,names_boot[1][slot-1]);
	            SendInf(playerid, STRING_GLOBAL);
		        DeletePVar(playerid,"trankput");
		        ShowDialogTrunk(playerid,slot);
		        SaveTrunk(idaofcar[playerid]);
	        }
	        else SendErr(playerid, "У вас нет этого предмета");
	        return 1;
	    }
	    case d_reg_main:
		{
			switch(listitem)
			{
				case 0: ShowPlayerDialogEx ( playerid, d_reg_pass, DIALOG_STYLE_INPUT, "{ebec86}>> Регистрация",
				!"{FFFFFF}Введите пароль для Вашего аккаунта\n"\
				"Он будет запрашиваться каждый раз, когда вы заходите на сервер\n\n"\
				"\t{f0e86b}Примечания:\n"\
				"\t-Пароль может состоять из латинских символов\n"\
				"\t-Пароль чувствителен к регистру\n"\
				"\t-Длина пароля от 6-ти до 24-ти символов", "Далее", "Назад" ) ;
				case 1: ShowPlayerDialogEx ( playerid, d_reg_email, DIALOG_STYLE_INPUT, "{ebec86}>> Регистрация",
				!"{FFFFFF}Введите адрес Вашей электронной почты\n"\
				"Используя его, вы сможете восстановить доступ к аккаунту\n"\
				"в случае взлома или если забудете пароль.\n\n"\
				"На email мы вышлем ссылку. В течение 14 дней Вы можете\n"\
				"перейти по ней для подтверждения почты.\n\n"\
				"Убедитесь в правильности ввода и нажмите 'Далее'", "Далее", "Назад" ) ;
				case 2: ShowPlayerDialogEx ( playerid, d_reg_referal, DIALOG_STYLE_INPUT, "{ebec86}>> Регистрация",
				!"{ffffff}Введите имя игрока, пригласившего Вас на сервер\n\
				Если Вас никто не приглашал, то нажмите 'Назад'\n\n\
				Если вы отыграете и достигните 4 уровня,\n\
				то Ваш реферал получит {f0e86b}100.000 рублей", "Далее", "Назад" ) ;
				case 3: ShowPlayerDialogEx ( playerid, d_reg_gender, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", "- Мужчина\n- Женщина", "Далее", "Назад" ) ;
				case 4: ShowPlayerDialogEx ( playerid, d_reg_race, DIALOG_STYLE_LIST, "{ebec86}>> Регистрацияь", "- Россия\n- Украина\n- Беларусь\n- Молдавия\n- Казахстан\n- Киргизия\n- Латвия\n\
				- Эстония\n- Грузия\n- Узбекистан\n- Армения\n- Туркмения\n- Азербайджан", "Далее", "Назад" ) ;
				case 5:
				{
					if (! GetPVarInt ( playerid, "reg_race" ) || GetPVarInt ( playerid, "reg_gender" ) == 2 )
					{
						new dialog_string [ 300 ] ;
						new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
						GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
						GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
						GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
						ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
						ds_race = GetPVarInt ( playerid, "reg_race" ) ;
						ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

						SendErr ( playerid, "Для начала нужно выбрать пол и расу" ) ;
						format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
						if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
						else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
						ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
						return 1 ;
					}
					for(new i = 0; i < 9; i++)
					{
					    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
					}

					SetPVarInt(playerid, "chose_player", true);
					if(GetPVarInt(playerid, "chose_player"))
					{
						SendClientMessage(playerid, C_BLUE, "Выберите себе подходящую одежду, после выбора нажмите 'ВЫБРАТЬ'");

						TogglePlayerControllable(playerid, 0);

						for(new i = 0; i < 9; i++)
						{
				  			TextDrawShowForPlayer(playerid, TD_Clothes[i]);
						}

						SelectTextDraw(playerid, COLOR_ORANGE);

						new ds_gender, ds_race ;
						ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
						ds_race = GetPVarInt ( playerid, "reg_race" ) ;
						SetPlayerSkin(playerid, gRegSkins[ds_race-1][ds_gender][0]);
					}
					DeletePVar(playerid, "request_use");
				}
				case 6:
				{
					new dialog_string [ 300 ] ;
					new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
					GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
					GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
					GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
					ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
					ds_race = GetPVarInt ( playerid, "reg_race" ) ;
					ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;
					if (ds_gender != 2 && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1)
					{
					    DeletePVar(playerid, "player_in_enter");
						ChosenSkin[playerid] = 0;
						SelectCharPlace[playerid] = 0;
						ClothesRound[playerid] = 0;
						TogglePlayerControllable(playerid, 1);
						PlayerRegistered[playerid] = 1;
						CreateAccount(playerid, p_info[playerid][pPassword]);
						return 1;
					}
					else
					{
						SendErr ( playerid, "Вы не заполнили форму регистрации" ) ;
						format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
						format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
						if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
						else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
						ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
						return 1 ;
					}
				}
			}
		}
	case d_reg_race:
		{
			new dialog_string [ 300 ] ;
    		if ( ! response )
			{
				new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
				GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
				GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
				GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
				ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
				ds_race = GetPVarInt ( playerid, "reg_race" ) ;
				ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

				format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
				if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
				else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
				ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
				return 1 ;
			}
			SetPVarInt ( playerid, "reg_race", listitem + 1 ) ;
			new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
			GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
			GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
			GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
			ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
			ds_race = GetPVarInt ( playerid, "reg_race" ) ;
			ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

			format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
			if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
			else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
			ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
		}
	case d_reg_gender:
		{
			new dialog_string [ 300 ] ;
    		if ( ! response )
			{
				new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
				GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
				GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
				GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
				ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
				ds_race = GetPVarInt ( playerid, "reg_race" ) ;
				ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

				format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
				if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
				else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
				ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
				return 1 ;
			}
			SetPVarInt ( playerid, "reg_gender", listitem ) ;
			new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
			GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
			GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
			GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
			ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
			ds_race = GetPVarInt ( playerid, "reg_race" ) ;
			ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

			format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
			if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
			else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
			ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
		}
	case d_reg_referal:
		{
			if ( ! response )
			{
				new dialog_string [ 300 ] ;
				new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
				GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
				GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
				GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
				ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
				ds_race = GetPVarInt ( playerid, "reg_race" ) ;
				ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;
				format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
				if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
				else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
				ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
				return 1 ;
			}
			if ( ( strlen ( inputtext ) < 6 || strlen ( inputtext ) > 24 ))
			{
				ShowPlayerDialogEx ( playerid, d_reg_referal, DIALOG_STYLE_INPUT, "{ebec86}>> Регистрация",
				!"{ffffff}Введите имя игрока, пригласившего Вас на сервер\n\
				Если Вас никто не приглашал, то нажмите 'Назад'\n\n\
				Если вы отыграете и достигните 4 уровня,\n\
				то Ваш реферал получит {f0e86b}100.000 рублей", "Далее", "Назад" ) ;
				return 1 ;
			}
			
			SetPVarString(playerid, "reg_referal", inputtext);
			
			new query_string [ 52 + MAX_PLAYER_NAME ] ;
			format(query_string, sizeof(query_string), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s' LIMIT 1", inputtext);
			mysql_tquery(dbHandle, query_string, "OnPlayerReferal", "i", playerid);
			return 1 ;
		}
	case d_reg_pass:
		{
			new dialog_string [ 300 ] ;
			if ( ! response )
			{
				new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
				GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
				GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
				GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
				ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
				ds_race = GetPVarInt ( playerid, "reg_race" ) ;
				ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

				format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
				if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
				else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
				ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
				return 1 ;
			}
			for(new i = strlen(inputtext); i != 0; --i)
			{
				switch(inputtext[i])
				{
					case 'А'..'Я', 'а'..'я', ' ':
					{
					    ShowPlayerDialogEx ( playerid, d_reg_pass, DIALOG_STYLE_INPUT, "{ebec86}>> Регистрация",
						!"{FFFFFF}Введите пароль для Вашего аккаунта\n"\
						"Он будет запрашиваться каждый раз, когда вы заходите на сервер\n\n"\
						"\t{f0e86b}Примечания:\n"\
						"\t-Пароль может состоять из латинских символов\n"\
						"\t-Пароль чувствителен к регистру\n"\
						"\t-Длина пароля от 6-ти до 24-ти символов", "Далее", "Назад" ) ;
						return 1 ;
					}
				}
			}
			if ( ( strlen ( inputtext ) < 6 && strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1 || strlen ( inputtext ) > 24 ) && strfind(inputtext, "=", true) == -1 && strfind(inputtext, ",", true) == -1 && strfind(inputtext, "'", true) == -1)
			{
				ShowPlayerDialogEx ( playerid, d_reg_pass, DIALOG_STYLE_INPUT, "{ebec86}>> Регистрация",
				!"{FFFFFF}Введите пароль для Вашего аккаунта\n"\
				"Он будет запрашиваться каждый раз, когда вы заходите на сервер\n\n"\
				"\t{f0e86b}Примечания:\n"\
				"\t-Пароль может состоять из латинских символов\n"\
				"\t-Пароль чувствителен к регистру\n"\
				"\t-Длина пароля от 6-ти до 24-ти символов", "Далее", "Назад" ) ;
				return 1 ;
			}
			SetPVarString ( playerid, "reg_password", ( inputtext ) ) ;
			new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
			GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
			GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
			GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
			ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
			ds_race = GetPVarInt ( playerid, "reg_race" ) ;
			ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

			format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
			if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
			else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
			ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
		}
	case d_reg_email:
		{
			new dialog_string [ 300 ] ;
    		if ( ! response )
			{
				new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
				GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
				GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
				GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
				ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
				ds_race = GetPVarInt ( playerid, "reg_race" ) ;
				ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

				format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
				format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
				if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
				else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
				ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
				return 1 ;
			}
			if ( strfind ( inputtext, "@", false ) == -1 || strfind ( inputtext, ".", false ) == -1 )
			{
				ShowPlayerDialogEx ( playerid, d_reg_email, DIALOG_STYLE_INPUT, "{ebec86}>> Регистрация",
				!"{FFFFFF}Введите адрес Вашей электронной почты\n"\
				"Используя его, вы сможете восстановить доступ к аккаунту\n"\
				"в случае взлома или если забудете пароль.\n\n"\
				"На email мы вышлем ссылку. В течение 14 дней Вы можете\n"\
				"перейти по ней для подтверждения почты.\n\n"\
				"Убедитесь в правильности ввода и нажмите 'Далее'", "Далее", "Назад" ) ;
				return 1 ;
			}
			SetPVarString ( playerid, "reg_email", ( inputtext ) ) ;
			new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
			GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
			GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
			GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
			ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
			ds_race = GetPVarInt ( playerid, "reg_race" ) ;
			ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

			format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
			format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
			if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
			else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
			ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
		}
		case dAccesories:
		{
			if(!response) return pc_cmd_mm(playerid);
			new count_acc_ss = 0;
			for(new index = 0; index < 5; index ++)
			{
				if(acc_player[playerid][acc_object_id][index] == -1) continue;
				for(new g = 0; g < 5; g++)
				{
					for(new h = 0; h < 33; h++)
					{
						if(acc_player[playerid][acc_object_id][index] == id_acc[g][h])
						{
							if ( listitem == count_acc_ss )
							{
								SetPVarInt(playerid,"dSelectAccesories_index", index + 1);
								SetPVarInt(playerid,"dSelectAccesories_g", g + 1);

								ShowPlayerDialogEx(playerid, dSelectAccesories, DIALOG_STYLE_LIST, "{ebec86}>> Подтверждение", "1. Изменить\n2. Удалить\n3. Снять / Одеть", "Выбрать", "Закрыть");
							}
							count_acc_ss++;
							break;
						}
					}
				}
			}
			return 1;
		}
		case dSelectAccesories:
		{
			if ( !response )
			{
				DeletePVar ( playerid , "dSelectAccesories_index" ) ;
				DeletePVar ( playerid , "dSelectAccesories_g" ) ;
			}
			else
			{
				new index = GetPVarInt ( playerid , "dSelectAccesories_index" ) - 1;
				new g = GetPVarInt ( playerid , "dSelectAccesories_g" ) - 1;

				switch(listitem)
				{
					case 0:
					{
					    if(!IsPlayerAttachedObjectSlotUsed(playerid, index + 5))
						{
							new Float:frx, Float:fry, Float:frz;
							GetOffsetAttachedAccesories(acc_player[playerid][acc_object_id][index],frx,frx,frx,frx,fry,frz);

							if(g == 2) SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],6,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);
							else if(g == 3) SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],1,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);
							else SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],2,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);
						}
						SendInf(playerid, "Используйте {FFFF00}ПРОБЕЛ{FFFFFF} чтобы осмотреть ваш аксессуар");
						EditAttachedObject(playerid, index + 5);
					}
					case 1:
					{
						acc_player[playerid][acc_object_id][index] = -1;
						acc_player[playerid][acc_object_x][index] = 0.0;
						acc_player[playerid][acc_object_y][index] = 0.0;
						acc_player[playerid][acc_object_z][index] = 0.0;

						RemovePlayerAttachedObject(playerid, index + 5);

						UpdateAccesories ( playerid ) ;

						SendInf(playerid, "Вы удалили аксессуар с своего персонажа");
						
						DeletePVar ( playerid , "dSelectAccesories_index" ) ;
						DeletePVar ( playerid , "dSelectAccesories_g" ) ;
					}
					case 2:
					{
						if(IsPlayerAttachedObjectSlotUsed(playerid, index + 5))
						{
							RemovePlayerAttachedObject(playerid, index + 5);
							SendInf(playerid, "Вы сняли аксессуар с своего персонажа");
							
							DeletePVar ( playerid , "dSelectAccesories_index" ) ;
							DeletePVar ( playerid , "dSelectAccesories_g" ) ;
						}
						else
						{
							new Float:frx, Float:fry, Float:frz;
							GetOffsetAttachedAccesories(acc_player[playerid][acc_object_id][index],frx,frx,frx,frx,fry,frz);

							if(g == 2) SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],6,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);
							else if(g == 3) SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],1,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);
							else SetPlayerAttachedObject(playerid,index + 5,acc_player[playerid][acc_object_id][index],2,acc_player[playerid][acc_object_x][index],acc_player[playerid][acc_object_y][index],acc_player[playerid][acc_object_z][index],frx,fry,frz);

							SendInf(playerid, "Вы одели аксессуар на своего персонажа");
							
							DeletePVar ( playerid , "dSelectAccesories_index" ) ;
							DeletePVar ( playerid , "dSelectAccesories_g" ) ;
						}
					}
				}
			}
			return 1;
		}
	    case D_TICKETPAY:
	    {
	        if(!response) return 1;
	        ownable_car[playerid][v_ticket] = 0;

	       	STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, 256, "UPDATE ownable_cars SET ticket = %d WHERE id = %d", ownable_car[playerid][v_ticket], ownable_car[playerid][v_sql]);
			mysql_query(dbHandle, STRING_GLOBAL);
			
		    FracBank[9] += 50000;
		    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			
			GiveMoney(playerid, -50000, "Штрафстоянка");
			SendInf(playerid, "Вы оплатили гос. пошлину и забрали своё т/с со штрафстоянки");
			
			SetVehiclePos(p_info[playerid][pOwnableCar], 1778.3872,2254.2832,15.3664);
	     	AC_SetVehicleZAngle(p_info[playerid][pOwnableCar], 145.2225);
			
			SetVehicleVirtualWorld(p_info[playerid][pOwnableCar], 0);
			return 1;
	    }
	    case 9623:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                pc_cmd_stats(playerid);
	            }
	            case 1:
	            {
	                pc_cmd_help(playerid);
	            }
	            case 2:
	            {
	                pc_cmd_report(playerid);
	            }
				case 3:
				{
	            	PlayerSecurity(playerid);
				}
				case 4: callcmd::donate(playerid);
				case 5:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL,"{FFFFFF}В данном окне, Вы сможете активировать промокод\n");
					strcat(STRING_GLOBAL,"{F2F195}Возможные призы: VIP, Деньги, Донат\n\n");
					strcat(STRING_GLOBAL,"{FFFFFF}Введите полученный промокод в окошко ниже:");
					ShowPlayerDialogEx(playerid,D_PROMO+5,DIALOG_STYLE_INPUT, "{ebec86}>> Активация промокода", STRING_GLOBAL,"Далее","Отмена");
				}
				case 6:
				{
					new count_acc_ss = 0;
					STRING_GLOBAL[0] = EOS;
					for(new index = 0; index < 5; index++)
					{
						if(acc_player[playerid][acc_object_id][index] == -1) continue;
						for(new g = 0; g < 5; g++)
						{
							for(new h = 0; h < 33; h++)
							{
								if(acc_player[playerid][acc_object_id][index] == id_acc[g][h])
								{
									format(STRING_GLOBAL, 512, "%s%d. %s\n", STRING_GLOBAL, (index + 1), acc_name[g]);
									count_acc_ss++;
									break;
								}
							}
						}

					}
					if ( count_acc_ss != 0 )
						ShowPlayerDialogEx(playerid, dAccesories, DIALOG_STYLE_LIST, "{ebec86}>> Аксессуары", STRING_GLOBAL, "Выбрать", "Закрыть");
					else SendErr(playerid, "У вас нет аксессуаров, приобретите их в магазине одежды");
				}
				case 7:
				{
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "1. %s\n2. %s\n3. %s\n{FFFFFF}- Помощь",
					(p_info[playerid][pImprove][0] != 1) ? ("{FFFFFF}Выносливость {FF6347}Не имеется (5 уровень и 50.000 руб)") : ("{FFFFFF}Выносливость - {f0e86b}Куплено"),
					(p_info[playerid][pImprove][1] != 1) ? ("{FFFFFF}Решительность {FF6347}Не имеется (7 уровень и 75.000 руб)") : ("{FFFFFF}Решительность - {f0e86b}Куплено (/leave)"),
					(p_info[playerid][pImprove][3] != 1) ? ("{FFFFFF}Мастер вождения {FF6347}Не имеется (10 уровень и 125.000 руб)") : ("{FFFFFF}Мастер вождения - {f0e86b}Куплено"));
					ShowPlayerDialogEx(playerid, D_JOB+177, DIALOG_STYLE_LIST, "{ebec86}>> Улучшения персонажа", STRING_GLOBAL, "Выбрать", "Назад");
				}
	        }
	    }
	    case 9123:
		{
			if ( ! response ) return 1 ;
			new t = 0 ;
			for ( new i = 1 ; i < MAX_FRACTIONS ; i ++ )
			{
			   	if ( i != 7 && i != 8 && i != 15 && i != 16) continue ;
				if ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == 0 ) continue ;
				if ( i ==  p_info [ playerid ] [ pMember ] )continue ;

				if ( listitem == t )
				{
					SetPVarInt ( playerid,  "dip_i", i ) ;

				}
				t ++ ;
			}
			
			for(new idx = TOTALBIZZ; idx > 0; idx --)
			{
			    if(PlayerToPoint(3.0, playerid, BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]))
				{
				    if(BizzInfo[idx][bMafia] != p_info[playerid][pMember]) return SendErr(playerid, "Этот бизнес не пренадлежит Вам");
	       			
					MafiaTotalBizz[p_info[playerid][pMember]]--;
					UpdateStoreGang(p_info[playerid][pMember]);

				    BizzInfo[idx][bMafia] = GetPVarInt(playerid, "dip_i");
				    MysqlUpdateBizzInt(idx, "mafia", BizzInfo[idx][bMafia]);
				    
				    MafiaTotalBizz[GetPVarInt(playerid, "dip_i")]++;
				    UpdateStoreGang(GetPVarInt(playerid, "dip_i"));

					format(STRING_GLOBAL, 128, "* %s передал(а) бизнес '%s' во владения %s", GetName(playerid), BizzInfo[idx][bName], Fractions[GetPVarInt(playerid, "dip_i")][fractionName]);
					SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, STRING_GLOBAL);
					format(STRING_GLOBAL, 128, "* [%s] %s передал(а) бизнес '%s' в ваши владения", Fractions[p_info[playerid][pMember]][fractionName], GetName(playerid), BizzInfo[idx][bName]);
					SendFMes(GetPVarInt(playerid, "dip_i"), COLOR_LIGHTBLUE, STRING_GLOBAL);
				}
			}
		}
	    case dDipMenu:
		{
			if ( ! response ) return 1 ;
			if ( ! p_info [ playerid ] [ pLeader ] ) return 1 ;
			new t = 0 ;
			for ( new i = 1 ; i < MAX_FRACTIONS ; i ++ )
			{
			   	if ( i != 7 && i != 8 && i != 15 && i != 16) continue ;
				if ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == 0 ) continue ;
				if ( i ==  p_info [ playerid ] [ pMember ] )continue ;

				if ( listitem == t )
				{
					SetPVarInt ( playerid,  "dip_i", i ) ;

				}
				t ++ ;
			}
			ShowPlayerDialogEx(playerid,dDipChangeStatus,DIALOG_STYLE_LIST,"{ebec86}>> Дипломатия", "- Война\n- Нейтралитет\n- Союз", "Выбрать", "Назад") ;
		}
		case dDipChangeStatus:
		{
			if ( ! response )
			{
			    STRING_GLOBAL = "";
				new line_string [ 70 ];
				for ( new i = 1 ; i < MAX_FRACTIONS ; i ++ )
				{
				    if ( i != 7 && i != 8 && i != 15 && i != 16 ) continue ;
					if ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == 0 ) continue ;
					if ( i == p_info [ playerid ] [ pMember ] ) continue ;

					format ( line_string, sizeof ( line_string ), "%i - %s - %s\n", i, Fractions[i][fractionName], ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == status_war ) ? ( "{FF6347}Война{FFFFFF}" ) : ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == status_neutral ) ? ( "{fcfc00}Нейтралитет{FFFFFF}" ) : ( "{f0e86b}Союз{FFFFFF}" ) ) ;
					strcat ( STRING_GLOBAL, line_string ) ;
				}
				ShowPlayerDialogEx(playerid,dDipMenu,DIALOG_STYLE_LIST,"{ebec86}>> Дипломатия", STRING_GLOBAL, "Изменить", "Выйти") ;
				DeletePVar ( playerid, "dip_i" ) ;
				return 1 ;
			}
			new i = GetPVarInt ( playerid, "dip_i" ) ;
			if ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == listitem + 1 )
			{
				ShowPlayerDialogEx(playerid,dDipChangeStatus,DIALOG_STYLE_LIST,"{ebec86}>> Дипломатия", "- Война\n- Нейтралитет\n- Союз", "Выбрать", "Назад") ;
				return SendErr(playerid, "Ваше отношения уже в данном статусе");
			}
			if ( listitem == 0 )// объявление войны
			{
				dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] = status_war ;
				dip_status [ i ] [ p_info [ playerid ] [ pMember ] ] = status_war ;
				SaveFracDiplomacy ( p_info [ playerid ] [ pMember ] ) ;
				SaveFracDiplomacy ( i ) ;
				
				new string[150];
				foreach(new j: Player)
				{
				    if(IsAMafia(j))
				    {
				        format(string, sizeof string, "[ДИПЛОМАТИЯ]: %s объявили войну %s", Fractions[p_info [ playerid ] [ pMember ]][fractionName], Fractions[i][fractionName] );
				        SendClientMessage(j, UNION_COLOR, string);
				    }
				}
				return 1 ;
			}
			new sql_string [ 156 ] ;
			format ( sql_string, 156, "INSERT INTO `dip_invites` (`from_f`,`to_f`,`new_status`) VALUES ('%d','%d','%d')", p_info [ playerid ] [ pMember ], i, listitem + 1 ) ;
			mysql_tquery ( dbHandle, sql_string ) ;
			SendInf(playerid, "Вы отправили дипломатический запрос" ) ;
			return 1 ;
		}
		case dDipInviteList:
		{
			if ( ! response ) return 1 ;
			SetPVarInt ( playerid, "dDipInviteList_listitem", listitem ) ;
			ShowPlayerDialogEx(playerid, dDipInviteListAccept, DIALOG_STYLE_MSGBOX, "{ebec86}>> Дипломатия", "{FFFFFF}Выберите действие с данным запросом", "Принять", "Отказать" ) ;
			return 1 ;
		}
		case dDipInviteListAccept:
		{
			if ( ! response )
			{
				new query_string [ 156 ] ;
				format ( query_string, sizeof ( query_string ), "SELECT * FROM `dip_invites` WHERE `to_f`='%d'", p_info [ playerid ] [ pMember ] ) ;
				mysql_tquery ( dbHandle, query_string, "dip_callback", "d", playerid ) ;

				new t = GetPVarInt ( playerid, "dDipInviteList_listitem" ) ;
				new pvar_string [ 12 ] ;
				format ( pvar_string, 12, "%d_from", t ) ;

				new from_f = GetPVarInt ( playerid, pvar_string ) ;
				format ( query_string, sizeof ( query_string ), "DELETE FROM `dip_invites` WHERE `to_f`='%d' AND `from_f`='%d'", p_info [ playerid ] [ pMember ], from_f  ) ;
				mysql_tquery ( dbHandle, query_string, "dip_callback", "d", playerid ) ;

				for ( new i = 0 ; i < 10 ; i ++ )
				{
					format ( pvar_string, 12, "%d_from", i ) ;
					DeletePVar ( playerid, pvar_string ) ;
				}
				return 1 ;

			}

			new t = GetPVarInt ( playerid, "dDipInviteList_listitem" ) ;
			new pvar_string [ 12 ] ;
			format ( pvar_string, 12, "%d_from", t ) ;

			new from_f = GetPVarInt ( playerid, pvar_string ) ;

			format ( pvar_string, 12, "%d_status", t ) ;
			new new_status = GetPVarInt ( playerid, pvar_string ) ;

			dip_status [ p_info [ playerid ] [ pMember ] ] [ from_f ] = new_status ;
			dip_status [ from_f ] [ p_info [ playerid ] [ pMember ] ] = new_status ;

			SaveFracDiplomacy ( p_info [ playerid ] [ pMember ] ) ;
			SaveFracDiplomacy ( from_f ) ;

			for ( new i = 0 ; i < 10 ; i ++ )
			{
				format ( pvar_string, 12, "%d_from", i ) ;
				DeletePVar ( playerid, pvar_string ) ;
			}
			new query_string [ 156 ] ;
			format ( query_string, sizeof ( query_string ), "DELETE FROM `dip_invites` WHERE `to_f`='%d' AND `from_f`='%d'", p_info [ playerid ] [ pMember ], from_f  ) ;
			mysql_tquery ( dbHandle, query_string, "dip_callback", "d", playerid ) ;
			
			new string[150], text[32];
			if(new_status == 2)
			{
			    text = "нейтралитет";
			}
			if(new_status == 3)
			{
			    text = "союз";
			}
			foreach(new i: Player)
			{
			    if(IsAMafia(i))
			    {
			        format(string, sizeof string, "[ДИПЛОМАТИЯ]: %s заключили %s с %s", Fractions[from_f][fractionName], new_status, Fractions[p_info [ playerid ] [ pMember ]][fractionName] );
			        SendClientMessage(i, UNION_COLOR, string);
			    }
			}

			return 1 ;
		}
		case dBinder:
		{
		    if(!response) return 1;
		    new message_[100];
			if(sscanf(inputtext,"s[100]",message_)) return SendErr(playerid, "Вы ввели недопустимое количество символов");
		    if(IsIpFound(message_) || CheckString(message_)) return SendErr(playerid, "Вы ввели слишком много цифр");
		    
			SendInf(playerid, "Вы успешно установили сообщение на бинд №1");
		    
		    strmid(player_binder[playerid][0], message_, 0, strlen(message_), 128);
		    MysqlUpdatePlayerStr(playerid, "binder", message_);
		    
		    if(strcmp(player_binder[playerid][0],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 0 ], "Текст этого бинда установлен" ) ;
		    return 1;
		}
		case dBinder1:
		{
		    if(!response) return 1;
		    new message_[100];
			if(sscanf(inputtext,"s[100]",message_)) return SendErr(playerid, "Вы ввели недопустимое количество символов");
		    if(IsIpFound(message_) || CheckString(message_)) return SendErr(playerid, "Вы ввели слишком много цифр");

			SendInf(playerid, "Вы успешно установили сообщение на бинд №2");

		    strmid(player_binder[playerid][1], message_, 0, strlen(message_), 128);
		    MysqlUpdatePlayerStr(playerid, "binder1", message_);
		    
		    if(strcmp(player_binder[playerid][1],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 1 ], "Текст этого бинда установлен" ) ;
		    return 1;
		}
		case dBinder2:
		{
		    if(!response) return 1;
		    new message_[100];
			if(sscanf(inputtext,"s[100]",message_)) return SendErr(playerid, "Вы ввели недопустимое количество символов");
		    if(IsIpFound(message_) || CheckString(message_)) return SendErr(playerid, "Вы ввели слишком много цифр");

			SendInf(playerid, "Вы успешно установили сообщение на бинд №3");

		    strmid(player_binder[playerid][2], message_, 0, strlen(message_), 128);
		    MysqlUpdatePlayerStr(playerid, "binder2", message_);
		    
		    if(strcmp(player_binder[playerid][2],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 2 ], "Текст этого бинда установлен" ) ;
		    return 1;
		}
		case dBinder3:
		{
		    if(!response) return 1;
		    new message_[100];
			if(sscanf(inputtext,"s[100]",message_)) return SendErr(playerid, "Вы ввели недопустимое количество символов");
		    if(IsIpFound(message_) || CheckString(message_)) return SendErr(playerid, "Вы ввели слишком много цифр");

			SendInf(playerid, "Вы успешно установили сообщение на бинд №4");

		    strmid(player_binder[playerid][3], message_, 0, strlen(message_), 128);
		    MysqlUpdatePlayerStr(playerid, "binder3", message_);
		    
		    if(strcmp(player_binder[playerid][3],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 3 ], "Текст этого бинда установлен" ) ;
		    return 1;
		}
		case dBinder4:
		{
		    if(!response) return 1;
		    new message_[100];
			if(sscanf(inputtext,"s[100]",message_)) return SendErr(playerid, "Вы ввели недопустимое количество символов");
		    if(IsIpFound(message_) || CheckString(message_)) return SendErr(playerid, "Вы ввели слишком много цифр");

			SendInf(playerid, "Вы успешно установили сообщение на бинд №5");

		    strmid(player_binder[playerid][4], message_, 0, strlen(message_), 128);
		    MysqlUpdatePlayerStr(playerid, "binder4", message_);
		    
		    if(strcmp(player_binder[playerid][4],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 4 ], "Текст этого бинда установлен" ) ;
		    return 1;
		}
	    case DIALOG_BUS_ROUTE_SELECTION:
		{
			if(response)
			{
				SendClientMessage(playerid, COLOR_ANTIQUEWHITE, "Чтобы закончить работу введите /beginwork");

				SetPVarInt(playerid, "BusRouteCheckpoint", 0);
				SetPVarInt(playerid, "StartBusRoute", listitem);
				
				new route_id = GetPVarInt(playerid, "StartBusRoute");

				new fmt_str[128];
				format(fmt_str, sizeof fmt_str, "%s\n{FFFFFF}Стоимость проезда: {f0e86b}%d руб", g_bus_routes[route_id][BR_NAME], WorkSalary[2]);
				BusStats[playerid] = CreateDynamic3DTextLabel(fmt_str, g_bus_routes[route_id][BR_COLOR], 0, 0, 2.8, 25.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid), 1, 0);

				NextBusRouteCP(playerid);
			}
		}
	    case 186:
		{
			if(response)
			{
			    new VehicleID = GetPlayerVehicleID(playerid);
			    new Float:Health;
				GetVehicleHealth(VehicleID, Health);
				SetPVarInt(playerid, "BusRepairMoney", (1000-floatround(Health))*2);
		        if(GetPVarInt(playerid, "BusRouteMoney") > GetPVarInt(playerid, "BusRepairMoney"))
				{
					GivePVarInt(playerid, "BusRouteMoney", -GetPVarInt(playerid, "BusRepairMoney"));
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы закончили работу. Ваша зарплата: {f0e86b}%d{FAEBD7} рублей. Она будет зачислена на ваш банковский счёт", GetPVarInt(playerid, "BusRouteMoney"));
			        SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
			        format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вычтено за ремонт автобуса: {f0e86b}%d{FAEBD7} рублей", GetPVarInt(playerid, "BusRepairMoney"));
			        SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
				}
		        else
				{
					SetPVarInt(playerid, "BusRouteMoney", 0);
			        SendClientMessage(playerid, COLOR_ANTIQUEWHITE, "Вы ничего не заработали");
				}
				
				p_info[playerid][pPayCheck] += GetPVarInt(playerid, "BusRouteMoney");
				MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

				SetPVarInt(playerid, "BusRouteCheckpoint", 0);
		        SetPVarInt(playerid, "BusRouteMoney", 0);
		        SetPVarInt(playerid, "BusRouteID", -1);
		        SetPVarInt(playerid, "StartBusRoute", -1);
		        DestroyDynamic3DTextLabel(BusStats[playerid]);
		        DisablePlayerCheckpoint(playerid);
			}
		}
	    case 124:
		{
			if(response)
			{
				new Float:Pos[3];
			    GetPlayerPos(GetPVarInt(playerid, "TaxiPassanger"), Pos[0], Pos[1], Pos[2]);
				SetPVarFloat(GetPVarInt(playerid, "TaxiPassanger"), "TaxiX", Pos[0]);
				SetPVarFloat(GetPVarInt(playerid, "TaxiPassanger"), "TaxiY", Pos[1]);
				SetPVarFloat(GetPVarInt(playerid, "TaxiPassanger"), "TaxiZ", Pos[2]);
				SetPVarInt(GetPVarInt(playerid, "TaxiPassanger"), "TaxiStart", 1);
				SendInf(playerid, "Вы приняли заказ. Счастливого пути");
				SendInf(GetPVarInt(playerid, "TaxiPassanger"), "Таксист принял ваш заказ. Счастливого пути");
				
				SendInf(GetPVarInt(playerid, "TaxiPassanger"), "Обозначьте пункт назначения меткой на карте"), SetPVarInt(GetPVarInt(playerid, "TaxiPassanger"), "ChoiceTaxiMap", 1);
			}
			else
			{
				SendInf(playerid, "Вы отказались от заказа");
				SendInf(GetPVarInt(playerid, "TaxiPassanger"), "Таксист не принял ваш заказ");
				SetPVarInt(GetPVarInt(playerid, "TaxiPassanger"), "TaxiDriver", -1);
				SetPVarInt(playerid, "TaxiPassanger", -1);
			}
		}
	    case 2228:
		{
		    new VehicleID = GetPlayerVehicleID(playerid);
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 2228, DIALOG_STYLE_INPUT, "{ebec86}>> Загрузка бензина", "{FFFFFF}Введите нужное количество бензина в литрах:\n- Бензин оплачивает ваш работодатель", "Принять", "Выйти");
			if(strval(inputtext) < 1) return ShowPlayerDialogEx(playerid, 2228, DIALOG_STYLE_INPUT, "{ebec86}>> Загрузка бензина", "{FFFFFF}Введите нужное количество бензина в литрах:\n- Бензин оплачивает ваш работодатель\n\n{AFAFAF}* Нельзя загрузить менее 1 литра", "Принять", "Назад");
			if(MechanicFuel[VehicleID]+strval(inputtext) > 2500) return ShowPlayerDialogEx(playerid, 2228, DIALOG_STYLE_INPUT, "{ebec86}>> Загрузка бензина", "{FFFFFF}Введите нужное количество бензина в литрах:\n- Бензин оплачивает ваш работодатель\n\n{AFAFAF}* В машине недостаточно места", "Принять", "Назад");
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы загрузили {f0e86b}%d {FFFFFF}литров бензина", strval(inputtext));
			SendInf(playerid, STRING_GLOBAL);
            for(new i = TOTALBIZZ; i > 0; i --)
			{
				if(PlayerToPoint(5.0, playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]))
				{
					BizzInfo[i][bMoneyHour] += strval(inputtext) * BizzInfo[i][bTill] * WorkSalary[15];
					BizzPay[i] += strval(inputtext) * BizzInfo[i][bTill]*WorkSalary[15];
					BizzInfo[i][bProduct] -= strval(inputtext);
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					
					MechanicFuelCost[VehicleID] = BizzInfo[i][bTill];
				}
			}

			MechanicFuel[VehicleID] += strval(inputtext);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Бензин - {f0e86b}%d рублей/литр (%d/2500)\n{FFFFFF}Ремонт - {f0e86b}от 2 рублей", MechanicFuelCost[VehicleID], MechanicFuel[VehicleID]);
			UpdateDynamic3DTextLabelText(MechanicFuelCostText[VehicleID], COLOR_WHITE, STRING_GLOBAL);
		}
		case 129:
		{
		    if(!response) return 1;
			new VehicleID = GetPlayerVehicleID(playerid);
			if(GetMoney(playerid) < GetPVarInt(playerid, "MechanicRepairCost")) return SendErr(playerid, "У вас недостаточно денег");
			GiveMoney(playerid, -GetPVarInt(playerid, "MechanicRepairCost"), "Механик сам себя отремонтировал");
        	RepairVehicle(VehicleID);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы отремонтировали свой транспорт за {f0e86b}%d рублей", GetPVarInt(playerid, "MechanicRepairCost"));
			SendInf(playerid, STRING_GLOBAL);
		}
		case 130:
		{
			if(!response) return 1;
			new VehicleID = GetPlayerVehicleID(playerid);
			if(GetMoney(playerid) < GetPVarInt(playerid, "MechanicFillCost")) return SendErr(playerid, "У вас недостаточно денег");
			GiveMoney(playerid, -GetPVarInt(playerid, "MechanicFillCost"), "Механик сам себя заправил");
        	Fuel[VehicleID] += GetPVarFloat(playerid, "MechanicFillFuel");
        	MechanicFuel[VehicleID] -= GetPVarInt(playerid, "MechanicFillFuel");
	        format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Бензин - {f0e86b}%d рублей/литр (%d/2500)\n{FFFFFF}Ремонт - {f0e86b}от 2 рублей", MechanicFuelCost[VehicleID], MechanicFuel[VehicleID]);
			UpdateDynamic3DTextLabelText(MechanicFuelCostText[VehicleID], COLOR_WHITE, STRING_GLOBAL);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы заправили свой транспорт на {f0e86b}%d {FFFFFF}литров за {f0e86b}%d рублей", GetPVarInt(playerid, "MechanicFillFuel"), GetPVarInt(playerid, "MechanicFillCost"));
			SendInf(playerid, STRING_GLOBAL);
		}
	    case 28:
		{
			if(response)
			{
			    if(p_info[playerid][pCash] >= 300)
			    {
			        new VehicleID = GetPlayerVehicleID(playerid);
					GiveMoney(playerid, -300, "Аренда транспорта механиков");
					
					FracBank[9] = 300;
	    			MysqlUpdateOtherInt("sfnbank", FracBank[9]);
					
					SendInf(playerid, "Вы арендовали транспорт");

					if(VehicleID >= TaxiVehicle[0] && VehicleID <= TaxiVehicle[1])
					{
					    TaxiVehicleDriver[VehicleID] = playerid;
						SendInf(playerid, "Введите /staxi, чтобы начать работу");
						taxi_td_status(playerid, true);
					}
					if(VehicleID >= MechanicVehicle[0] && VehicleID <= MechanicVehicle[1])
					{
						MechanicFuelCostText[VehicleID] = CreateDynamic3DTextLabel("Бензин - {f0e86b}0 рублей/литр (0/2500)\n{FFFFFF}Ремонт - {f0e86b}от 2 рублей", COLOR_WHITE, 0, 0, 1.6, 50, INVALID_PLAYER_ID, VehicleID, 1);
						MechanicVehicleDriver[VehicleID] = playerid;
						SendInf(playerid, "Команды:");
						SendErr(playerid, "/loadfuel - залить бензин на заправке");
						SendErr(playerid, "/mrepair - предложить ремонт");
						SendErr(playerid, "/mfill - предложить заправить");
					}
				}
				else
				{
					SendErr(playerid, "У вас недостаточно денег");
					RemovePlayerFromVehicle(playerid);
				}
			}
			else RemovePlayerFromVehicle(playerid);
		}
	    case DIALOG_MINER_BUY_METALL:
			{
				if(response)
				{
					new count = strval(inputtext), newslot, fmt_str[128];
					new metall = GetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL, R_AMOUNT);

					if(IsNumeric(inputtext))
					{
						if(metall >= count)
						{
							if(1 <= count <= 50)
							{
								if(CheckMaxVes(playerid, 69, count, newslot) == 0)
								{
									new sum = count * 15;
									if(p_info[playerid][pCash] >= sum)
									{

										if(!mysql_errno())
										{
											SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL, R_AMOUNT, metall - count);
											UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL);

											PlayerItem1[playerid][newslot] = 69;
											PlayerItem2[playerid][newslot] += count;

											format(fmt_str, sizeof fmt_str, "Вы купили %d кг за %d рублей", count, count * 15);
											SendInf(playerid, fmt_str);

											return GiveMoney(playerid, -sum, "Покупка металла на шахте");
										}
										else SendErr(playerid, "Ошибка сохранения, повторите попытку {FF0000}(equ-code 12)");
									}
									else SendErr(playerid, "Недостаточно денег для покупки такого количества металла");
								}
								else SendErr(playerid, "Вы не можете носить с собой более 20 кг металла");
							}
							else SendErr(playerid, "Можно купить от 1 до 50 кг металла");
						}
						else SendErr(playerid, "На складе шахты нет такого количества металла");
					}
					ShowPlayerBuyMetalDialog(playerid);
				}
			}
			case DIALOG_TEMP_JOB_LOADER_START:
			{
				if(response)
				{
					if(GetPlayerTempJob(playerid) == TEMP_JOB_NONE)
					{
						SetPlayerSkin(playerid, GetTempJobInfo(TEMP_JOB_LOADER, TJ_SKIN)[p_info[playerid][pSex]-1]);
						SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_THIGH, 18635, A_OBJECT_BONE_RIGHT_THIGH, 0.2, -0.06, 0.1, 0.0, -90.0, 90.0, 1.0, 1.0, 1.0, 0);

						SetPlayerJobLoadItems(playerid, 0);
						SetPlayerTempJob(playerid, TEMP_JOB_LOADER);

						SetPlayerLoaderJobLoadCP(playerid);

						SendClientMessage(playerid, 0x3399FFFF, "Вы начали работу грузчика");
						SendClientMessage(playerid, 0x3399FFFF, "Точки доставки товаров помечены {FF0000}красными {3399FF}маркерами");
					}
				}
			}
			case DIALOG_TEMP_JOB_LOADER_END:
			{
				if(response)
				{
					EndPlayerTempJob(playerid, TEMP_JOB_LOADER);
				}
			}
			case DIALOG_TEMP_JOB_MINER_START:
			{
				if(response)
				{
					if(GetPlayerTempJob(playerid) == TEMP_JOB_NONE)
					{
						SetPlayerSkin(playerid, GetTempJobInfo(TEMP_JOB_MINER, TJ_SKIN)[p_info[playerid][pSex]-1]);
						SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, 18634, A_OBJECT_BONE_RIGHT_HAND, 0.07, 0.03, 0.04, 0.0, 270.0, 270.0, 1.5, 2.1, 1.8, 0);

						SetPlayerJobLoadItems(playerid, 0);
						SetPlayerTempJob(playerid, TEMP_JOB_MINER);

						SetPlayerTempJobState(playerid, TEMP_JOB_STATE_MINER_LOAD);
						SetPlayerMinerJobLoadCP(playerid);

						SendClientMessage(playerid, 0x3399FFFF, "Вы начали работу шахтера");
						SendClientMessage(playerid, 0x66CC00FF, "Ищите месторождения железной руды на территории шахты");
						SendClientMessage(playerid, 0x66CC00FF, "Добытое сырье относите на склад для переплавки");
					}
				}
			}
			case DIALOG_TEMP_JOB_MINER_END:
			{
				if(response)
				{
					EndPlayerTempJob(playerid, TEMP_JOB_MINER);
				}
			}
			case DIALOG_TEMP_JOB_FACTORY_TRUCKER:
			{
				if(response)
				{
					new job = GetPlayerTempJob(playerid);

					switch(job)
					{
						case TEMP_JOB_NONE:
						{
							new skin = GetTempJobInfo(TEMP_JOB_FACTORY_TRUCKER, TJ_SKIN)[p_info[playerid][pSex]-1];

							ClearAnimations(playerid);
							SetPlayerSkin(playerid, skin);

							if(p_info[playerid][pSex])
								SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HEAD, 18638, A_OBJECT_BONE_HEAD, 0.16, 0.02, 0.0, 0.0, 0.0, 0.0, 1.0, 1.1, 1.12, 0);

							SetPlayerJobLoadItems(playerid, 0);
							SetPlayerTempJob(playerid, TEMP_JOB_FACTORY_TRUCKER);
							SetPlayerTempJobState(playerid, TEMP_JOB_STATE_NONE);

							SendClientMessage(playerid, 0x3399FFFF, "Вы начали работу в службе доставки завода");

							SetPlayerData(playerid, P_IN_JOB, true);
						}
						case TEMP_JOB_FACTORY_TRUCKER:
						{
							EndPlayerJob(playerid);
						}
					}
				}
			}
			case DIALOG_TEMP_JOB_FACTORY:
			{
				if(response)
				{
					new job = GetPlayerTempJob(playerid);

					switch(job)
					{
						case TEMP_JOB_NONE:
						{
							new skin = GetTempJobInfo(TEMP_JOB_FACTORY, TJ_SKIN)[p_info[playerid][pSex]-1];
							if(!p_info[playerid][pSex])
							{
								skin += random(2);
							}

							ClearAnimations(playerid);
							SetPlayerSkin(playerid, skin);
							SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HEAD, 18638, A_OBJECT_BONE_HEAD, 0.16, 0.02, 0.0, 0.0, 0.0, 0.0, 1.0, 1.1, 1.12, 0);

							TogglePlayerFactoryCP(playerid, true);
							SetPlayerData(playerid, P_JOB_WAGE, 0);

							SetPlayerJobLoadItems(playerid, 0);
							SetPlayerTempJob(playerid, TEMP_JOB_FACTORY);

							SetPlayerTempJobState(playerid, TEMP_JOB_STATE_FACTORY_TAKE_MET);

							SendClientMessage(playerid, 0x3399FFFF, "Вы начали работу в производственном цеху завода");

							DeletePVar(playerid, "factory_skill");
							DeletePVar(playerid, "factory_bad_prods");
							DeletePVar(playerid, "factory_take_metall");
						}
						case TEMP_JOB_FACTORY:
						{
							EndPlayerTempJob(playerid, TEMP_JOB_FACTORY);
						}
					}
				}
			}
			case DIALOG_TEMP_JOB_LUMBERJACK_ST:
			{
				if(response)
				{
					if(GetPlayerTempJob(playerid) == TEMP_JOB_NONE)
					{
						SetPlayerSkin(playerid, GetTempJobInfo(TEMP_JOB_MINER, TJ_SKIN)[p_info[playerid][pSex]-1]);
						SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, 326, A_OBJECT_BONE_RIGHT_HAND, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0);

						SetPlayerJobLoadItems(playerid, 0);
						SetPlayerTempJob(playerid, TEMP_JOB_LUMBERJACK);

						SetPlayerTempJobState(playerid, TEMP_JOB_STATE_LUMBERJACK_CHOP);
						SetPlayerLumberJackChopCP(playerid);

						SendClientMessage(playerid, 0x3399FFFF, "Вы начали работу лесоруба");
						SendClientMessage(playerid, 0x3399FFFF, "Точки добычи дерева помечены {FF0000}красными {3399FF}маркерами");
					}
				}
			}
			case DIALOG_TEMP_JOB_LUMBERJACK_END:
			{
				if(response)
				{
					EndPlayerTempJob(playerid, TEMP_JOB_LUMBERJACK);
				}
			}
	    case 1132:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0:
				{
					if(IsAMafia(playerid)) return SendErr(playerid, "Вы должны носить одежду вашей организации");
					
					GetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);
					Virt_ar[playerid] = GetPlayerVirtualWorld(playerid);
					Int_ar[playerid] = GetPlayerInterior(playerid);
					
					SendClientMessage(playerid, C_BLUE, "Выберите себе подходящую одежду, после выбора нажмите 'ВЫБРАТЬ', для отмены нажмите 'ESC'");
					SendClientMessage(playerid, C_BLUE, "Нажав 'ОТМЕНИТЬ' Вы продадите одеждку, которая весит на одной из полок");
					SendClientMessage(playerid, C_BLUE, "Чтобы просмотреть одежду, используйте стрелочки на экране");
					
					SetPlayerVirtualWorld(playerid, playerid+1);

					SetPlayerInterior(playerid,9);
					SetPlayerPos(playerid,-1774.4742,1768.3673,2377.4409);
					SetPlayerFacingAngle(playerid, 70.00);
					SetPlayerCameraPos(playerid, -1778.4558,1768.7147,2377.4160);
					SetPlayerCameraLookAt(playerid, -1774.4904,1768.7726,2377.4409);
					
			    	TogglePlayerControllable(playerid, 0);
			    	SetPVarInt(playerid, "ClosetSkinNext", 0);
			    	
			    	for(new i = 0; i < 9; i++)
					{
			  			TextDrawShowForPlayer(playerid, TD_Clothes[i]);
					}
					SelectTextDraw(playerid, COLOR_ORANGE);
					STRING_GLOBAL[0] = EOS;

					SetPlayerSkin(playerid, ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "ПОЛКА %d", GetPVarInt(playerid, "ClosetSkinNext")+1);
					PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], STRING_GLOBAL);

					PlayerTextDrawShow(playerid,PTD_Clothes[playerid]);
			    	
					SetPVarInt(playerid, "EnterChooseSkin", 2);
				}
				case 1:
				{
					if(!p_info[playerid][pMember]) return SendErr(playerid, "У вас нет рабочей одежды");
					
					GetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);
					Virt_ar[playerid] = GetPlayerVirtualWorld(playerid);
					Int_ar[playerid] = GetPlayerInterior(playerid);
					
					SendClientMessage(playerid, C_BLUE, "Выберите себе подходящую одежду, после выбора нажмите 'ВЫБРАТЬ', для отмены нажмите 'ESC'");
					SendClientMessage(playerid, C_BLUE, "Нажав 'ОТМЕНИТЬ' Вы продадите одеждку, которая весит на одной из полок");
					SendClientMessage(playerid, C_BLUE, "Чтобы просмотреть одежду, используйте стрелочки на экране");
     				
     				SetPlayerVirtualWorld(playerid, playerid+1);

					SetPlayerInterior(playerid,9);
					SetPlayerPos(playerid,-1774.4742,1768.3673,2377.4409);
					SetPlayerFacingAngle(playerid, 70.00);
					SetPlayerCameraPos(playerid, -1778.4558,1768.7147,2377.4160);
					SetPlayerCameraLookAt(playerid, -1774.4904,1768.7726,2377.4409);
     				
			    	TogglePlayerControllable(playerid, 0);
			    	SetPVarInt(playerid, "ClosetWorkSkinNext", 0);
			 		
					for(new i = 0; i < 9; i++)
					{
			  			TextDrawShowForPlayer(playerid, TD_Clothes[i]);
					}

					SelectTextDraw(playerid, COLOR_ORANGE);
					STRING_GLOBAL[0] = EOS;

					SetPlayerSkin(playerid, Fraction_Skin[p_info[playerid][pMember]][GetPVarInt(playerid, "ClosetWorkSkinNext")]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "ПОЛКА %d", GetPVarInt(playerid, "ClosetWorkSkinNext")+1);
					PlayerTextDrawSetString(playerid, PTD_Clothes[playerid], STRING_GLOBAL);

					PlayerTextDrawShow(playerid,PTD_Clothes[playerid]);
					
				    SetPVarInt(playerid, "EnterChooseSkin", 3);
				}
		    }
		}
		case 1133:
		{
		    if(response)
			{
			    if(ClosetSkins[playerid][0] == ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")])
			 	return ShowPlayerDialogEx(playerid, 1133, DIALOG_STYLE_MSGBOX, "{ebec86}>> Продажа одежды", "{FFFFFF}Вы действительно хотите продать эту одежду?\nСтоимость продажи: {7FB151}100$\n\n{AFAFAF}* Нельзя продать последнюю одежду", "Продать", "Выйти");

				ClosetSkins[playerid][GetPVarInt(playerid, "ClosetSkinNext")] = 0;
			    GiveMoney(playerid, 100, "Продажа одежды");
				SetPlayerSkin(playerid, ClosetSkins[playerid][0]);

			   	MysqlUpdatePlayerInt(playerid, "Skin", ClosetSkins[playerid][0]);
	  		    MysqlUpdatePlayerInt(playerid, "Skin2", ClosetSkins[playerid][1]);
	  		    MysqlUpdatePlayerInt(playerid, "Skin3", ClosetSkins[playerid][2]);
	  		    MysqlUpdatePlayerInt(playerid, "Skin4", ClosetSkins[playerid][3]);
	  		    MysqlUpdatePlayerInt(playerid, "Skin5", ClosetSkins[playerid][4]);
	  		    SetPVarInt(playerid, "ClosetSkinNext", -1);
	  		    DeletePVar(playerid, "EnterChooseSkin");
	  		    
				for(new i = 0; i < 9; i++)
				{
				    TextDrawHideForPlayer(playerid, TD_Clothes[i]);
				}
				PlayerTextDrawHide(playerid, PTD_Clothes[playerid]);
				CancelSelectTextDraw(playerid);
				
				SetPlayerPos(playerid, X_ar[playerid], Y_ar[playerid], Z_ar[playerid]);
				
				SetPlayerVirtualWorld(playerid, Virt_ar[playerid]);
				SetPlayerInterior(playerid, Int_ar[playerid]);
			}
		}
	    case 11222:
	        {
	            if(!response) return 1;
	            if(MafiaBattle[0][3] != 0) return SendErr(playerid, "В данный момент происходит война за бизнес");
	            konf_time = 600;
                konf_pay = 0;
	            
	            new Float:fX, Float:fY, Float:fZ;
	            GetPlayerPos(playerid, fX, fY, fZ);
	            
	            KonfiskatZoneID = GangZoneCreate(fX+100, fY+100, fX-100, fY-100);
	            GangZoneShowForAll(KonfiskatZoneID, 0xFF453099);
	            
	            KonfiskatZone[0] = fX+100;
			    KonfiskatZone[1] = fY+100;
			    KonfiskatZone[2] = fX-100;
			    KonfiskatZone[3] = fY-100;
			    
				SendAdminMessage(COLOR_YELLOW, "* Армия начала конфискацию общака одной из ОПГ");
	            
	            foreach(new i: Player)
	            {
	                if(IsAArmy(i))
	                {
	                    SendInf(i, "Конфискация началась, место отмечено на карте");
	                    TextDrawShowForPlayer(i, txdw2);
	                }
	                if(IsAMafia(i))
	                {
	                    SendInf(i, "Армия начала конфискацию. Убейте всех военных и конфискация остановится");
	                    SendInf(i, "Место конфискации отмечено на карте");
	                    TextDrawShowForPlayer(i, txdw2);
	                }
				}
	        }
	    case DIALOG_BANK:
			{
				if(response)
				{
					switch(listitem + 1)
					{
						case 1:
						{
							ShowPlayerBankAccounts(playerid);
						}
						case 2:
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_BANK_CREATE_ACCOUNT, DIALOG_STYLE_INPUT,
								"{ebec86}>> Создание нового счета",
								"{FFFFFF}Введите название для нового счета.\n"\
								"Максимальная длина 20 символов:",
								"Ок", "Отмена"
							);
						}
					}
				}
			}
			case DIALOG_BANK_ACCOUNTS:
			{
				if(response)
				{
					switch(listitem)
					{
						case 0: ShowPlayerATMDialog(playerid);
						case 1..(MAX_BANK_ACCOUNTS):
						{
							new accountid = GetPlayerListitemValue(playerid, listitem - 1);
							if(IsValidBankAccount(playerid, accountid))
							{
								SetPlayerUseListitem(playerid, accountid);
								ShowPlayerDialogEx
								(
									playerid, DIALOG_BANK_ACCOUNT_LOGIN, DIALOG_STYLE_PASSWORD,
									"{ebec86}>> Авторизация",
									"{FFFFFF}Введите PIN-код счета:",
									"Ввести", "Отмена"
								);
							}
						}
					}
				}
				else ShowPlayerBankDialog(playerid);
			}
			case DIALOG_BANK_ACCOUNT_LOGIN:
			{
				if(response)
				{
					new accountid = GetPlayerUseListitem(playerid);
					if(IsValidBankAccount(playerid, accountid))
					{
						new len = strlen(inputtext);
						new pin_len = strlen(GetBankAccountData(playerid, accountid, BA_PIN_CODE));
						if(!strcmp(GetBankAccountData(playerid, accountid, BA_PIN_CODE), inputtext, false) && pin_len && len)
						{
							ShowPlayerBankAccountOperation(playerid);
						}
						else
						{
							ShowPlayerDialogEx
							(
								playerid, D_NULL, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Ошибка PIN-кода",
								"{FFFFFF}Вы допустили ошибку при вводе PIN-кода",
								"Закрыть", ""
							);
						}
					}
				}
			}
			case DIALOG_BANK_ACCOUNT_OPERATION:
			{
				if(response)
				{
					new accountid = GetPlayerUseListitem(playerid);
					if(IsValidBankAccount(playerid, accountid))
					{
						switch(listitem + 1)
						{
							case 1: // Информация о счете
							{
								UpdateBankAccountData(playerid, accountid);

								new fmt_str[168];
								format
								(
									fmt_str, sizeof fmt_str,
									"{FFFFFF}Номер счета:\t\t%d\n"\
									"Наименование:\t\"%s\"\n"\
									"Баланс:\t\t{f0e86b}%d{FFFFFF} рублей",
									GetBankAccountData(playerid, accountid, BA_ID),
									GetBankAccountData(playerid, accountid, BA_NAME),
									GetBankAccountData(playerid, accountid, BA_BALANCE)
								);
								ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_INFO, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация", fmt_str, "Вернуться", "");
							}
							case 2: // История операций
							{
								ShowPlayerBankAccountLog(playerid, GetBankAccountData(playerid, accountid, BA_ID));
							}
							case 3: // Снять деньги
							{
								ShowPlayerDialogEx
								(
									playerid, DIALOG_BANK_ACCOUNT_TAKE_MONEY, DIALOG_STYLE_INPUT,
									"{ebec86}>> Снять деньги",
									"{FFFFFF}Укажите сумму:",
									"Снять", "Отмена"
								);
							}
							case 4: // Положить деньги
							{
								ShowPlayerDialogEx
								(
									playerid, DIALOG_BANK_ACCOUNT_PUT_MONEY, DIALOG_STYLE_INPUT,
									"{ebec86}>> Положить деньги",
									"{FFFFFF}Укажите сумму:",
									"Положить", "Отмена"
								);
							}
							case 5: // Перевести на другой счет
							{
								if(p_info[playerid][pLevel] >= 5)
								{
									ShowPlayerDialogEx
									(
										playerid, DIALOG_BANK_ACCOUNT_TRANSFER_1, DIALOG_STYLE_INPUT,
										"{ebec86}>> Перевод средств",
										"{FFFFFF}Укажите номер счета, на который\n"\
										"хотите осуществить перевод:",
										"Далее", "Отмена"
									);
								}
								else SendErr(playerid, "Перевод денег доступен только со 5 уровня");
							}
							case 6: // Переименовать счет
							{
								ShowPlayerDialogEx
								(
									playerid, DIALOG_BANK_ACCOUNT_CHANGE_NAME, DIALOG_STYLE_INPUT,
									"{ebec86}>> Переименование счета",
									"{FFFFFF}Введите новое название для этого счета.\n"\
									"Максимальная длина 20 символов:",
									"Ок", "Отмена"
								);
							}
							case 7: // Изменить PIN-код
							{
								ShowPlayerDialogEx
								(
									playerid, DIALOG_BANK_ACCOUNT_CHANGE_PIN, DIALOG_STYLE_INPUT,
									"{ebec86}>> Изменение PIN-кода",
									"{FFFFFF}Введите новый PIN-код.\n"\
									"Длина от 4 до 8 цифр:",
									"Ок", "Отмена"
								);
							}
						}
					}
				}
				else ShowPlayerBankDialog(playerid);
			}
			case DIALOG_BANK_ACCOUNT_INFO:
			{
				ShowPlayerBankAccountOperation(playerid);
			}
			case DIALOG_BANK_ACCOUNT_TAKE_MONEY:
			{
				new accountid = GetPlayerUseListitem(playerid);
				if(response)
				{
					if(IsValidBankAccount(playerid, accountid))
					{
						new take_sum = strval(inputtext);
						if(take_sum > 0 && IsNumeric(inputtext))
						{
							UpdateBankAccountData(playerid, accountid);

							new fmt_str[185];
							new balance = GetBankAccountData(playerid, accountid, BA_BALANCE);

							if(balance >= take_sum)
							{
        						format(fmt_str, sizeof fmt_str, "UPDATE bank_accounts SET balance=balance - %d WHERE  id=%d", take_sum, GetBankAccountData(playerid, accountid, BA_ID));
								mysql_query(dbHandle, fmt_str, false);

								if(!mysql_errno())
								{
									GiveMoney(playerid, take_sum, "Снятие с банк. счета (банк)");
									SetBankAccountData(playerid, accountid, BA_BALANCE, balance - take_sum);

									format(fmt_str, sizeof fmt_str, "- Снятие наличных %d руб", take_sum);
									BankAccountLog(playerid, GetBankAccountData(playerid, accountid, BA_ID), fmt_str);

									format
									(
										fmt_str, sizeof fmt_str,
										"{FFFFFF}Счет:\t\t№%d\n"\
										"Вы сняли:\t{f0e86b}%d{FFFFFF} рублей\n"\
										"{FFFFFF}Остаток:\t%d рублей",
										GetBankAccountData(playerid, accountid, BA_ID),
										take_sum,
										GetBankAccountData(playerid, accountid, BA_BALANCE)
									);
									return ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_INFO, DIALOG_STYLE_MSGBOX, "{ebec86}>> Операция завершена успешно", fmt_str, "Вернуться", "");
								}
								else SendErr(playerid,  "Ошибка сохранения, повторите попытку {FF0000}(equ-code 09)");
							}
							else
							{
								format(fmt_str, sizeof fmt_str, "Недостаточно средств. Текущий баланс счета №%d: {f0e86b}%d{FFFFFF} рублей", GetBankAccountData(playerid, accountid, BA_ID), balance);
								SendClientMessage(playerid, 0xFFFFFFFF, fmt_str);
							}
						}

						ShowPlayerDialogEx
						(
							playerid, DIALOG_BANK_ACCOUNT_TAKE_MONEY, DIALOG_STYLE_INPUT,
							"{ebec86}>> Снять деньги",
							"{FFFFFF}Укажите сумму:",
							"Снять", "Отмена"
						);
					}
				}
				else ShowPlayerBankAccountOperation(playerid);
			}
			case DIALOG_BANK_ACCOUNT_PUT_MONEY:
			{
				new accountid = GetPlayerUseListitem(playerid);
				if(response)
				{
					if(IsValidBankAccount(playerid, accountid))
					{
						new put_sum = strval(inputtext);
						if(put_sum > 0 && IsNumeric(inputtext))
						{
							UpdateBankAccountData(playerid, accountid);

							new fmt_str[185];
							new money = p_info[playerid][pCash];
							new balance = GetBankAccountData(playerid, accountid, BA_BALANCE);
							if(balance + put_sum >= MONEY_LIMIT) return SendErr(playerid, "Вы не можете положить более 2 миллиардов");
							if(money >= put_sum)
							{
								format(fmt_str, sizeof fmt_str, "UPDATE bank_accounts SET balance=balance + %d WHERE  id=%d", put_sum, GetBankAccountData(playerid, accountid, BA_ID));
								mysql_query(dbHandle, fmt_str, false);

								if(!mysql_errno())
								{
									GiveMoney(playerid, -put_sum, "Пополнение банк. счета (банк)");
									SetBankAccountData(playerid, accountid, BA_BALANCE, balance + put_sum);

									format(fmt_str, sizeof fmt_str, "+ Пополнение на сумму %d руб", put_sum);
									BankAccountLog(playerid, GetBankAccountData(playerid, accountid, BA_ID), fmt_str);

									format
									(
										fmt_str, sizeof fmt_str,
										"{FFFFFF}Счет:\t\t\t№%d\n"\
										"Вы положили:\t\t{f0e86b}%d{FFFFFF} рублей\n"\
										"Итоговый баланс:\t%d рублей",
										GetBankAccountData(playerid, accountid, BA_ID),
										put_sum,
										GetBankAccountData(playerid, accountid, BA_BALANCE)
									);
									return ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_INFO, DIALOG_STYLE_MSGBOX, "{ebec86}>> Операция завершена успешно", fmt_str, "Вернуться", "");
								}
								else SendErr(playerid,  "Ошибка сохранения, повторите попытку {FF0000}(equ-code 09)");
							}
							else SendClientMessage(playerid, 0xFFFFFFFF, "Недостаточно средств");
						}

						ShowPlayerDialogEx
						(
							playerid, DIALOG_BANK_ACCOUNT_PUT_MONEY, DIALOG_STYLE_INPUT,
							"{ebec86}>> Положить деньги",
							"{FFFFFF}Укажите сумму:",
							"Положить", "Отмена"
						);
					}
				}
				else ShowPlayerBankAccountOperation(playerid);
			}
			case DIALOG_BANK_ACCOUNT_TRANSFER_1:
			{
				new accountid = GetPlayerUseListitem(playerid);
				if(response)
				{
					if(IsValidBankAccount(playerid, accountid))
					{
						new transfer_id = strval(inputtext);
						if(transfer_id > 0 && IsNumeric(inputtext))
						{
							new fmt_str[64 + 1];
							new Cache: result;
							new rows;

							format(fmt_str, sizeof fmt_str, "SELECT id,name FROM bank_accounts WHERE id=%d LIMIT 1", transfer_id);
							result = mysql_query(dbHandle, fmt_str);

							if((rows = cache_num_rows()))
							{
								SetPlayerBankTransfer(playerid, BT_ID, cache_get_row_int(0, 0));
								cache_get_row(0, 1, g_player_bank_transfer[playerid][BT_NAME], dbHandle, 21);
							}
							cache_delete(result);

							if(rows)
							{
								return ShowPlayerBankAccountTransfer(playerid, accountid);
							}
							else SendErr(playerid,  "Счета с таким номером не существует");
						}

						ShowPlayerDialogEx
						(
							playerid, DIALOG_BANK_ACCOUNT_TRANSFER_1, DIALOG_STYLE_INPUT,
							"{ebec86}>> Перевод средств",
							"{FFFFFF}Укажите номер счета, на который\n"\
							"хотите осуществить перевод:",
							"Далее", "Отмена"
						);
					}
				}
				else ShowPlayerBankAccountOperation(playerid);
			}
			case DIALOG_BANK_ACCOUNT_TRANSFER_2:
			{
				new accountid = GetPlayerUseListitem(playerid);
				if(response)
				{
					if(IsValidBankAccount(playerid, accountid))
					{
						new transfer_sum = strval(inputtext);
						new transfer_id = GetPlayerBankTransfer(playerid, BT_ID);

						if(transfer_sum > 0 && IsNumeric(inputtext))
						{
							UpdateBankAccountData(playerid, accountid);

							new balance = GetBankAccountData(playerid, accountid, BA_BALANCE);
							if(balance >= transfer_sum)
							{
								new fmt_str[160];

								if(GetBankAccountData(playerid, accountid, BA_ID) != transfer_id)
								{
									format(fmt_str, sizeof fmt_str, "UPDATE bank_accounts SET balance=balance-%d WHERE id=%d LIMIT 1", transfer_sum, GetBankAccountData(playerid, accountid, BA_ID));
									mysql_query(dbHandle, fmt_str, false);

									format(fmt_str, sizeof fmt_str, "UPDATE bank_accounts SET balance=balance+%d WHERE id=%d LIMIT 1", transfer_sum, transfer_id);
									mysql_query(dbHandle, fmt_str, false);

									SetBankAccountData(playerid, accountid, BA_BALANCE, balance - transfer_sum);
								}
								format(fmt_str, sizeof fmt_str, "- Перевод %d рублей на счет №%d", transfer_sum, transfer_id);
								BankAccountLog(playerid, GetBankAccountData(playerid, accountid, BA_ID), fmt_str);

								format(fmt_str, sizeof fmt_str, "+ Перевод %d рублей со счета №%d", transfer_sum, GetBankAccountData(playerid, accountid, BA_ID));
								BankAccountLog(playerid, transfer_id, fmt_str);

								SetPlayerBankTransfer(playerid, BT_ID, 0);

								format
								(
									fmt_str, sizeof fmt_str,
									"{FFFFFF}Со счета:\t\t\t№%d\n"\
									"На счет:\t\t\t№%d\n"\
									"Cумма перевода:\t\t{f0e86b}%d{FFFFFF} рублей\n"\
									"Остаток на Вашем счете:\t%d рублей",
									GetBankAccountData(playerid, accountid, BA_ID),
									transfer_id,
									transfer_sum,
									GetBankAccountData(playerid, accountid, BA_BALANCE)
								);
								ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_INFO, DIALOG_STYLE_MSGBOX, "{ebec86}>> Перевод успешно выполнен", fmt_str, "Вернуться", "");
							}
							else
							{
								SendErr(playerid,  "На счету недостаточно средств для перевода");
								ShowPlayerBankAccountTransfer(playerid, accountid);
							}
						}
						else ShowPlayerBankAccountTransfer(playerid, accountid);
					}
				}
				else ShowPlayerBankAccountOperation(playerid);
			}
			case DIALOG_BANK_ACCOUNT_CHANGE_NAME:
			{
				new accountid = GetPlayerUseListitem(playerid);
				if(response)
				{
					if(IsValidBankAccount(playerid, accountid))
					{
						new len = strlen(inputtext);

						if(3 <= len <= 20)
						{
							if(!IsABadBankAccountName(inputtext))
							{
								new fmt_str[128];

								mysql_format(dbHandle, fmt_str, sizeof fmt_str, "UPDATE bank_accounts SET name='%s' WHERE id=%d LIMIT 1", inputtext, GetBankAccountData(playerid, accountid, BA_ID));
								mysql_query(dbHandle, fmt_str, false);

								if(!mysql_errno())
								{
									format(g_bank_account[playerid][accountid][BA_NAME], 21, "%s", inputtext);

									format(fmt_str, sizeof fmt_str, "* Переименование счета на \"%s\"", inputtext);
									BankAccountLog(playerid, GetBankAccountData(playerid, accountid, BA_ID), fmt_str);

									format
									(
										fmt_str, sizeof fmt_str,
										"{FFFFFF}Счет успешно переименован.\n"\
										"Теперь он будет доступен под названием \"{f0e86b}%s{FFFFFF}\"",
										GetBankAccountData(playerid, accountid, BA_NAME)
									);
									return ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_INFO, DIALOG_STYLE_MSGBOX, "{ebec86}>> Завершение", fmt_str, "Вернуться", "");
								}
								else SendErr(playerid,  "Ошибка сохранения, повторите попытку {FF0000}(equ-code 10)");
							}
							else
							{
								SendErr(playerid,  "Недопустимые символы в новом названии");
								SendErr(playerid,  "Можно использовать {ebec86}русские {AFAFAF}и {ebec86}английские {AFAFAF}буквы, а также {ebec86}цифры");
							}
						}
						else SendErr(playerid,  "Длина названия счета может быть от {ebec86}3 до 20 {AFAFAF}символов");

						ShowPlayerDialogEx
						(
							playerid, DIALOG_BANK_ACCOUNT_CHANGE_NAME, DIALOG_STYLE_INPUT,
							"{ebec86}>> Переименование счета",
							"{FFFFFF}Введите новое название для этого счета.\n"\
							"Максимальная длина 20 символов:",
							"Ок", "Отмена"
						);
					}
				}
				else ShowPlayerBankAccountOperation(playerid);
			}
			case DIALOG_BANK_ACCOUNT_CHANGE_PIN:
			{
				new accountid = GetPlayerUseListitem(playerid);
				if(response)
				{
					if(IsValidBankAccount(playerid, accountid))
					{
						new len = strlen(inputtext);

						if(4 <= len <= 8 && IsNumeric(inputtext))
						{
							new fmt_str[128];

							mysql_format(dbHandle, fmt_str, sizeof fmt_str, "UPDATE bank_accounts SET pin='%e' WHERE id=%d LIMIT 1", inputtext, GetBankAccountData(playerid, accountid, BA_ID));
							mysql_query(dbHandle, fmt_str, false);

							if(!mysql_errno())
							{
								format(g_bank_account[playerid][accountid][BA_PIN_CODE], 9, "%s", inputtext);
								BankAccountLog(playerid, GetBankAccountData(playerid, accountid, BA_ID), "* Изменение PIN-кода");

								format
								(
									fmt_str, sizeof fmt_str,
									"{FFFFFF}PIN-код успешно изменен.\n"\
									"Рекомендуем сделать скрин (F8) чтобы не забыть его: {f0e86b}%s",
									GetBankAccountData(playerid, accountid, BA_PIN_CODE)
								);
								return ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_INFO, DIALOG_STYLE_MSGBOX, "{ebec86}>> Изменение PIN", fmt_str, "Вернуться", "");
							}
							else SendErr(playerid,  "Ошибка сохранения, повторите попытку {FF0000}(equ-code 10)");
						}

						ShowPlayerDialogEx
						(
							playerid, DIALOG_BANK_ACCOUNT_CHANGE_PIN, DIALOG_STYLE_INPUT,
							"{ebec86}>> Изменение PIN-кода",
							"{FFFFFF}Введите новый PIN-код.\n"\
							"Длина от 4 до 8 цифр:",
							"Ок", "Отмена"
						);
					}
				}
				else ShowPlayerBankAccountOperation(playerid);
			}
			case DIALOG_BANK_CREATE_ACCOUNT:
			{
				if(response)
				{
					new len = strlen(inputtext);
					if(3 <= len <= 20)
					{
						if(!IsABadBankAccountName(inputtext))
						{
							new query[128];
							new Cache: result;
							new total_accounts;

							format(query, sizeof query, "SELECT COUNT(*) FROM bank_accounts WHERE uid=%d", p_info[playerid][pID]);
							result = mysql_query(dbHandle, query);

							total_accounts = cache_get_row_int(0, 0);
							cache_delete(result);

							if(total_accounts < MAX_BANK_ACCOUNTS)
							{
								mysql_format(dbHandle, query, sizeof query, "INSERT INTO bank_accounts (uid,name,reg_time) VALUES (%d,'%s',%d)", p_info[playerid][pID], inputtext, gettime());
								mysql_query(dbHandle, query, false);

								if(!mysql_errno())
								{
									ShowPlayerDialogEx
									(
										playerid, DIALOG_BANK_CREATED_ACCOUNT, DIALOG_STYLE_MSGBOX,
										"{ebec86}>> Счет создан",
										"{FFFFFF}Вы создали новый счет в банке.\n\n"\
										"Для доступа к нему используйте PIN-код {f0e86b}0000{FFFFFF}. После входа\n"\
										"настоятельно рекомендуем изменить его на более сложный.\n"\
										"Это поможет защитить счет от несанкционированного доступа.",
										"Готово", ""
									);
								}
							}
							else ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Лимит счетов", "{FFFFFF}Можно создать не более десяти банковских счетов", "Ок", "");
						}
						else
						{
							ShowPlayerDialogEx
							(
								playerid, D_NULL, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Ошибка",
								"{FFFFFF}Операция запрещена. Недопустимые символы в названии счета\n"\
								"Можно использовать {ebec86}русские {FFFFFF}и {ebec86}английские {FFFFFF}буквы, а также {ebec86}цифры",
								"Выход", ""
							);
						}
					}
					else
					{
						ShowPlayerDialogEx
						(
							playerid, D_NULL, DIALOG_STYLE_MSGBOX,
							"{ebec86}>> Ошибка",
							"{FFFFFF}Длина названия счета может быть от {ebec86}3 до 20 {FFFFFF}символов",
							"Закрыть", ""
						);
					}
				}
				else ShowPlayerBankDialog(playerid);
			}
			case DIALOG_BANK_CREATED_ACCOUNT:
			{
				ShowPlayerBankDialog(playerid);
			}
	    case dMakeGun:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "makegunid", listitem);
			new needgun = gGunAmount[listitem];
			new bool:noneedgun;
			DeletePVar(playerid,"noneedgun");
			for(new i; i < 12; i++)
			{
				new weapid,ammot;
				GetPlayerWeaponData(playerid,i,weapid,ammot);
				if(weapid == gGunID[listitem]) { noneedgun = true; SetPVarInt(playerid,"noneedgun",1); break; }
			}
			
			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==69){ok=s;break;}
			}
			
			if(PlayerItem2[playerid][ok] < needgun && !noneedgun)
			{
				SCMF(playerid, COLOR_GREY, "* Вам нужно %d металла для сборки данного вида оружия", needgun);
				ShowMakeGunList(playerid);
				return 1;
			}
			
			new gunid = GetPVarInt(playerid,"makegunid");
		    new newslot;
			new weaponid = gGunID[gunid];
			if(CheckMaxVes(playerid, weaponid, 1, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			
			if(PlayerItem2[playerid][ok] >= needgun)
			{
				if(PlayerItem2[playerid][ok] == 0)
				{
					PlayerItem1[playerid][ok] = 0;
				}
				PlayerItem2[playerid][ok] -= needgun;
				SaveItem(playerid, ok);
			}
			
			ShowPlayerDialogEx(playerid, dMakeGun2, DIALOG_STYLE_MSGBOX, "{ebec86}>> Инфорация о сборке", "{FFFFFF}Вы успешно собрали оружие. Теперь оно у Вас в инвентаре. (/inv)", "Принять", "");
			return 1;
		}
		case dMakeGun2:
		{
		    if(!response)
		    {
		        new gunid = GetPVarInt(playerid,"makegunid");
		    	new newslot;
				new weaponid = gGunID[gunid];
				if(CheckMaxVes(playerid, weaponid, 1, newslot) == 1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
		        PlayerItem1[playerid][newslot] = weaponid-3;
				PlayerItem2[playerid][newslot] += 1;
				SaveItem(playerid, newslot);
				
				DeletePVar(playerid, "gGunID");
				return 1;
		    }
		    new gunid = GetPVarInt(playerid,"makegunid");
		    new newslot;
			new weaponid = gGunID[gunid];
			if(CheckMaxVes(playerid, weaponid, 1, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
	       	PlayerItem1[playerid][newslot] = weaponid-3;
			PlayerItem2[playerid][newslot] += 1;
			SaveItem(playerid, newslot);
			
			DeletePVar(playerid, "gGunID");
			return 1;
		}
	    case 15777:
	    {
	        if ( ! response ) return 1 ;
	        new pvar_string [ 32 ] ;
			ShowPlayerDialogEx(playerid, 15778, 2, "{ebec86}>> Игрокие, купившие донат-услуги", "1. Обнулить переменную лифта\n2. Обнулить переменную ворот\n3. Обнулить переменную авто", "Выбор", "Отмена");
            format ( pvar_string, 32, "vline_hdonate_%d", listitem ) ;
			hdonate_player[playerid] = GetPVarInt ( playerid, pvar_string ) ;
			return 1 ;
	    }
	    case 15778:
	    {
	        if ( ! response ) return 1 ;
			p_info[hdonate_player[playerid]][pDonateH][listitem] = 0;
			if(listitem == 0) MysqlUpdatePlayerInt(hdonate_player[playerid], "pDonateH_0", p_info[hdonate_player[playerid]][pDonateH][listitem]);
			if(listitem == 1) MysqlUpdatePlayerInt(hdonate_player[playerid], "pDonateH_1", p_info[hdonate_player[playerid]][pDonateH][listitem]);
			if(listitem == 2) MysqlUpdatePlayerInt(hdonate_player[playerid], "pDonateH_2", p_info[hdonate_player[playerid]][pDonateH][listitem]);
	    }
	    case dTowCar:
		{
			if ( ! response ) return 1 ;
			new pvar_string [ 10 ] ;
			if ( GetMoney(playerid) < 1000 ) return SendErr(playerid, "У вас недостаточно денег");
			GiveMoney ( playerid, -1000, "Респавн авто /towcar" ) ;
			format ( pvar_string, 10, "vline_%d", listitem ) ;
			new v_id = GetPVarInt ( playerid, pvar_string ) ;
			AC_SetVehicleToRespawn ( v_id ) ;
			IsLocked[v_id] = true;
			CarDoorsEx(v_id, 1);
			SendInf ( playerid, "Машина возвращена к дому" ) ;
			
			for ( new i = 0 ; i < 10 ; i ++ )
			{
				format ( pvar_string, 10, "vline_%d", i ) ;
				DeletePVar ( playerid, pvar_string ) ;
			}
			return 1 ;
		}
	    case 2299:
		{
			if (!response)
			{
			    DeletePVar(playerid, "GetTypeLogs");
				return 0;
			}
			switch(listitem)
			{
			    case 0:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '0' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 0);
			    }
			    case 1:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '1' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 1);
			    }
			    case 2:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '2' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 2);
			    }
			    case 3:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '3' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 3);
			    }
			    case 4:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '4' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 4);
			    }
			    case 5:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '6' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 6);
			    }
			    case 6:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '7' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 7);
			    }
			    case 7:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '8' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 8);
			    }
			    case 8:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '9' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 9);
			    }
			    case 9:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '10' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 10);
			    }
			    case 10:
			    {
			        if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "Данный раздел вам недоступен");
					ShowPlayerDialogEx(playerid, 2242, 2, "{ebec86}>> Внутриигровое логирование", "1. Правительство\n2. ГИБДД\n3. ГУВД\n4. ФСБ\n5. Больница\n6. Автошкола\n7. Южная ОПГ\n8. Арзамасская ОПГ\n9. Армия\n10. Лыткаринская ОПГ\n11. Батыревская ОПГ\n12. RECORD FM\n13. Спецназ", "Выбрать", "Выйти");
			    }
			    case 11:
			    {
			        if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "Данный раздел вам недоступен");
					ShowPlayerDialogEx(playerid, 2231, 2, "{ebec86}>> Внутриигровое логирование", "1. Правительство\n2. ГИБДД\n3. ГУВД\n4. ФСБ\n5. Больница\n6. Автошкола\n7. Южная ОПГ\n8. Арзамасская ОПГ\n9. Армия\n10. Лыткаринская ОПГ\n11. Батыревская ОПГ\n12. RECORD FM\n13. Спецназ", "Выбрать", "Выйти");
			    }
			    case 12:
			    {
			        if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "Данный раздел вам недоступен");
			        ShowPlayerDialogEx(playerid, 2230, 2, "{ebec86}>> Внутриигровое логирование", "1. Правительство\n2. ГИБДД\n3. ГУВД\n4. ФСБ\n5. Больница\n6. Автошкола\n7. Южная ОПГ\n8. Арзамасская ОПГ\n9. Армия\n10. Лыткаринская ОПГ\n11. Батыревская ОПГ\n12. RECORD FM\n13. Спецназ", "Выбрать", "Выйти");
			    }
			    case 13:
			    {
			        if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "Данный раздел вам недоступен");
			        ShowPlayerDialogEx(playerid, 2243, DIALOG_STYLE_INPUT, "{ebec86}>> Выбор игрока","{FFFFFF}Введите игровой NickName игрока:", "Выбрать", "Отмена");
			    }
			    case 14:
			    {
			        if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "Данный раздел вам недоступен");
			        ShowPlayerDialogEx(playerid, 2244, 2, "{ebec86}>> Внутриигровое логирование", "1. Правительство\n2. ГИБДД\n3. ГУВД\n4. ФСБ\n5. Больница\n6. Автошкола\n7. Южная ОПГ\n8. Арзамасская ОПГ\n9. Армия\n10. Лыткаринская ОПГ\n11. Батыревская ОПГ\n12. RECORD FM\n13. Спецназ", "Выбрать", "Выйти");
			    }
			    case 15:
			    {
			        if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "Данный раздел вам недоступен");
			        ShowPlayerDialogEx(playerid, 2245, 2, "{ebec86}>> Внутриигровое логирование", "1. Правительство\n2. ГИБДД\n3. ГУВД\n4. ФСБ\n5. Больница\n6. Автошкола\n7. Южная ОПГ\n8. Арзамасская ОПГ\n9. Армия\n10. Лыткаринская ОПГ\n11. Батыревская ОПГ\n12. RECORD FM\n13. Спецназ", "Выбрать", "Выйти");
			    }
			    case 16:
			    {
			        if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Данный раздел вам недоступен");
					mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '16' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogs", "ii", playerid, 16);
			    }
			}
		}
		case 2243:
		{
		    if (!response)
			{
			    DeletePVar(playerid, "GetTypeLogs");
				return 0;
			}
            STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, 128, "SELECT * FROM `log_transfer` WHERE `Name` = '%s'", inputtext);
			mysql_tquery(dbHandle, STRING_GLOBAL, "GetLogsMoney", "is", playerid, inputtext);
		}
		case 2245:
		{
		    if (!response)
			{
			    DeletePVar(playerid, "GetTypeLogs");
				return 0;
			}
			switch(listitem)
			{
			    case 0:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 1);
			    }
			    case 1:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 2);
			    }
			    case 2:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 3);
			    }
			    case 3:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 4);
			    }
			    case 4:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 5);
			    }
			    case 5:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 6);
			    }
			    case 6:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 7);
			    }
			    case 7:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 8);
			    }
			    case 8:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 12);
			    }
			    case 9:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 15);
			    }
			    case 10:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 16);
			    }
			    case 11:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 18);
			    }
			    case 12:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '15' ORDER BY `wrp_log`.`id` DESC LIMIT 40", "GetLogsLmenu", "ii", playerid, 21);
			    }
			}
		}
		case 2244:
		{
		    if (!response)
			{
			    DeletePVar(playerid, "GetTypeLogs");
				return 0;
			}
			switch(listitem)
			{
			    case 0:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 1);
			    }
			    case 1:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 2);
			    }
			    case 2:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 3);
			    }
			    case 3:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 4);
			    }
			    case 4:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 5);
			    }
			    case 5:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 6);
			    }
			    case 6:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 7);
			    }
			    case 7:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 8);
			    }
			    case 8:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 12);
			    }
			    case 9:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 15);
			    }
			    case 10:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 16);
			    }
			    case 11:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 18);
			    }
			    case 12:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '14'", "GetLogsObwyak", "ii", playerid, 21);
			    }
			}
		}
		case 2230:
		{
		    if (!response)
			{
			    DeletePVar(playerid, "GetTypeLogs");
				return 0;
			}
			switch(listitem)
			{
			    case 0:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 1);
			    }
			    case 1:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 2);
			    }
			    case 2:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 3);
			    }
			    case 3:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 4);
			    }
			    case 4:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 5);
			    }
			    case 5:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 6);
			    }
			    case 6:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 7);
			    }
			    case 7:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 8);
			    }
			    case 8:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 12);
			    }
			    case 9:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 15);
			    }
			    case 10:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 16);
			    }
			    case 11:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 18);
			    }
			    case 12:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '13'", "GetLogsRang", "ii", playerid, 21);
			    }
			}
		}
		case 2231:
		{
		    if (!response)
			{
			    DeletePVar(playerid, "GetTypeLogs");
				return 0;
			}
			switch(listitem)
			{
			    case 0:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 1);
			    }
			    case 1:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 2);
			    }
			    case 2:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 3);
			    }
			    case 3:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 4);
			    }
			    case 4:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 5);
			    }
			    case 5:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 6);
			    }
			    case 6:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 7);
			    }
			    case 7:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 8);
			    }
			    case 8:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 12);
			    }
			    case 9:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 15);
			    }
			    case 10:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 16);
			    }
			    case 11:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 18);
			    }
			    case 12:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '12'", "GetLogsUval", "ii", playerid, 21);
			    }
			}
		}
		case 2242:
		{
		    if (!response)
			{
			    DeletePVar(playerid, "GetTypeLogs");
				return 0;
			}
			switch(listitem)
			{
			    case 0:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 1);
                    SetPVarInt(playerid, "GetTypeLogs", 1);
			    }
			    case 1:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 2);
			        SetPVarInt(playerid, "GetTypeLogs", 2);
			    }
			    case 2:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 3);
			        SetPVarInt(playerid, "GetTypeLogs", 3);
			    }
			    case 3:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 4);
			        SetPVarInt(playerid, "GetTypeLogs", 4);
			    }
			    case 4:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 5);
			        SetPVarInt(playerid, "GetTypeLogs", 5);
			    }
			    case 5:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 6);
			        SetPVarInt(playerid, "GetTypeLogs", 6);
			    }
			    case 6:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 7);
			        SetPVarInt(playerid, "GetTypeLogs", 7);
			    }
			    case 7:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 8);
			        SetPVarInt(playerid, "GetTypeLogs", 12);
			    }
			    case 8:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 12);
			        SetPVarInt(playerid, "GetTypeLogs", 13);
			    }
			    case 9:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 15);
			        SetPVarInt(playerid, "GetTypeLogs", 14);
			    }
			    case 10:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 16);
			        SetPVarInt(playerid, "GetTypeLogs", 15);
			    }
			    case 11:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 18);
			        SetPVarInt(playerid, "GetTypeLogs", 16);
			    }
			    case 12:
			    {
			        mysql_tquery(dbHandle, "SELECT * FROM `wrp_log` WHERE `type` = '11'", "GetLogsInvite", "ii", playerid, 21);
			        SetPVarInt(playerid, "GetTypeLogs", 17);
			    }
			}
		}
	    case dRobbery:
	    {
	        if(!response)
	        {
	            robbery = 0;
	            foreach(new i : Player)
				{
					if(robbery_players[i] == -1) continue;

					robbery_team[0] = 0;
					robbery_players[i] = -1;
					DeletePVar(i, "RobberyPlayer");
				}
	            return 1;
	        }
	        switch(listitem)
			{
				case 0: GiveRobbery(playerid), robbery_pos[playerid] = 1;
				case 1: GiveRobbery(playerid), robbery_pos[playerid] = 2;
				case 2: GiveRobbery(playerid), robbery_pos[playerid] = 3;
				case 3: GiveRobbery(playerid), robbery_pos[playerid] = 4;
				case 4:
				{
				    if(robbery_players[playerid] == -1 || robbery_role[playerid] == 0)
					{
					    ShowPlayerDialogEx(playerid, dRobbery, DIALOG_STYLE_LIST, "{ebec86}>> Распределение ролей","1. Координатор\n2. Техник\n3. Оружейник\n4. Водитель\n5. Далее", "Далее", "Отмена");
					    SendErr(playerid, "Ещё не все роли назначены");
						return 1;
					}
				    foreach(new i : Player)
					{
          				if(robbery_team[0] == 4)
				    	{
           					if(robbery_players[i] != robbery_players[playerid]) continue;

           					DeletePVar(i, "RobberyPlayer");
						   	
						   	PlayerTextDrawHide(i, HungerProgress[playerid]);
							TextDrawHideForPlayer(i, HungerBackground[0]);
							TextDrawHideForPlayer(i, HungerBackground[1]);

                            if(robbery_role[i] == 1)
                            {
								format ( txt_role, sizeof ( txt_role ), "- %s", GetName(robbery_name[i][0]) ) ;
							}
							if(robbery_role[i] == 2)
                            {
								format ( txt_role1, sizeof ( txt_role1 ), "- %s", GetName(robbery_name[i][1]) ) ;
							}
							if(robbery_role[i] == 3)
                            {
								format ( txt_role2, sizeof ( txt_role2 ), "- %s", GetName(robbery_name[i][2]) ) ;
							}
							if(robbery_role[i] == 4)
                            {
								format ( txt_role3, sizeof ( txt_role3 ), "- %s", GetName(robbery_name[i][3]) ) ;
							}
					        if(robbery_players[i] == 0)
							{
							    SendInf(i, "Вы будете грабить банк в г. Южный");
								robbery_bank[0] = 0;
							}
						    if(robbery_players[i] == 1)
							{
							    SendInf(i, "Вы будете грабить банк в г. Арзамас");
								robbery_bank[1] = 1;
							}
						    if(robbery_players[i] == 2)
							{
							    SendInf(i, "Вы будете грабить банк в г. Батырево");
								robbery_bank[2] = 2;
							}
		    			}
				    	else
					   	{
					   	    ShowPlayerDialogEx(playerid, dRobbery, DIALOG_STYLE_LIST, "{ebec86}>> Распределение ролей","1. Координатор\n2. Техник\n3. Оружейник\n4. Водитель\n5. Далее", "Далее", "Отмена");
					   	    SendErr(playerid, "У вас ещё не полный состав для ограбления");
    	         			break;
				    	}
					}
				}
			}
	    }
	    case dRobbery+1:
		{
			if(!response)
			{
			    robbery = 0;
			    foreach(new i : Player)
				{
					if(robbery_players[i] == -1) continue;

					robbery_team[0] = 0;
					robbery_players[i] = -1;
					DeletePVar(i, "RobberyPlayer");
				}
			    return 1;
			}
			RobberyPlayer[playerid] = p_info[playerid][pListPlayers][listitem];
			
			if(GetPVarInt(RobberyPlayer[playerid], "RobberyPlayer") == 1)
			{
			    ShowPlayerDialogEx(playerid, dRobbery, DIALOG_STYLE_LIST, "{ebec86}>> Распределение ролей","1. Координатор\n2. Техник\n3. Оружейник\n4. Водитель\n5. Далее", "Далее", "Отмена");
		 		SendErr(playerid, "Вы уже назначили роль данному игроку");
		 		return 1;
			}
			
			new ltext[30];
			switch(robbery_pos[playerid])
			{
				case 1:
				{
					ltext = "координатора";

					robbery_name[RobberyPlayer[playerid]][0] = RobberyPlayer[playerid];
				}
				case 2:
				{
					ltext = "техника";

					robbery_name[RobberyPlayer[playerid]][1] = RobberyPlayer[playerid];
				}
				case 3:
				{
					ltext = "оружейника";

					robbery_name[RobberyPlayer[playerid]][2] = RobberyPlayer[playerid];
				}
				case 4:
				{
					ltext = "водителя";

					robbery_name[RobberyPlayer[playerid]][3] = RobberyPlayer[playerid];
				}
			}
			format(STRING_GLOBAL, 150, "Вы назначили {ebec86}%s{FFFFFF} роль {ebec86}%s{FFFFFF}", GetName(RobberyPlayer[playerid]), ltext);
			SendInf(playerid, STRING_GLOBAL);
			format(STRING_GLOBAL, 150, "{ebec86}%s{FFFFFF} назначил Вам роль {ebec86}%s{FFFFFF}", GetName(playerid), ltext);
			SendInf(RobberyPlayer[playerid], STRING_GLOBAL);
			robbery_role[RobberyPlayer[playerid]] = robbery_pos[playerid];
			robbery_pos[playerid] = 0;
			
			ShowPlayerDialogEx(playerid, dRobbery, DIALOG_STYLE_LIST, "{ebec86}>> Распределение ролей","1. Координатор\n2. Техник\n3. Оружейник\n4. Водитель\n5. Далее", "Далее", "Отмена");

            SetPVarInt(RobberyPlayer[playerid], "RobberyPlayer", 1);

			if(robbery_team[0] < 4)
			{
				robbery_team[0] += 1;
				robbery_players[RobberyPlayer[playerid]] = 0;
			}
			return 1;
		}
	    case dCarLock:
	    {
			if(!response) return 1;
			new params = listitem+1;
			if(params == 1)
			{
				new rows;
				new fmt_query[90];
				new Cache: result;

				mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
				result = mysql_query(dbHandle, fmt_query);

				rows = cache_num_rows();

				if(!rows)
				return SendErr(playerid, "У Вас нет личного транспорта"), cache_delete(result);

				if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID) return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");

				new vehicleid = p_info[playerid][pOwnableCar];

				new Float: posX, Float: posY, Float: posZ;

				GetVehiclePos(vehicleid, posX, posY, posZ);

				if(PlayerToPoint(3.0, playerid, posX, posY, posZ))
				{
					if(vehicleid == p_info[playerid][pOwnableCar])
					{
						if(IsLocked[vehicleid] == false)
						{
							ownable_car[playerid][v_lock] = 1;
							IsLocked[vehicleid] = true;
							CarDoors(vehicleid, ownable_car[playerid][v_lock]);
							GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							MeAction(playerid, "достал ключи и закрыл транспорт");

							format(fmt_query, sizeof fmt_query, "UPDATE `ownable_cars` SET `lock`='%d' WHERE `id` = '%d'", ownable_car[playerid][v_lock], ownable_car[playerid][v_sql]);
							mysql_query(dbHandle, fmt_query);

							return 1;
						}
						else
						{
							ownable_car[playerid][v_lock] = 0;
							IsLocked[vehicleid] = false;
							CarDoors(vehicleid, ownable_car[playerid][v_lock]);
							GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							MeAction(playerid, "достал ключи и открыл транспорт");

							format(fmt_query, sizeof fmt_query, "UPDATE `ownable_cars` SET `lock`='%d' WHERE `id` = '%d'", ownable_car[playerid][v_lock], ownable_car[playerid][v_sql]);
							mysql_query(dbHandle, fmt_query);
						}
					}
				}
				else SendClientMessage(playerid, C_RED, "Вы должны находиться рядом с личным транспортом");
			}
			if(params == 2)
			{
				if(GetPVarInt(playerid, "arendkey") == -1) return SendErr(playerid, "Вы не арендуете транспорт");
				new rc = GetPVarInt(playerid, "arendkey");
				if(ArendInfo[rc][aPlayerID] != playerid)
				{
					SendErr(playerid, "Вы не арендуете транспорт");
					SetPVarInt(playerid, "arendkey", -1);
					return 1;
				}
				new Float: posX, Float: posY, Float: posZ;
				GetVehiclePos(ArendInfo[rc][aID], posX, posY, posZ);
				if(!IsPlayerInRangeOfPoint(playerid, 10.0, posX, posY, posZ)) return SendErr(playerid, "Вы должны находиться возле арендованного Вами транспорта!");
				if(IsLocked[ArendInfo[rc][aID]] == false)
				{
					IsLocked[ArendInfo[rc][aID]] = true;
					CarDoorsEx(ArendInfo[rc][aID], 1);
					GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
					PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и закрыл транспорт");
				}
				else
				{
					IsLocked[ArendInfo[rc][aID]] = false;
					CarDoorsEx(ArendInfo[rc][aID], 0);
					GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
					PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и открыл транспорт");
				}
			}
			if(params == 3)
			{
		  		new rows;
				new fmt_query[128];
				new Cache: result;

				mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM copters WHERE owner_name='%s'", GetName(playerid));
				result = mysql_query(dbHandle, fmt_query);

				rows = cache_num_rows();

				if(!rows)
				return SendClientMessage(playerid, C_RED, "У Вас нет личного вертолета"), cache_delete(result);

				if(p_info[playerid][PlayerCopterID] == INVALID_VEHICLE_ID)
				return SendClientMessage(playerid, 0xFFCC00FF, "Ваш вертолет не загружен, используйте: /fixcopter");

				new Float: posX, Float: posY, Float: posZ, vehicleid = p_info[playerid][PlayerCopterID];

				GetVehiclePos(vehicleid, posX, posY, posZ);

				if(PlayerToPoint(3.0, playerid, posX, posY, posZ))
				{
					if(IsLocked[vehicleid] == false)
					{
						IsLocked[vehicleid] = true;
						CarDoors(vehicleid, ownable_car[playerid][v_lock]);
						GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						MeAction(playerid, "достал ключи и закрыл транспорт");

						format(fmt_query, sizeof fmt_query, "UPDATE copters SET lock=1 WHERE owner_name='%s'", GetName(playerid));
						mysql_query(dbHandle, fmt_query);

						return 1;
					}
					else
					{
						IsLocked[vehicleid] = false;
						CarDoors(vehicleid, ownable_car[playerid][v_lock]);
						GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						MeAction(playerid, "достал ключи и открыл транспорт");

						format(fmt_query, sizeof fmt_query, "UPDATE copters SET lock=0 WHERE owner_name='%s'", GetName(playerid));
						mysql_query(dbHandle, fmt_query);
					}
				}
			}
			if(params == 4)
			{
				if(p_info[playerid][pFamily] == 0) return SendErr(playerid, "Вы не состоите в семье");
				new Float: posX, Float: posY, Float: posZ;
				for(new veh_id = TOTALVEH; veh_id > 0; veh_id --)
				{
				    if ( VehInfo [ veh_id ] [ vFamily ] != p_info [ playerid ] [ pFamily ] )continue;
					new vehicle = VehInfo [ veh_id ] [ vVehicle ];
					GetVehiclePos(vehicle, posX, posY, posZ);
					if(!IsPlayerInRangeOfPoint(playerid, 3.0, posX, posY, posZ)) continue;
					if(IsLocked[vehicle] == false)
					{
						IsLocked[vehicle] = true;
						CarDoorsEx(vehicle, 1);
						GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
						PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
						MeAction(playerid, "достал ключи и закрыл транспорт");
					}
					else
					{
						IsLocked[vehicle] = false;
						CarDoorsEx(vehicle, 0);
						GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
						PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
						MeAction(playerid, "достал ключи и открыл транспорт");
					}
				}
   			}
   			if(params == 5)
			{
				if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "У вас нет дома");
				new Float: posX, Float: posY, Float: posZ;
    			for(new v = TOTALVEH; v > 0; v --)
				{
				    if ( VehInfo [ v ] [ vHouse ] != GetPVarInt(playerid, "PlayerHouse") && VehInfo [ v ] [ vHouse ] != p_info[playerid][pRentHouse] ) continue ;
                    new vehicle = VehInfo [ v ] [ vVehicle ];
					GetVehiclePos(vehicle, posX, posY, posZ);
					if(PlayerToPoint(5.0, playerid, posX, posY, posZ))
					{
						if(IsLocked[vehicle] == false)
						{
							IsLocked[vehicle] = true;
							CarDoorsEx(vehicle, 1);
							GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
							PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
							MeAction(playerid, "достал ключи и закрыл транспорт");
						}
						else
						{
							IsLocked[vehicle] = false;
							CarDoorsEx(vehicle, 0);
							GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
							PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
							MeAction(playerid, "достал ключи и открыл транспорт");
						}
					}
				}
			}
			if(params == 6)
			{
				if(p_info[playerid][pJob] == 0) return SendErr(playerid, "Вы нигде не работаете");
				new Float: posX, Float: posY, Float: posZ;
		    	for(new v = 1; v < MAX_VEHICLES; v++)
				{
				    if ( TaxiVehicleDriver[v] != playerid && MechanicVehicleDriver[v] != playerid ) continue ;
					GetVehiclePos(v, posX, posY, posZ);
					if(PlayerToPoint(5.0, playerid, posX, posY, posZ))
					{
						if(IsLocked[v] == false)
						{
							IsLocked[v] = true;
							CarDoorsEx(v, 1);
							GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
							PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
							MeAction(playerid, "достал ключи и закрыл транспорт");
						}
						else
						{
							IsLocked[v] = false;
							CarDoorsEx(v, 0);
							GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
							PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
							MeAction(playerid, "достал ключи и открыл транспорт");
						}
					}
				}
			}
			if(params == 7)
			{
				if(p_info[playerid][pMember] == 0) return SendErr(playerid, "Вы нигде не состоите");
				new Float: posX, Float: posY, Float: posZ;
		    	for(new v = 1; v < MAX_VEHICLES; v++)
				{
				    if ( VehInfo[v][vFraction] != p_info[playerid][pMember]) continue ;
					GetVehiclePos(v, posX, posY, posZ);
					if(PlayerToPoint(5.0, playerid, posX, posY, posZ))
					{
						if(IsLocked[v] == false)
						{
							IsLocked[v] = true;
							CarDoorsEx(v, 1);
							GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
							PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
							MeAction(playerid, "достал ключи и закрыл транспорт");
						}
						else
						{
							IsLocked[v] = false;
							CarDoorsEx(v, 0);
							GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
							PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
							MeAction(playerid, "достал ключи и открыл транспорт");
						}
					}
				}
			}
	    }
	    case 241:
		{
		    if(!response) return 1;
			if(GetMoney(playerid) < 25*WorkSalary[8]) return SendErr(playerid, "У вас недостаточно денег");
			ApplyAnimation(playerid, "VENDING", "VEND_USE", 4.1, 0, 0, 0, 0, 0, 1);
			GiveMoney(playerid, -25*WorkSalary[8], "Покупка SPRUNK");
			new Float:health;
			GetPlayerHealth(playerid, health);
			if(PlayerHP[playerid]+10 > 100) SetHealth(playerid, 100);
			else SetHealth(playerid, health+10);
			if(p_info[playerid][pHunger]+5 > 100) SetHunger(playerid, 100);
			else GiveHunger(playerid, 5);
			SetPVarInt(playerid, "DrinksMachineUse", gettime()+300);
		}
	    case d_camikaze_exit:
		{
			if ( ! response ) return SelectTextDraw(playerid, 0xB0C4DEFF ) ;
			cm_status ( playerid, false ) ;
		}
		case d_camikaze_cfexit:
		{
			if ( ! response ) return DeletePVar ( playerid, "cm_step" ) ;
			static const Float:money_cf [ 7 ] = {
			1.2,
			1.5,
			2.0,
			2.5,
			3.0,
			3.5,
			4.5	} ;

			new game_step = GetPVarInt ( playerid, "cm_step" ) - 1,
				win_count = floatround ( roulette_bet [ playerid ] * money_cf [ game_step ] ) ;

			DeletePVar ( playerid, "cm_step" ) ;

			GiveMoney ( playerid, win_count, "Коэф. с камикадзе" ) ;

			new scm_string [ 98 ] ;
			format ( scm_string, sizeof ( scm_string ), "Вы успешно остановили игру и забрали выигрыш в размере {f0e86b}%d{FFFFFF} рублей", win_count ) ;
			SendInf ( playerid, scm_string ) ;
			cm_status ( playerid, false ) ;
		}
		case d_cm_bet:
		{
			if ( !response ) return 1;
			if ( roulette_bet [ playerid ] != 0 ) return SendErr ( playerid, "Для начала завершите действующую игру" ) ;
			new money_count = strval ( inputtext ) ;
			if ( p_info [ playerid ] [ pCash ] < money_count ) return ShowPlayerDialogEx ( playerid, d_cm_bet, 1, "{ebec86}>> Ставка", "{ffffff}Введите сумму, которую желаете поставить\n\n{"#cRD"}* У Вас недостаточно средств для ставки", "Принять", "Отмена" ) ;
			if ( money_count < 1000 || money_count > 1000000 ) return ShowPlayerDialogEx ( playerid, d_cm_bet, 1, "{ebec86}>> Ставка", "{ffffff}Введите сумму, которую желаете поставить\n\n{AFAFAF}* Ставка должна быть не менее 1000 рублей и не более 1.000.000 рублей", "Принять", "Отмена" ) ;
			SendInf ( playerid, "Ставка успешно установлена" ) ;
			roulette_bet [ playerid ] = money_count ;
			GiveMoney ( playerid, - money_count, "Ставка в камикадзе" ) ;
			
			new j = GetPVarInt(playerid, "PlayerBizz");
			BizzInfo[j][bMoneyHour] += floatround(money_count/10);
			BizzPay[j] += floatround(money_count/10);
			BizzInfo[j][bProduct] -= 10;
			MysqlUpdateBizzInt(j, "bizzpay", BizzPay[j]);
			MysqlUpdateBizzInt(j, "product", BizzInfo[j][bProduct]);
			return 1 ;
		}
		case d_dice_exit:
		{
			if ( !response ) return SelectTextDraw(playerid, 0xB0C4DEFF ) ;
			return ExitBone ( playerid ) ;
		}
		case d_dice_bet:
		{
			if ( !response ) return true;
			if ( strval ( inputtext ) < 1000 || strval ( inputtext ) > 30000000 ) return ShowPlayerDialogEx(playerid,d_dice_bet,1,"{ebec86}>> Установка ставки для игры","{ffffff}Введите сумму для ставки\n\n{"#cRD"}* Ставка должна быть не менее 1000 рублей и не более 30.000.000 рублей","Далее","Отмена");
			new null = 0 ;
			for ( new i ; i < 5 ; i ++ ) if ( GetPVarInt ( dice_info [ GetPVarInt ( playerid, "Stol" ) - 1 ] [ b_player ] [ i ], "InGame" ) ) null ++ ;
			if ( null > 0 ) return SendErr ( playerid, "Кто-то из игроков уже поставил ставку" ) ;
			if ( dice_info [ GetPVarInt ( playerid, "Stol" ) - 1 ] [ b_started ] != 0 ) return SendErr(playerid, "Вы не можете изменить ставку в процессе игры." ) ;
			dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_bet ] = strval ( inputtext ) ;
			SendInf ( playerid, "Ставка успешно установлена" ) ;
			return UpdateBone ( GetPVarInt ( playerid, "Stol" ) - 1 ) ;
		}
		case d_tun_engine:
		{
			if ( ! response ) return SelectTextDraw ( playerid, 0xB0C4DEFF ) ;
			new _v_id = GetPlayerVehicleID ( playerid ) ;
			if ( VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ listitem ] )
			{
				SendErr ( playerid, "Деталь уже установлена" ) ;
				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", engine_ptune [ i ] ) ;
					}
					else 
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", engine_ptune [ i ], engine_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}
				ShowPlayerDialogEx ( playerid, d_tun_engine, DIALOG_STYLE_LIST, "{ebec86}>> Производительность двигателя", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}			
			SetPVarInt ( playerid, "performance_listitem", listitem ) ;
			new _dialog_string [ 128 ] ;
			format ( _dialog_string, sizeof ( _dialog_string ), "{ffffff}Вы действительно желаете установить %s?\n\nСтоимость {f0e86b}%d{ffffff} рублей",
			engine_ptune [ listitem ], engine_ptune_price [ listitem ] ) ;
					
			new Float:td_y = - ( VehInfos [ _v_id - 1 ] [ v_engine_boost ] + engine_ptune_boost [ listitem ] ) * 328.57 ;
			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 0 ], 11.000000, td_y ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 0 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 0 ] ) ;
		
			ShowPlayerDialogEx ( playerid, d_tun_engine_accept, DIALOG_STYLE_MSGBOX, "{ebec86}>> Установка детали", _dialog_string, "Купить", "Назад" ) ;
		}
		case d_tun_engine_accept:
		{
			if ( ! response )
			{
				new _v_id = GetPlayerVehicleID ( playerid ) ;
				new Float:td_y = - VehInfos [ _v_id - 1 ] [ v_engine_boost ] * 328.57 ;
				PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 0 ], 11.000000, td_y ) ;
				PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 0 ] ) ;
				PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 0 ] ) ;
				DeletePVar ( playerid, "performance_listitem" ) ;
						
		
				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", engine_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", engine_ptune [ i ], engine_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}
				ShowPlayerDialogEx ( playerid, d_tun_engine, DIALOG_STYLE_LIST, "{ebec86}>> Производительность двигателя", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}
			new list_item = GetPVarInt ( playerid, "performance_listitem" ) ;
			DeletePVar ( playerid, "performance_listitem" ) ;

			new _v_id = GetPlayerVehicleID ( playerid ) ;
			if ( GetMoney(playerid) < engine_ptune_price [ list_item ] )
			{
				SendErr ( playerid, "Недостаточно средств для приобретения" ) ;

				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", engine_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", engine_ptune [ i ], engine_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_engine, DIALOG_STYLE_LIST, "{ebec86}>> Производительность двигателя", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
				
			}

			new j = GetPVarInt(playerid,"CTObizzid");
			if ( BizzInfo[j][bProduct] < 200 )
			{
				SendErr ( playerid, "Недостаточно продуктов на складе бизнеса" ) ;

				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", engine_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", engine_ptune [ i ], engine_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_engine, DIALOG_STYLE_LIST, "{ebec86}>> Производительность двигателя", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}
			
			
			GiveMoney ( playerid, - engine_ptune_price [ list_item ], "Perfomance Tuning" ) ;
			
			VehInfos [ _v_id - 1 ] [ v_engine_boost ] += engine_ptune_boost [ list_item ] ;
			SendInf ( playerid, "Вы успешно установили улучшение" ) ;
			VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ list_item ] = 1 ;
			
			new query_string [ 200 ] ;
			format ( query_string, sizeof ( query_string ),"UPDATE `ownable_cars` SET `v_eng_details` = '%d|%d|%d|%d|%d',`v_engine_boost` = '%f' WHERE `id`='%d' LIMIT 1",
			VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ 0 ],
			VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ 1 ],
			VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ 2 ],
			VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ 3 ],
			VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ 4 ],
			VehInfos [ _v_id - 1 ] [ v_engine_boost ],
			ownable_car[playerid][v_sql]) ;
			
			mysql_tquery ( dbHandle, query_string, "", "" ) ;


			new Float:td_y = - VehInfos [ _v_id - 1 ] [ v_engine_boost ] * 328.57 ;

			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 1 ], 11.000000, td_y ) ;
			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 0 ], 11.000000, td_y ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 0 ] ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 1 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 0 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 1 ] ) ;
			
			BizzInfo[j][bMoneyHour] += engine_ptune_price [ list_item ] / 10;
			BizzPay[j] += engine_ptune_price [ list_item ] / 10;
			MysqlUpdateBizzInt(j, "bizzpay", BizzPay[j]);
		}
		case d_tun_brake:
		{
			if ( ! response ) return SelectTextDraw ( playerid, 0xB0C4DEFF ) ;
			new _v_id = GetPlayerVehicleID ( playerid ) ;
			if ( VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ listitem ] )
			{
				SendInf ( playerid, "Деталь уже установлена" ) ;
				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", brake_ptune [ i ] ) ;
					}
					else 
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", brake_ptune [ i ], brake_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_brake, DIALOG_STYLE_LIST, "{ebec86}>> Тормозная система", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}			
			SetPVarInt ( playerid, "performance_listitem", listitem ) ;
			new _dialog_string [ 128 ] ;
			format ( _dialog_string, sizeof ( _dialog_string ), "{ffffff}Вы действительно желаете установить %s?\n\nСтоимость {f0e86b}%d{ffffff} рублей",
			brake_ptune [ listitem ], brake_ptune_price [ listitem ] ) ;

			new Float:td_y = - ( VehInfos [ _v_id - 1 ] [ v_brake_boost ] + brake_ptune_boost [ listitem ] ) * 12.7777 ;
			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 2 ], 11.000000, td_y ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 2 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 2 ] ) ;
		
			ShowPlayerDialogEx ( playerid, d_tun_brake_accept, DIALOG_STYLE_MSGBOX, "{ebec86}>> Установка детали", _dialog_string, "Купить", "Назад" ) ;
		}
		case d_tun_brake_accept:
		{
			if ( ! response )
			{
				new _v_id = GetPlayerVehicleID ( playerid ) ;
				new Float:td_y = - VehInfos [ _v_id - 1 ] [ v_brake_boost ] * 12.7777 ;
				PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 2 ], 11.000000, td_y ) ;
				PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 2 ] ) ;
				PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 2 ] ) ;
				DeletePVar ( playerid, "performance_listitem" ) ;
						
		
				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", brake_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", brake_ptune [ i ], brake_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_brake, DIALOG_STYLE_LIST, "{ebec86}>> Тормозная система", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}
			new list_item = GetPVarInt ( playerid, "performance_listitem" ) ;
			DeletePVar ( playerid, "performance_listitem" ) ;
			new _v_id = GetPlayerVehicleID ( playerid ) ;
			if ( GetMoney(playerid) < brake_ptune_price [ list_item ] )
			{
				SendErr ( playerid, "Недостаточно средств для приобретения" ) ;

				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", brake_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", brake_ptune [ i ], brake_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_brake, DIALOG_STYLE_LIST, "{ebec86}>> Тормозная система", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
				
			}
			new j = GetPVarInt(playerid,"CTObizzid");
			if ( BizzInfo[j][bProduct] < 200 )
			{
				SendErr ( playerid, "Недостаточно продуктов на складе бизнеса" ) ;

				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", engine_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", engine_ptune [ i ], engine_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_engine, DIALOG_STYLE_LIST, "{ebec86}>> Производительность двигателя", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}
			GiveMoney ( playerid, - brake_ptune_price [ list_item ], "Perfomance Tuning" ) ;

			VehInfos [ _v_id - 1 ] [ v_brake_boost ] += brake_ptune_boost [ list_item ] ;
			SendInf ( playerid, "Вы успешно установили улучшение" ) ;
			VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ list_item ] = 1 ;
			
			new query_string [ 200 ] ;
			format ( query_string, sizeof ( query_string ),"UPDATE `ownable_cars` SET `v_brake_details` = '%d|%d|%d|%d|%d',`v_brake_boost` = '%f' WHERE `id`='%d' LIMIT 1",
			VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ 0 ],
			VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ 1 ],
			VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ 2 ],
			VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ 3 ],
			VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ 4 ],
			VehInfos [ _v_id - 1 ] [ v_brake_boost ],
			ownable_car[playerid][v_sql] ) ;
			mysql_tquery ( dbHandle, query_string, "", "" ) ;
			new Float:td_y = - VehInfos [ _v_id - 1 ] [ v_brake_boost ] * 12.7777 ;

			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 3 ], 11.000000, td_y ) ;
			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 2 ], 11.000000, td_y ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 2 ] ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 3 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 2 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 3 ] ) ;
			
			BizzInfo[j][bMoneyHour] += brake_ptune_price [ list_item ] / 10;
			BizzPay[j] += brake_ptune_price [ list_item ] / 10;
			MysqlUpdateBizzInt(j, "bizzpay", BizzPay[j]);
		}
		case d_tun_stability:
		{
			if ( ! response ) return SelectTextDraw ( playerid, 0xB0C4DEFF ) ;
			new _v_id = GetPlayerVehicleID ( playerid ) ;
			if ( VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ listitem ] )
			{
				SendErr ( playerid, "Деталь уже установлена" ) ;
				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", stability_ptune [ i ] ) ;
					}
					else 
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", stability_ptune [ i ], stability_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_stability, DIALOG_STYLE_LIST, "{ebec86}>> Усиление устойчивости", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}			
			SetPVarInt ( playerid, "performance_listitem", listitem ) ;
			new _dialog_string [ 128 ] ;
			format ( _dialog_string, sizeof ( _dialog_string ), "{ffffff}Вы действительно желаете установить %s?\n\nСтоимость {f0e86b}%d{ffffff} рублей",
			stability_ptune [ listitem ], stability_ptune_price [ listitem ] ) ;

			new Float:td_y = - ( VehInfos [ _v_id - 1 ] [ v_stability_boost ] + stability_ptune_boost [ listitem ] ) ;
			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 4 ], 11.000000, td_y ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 4 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 4 ] ) ;
		
			ShowPlayerDialogEx ( playerid, d_tun_stability_accept, DIALOG_STYLE_MSGBOX, "{ebec86}>> Установка детали", _dialog_string, "Купить", "Назад" ) ;
		}
		case d_tun_stability_accept:
		{
			if ( ! response )
			{
				new _v_id = GetPlayerVehicleID ( playerid ) ;
				new Float:td_y = - VehInfos [ _v_id - 1 ] [ v_stability_boost ] ;
				PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 4 ], 11.000000, td_y ) ;
				PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 4 ] ) ;
				PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 4 ] ) ;
				DeletePVar ( playerid, "performance_listitem" ) ;
						
		
				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", stability_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", stability_ptune [ i ], stability_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_stability, DIALOG_STYLE_LIST, "{ebec86}>> Усиление устойчивости", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}
			new list_item = GetPVarInt ( playerid, "performance_listitem" ) ;
			DeletePVar ( playerid, "performance_listitem" ) ;
			new _v_id = GetPlayerVehicleID ( playerid ) ;
			if ( GetMoney(playerid) < stability_ptune_price [ list_item ] )
			{
				SendErr ( playerid, "Недостаточно средств для приобретения" ) ;

				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", stability_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", stability_ptune [ i ], stability_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_stability, DIALOG_STYLE_LIST, "{ebec86}>> Усиление устойчивости", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
				
			}
			new j = GetPVarInt(playerid,"CTObizzid");
			if ( BizzInfo[j][bProduct] < 200 )
			{
				SendErr ( playerid, "Недостаточно продуктов на складе бизнеса" ) ;

				STRING_GLOBAL = "" ;
				new line_string [ 86 ] ;
				for ( new i ; i < 5 ; i ++ )
				{
					if ( VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ i ] )
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}Установлено\n", engine_ptune [ i ] ) ;
					}
					else
					{
						format ( line_string, sizeof ( line_string ), "{ffffff}%s - {f0e86b}%d{ffffff} рублей\n", engine_ptune [ i ], engine_ptune_price [ i ]  ) ;
					}
					strcat ( STRING_GLOBAL, line_string ) ;
				}		
				ShowPlayerDialogEx ( playerid, d_tun_engine, DIALOG_STYLE_LIST, "{ebec86}>> Производительность двигателя", STRING_GLOBAL, "Купить", "Закрыть" ) ;
				return 1 ;
			}			
			
			GiveMoney ( playerid, - stability_ptune_price [ list_item ], "Perfomance Tuning" ) ;

			VehInfos [ _v_id - 1 ] [ v_stability_boost ] += stability_ptune_boost [ list_item ] ;
			SendInf ( playerid, "Вы успешно установили улучшение" ) ;
			VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ list_item ] = 1 ;

			new query_string [ 200 ] ;
			format ( query_string, sizeof ( query_string ),"UPDATE `ownable_cars` SET `v_stab_details` = '%d|%d|%d|%d|%d',`v_stability_boost` = '%f' WHERE `id`='%d' LIMIT 1",
			VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ 0 ],
			VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ 1 ],
			VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ 2 ],
			VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ 3 ],
			VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ 4 ],
			VehInfos [ _v_id - 1 ] [ v_stability_boost ],
			ownable_car[playerid][v_sql] ) ;
			mysql_tquery ( dbHandle, query_string, "", "" ) ;
			new Float:td_y = - VehInfos [ _v_id - 1 ] [ v_stability_boost ] ;

			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 5 ], 11.000000, td_y ) ;
			PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 4 ], 11.000000, td_y ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 4 ] ) ;
			PlayerTextDrawHide ( playerid, ptd_performance [ playerid ] [ 5 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 4 ] ) ;
			PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ 5 ] ) ;
			
			BizzInfo[j][bMoneyHour] += stability_ptune_price [ list_item ] / 10;
			BizzPay[j] += stability_ptune_price [ list_item ] / 10;
			MysqlUpdateBizzInt(j, "bizzpay", BizzPay[j]);
		}
		/*case D_INPUT_TABLE_DELL_LINE:
	    {
	        if(!response) return 1;

			for(new i = 0; i < 25; i++)
			{
			    if(br_player[playerid][br_objects][i] != INVALID_OBJECT)
			    {
			        DestroyDynamicObject ( br_player[playerid][br_objects][i] ) ;
			        br_player[playerid][br_objects][i]=INVALID_OBJECT;
			    }
			}

			if(blocktext[playerid] != Text3D:-1)
			{
		        DestroyDynamic3DTextLabel(blocktext[playerid]);
		        blocktext[playerid]=Text3D:-1;
			}
			return 1;
	    }
	    case D_INPUT_TABLE_DELL_NO_LINE:
	    {
	        if(!response) return 1;

	        if(br_player[playerid][br_objects][0] != INVALID_OBJECT)
			{
				DestroyDynamicObject ( br_player[playerid][br_objects][0] ) ;
	        	br_player[playerid][br_objects][0] = INVALID_OBJECT;
			}

			if(blocktext[playerid] != Text3D:-1)
			{
		        DestroyDynamic3DTextLabel(blocktext[playerid]);
		        blocktext[playerid]=Text3D:-1;
			}

	        return 1;
	    }
	    case D_INPUT_TABLE_DELL:
	    {
	        if(!response) return 1;

			if ( br_player[playerid][br_object_text][0] != INVALID_OBJECT ) DestroyDynamicObject ( br_player[ playerid ][ br_object_text ][ 0 ] ) ;
			if ( br_player[playerid][br_object_text][1] != INVALID_OBJECT ) DestroyDynamicObject ( br_player[ playerid ][ br_object_text ][ 1 ] ) ;

	        br_player[playerid][br_object_text][0] = INVALID_OBJECT;
	        br_player[playerid][br_object_text][1] = INVALID_OBJECT;

			if(blocktext[playerid] != Text3D:-1)
			{
		        DestroyDynamic3DTextLabel(blocktext[playerid]);
		        blocktext[playerid]=Text3D:-1;
			}
			return 1;
	    }
		case D_INPUT_TABLE:
		{
		    if(!response) return 1;

		    new Float:X, Float:Y, Float:Z, Float:A;
			new count_spaces = 0, length = strlen(inputtext);
			for( new C = 0x0; inputtext[C] != 0x0; ++C )
			{
				if( inputtext[C] == 0x20 )
				{
				    inputtext[C] = '\n';
				    count_spaces ++;
				}
			}

		    if(length < 5 || length >= 30 || count_spaces > 1)
		    {
				ShowPlayerDialogEx(playerid, D_INPUT_TABLE, DIALOG_STYLE_INPUT, "{ebec86}>> Установка информационной панели", "{FFFFFF}Введите текст\n{CC3300}- Максимальное количество символов 30\n{CC3300}- Если вы используете пробел, то он заменяется на перенос строки\n{CC3300}- Больше двух слов использовать нельзя\n", "Потвердить", "Отмена");
		        return 0;
		    }

			GetPlayerPos(playerid, X, Y, Z);
		    GetPlayerFacingAngle(playerid, A);

			if(br_player[playerid][br_object_text][0] == INVALID_OBJECT)
			{
			    br_player[playerid][br_object_text][0] = CreateDynamicObject(19980, X + 3.0 * floatsin(-A, degrees), Y + 3.0 * floatcos(-A, degrees), Z - 2.0, 0.0, 0.0, A );

				SetDynamicObjectMaterial(br_player[playerid][br_object_text][0], 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0);
				SetDynamicObjectMaterial(br_player[playerid][br_object_text][0], 1, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0);
				SetDynamicObjectMaterial(br_player[playerid][br_object_text][0], 2, 10778, "airportcpark_sfse", "ws_fluorescent2", 0);
			    EditDynamicObject(playerid, br_player[playerid][br_object_text][0]);

			    Streamer_Update(playerid);

				strmid ( br_player[playerid][br_text] , inputtext, 0, strlen(inputtext), strlen(inputtext) + 1);
 			}
		}*/
	case dSpy:
		{
			if(!response) return 1;
			if(!strcmp(inputtext,"null")) return SCM(playerid,-1," ");
			if(listitem == 0) SetPVarInt(playerid, "FractionID", 2);
			if(listitem == 1) SetPVarInt(playerid, "FractionID", 3);
			if(listitem == 2) SetPVarInt(playerid, "FractionID", 21);
			if(listitem == 3) SetPVarInt(playerid, "FractionID", 12);
			if(listitem == 4) SetPVarInt(playerid, "FractionID", 15);
			if(listitem == 5) SetPVarInt(playerid, "FractionID", 16);
			new mes[256];
			for(new i; i < 8; i++)
			{
				new skinid = Fraction_Skin[GetPVarInt(playerid, "FractionID")][i];
				if(!skinid) break;
				if(!i) format(mes, sizeof(mes), "Одежда №%d (id %d)", i+1, skinid);
				else format(mes, sizeof(mes), "%s\nОдежда №%d (id %d)", mes, i+1, skinid);
			}
			ShowPlayerDialogEx(playerid, dSpy+1, 2, "{ebec86}>> Выбор скина", mes, "Принять", "");
			return 1;
		}
    case dSpy+1:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid, "actplayerID");
			new fractionid = GetPVarInt(playerid, "FractionID");
			new skinid = Fraction_Skin[fractionid][listitem];
			new mes[128];
			format(mes,sizeof(mes), "%s выдал(а) вам маскировку %s", GetName(playerid), Fractions[fractionid][fractionName]);
			SendClientMessage(actplayerid, COLOR_BLUE, mes);
			
            format(mes, sizeof(mes), "[ШПИОНАЖ]: %s %s выдал(а) маскировку %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), GetName(actplayerid));
			SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, mes);
			
			SetPlayerColorEx(actplayerid, TeamColors[fractionid]);
			SetPlayerSkin(actplayerid, skinid);
			SetPVarInt(actplayerid, "spy_member", GetPVarInt(playerid, "FractionID"));
			DeletePVar(playerid, "actplayerid");
			DeletePVar(playerid, "FractionID");
			return 1;
		}
	case 183:
		{
		    if(!response) return 1;
		    new Business, String[200];
		    for(new idx = TOTALBIZZ; idx > 0; idx --)
			{
				if(PlayerToPoint(3.0, playerid, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
				{
		    		Business = idx;
				}
			}
			if(BizzInfo[Business][bMafia] == p_info[playerid][pMember])
			{
			    if(!BizzPay[Business]) return SendErr(playerid, "В этом бизнесе ещё нет денег для вас");
			    format(String, sizeof(String), "На счёт вашей организации зачисленно {f0e86b}%d{FFFFFF} рублей. Получить деньги вы можете на своей базе", BizzPay[Business]);
				SendInf(playerid, String);
				
				frac_money[p_info[playerid][pMember]] += BizzPay[Business];
				UpdateFractionStore(p_info[playerid][pMember]);
				UpdateStoreGang(p_info[playerid][pMember]);
				
				if(frac_money[p_info[playerid][pMember]] > 1800000000)
				{
				    frac_money[p_info[playerid][pMember]] = 2000000000;
				    UpdateFractionStore(p_info[playerid][pMember]);
					UpdateStoreGang(p_info[playerid][pMember]);
				}
				if(frac_money[p_info[playerid][pMember]] < 0)
				{
				    frac_money[p_info[playerid][pMember]] = 0;
				    UpdateFractionStore(p_info[playerid][pMember]);
					UpdateStoreGang(p_info[playerid][pMember]);
				}
				
				BizzPay[Business] = 0;
				MysqlUpdateBizzInt(Business, "bizzpay", BizzPay[Business]);
			}
			else
			{
				if(!BizzInfo[Business][bMafia])
				{
					BizzInfo[Business][bMafia] = p_info[playerid][pMember];
					SendInf(playerid, "Вы захватили этот бизнес. Теперь Ваша организация будет получать с него деньги");
	     			MysqlUpdateBizzInt(Business, "mafia", BizzInfo[Business][bMafia]);
				}
				else
				{
				    new time; gettime(time);
					if(time < 12 || time > 22) return SendErr(playerid, "Воевать можно с 12:00 до 22:00");
					
				    if ( dip_status [ p_info [ playerid ] [ pMember ] ] [ BizzInfo[Business][bMafia] ] == status_alliance || dip_status [ p_info [ playerid ] [ pMember ] ] [ BizzInfo[Business][bMafia] ] == status_neutral )
					{
						SendErr(playerid, "Вы не можете напасть на организацию, с которой состоите в союзе или нейтралитете");
						return 1 ;
					}
					
					new attemptslot= -1;
					switch(p_info[playerid][pMember])
					{
						case 7: attemptslot = 0;
						case 8: attemptslot = 1;
						case 15: attemptslot = 2;
						case 16: attemptslot = 3;
					}
					if(attemptslot != -1)
					{
						if(CaptureAttempt[attemptslot] >= MAX_ATTEMPT_GANG)
						{
						    format(STRING_GLOBAL, 128, "Ваша организация уже воевала более %i раз", MAX_ATTEMPT_GANG);
					    	SendErr(playerid, STRING_GLOBAL);
						    return 1;
						}
					}
					
				    if(IsGangConnected(BizzInfo[Business][bMafia]) < 4) return SendErr(playerid, "Для нападения должны быть онлайн хотябы 4 члена враждующей организации");
                    if(IsGangConnected(p_info[playerid][pMember]) < 4) return SendErr(playerid, "Для нападения должны быть онлайн хотябы 4 члена Вашей организации");
					if(StartMafiaWar[p_info[playerid][pMember]] != 0 && StartMafiaWar[StartMafiaWar[p_info[playerid][pMember]]] != 0) return SendErr(playerid, "Ваша организация уже воюет");
					if(StartMafiaWar[BizzInfo[Business][bMafia]] != 0 && StartMafiaWar[StartMafiaWar[BizzInfo[Business][bMafia]]] != 0) return SendErr(playerid, "Вражеская организация уже воюет");

					SendInf(playerid, "Откройте карту и выберите место битвы, поставив метку");
					SetPVarInt(playerid, "ChoiceBattleZone", 1);
					StartMafiaWar[p_info[playerid][pMember]] = BizzInfo[Business][bMafia];
					MafiaBattle[0][2] = Business;
					
					if(attemptslot != -1) CaptureAttempt[attemptslot] ++;
				}
			}
		}
	case d_carjack+2:
		{
			if(!response) return 1;
			STRING_GLOBAL = "";
			new i = GetPVarInt(playerid,"SelectedSlotBuyingCar");
			format(STRING_GLOBAL, 48, "Вы утилизировали авто за - {f0e86b}%d{FFFFFF} рублей", i);
			SendInf(playerid, STRING_GLOBAL);

			GiveMoney(playerid, i, "Утилизация авто");

			AC_SetVehicleToRespawn(GetPlayerVehicleID(playerid));

			DeletePVar(playerid, "SelectedSlotBuyingCar");
			DeletePVar(playerid, "NormCar");
		}
	case d_carjack+1:
		{
			if(!response) return DeletePVar(playerid, "CarJack");
			action_td_status(playerid, true);
			SetPVarInt(playerid, "TryingVzlom", RandomEx(1, 6));
			SetPVarInt(playerid, "Procedure", 2);
		}
	case d_carjack:
		{
			if(!response) return DeletePVar(playerid, "CarJack");
			action_td_status(playerid, true);
			SetPVarInt(playerid, "TryingVzlom", RandomEx(1, 6));
			SetPVarInt(playerid, "Procedure", 1);
		}
	case dSelectPatr:
		{
			GetPatron(playerid);
			SetPVarInt(playerid,"get_type",response+1);
			return 1;
		}
	case dSelectFrac:
		{
			if(!response) return 1;
			new slot = -1;
			for(new place = 0; place < MAX_FRACTIONS; place++)
			{
				if(place == 0 || place == 7 || place == 8 || place == 15 || place == 16 || place == 18) continue;
				if(strfind(inputtext,Fractions[place][fractionName]) != -1)
				{
					slot = place;
					break;
				}
			}
			if(slot == -1) return 1;
			SetPlayerCheckpoint(playerid,frac_place_put[slot][0],frac_place_put[slot][1],frac_place_put[slot][2],6.0);
			SendInf(playerid, "Метка на карте указана в виде красного маркера");
			return 1;
		}
	case dialog_GARAGEMENU1:
		{

		    new g = p_info[playerid][data_GARAGE], title_str[64];

		    format(title_str, sizeof title_str, "{ebec86}>> Управление гаражем №%d", g + 1);

		    ShowPlayerDialogEx
				(
				    playerid,
					dialog_GARAGEMENU,
					DIALOG_STYLE_LIST,
					title_str,
					"{43B5E6}1. Информация о гараже\n\
					{FFFFFF}2. Отметить гараж на GPS\n\
					3. Открыть / закрыть гараж\n\
					4. Отремонтировать автомобиль\n\
					{FA6442}5. Дополнительные действия\n\
					6. Склад гаража",
					"Выбрать", "Отмена"
				)
			;
		}


		case dialog_GARAGEMENU:
		{

		    new g = p_info[playerid][data_GARAGE];

		    if(!response) return 0;

		    switch(listitem)
		    {
		        case 0: // информация
		        {
		            new garage_str[306], class_text[32], lock_text[54];

		            switch(GARAGE_DATA[g][g_TYPE])
		            {
		                case 1: class_text = "Премиум класс";
						case 2: class_text = "Средний класс";
						case 3: class_text = "Премиум класс";
		            }

					switch(GARAGE_DATA[g][g_LOCK])
					{
					    case 0: lock_text = "{63DB67}Гараж открыт";
					    case 1: lock_text = "{FA5751}Гараж закрыт";
					}

		            format
						(
							garage_str, sizeof garage_str, "\
							{FFFFFF}Информация о гараже:\n\n\
							Тип / название: \t\t\t{F26D06}%s\n\
							{FFFFFF}Номер гаража: \t\t\t%d\n\
							Владелец: \t\t\t\t%s\n\
							Стоимость: \t\t\t\t%d рублей\n\
							Оплачен на: \t\t\t\t%d/30 дн.\n\
							Сумма оплаты(в сутки): \t\t%d рублей\n\
							Статус гаража: \t\t\t%s",
							class_text,
							g + 1,
							GARAGE_DATA[g][g_OWNER],
							GARAGE_DATA[g][g_PRICE],
							GARAGE_DATA[g][g_DAY],
							500,
							lock_text
						)
					;

		            ShowPlayerDialogEx
		                (
		                    playerid,
		                    dialog_GARAGEMENU1,
		                    DIALOG_STYLE_MSGBOX,
		                    " ",
		                    garage_str,
							"Назад", ""
						)
					;
		        }

		        case 1: // отметить на GPS
		        {
     				GPSPlayer_(playerid, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z], "Гараж");
     				SendClientMessage(playerid,-1,"{3DC132}[Гараж]: {FFFFFF}Гараж отмечен на карте красной меткой");
		        }

		        case 2: // открыть / закрыть
				{

					if(GARAGE_DATA[g][g_LOCK] == 1)
					{
						GARAGE_DATA[g][g_LOCK] = 0;
						SendClientMessage(playerid, COLOR_GREEN, "Гараж открыт");
					}

					else GARAGE_DATA[g][g_LOCK] = 1, SendErr(playerid, "Гараж закрыт");

					SaveGarageData(g);

				}

				case 3: // ремонт
				{
				    if(PlayerToPoint(10.0, playerid, GARAGE_DATA[g][g_EXIT_X], GARAGE_DATA[g][g_EXIT_Y], GARAGE_DATA[g][g_EXIT_Z]))
            		{
						RepairVehicle(GetPlayerVehicleID(playerid));
						SendInf(playerid, "Вы отремонтировали Ваше транспортное средство");
					}
					else SendErr(playerid, "Ремонтировать транспортное средство можно только в гараже");
				}

				case 4: // доп. функции
				{

				    ShowPlayerDialogEx
						(
				        	playerid,
				        	dialog_GARAGE_SELL,
							DIALOG_STYLE_LIST,
							"{ebec86}>> Дополнительные действия",
							"1. Обменяться гаражами с игроком\n\
							2. Продать гараж игроку\n\
							3. Продать гараж государству",
							"Выбрать", "Назад"
						)
					;

				}
				case 5:
				{
				    if(PlayerToPoint(10.0, playerid, GARAGE_DATA[g][g_EXIT_X], GARAGE_DATA[g][g_EXIT_Y], GARAGE_DATA[g][g_EXIT_Z]))
            		{
					    format(STRING_GLOBAL, sizeof(STRING_GLOBAL), ""newgreen"Положить наркотики. (Наркотиков на складе: %d)\n"newgreen"Положить патроны. (Патрон на складе: %d)\n"newgreen"Положить металл. (Металла на складе: %d)\n"newgreen"Положить деньги. (На складе: %d рублей)\n"nwhite"Взять наркотики. (Наркотиков на складе: %d)\nВзять патроны. (Патрон на складе: %d)\nВзять металл. (Металла на складе: %d)\nВзять деньги. (На складе: %d рублей)",
				        GARAGE_DATA[g][g_DRUGS], GARAGE_DATA[g][g_PATRON], GARAGE_DATA[g][g_METALL], GARAGE_DATA[g][g_MONEY], GARAGE_DATA[g][g_DRUGS], GARAGE_DATA[g][g_PATRON], GARAGE_DATA[g][g_METALL], GARAGE_DATA[g][g_MONEY]);
				    	ShowPlayerDialogEx(playerid, 5171, DIALOG_STYLE_LIST, "{ebec86}>> Склад гаража", STRING_GLOBAL, "Далее", "Закрыть");
                    }
					else SendErr(playerid, "Склад доступен только в гараже");
				}
		    }
		}
		
		case 5168:
		{
			if(!response) return pc_cmd_garage(playerid);
			new put = strval(inputtext), newslot, g = p_info[playerid][data_GARAGE];
			if(put < 1 || put > 500) return ShowPlayerDialogEx(playerid,5168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(GARAGE_DATA[g][g_METALL] < put) return ShowPlayerDialogEx(playerid,5168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно металла","Взять","Назад");
            if(CheckMaxVes(playerid, 69, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			GARAGE_DATA[g][g_METALL] -= put;

			PlayerItem1[playerid][newslot] = 69;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid, newslot);

			SendInf(playerid, "Вы взяли со склада гаража металл");

			SaveGarageSklad(g);
			return 1;
		}
  		case dPatronGet2:
		{
			if(!response) return pc_cmd_garage(playerid);
			new put = strval(inputtext), newslot, g = p_info[playerid][data_GARAGE];
			if(put < 1 || put > 500) return ShowPlayerDialogEx(playerid,dPatronGet2,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(GARAGE_DATA[g][g_PATRON] < put) return ShowPlayerDialogEx(playerid,dPatronGet2,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно патронов","Взять","Назад");
            if(CheckMaxVes(playerid, 42, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			GARAGE_DATA[g][g_PATRON] -= put;

			PlayerItem1[playerid][newslot] = 42;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid, newslot);

			SendInf(playerid, "Вы взяли со склада гаража патроны");

			SaveGarageSklad(g);
			return 1;
		}
		case dPatronPut2:
		{
  			if(!response) return pc_cmd_garage(playerid);

  			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==42){ok=s;break;}
			}

			new put = strval(inputtext), g = p_info[playerid][data_GARAGE];
			if(put < 1) return ShowPlayerDialogEx(playerid,dPatronPut2,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,dPatronPut2,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно патронов с собой","Положить","Назад");
			if((GARAGE_DATA[g][g_PATRON] + put) > 25000) return SendErr(playerid, "Нельзя положить больше");
			GARAGE_DATA[g][g_PATRON] += put;

			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok]=0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);

			SendInf(playerid, "Вы положили на склад гаража патроны");

			SaveGarageSklad(g);
		    return 1;
		}
		case dDrugsGet2:
		{
			if(!response) return pc_cmd_garage(playerid);
			new put = strval(inputtext), newslot, g = p_info[playerid][data_GARAGE];
			if(put < 1 || put > 500 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,dDrugsGet2,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(GARAGE_DATA[g][g_DRUGS] < put) return ShowPlayerDialogEx(playerid,dDrugsGet2,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно наркотиков","Взять","Назад");
            if(CheckMaxVes(playerid, 44, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			GARAGE_DATA[g][g_DRUGS] -= put;

			PlayerItem1[playerid][newslot] = 44;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid, newslot);

			SendInf(playerid, "Вы взяли со склада гаража наркотики");

			SaveGarageSklad(g);
			return 1;
		}
		case dDrugsPut2:
		{
  			if(!response) return pc_cmd_garage(playerid);

  			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==44){ok=s;break;}
			}

			new put = strval(inputtext), g = p_info[playerid][data_GARAGE];
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,dDrugsPut2,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 1000","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,dDrugsPut2,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно наркотиков с собой","Положить","Назад");
            if((GARAGE_DATA[g][g_DRUGS] + put) > 20000) return SendErr(playerid, "Нельзя положить больше");
			GARAGE_DATA[g][g_DRUGS] += put;

			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok]=0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);

			SendInf(playerid, "Вы положили на склад гаража наркотики");

			SaveGarageSklad(g);
		    return 1;
		}
		case 5169:
		{
			if(!response) return pc_cmd_garage(playerid);

			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==69){ok=s;break;}
			}

			new put = strval(inputtext), g = p_info[playerid][data_GARAGE];
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,5169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 1000","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,5169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно металла с собой","Положить","Назад");
            if((GARAGE_DATA[g][g_METALL] + put) > 30000) return SendErr(playerid, "Нельзя положить больше");
			GARAGE_DATA[g][g_METALL] += put;

			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok]=0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);

			SendInf(playerid, "Вы на склад гаража металл");

			SaveGarageSklad(g);
			return 1;
		}
		case 5135:
		{
   			if(!response) return pc_cmd_garage(playerid);
			new put = strval(inputtext), g = p_info[playerid][data_GARAGE];
			if(put < 1 || put >= MONEY_LIMIT || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,5135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
   			if(p_info[playerid][pCash] < put) return ShowPlayerDialogEx(playerid,5135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно денег с собой","Положить","Назад");
			GARAGE_DATA[g][g_MONEY] += put;
			GiveMoney(playerid, -put, "Положил на склад семьи");
			MysqlUpdatePlayerInt(playerid,"cash",p_info[playerid][pCash]);

			SendInf(playerid, "Вы положили на склад гаража деньги");

			SaveGarageSklad(g);
		    return 1;
		}
  		case 5136:
		{
   			if(!response) return pc_cmd_garage(playerid);
			new put = strval(inputtext), g = p_info[playerid][data_GARAGE];
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,5136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
   			if(GARAGE_DATA[g][g_MONEY] < put) return ShowPlayerDialogEx(playerid,5136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно денег","Взять","Назад");
			GARAGE_DATA[g][g_MONEY] -= put;
			GiveMoney(playerid, put, "Взял со склада семьи");
			MysqlUpdatePlayerInt(playerid,"cash",p_info[playerid][pCash]);

			SendInf(playerid, "Вы взяли со склада гаража деньги");

			SaveGarageSklad(g);
		    return 1;
		}
		case 5171:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialogEx(playerid,dDrugsPut2,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 1: ShowPlayerDialogEx(playerid,dPatronPut2,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 2: ShowPlayerDialogEx(playerid,5169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 3: ShowPlayerDialogEx(playerid,5135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 4: ShowPlayerDialogEx(playerid,dDrugsGet2,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 5:	ShowPlayerDialogEx(playerid,dPatronGet2,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 6:	ShowPlayerDialogEx(playerid,5168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 7: ShowPlayerDialogEx(playerid,5136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
			}
			return 1;
		}

		case dialog_GARAGE_SELL:
		{
		    if(!response)
		    {

		        new g = p_info[playerid][data_GARAGE], title_str[64];

			    format(title_str, sizeof title_str, "{ebec86}>> Управление гаражем №%d", g + 1);

			    ShowPlayerDialogEx
					(
					    playerid,
						dialog_GARAGEMENU,
						DIALOG_STYLE_LIST,
						title_str,
						"{43B5E6}1. Информация о гараже\n\
						{FFFFFF}2. Отметить гараж на GPS\n\
						3. Открыть / закрыть гараж\n\
						4. Улучшения\n\
						5. Отремонтировать автомобиль\n\
						{FA6442}6. Дополнительные действия",
						"Выбрать", "Отмена"
					)
				;

		        return 1;

		    }

		    switch(listitem)
		    {

		        case 0: ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL3, DIALOG_STYLE_INPUT, "{ebec86}>> Обменяться гаражем с игроком", "{FFFFFF}Введите в поле ниже ID игрока\nПример: 38", "Далее", "Назад");
		        case 1: ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL2, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа гаража игроку", "{FFFFFF}Введите в поле ниже ID игрока\nПример: 38", "Далее", "Назад");
		        case 2: ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL1, DIALOG_STYLE_MSGBOX, "{ebec86}>> Продажа гаража государству", "{FFFFFF}Вы действительно хотите продать свой гараж государству? Гараж будет продан за пол цены\n\nЕсли согласны продать гараж, нажмите 'Далее'\nЕсли отказываетесь продать гараж, нажмите 'Назад'", "Далее", "Назад");
		    }

		}
		
		case dialog_GARAGE_SELL2:
		{
		    if(!response) return 1;
		    if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи гаража нужно отыграть 3 часа");
		    if(p_info[playerid][data_GARAGE] == INVALID_GARAGE_ID) return SendErr(playerid, "У Вас нет гаража");
		    if(!strval(inputtext)) return SendErr(playerid, "Вы не указали ID игрока");
		    if(!IsPlayerConnected(strval(inputtext))) return SendErr(playerid, "Игрок не в сети");
		    p_info[playerid][pInteractionPlayer] = strval(inputtext);
            ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL5, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа гаража игроку", "{ffffff}Введите сумму, которую хотите за гараж:\n{AFAFAF}* Не более 100 миллионов", "Продать", "Отмена");
			return 1;
		}
		
		case dialog_GARAGE_SELL5:
		{
		    if(!response) return 1;
		    new money = strval(inputtext);
			if(money < 0 || money > 100000000)
			return ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL5, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа гаража игроку", "{ffffff}Введите сумму, которую хотите за гараж:\n{AFAFAF}* Не более 100 миллионов", "Продать", "Отмена");

			if(!IsNumeric(inputtext))
			return ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL5, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа гаража игроку", "{ffffff}Введите сумму, которую хотите за гараж:\n{AFAFAF}* Не более 100 миллионов", "Продать", "Отмена");

			SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_SELL_GARAGE, money);
		}
		
		case dialog_GARAGE_SELL3:
		{
		    if(!response) return 1;
		    if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи гаража нужно отыграть 3 часа");
		    if(!strval(inputtext)) return SendErr(playerid, "Вы не указали ID игрока");
		    if(!IsPlayerConnected(strval(inputtext))) return SendErr(playerid, "Игрок не в сети");
		    if(p_info[playerid][data_GARAGE] == INVALID_GARAGE_ID)
			return SendErr(playerid, "У Вас нет гаража");
			if(p_info[strval(inputtext)][data_GARAGE] == INVALID_GARAGE_ID)
			return SendErr(playerid, "У игрока нет гаража");
		    p_info[playerid][pInteractionPlayer] = strval(inputtext);
            ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL4, DIALOG_STYLE_INPUT, "{ebec86}>> Обменяться гаражем с игроком", "{ffffff}Введите сумму, которую хотите в доплату:\n{AFAFAF}* Не более 100 миллионов", "Продать", "Отмена");
			return 1;
		}
		
		case dialog_GARAGE_SELL4:
		{
		    if(!response) return 1;
		    new money = strval(inputtext);
			if(money < 0 || money > 100000000)
			return ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL4, DIALOG_STYLE_INPUT, "{ebec86}>> Обменяться гаражем с игроком", "{ffffff}Введите сумму, которую хотите в доплату:\n{AFAFAF}* Не более 100 миллионов", "Продать", "Отмена");

			if(!IsNumeric(inputtext))
			return ShowPlayerDialogEx(playerid, dialog_GARAGE_SELL4, DIALOG_STYLE_INPUT, "{ebec86}>> Обменяться гаражем с игроком", "{ffffff}Введите сумму, которую хотите в доплату:\n{AFAFAF}* Не более 100 миллионов", "Продать", "Отмена");

			SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_CHANGE, money);
		}

		case dialog_GARAGE_SELL1:
		{

		    if(!response)
			{

				ShowPlayerDialog
					(
			        	playerid,
			        	dialog_GARAGE_SELL,
						DIALOG_STYLE_LIST,
						"{ebec86}>> Дополнительные действия",
						"1. Обменяться гаражами с игроком\n\
						2. Продать гараж игроку\n\
						3. Продать гараж государству",
						"Выбрать", "Назад"
					)
				;

			    return 1;

			}

		    new garage_id = GetPVarInt(playerid, "garage_id"), sell_f[128];

		    GARAGE_DATA[garage_id][g_OWNED] = 0;
		    GARAGE_DATA[garage_id][g_DAY] = 0;
		    p_info[playerid][data_GARAGE] = -1;
			GiveMoney(playerid, GARAGE_DATA[garage_id][g_PRICE] / 2, "Продажа гаража");
			strmid(GARAGE_DATA[garage_id][g_OWNER], "None", 0, strlen("None"), 24);

			format(sell_f, sizeof sell_f, "Вы успешно продали свой гараж за %d руб", GARAGE_DATA[garage_id][g_PRICE] / 2);
			SendErr(playerid, sell_f);
			
			MysqlUpdatePlayerInt(playerid, "garage", p_info[playerid][data_GARAGE]);

		    SaveGarageData(garage_id);
		    UpdateGarageData(garage_id);

		}

        case dialog_BUYGARAGE:
		{
		    if(!response) return 0;

		    new garage_id = GetPVarInt(playerid, "garage_id");

		    GARAGE_DATA[garage_id][g_OWNED] = 1;
		    GARAGE_DATA[garage_id][g_DAY] = 1;
		    GARAGE_DATA[garage_id][g_LOCK] = 1;
		    p_info[playerid][data_GARAGE] = garage_id;
			GiveMoney(playerid, -GARAGE_DATA[garage_id][g_PRICE], "Покупка гаража");
			strmid(GARAGE_DATA[garage_id][g_OWNER], p_info[playerid][pName], 0, strlen(p_info[playerid][pName]), 24);

			SendClientMessage(playerid, COLOR_GREEN, "Поздравляем Вас с успешной покупкой гаража!");
			SendClientMessage(playerid, COLOR_GREEN, "Для того, чтобы открыть меню управления гаражем, используйте /garage");
			SendClientMessage(playerid, COLOR_GREEN, "Ваш гараж оплачен на 1 день. Рекомендуем оплатить аренду гаража в любом банке области");

		    MysqlUpdatePlayerInt(playerid, "garage", p_info[playerid][data_GARAGE]);
		    
		    SaveGarageData(garage_id);
		    UpdateGarageData(garage_id);
		}

        case dialog_CREATE_GARAGE:
		{
		    if(!response) return 0;

            SetPVarInt(playerid, "CREATE_GARAGE", 1);

		    SendClientMessage(playerid, COLOR_GREEN, "Встаньте на то место, где будет находится пикап входа в гараж и введите /adg");

		}

		case dialog_CREATE_GARAGE_END:
		{
		    if(!response) return 0;

		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid, "GARAGE_CLASS", 1), SetPVarInt(playerid, "GARAGE_PRICE", 120000), SetPVarFloat(playerid, "GARAGE_EXIT_X", -530.3814), SetPVarFloat(playerid, "GARAGE_EXIT_Y", 2121.6741), SetPVarFloat(playerid, "GARAGE_EXIT_Z", 1002.8218);
		        case 1: SetPVarInt(playerid, "GARAGE_CLASS", 2), SetPVarInt(playerid, "GARAGE_PRICE", 250000), SetPVarFloat(playerid, "GARAGE_EXIT_X", -530.3814), SetPVarFloat(playerid, "GARAGE_EXIT_Y", 2121.6741), SetPVarFloat(playerid, "GARAGE_EXIT_Z", 1002.8218);
		        case 2: SetPVarInt(playerid, "GARAGE_CLASS", 3), SetPVarInt(playerid, "GARAGE_PRICE", 550000), SetPVarFloat(playerid, "GARAGE_EXIT_X", -530.3814), SetPVarFloat(playerid, "GARAGE_EXIT_Y", 2121.6741), SetPVarFloat(playerid, "GARAGE_EXIT_Z", 1002.8218);
		    }

		    CreateGarage(playerid);

		}
	case 250:
	    {
	        if(!response) return 1;
	        if(GetPVarInt(playerid, "pHospitals") >= 1) return SendErr(playerid, "Вы уже начали процесс реабилитации");
	        if(GetMoney(playerid) < WorkSalary[20]) return SendErr(playerid, "У вас недостаточно средств");
	        SetPVarInt(playerid, "pHospitals", 1);
	        SendInf(playerid, "Вы начали процесс реабилитации");
	        GiveMoney(playerid, -WorkSalary[20], "Лечение в больнице");
			FracBank[9] += WorkSalary[20];
			MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			
			new Float:health;
			GetPlayerHealth(playerid, health);
			new h = floatround(health);

			hospital_td_status(playerid, true);
			
			new td_string[32];
			format ( td_string, sizeof ( td_string ), "ЗДОРОВЬЕ:_%d", h ) ;
			PlayerTextDrawSetString ( playerid, ptd_hp [ playerid ] [ 3 ], td_string ) ;
			
			new td_string1[50];
			format ( td_string1, sizeof ( td_string1 ), "ДО ВЫПИСКИ ПРИМЕРНО ~G~%d~W~ СЕК", 100-h ) ;
			PlayerTextDrawSetString ( playerid, ptd_hp [ playerid ] [ 8 ], td_string1 ) ;
			
			new td_string2[32];
			format ( td_string2, sizeof ( td_string2 ), "%d%", h ) ;
			PlayerTextDrawSetString ( playerid, ptd_hp [ playerid ] [ 7 ], td_string2 ) ;

   			new Float:td_x = h * 1.13976577;
			PlayerTextDrawTextSize(playerid, ptd_hp [ playerid ] [ 6 ], td_x, 303.666717 ) ;
   			PlayerTextDrawHide(playerid, ptd_hp [ playerid ] [ 6 ]);
			PlayerTextDrawShow(playerid, ptd_hp [ playerid ] [ 6 ]);
	    }
	case 143:
		{
		    if(!response) return 1;
		    STRING_GLOBAL = "";
   			if(!strcmp("- Налоги", inputtext))
   			{
   				format(STRING_GLOBAL, 512, "{FFFFFF}Текущий процент налогов: {f0e86b}%d%%\n{FFFFFF}Введите новый процент налогов, если хотите изменить:", WorkSalary[6]);
   			    ShowPlayerDialogEx(playerid, 146, DIALOG_STYLE_INPUT, "{ebec86}>> Налоги", STRING_GLOBAL, "Принять", "Назад");
   			}
			if(!strcmp("- Зарплата организаций", inputtext))
			{
			    format(STRING_GLOBAL, 512, "- Мэрия [{f0e86b}%d%%{FFFFFF}]\n- УГИБДД [{f0e86b}%d%%{FFFFFF}]\n- ГУВД [{f0e86b}%d%%{FFFFFF}]\n- Спецназ [{f0e86b}%d%%{FFFFFF}]",
				SalaryStatus[7], SalaryStatus[11], SalaryStatus[3], SalaryStatus[1]);
				format(STRING_GLOBAL, 512, "%s\n- ФСБ [{f0e86b}%d%%{FFFFFF}]\n- МЧС [{f0e86b}%d%%{FFFFFF}]\n- Инструкторы [{f0e86b}%d%%{FFFFFF}]\n- Армия [{f0e86b}%d%%{FFFFFF}]\n- RECORD FM [{f0e86b}%d%%{FFFFFF}]",
				STRING_GLOBAL, SalaryStatus[2], SalaryStatus[4], SalaryStatus[6], SalaryStatus[5], SalaryStatus[8]);
				ShowPlayerDialogEx(playerid, 37, DIALOG_STYLE_LIST, "{ebec86}>> Зарплата организаций", STRING_GLOBAL, "Изменить", "Назад");
			}
			if(!strcmp("- Зарплата рабочих", inputtext))
			{
  				format(STRING_GLOBAL, 512, "- Дальнобойщик [{f0e86b}%d%%{FFFFFF}]\n- Водитель автобуса [{f0e86b}%d%%{FFFFFF}]\n- Таксист [{f0e86b}%d%%{FFFFFF}]", WorkSalary[0], WorkSalary[2], WorkSalary[3]);
				ShowPlayerDialogEx(playerid, 232, DIALOG_STYLE_LIST, "{ebec86}>> Зарплата рабочих", STRING_GLOBAL, "Изменить", "Назад");
			}
			if(!strcmp("- Городские цены", inputtext))
			{
				format(STRING_GLOBAL, 256, "- Налоги [{f0e86b}%d%%{FFFFFF}]\n- Недвижимость и транспорт [{f0e86b}%d%%{FFFFFF}]\n- Услуги [{f0e86b}%d%%{FFFFFF}]",
				WorkSalary[6], WorkSalary[7], WorkSalary[8]);
				ShowPlayerDialogEx(playerid, 239, DIALOG_STYLE_LIST, "{ebec86}>> Городские цены", STRING_GLOBAL, "Изменить", "Назад");
			}
			if(!strcmp("- Цены области", inputtext))
			{
			    format(STRING_GLOBAL, 256, "- Продукты [{f0e86b}%d%%{FFFFFF}]\n- Бензин [{f0e86b}%d%%{FFFFFF}]", WorkSalary[14], WorkSalary[15]);
				ShowPlayerDialogEx(playerid, 247, DIALOG_STYLE_LIST, "{ebec86}>> Цены области", STRING_GLOBAL, "Изменить", "Назад");
			}
			if(!strcmp("- Государственный бюджет", inputtext)) ShowPlayerDialogEx(playerid, 226, DIALOG_STYLE_LIST, "{ebec86}>> Государственный бюджет", "- Информация\n- Пополнить\n- Снять", "Выбрать", "Назад");
            if(!strcmp("- Цена на лечение в больнице", inputtext))
			{
  				STRING_GLOBAL = "";
     			format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена на лечение: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую стоимость, если хотите изменить:", WorkSalary[20]);
	    		ShowPlayerDialogEx(playerid, 1905, DIALOG_STYLE_INPUT, "{ebec86}>> Цена на лечение в больнице", STRING_GLOBAL, "Принять", "Назад");
			}
			if(!strcmp("- Цена на лечение", inputtext))
			{
  				STRING_GLOBAL = "";
     			format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена на лечение: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую стоимость, если хотите изменить:", WorkSalary[21]);
	    		ShowPlayerDialogEx(playerid, 191, DIALOG_STYLE_INPUT, "{ebec86}>> Цена на лечение", STRING_GLOBAL, "Принять", "Назад");
			}
			if(!strcmp("- Премия за доставку боеприпасов", inputtext))
			{
  				STRING_GLOBAL = "";
     			format(STRING_GLOBAL, 256, "{FFFFFF}Текущая премия за доставку боеприпасов: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[22]);
	    		ShowPlayerDialogEx(playerid, 192, DIALOG_STYLE_INPUT, "{ebec86}>> Премия за доставку боеприпасов", STRING_GLOBAL, "Принять", "Назад");
			}
			if(!strcmp("- Запрет на использование тяжёлой техники", inputtext))
			{
  				if(WorkSalary[23])
  				{
  				    WorkSalary[23] = 0;
  				    SendInf(playerid, "Вы разрешили использование тяжёлой военной техники");
  				    SaveSalary();
  				    return 1;
  				}
                if(!WorkSalary[23])
  				{
  				    WorkSalary[23] = 1;
  				    SendInf(playerid, "Вы запретили использование тяжёлой военной техники");
  				    SaveSalary();
  				    return 1;
  				}
			}
			if(!strcmp("- Премия за поимку преступника", inputtext))
			{
  				STRING_GLOBAL = "";
     			format(STRING_GLOBAL, 256, "{FFFFFF}Текущая премия за поимку преступника: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[24]);
	    		ShowPlayerDialogEx(playerid, 193, DIALOG_STYLE_INPUT, "{ebec86}>> Премия за поимку преступника", STRING_GLOBAL, "Принять", "Назад");
			}
			if(!strcmp("- Премия за убийство при задержании", inputtext))
			{
  				STRING_GLOBAL = "";
     			format(STRING_GLOBAL, 256, "{FFFFFF}Текущая премия за убийство при задержании: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[25]);
	    		ShowPlayerDialogEx(playerid, 194, DIALOG_STYLE_INPUT, "{ebec86}>> Премия за убийство при задержании", STRING_GLOBAL, "Принять", "Назад");
			}
			if(!strcmp("- Центр лицензирования", inputtext))
			{
			    STRING_GLOBAL = "";
			    format(STRING_GLOBAL, 512, "- Водительские права [{f0e86b}%d{FFFFFF} рублей]\n- Воздушный транспорт [{f0e86b}%d{FFFFFF} рублей]\n- Водный транспорт [{f0e86b}%d{FFFFFF} рублей]\n- Лицензия на бизнес [{f0e86b}%d{FFFFFF} рублей]\n- Лицензия на оружие [{f0e86b}%d{FFFFFF} рублей]",
				WorkSalary[26], WorkSalary[27], WorkSalary[28], WorkSalary[29], WorkSalary[30]);
				ShowPlayerDialogEx(playerid, 258, DIALOG_STYLE_LIST, "{ebec86}>> Центр лицензирования", STRING_GLOBAL, "Изменить", "Назад");
			}
			if(!strcmp("- Штраф за превышение скорости", inputtext))
			{
			    STRING_GLOBAL = "";
     			format(STRING_GLOBAL, 256, "{FFFFFF}Текущий штраф за превышение скорости: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[33]);
	    		ShowPlayerDialogEx(playerid, 195, DIALOG_STYLE_INPUT, "{ebec86}>> Штраф за превышение скорости", STRING_GLOBAL, "Принять", "Назад");
			}
		}
	case 258:
	    {
	        if(!response) return 1;
	        switch(listitem)
			{
			    case 0:
			    {
			        STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на водительские права: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[26]);
	    			ShowPlayerDialogEx(playerid, 259, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача водительских прав", STRING_GLOBAL, "Принять", "Назад");
			    }
			    case 1:
			    {
			        STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на лётную лицензию: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[27]);
	    			ShowPlayerDialogEx(playerid, 260, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача лицензии на полёты", STRING_GLOBAL, "Принять", "Назад");
			    }
			    case 2:
			    {
			        STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на водный транспорт: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[28]);
	    			ShowPlayerDialogEx(playerid, 2610, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача лицензии на водный транспорт", STRING_GLOBAL, "Принять", "Назад");
			    }
				case 3:
			    {
			        STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на бизнес: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[29]);
	    			ShowPlayerDialogEx(playerid, 2611, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача лицензии на вбизнес", STRING_GLOBAL, "Принять", "Назад");
			    }
				case 4:
			    {
			        STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на оружие: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[30]);
	    			ShowPlayerDialogEx(playerid, 2612, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача лицензии на оружие", STRING_GLOBAL, "Принять", "Назад");
			    }
			}
	    }
	case 259:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 500000)
		        {
					WorkSalary[26] = IAmount;
			    	SaveSalary();
		        }
		        else
				{
				    STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на водительские права: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[26]);
	    			ShowPlayerDialogEx(playerid, 259, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача водительских прав", STRING_GLOBAL, "Принять", "Назад");
				}
			}
	    }
    case 260:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 500000)
		        {
					WorkSalary[27] = IAmount;
			    	SaveSalary();
		        }
		        else
				{
				    STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на лётную лицензию: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[27]);
	    			ShowPlayerDialogEx(playerid, 260, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача лицензии на полёты", STRING_GLOBAL, "Принять", "Назад");
				}
			}
	    }
    case 2610:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 500000)
		        {
					WorkSalary[28] = IAmount;
			    	SaveSalary();
		        }
		        else
				{
				    STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на водный транспорт: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[28]);
	    			ShowPlayerDialogEx(playerid, 2610, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача лицензии на водный транспорт", STRING_GLOBAL, "Принять", "Назад");
				}
			}
	    }
    case 2611:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 500000)
		        {
					WorkSalary[29] = IAmount;
			    	SaveSalary();
		        }
		        else
				{
				    STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на бизнес: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[29]);
	    			ShowPlayerDialogEx(playerid, 2611, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача лицензии на бизнес", STRING_GLOBAL, "Принять", "Назад");
				}
			}
	    }
    case 2612:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 500000)
		        {
					WorkSalary[30] = IAmount;
			    	SaveSalary();
		        }
		        else
				{
				    STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена за автосдачу на оружие: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[30]);
	    			ShowPlayerDialogEx(playerid, 2612, DIALOG_STYLE_INPUT, "{ebec86}>> Сдача лицензии на оружие", STRING_GLOBAL, "Принять", "Назад");
				}
			}
	    }
	case 1905:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 100)
		        {
					WorkSalary[20] = IAmount;
			    	SaveSalary();
		        }
		        else
		        {
		            STRING_GLOBAL = "";
		        	format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена на лечение: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую стоимость, если хотите изменить:", WorkSalary[20]);
	    			ShowPlayerDialogEx(playerid, 1905, DIALOG_STYLE_INPUT, "{ebec86}>> Цена на лечение в больнице", STRING_GLOBAL, "Принять", "Назад");
		        }
		    }
	    }
    case 191:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 5000)
		        {
					WorkSalary[21] = IAmount;
			    	SaveSalary();
		        }
		        else
		        {
		            STRING_GLOBAL = "";
		        	format(STRING_GLOBAL, 256, "{FFFFFF}Текущая цена на лечение: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую стоимость, если хотите изменить:", WorkSalary[21]);
	    			ShowPlayerDialogEx(playerid, 191, DIALOG_STYLE_INPUT, "{ebec86}>> Цена на лечение", STRING_GLOBAL, "Принять", "Назад");
		        }
		    }
	    }
     case 192:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 10000)
		        {
					WorkSalary[22] = IAmount;
			    	SaveSalary();
		        }
		        else
		        {
		            STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая премия за доставку боеприпасов: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[22]);
	    			ShowPlayerDialogEx(playerid, 192, DIALOG_STYLE_INPUT, "{ebec86}>> Премия за доставку боеприпасов", STRING_GLOBAL, "Принять", "Назад");
		        }
		    }
	    }
	case 193:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 10000)
		        {
					WorkSalary[24] = IAmount;
			    	SaveSalary();
		        }
		        else
		        {
		            STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая премия за поимку преступника: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[24]);
	    			ShowPlayerDialogEx(playerid, 193, DIALOG_STYLE_INPUT, "{ebec86}>> Премия за поимку преступника", STRING_GLOBAL, "Принять", "Назад");
		        }
		    }
	    }
    case 194:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 10000)
		        {
					WorkSalary[25] = IAmount;
			    	SaveSalary();
		        }
		        else
		        {
		            STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущая премия за убийство при задержании: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[25]);
	    			ShowPlayerDialogEx(playerid, 194, DIALOG_STYLE_INPUT, "{ebec86}>> Премия за убийство при задержании", STRING_GLOBAL, "Принять", "Назад");
		        }
		    }
	    }
    case 195:
	    {
	        if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 10000)
		        {
					WorkSalary[33] = IAmount;
			    	SaveSalary();
		        }
		        else
		        {
		            STRING_GLOBAL = "";
     				format(STRING_GLOBAL, 256, "{FFFFFF}Текущий штраф за превышение скорости: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Введите новую сумму, если хотите изменить:", WorkSalary[33]);
	    			ShowPlayerDialogEx(playerid, 195, DIALOG_STYLE_INPUT, "{ebec86}>> Штраф за превышение скорости", STRING_GLOBAL, "Принять", "Назад");
		        }
		    }
	    }
	case 146:
		{
		    if(response)
		    {
		        new IAmount = strval(inputtext);
		        if(strlen(inputtext) && IAmount >= 0 && IAmount <= 1000)
		        {
					WorkSalary[6] = IAmount;
					SaveSalary();
		        }
		        else
		        {
		            STRING_GLOBAL = "";
		        	format(STRING_GLOBAL, 256, "{FFFFFF}Текущий процент налогов: {f0e86b}%d%%\n{FFFFFF}Введите новый процент налогов, если хотите изменить:", WorkSalary[6]);
   			    	ShowPlayerDialogEx(playerid, 146, DIALOG_STYLE_INPUT, "{ebec86}>> Налоги", STRING_GLOBAL, "Принять", "Назад");
		        }
		    }
		    ShowPlayerDialogEx(playerid, 143, DIALOG_STYLE_LIST, "{ebec86}>> Мэрия: Панель управления", "- Государственный бюджет\n- Цены области\n- Городские цены\n- Зарплата организаций\n- Зарплата рабочих\n- Налоги", "Выбрать", "Выйти");
		}
    case 37:
		{
			if(response)
			{
			    switch(listitem)
			    {
			    	case 0: SetPVarInt(playerid, "OrganiseEnter", 7);
			        case 1: SetPVarInt(playerid, "OrganiseEnter", 11);
			        case 2: SetPVarInt(playerid, "OrganiseEnter", 3);
			        case 3: SetPVarInt(playerid, "OrganiseEnter", 1);
			        case 4: SetPVarInt(playerid, "OrganiseEnter", 2);
			        case 5: SetPVarInt(playerid, "OrganiseEnter", 4);
			        case 6: SetPVarInt(playerid, "OrganiseEnter", 6);
			        case 7: SetPVarInt(playerid, "OrganiseEnter", 5);
			        case 8: SetPVarInt(playerid, "OrganiseEnter", 8);
			    }
			    ShowPlayerDialogEx(playerid, 38, DIALOG_STYLE_INPUT, "{ebec86}>> Зарплата организаций", "{FFFFFF}Введите новый процент зарплаты:", "Принять", "Назад");
			}
			else ShowPlayerDialogEx(playerid, 143, DIALOG_STYLE_LIST, "{ebec86}>> Мэрия: Панель управления", "- Государственный бюджет\n- Цены области\n- Городские цены\n- Зарплата организаций\n- Зарплата рабочих\n- Налоги", "Выбрать", "Выйти");
		}
	case 38:
		{
			if(response)
			{
			    if(!strlen(inputtext) || !strval(inputtext) && strcmp(inputtext, "0") || strval(inputtext) > 100) return ShowPlayerDialogEx(playerid, 38, DIALOG_STYLE_INPUT, "{ebec86}>> Мэрия: Панель управления", "{FFFFFF}Введите новый процент зарплаты:", "Принять", "Назад");
			    SalaryStatus[GetPVarInt(playerid, "OrganiseEnter")] = strval(inputtext);
			    SaveSalary();

			    format(STRING_GLOBAL, 128, "Губернатор %s изменил процент з/п на %d", p_info[playerid][pName], strval(inputtext));
				SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
				
				format(STRING_GLOBAL, 128, "%s изменил з/п на %d для %s", p_info[playerid][pName], strval(inputtext), Fractions[GetPVarInt(playerid, "OrganiseEnter")][fractionName]);
				WriteLogs(p_info[playerid][pMember], TYPE_LOG_OBWYAK, STRING_GLOBAL);
			}
			STRING_GLOBAL = "";
			format(STRING_GLOBAL, 512, "- Мэрия [{f0e86b}%d%%{FFFFFF}]\n- УГИБДД [{f0e86b}%d%%{FFFFFF}]\n- ГУВД [{f0e86b}%d%%{FFFFFF}]\n- Спецназ [{f0e86b}%d%%{FFFFFF}]",
			SalaryStatus[7], SalaryStatus[11], SalaryStatus[3], SalaryStatus[1]);
			format(STRING_GLOBAL, 512, "%s\n- ФСБ [{f0e86b}%d%%{FFFFFF}]\n- МЧС [{f0e86b}%d%%{FFFFFF}]\n- Инструкторы [{f0e86b}%d%%{FFFFFF}]\n- Армия [{f0e86b}%d%%{FFFFFF}]\n- RECORD FM [{f0e86b}%d%%{FFFFFF}]",
			STRING_GLOBAL, SalaryStatus[2], SalaryStatus[4], SalaryStatus[6], SalaryStatus[5], SalaryStatus[8]);
			ShowPlayerDialogEx(playerid, 37, DIALOG_STYLE_LIST, "{ebec86}>> Зарплата организаций", STRING_GLOBAL, "Изменить", "Назад");
		}
    case 232:
		{
			if(response)
			{
			    SetPVarInt(playerid, "ChooseWork", listitem);
			    ShowPlayerDialogEx(playerid, 233, DIALOG_STYLE_INPUT, "{ebec86}>> Зарплата рабочих", "{FFFFFF}Введите новый процент зарплаты:", "Принять", "Назад");
			}
			else ShowPlayerDialogEx(playerid, 143, DIALOG_STYLE_LIST, "{ebec86}>> Мэрия: Панель управления", "- Государственный бюджет\n- Цены области\n- Городские цены\n- Зарплата организаций\n- Зарплата рабочих\n- Налоги", "Выбрать", "Выйти");
		}
	case 233:
		{
			if(response)
			{
			    new InputValue = strval(inputtext);
			    if(!strlen(inputtext) || InputValue <= 0 || InputValue > 100) return ShowPlayerDialogEx(playerid, 233, DIALOG_STYLE_INPUT, "{ebec86}>> Зарплата организаций", "{FFFFFF}Введите новый процент зарплаты:", "Принять", "Назад");
				if ( GetPVarInt ( playerid, "ChooseWork" ) > 0 )
				{
				    WorkSalary[GetPVarInt(playerid, "ChooseWork") + 1] = InputValue;
				}
				else WorkSalary[GetPVarInt(playerid, "ChooseWork")] = InputValue;
			    SaveSalary();

			    format(STRING_GLOBAL, 128, "Губернатор %s изменил процент з/п на %d для одной из работ", p_info[playerid][pName], InputValue);
				SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
				
				format(STRING_GLOBAL, 128, "%s изменил з/п на %d для работы", p_info[playerid][pName], InputValue);
				WriteLogs(p_info[playerid][pMember], TYPE_LOG_OBWYAK, STRING_GLOBAL);
			}
			STRING_GLOBAL = "";
			format(STRING_GLOBAL, 512, "- Дальнобойщик [{f0e86b}%d%%{FFFFFF}]\n- Водитель автобуса [{f0e86b}%d%%{FFFFFF}]\n- Таксист [{f0e86b}%d%%{FFFFFF}]", WorkSalary[0], WorkSalary[2], WorkSalary[3]);
			ShowPlayerDialogEx(playerid, 232, DIALOG_STYLE_LIST, "{ebec86}>> Зарплата рабочих", STRING_GLOBAL, "Изменить", "Назад");
		}
	case 234:
		{
			if(response)
			{
			    SetPVarInt(playerid, "ChooseWork", listitem+3);
			    ShowPlayerDialogEx(playerid, 235, DIALOG_STYLE_INPUT, "{ebec86}>> Зарплата рабочих", "{FFFFFF}Введите новый процент зарплаты:", "Принять", "Назад");
			}
		}
	case 235:
		{
			if(response)
			{
			    new InputValue = strval(inputtext);
			    if(!strlen(inputtext) || InputValue <= 0|| InputValue > 100) return ShowPlayerDialogEx(playerid, 235, DIALOG_STYLE_INPUT, "{ebec86}>> Зарплата рабочих", "{FFFFFF}Введите новый процент зарплаты:", "Принять", "Назад");
			    WorkSalary[GetPVarInt(playerid, "ChooseWork")] = InputValue;
			    SaveSalary();
			}
			STRING_GLOBAL = "";
			format(STRING_GLOBAL, 512, "- Дальнобойщик [{f0e86b}%d%%{FFFFFF}]\n- Водитель автобуса [{f0e86b}%d%%{FFFFFF}]\n- Таксист [{f0e86b}%d%%{FFFFFF}]", WorkSalary[0], WorkSalary[4], WorkSalary[5]);
		}
    case 247:
		{
			if(response)
			{
			    SetPVarInt(playerid, "ChooseWork", listitem+14);
			    ShowPlayerDialogEx(playerid, 248, DIALOG_STYLE_INPUT, "{ebec86}>> Цены области", "{FFFFFF}Введите новый процент цены:", "Принять", "Назад");
			}
			else ShowPlayerDialogEx(playerid, 143, DIALOG_STYLE_LIST, "{ebec86}>> Мэрия: Панель управления", "- Государственный бюджет\n- Цены области\n- Городские цены\n- Зарплата организаций\n- Зарплата рабочих\n- Налоги", "Выбрать", "Выйти");
		}
	case 248:
		{
			if(response)
			{
			    new InputValue = strval(inputtext);
			    if(!strlen(inputtext) || InputValue <= 0 || InputValue > 100) return ShowPlayerDialogEx(playerid, 248, DIALOG_STYLE_INPUT, "{ebec86}>> Зарплата организаций", "{FFFFFF}Введите новый процент цены", "Принять", "Назад");
			    WorkSalary[GetPVarInt(playerid, "ChooseWork")] = InputValue;
			    SaveSalary();
			}
			STRING_GLOBAL = "";
			format(STRING_GLOBAL, 512, "- Продукты [{f0e86b}%d%%{FFFFFF}]\n- Бензин [{f0e86b}%d%%{FFFFFF}]", WorkSalary[14], WorkSalary[15]);
			ShowPlayerDialogEx(playerid, 247, DIALOG_STYLE_LIST, "{ebec86}>> Цены области", STRING_GLOBAL, "Изменить", "Назад");
		}
    case 239:
		{
			if(response)
			{
				SetPVarInt(playerid, "ChooseWork", listitem+6);
			    ShowPlayerDialogEx(playerid, 240, DIALOG_STYLE_INPUT, "{ebec86}>> Городские цены", "{FFFFFF}Введите новый процент цены:", "Принять", "Назад");
			}
		}
	case 240:
		{
			if(response)
			{
			    new InputValue = strval(inputtext);
			    if(!strlen(inputtext) || InputValue <= 0 || InputValue > 100) return ShowPlayerDialogEx(playerid, 240, DIALOG_STYLE_INPUT, "{ebec86}>> Городские цены", "{FFFFFF}Введите новый процент цены:", "Принять", "Назад");
			    WorkSalary[GetPVarInt(playerid, "ChooseWork")] = InputValue;
			    SaveSalary();

			    format(STRING_GLOBAL, 256, "Губернатор %s изменил процент на %d для одного типа налогов", p_info[playerid][pName], InputValue);
				SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
				
				format(STRING_GLOBAL, 256, "%s изменил на %d для налога", p_info[playerid][pName], InputValue);
				WriteLogs(p_info[playerid][pMember], TYPE_LOG_OBWYAK, STRING_GLOBAL);
			}
		  	STRING_GLOBAL = "";
			format(STRING_GLOBAL, 256, "- Налоги [{f0e86b}%d%%{FFFFFF}]\n- Недвижимость и транспорт [{f0e86b}%d%%{FFFFFF}]\n- Услуги [{f0e86b}%d%%{FFFFFF}]",
			WorkSalary[6], WorkSalary[7], WorkSalary[8]);
			ShowPlayerDialogEx(playerid, 239, DIALOG_STYLE_LIST, "{ebec86}>> Городские цены", STRING_GLOBAL, "Изменить", "Назад");
		}
    case 226:
		{
		    if(response)
			{
			    switch(listitem)
				{
				    case 0:
				    {
				        STRING_GLOBAL = "";
				    	format(STRING_GLOBAL, 128, "{FFFFFF}Бюджет правительства: {f0e86b}%d{FFFFFF} рублей", FracBank[9]);
						ShowPlayerDialogEx(playerid, 227, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация", STRING_GLOBAL, "Назад", "");
				    }
				    case 1:
					{
						ShowPlayerDialogEx(playerid, 228, DIALOG_STYLE_INPUT, "{ebec86}>> Пополнить бюджет", "{FFFFFF}Введите количество денег, которое вы хотите положить:", "Принять", "Назад");
					}
				    case 2:
					{
						ShowPlayerDialogEx(playerid, 229, DIALOG_STYLE_INPUT, "{ebec86}>> Снять деньги", "{FFFFFF}Введите количество денег, которое вы хотите снять:", "Принять", "Назад");
					}
				}
			}
			else ShowPlayerDialogEx(playerid, 143, DIALOG_STYLE_LIST, "{ebec86}>> Мэрия: Панель управления", "- Государственный бюджет\n- Цены области\n- Городские цены\n- Зарплата организаций\n- Зарплата рабочих\n- Налоги", "Выбрать", "Выйти");
		}
	case 227: ShowPlayerDialogEx(playerid, 226, DIALOG_STYLE_LIST, "{ebec86}>> Государственный бюджет", "- Информация\n- Пополнить\n- Снять", "Выбрать", "Назад");
	case 228:
		{
		    if(response)
		    {
				new InputMoney = strval(inputtext);
				if(!strlen(inputtext) || InputMoney <= 0) return ShowPlayerDialogEx(playerid, 228, DIALOG_STYLE_INPUT, "{ebec86}>> Пополнить бюджет", "{FFFFFF}Введите количество денег, которое вы хотите положить:", "Принять", "Назад");
				if(GetMoney(playerid) < InputMoney) return ShowPlayerDialogEx(playerid, 228, DIALOG_STYLE_INPUT, "{ebec86}>> Пополнить бюджет", "{FFFFFF}Введите количество денег, которое вы хотите положить:\n\n{AFAFAF}* У вас нет столько денег", "Принять", "Назад");
				GiveMoney(playerid, -InputMoney, "Пополнение бюджета");
				FracBank[9] += InputMoney;
				MysqlUpdateOtherInt("sfnbank", FracBank[9]);
		    }
		    ShowPlayerDialogEx(playerid, 226, DIALOG_STYLE_LIST, "{ebec86}>> Государственный бюджет", "- Информация\n- Пополнить\n- Снять", "Выбрать", "Назад");
		}
	case 229:
		{
		    if(response)
		    {
				new InputMoney = strval(inputtext);
				if(!strlen(inputtext) || InputMoney <= 0) return ShowPlayerDialogEx(playerid, 229, DIALOG_STYLE_INPUT, "{ebec86}>> Снять деньги", "{FFFFFF}Введите количество денег, которое вы хотите снять:", "Принять", "Назад");
				if(BankStatus[1] < InputMoney) return ShowPlayerDialogEx(playerid, 229, DIALOG_STYLE_INPUT, "{ebec86}>> Снять деньги", "{FFFFFF}Введите количество денег, которое вы хотите снять:\n\n{AFAFAF}* В бюджете нет столько денег", "Принять", "Назад");
				GiveMoney(playerid, InputMoney, "Снятие с бюджета");
				FracBank[9] -= InputMoney;
				MysqlUpdateOtherInt("sfnbank", FracBank[9]);

				format(STRING_GLOBAL, 128, "Губернатор %s взял со склада организации %d рублей", p_info[playerid][pName], InputMoney);
				SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
				
				format(STRING_GLOBAL, 128, "%s взял со склада %d рублей", p_info[playerid][pName], InputMoney);
				WriteLogs(p_info[playerid][pMember], TYPE_LOG_OBWYAK, STRING_GLOBAL);
		    }
		    ShowPlayerDialogEx(playerid, 226, DIALOG_STYLE_LIST, "{ebec86}>> Государственный бюджет", "- Информация\n- Пополнить\n- Снять", "Выбрать", "Назад");
		}
	case 677:
        {
            if(!response) return 1;
            TogglePlayerSpectating(playerid, 1);
            SendClientMessage(playerid, COLOR_RED, "Сейчас мы покажем тебе,важные места этого города: {FFFFFF}");
            InterpolateCameraPos(playerid, 1822.485717, -1969.601074, 49.039348, 1822.381835, -1969.489135, 48.956157, 1000); // ??????
            InterpolateCameraLookAt(playerid, 1819.504150, -1966.376586, 46.649082, 1819.400268, -1966.264648, 46.565891, 1000); //??????
            for(new i; i < 3; i++) TextDrawShowForPlayer(playerid, TDn[i]); // ???????? ??? ??????????
            SelectTextDraw(playerid, 0xFF4040AA); // ???????? ?????????????? ??????????
            helpstr[playerid] = 2; // ????????? ???????? ?2
            return 1;
        }
	case 6550:
		{
		    if(!response) return 1;
		    switch(listitem)
			{
			    case 0: BankList(playerid);
			    case 1:
			    {
				    if(GetPlayerRooms(playerid) > 0)
					{
						if(GetPlayerRooms(playerid) == 0) return SendErr(playerid, "У вас нет квартиры");

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Введите сумму пополнения\nТекущий домашний баланс: {f0e86b}%i{FFFFFF} рублей", RoomsInfo[GetPVarInt(playerid, "PlayerRooms")][rOplata]);
						return ShowPlayerDialogEx(playerid, D_LIC+6, 1, "{ebec86}>> Пополнение домашнего счета", STRING_GLOBAL, "Принять", "Назад");
					}
					if(GetPlayerHouse(playerid) > 0)
					{
						new h = GetPVarInt(playerid, "PlayerHouse");
						return ShowPlayerDialogExPayHouse(playerid, h);
					}
					return SendErr(playerid, "У вас нет дома или квартиры");
				}
				case 2: BankList(playerid);
				case 3:
				{
				    if(GetPlayerBizz(playerid) == 0) return SendErr(playerid, "Вы не владеете бизнесом");

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: {f0e86b}%i{FFFFFF} рублей", BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bMoney]);
					ShowPlayerDialogEx(playerid, D_HEAL+21, 1, "{ebec86}>> Пополнение счета бизнеса", STRING_GLOBAL, "Принять", "Назад");
				}
				case 4:
				{
				    new b = GetPVarInt(playerid, "PlayerBizz");
					if(GetPlayerBizz(playerid) == 0) return SendErr(playerid, "Вы не владеете бизнесом");

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: {f0e86b}%i{FFFFFF} рублей", BizzInfo[b][bMoney]);
					ShowPlayerDialogEx(playerid, D_HEAL+213, 1, "{ebec86}>> Вывод счета с бизнеса", STRING_GLOBAL, "Принять", "Назад");
				}
				case 5:
				{
				    if(p_info[playerid][data_GARAGE] == INVALID_GARAGE_ID) return SendErr(playerid, "У Вас нет гаража");
					new ga = p_info[playerid][data_GARAGE];
					PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
					
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, 512, "{FFFFFF}Введите количество дней за которое хотите заплатить\n\n{f0e86b}1{FFFFFF} день - {f0e86b}500{FFFFFF} рублей\n\n{FFFFFF}Гараж оплачен на {f0e86b}%d{FFFFFF} дня/дней",GARAGE_DATA[ga][g_DAY]);
					ShowPlayerDialogEx(playerid, D_HEAL+500, DIALOG_STYLE_INPUT, "{ebec86}>> Оплата гаража", STRING_GLOBAL, "Выполнить", "Назад");
				}
				case 6: BankList(playerid);
			    case 7:
			    {
			        STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, 90, "{ffffff}Баланс банковского счета: {f0e86b}%i{FFFFFF} рублей", p_info[playerid][pBank]);
					ShowPlayerDialogEx(playerid, D_NULL, 0, "{ebec86}>> Баланс", STRING_GLOBAL, "Принять", "");
			    }
				case 8:
				{
				    ShowPlayerDialogEx(playerid, D_ATM+12, 1, "{ebec86}>> Пополнение",
					"{FFFFFF}Введите количество денег\n\
					на которое хотите пополнить банковский счёт", "Принять", "Назад");
				}
				case 9:
				{
				    ShowPlayerDialogEx(playerid, D_ATM+11, 1, "{ebec86}>> Снять со счета",
					"{FFFFFF}Введите количество денег\n\
					которое хотите снять с банковского счёта", "Принять", "Назад");
				}
				case 10:
				{
					if(p_info[playerid][pLevel] >= 5) ShowPlayerDialogEx(playerid, D_LIC+4, 1, "{ebec86}>> Перевод", "{FFFFFF}Введите {f0e86b}ID{FFFFFF} или имя игрока и количество денег через запятую\n\nПример: {f0e86b}Ivan_Ivanov{FFFFFF}, {f0e86b}10000{FFFFFF}", "Принять", "Назад");
					else SendErr(playerid, "Переводить деньги можно только с 5 уровня");
				}
				case 11:
				{
				    if(p_info[playerid][pCredit] != 0 || p_info[playerid][pCreditMoney] != 0)
					return SendClientMessage(playerid, C_RED, "У Вас уже есть кредит");

					if(p_info[playerid][pLevel] < 7)
					return SendClientMessage(playerid, C_RED, "Кредит можно брать с 7 уровня");

					ShowPlayerDialogEx
					(
					playerid, DIALOG_CREDIT, DIALOG_STYLE_INPUT,
					"{ebec86}>> Кредит",
					"{ffffff}Введите сумму, которую хотите взять в кредит\n"\
					"{ffffff}(от {f0e86b}10.000.000{ffffff} рублей до {f0e86b}50.000.000{ffffff} рублей{ffffff})\n\n"\
					"{ffffff}Процентная ставка: {f0e86b}20%\n"\
					"{ffffff}Например, если Вы берёте в кредит {f0e86b}10.000.000{ffffff} рублей -\n"\
					"{ffffff}Вы должны вернуть {ffcc00}12.000.000{ffffff} рублей.\n"\
					"{ffffff}Срок кредита: {f0e86b}7{ffffff} дней",
					"Далее", "Отмена"
					);
				}
				case 12:
				{
				    STRING_GLOBAL = "";
			        format(STRING_GLOBAL, 1500, "- Южная ОПГ ({f0e86b}%i{FFFFFF} рублей)\n- Арзамасская ОПГ ({f0e86b}%i{FFFFFF} рублей)\n- Лыткаринская ОПГ ({f0e86b}%i{FFFFFF} рублей)\n- Батыревская ОПГ ({f0e86b}%i{FFFFFF} рублей)",
		 			f_info [ 7 ] [ f_bl_config ] [ 1 ], f_info [ 8 ] [ f_bl_config ] [ 1 ], f_info [ 15 ] [ f_bl_config ] [ 1 ], f_info [ 16 ] [ f_bl_config ] [ 1 ]);
					ShowPlayerDialog(playerid, 7222, DIALOG_STYLE_LIST, "{ebec86}>> Выкуп из черного списка", STRING_GLOBAL, "Выбрать", "Закрыть");
				}
				case 13:
				{
				    if(mp_start == 0) return SendErr(playerid, "В данный момент фонд мероприятий закрыть");
				    ShowPlayerDialogEx(playerid, D_ATM+13, 1, "{ebec86}>> Фонд мероприятия",
					"{FFFFFF}Введите количество денег\n\
					которое хотите пожертвовать на мероприятие", "Принять", "Назад");
				}
			}
		}
    case D_ATM+13:
		{
			if(!response) return 1;
			new price;
			if(GetPVarInt(playerid, "anti_flod_bank") > gettime()) return SendErr(playerid, "Жертвовать деньги на мероприятие можно раз в минуту");
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialogEx(playerid, D_ATM+15, 1, "{ebec86}>> Фонд мероприятия", "{FFFFFF}Введите количество денег\nкоторое хотите пожертвовать на мероприятие", "Принять", "Назад");
			if(price < 10000) return ShowPlayerDialogEx(playerid, D_ATM+15, 1, "{ebec86}>> Фонд мероприятия", "{FFFFFF}Введите количество денег\nкоторое хотите пожертвовать на мероприятие\n\n{AFAFAF}* Жертвовать можно от 10.000 рублей", "Принять", "Назад");
			if(GetMoney(playerid) < price) { ShowPlayerDialogEx(playerid, D_ATM+15, 1, "{ebec86}>> Фонд мероприятия", "{FFFFFF}Введите количество денег\nкоторое хотите пожертвовать на мероприятие", "Принять", "Назад"); return SendErr(playerid, "У Вас недостаточно средств"); }
			GiveMoney(playerid, -price, "Фонд МД");
			SCMF(playerid, COLOR_LIME, "Вы пожертвовали на мероприятие: %d", price);
			
			fond_mp += price;
			
			format(STRING_GLOBAL, 150, "< RECORD FM >{FFFFFF} %s пожертвовал: %d рублей. Фонд мероприятия: %d рублей", p_info[playerid][pName], price, fond_mp);
			LSNews(0x00D3F6AA, STRING_GLOBAL);
			
			SetPVarInt(playerid, "anti_flod_bank", gettime()+60);
			return 1;
		}
    case 7222:
		{
		    if(!response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
					    if(Bl_Info[playerid][Bl_onFrac][7])
						{
							if(GetMoney(playerid) < f_info [ 7 ] [ f_bl_config ] [ 1 ])
							{
								PlayerPlaySound(playerid, 5406, 0, 0, 0);
								SendErr(playerid, "У вас недостаточно денег");
								return 1;
							}
							SendInf(playerid, "Вы купили выход из ЧС");

							GiveMoney(playerid, -f_info [ 7 ] [ f_bl_config ] [ 1 ], "Выкупился из ЧС");
							frac_money[7] += f_info [ 7 ] [ f_bl_config ] [ 1 ];
							UpdateFractionStore(7);
							UpdateStoreGang(7);
							new sendername[MAX_PLAYER_NAME], string[144];
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "[BLACK LIST]: %s[%d] купил выход из ЧС организации", sendername, playerid);
							SendFMes(7, COLOR_LIGHTBLUE, string);
							Bl_Remove(playerid, 7);
						}
					}
					case 1:
					{
					    if(Bl_Info[playerid][Bl_onFrac][8])
						{
							if(GetMoney(playerid) < f_info [ 8 ] [ f_bl_config ] [ 1 ])
							{
								PlayerPlaySound(playerid, 5406, 0, 0, 0);
								SendErr(playerid, "У вас недостаточно денег");
								return 1;
							}
							SendInf(playerid, "Вы купили выход из ЧС");

							GiveMoney(playerid, -f_info [ 8 ] [ f_bl_config ] [ 1 ], "Выкупился из ЧС");
							frac_money[8] += f_info [ 8 ] [ f_bl_config ] [ 1 ];
							UpdateFractionStore(8);
							UpdateStoreGang(8);
							new sendername[MAX_PLAYER_NAME], string[144];
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "[BLACK LIST]: %s[%d] купил выход из ЧС организации", sendername, playerid);
							SendFMes(8, COLOR_LIGHTBLUE, string);
							Bl_Remove(playerid, 8);
						}
					}
					case 2:
					{
					    if(Bl_Info[playerid][Bl_onFrac][15])
						{
							if(GetMoney(playerid) < f_info [ 15 ] [ f_bl_config ] [ 1 ])
							{
								PlayerPlaySound(playerid, 5406, 0, 0, 0);
								SendErr(playerid, "У вас недостаточно денег");
								return 1;
							}
							SendInf(playerid, "Вы купили выход из ЧС");

							GiveMoney(playerid, -f_info [ 15 ] [ f_bl_config ] [ 1 ], "Выкупился из ЧС");
							frac_money[15] += f_info [ 15 ] [ f_bl_config ] [ 1 ];
							UpdateFractionStore(15);
							UpdateStoreGang(15);
							new sendername[MAX_PLAYER_NAME], string[144];
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "[BLACK LIST]: %s[%d] купил выход из ЧС организации", sendername, playerid);
							SendFMes(15, COLOR_LIGHTBLUE, string);
							Bl_Remove(playerid, 15);
						}
					}
					case 3:
					{
					    if(Bl_Info[playerid][Bl_onFrac][16])
						{
							if(GetMoney(playerid) < f_info [ 16 ] [ f_bl_config ] [ 1 ])
							{
								PlayerPlaySound(playerid, 5406, 0, 0, 0);
								SendErr(playerid, "У вас недостаточно денег");
								return 1;
							}
							SendInf(playerid, "Вы купили выход из ЧС");

							GiveMoney(playerid, -f_info [ 16 ] [ f_bl_config ] [ 1 ], "Выкупился из ЧС");
							frac_money[16] += f_info [ 16 ] [ f_bl_config ] [ 1 ];
							UpdateFractionStore(16);
							UpdateStoreGang(16);
							new sendername[MAX_PLAYER_NAME], string[144];
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "[BLACK LIST]: %s[%d] купил выход из ЧС организации", sendername, playerid);
							SendFMes(16, COLOR_LIGHTBLUE, string);
							Bl_Remove(playerid, 16);
						}
					}
				}
			}
			return 1;
		}
	case D_HEAL+500:
	    {
            if(!response) return 1;
			if(response)
			{
				if(p_info[playerid][data_GARAGE] == INVALID_GARAGE_ID) return SendErr(playerid, "У вас нет гаража");
				if(strval(inputtext) <= 0) return SendErr(playerid, "Недопустимое значение!");
				new h_class = strval(inputtext)*500;
				new ga = p_info[playerid][data_GARAGE];
				if(GARAGE_DATA[ga][g_DAY]+strval(inputtext) > 30) return SendErr(playerid, "Нельзя оплатить гараж на более 30 суток");
				if(h_class > GetMoney(playerid)) return SendErr(playerid, "У Вас недостаточно денег на руках");
				GiveMoney(playerid, -h_class, "Оплата гаража");
				GARAGE_DATA[ga][g_DAY] += strval(inputtext);
				PlayerPlaySound(playerid, 43000, 0.0, 0.0, 0.0);
				new message[45];
				format(message,sizeof(message),"Ваш гараж оплачен на %d дня/дней",GARAGE_DATA[ga][g_DAY]);
				SendClientMessage(playerid,0xFFCC00FF,message);
				
				SaveGarageData(ga);
			}
		}
	case 8952:
	    {
	        if(response)
			{
			    if(GetPVarInt(playerid, "arenda_took") > 0) return SendErr(playerid, "Вы уже арендовали мопед");
            	if(GetPVarInt(playerid, "check_arenda_moped")) return 1;
            	new Float:x,Float:y,Float:a,Float:z;
            	GetPlayerPos(playerid,x,y,z);
            	GetPlayerFacingAngle(playerid,a);
            	SetPVarInt(playerid, "arenda_took", CreateVehicle(462, x,y,z,a, 7,7, 300));
            	Fuel[GetPVarInt(playerid, "arenda_took")] = 100;
				Engine[GetPVarInt(playerid, "arenda_took")] = Lights[GetPVarInt(playerid, "arenda_took")] = IsLocked[GetPVarInt(playerid, "arenda_took")] = false;
            	PutPlayerInVehicle(playerid,GetPVarInt(playerid, "arenda_took"), 0);
				SetPVarInt(playerid, "check_arenda_moped", 1);
            	return 1;
			}
			else
			{
            	RemovePlayerFromVehicle(playerid);
				return 1;
			}
		}
	case D_FILL:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0:
				{
				    if(GetPlayerState(playerid) != 2) return SendErr(playerid, "Вы должны находится за рулем");
					if(IsAVel(GetPlayerVehicleID(playerid)) || IsAMoped(GetPlayerVehicleID(playerid))) return 1;
					if(Fuel[GetPlayerVehicleID(playerid)] >= 100) return SendErr(playerid, "Ваш бак полон");
					if(GetPVarInt(playerid,"fuel_show")) return 1;
					SetPVarInt(playerid,"fuel_show", true);
					
					//new vehicleid = GetPlayerVehicleID(playerid);
					new Float:cfuel = 0;

				    new step = 0;
					CreatePlayerFuelDraw(playerid);

					for(new Float:tFuel = 212.0; tFuel <= 422.0; tFuel += 10.5)
					{
						if((step * 5.0) == cfuel)
						{
							PlayerTextDrawTextSize(playerid,PTD_Fuel[playerid][0], tFuel, 0.0);
							SetPVarInt(playerid, "start_step", step);
							SetPVarFloat(playerid, "start_fuel", cfuel);
							SetPVarInt(playerid, "td_step", step);
							SetPVarFloat(playerid, "td_fuel", tFuel);
							format(STRING_GLOBAL, 64, "%.1f FUEL", cfuel);
							PlayerTextDrawSetString(playerid, PTD_Fuel[playerid][1], STRING_GLOBAL);
							break;
						}
						step++;
					}
					for(new s = 0; s < 8; s++)
					{
						TextDrawShowForPlayer(playerid, TD_Fuel[s]);
					}
					PlayerTextDrawShow(playerid, PTD_Fuel[playerid][0]);
					PlayerTextDrawShow(playerid, PTD_Fuel[playerid][1]);

					SelectTextDraw(playerid, 2051617500);
					return 1;
				}
				case 1:
				{
				    new newslot;
				    new till = BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bTill]*4;
					if(GetMoney(playerid) < till) return SendErr(playerid, "У вас не хватает денег");
					if(CheckMaxVes(playerid,49,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					GiveMoney(playerid, -till, "Покупка канистры");
					if(BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] > 0)
					{
						BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bMoneyHour] += till;
						BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] -= 10;
						BizzPay[GetPVarInt(playerid, "FuelBizzID")] += till;
						MysqlUpdateBizzInt(GetPVarInt(playerid, "FuelBizzID"), "bizzpay", BizzPay[GetPVarInt(playerid, "FuelBizzID")]);
						MysqlUpdateBizzInt(GetPVarInt(playerid, "FuelBizzID"), "product", BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct]);
					}
					PlayerItem1[playerid][newslot]=49;
					PlayerItem2[playerid][newslot]+=1;
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы купили канистру за %i рублей", till);
					SendClientMessage(playerid, COLOR_YELLOW, STRING_GLOBAL);
					DeletePVar(playerid,"FuelBizzID");
					SaveItem(playerid,newslot);
				}
				case 2:
				{
				    new newslot;
				    new till = BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bTill]*5;
					if(CheckMaxVes(playerid,48,1,newslot)==1)return SendInf(playerid, "У вас нет свободного места в инвентаре");
					if(GetMoney(playerid) < till) return SendErr(playerid, "У вас не хватает денег!");
					GiveMoney(playerid, -till, "Покупка инструментов");
					if(BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] > 0)
					{
						BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bMoneyHour] += till;
						BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct] -= 10;
						BizzPay[GetPVarInt(playerid, "FuelBizzID")] += till;
						MysqlUpdateBizzInt(GetPVarInt(playerid, "FuelBizzID"), "bizzpay", BizzPay[GetPVarInt(playerid, "FuelBizzID")]);
						MysqlUpdateBizzInt(GetPVarInt(playerid, "FuelBizzID"), "product", BizzInfo[GetPVarInt(playerid, "FuelBizzID")][bProduct]);
					}
					PlayerItem1[playerid][newslot]=48;
					PlayerItem2[playerid][newslot]+=1;

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, 128, "Вы купили набор инструментов за %i рублей", till);
					SendClientMessage(playerid, COLOR_YELLOW, STRING_GLOBAL);

					DeletePVar(playerid,"FuelBizzID");
					SaveItem(playerid,newslot);
				}
			}
		}
	case D_FILL+2:
	    {
	        new i = GetPVarInt(playerid, "FuelBizzID");
	        new step = GetPVarInt(playerid,"td_step");
			new Float:cfuel = GetPVarFloat(playerid,"start_fuel");
			if(!response) return 1;
			else if(Fuel[GetPlayerVehicleID(playerid)] + ((step * 5)-floatround(cfuel)) > 100)
			{
			    SendErr(playerid, "В бак не поместится более 100 л");
			    return 1;
			}
			else if(BizzInfo[i][bProduct] < ((step * 5)-floatround(cfuel)))
			{
			    SendErr(playerid, "На заправочной станции недостаточно топлива");
			    return 1;
			}
			else if(GetMoney(playerid) < ((step * 5)-floatround(cfuel)) * BizzInfo[i][bTill]*WorkSalary[15])
			{
				SendErr(playerid, "У вас недостаточно наличных для заправки");
				return 1;
			}
			else if(response)
			{
			    new price = ((step * 5)-floatround(cfuel)) * BizzInfo[i][bTill]*WorkSalary[15];
				if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
				{
				    price = floatround((((step * 5)-floatround(cfuel)) * BizzInfo[i][bTill]*WorkSalary[15])*50/100);
				    SendClientMessage(playerid, COLOR_YELLOW, "* Для Вашей ОПГ Скидка 50%%");
				}
				GiveMoney(playerid, -price, "Заправка авто");
				
				BizzInfo[i][bMoneyHour] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= ((step * 5)-floatround(cfuel));
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				
				FracBank[9] += price;
				MysqlUpdateOtherInt("sfnbank", FracBank[9]);

				SendInf(playerid,"Идет заправка автомобиля");
				
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid),(Engine[GetPlayerVehicleID(playerid)])?(false):(true),lights,alarm,doors,bonnet,boot,objective);
				Engine[GetPlayerVehicleID(playerid)] = (Engine[GetPlayerVehicleID(playerid)])?(false):(true);
				GameTextForPlayer(playerid, (Engine[GetPlayerVehicleID(playerid)]) ? ("~w~ENGINE ~g~ON") : ("~w~ENGINE ~r~OFF"), 5000, 6);
				
				SetTimerEx("FuelCar", 1000, 0, "i", playerid);
			}
			TD_EndFuel(playerid);
			DeletePVar(playerid, "start_fuel");
			return 1;
	    }
	case dialog_GOZAEZD:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        if(cartrack_open == true) return SendErr(playerid, "Мероприятие уже идет");
		        GOZaezd();
		    }
		}
	case dialog_GOCS:
		{
		    if(!response) return 1;
		    if(response)
		    {
		        if(cs_open == true) return SendErr(playerid, "Мероприятие уже идет");
		        GOCS();
		    }
		}
	case 6500:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
					    SetPVarInt(playerid, "deleting_tune", 1);
						ShowPlayerDialogEx(playerid, 6501, DIALOG_STYLE_MSGBOX, "{ebec86}>> Удаление тюнинга", "{FFFFFF}Вы действительно хотите удалить весь тюнинг?", "Удалить", "Отмена");
					}
				case 1:
					{
					    new i = GetPVarInt(playerid,"CTObizzid");
						GiveMoney(playerid, -100, "Ремонт в СТО");

						BizzInfo[i][bMoneyHour] += 100;
						BizzPay[i] += 100;
						MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);

						RepairVehicle(GetPlayerVehicleID(playerid));
						SendInf(playerid, "Вы отремонтировали Ваше транспортное средство");
						ShowDetals(playerid);
					}
                case 2:
					{
						new veh_id = GetPlayerVehicleID ( playerid ) ;
						SetPVarInt ( playerid, "ptuning_opened", 1 ) ;
						for ( new i = 0; i < 27; i ++ )
						{
							TextDrawShowForPlayer ( playerid, td_performance [ i ] ) ;
						}
						SelectTextDraw ( playerid, 0xB0C4DEFF ) ;

						TogglePlayerControllable ( playerid, false ) ;

						ptd_performance [ playerid ] [ 0 ] = CreatePlayerTextDraw(playerid, 44.000000, 277.000000, "LD_SPAC:white");
						PlayerTextDrawBackgroundColor(playerid, ptd_performance [ playerid ] [ 0 ], 0);
						PlayerTextDrawFont(playerid, ptd_performance [ playerid ] [ 0 ], 4);
						PlayerTextDrawLetterSize(playerid, ptd_performance [ playerid ] [ 0 ], 0.500000, 1.000000);
						PlayerTextDrawColor(playerid, ptd_performance [ playerid ] [ 0 ], 10486015);
						PlayerTextDrawSetOutline(playerid, ptd_performance [ playerid ] [ 0 ], 0);
						PlayerTextDrawSetProportional(playerid, ptd_performance [ playerid ] [ 0 ], 1);
						PlayerTextDrawSetShadow(playerid, ptd_performance [ playerid ] [ 0 ], 1);
						PlayerTextDrawUseBox(playerid, ptd_performance [ playerid ] [ 0 ], 1);
						PlayerTextDrawBoxColor(playerid, ptd_performance [ playerid ] [ 0 ], 255);
						PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 0 ], 11.000000, 0.000000);
						PlayerTextDrawSetSelectable(playerid, ptd_performance [ playerid ] [ 0 ], 0);

						new Float:td_y = - VehInfos [ veh_id - 1 ] [ v_engine_boost ] * 328.57 ;
						ptd_performance [ playerid ] [ 1 ] = CreatePlayerTextDraw(playerid, 44.000000, 277.000000, "LD_SPAC:white");
						PlayerTextDrawBackgroundColor(playerid, ptd_performance [ playerid ] [ 1 ], 0);
						PlayerTextDrawFont(playerid, ptd_performance [ playerid ] [ 1 ], 4);
						PlayerTextDrawLetterSize(playerid, ptd_performance [ playerid ] [ 1 ], 0.500000, 1.000000);
						PlayerTextDrawColor(playerid, ptd_performance [ playerid ] [ 1 ], 557867519);
						PlayerTextDrawSetOutline(playerid, ptd_performance [ playerid ] [ 1 ], 0);
						PlayerTextDrawSetProportional(playerid, ptd_performance [ playerid ] [ 1 ], 1);
						PlayerTextDrawSetShadow(playerid, ptd_performance [ playerid ] [ 1 ], 1);
						PlayerTextDrawUseBox(playerid, ptd_performance [ playerid ] [ 1 ], 1);
						PlayerTextDrawBoxColor(playerid, ptd_performance [ playerid ] [ 1 ], 255);
						PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 1 ], 11.000000, td_y ) ;
						PlayerTextDrawSetSelectable(playerid, ptd_performance [ playerid ] [ 1 ], 0);

						ptd_performance [ playerid ] [ 2 ] = CreatePlayerTextDraw(playerid, 85.000000, 277.000000, "LD_SPAC:white");
						PlayerTextDrawBackgroundColor(playerid, ptd_performance [ playerid ] [ 2 ], 0);
						PlayerTextDrawFont(playerid, ptd_performance [ playerid ] [ 2 ], 4);
						PlayerTextDrawLetterSize(playerid, ptd_performance [ playerid ] [ 2 ], 0.500000, 1.000000);
						PlayerTextDrawColor(playerid, ptd_performance [ playerid ] [ 2 ], 10486015);
						PlayerTextDrawSetOutline(playerid, ptd_performance [ playerid ] [ 2 ], 0);
						PlayerTextDrawSetProportional(playerid, ptd_performance [ playerid ] [ 2 ], 1);
						PlayerTextDrawSetShadow(playerid, ptd_performance [ playerid ] [ 2 ], 1);
						PlayerTextDrawUseBox(playerid, ptd_performance [ playerid ] [ 2 ], 1);
						PlayerTextDrawBoxColor(playerid, ptd_performance [ playerid ] [ 2 ], 255);
						PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 2 ], 11.000000, 0.000000);
						PlayerTextDrawSetSelectable(playerid, ptd_performance [ playerid ] [ 2 ], 0);

						td_y = - VehInfos [ veh_id - 1 ] [ v_brake_boost ] * 12.7777 ;
						ptd_performance [ playerid ] [ 3 ] = CreatePlayerTextDraw(playerid, 85.000000, 277.000000, "LD_SPAC:white");
						PlayerTextDrawBackgroundColor(playerid, ptd_performance [ playerid ] [ 3 ], 0);
						PlayerTextDrawFont(playerid, ptd_performance [ playerid ] [ 3 ], 4);
						PlayerTextDrawLetterSize(playerid, ptd_performance [ playerid ] [ 3 ], 0.500000, 1.000000);
						PlayerTextDrawColor(playerid, ptd_performance [ playerid ] [ 3 ], 557867519);
						PlayerTextDrawSetOutline(playerid, ptd_performance [ playerid ] [ 3 ], 0);
						PlayerTextDrawSetProportional(playerid, ptd_performance [ playerid ] [ 3 ], 1);
						PlayerTextDrawSetShadow(playerid, ptd_performance [ playerid ] [ 3 ], 1);
						PlayerTextDrawUseBox(playerid, ptd_performance [ playerid ] [ 3 ], 1);
						PlayerTextDrawBoxColor(playerid, ptd_performance [ playerid ] [ 3 ], 255);
						PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 3 ], 11.000000, td_y ) ;
						PlayerTextDrawSetSelectable(playerid, ptd_performance [ playerid ] [ 3 ], 0);

						ptd_performance [ playerid ] [ 4 ] = CreatePlayerTextDraw(playerid, 124.000000, 277.000000, "LD_SPAC:white");
						PlayerTextDrawBackgroundColor(playerid, ptd_performance [ playerid ] [ 4 ], 0);
						PlayerTextDrawFont(playerid, ptd_performance [ playerid ] [ 4 ], 4);
						PlayerTextDrawLetterSize(playerid, ptd_performance [ playerid ] [ 4 ], 0.500000, 1.000000);
						PlayerTextDrawColor(playerid, ptd_performance [ playerid ] [ 4 ], 10486015);
						PlayerTextDrawSetOutline(playerid, ptd_performance [ playerid ] [ 4 ], 0);
						PlayerTextDrawSetProportional(playerid, ptd_performance [ playerid ] [ 4 ], 1);
						PlayerTextDrawSetShadow(playerid, ptd_performance [ playerid ] [ 4 ], 1);
						PlayerTextDrawUseBox(playerid, ptd_performance [ playerid ] [ 4 ], 1);
						PlayerTextDrawBoxColor(playerid, ptd_performance [ playerid ] [ 4 ], 255);
						PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 4 ], 11.000000, 0.000000);
						PlayerTextDrawSetSelectable(playerid, ptd_performance [ playerid ] [ 4 ], 0);

						td_y = - VehInfos [ veh_id - 1 ] [ v_stability_boost ] ;
						ptd_performance [ playerid ] [ 5 ] = CreatePlayerTextDraw(playerid, 124.000000, 277.000000, "LD_SPAC:white");
						PlayerTextDrawBackgroundColor(playerid, ptd_performance [ playerid ] [ 5 ], 0);
						PlayerTextDrawFont(playerid, ptd_performance [ playerid ] [ 5 ], 4);
						PlayerTextDrawLetterSize(playerid, ptd_performance [ playerid ] [ 5 ], 0.500000, 1.000000);
						PlayerTextDrawColor(playerid, ptd_performance [ playerid ] [ 5 ], 557867519);
						PlayerTextDrawSetOutline(playerid, ptd_performance [ playerid ] [ 5 ], 0);
						PlayerTextDrawSetProportional(playerid, ptd_performance [ playerid ] [ 5 ], 1);
						PlayerTextDrawSetShadow(playerid, ptd_performance [ playerid ] [ 5 ], 1);
						PlayerTextDrawUseBox(playerid, ptd_performance [ playerid ] [ 5 ], 1);
						PlayerTextDrawBoxColor(playerid, ptd_performance [ playerid ] [ 5 ], 255);
						PlayerTextDrawTextSize(playerid, ptd_performance [ playerid ] [ 5 ], 11.000000, td_y ) ;
						PlayerTextDrawSetSelectable(playerid, ptd_performance [ playerid ] [ 5 ], 0);

						for ( new i = 0 ; i < 6 ; i ++ )
						{
							PlayerTextDrawShow ( playerid, ptd_performance [ playerid ] [ i ] ) ;
						}
						return 1 ;
					}
				case 3:
				    {
				        new bizzid = GetPVarInt(playerid,"CTObizzid");
						new till = BizzInfo[bizzid][bTill];

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"Стоимость перекраски: {f0e86b}%d{FFFFFF} рублей. Для выхода нажмите 'ESC' или введите '/tupdate'", till*500);
						SendClientMessage(playerid,COLOR_WHITE,STRING_GLOBAL);
						
						ShowPlayerDialogEx(playerid, D_CTO+2, DIALOG_STYLE_MSGBOX, "{ebec86}>> Перекраска", "{FFFFFF}Выберите способ перекраски:", "ID", "Палитра");
					}
				default:
					{
					    STRING_GLOBAL = "";
					    new i = GetPVarInt(playerid,"CTObizzid");
						new till = BizzInfo[i][bTill];
						SetPVarInt(playerid, "cost", till*AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-4]][Cost]);
						SetPVarInt(playerid, "detals", AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-4]][idcomp]);

                        AddVehicleComponent(GetPlayerVehicleID(playerid), AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-4]][idcomp]);

						format(STRING_GLOBAL, 200, "{FFFFFF}Вы хотите установить деталь {f0e86b}%s{FFFFFF} \"{f0e86b}%s{FFFFFF}\"\nСтоимость установки детали: {f0e86b}%i{FFFFFF} рублей", AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-4]][Type],AllTuningComponentsInfo[AwtomasMassiveID[playerid][listitem-4]][Name], GetPVarInt(playerid, "cost"));
						ShowPlayerDialogEx(playerid, 6501, DIALOG_STYLE_MSGBOX, "{ebec86}>> Установка детали", STRING_GLOBAL, "Установить", "Отмена");
					}
				}
				return 1;
			}
			if(!GetPVarInt(playerid, "UsedCTO")) return 0;
			new bizzid = GetPVarInt(playerid,"CTObizzid");
			new pveh = GetPlayerVehicleID(playerid);
			SetVehiclePos(pveh,BizzInfo[bizzid][bEntrx],BizzInfo[bizzid][bEntry],BizzInfo[bizzid][bEntrz]);
			DeletePVar(playerid,"UsedCTO");
			AC_SetVehicleZAngle(pveh,270.9845);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetVehicleVirtualWorld(pveh,0);
			LinkVehicleToInterior(pveh,0);
			PutPlayerInVehicle(playerid, pveh, 0);
			TogglePlayerControllable(playerid,true);
			SetCameraBehindPlayer(playerid);
			speedometr_status(playerid, true);
		}
    case 6501:
		{
			if(response)
			{
			    new i = GetPVarInt(playerid,"CTObizzid");
			    new _v_id = GetPlayerVehicleID(playerid);
			    if(GetPVarInt(playerid, "deleting_tune") == 1)
				{
				    SendInf(playerid, "Весь тюнинг с транспортного средства успешно удалён");
                    for(new s; s < 13; s++)
					{
					    RemoveVehicleComponent(GetPlayerVehicleID(playerid), ownable_car[playerid][v_veh_coms][s]);
						ownable_car[playerid][v_veh_coms][s] = 0;
					}
                    SaveVehicleTuning(playerid);
                    
                    for(new j; j < 5; j++)
					{
					    VehInfos [ _v_id - 1 ] [ v_pt_engine ] [ j ] = 0;
					    VehInfos [ _v_id - 1 ] [ v_pt_brake ] [ j ] = 0;
					    VehInfos [ _v_id - 1 ] [ v_pt_stability ] [ j ] = 0;
					}
					VehInfos [ _v_id - 1 ] [ v_engine_boost ] = 0;
					VehInfos [ _v_id - 1 ] [ v_brake_boost ] = 0;
					VehInfos [ _v_id - 1 ] [ v_stability_boost ] = 0;

					STRING_GLOBAL = "";
					format ( STRING_GLOBAL, 512, "UPDATE `ownable_cars` SET `v_stab_details` = '0|0|0|0|0', `v_stability_boost` = '0', `v_brake_details` = '0|0|0|0|0', `v_brake_boost` = '0', `v_eng_details` = '0|0|0|0|0', `v_engine_boost` = '0' WHERE `id`='%d' LIMIT 1",
					ownable_car[playerid][v_sql] ) ;
					mysql_tquery ( dbHandle, STRING_GLOBAL, "", "" ) ;
					
                    ShowDetals(playerid);
                    DeletePVar(playerid, "deleting_tune");
                    return 1;
				}
				if(BizzInfo[i][bProduct] < 100)
				{
					RemoveVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"detals"));
					DeletePVar(playerid,"cost");
					DeletePVar(playerid,"detals");
					SendErr(playerid, "У автомастерской недостаточно продуктов");
					ShowDetals(playerid);
					return 1;
				}
				if(GetMoney(playerid) < GetPVarInt(playerid,"cost"))
				{
					RemoveVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"detals"));

					DeletePVar(playerid,"cost");
					DeletePVar(playerid,"detals");
					SendErr(playerid, "У вас недостаточно средств");
					ShowDetals(playerid);
					return 1;
				}
				SendInf(playerid, "Деталь успешно установлена на ваше транспортное средство");
				SaveVehicleTuning(playerid);
				
				GiveMoney(playerid, -GetPVarInt(playerid,"cost"), "Деталь тюнинга");
				
				BizzInfo[i][bMoneyHour] += GetPVarInt(playerid,"cost");
				BizzInfo[i][bProduct] -= 100;
				BizzPay[i] += GetPVarInt(playerid,"cost");
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				
				DeletePVar(playerid,"cost");
				DeletePVar(playerid,"detals");
				ShowDetals(playerid);
			}
			RemoveVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"detals"));
			DeletePVar(playerid,"cost");
			DeletePVar(playerid,"detals");
			ShowDetals(playerid);
		}
	case dKrup:
		{
			if(!response) return 1;
			SendErr(playerid, (GetPVarInt(playerid,"krup")) ? ("Вы закончили свою работу крупье") : ("Вы устроились на работу крупье. С каждой игры вам будет идти процент"));
			if(!GetPVarInt(playerid,"krup"))
			{
				SetPVarInt(playerid,"oldskinkrup",GetPlayerSkin(playerid));
				SendInf(playerid, "Чтобы сделать ставку, подойдите к столу и нажмите {f0e86b}'H'{FFFFFF}. После чего Используйте значение ставки");
			}
			/*new skin_fix = (p_info[playerid][pSex] == 1) ? (171) : (194);
			SetPlayerSkin(playerid,(GetPVarInt(playerid,"krup")) ? (GetPVarInt(playerid,"oldskinkrup")) : (skin_fix));*/
			SetPVarInt(playerid,"krup",(GetPVarInt(playerid,"krup")) ? (false) : (true));
			return 1;
		}
	case dFly:
		{
			LoadTexture(playerid);
			SetPlayerPos(playerid, 2137.7717,-1969.9458,258.2488);
			SetPlayerFacingAngle(playerid, 266.2885);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			GivePlayerWeapon(playerid,46,1);
			GivePlayerMoney(playerid, -10000);
			GameTextForPlayer(playerid,"~G~-10000p",3000,5);
		}	
	case dCasino1:
		{
			if(!response) return 1;
			new Table = GetPVarInt(playerid, "EnterDiceTable");
			for(new A; A != 5; A++) if(CasinoGamesInfo[Table][CG_PlayerID][A] == playerid) CasinoGamesInfo[Table][CG_PlayerID][A] = -1;
			CasinoGamesInfo[Table][CG_PlayerStaked][playerid] = false;
			CasinoGamesInfo[Table][CG_PlayerDropDice][playerid] = 0;
			GiveMoney(playerid, CasinoGamesInfo[Table][CG_DiceStake], "Рулетка");
			SendInf(playerid, "Вы отменили ставку и забрали свои деньги");
		}
	case dCasino2:
		{
			if(!response) return 1;
			for(new A; A != 37; A++)
			{
				format(STRING_GLOBAL, 7, "- %d ", A);
				if(!strcmp(inputtext, STRING_GLOBAL, false, 4)) SetPVarInt(playerid, "EnterRouletteStake", A);
				if(!strcmp(inputtext, "- Красный", false, 9)) SetPVarInt(playerid, "EnterRouletteStake", 37);
				if(!strcmp(inputtext, "- Чёрный", false, 8)) SetPVarInt(playerid, "EnterRouletteStake", 38);
			}
			ShowPlayerDialogEx(playerid, dCasino3, DIALOG_STYLE_LIST, "{ebec86}>> Ставка", "- Сделать ставку\n- Забрать деньги", "Выбрать", "Назад");
		}
	case dCasino3:
		{
			if(response)
			{
				if(!listitem) ShowPlayerDialogEx(playerid, dCasino4, DIALOG_STYLE_INPUT, "{ebec86}>> Сделать ставку", "{FFFFFF}Используйте сумму, которую вы хотите поставить:", "Принять", "Назад");
				else ShowPlayerDialogEx(playerid, 188, DIALOG_STYLE_INPUT, "{ebec86}>> Забрать деньги", "{FFFFFF}Используйте сумму, которую вы хотите забрать:", "Принять", "Назад");
			}
			else
			{
				new Table = GetPVarInt(playerid, "EnterDiceTable");
				STRING_GLOBAL = "";
				for(new A; A != 39; A++)
				{
					if(A >= 0 && A <= 36) format(STRING_GLOBAL, 128, "%s- %d [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, A, CG_RouletteStake[playerid][Table][A]);
					if(A == 37) format(STRING_GLOBAL, 128, "%s- Красный [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, CG_RouletteStake[playerid][Table][A]);
					if(A == 38) format(STRING_GLOBAL, 128, "%s- Чёрный [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, CG_RouletteStake[playerid][Table][A]);
				}
				ShowPlayerDialogEx(playerid, dCasino2, DIALOG_STYLE_LIST, "{ebec86}>> Ваши ставки", STRING_GLOBAL, "Выбрать", "Выйти");
			}
		}
	case dCasino4:
		{
			if(response)
			{
				new Amount = strval(inputtext);
				new Table = GetPVarInt(playerid, "EnterDiceTable");
				if(!strlen(inputtext) || Amount < 1) return ShowPlayerDialogEx(playerid, dCasino4, DIALOG_STYLE_INPUT, "{ebec86}>> Сделать ставку", "{FFFFFF}Используйте сумму, которую вы хотите поставить:", "Принять", "Назад");
				if(CG_RouletteStake[playerid][Table][GetPVarInt(playerid, "EnterRouletteStake")]+Amount > 60000) return ShowPlayerDialogEx(playerid, dCasino4, DIALOG_STYLE_INPUT, "{ebec86}>> Сделать ставку", "{FFFFFF}Используйте сумму, которую вы хотите поставить:\n\n{AFAFAF}* Максимальная ставка: 60.000 рублей", "Принять", "Назад");
				if(GetMoney(playerid) < Amount) return ShowPlayerDialogEx(playerid, dCasino4, DIALOG_STYLE_INPUT, "{ebec86}>> Сделать ставку", "{FFFFFF}Используйте сумму, которую вы хотите поставить:\n\n{AFAFAF}* У вас недостаточно денег", "Принять", "Назад");
				CG_RouletteStake[playerid][Table][GetPVarInt(playerid, "EnterRouletteStake")] += Amount;
				GiveMoney(playerid, -Amount, "Ставка рулетка");
				SetPlayerChatBubble(playerid, "сделал(а) ставку", COLOR_PURPLE, 5, 7500);
				STRING_GLOBAL = "";
				for(new A; A != 5; A++)
				{
					if(CasinoGamesInfo[Table][CG_PlayerID][A] == playerid) break;
					if(CasinoGamesInfo[Table][CG_PlayerID][A] == -1)
					{
						CasinoGamesInfo[Table][CG_PlayerID][A] = playerid;
						break;
					}
				}
				for(new A; A != 39; A++)
				{
					if(A >= 0 && A <= 36) format(STRING_GLOBAL, 128, "%s- %d [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, A, CG_RouletteStake[playerid][Table][A]);
					if(A == 37) format(STRING_GLOBAL, 128, "%s- Красный [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, CG_RouletteStake[playerid][Table][A]);
					if(A == 38) format(STRING_GLOBAL, 128, "%s- Чёрный [{f0e86b}%d{FFFFFF} рублей]\n", STRING_GLOBAL, CG_RouletteStake[playerid][Table][A]);
				}
				ShowPlayerDialogEx(playerid, dCasino2, DIALOG_STYLE_LIST, "{ebec86}>> Ваши ставки", STRING_GLOBAL, "Выбрать", "Выйти");
			}
			else ShowPlayerDialogEx(playerid, dCasino3, DIALOG_STYLE_LIST, "{ebec86}>> Ставка", "- Сделать ставку\n- Забрать деньги", "Выбрать", "Назад");
		}
	case dRank:
		{
			if(!response) return 1;
			if(listitem == -1) return 1;

			new rank_id = GetPVarInt(playerid,"id_giverank");
			
			format(STRING_GLOBAL, 300, "%s изменил ранг %s c %d на %d", GetName(playerid), GetName(rank_id), p_info[rank_id][pRank], listitem + 1);
			WriteLogs(p_info[rank_id][pMember], TYPE_LOG_AGIVERANK, STRING_GLOBAL);

			if(p_info[rank_id][pRank] + listitem + 1 > p_info[rank_id][pRank])
			{
			    format(STRING_GLOBAL, 100, "Вы повысили игрока "cWHITE"%s{ebec86} в должности до "cWHITE"%s", p_info[rank_id][pName], GetRank(p_info[playerid][pMember], listitem + 1));
				SendClientMessage(playerid, 0xa24646FF, STRING_GLOBAL);

				format(STRING_GLOBAL, 100, "Ваш ранг в организации был повышен "cWHITE"%s{ebec86} до "cWHITE"%s", p_info[playerid][pName], GetRank(p_info[playerid][pMember], listitem +  1));
				SendClientMessage(rank_id, 0xa24646FF, STRING_GLOBAL);
			}
			else
			{
			    format(STRING_GLOBAL, 100, "Вы понизили игрока "cWHITE"%s{ebec86} в должности до "cWHITE"%s", p_info[rank_id][pName], GetRank(p_info[playerid][pMember], listitem + 1));
				SendClientMessage(playerid, 0xa24646FF, STRING_GLOBAL);

				format(STRING_GLOBAL, 100, "Ваш ранг в организации был понижен "cWHITE"%s{ebec86} до "cWHITE"%s", p_info[playerid][pName], GetRank(p_info[playerid][pMember], listitem +  1));
				SendClientMessage(rank_id, 0xa24646FF, STRING_GLOBAL);
			}

			p_info[rank_id][pRank] = listitem + 1;
			MysqlUpdatePlayerInt(rank_id, "rank", p_info[rank_id][pRank]);

			DeletePVar(playerid, "id_giverank");
			return 1;
		}
	case 7168:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext), newslot;
			if(put < 1 || put > 500) return ShowPlayerDialogEx(playerid,7168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(frac_metall[p_info[playerid][pMember]] < put) return ShowPlayerDialogEx(playerid,7168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно металла","Взять","Назад");
            if(CheckMaxVes(playerid, 69, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			frac_metall[p_info[playerid][pMember]] -= put;
			
			PlayerItem1[playerid][newslot]=69;
			PlayerItem2[playerid][newslot]+=put;
			SaveItem(playerid, newslot);

			format(STRING_GLOBAL, 128, "%s [id %d] взял(а) с склада {3399FF}%i кг{66CC00} металла",p_info[playerid][pName], playerid, put);
			SendFMes(p_info[playerid][pMember], 0x66CC00FF, STRING_GLOBAL);

			UpdateStoreGang(p_info[playerid][pMember]);
			UpdateFractionStore(p_info[playerid][pMember]);
			return 1;
		}
  		case dPatronGet:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext), newslot;
			if(put < 1 || put > 500) return ShowPlayerDialogEx(playerid,dPatronGet,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(frac_patron[p_info[playerid][pMember]] < put) return ShowPlayerDialogEx(playerid,dPatronGet,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно патронов","Взять","Назад");
            if(CheckMaxVes(playerid, 42, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			frac_patron[p_info[playerid][pMember]] -= put;
			
			PlayerItem1[playerid][newslot]=42;
			PlayerItem2[playerid][newslot]+=put;
			SaveItem(playerid, newslot);

			format(STRING_GLOBAL, 128, "%s [id %d] взял(а) с склада {3399FF}%i шт{66CC00} патрон",p_info[playerid][pName], playerid, put);
			SendFMes(p_info[playerid][pMember], 0x66CC00FF, STRING_GLOBAL);

			UpdateFractionStore(p_info[playerid][pMember]);
			UpdateStoreGang(p_info[playerid][pMember]);
			return 1;
		}
		case dPatronPut:
		{
  			if(!response) return GangMenu(playerid);
  			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==42){ok=s;break;}
			}
			new put = strval(inputtext);
			if(put < 1) return ShowPlayerDialogEx(playerid,dPatronPut,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,dPatronPut,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно патронов с собой","Положить","Назад");
			if((frac_patron[p_info[playerid][pMember]] + put) > 25000) return SendErr(playerid, "Нельзя положить больше");
			frac_patron[p_info[playerid][pMember]] += put;

			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok]=0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);

			format(STRING_GLOBAL, 128, "%s [id %d] положил(а) на склад {3399FF}%i шт{66CC00} патрон",p_info[playerid][pName], playerid, put);
			SendFMes(p_info[playerid][pMember], 0x66CC00FF, STRING_GLOBAL);

			UpdateFractionStore(p_info[playerid][pMember]);
			UpdateStoreGang(p_info[playerid][pMember]);
		    return 1;
		}
		case dDrugsGet:
		{
			if(!response) return GangMenu(playerid);
			new put = strval(inputtext), newslot;
			if(put < 1 || put > 500 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,dDrugsGet,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(frac_drugs[p_info[playerid][pMember]] < put) return ShowPlayerDialogEx(playerid,dDrugsGet,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно наркотиков","Взять","Назад");
            if(CheckMaxVes(playerid, 44, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			frac_drugs[p_info[playerid][pMember]] -= put;

			PlayerItem1[playerid][newslot] = 44;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid, newslot);

   			format(STRING_GLOBAL, 128, "%s [id %d] взял(а) с склада {3399FF}%i г{66CC00} наркотиков",p_info[playerid][pName], playerid, put);
			SendFMes(p_info[playerid][pMember], 0x66CC00FF, STRING_GLOBAL);

			UpdateFractionStore(p_info[playerid][pMember]);
			UpdateStoreGang(p_info[playerid][pMember]);
			return 1;
		}
		case dDrugsPut:
		{
  			if(!response) return GangMenu(playerid);
  			
  			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==44){ok=s;break;}
			}
			
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,dDrugsPut,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,dDrugsPut,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно наркотиков с собой","Положить","Назад");
            if((frac_drugs[p_info[playerid][pMember]] + put) > 20000) return SendErr(playerid, "Нельзя положить больше");
			frac_drugs[p_info[playerid][pMember]] += put;
		
		    if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok] = 0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);

			format(STRING_GLOBAL, 128, "%s [id %d] положил(а) на склад {3399FF}%i г{66CC00} наркотиков",p_info[playerid][pName], playerid, put);
			SendFMes(p_info[playerid][pMember], 0x66CC00FF, STRING_GLOBAL);

			UpdateFractionStore(p_info[playerid][pMember]);
			UpdateStoreGang(p_info[playerid][pMember]);
		    return 1;
		}
		case 7169:
		{
			if(!response) return GangMenu(playerid);
			
			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==69){ok=s;break;}
			}
			
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,7169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,7169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно металла с собой","Положить","Назад");
            if((frac_metall[p_info[playerid][pMember]] + put) > 30000) return SendErr(playerid, "Нельзя положить больше");
			frac_metall[p_info[playerid][pMember]] +=put;
			
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok]=0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);

			format(STRING_GLOBAL, 128, "%s [id %d] положил(а) на склад {3399FF}%i кг{66CC00} металла",p_info[playerid][pName], playerid, put);
			SendFMes(p_info[playerid][pMember], 0x66CC00FF, STRING_GLOBAL);

			UpdateStoreGang(p_info[playerid][pMember]);
			UpdateFractionStore(p_info[playerid][pMember]);
			return 1;
		}
		case 7171:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialogEx(playerid,dDrugsPut,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 1: ShowPlayerDialogEx(playerid,dPatronPut,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 2: ShowPlayerDialogEx(playerid,7169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 3: ShowPlayerDialogEx(playerid,1135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 4: ShowPlayerDialogEx(playerid,dDrugsGet,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 5:	ShowPlayerDialogEx(playerid,dPatronGet,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 6:	ShowPlayerDialogEx(playerid,7168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 7: ShowPlayerDialogEx(playerid,1136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
			}
			return 1;
		}
		case 1135:
		{
   			if(!response) return GangMenu(playerid);
			new put = strval(inputtext);
			if(put < 1 || put >= MONEY_LIMIT || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,1135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
   			if(p_info[playerid][pCash] < put) return ShowPlayerDialogEx(playerid,1135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно денег с собой","Положить","Назад");
			frac_money[p_info[playerid][pMember]] += put;
			GiveMoney(playerid, -put, "Положил на склад");
			MysqlUpdatePlayerInt(playerid,"cash",p_info[playerid][pCash]);

			format(STRING_GLOBAL, 128, "%s [id %d] положил(а) на склад {3399FF}%i{66CC00} рублей",p_info[playerid][pName], playerid, put);
			SendFMes(p_info[playerid][pMember], 0x66CC00FF, STRING_GLOBAL);
			
			format(STRING_GLOBAL, 128, "%s положил на склад %d рублей", p_info[playerid][pName], put);
			WriteLogs(p_info[playerid][pMember], TYPE_LOG_OBWYAK, STRING_GLOBAL);

			UpdateFractionStore(p_info[playerid][pMember]);
			UpdateStoreGang(p_info[playerid][pMember]);
		    return 1;
		}
  		case 1136:
		{
   			if(!response) return GangMenu(playerid);
   			if(p_info[playerid][pRank] < FractionRank[p_info[playerid][pMember]-1]-1) return SendErr(playerid, "Доступно только лидерам или заместителям");
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,1136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
   			if(frac_money[p_info[playerid][pMember]] < put) return ShowPlayerDialogEx(playerid,1136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно денег","Взять","Назад");
			frac_money[p_info[playerid][pMember]] -= put;
			GiveMoney(playerid, put, "Взял со склада");
			MysqlUpdatePlayerInt(playerid,"cash",p_info[playerid][pCash]);

			format(STRING_GLOBAL, 128, "%s [id %d] взял(а) с склада {3399FF}%i{66CC00} рублей",p_info[playerid][pName], playerid, put);
			SendFMes(p_info[playerid][pMember], 0x66CC00FF, STRING_GLOBAL);
			
			format(STRING_GLOBAL, 128, "%s [id %d] взял(а) с склад %i рублей", p_info[playerid][pName], playerid, put);
			SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
			
			format(STRING_GLOBAL, 128, "%s взял со склада %d рублей", p_info[playerid][pName], put);
			WriteLogs(p_info[playerid][pMember], TYPE_LOG_OBWYAK, STRING_GLOBAL);

			UpdateFractionStore(p_info[playerid][pMember]);
			UpdateStoreGang(p_info[playerid][pMember]);
		    return 1;
		}
	case dLeaderMenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					for(new i = TOTALVEH; i > 0; i --)
					{
						if(VehInfo[i][vFraction] != p_info[playerid][pMember]) continue;
						if(IsVehicleOccupied(i)) continue;
						AC_SetVehicleToRespawn(i);
					}
					format(STRING_GLOBAL,92,"[L] %s %s заспавнил незанятые машины", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]),p_info[playerid][pName]);
					SendFMes(p_info[playerid][pMember], COLOR_LIGHTRED, STRING_GLOBAL);
				}
			case 1..3:
				{
					STRING_GLOBAL = "";
					if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
					for(new i=1; i<=FractionRank[p_info[playerid][pMember]-1]-1; i++)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%i. %s%s\n", STRING_GLOBAL,i,(i==gFractionRank[p_info[playerid][pMember]-1][listitem-1])?("{ebec86}"):(""cWHITE""),GetRank(p_info[playerid][pMember],i));
					}
					SetPVarInt(playerid,"leader_rank", listitem);
					ShowPlayerDialogEx(playerid,dLeaderRank,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать", "Закрыть");
				}
            case 4:
				{
					STRING_GLOBAL = "";
				    if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
					for(new i=1; i<=FractionRank[p_info[playerid][pMember]-1]-1; i++)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%i. %s%s\n", STRING_GLOBAL,i,(i==gFractionRank[p_info[playerid][pMember]-1][listitem-1])?("{ebec86}"):(""cWHITE""),GetRank(p_info[playerid][pMember],i));
					}
					SetPVarInt(playerid,"leader_rank", listitem);
					ShowPlayerDialogEx(playerid,dLeaderRank,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать", "Закрыть");
				}
			case 5:
				{
					if(IsAMafia(playerid))
					{
					    STRING_GLOBAL = "";
					    if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						for(new i=1; i<=FractionRank[p_info[playerid][pMember]-1]-1; i++)
						{
							format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%i. %s%s\n", STRING_GLOBAL,i,(i==gFractionRank[p_info[playerid][pMember]-1][listitem-1])?("{ebec86}"):(""cWHITE""),GetRank(p_info[playerid][pMember],i));
						}
						SetPVarInt(playerid,"leader_rank", listitem);
						ShowPlayerDialogEx(playerid,dLeaderRank,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать", "Закрыть");
					}
					else
					{
					    STRING_GLOBAL = "";
						if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						for(new i=1; i<=FractionRank[p_info[playerid][pMember]-1]-1; i++)
						{
							format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%i. %s%s\n", STRING_GLOBAL, i, (""cWHITE""), GetRank(p_info[playerid][pMember], i));
						}
						ShowPlayerDialogEx(playerid,dEditRank,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать","Закрыть");
					}
					return 1;
				}
            case 6:
				{
				    if(IsAMafia(playerid))
					{
						STRING_GLOBAL = "";
						if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						for(new i=1; i<=FractionRank[p_info[playerid][pMember]-1]-1; i++)
						{
							format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%i. %s%s\n", STRING_GLOBAL, i, (""cWHITE""), GetRank(p_info[playerid][pMember], i));
						}
						ShowPlayerDialogEx(playerid,dEditRank,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать","Закрыть");
					}
					else
					{
					    if(p_info[playerid][pLeaderPosition] != 1) return SendErr(playerid, "Вам не доступен данный раздел");
					    format ( STRING_GLOBAL, sizeof ( STRING_GLOBAL ), "Доступ к 'Управление рангами' [%s]",
						(f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}")) ;
						ShowPlayerDialogEx ( playerid, dEditLeader, DIALOG_STYLE_LIST, "{ebec86}>> Управление лидерами", STRING_GLOBAL, "Выбрать", "Назад" ) ;
					}
					return 1;
				}
			case 7:
			    {
			        STRING_GLOBAL = "";
			        //new veh_id = GetPlayerVehicleID ( playerid );
					if(p_info[playerid][pLeaderPosition] != 1) return SendErr(playerid, "Вам не доступен данный раздел");
					if(IsAMafia(playerid))
					{
						format ( STRING_GLOBAL, sizeof ( STRING_GLOBAL ), "Доступ к 'Управление рангами' [%s]\nДоступ к 'Управление автомобилем' [%s]\nДоступ к 'Изменить место спавна' [%s]\nДоступ к 'Изменить место склада' [%s]\nДоступ к 'Изменить место разгрузки' [%s]",
						(f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}"), (f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 1 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}"),
						(f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 2 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}"), (f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 3 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}"), (f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 4 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}") ) ;
						ShowPlayerDialogEx ( playerid, dEditLeader, DIALOG_STYLE_LIST, "{ebec86}>> Управление лидерами", STRING_GLOBAL, "Выбрать", "Назад" ) ;
					}
					else
					{
					    if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 1 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						//if ( GetPlayerVehicleID ( playerid ) == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
						//if ( VehInfo[ veh_id ] [ vFraction ] != p_info [ playerid ] [ pMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей организации" ) ;

						ShowPlayerDialogEx(playerid,dEditVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилем фракции","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Ранг доступности автомобиля","Выбрать","Назад");
					}
			    }
			case 8:
			    {
			        //new veh_id = GetPlayerVehicleID ( playerid );
			        if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 1 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
                    if(IsAMafia(playerid))
					{
						//if ( GetPlayerVehicleID ( playerid ) == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
						//if ( VehInfo[ veh_id ] [ vFraction ] != p_info [ playerid ] [ pMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей организации" ) ;
						
						ShowPlayerDialogEx(playerid,dEditVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилем фракции","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Ранг доступности автомобиля","Выбрать","Назад");
					}
					else
					{
					    if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 2 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						GetPlayerPos ( playerid, f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 2 ] ) ;
						GetPlayerFacingAngle ( playerid, f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 3 ] ) ;

						f_info [ p_info[playerid][pMember] ] [ f_spawn_int ] = GetPlayerInterior ( playerid ) ;
						f_info [ p_info[playerid][pMember] ] [ f_spawn_virt ] = GetPlayerVirtualWorld ( playerid ) ;

						SendInf(playerid, "Место спавна успешно изменено");

						new sql_string [200];
						mysql_format(dbHandle, sql_string, 200, "UPDATE `fractions` SET `f_spawn` = '%f,%f,%f,%f,%d,%d' WHERE `f_id` = '%d'",
						f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 2 ],
						f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 3 ], f_info [ p_info[playerid][pMember] ] [ f_spawn_int ], f_info [ p_info[playerid][pMember] ] [ f_spawn_virt ],  p_info[playerid][pMember] );
						mysql_query(dbHandle, sql_string);

						format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Лидер %s[ID: %d] изменил место спавна организации", p_info[playerid][pName], playerid);
						SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
						
						format(STRING_GLOBAL, 128, "%s изменил место спауна", p_info[playerid][pName]);
						WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);
					}
					return 1;
			    }
			case 9:
				{
				    if(IsAMafia(playerid))
					{
						if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 2 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						GetPlayerPos ( playerid, f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 2 ] ) ;
						GetPlayerFacingAngle ( playerid, f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 3 ] ) ;

						f_info [ p_info[playerid][pMember] ] [ f_spawn_int ] = GetPlayerInterior ( playerid ) ;
						f_info [ p_info[playerid][pMember] ] [ f_spawn_virt ] = GetPlayerVirtualWorld ( playerid ) ;

						SendInf(playerid, "Место спавна успешно изменено");

						new sql_string [200];
						mysql_format(dbHandle, sql_string, 200, "UPDATE `fractions` SET `f_spawn` = '%f,%f,%f,%f,%d,%d' WHERE `f_id` = '%d'",
						f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 0 ], f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 1 ], f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 2 ],
						f_info [ p_info[playerid][pMember] ] [ f_spawn ] [ 3 ], f_info [ p_info[playerid][pMember] ] [ f_spawn_int ], f_info [ p_info[playerid][pMember] ] [ f_spawn_virt ],  p_info[playerid][pMember] );
						mysql_query(dbHandle, sql_string);

						format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Лидер %s[ID: %d] изменил место спавна организации", p_info[playerid][pName], playerid);
						SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

						format(STRING_GLOBAL, 128, "%s изменил место спауна", p_info[playerid][pName]);
						WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);
						return 1;
					}
					else
					{
					    if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 3 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						GetPlayerPos ( playerid, f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 0 ], f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 1 ], f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 2 ] ) ;

						if(IsValidDynamic3DTextLabel(frac_text [ p_info[playerid][pMember] ])) DestroyDynamic3DTextLabel ( frac_text [ p_info[playerid][pMember] ] ) ;
						DestroyDynamicCP ( frac_areaid_cp [ p_info[playerid][pMember] ]  ) ;
						DestroyDynamicArea ( frac_areaid [ p_info[playerid][pMember] ] ) ;
						f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank_virt ] = GetPlayerVirtualWorld ( playerid ) ;

						frac_areaid [ p_info[playerid][pMember] ] = CreateDynamicSphere ( f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 2 ],1.0, f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank_virt ] ) ;
						frac_areaid_cp [ p_info[playerid][pMember] ] = CreateDynamicCP ( f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 2 ],1.0, f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank_virt ] ) ;
						frac_text[ p_info[playerid][pMember] ] = CreateDynamic3DTextLabel("___",-1, f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 2 ] + 1.5, 7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank_virt ] ) ;
						UpdateStoreGang (p_info[playerid][pMember]) ;
						SendInf(playerid, "Место склада успешно изменено");
						new sql_string [200];
						mysql_format(dbHandle, sql_string, 200, "UPDATE `fractions` SET `f_bank` = '%f,%f,%f,0,%d' WHERE `f_id` = '%d'",
						f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 0 ], f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 1 ], f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 2 ],
						f_info [ p_info[playerid][pMember] ] [ f_bank_virt ],  p_info[playerid][pMember] );
						mysql_query(dbHandle, sql_string);

						format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Лидер %s[ID: %d] изменил место склада организации", p_info[playerid][pName], playerid);
						SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

						format(STRING_GLOBAL, 128, "%s изменил место склада", p_info[playerid][pName]);
						WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);
						return 1;
					}
				}
			case 10:
				{
				    if(IsAMafia(playerid))
					{
						if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 3 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						GetPlayerPos ( playerid, f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 0 ], f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 1 ], f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 2 ] ) ;

						if(IsValidDynamic3DTextLabel(frac_text [ p_info[playerid][pMember] ])) DestroyDynamic3DTextLabel ( frac_text [ p_info[playerid][pMember] ] ) ;
						DestroyDynamicCP ( frac_areaid_cp [ p_info[playerid][pMember] ]  ) ;
						DestroyDynamicArea ( frac_areaid [ p_info[playerid][pMember] ] ) ;
						f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank_virt ] = GetPlayerVirtualWorld ( playerid ) ;

						frac_areaid [ p_info[playerid][pMember] ] = CreateDynamicSphere ( f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 2 ],1.0, f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank_virt ] ) ;
						frac_areaid_cp [ p_info[playerid][pMember] ] = CreateDynamicCP ( f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 2 ],1.0, f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank_virt ] ) ;
						frac_text[ p_info[playerid][pMember] ] = CreateDynamic3DTextLabel("___",-1, f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 0 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 1 ], f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank ] [ 2 ] + 1.5, 7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, f_info [ p_info [ playerid ] [ pMember ] ] [ f_bank_virt ] ) ;
						UpdateStoreGang (p_info[playerid][pMember]) ;
						SendInf(playerid, "Место склада успешно изменено");
						new sql_string [200];
						mysql_format(dbHandle, sql_string, 200, "UPDATE `fractions` SET `f_bank` = '%f,%f,%f,0,%d' WHERE `f_id` = '%d'",
						f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 0 ], f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 1 ], f_info [ p_info[playerid][pMember] ] [ f_bank ] [ 2 ],
						f_info [ p_info[playerid][pMember] ] [ f_bank_virt ],  p_info[playerid][pMember] );
						mysql_query(dbHandle, sql_string);

						format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Лидер %s[ID: %d] изменил место склада организации", p_info[playerid][pName], playerid);
						SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

						format(STRING_GLOBAL, 128, "%s изменил место склада", p_info[playerid][pName]);
						WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);
						return 1;
					}
					else
					{
					    if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 4 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						if ( GetPlayerInterior ( playerid ) != 0 || GetPlayerVirtualWorld ( playerid ) != 0 ) return SendErr ( playerid, "Место разгрузки можно установить только на улице" ) ;
						GetPlayerPos ( playerid, frac_place_put[ p_info[playerid][pMember] ] [ 0 ], frac_place_put[ p_info[playerid][pMember] ] [ 1 ], frac_place_put[ p_info[playerid][pMember] ] [ 2 ] ) ;

						if(IsValidDynamic3DTextLabel(frac_place_put_areaid_text [ p_info[playerid][pMember] ])) DestroyDynamic3DTextLabel ( frac_place_put_areaid_text [ p_info[playerid][pMember] ] ) ;
						DestroyDynamicCP ( frac_place_put_areaid_cp [ p_info[playerid][pMember] ]  ) ;
						DestroyDynamicArea ( frac_place_put_areaid[ p_info[playerid][pMember] ] ) ;

						frac_place_put_areaid_text [ p_info[playerid][pMember] ] = CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n[ "cBLUE"металла и патронов{FFFFFF} ]", 0xFFFFFFFF, frac_place_put[ p_info [ playerid ] [ pMember ] ][0],frac_place_put[ p_info [ playerid ] [ pMember ] ][1],frac_place_put[ p_info [ playerid ] [ pMember ] ][2]+0.8, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
						frac_place_put_areaid_cp [ p_info[playerid][pMember] ] = CreateDynamicCP(frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 0 ],frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 1 ],frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 2 ], 1.5, -1, -1, -1, 30.0);
						frac_place_put_areaid[ p_info[playerid][pMember] ] = CreateDynamicSphere ( frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 0 ], frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 1 ], frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 2 ], 1.0,-1,-1,-1);
						SendInf(playerid, "Место разгрузки успешно изменено");
						
						new sql_string[200];
						mysql_format(dbHandle, sql_string, 200, "UPDATE `fractions` SET `f_put` = '%f,%f,%f' WHERE `f_id` = '%d'",
						frac_place_put [ p_info[playerid][pMember] ] [ 0 ], frac_place_put [ p_info[playerid][pMember] ] [ 1 ], frac_place_put [ p_info[playerid][pMember] ] [ 2 ],
						p_info[playerid][pMember] );
						mysql_query(dbHandle, sql_string);

						format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Лидер %s[ID: %d] изменил место разгрузки организации", p_info[playerid][pName], playerid);
						SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

						format(STRING_GLOBAL, 128, "%s изменил место разгрузки", p_info[playerid][pName]);
						WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);
						return 1;
					}
				}
			case 11:
				{
				    if(IsAMafia(playerid))
					{
						if(p_info[playerid][pLeaderPosition] != 1 && f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 4 ] != 1 ) return SendErr(playerid, "Вам не доступен данный раздел");
						if ( GetPlayerInterior ( playerid ) != 0 || GetPlayerVirtualWorld ( playerid ) != 0 ) return SendErr ( playerid, "Место разгрузки можно установить только на улице" ) ;
						GetPlayerPos ( playerid, frac_place_put[ p_info[playerid][pMember] ] [ 0 ], frac_place_put[ p_info[playerid][pMember] ] [ 1 ], frac_place_put[ p_info[playerid][pMember] ] [ 2 ] ) ;

						if(IsValidDynamic3DTextLabel(frac_place_put_areaid_text [ p_info[playerid][pMember] ])) DestroyDynamic3DTextLabel ( frac_place_put_areaid_text [ p_info[playerid][pMember] ] ) ;
						DestroyDynamicCP ( frac_place_put_areaid_cp [ p_info[playerid][pMember] ]  ) ;
						DestroyDynamicArea ( frac_place_put_areaid[ p_info[playerid][pMember] ] ) ;

						frac_place_put_areaid_text [ p_info[playerid][pMember] ] = CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n[ "cBLUE"металла и патронов{FFFFFF} ]", 0xFFFFFFFF, frac_place_put[ p_info [ playerid ] [ pMember ] ][0],frac_place_put[ p_info [ playerid ] [ pMember ] ][1],frac_place_put[ p_info [ playerid ] [ pMember ] ][2]+0.8, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
						frac_place_put_areaid_cp [ p_info[playerid][pMember] ] = CreateDynamicCP(frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 0 ],frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 1 ],frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 2 ], 1.5, -1, -1, -1, 30.0);
						frac_place_put_areaid[ p_info[playerid][pMember] ] = CreateDynamicSphere ( frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 0 ], frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 1 ], frac_place_put[ p_info [ playerid ] [ pMember ] ] [ 2 ], 1.0,-1,-1,-1);
						SendInf(playerid, "Место разгрузки успешно изменено");
						
						new sql_string[200];
						mysql_format(dbHandle, sql_string, 200, "UPDATE `fractions` SET `f_put` = '%f,%f,%f' WHERE `f_id` = '%d'",
						frac_place_put [ p_info[playerid][pMember] ] [ 0 ], frac_place_put [ p_info[playerid][pMember] ] [ 1 ], frac_place_put [ p_info[playerid][pMember] ] [ 2 ],
						p_info[playerid][pMember] );
						mysql_query(dbHandle, sql_string);

						format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Лидер %s[ID: %d] изменил место разгрузки организации", p_info[playerid][pName], playerid);
						SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

						format(STRING_GLOBAL, 128, "%s изменил место разгрузки", p_info[playerid][pName]);
						WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);
						return 1;
					}
					else
					{
					    new dialog_string [ 178 ] ;
						format ( dialog_string, sizeof ( dialog_string ), "Ранг для добавления в ЧС [{ebec86}%i{FFFFFF}]\nСумма выхода из ЧС [{ebec86}%i{FFFFFF} рублей]\nРасплат кровью для выхода из ЧС [{ebec86}%i{FFFFFF}]",
						f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ] ) ;
						ShowPlayerDialogEx ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ebec86}>> Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
					}
				}
            case 12:
				{
				    if(IsAMafia(playerid))
					{
						new dialog_string [ 178 ] ;
						format ( dialog_string, sizeof ( dialog_string ), "Ранг для добавления в ЧС [{ebec86}%i{FFFFFF}]\nСумма выхода из ЧС [{ebec86}%i{FFFFFF} рублей]\nРасплат кровью для выхода из ЧС [{ebec86}%i{FFFFFF}]",
						f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ] ) ;
						ShowPlayerDialogEx ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ebec86}>> Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
					}
					else
					{
					    ShowPlayerDialogEx ( playerid, dSetFractionMessage, DIALOG_STYLE_INPUT, "{ebec86}>> Сообщение фракции", "Введите сообщение которое будет показывать при входе", "Ввод", "Отмена" ) ;
					}
				}
			case 13:
				{
				    if(IsAMafia(playerid))
					{
						ShowPlayerDialogEx ( playerid, dSetFractionMessage, DIALOG_STYLE_INPUT, "{ebec86}>> Сообщение фракции", "Введите сообщение которое будет показывать при входе", "Ввод", "Отмена" ) ;
					}
					else
					{
					    STRING_GLOBAL = "";
				        new text[32];
				        switch(f_info [ p_info[playerid][pMember] ] [ f_status_zp ])
				        {
				            case 0:
							{
							    text = "В 20:00";
							}
							case 1:
							{
							    text = "Каждый час";
							}
				        }

						format(STRING_GLOBAL, 256, "1. Получение заработной платы [{ebec86}%s{FFFFFF}]\n2. Заработная плата по рангу", text);
				        ShowPlayerDialogEx(playerid, dMenuZP, DIALOG_STYLE_LIST, "{ebec86}>> Управление заработной платой",STRING_GLOBAL,"Выбрать","Назад");
					}
				}
			case 14:
			    {
			        STRING_GLOBAL = "";
			        new text[32];
			        switch(f_info [ p_info[playerid][pMember] ] [ f_status_zp ])
			        {
			            case 0:
						{
						    text = "В 20:00";
						}
						case 1:
						{
						    text = "Каждый час";
						}
			        }
			    
					format(STRING_GLOBAL, 256, "1. Получение заработной платы [{ebec86}%s{FFFFFF}]\n2. Заработная плата по рангу", text);
			        ShowPlayerDialogEx(playerid, dMenuZP, DIALOG_STYLE_LIST, "{ebec86}>> Управление заработной платой",STRING_GLOBAL,"Выбрать","Назад");
			    }
			}
		}
	case dMenuZP:
	    {
	        if(!response) return 1;
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(f_info [ p_info[playerid][pMember] ] [ f_status_zp ])
					{
					    f_info [ p_info[playerid][pMember] ] [ f_status_zp ] = 0;
					    SendInf(playerid, "Теперь сотрудники вашей организации будут получать заработную плату в 20:00 из казны организации");
					    
					    new sql_string[128];
						mysql_format(dbHandle, sql_string, 128, "UPDATE `fractions` SET `f_status_zp` = '%d' WHERE `f_id` = '%d'",
						f_info [ p_info[ playerid ] [ pMember] ] [ f_status_zp ],
						p_info[playerid][pMember] );
						mysql_query(dbHandle, sql_string);
					    return 1;
					}
					else
					{
					    f_info [ p_info[playerid][pMember] ] [ f_status_zp ] = 1;
					    SendInf(playerid, "Теперь сотрудники вашей организации будут получать заработную плату каждый час из казны организации");
					    
					    new sql_string[128];
						mysql_format(dbHandle, sql_string, 128, "UPDATE `fractions` SET `f_status_zp` = '%d' WHERE `f_id` = '%d'",
						f_info [ p_info[ playerid ] [ pMember] ] [ f_status_zp ],
						p_info[playerid][pMember] );
						mysql_query(dbHandle, sql_string);
					    return 1;
					}
	            }
	            case 1:
	            {
			        STRING_GLOBAL = "";
					new v_id, line_string[150];
	                for(new i=1; i<=FractionRank[p_info[playerid][pMember]-1]-1; i++)
					{
						format ( line_string, 32, "vline_zp_%d", v_id ) ;
						SetPVarInt ( playerid, line_string, i ) ;

						format(line_string, sizeof(line_string), "- %s {ebec86}(Заработная плата: %d рублей){FFFFFF}\n", GetRank(p_info[playerid][pMember], i), f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ i ]);
	                    strcat ( STRING_GLOBAL, line_string ) ;
						v_id ++ ;
					}
					ShowPlayerDialogEx(playerid,dZPEdit,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать", "Закрыть");
	            }
	        }
	    }
    case dZPEdit:
	    {
	        if(!response) return 1;
	        if(!p_info[playerid][pMember]) return 1;

	        new pvar_string [ 32 ] ;
			format ( pvar_string, 32, "vline_zp_%d", listitem ) ;
			edit_zp_rang[playerid] = GetPVarInt ( playerid, pvar_string ) ;

			ShowPlayerDialogEx ( playerid, dZPEdit1, DIALOG_STYLE_INPUT, "{ebec86}>> Установите заработную плату для ранга", "Введите сумму, которую будет получать выбранный ранг", "Ввод", "Отмена" ) ;
	    }
    case dZPEdit1:
		{
			if(!response) return 1;
			if(!p_info[playerid][pMember]) return 1;

			if(strval(inputtext) < 0 || strval(inputtext) > 100000) return ShowPlayerDialogEx ( playerid, dZPEdit1, DIALOG_STYLE_INPUT, "{ebec86}>> Установите заработную плату для ранга", "Введите сумму, которую будет получать выбранный ранг\n{AFAFAF}* Максимум 100.000 рублей", "Ввод", "Отмена" ) ;

			f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ edit_zp_rang[playerid] ] = strval(inputtext);
			SendInf(playerid, "Вы успешно изменили заработную плату для ранга");

			new sql_string[512];
			mysql_format(dbHandle, sql_string, 512, "UPDATE `fractions` SET `f_rang_zp` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d' WHERE `f_id` = '%d'",
			f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 2 ],
			f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 3 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 4 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 5 ],
			f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 6 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 7 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 8 ],
			f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 9 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_rang_zp ] [ 10 ],
			p_info[playerid][pMember] );
			mysql_query(dbHandle, sql_string);

			pc_cmd_lmenu(playerid);
			return 1;
		}
    case dEditBl:
		{
			if( ! response ) return 1;
			switch ( listitem )
			{
				case 0:
				{
					STRING_GLOBAL[0] = EOS;
					for(new i = 1; i <= FractionRank[p_info[ playerid ] [ pMember]-1]-1; i++)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%i. %s%s\n", STRING_GLOBAL,i,(i==f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ])?("{ebec86}"):(""),GetRank(p_info[ playerid ] [ pMember],i));
					}
					ShowPlayerDialogEx(playerid,dEditBlParam,DIALOG_STYLE_LIST,"{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать", "Назад");
				}
				case 1: ShowPlayerDialogEx ( playerid, dEditBlParam, DIALOG_STYLE_INPUT, "{ebec86}>> Сумма выхода из ЧС", "Введите сумму выхода из ЧС:", "Принять", "Назад" ) ;
				case 2: ShowPlayerDialogEx ( playerid, dEditBlParam, DIALOG_STYLE_INPUT, "{ebec86}>> Расплата кровью", "Введите кол-во расплат кровью для выхода из ЧС:", "Принять", "Назад" ) ;
			}
			SetPVarInt ( playerid, "dEditBlParam", listitem) ;
		}
	case dEditBlParam:
		{
			if ( ! response )
			{
				new dialog_string [ 178 ] ;
				format ( dialog_string, sizeof ( dialog_string ), "Ранг для добавления в ЧС [{ebec86}%i{FFFFFF}]\nСумма выхода из ЧС [{ebec86}%i{FFFFFF} рублей]\nРасплат кровью для выхода из ЧС [{ebec86}%i{FFFFFF}]",
				f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ] ) ;
				ShowPlayerDialogEx ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ebec86}>> Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
				DeletePVar ( playerid, "dEditBlParam" ) ;
				return 1 ;
			}
			switch ( GetPVarInt ( playerid, "dEditBlParam") )
			{
				case 0:
				{
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ] = listitem + 1;
					DeletePVar ( playerid, "dEditBlParam" ) ;
					new dialog_string [ 178 ] ;
					format ( dialog_string, sizeof ( dialog_string ), "Ранг для добавления в ЧС [{ebec86}%i{FFFFFF}]\nСумма выхода из ЧС [{ebec86}%i{FFFFFF} рублей]\nРасплат кровью для выхода из ЧС [{ebec86}%i{FFFFFF}]",
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ] ) ;
					ShowPlayerDialogEx ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ebec86}>> Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
					format(dialog_string, 178, "UPDATE `fractions` SET `f_bl_config` = '%d,%d,%d' WHERE `f_id` = '%d'",
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ],
					f_info [ p_info[playerid][pMember] ] [ f_id ] );
					mysql_tquery(dbHandle, dialog_string, "", "");
				}
				case 1:
				{
					if ( strval ( inputtext ) < 1 || strval ( inputtext ) > 1000000 )
					{
						ShowPlayerDialogEx ( playerid, dEditBlParam, DIALOG_STYLE_INPUT, "{ebec86}>> Сумма выхода из ЧС", "* Сумма не может быть меньше 1 и больше 1.000.000 рублей\n\nВведите сумму выхода из ЧС:", "Принять", "Назад" ) ;
						return 0;
					}
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ] = strval ( inputtext ) ;
					new dialog_string [ 178 ] ;
					format ( dialog_string, sizeof ( dialog_string ), "Ранг для добавления в ЧС [{ebec86}%i{FFFFFF}]\nСумма выхода из ЧС [{ebec86}%i{FFFFFF} рублей]\nРасплат кровью для выхода из ЧС [{ebec86}%i{FFFFFF}]",
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ] ) ;
					ShowPlayerDialogEx ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ebec86}>> Чёрный список", dialog_string, "Выбрать", "Назад" ) ;

					DeletePVar ( playerid, "dEditBlParam" ) ;
					format(dialog_string, 178, "UPDATE `fractions` SET `f_bl_config` = '%d,%d,%d' WHERE `f_id` = '%d'",
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ],
					f_info [ p_info[playerid][pMember] ] [ f_id ]);
					mysql_tquery(dbHandle, dialog_string, "", "");

				}
				case 2:
				{
					if ( strval ( inputtext ) < 1 || strval ( inputtext ) > 25 )
					{
						ShowPlayerDialogEx ( playerid, dEditBlParam, DIALOG_STYLE_INPUT, "{ebec86}>> Расплата кровью", "* Кол-во расплат кровью не может быть меньше 1 и больше 25!\n\nВведите кол-во расплат кровью для выхода из ЧС:", "Принять", "Назад" ) ;
						return 0;
					}
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ] = strval ( inputtext ) ;
					new dialog_string [ 178 ] ;
					format ( dialog_string, sizeof ( dialog_string ), "Ранг для добавления в ЧС [{ebec86}%i{FFFFFF}]\nСумма выхода из ЧС [{ebec86}%i{FFFFFF} рублей]\nРасплат кровью для выхода из ЧС [{ebec86}%i{FFFFFF}]",
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ] ) ;
					ShowPlayerDialogEx ( playerid, dEditBl, DIALOG_STYLE_LIST, "{ebec86}>> Чёрный список", dialog_string, "Выбрать", "Назад" ) ;
					DeletePVar ( playerid, "dEditBlParam" ) ;
					format(dialog_string, 178, "UPDATE `fractions` SET `f_bl_config` = '%d,%d,%d' WHERE `f_id` = '%d'",
					f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_bl_config ] [ 2 ],
					f_info [ p_info[playerid][pMember] ] [ f_id ] );
					mysql_tquery(dbHandle, dialog_string, "", "");

				}
			}
		}
	case dEditLeader:
	    {
	        if(!response) return 1;

			STRING_GLOBAL = "";
	        if(f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ listitem ] == 1)
	        {
	            f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ listitem ] = 0;
	        }
	        else
	        {
	            f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ listitem ] = 1;
	        }

	        format(STRING_GLOBAL, 256, "UPDATE `fractions` SET `f_l_config` = '%d,%d,%d,%d,%d' WHERE `f_id` = '%d'",
			f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 1 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 2 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 3 ], f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 4 ],
			f_info [ p_info[playerid][pMember] ] [ f_id ] );
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

			if(IsAMafia(playerid))
			{
				format ( STRING_GLOBAL, sizeof ( STRING_GLOBAL ), "Доступ к 'Управление рангами' [%s]\nДоступ к 'Управление автомобилем' [%s]\nДоступ к 'Изменить место спавна' [%s]\nДоступ к 'Изменить место склада' [%s]\nДоступ к 'Изменить место разгрузки' [%s]",
				(f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}"), (f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 1 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}"),
				(f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 2 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}"), (f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 3 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}"), (f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 4 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}") ) ;
				ShowPlayerDialogEx ( playerid, dEditLeader, DIALOG_STYLE_LIST, "{ebec86}>> Управление лидерами", STRING_GLOBAL, "Выбрать", "Назад" ) ;
			}
			else
			{
			    format ( STRING_GLOBAL, sizeof ( STRING_GLOBAL ), "Доступ к 'Управление рангами' [%s]",
				(f_info [ p_info[ playerid ] [ pMember] ] [ f_l_config ] [ 0 ] == 1) ? ("{f0e86b}Доступно{FFFFFF}") : ("{FF6347}Недоступно{FFFFFF}")) ;
				ShowPlayerDialogEx ( playerid, dEditLeader, DIALOG_STYLE_LIST, "{ebec86}>> Управление лидерами", STRING_GLOBAL, "Выбрать", "Назад" ) ;
			}
	    }
    case dSetFractionMessage:
		{
		    if(!response) return 1;
		    new message_[32];
			if(sscanf(inputtext,"s[32]",message_)) return ShowPlayerDialogEx ( playerid, dSetFractionMessage, DIALOG_STYLE_INPUT, "{ebec86}>> Сообщение фракции", "Введите сообщение которое будет показывать при входе", "Ввод", "Отмена" ) ;
			strmid(f_info[p_info[playerid][pMember]][f_message], message_,0, strlen(message_), 32);
			format(STRING_GLOBAL, 144, "Вы успешно поставили сообщение %s", message_);
			SendInf(playerid, STRING_GLOBAL);
			
			format(STRING_GLOBAL, 128, "%s установил сообщение: %s", p_info[playerid][pName], message_);
			WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);

			STRING_GLOBAL = "";
			format(STRING_GLOBAL, 256, "UPDATE `fractions` SET `f_message` = '%s' WHERE `f_id` = '%d'",
			message_, f_info [ p_info[playerid][pMember] ] [ f_id ] );
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
		    return 1;
		}
	case dEditVehicle:
		{
			if( ! response )
			{
				pc_cmd_lmenu(playerid);
				return 1 ;
			}
			if ( listitem == 0 )
			{
			    new veh_id = GetPlayerVehicleID ( playerid );
				if ( veh_id == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
				if ( VehInfo[ veh_id ] [ vFraction ] != p_info [ playerid ] [ pMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей организации" ) ;

				GetVehiclePos ( veh_id, VehInfo [ veh_id ] [ vPos_X ], VehInfo [ veh_id ] [ vPos_Y ], VehInfo [ veh_id ] [ vPos_Z ] ) ;
				GetVehicleZAngle( veh_id, VehInfo [ veh_id ] [ vPos_FA ] ) ;

				VehInfo [ veh_id ] [ vModel ] = GetVehicleModel ( GetPlayerVehicleID ( playerid ) );
				DestroyVehicle ( veh_id ) ;
				//VehInfo [ veh_id ] [ vVehicle ] = INVALID_VEHICLE_ID ;
				VehInfo [ veh_id ] [ vVehicle ] = CreateVehicle ( VehInfo [ veh_id ] [ vModel ], VehInfo [ veh_id ] [ vPos_X ], VehInfo [ veh_id ] [ vPos_Y ], VehInfo [ veh_id ] [ vPos_Z ], VehInfo [ veh_id ] [ vPos_FA ], VehInfo [ veh_id ] [ vColor ] [ 0 ] , VehInfo [ veh_id ] [ vColor ] [ 1 ], 900 ) ;

				GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh_id, false, lights, alarm, doors, bonnet, boot, objective);

				new sql_string[200];
				mysql_format(dbHandle, sql_string, 200, "UPDATE `vehicle` SET `x` = '%f',`y` = '%f',`z` = '%f',`fa` = '%f' WHERE `id` = '%d'",
				VehInfo [ veh_id ] [ vPos_X ], VehInfo [ veh_id ] [ vPos_Y ], VehInfo [ veh_id ] [ vPos_Z ], VehInfo [ veh_id ] [ vPos_FA ],
				VehInfo [ veh_id ] [ vID ] );
				mysql_query ( dbHandle, sql_string ) ;

				format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Лидер %s[ID: %d] изменил место спавна автомобиля организации", p_info[playerid][pName], playerid);
				SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
				
				format(STRING_GLOBAL, 128, "%s изменил место спауна автомобиля", p_info[playerid][pName]);
				WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);

				SendInf(playerid, "Место спавна автомобиля успешно изменено");
				ShowPlayerDialogEx(playerid,dEditVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилем фракции","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Ранг доступности автомобиля","Выбрать","Назад");
			}
			if ( listitem == 1 )
			{
			    new veh_id = GetPlayerVehicleID ( playerid );
				if ( GetPlayerVehicleID ( playerid ) == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
				if ( VehInfo[ veh_id ] [ vFraction ] != p_info [ playerid ] [ pMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей организации" ) ;

				new m_param ;
				if ( p_info[playerid][pLeader] == 15 ) m_param = 0 ;
				else if ( p_info[playerid][pLeader] == 16 ) m_param = 1 ;
				else if ( p_info[playerid][pLeader] == 7 || p_info[playerid][pLeader] == 8 ) m_param = 2 ;
				else return SendErr(playerid, "Нету машин для вашей организации");
				new line_string [ 128 ] ;

				STRING_GLOBAL = "";
				for ( new j = 0; j < 15; j ++ )
				{
					if ( model_change [ m_param ] [ j ] == 0 ) break ;
					format ( line_string, 128, "- {f0e86b}%s{FFFFFF}, Цена: {f0e86b}%d{FFFFFF} рублей\n", VehicleNames [ model_change [ m_param ] [ j ] - 400 ], model_change [ m_param ] [ j ] * 1000 ) ;
					strcat(STRING_GLOBAL, line_string ) ;
				}
				ShowPlayerDialogEx(playerid,dModelEdit,DIALOG_STYLE_LIST, "{ebec86}>> Модель автомобиля", STRING_GLOBAL, "Купить", "Закрыть");
			}
			if ( listitem == 2 )
			{
				STRING_GLOBAL = "";
				new v_id, line_string[150];

                for(new i = TOTALVEH; i > 0; i --)
				{
					if(VehInfo[i][vFraction] != p_info[playerid][pMember]) continue;

					format ( line_string, 32, "vline_car_%d", v_id ) ;
					SetPVarInt ( playerid, line_string, i ) ;
					
					format(line_string, sizeof(line_string), "- %s {ebec86}(Доступно с %d ранга){FFFFFF}\n", VehicleNames[GetVehicleModel ( i )-400], VehInfo[i][vRank]);
                    strcat ( STRING_GLOBAL, line_string ) ;
					v_id ++ ;
				}
				ShowPlayerDialogEx(playerid,dRankEdit1,DIALOG_STYLE_LIST, "{ebec86}>> Выберите автомобиль",STRING_GLOBAL,"Выбрать", "Закрыть");
			}
			return 1 ;
		}
	case dModelEdit:
		{
		    new veh_id = GetPlayerVehicleID ( playerid );
			if ( ! response )return ShowPlayerDialogEx(playerid,dEditVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилем фракции","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Ранг доступности автомобиля","Выбрать","Назад");
			if ( GetPlayerVehicleID ( playerid ) == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
			if ( VehInfo[ veh_id ] [ vFraction ] != p_info [ playerid ] [ pMember ] )return SendErr ( playerid, "Функция доступна только в автомобиле вашей организации" ) ;
			new m_param ;
			if ( p_info[playerid][pLeader] == 15 ) m_param = 0 ;
			else if ( p_info[playerid][pLeader] == 16 ) m_param = 1 ;
			else if ( p_info[playerid][pLeader] == 7 || p_info[playerid][pLeader] == 8 ) m_param = 2 ;
			if ( p_info[playerid][pCash] < model_change [ m_param ] [ listitem ] * 1000 ) return SendErr ( playerid, "У Вас недостаточно денег");

			VehInfo [ veh_id ] [ vModel ] = model_change [ m_param ] [ listitem ] ;
			GiveMoney(playerid, -model_change [ m_param ] [ listitem ] * 1000, "Смена модели");

			DestroyVehicle ( veh_id ) ;
			//VehInfo [ veh_id ] [ vVehicle ] = INVALID_VEHICLE_ID ;
			VehInfo [ veh_id ] [ vVehicle ] = CreateVehicle ( VehInfo [ veh_id ] [ vModel ], VehInfo [ veh_id ] [ vPos_X ], VehInfo [ veh_id ] [ vPos_Y ], VehInfo [ veh_id ] [ vPos_Z ], VehInfo [ veh_id ] [ vPos_FA ], VehInfo [ veh_id ] [ vColor ][0], VehInfo [ veh_id ] [ vColor ][1], 900 ) ;

			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, false, lights, alarm, doors, bonnet, boot, objective);

			SendInf(playerid, "Модель автомобиля успешно изменена");
			ShowPlayerDialogEx(playerid,dEditVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилем фракции","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Ранг доступности автомобиля","Выбрать","Назад");

			new sql_string[200];
			mysql_format(dbHandle, sql_string, 200, "UPDATE `vehicle` SET `model` = '%d' WHERE `id` = '%d'",
			VehInfo [ veh_id ] [ vModel ], VehInfo [ veh_id ] [ vID ] );
			mysql_query(dbHandle, sql_string);
			return 1 ;
		}
	case dRankEdit1:
	    {
	        if(!response) return 1;
	        if(!p_info[playerid][pMember]) return 1;
	        
	        new pvar_string [ 32 ] ;
			format ( pvar_string, 32, "vline_car_%d", listitem ) ;
			vehicle_id_edit[playerid] = GetPVarInt ( playerid, pvar_string ) ;

			STRING_GLOBAL = "";
	        for(new i=1; i<=FractionRank[p_info[playerid][pMember]-1]-1; i++)
			{
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%i. %s%s\n", STRING_GLOBAL,i,(i==VehInfo[vehicle_id_edit[playerid]][vRank])?("{ebec86}"):(""cWHITE""),GetRank(p_info[playerid][pMember],i));
			}
			ShowPlayerDialogEx(playerid,dRankEdit,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать", "Закрыть");
	    }
    case dRankEdit:
		{
			if(!response) return 1;
			if(!p_info[playerid][pMember]) return 1;
			
			VehInfo[vehicle_id_edit[playerid]][vRank] = listitem + 1;
			SendInf(playerid, "Вы успешно изменили ранг доступности авто");

			new sql_string[200];
			mysql_format(dbHandle, sql_string, 200, "UPDATE `vehicle` SET `rank` = '%d' WHERE `id` = '%d'",
			VehInfo [ vehicle_id_edit[playerid] ] [ vRank ], VehInfo [ vehicle_id_edit[playerid] ] [ vID ] );
			mysql_query(dbHandle, sql_string);
			
			pc_cmd_lmenu(playerid);
			return 1;
		}
	case dLeaderRank:
		{
			if(!response) return DeletePVar(playerid,"leader_rank");
			if(!p_info[playerid][pMember]) return 1;
			new select_listitem = GetPVarInt(playerid,"leader_rank");
			gFractionRank[p_info[playerid][pMember]-1][select_listitem-1] = listitem + 1;

			SaveFrac(playerid);
			DeletePVar(playerid,"leader_rank");
			pc_cmd_lmenu(playerid);
			return 1;
		}
    case dEditRank:
		{
			if(!response) return 1;
			ShowPlayerDialogEx(playerid, dEditRankStep1, DIALOG_STYLE_LIST, "{ebec86}>> Управление рангом", ""nwhite"Изменение названия ранга", "Выбрать", "Отмена");
			SetPVarInt(playerid,"edit_rank",listitem);
			return 1;
		}
	case dEditRankStep1:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialogEx(playerid, dEditRankStep2, DIALOG_STYLE_INPUT, "{ebec86}>> Изменение названия ранга", ""nwhite"Используйте название ранга", "Выбрать", "Отмена");
			}
			return 1;
		}
	case dEditRankStep2:
		{
			if(!response) return 1;
			if(strlen(inputtext) <= 0 || strlen(inputtext) >= 40) return ShowPlayerDialogEx(playerid, dEditRankStep2, DIALOG_STYLE_INPUT, "{ebec86}>> Изменение названия ранга", ""nwhite"Используйте название ранга", "Выбрать", "Отмена");
            if(IsIpFound(inputtext) || CheckString(inputtext)) return ShowPlayerDialogEx(playerid, dEditRankStep2, DIALOG_STYLE_INPUT, "{ebec86}>> Изменение названия ранга", ""nwhite"Используйте название ранга", "Выбрать", "Отмена");
			new slot = GetPVarInt(playerid, "edit_rank");

			format(STRING_GLOBAL,128,"Вы изменили ранг №%d с %s на %s",slot+1,fRankName[p_info[playerid][pMember]-1][slot],inputtext);
			SendInf(playerid,STRING_GLOBAL);
			
			format(STRING_GLOBAL, 256, "%s ранг №%d с %s на %s", GetName(playerid), slot+1, fRankName[p_info[playerid][pMember]-1][slot], inputtext);
			WriteLogs(p_info[playerid][pMember], TYPE_LOG_LMENU, STRING_GLOBAL);

			strmid(fRankName[p_info[playerid][pMember]-1][slot], inputtext, 0, strlen(inputtext));

			STRING_GLOBAL="";
			format(STRING_GLOBAL,200,"UPDATE `fraction_ranks` SET `rang` = '%s' WHERE `fracid` = '%d' AND `numberrank` = '%d'",fRankName[p_info[playerid][pMember]-1][slot],p_info[playerid][pMember]-1,slot);
			mysql_tquery(dbHandle,STRING_GLOBAL,"","");
			return 1;
		}
    case 2168:
		{
			if(!response) return pc_cmd_family(playerid);
			new put = strval(inputtext), newslot;
			if(put < 1 || put > 500) return ShowPlayerDialogEx(playerid,2168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(family_info[p_info[playerid][pFamily]][f_metall] < put) return ShowPlayerDialogEx(playerid,2168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно металла","Взять","Назад");
            if(CheckMaxVes(playerid, 69, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			family_info[p_info[playerid][pFamily]][f_metall] -= put;

			PlayerItem1[playerid][newslot] = 69;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid, newslot);
			
			format(STRING_GLOBAL, 128, "{%s}[%s] {FFFFFF}%s [id %d] взял(а) с склада {3399FF}%i{66CC00} кг металла",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],p_info[playerid][pName], playerid, put);
			family_message(p_info[playerid][pFamily], 0x66CC00FF, STRING_GLOBAL);

			UpdateFamilyStore(p_info[playerid][pFamily]);
			return 1;
		}
  		case dPatronGet1:
		{
			if(!response) return pc_cmd_family(playerid);
			new put = strval(inputtext), newslot;
			if(put < 1 || put > 500) return ShowPlayerDialogEx(playerid,dPatronGet1,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(family_info[p_info[playerid][pFamily]][f_patron] < put) return ShowPlayerDialogEx(playerid,dPatronGet1,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно патронов","Взять","Назад");
            if(CheckMaxVes(playerid, 42, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			family_info[p_info[playerid][pFamily]][f_patron] -= put;

			PlayerItem1[playerid][newslot] = 42;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid, newslot);
			
			format(STRING_GLOBAL, 128, "{%s}[%s] {FFFFFF}%s [id %d] взял(а) с склада {3399FF}%i{66CC00} патрон",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],p_info[playerid][pName], playerid, put);
			family_message(p_info[playerid][pFamily], 0x66CC00FF, STRING_GLOBAL);

			UpdateFamilyStore(p_info[playerid][pFamily]);
			return 1;
		}
		case dPatronPut1:
		{
  			if(!response) return pc_cmd_family(playerid);
  			
  			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==42){ok=s;break;}
			}
  			
			new put = strval(inputtext);
			if(put < 1) return ShowPlayerDialogEx(playerid,dPatronPut1,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,dPatronPut1,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно патронов с собой","Положить","Назад");
			family_info[p_info[playerid][pFamily]][f_patron] += put;
			
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok]=0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);
			
			format(STRING_GLOBAL, 128, "{%s}[%s] {FFFFFF}%s [id %d] положил(а) на склад {3399FF}%i{66CC00} патрон",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],p_info[playerid][pName], playerid, put);
			family_message(p_info[playerid][pFamily], 0x66CC00FF, STRING_GLOBAL);

			UpdateFamilyStore(p_info[playerid][pFamily]);
		    return 1;
		}
		case dDrugsGet1:
		{
			if(!response) return pc_cmd_family(playerid);
			new put = strval(inputtext), newslot;
			if(put < 1 || put > 500 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,dDrugsGet1,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 500","Взять","Назад");
			if(family_info[p_info[playerid][pFamily]][f_drugs] < put) return ShowPlayerDialogEx(playerid,dDrugsGet1,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно наркотиков","Взять","Назад");
            if(CheckMaxVes(playerid, 44, put, newslot) == 1) return SendErr(playerid, "У вас нет свободного места в инвентаре");
			family_info[p_info[playerid][pFamily]][f_drugs] -= put;

			PlayerItem1[playerid][newslot] = 44;
			PlayerItem2[playerid][newslot] += put;
			SaveItem(playerid, newslot);
			
			format(STRING_GLOBAL, 128, "{%s}[%s] {FFFFFF}%s [id %d] взял(а) с склада {3399FF}%i{66CC00} наркотиков",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],p_info[playerid][pName], playerid, put);
			family_message(p_info[playerid][pFamily], 0x66CC00FF, STRING_GLOBAL);

			UpdateFamilyStore(p_info[playerid][pFamily]);
			return 1;
		}
		case dDrugsPut1:
		{
  			if(!response) return pc_cmd_family(playerid);
  			
  			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==44){ok=s;break;}
			}
  			
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,dDrugsPut1,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 1000","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,dDrugsPut1,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно наркотиков с собой","Положить","Назад");
			family_info[p_info[playerid][pFamily]][f_drugs] += put;
			
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok]=0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);
			
			format(STRING_GLOBAL, 128, "{%s}[%s] {FFFFFF}%s [id %d] положил(а) на склад {3399FF}%i{66CC00} наркотиков",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],p_info[playerid][pName], playerid, put);
			family_message(p_info[playerid][pFamily], 0x66CC00FF, STRING_GLOBAL);

			UpdateFamilyStore(p_info[playerid][pFamily]);
		    return 1;
		}
		case 2169:
		{
			if(!response) return pc_cmd_family(playerid);
			
			new ok;
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==69){ok=s;break;}
			}
			
			new put = strval(inputtext);
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,2169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* Доспустимые значения: 1 - 1000","Положить","Назад");
            if(PlayerItem2[playerid][ok] < put) return ShowPlayerDialogEx(playerid,2169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно металла с собой","Положить","Назад");
			family_info[p_info[playerid][pFamily]][f_metall] +=put;
			
			if(PlayerItem2[playerid][ok] == 0)
			{
				PlayerItem1[playerid][ok]=0;
			}
			PlayerItem2[playerid][ok] -= put;
			SaveItem(playerid, ok);

			format(STRING_GLOBAL, 128, "{%s}[%s] {FFFFFF}%s [id %d] положил(а) на склад {3399FF}%i{66CC00} кг металла",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],p_info[playerid][pName], playerid, put);
			family_message(p_info[playerid][pFamily], 0x66CC00FF, STRING_GLOBAL);

			UpdateFamilyStore(p_info[playerid][pFamily]);
			return 1;
		}
		case 2135:
		{
   			if(!response) return pc_cmd_family(playerid);
			new put = strval(inputtext);
			if(put < 1 || put >= MONEY_LIMIT || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,2135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
   			if(p_info[playerid][pCash] < put) return ShowPlayerDialogEx(playerid,2135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* У вас недостаточно денег с собой","Положить","Назад");
			family_info[p_info[playerid][pFamily]][f_money] += put;
			GiveMoney(playerid, -put, "Положил на склад семьи");
			MysqlUpdatePlayerInt(playerid,"cash",p_info[playerid][pCash]);

			format(STRING_GLOBAL, 128, "{%s}[%s] {FFFFFF}%s [id %d] положил(а) на склад {3399FF}%i{66CC00} рублей",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],p_info[playerid][pName], playerid, put);
			family_message(p_info[playerid][pFamily], 0x66CC00FF, STRING_GLOBAL);

			UpdateFamilyStore(p_info[playerid][pFamily]);
		    return 1;
		}
  		case 2136:
		{
   			if(!response) return pc_cmd_family(playerid);
			new put = strval(inputtext);
			if(p_info[playerid][pFamilySozd] == 0 && p_info[playerid][pFamilyZam] == 0) return SendErr(playerid, "Брать деньги со склада может создатель и заместитель");
			if(put < 1 || !strlen(inputtext)) return ShowPlayerDialogEx(playerid,2136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
   			if(family_info[p_info[playerid][pFamily]][f_money] < put) return ShowPlayerDialogEx(playerid,2136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:\n\n{AFAFAF}* На складе недостаточно денег","Взять","Назад");
			family_info[p_info[playerid][pFamily]][f_money] -= put;
			GiveMoney(playerid, put, "Взял со склада семьи");
			MysqlUpdatePlayerInt(playerid,"cash",p_info[playerid][pCash]);

			format(STRING_GLOBAL, 128, "{%s}[%s] {FFFFFF}%s [id %d] взял(а) с склада {3399FF}%i{66CC00} рублей",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],p_info[playerid][pName], playerid, put);
			family_message(p_info[playerid][pFamily], 0x66CC00FF, STRING_GLOBAL);

			UpdateFamilyStore(p_info[playerid][pFamily]);
		    return 1;
		}
		case 2171:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialogEx(playerid,dDrugsPut1,DIALOG_STYLE_INPUT, "{ebec86}>> Положить наркотики:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 1: ShowPlayerDialogEx(playerid,dPatronPut1,DIALOG_STYLE_INPUT, "{ebec86}>> Положить патроны:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 2: ShowPlayerDialogEx(playerid,2169,DIALOG_STYLE_INPUT, "{ebec86}>> Положить металл:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 3: ShowPlayerDialogEx(playerid,2135,DIALOG_STYLE_INPUT, "{ebec86}>> Положить деньги:",""nwhite"Введите количество в строчку ниже:","Положить","Назад");
				case 4: ShowPlayerDialogEx(playerid,dDrugsGet1,DIALOG_STYLE_INPUT, "{ebec86}>> Взять наркотики:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 5:	ShowPlayerDialogEx(playerid,dPatronGet1,DIALOG_STYLE_INPUT, "{ebec86}>> Взять патроны:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 6:	ShowPlayerDialogEx(playerid,2168,DIALOG_STYLE_INPUT, "{ebec86}>> Взять металл:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
				case 7: ShowPlayerDialogEx(playerid,2136,DIALOG_STYLE_INPUT, "{ebec86}>> Взять деньги:",""nwhite"Введите количество в строчку ниже:","Взять","Назад");
			}
			return 1;
		}
	case 11057:
		{
			new idx = GetPVarInt(playerid, "PlayerHouseEnter");
			if(!response)
			{
				if(!strcmp(HouseInfo[idx][hOwner], "None", true))
				{
					if(GetMoney(playerid) < HouseInfo[idx][hPrice]*WorkSalary[7]) return SendErr(playerid, "У вас не хватает денег");
					else
					{
						new house = 0, room = 0;
						for(new i = TOTALHOUSE; i > 0; i --)
						{
							if(!strcmp(HouseInfo[i][hOwner], GetName(playerid), true)) house++;
						}
						if(house != 0) return SendErr(playerid, "У вас уже есть дом");
						for(new i = TOTALROOMS; i > 0; i--)
						{
							if(!strcmp(RoomsInfo[i][rOwner],p_info[playerid][pName],true)) room++;
						}
						if(room != 0) return SendErr(playerid, "У вас уже есть квартира");
						GiveMoney(playerid, -HouseInfo[idx][hPrice]*WorkSalary[7], "Покупка дома");
						HouseInfo[idx][hBuyPrice] = HouseInfo[idx][hPrice]/2;
						HouseInfo[idx][hOplata] = 1;
						HouseInfo[idx][hLock] = 1;

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы купили дом за %iр. У вас осталось: %iр",HouseInfo[idx][hPrice]*WorkSalary[7], p_info[playerid][pCash]);
						SendClientMessage(playerid, COLOR_GREEN, STRING_GLOBAL);
						SendClientMessage(playerid, COLOR_YELLOW, "Ваш домашний счет проплачен на 1 день, рекомендуем вам оплатить дом");

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Стоимость кварплаты для вашего дома будет составлять %dр в сутки",GetHomeOplata(idx));
						SendClientMessage(playerid, COLOR_YELLOW, STRING_GLOBAL);
						strmid(HouseInfo[idx][hOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HOUSE" SET hOwner = '%s', hOplata = %d, buyprice = %d, hLock = %d WHERE id = '%d' LIMIT 1", HouseInfo[idx][hOwner], HouseInfo[idx][hOplata], HouseInfo[idx][hBuyPrice], HouseInfo[idx][hLock], idx);
						mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
						p_info[playerid][pSpawnChange] = 1;
						MysqlUpdatePlayerInt(playerid, "spawnchange", p_info[playerid][pSpawnChange]);
						UpdateHouse(idx);
						
						FracBank[9] += HouseInfo[idx][hPrice]*WorkSalary[7];
						MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						return 1;
					}
				}
			}
			LoadTexture(playerid);
			SetPlayerPos(playerid,HouseInfo[idx][hExitx],HouseInfo[idx][hExity],HouseInfo[idx][hExitz]);
			SetPlayerInterior(playerid,HouseInfo[idx][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[idx][hVirtual]);
		}
	case 11056:
		{
			if(!response) return 1;
			ShowPlayerDialogEx(playerid, 11057, DIALOG_STYLE_MSGBOX, "{ebec86}>> Дом выставлен на продажу", "{f0f0f0}Выберите желаемое действие:", "Осмотреть", "Купить");
			return 1;
		}
    case 11075:
		{
			if(!response) return 1;
			new idx = GetPVarInt(playerid, "PlayerHouseEnter");
			if(HouseInfo[idx][hLock] == 1)
			{
				if(strcmp(GetName(playerid), HouseInfo[idx][hOwner], true) == 0) ShowPlayerDialogEx(playerid, D_JOB+14, 0, "{ebec86}>> Дом", "{FFFFFF}Ваш дом закрыт\n\nВы хотите его открыть?", "Да", "Нет");
				GameTextForPlayer(playerid, "~r~LOCKED", 5000, 1);
			}
			else
			{
				LoadTexture(playerid);
				SetPlayerPos(playerid,HouseInfo[idx][hExitx],HouseInfo[idx][hExity],HouseInfo[idx][hExitz]);
				SetPlayerInterior(playerid,HouseInfo[idx][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[idx][hVirtual]);
				
				if(HouseInfo[idx][hUpdate] >= 2) SendClientMessage(playerid, 0xEFFF87FF, "В этом доме имеется аптечка. Чтобы восстановить здоровье используйте {FFFFFF}/healup");
			}
		}
	case 9827:
	    {
	        if(!response) return 1;
	        new bizid = GetPVarInt(playerid, "PlayerBizz");
			if(BizzInfo[bizid][bLock]) return SendErr(playerid, "Бизнес закрыт");
			if(BizzInfo[bizid][bEnter] > 1)
			{
				format(STRING_GLOBAL, 113, "{FFFFFF}Цена за вход в бизнес: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Вы действительно хотите зайти в бизнес?",BizzInfo[bizid][bEnter]);
				ShowPlayerDialogEx(playerid, 9828, DIALOG_STYLE_MSGBOX, "{ebec86}>> Вход в бизнес", STRING_GLOBAL, "Да", "Нет");
				return 1;
			}
			if(BizzInfo[bizid][bHeal] == 1) SendClientMessage(playerid, 0xEFFF87FF, "В этом бизнесе имеется аптечка. Чтобы восстановить здоровье используйте {FFFFFF}/healup {EFFF87}({f0e86b}150{FFFFFF} рублей{EFFF87})");
			BizzInfo[bizid][bVisitors]++;
			SetTimerEx("PickupBack",3000,0,"i",playerid);
			pickupentered[playerid] = 1;
			LoadTexture(playerid);
			SetPlayerPos(playerid,BizzInfo[bizid][bExitx], BizzInfo[bizid][bExity], BizzInfo[bizid][bExitz]);
			SetPlayerInterior(playerid,BizzInfo[bizid][bInt]);
			SetPlayerVirtualWorld(playerid,BizzInfo[bizid][bVirtual]);
			SetCameraBehindPlayer(playerid);
	    }
	case 9828:
	    {
	        if(!response) return 1;
	        new idx = GetPVarInt(playerid, "PlayerBizz");
			if(GetMoney(playerid) < BizzInfo[idx][bEnter]) return SendErr(playerid, "Недостаточно средств для входа");
			if(BizzInfo[idx][bHeal] == 1) SendClientMessage(playerid, 0xEFFF87FF, "В этом бизнесе имеется аптечка. Чтобы восстановить здоровье используйте {FFFFFF}/healup {EFFF87}({f0e86b}150{FFFFFF} рублей{EFFF87})");

			SetTimerEx("PickupBack",3000,0,"i",playerid);
			pickupentered[playerid] = 1;
			GiveMoney(playerid, -BizzInfo[idx][bEnter], "Вход в бизнес");
			BizzInfo[idx][bMoneyHour] += BizzInfo[idx][bEnter];
			BizzPay[idx] += BizzInfo[idx][bEnter];
			LoadTexture(playerid);
			SetPlayerPos(playerid,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz]);
			SetPlayerInterior(playerid,BizzInfo[idx][bInt]);
			SetPlayerVirtualWorld(playerid,BizzInfo[idx][bVirtual]);
			SetCameraBehindPlayer(playerid);
			MysqlUpdateBizzInt(idx, "bizzpay", BizzPay[idx]);
	    }
	case 8420:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 2)) RemovePlayerAttachedObject(objectplayerid, 2);
						SetPlayerAttachedObject(objectplayerid,2,19137,2,0.100000,0.000000,0.000000,0.000000,0.000000,0.000000,1.000000,1.000000,1.000000);
						return 1;
					}
				case 1:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
						SetPlayerAttachedObject(objectplayerid,5, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
				case 2:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 18646, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
				case 3:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
						SetPlayerAttachedObject(objectplayerid,5, 19163, 2, 0.111052, 0.021643, -0.000846, 100.280899, 100.752510, 445.071044, 1.100000, 1.300000, 1.300000);
						return 1;
					}
				case 4:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18915, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 5:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18912, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 6:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18916, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 7:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18917, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 8:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 18918, 2, 0.1, 0.03, -0.005, 90.0, 180.0, 90.0);
						return 1;
					}
				case 9:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
						return 1;
					}
				case 10:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 4)) RemovePlayerAttachedObject(objectplayerid, 4);
						SetPlayerAttachedObject(objectplayerid,4, 18643, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
				case 11:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 1) || IsPlayerAttachedObjectSlotUsed(objectplayerid, 4))
						{
							RemovePlayerAttachedObject(objectplayerid, 0);
							RemovePlayerAttachedObject(objectplayerid, 1);
							RemovePlayerAttachedObject(objectplayerid, 4);
						}
						SetPlayerAttachedObject(objectplayerid,0, 18693, 5, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(objectplayerid,1, 18693, 6, 1.983503, 1.558882, -0.129482, 86.705787, 308.978118, 268.198822, 1.500000, 1.500000, 1.500000);
						SetPlayerAttachedObject(objectplayerid,4, 18965, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
						return 1;
					}
				case 12:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
						SetPlayerAttachedObject(objectplayerid,5, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);

						return 1;
					}
				case 13:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 5)) RemovePlayerAttachedObject(objectplayerid, 5);
						SetPlayerAttachedObject(objectplayerid,5, 354, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
						return 1;
					}
				case 14:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
						SetPlayerAttachedObject(objectplayerid,1, 356, 6, 0.013610, -0.021393, -0.144862, 2.354303, 354.413848, 0.219168, 3.034477, 3.000000, 3.000000);
						return 1;
					}
				case 15:
					{

						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 1)) RemovePlayerAttachedObject(objectplayerid, 1);
						SetPlayerAttachedObject(objectplayerid,1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785);

						return 1;
					}
				case 16:
					{
						if(IsPlayerAttachedObjectSlotUsed(objectplayerid, 0)) RemovePlayerAttachedObject(objectplayerid, 0);
						SetPlayerAttachedObject(objectplayerid,0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);
						return 1;
					}
				case 17:
					{
						RemovePlayerAttachedObject(objectplayerid, 0);
						RemovePlayerAttachedObject(objectplayerid, 1);
						RemovePlayerAttachedObject(objectplayerid, 2);
						RemovePlayerAttachedObject(objectplayerid, 3);
						RemovePlayerAttachedObject(objectplayerid, 4);
						RemovePlayerAttachedObject(objectplayerid, 5);
						RemovePlayerAttachedObject(objectplayerid, 6);
						RemovePlayerAttachedObject(objectplayerid, 7);
						RemovePlayerAttachedObject(objectplayerid, 8);
						RemovePlayerAttachedObject(objectplayerid, 9);
						return 1;
					}
				}
			}
		}
    case dialog_PHONE_1:
		{
			if(response)
			{
			    if(!strcmp(inputtext, "- Список контактов")) ShowPlayerContacts(playerid);
			    if(!strcmp(inputtext, "- Добавить контакт")) ShowPlayerDialogEx(playerid, dialog_PHONE_6, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите имя контакта:", "Принять", "Назад");
			    if(!strcmp(inputtext, "- Заказать услуги")) ShowPlayerDialogEx(playerid, dialog_PHONE_15, DIALOG_STYLE_LIST, "{ebec86}>> Заказать услуги", "- Вызвать кортеж скорой помощи\n- Вызвать полицию\n- Вызвать такси\n- Вызвать механика", "Выбрать", "Назад");
				if(!strcmp(inputtext, "- Звук СМС")) ShowPlayerDialogEx(playerid, dialog_PHONE_11, DIALOG_STYLE_LIST, "{ebec86}>> Выберите звук", "- Звук 1\n- Звук 2\n- Звук 3\n- Звук 4\n- Звук 5\n- Звук 6\n- Звук 7\n- Звук 8", "Выбрать", "Назад");
				if(!strcmp(inputtext, "- Мелодия звонка")) ShowPlayerDialogEx(playerid, dialog_PHONE_13, DIALOG_STYLE_LIST, "{ebec86}>> Выберите мелодию", "- Мелодия 1\n- Мелодия 2\n- Мелодия 3\n- Мелодия 4\n- Мелодия 5\n- Мелодия 6\n- Мелодия 7", "Выбрать", "Назад");
				if(!strcmp(inputtext, "- Выключить телефон") || !strcmp(inputtext, "- Включить телефон"))
				{
				    if(!GetPVarInt(playerid, "OnlinePhone"))
				    {
						SetPVarInt(playerid, "OnlinePhone", 1);
						SendInf(playerid, "Вы выключили свой телефон");
					}
					else
					{
						SetPVarInt(playerid, "OnlinePhone", 0);
						SendInf(playerid, "Вы включили свой телефон");
					}
				}
			}
		}
	case dialog_PHONE_2:
		{
			if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, dialog_PHONE_2, DIALOG_STYLE_INPUT, "{ebec86}>> Отправить СМС", "{FAEBD7}Введите текст для СМС сообщения:", "Принять", "Назад");
    			if(p_info[playerid][pPhoneNumber] == ContactsNumber[playerid][GetPVarInt(playerid, "ContactEnter")]) return SendErr(playerid, "Вы выбрали свой номер");
				foreach(new i: Player)
				{
					if(IsPlayerConnected(i))
					{
						if(p_info[i][pPhoneNumber] == ContactsNumber[playerid][GetPVarInt(playerid, "ContactEnter")])
						{
							if(GetPVarInt(i, "OnlinePhone")) return SendErr(playerid, "Абонент недоступен");
							if(strlen(inputtext) >= 60)
							{
							 	new String2[300];
							 	strmid(String2, inputtext, 60, 300, 300);
								strdel(inputtext, 60, 300);
        						new PlayerNumber = p_info[playerid][pPhoneNumber];
								new GivePlayerNumber = p_info[i][pPhoneNumber];
								for(new c; c != MAX_CONTACTS; c++)
								{
									if(ContactsNumber[i][c] == PlayerNumber)
									{
										format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS от %s: {FAEBD7}%s", ContactsName[i][c], inputtext);
										SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
										break;
									}
									else if(c == 49)
									{
										format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS от %d: {FAEBD7}%s", PlayerNumber, inputtext);
										SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
									}
								}
								for(new c; c != MAX_CONTACTS; c++)
								{
									if(ContactsNumber[playerid][c] == GivePlayerNumber)
									{
										format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS к %s: {FAEBD7}%s", ContactsName[playerid][c], inputtext);
										SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
										break;
									}
									else if(c == 49)
									{
										format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS к %d: {FAEBD7}%s", GivePlayerNumber, inputtext);
										SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
									}
								}
								PlayerPlaySound(i, p_info[i][SoundSMS], 0, 0, 0);
							}
							else
							{
								new PlayerNumber = p_info[playerid][pPhoneNumber];
								new GivePlayerNumber = p_info[i][pPhoneNumber];
								for(new c; c != MAX_CONTACTS; c++)
								{
									if(ContactsNumber[i][c] == PlayerNumber)
									{
										format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS от %s: {FAEBD7}%s", ContactsName[i][c], inputtext);
										SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
										break;
									}
									else if(c == 49)
									{
										format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS от %d: {FAEBD7}%s", PlayerNumber, inputtext);
										SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
									}
								}
								for(new c; c != MAX_CONTACTS; c++)
								{
									if(ContactsNumber[playerid][c] == GivePlayerNumber)
									{
										format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS к %s: {FAEBD7}%s", ContactsName[playerid][c], inputtext);
										SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
										break;
									}
									else if(c == 49)
									{
										format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS к %d: {FAEBD7}%s", GivePlayerNumber, inputtext);
										SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
									}
								}
								PlayerPlaySound(i, p_info[i][SoundSMS], 0, 0, 0);
							}
							SetPlayerChatBubble(playerid, "написал(а) СМС", COLOR_PURPLE, 5.0, 10000);
							return 1;
						}
					}
				}
				SendErr(playerid, "Абонент недоступен");
			}
			else ShowPlayerDialogEx(playerid, dialog_PHONE_8, DIALOG_STYLE_LIST, "{ebec86}>> Контакты", "- Посмотреть\n- Позвонить\n- Отправить СМС\n- Изменить имя\n- Изменить номер\n- Удалить", "Выбрать", "Назад");
		}
	case dialog_PHONE_3:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0: ShowPlayerContacts(playerid);
					case 1: ShowPlayerDialogEx(playerid, dialog_PHONE_6, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите имя контакта:", "Принять", "Назад");
				}
			}
		}
	case dialog_PHONE_4:
		{
			if(response)
			{
				SetPVarInt(playerid, "ContactEnter", listitem);
				ShowPlayerDialogEx(playerid, dialog_PHONE_8, DIALOG_STYLE_LIST, "{ebec86}>> Контакты", "- Посмотреть\n- Позвонить\n- Отправить СМС\n- Изменить имя\n- Изменить номер\n- Удалить", "Выбрать", "Назад");
			}
			else ShowPlayerDialogEx(playerid, dialog_PHONE_3, DIALOG_STYLE_LIST, "{ebec86}>> Контакты", "- Список контактов\n- Добавить контакт", "Выбрать", "Назад");
		}
	case dialog_PHONE_5:
		{
			if(response) ShowPlayerDialogEx(playerid, dialog_PHONE_8, DIALOG_STYLE_LIST, "{ebec86}>> Контакты", "- Посмотреть\n- Позвонить\n- Отправить СМС\n- Изменить имя\n- Изменить номер\n- Удалить", "Выбрать", "Назад");
		}
	case dialog_PHONE_6:
		{
			if(response)
			{
			    if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, dialog_PHONE_6, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите имя контакта:", "Принять", "Назад");
			    for(new c; c != MAX_CONTACTS; c++)
				{
					if(strlen(ContactsName[playerid][c]) > 1 && strcmp(ContactsName[playerid][c], inputtext, true) == 0)
					{
						ShowPlayerDialogEx(playerid, dialog_PHONE_6, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите имя контакта:\n\n{AFAFAF}* Контакт с таким именем уже записан", "Принять", "Назад");
						break;
					}
					if(strlen(ContactsName[playerid][c]) < 1)
					{
						SetPVarInt(playerid, "ContactEnter", c);
						strmid(ContactsName[playerid][c], inputtext, 0, strlen(inputtext), 100);
						ShowPlayerDialogEx(playerid, dialog_PHONE_7, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите номер контакта:", "Принять", "Назад");
						break;
					}
					else if(c == MAX_CONTACTS-1) SendErr(playerid, "У вас записано максимальное число контактов");
				}
			}
			else ShowPlayerDialogEx(playerid, dialog_PHONE_3, DIALOG_STYLE_LIST, "{ebec86}>> Контакты", "- Список контактов\n- Добавить контакт", "Выбрать", "Назад");
		}
	case dialog_PHONE_7:
		{
			if(response)
			{
			    if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, dialog_PHONE_7, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите номер контакта:", "Принять", "Назад");
				if(strval(inputtext) < 100000 || strval(inputtext) > 999999) return ShowPlayerDialogEx(playerid, dialog_PHONE_7, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите номер контакта:\n\n{AFAFAF}* Номер не может быть меньше 10000 или больше 99999", "Принять", "Назад");
				ContactsNumber[playerid][GetPVarInt(playerid, "ContactEnter")] = strval(inputtext);
				SaveContacts(playerid, GetPVarInt(playerid, "ContactEnter"));
				ShowPlayerContacts(playerid);
			}
			else
			{
				strdel(ContactsName[playerid][GetPVarInt(playerid, "ContactEnter")], 0, 100);
				ShowPlayerDialogEx(playerid, dialog_PHONE_6, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите имя контакта:", "Принять", "Назад");
			}
		}
	case dialog_PHONE_8:
		{
			if(response)
			{
				switch(listitem)
				{
    			case 0:
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FAEBD7}Контакт - {f0e86b}%s\n{FAEBD7}Номер - {f0e86b}%d", ContactsName[playerid][GetPVarInt(playerid, "ContactEnter")], ContactsNumber[playerid][GetPVarInt(playerid, "ContactEnter")]);
						ShowPlayerDialogEx(playerid, dialog_PHONE_5, DIALOG_STYLE_MSGBOX, "{ebec86}>> Контакты", STRING_GLOBAL, "Назад", "Выйти");
					}
				case 1:
					{
    					new Float:X, Float:Y, Float:Z;
    					if(!p_info[playerid][pPhoneNumber]) return SendErr(playerid, "У вас нет телефона");
						if(p_info[playerid][pPhoneNumber] == ContactsNumber[playerid][GetPVarInt(playerid, "ContactEnter")]) return SendErr(playerid, "Вы выбрали свой номер");
						foreach(new i: Player)
						{
							if(IsPlayerConnected(i))
							{
								if(p_info[i][pPhoneNumber] == ContactsNumber[playerid][GetPVarInt(playerid, "ContactEnter")])
								{
									if(GetPVarInt(i, "OnlinePhone")) return SendErr(playerid, "Абонент недоступен");
									if(GetPVarInt(i, "CallPlayerStart")) return SendErr(playerid, "Абонент занят");
									new PlayerNumber = p_info[playerid][pPhoneNumber];
									new GivePlayerNumber = p_info[i][pPhoneNumber];
									for(new c; c != MAX_CONTACTS; c++)
									{
										if(ContactsNumber[i][c] == PlayerNumber)
										{
											format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вам звонит %s. Нажмите '{f0e86b}Y{FAEBD7}' чтобы ответить или '{FF6347}N{FAEBD7}' чтобы сбросить", ContactsName[i][c]);
											SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
											break;
										}
										else if(c == 49)
										{
											format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вам звонит %d. Нажмите '{f0e86b}Y{FAEBD7}' чтобы ответить или '{FF6347}N{FAEBD7}' чтобы сбросить", PlayerNumber);
											SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
										}
									}
									for(new c; c != MAX_CONTACTS; c++)
									{
										if(ContactsNumber[playerid][c] == GivePlayerNumber)
										{
											format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы позвонили игроку %s. Нажмите '{FF6347}N{FAEBD7}' чтобы сбросить", ContactsName[playerid][c]);
											SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
											break;
										}
										else if(c == 49)
										{
											format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы позвонили по номеру %d. Нажмите '{FF6347}N{FAEBD7}' чтобы сбросить", GivePlayerNumber);
											SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
										}
									}
									SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
									SetPlayerAttachedObject(playerid, 1, p_info[playerid][pModelPhone], 6, 0.059000, 0.014000, -0.008999, 95.100051, -179.800033, 46.500030, 1.000000, 1.000000, 1.000000);
									GetPlayerPos(i, X, Y, Z);
									PlayerPlaySound(i, p_info[i][SoundCall], 0, 0, 0);
									SetPVarInt(playerid, "CallPlayerStart", 1);
									SetPVarInt(playerid, "CallPlayerID", i);
									SetPVarInt(i, "CallPlayerID", playerid);
									foreach(new in: Player)
									{
										if(IsPlayerInRangeOfPoint(in, 5.0, X, Y, Z))
										{
											if(i == in) continue;
											format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "У %s звонит телефон", p_info[i][pName]);
											SendClientMessage(in, COLOR_PURPLE, STRING_GLOBAL);
										}
									}
									return 1;
								}
							}
						}
						SendErr(playerid, "Абонент недоступен");
					}
				case 2:
					{
						if(!p_info[playerid][pPhoneNumber]) return SendErr(playerid, "У вас нет телефона");
						ShowPlayerDialogEx(playerid, dialog_PHONE_2, DIALOG_STYLE_INPUT, "{ebec86}>> Отправить СМС", "{FAEBD7}Введите текст для СМС сообщения:", "Принять", "Назад");
					}
				case 3: ShowPlayerDialogEx(playerid, dialog_PHONE_9, DIALOG_STYLE_INPUT, "{ebec86}>> Контакты", "{FAEBD7}Введите новое имя для контакта:", "Принять", "Назад");
				case 4: ShowPlayerDialogEx(playerid, dialog_PHONE_10, DIALOG_STYLE_INPUT, "{ebec86}>> Контакты", "{FAEBD7}Введите новый номер для контакта:", "Принять", "Назад");
				case 5:
					{
						for(new c; c != MAX_CONTACTS; c++)
						{
							if(strlen(ContactsName[playerid][c]) < 1)
							{
								if(c-1 == GetPVarInt(playerid, "ContactEnter"))
								{
									strdel(ContactsName[playerid][c-1], 0, 100);
									ContactsNumber[playerid][c-1] = 0;
									SaveContacts(playerid, c-1);
									break;
								}
								else
								{
									c = c-1;
									strmid(ContactsName[playerid][GetPVarInt(playerid, "ContactEnter")], ContactsName[playerid][c], 0, strlen(ContactsName[playerid][c]), 100);
									strdel(ContactsName[playerid][c], 0, 100);
									ContactsNumber[playerid][GetPVarInt(playerid, "ContactEnter")] = ContactsNumber[playerid][c];
									ContactsNumber[playerid][c] = 0;
									SaveContacts(playerid, c);
									SaveContacts(playerid, GetPVarInt(playerid, "ContactEnter"));
									break;
								}
							}
						}
						ShowPlayerContacts(playerid);
					}
				}
			}
			else ShowPlayerContacts(playerid);
		}
	case dialog_PHONE_9:
		{
			if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, dialog_PHONE_9, DIALOG_STYLE_INPUT, "{ebec86}>> Контакты", "{FAEBD7}Введите новое имя для контакта:", "Принять", "Назад");
				strmid(ContactsName[playerid][GetPVarInt(playerid, "ContactEnter")], inputtext, 0, strlen(inputtext), 100);
				SaveContacts(playerid, GetPVarInt(playerid, "ContactEnter"));
				ShowPlayerContacts(playerid);
			}
			else ShowPlayerDialogEx(playerid, dialog_PHONE_8, DIALOG_STYLE_LIST, "{ebec86}>> Контакты", "- Посмотреть\n- Позвонить\n- Отправить СМС\n- Изменить имя\n- Изменить номер\n- Удалить", "Выбрать", "Назад");
		}
	case dialog_PHONE_10:
		{
			if(response)
			{
				if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, dialog_PHONE_10, DIALOG_STYLE_INPUT, "{ebec86}>> Контакты", "{FAEBD7}Введите новый номер для контакта:", "Принять", "Назад");
				if(strval(inputtext) < 100000 || strval(inputtext) > 999999) return ShowPlayerDialogEx(playerid, dialog_PHONE_7, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление контакта", "{FAEBD7}Введите новый номер для контакта:\n\n{AFAFAF}* Номер не может быть меньше 100000 или больше 999999", "Принять", "Назад");
				ContactsNumber[playerid][GetPVarInt(playerid, "ContactEnter")] = strval(inputtext);
				SaveContacts(playerid, GetPVarInt(playerid, "ContactEnter"));
			}
			else ShowPlayerDialogEx(playerid, dialog_PHONE_8, DIALOG_STYLE_LIST, "{ebec86}>> Контакты", "- Посмотреть\n- Позвонить\n- Отправить СМС\n- Изменить имя\n- Изменить номер\n- Удалить", "Выбрать", "Назад");
		}
	case dialog_PHONE_11:
		{
		    STRING_GLOBAL = "";
			SetPVarInt(playerid, "SMSSoundEnter", listitem);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ebec86}>> Звук %d", listitem+1);
			if(response) ShowPlayerDialogEx(playerid, dialog_PHONE_12, DIALOG_STYLE_LIST, STRING_GLOBAL, "- Прослушать\n- Установить", "Выбрать", "Назад");
			else
			{
			    if(!GetPVarInt(playerid, "OnlinePhone")) ShowPlayerDialogEx(playerid, dialog_PHONE_1, DIALOG_STYLE_LIST, "{ebec86}>> Телефон", "- Список контактов\n- Добавить контакт\n- Заказать услуги\n- Звук СМС\n- Мелодия звонка\n- Выключить телефон", "Выбрать", "Назад");
			    else ShowPlayerDialogEx(playerid, dialog_PHONE_1, DIALOG_STYLE_LIST, "{ebec86}>> Телефон", "- Звук СМС\n- Мелодия звонка\n- Включить телефон", "Выбрать", "Назад");
			}
		}
	case dialog_PHONE_12:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
					{
					    switch(GetPVarInt(playerid, "SMSSoundEnter"))
					    {
					    	case 0: PlayerPlaySound(playerid, 1052, 0, 0, 0);
					    	case 1: PlayerPlaySound(playerid, 1053, 0, 0, 0);
					    	case 2: PlayerPlaySound(playerid, 1056, 0, 0, 0);
					    	case 3: PlayerPlaySound(playerid, 1057, 0, 0, 0);
					    	case 4: PlayerPlaySound(playerid, 1083, 0, 0, 0);
					    	case 5: PlayerPlaySound(playerid, 1084, 0, 0, 0);
					    	case 6: PlayerPlaySound(playerid, 1085, 0, 0, 0);
					    	case 7: PlayerPlaySound(playerid, 1150, 0, 0, 0);
						}
						STRING_GLOBAL = "";
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ebec86}>> Звук %d", GetPVarInt(playerid, "SMSSoundEnter")+1);
	    				ShowPlayerDialogEx(playerid, dialog_PHONE_12, DIALOG_STYLE_LIST, STRING_GLOBAL, "- Прослушать\n- Установить", "Выбрать", "Назад");
					}
					case 1:
					{
						switch(GetPVarInt(playerid, "SMSSoundEnter"))
					    {
					    	case 0: p_info[playerid][SoundSMS] = 1052;
					    	case 1: p_info[playerid][SoundSMS] = 1053;
					    	case 2: p_info[playerid][SoundSMS] = 1056;
					    	case 3: p_info[playerid][SoundSMS] = 1057;
					    	case 4: p_info[playerid][SoundSMS] = 1083;
					    	case 5: p_info[playerid][SoundSMS] = 1084;
					    	case 6: p_info[playerid][SoundSMS] = 1085;
					    	case 7: p_info[playerid][SoundSMS] = 1150;
						}
						SendInf(playerid, "Сигнал СМС установлен");
						MysqlUpdatePlayerInt(playerid, "SoundSMS", p_info[playerid][SoundSMS]);
					}
				}
			}
			else ShowPlayerDialogEx(playerid, dialog_PHONE_11, DIALOG_STYLE_LIST, "{ebec86}>> Выберите звук", "- Звук 1\n- Звук 2\n- Звук 3\n- Звук 4\n- Звук 5\n- Звук 6\n- Звук 7\n- Звук 8", "Выбрать", "Назад");
		}
	case dialog_PHONE_13:
		{
		    STRING_GLOBAL = "";
			SetPVarInt(playerid, "CallSoundEnter", listitem);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ebec86}>> Мелодия %d", listitem+1);
			if(response)
			{
				if(!GetPVarInt(playerid, "MusicListen")) ShowPlayerDialogEx(playerid, dialog_PHONE_14, DIALOG_STYLE_LIST, STRING_GLOBAL, "- Прослушать\n- Установить", "Выбрать", "Назад");
				else ShowPlayerDialogEx(playerid, dialog_PHONE_14, DIALOG_STYLE_LIST, STRING_GLOBAL, "- Остановить\n- Установить", "Выбрать", "Назад");
			}
			else
			{
			    if(!GetPVarInt(playerid, "OnlinePhone")) ShowPlayerDialogEx(playerid, dialog_PHONE_1, DIALOG_STYLE_LIST, "{ebec86}>> Телефон", "- Список контактов\n- Добавить контакт\n- Заказать услуги\n- Звук СМС\n- Мелодия звонка\n- Выключить телефон", "Выбрать", "Назад");
			    else ShowPlayerDialogEx(playerid, dialog_PHONE_1, DIALOG_STYLE_LIST, "{ebec86}>> Телефон", "- Звук СМС\n- Мелодия звонка\n- Включить телефон", "Выбрать", "Назад");
			}
		}
	case dialog_PHONE_14:
		{
			if(response)
			{
				switch(listitem)
				{
				    case 0:
					{
					    switch(GetPVarInt(playerid, "CallSoundEnter"))
					    {
					    	case 0:
							{
							    if(!GetPVarInt(playerid, "MusicListen")) PlayerPlaySound(playerid, 1062, 0, 0, 0);
							    else PlayerPlaySound(playerid, 1063, 0, 0, 0);
							}
					    	case 1:
							{
							    if(!GetPVarInt(playerid, "MusicListen")) PlayerPlaySound(playerid, 1068, 0, 0, 0);
							    else PlayerPlaySound(playerid, 1069, 0, 0, 0);
							}
							case 2:
							{
							    if(!GetPVarInt(playerid, "MusicListen")) PlayerPlaySound(playerid, 1076, 0, 0, 0);
							    else PlayerPlaySound(playerid, 1077, 0, 0, 0);
							}
							case 3:
							{
							    if(!GetPVarInt(playerid, "MusicListen")) PlayerPlaySound(playerid, 1097, 0, 0, 0);
							    else PlayerPlaySound(playerid, 1098, 0, 0, 0);
							}
							case 4:
							{
							    if(!GetPVarInt(playerid, "MusicListen")) PlayerPlaySound(playerid, 1183, 0, 0, 0);
							    else PlayerPlaySound(playerid, 1184, 0, 0, 0);
							}
							case 5:
							{
							    if(!GetPVarInt(playerid, "MusicListen")) PlayerPlaySound(playerid, 1185, 0, 0, 0);
							    else PlayerPlaySound(playerid, 1186, 0, 0, 0);
							}
							case 6:
							{
							    if(!GetPVarInt(playerid, "MusicListen")) PlayerPlaySound(playerid, 1187, 0, 0, 0);
							    else PlayerPlaySound(playerid, 1188, 0, 0, 0);
							}
						}
						STRING_GLOBAL = "";
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ebec86}>> Мелодия %d", GetPVarInt(playerid, "CallSoundEnter")+1);
	    				if(!GetPVarInt(playerid, "MusicListen"))
						{
							SetPVarInt(playerid, "MusicListen", 1);
							ShowPlayerDialogEx(playerid, dialog_PHONE_14, DIALOG_STYLE_LIST, STRING_GLOBAL, "- Остановить\n- Установить", "Выбрать", "Назад");
						}
						else
						{
							SetPVarInt(playerid, "MusicListen", 0);
						    ShowPlayerDialogEx(playerid, dialog_PHONE_14, DIALOG_STYLE_LIST, STRING_GLOBAL, "- Прослушать\n- Установить", "Выбрать", "Назад");
						}
					}
					case 1:
					{
						switch(GetPVarInt(playerid, "CallSoundEnter"))
					    {
					    	case 0: p_info[playerid][SoundCall] = 1062;
					    	case 1: p_info[playerid][SoundCall] = 1068;
					    	case 2: p_info[playerid][SoundCall] = 1076;
					    	case 3: p_info[playerid][SoundCall] = 1097;
					    	case 4: p_info[playerid][SoundCall] = 1183;
					    	case 5: p_info[playerid][SoundCall] = 1185;
					    	case 6: p_info[playerid][SoundCall] = 1187;
						}
						SendInf(playerid, "Мелодия звонка установлена");
						MysqlUpdatePlayerInt(playerid, "SoundCall", p_info[playerid][SoundCall]);
					}
				}
			}
			else ShowPlayerDialogEx(playerid, dialog_PHONE_13, DIALOG_STYLE_LIST, "{ebec86}>> Выберите мелодию", "- Мелодия 1\n- Мелодия 2\n- Мелодия 3\n- Мелодия 4\n- Мелодия 5\n- Мелодия 6\n- Мелодия 7", "Выбрать", "Назад");
		}
	case dialog_PHONE_15:
		{
			if(response)
			{
			    switch(listitem)
			    {
			        case 0:
			        {
						new Float:Pos[3];
						foreach(new i: Player)
						{
						    if(IsAMedic(i))
							{
							    GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
							    format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{f0e86b}Диспечер: {FAEBD7}%s [%d] вызывает МЧС. /accmedic [ID] чтобы принять вызов", p_info[playerid][pName], playerid);
							    SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
							    SendInf(playerid, "Ждите на месте пока ваш вызов примут");
								SetPVarInt(playerid, "CallMedic", 1);
							}
				   		}
				   		SendErr(playerid, "Нет кортежей скорой помощи на дежурстве");
					}
			        case 1:
			        {
						new Float:Pos[3];
						foreach(new i: Player)
						{
						    if(IsACop(i))
						    {
			        			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
						        format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{f0e86b}Диспечер: {FAEBD7}%s [%d] вызывает полицию. /accpolice [ID] чтобы принять вызов", p_info[playerid][pName], playerid);
						        SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
						        SendInf(playerid, "Ждите на месте пока ваш вызов примут");
								SetPVarInt(playerid, "CallPolice", 1);
							}
						}
						SendErr(playerid, "Нет полицейских на дежурстве");
			        }
			        case 2:
			        {
			            new Float:Pos[3];
						foreach(new i: Player)
						{
						    new VehicleID = GetPlayerVehicleID(i);
						    if(p_info[i][pJob] != JOB_TAXI) continue;
						    if(VehicleID >= TaxiVehicle[0] && VehicleID <= TaxiVehicle[1])
						    {
						        if(TaxiVehicleDriver[VehicleID] == i)
						        {
				        			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
							        format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{f0e86b}Диспечер: {FAEBD7}%s [%d] вызывает такси. /acctaxi [ID] чтобы принять вызов", p_info[playerid][pName], playerid);
							        SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
							        SendInf(playerid, "Ждите на месте пока ваш вызов примут");
									SetPVarInt(playerid, "CallTaxi", 1);
									zakaz_taxi++;
								}
							}
						}
						SendErr(playerid, "Нет таксистов на дежурстве");
			        }
			        case 3:
			        {
			            new Float:Pos[3];
						foreach(new i: Player)
						{
						    new VehicleID = GetPlayerVehicleID(i);
						    if(p_info[i][pJob] != JOB_MECHANIC) continue;
						    if(VehicleID >= MechanicVehicle[0] && VehicleID <= MechanicVehicle[1])
						    {
						        if(MechanicVehicleDriver[VehicleID] == i)
						        {
				        			GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
							        format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{f0e86b}Диспечер: {FAEBD7}%s [%d] вызывает механика. /accmechanic [ID] чтобы принять вызов", p_info[playerid][pName], playerid);
							        SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
							        SendInf(playerid, "Ждите на месте пока ваш вызов примут");
									SetPVarInt(playerid, "CallMechanic", 1);
								}
							}
						}
						SendErr(playerid, "Нет механиков на дежурстве");
			        }
			    }
            }
			else
			{
			    pc_cmd_phone(playerid);
			}
		}
	case dialog_BUY_PHONE:
		{
		    if(!response) return 1;
	      	switch(listitem)
			{
				case 0: p_info[playerid][pModelPhone] = 18866;
				case 1: p_info[playerid][pModelPhone] = 18867;
				case 2: p_info[playerid][pModelPhone] = 18868;
				case 3: p_info[playerid][pModelPhone] = 18869;
				case 4: p_info[playerid][pModelPhone] = 18870;
				case 5: p_info[playerid][pModelPhone] = 18871;
				case 6: p_info[playerid][pModelPhone] = 18872;
				case 7: p_info[playerid][pModelPhone] = 18873;
				case 8: p_info[playerid][pModelPhone] = 18874;
			}
			SendInf(playerid, "Вы купили сотовый телефон. (/phone)");
			MysqlUpdatePlayerInt(playerid, "pModelPhone", p_info[playerid][pModelPhone]);
			return 1;
		}
	case D_INFORMATION:
		{
			for(new i; i < 18; i++) TextDrawShowForPlayer(playerid, INFO[i]);
		}
    case D_ENMENU:
		{
			if(response)
			{
				STRING_GLOBAL = "";
				new VehicleID = GetPlayerVehicleID(playerid);
				new EngineStatus[50], LightsStatus[50], BootStatus[50], BonnetStatus[50], LimiterStatus[50];
				switch(listitem)
				{
				case 0:
					{
						if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
						if(GetPVarInt(playerid, "InShop") || InShop[playerid]) return 1;
						new cars = 0, vehicleid = GetPlayerVehicleID(playerid), arend_id = INVALID_PLAYER_ID;
						for(new i; i != sizeof(BE_Bad_Vehs); i++)
						{
							if(GetVehicleModel(vehicleid) == BE_Bad_Vehs[i]) cars++;
						}
						if(GetArendCarID(vehicleid, arend_id) != (-1))
						{
							new rc = GetArendCarID(vehicleid);
							if(ArendInfo[rc][aPlayerID] != playerid) return 1;
						}
						if(IsAPlane(vehicleid) || IsAVel(vehicleid)) return 1;
						if(Fuel[vehicleid] <= 0 && GetVehicleModel(vehicleid) != 462) return SendErr(playerid, "В транспорте закончился бензин, необходима заправка!");
						new Float:vehhealth;
						GetVehicleHealth(vehicleid, vehhealth);
						if(vehhealth <= 400 && cars == 0) return SendErr(playerid, "Машина поломана, вызовите механика!");
						GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(vehicleid,(Engine[vehicleid])?(false):(true),lights,alarm,doors,bonnet,boot,objective);
						Engine[vehicleid] = (Engine[vehicleid])?(false):(true);
						GameTextForPlayer(playerid, (Engine[vehicleid]) ? ("~w~ENGINE ~g~ON") : ("~w~ENGINE ~r~OFF"), 5000, 6);
					}
				case 1:
					{
						if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
						new cars = 0, vehicleid = GetPlayerVehicleID(playerid);
						for(new i; i != sizeof(BE_Bad_Vehs); i++)
						{
							if(GetVehicleModel(vehicleid) == BE_Bad_Vehs[i]) cars++;
						}
						if(cars > 0) return 1;
						if(IsAVel(vehicleid) || IsABoat(vehicleid)) return 1;
						GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(vehicleid,engine,(Lights[vehicleid])?(false):(true),alarm,doors,bonnet,boot,objective);
						Lights[vehicleid] = (Lights[vehicleid])?(false):(true);
						PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, (Lights[vehicleid]) ? ("~w~LIGHTS ~g~ON") : ("~w~LIGHTS ~r~OFF"), 5000, 6);
					}
                case 2:
					{
						if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
						new cars = 0, vehicleid = GetPlayerVehicleID(playerid);
						for(new i; i != sizeof(BE_Bad_Vehs); i++)
						{
							if(GetVehicleModel(vehicleid) == BE_Bad_Vehs[i]) cars++;
						}
						if(cars > 0) return 1;
						if(IsAVel(vehicleid) || IsABoat(vehicleid)) return 1;
						GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,(Bonnet[vehicleid])?(false):(true),boot,objective);
						Bonnet[vehicleid] = (Bonnet[vehicleid])?(false):(true);
						PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, (Bonnet[vehicleid]) ? ("~w~BONNET ~g~ON") : ("~w~BONNET ~r~OFF"), 5000, 6);
					}
                case 3:
					{
						if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
						new cars = 0, vehicleid = GetPlayerVehicleID(playerid);
						for(new i; i != sizeof(BE_Bad_Vehs); i++)
						{
							if(GetVehicleModel(vehicleid) == BE_Bad_Vehs[i]) cars++;
						}
						if(cars > 0) return 1;
						if(IsAVel(vehicleid) || IsABoat(vehicleid)) return 1;
						GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,(Boot[vehicleid])?(false):(true),objective);
						Boot[vehicleid] = (Boot[vehicleid])?(false):(true);
						PlayerPlaySound(playerid, 4604, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, (Boot[vehicleid]) ? ("~w~BOOT ~g~ON") : ("~w~BOOT ~r~OFF"), 5000, 6);
					}
                case 4:
					{
						if(!GetPVarInt(playerid, "slimit"))
						{
							SetPVarInt(playerid, "slimit", 60);
							SetPlayerChatBubble(playerid, "включил(а) ограничитель", COLOR_PURPLE, 5.0, 10000);
						}
						else
						{
							DeletePVar(playerid,"slimit");
							SetPlayerChatBubble(playerid, "выключил(а) ограничитель", COLOR_PURPLE, 5.0, 10000);
						}
					}
				}
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				if(engine == 1) EngineStatus = "{f0e86b}Заведен";
				else EngineStatus = "{FF6347}Заглушен";
				if(lights == 1) LightsStatus = "{f0e86b}Включены";
				else LightsStatus = "{FF6347}Выключены";
				if(boot == 1) BootStatus = "{f0e86b}Открыт";
				else BootStatus = "{FF6347}Закрыт";
				if(bonnet == 1) BonnetStatus = "{f0e86b}Открыт";
				else BonnetStatus = "{FF6347}Закрыт";
				if(GetPVarInt(playerid, "slimit")) LimiterStatus = "{f0e86b}Включен";
				else LimiterStatus = "{FF6347}Выключен";
				if(IsVehicleAir(VehicleID))
				{
					format(STRING_GLOBAL, 128, "1. Двигатель [%s{FFFFFF}]", EngineStatus);
					ShowPlayerDialogEx(playerid, D_ENMENU, DIALOG_STYLE_LIST, "{ebec86}>> Управление транспортом", STRING_GLOBAL, "Изменить", "Выйти");
				}
				else if(IsVehicleMoto(VehicleID))
				{
					format(STRING_GLOBAL, 128, "1. Двигатель [%s{FFFFFF}]\n2. Фары [%s{FFFFFF}]", EngineStatus, LightsStatus);
					ShowPlayerDialogEx(playerid, D_ENMENU, DIALOG_STYLE_LIST, "{ebec86}>> Управление транспортом", STRING_GLOBAL, "Изменить", "Выйти");
				}
				else
				{
					format(STRING_GLOBAL, 350, "1. Двигатель [%s{FFFFFF}]\n2. Фары [%s{FFFFFF}]\n3. Капот [%s{FFFFFF}]\n4. Багажник [%s{FFFFFF}]\n5. Ограничитель [%s{FFFFFF}]", EngineStatus, LightsStatus, BonnetStatus, BootStatus, LimiterStatus);
					ShowPlayerDialogEx(playerid, D_ENMENU, DIALOG_STYLE_LIST, "{ebec86}>> Управление транспортом", STRING_GLOBAL, "Изменить", "Выйти");
				}
			}
		}
    case dEPLAYER:
		{
			SetPVarInt(playerid, "EPLAYER", response);
   			AC_SpawnPlayer(playerid);
			return 1;
		}
    case D_WANTED:
		{
			if(!response) return 1;
			
			new pvar_string [ 10 ] ;
			format ( pvar_string, 10, "player_%d", listitem ) ;
			new playerid_id = GetPVarInt ( playerid, pvar_string ) ;
			
			if(p_info[playerid][pJail] > 0) return SendErr(playerid, "Вы сидите в тюрьме");
			if(Find[playerid][FindTime] > 0) return SendErr(playerid, "Вы уже ищите преступника");
			if(GetPVarInt(playerid,"AntiFloodWanted") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь найти преступника");

			if(!IsPlayerConnected(playerid_id)) return SendErr(playerid, "Игрок не в сети");
			if(GetPlayerInterior(playerid_id) > 0) SendErr(playerid, "Человек возможно находиться в интерьере");

			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid_id, X, Y, Z);

			SetPVarInt(playerid,"id_find", playerid_id);
			SetPlayerCheckpoint(playerid, X, Y, Z, 3);
			
			box_td_status(playerid, true);

			PlayerTextDrawSetString ( playerid, BoxPlayer [ playerid ] [ 3 ], "WANTED" ) ;

			Find[playerid][FindTime] = 10;
			CreateZahvatTD(Find[playerid][FindTD]);
			Find[playerid][FindTimer] = SetTimerEx("onFind", 1000, true, "i", playerid);
			SetPVarInt(playerid, "AntiFloodWanted", gettime() + 60);
			return 1;
		}
    case D_AMMO:
		{
		    new newslot;
		    new i = GetPVarInt(playerid, "PlayerBizz");
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0:
		        {
		    		format(STRING_GLOBAL, 1000, "- Кастет [{f0e86b}%d{FFFFFF} рублей]\n- Бейсбольная бита [{f0e86b}%d{FFFFFF} рублей]\n- Нож [{f0e86b}%d{FFFFFF} рублей]\n- Катана [{f0e86b}%d{FFFFFF} рублей]",
					750*BizzInfo[i][bTill], 525*BizzInfo[i][bTill], 1200*BizzInfo[i][bTill], 2205*BizzInfo[i][bTill]);
					ShowPlayerDialogEx(playerid, D_AMMO+1, DIALOG_STYLE_LIST, "{ebec86}>> Оружейный магазин", STRING_GLOBAL, "Купить", "Назад");
					return 1;
		        }
		        case 1:
		        {
	        		format(STRING_GLOBAL, 1800, "- Desert Eagle [{f0e86b}%d{FFFFFF} рублей]\n- Дробовик [{f0e86b}%d{FFFFFF} рублей]\n- MP5 [{f0e86b}%d{FFFFFF} рублей]\n- AK-47 [{f0e86b}%d{FFFFFF} рублей]\n- M4 [{f0e86b}%d{FFFFFF} рублей]\n- Снайперская винтовка [{f0e86b}%d{FFFFFF} рублей]",
					1000*BizzInfo[i][bTill], 1000*5*BizzInfo[i][bTill],
					1000*10*BizzInfo[i][bTill], 1000*15*BizzInfo[i][bTill],
					1000*20*BizzInfo[i][bTill], 1000*25*BizzInfo[i][bTill]);
    				ShowPlayerDialogEx(playerid, D_AMMO+3, DIALOG_STYLE_LIST, "{ebec86}>> Оружейный магазин", STRING_GLOBAL, "Купить", "Назад");
       				return 1;
		        }
		        case 2:
		        {
	        		format(STRING_GLOBAL, 128, "- Ящик с патронами [{f0e86b}%d{FFFFFF} рублей]", 11250*BizzInfo[i][bTill]);
		        	ShowPlayerDialogEx(playerid, D_AMMO+1, DIALOG_STYLE_LIST, "{ebec86}>> Оружейный магазин", STRING_GLOBAL, "Купить", "Назад");
		        	return 1;

		        }
		        case 3:
		        {
		            if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
					if(GetMoney(playerid) < 1000*BizzInfo[i][bTill]) return SendErr(playerid, "У Вас не достаточно средств");
					if(CheckMaxVes(playerid, 71, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
					
					new text[32], price = 1000*BizzInfo[i][bTill];
					if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
					{
					    price = floatround((1000*BizzInfo[i][bTill])*50/100);
					    text = ". {fcfc00}[Скидка 50%%]";
					}
					else
					{
					    text = "";
					}
					
					BizzInfo[i][bMoneyHour] += price;
					BizzPay[i] += price;
					BizzInfo[i][bProduct] -= 10;
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveMoney(playerid, -price, "Покупка в аммунации");
					
					PlayerItem1[playerid][newslot] = 71;
					PlayerItem2[playerid][newslot] += 1;
					SaveItem(playerid, newslot);

					SCMF(playerid, COLOR_WHITE, "Вы купили бронежилет за {f0e86b}%d{FFFFFF} рублей%s", price, text);
					SendErr(playerid, "Оружие было помещено в инвентарь");
		        }
		        case 4:
		        {
          			if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
              		if(GetMoney(playerid) < 500*BizzInfo[i][bTill]) return SendErr(playerid, "У Вас не достаточно средств");
              		if(CheckMaxVes(playerid, 39, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
              		
              		new text[32], price = 500*BizzInfo[i][bTill];
					if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
					{
					    price = floatround((500*BizzInfo[i][bTill])*50/100);
					    text = ". {fcfc00}[Скидка 50%%]";
					}
					else
					{
					    text = "";
					}

					BizzInfo[i][bMoneyHour] += price;
					BizzPay[i] += price;
					BizzInfo[i][bProduct] -= 10;
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveMoney(playerid, -price, "Покупка в аммунации");
					
					PlayerItem1[playerid][newslot] = 39;
					PlayerItem2[playerid][newslot] += 1;
					SaveItem(playerid, newslot);

					SCMF(playerid, COLOR_WHITE, "Вы купили парашют за {f0e86b}%d{FFFFFF} рублей%s", price, text);
					SendErr(playerid, "Оружие было помещено в инвентарь");
		        }
		        case 5: ShowPlayerDialogEx(playerid, D_AMMO+2, DIALOG_STYLE_INPUT, "{ebec86}>> Покупка патронов", "{FFFFFF}Введите нужное количество боеприпасов:", "Принять", "Назад");
		    }
		}
	case D_AMMO+1:
		{
		    new newslot;
		    new i = GetPVarInt(playerid, "PlayerBizz");
		    if(response)
		    {
		        if(!strcmp(inputtext, "- Кастет", true, 8))
		        {
          			if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
			     	if(GetMoney(playerid) < 750*BizzInfo[i][bTill]) return SendErr(playerid, "У Вас не достаточно средств");
              		if(CheckMaxVes(playerid, 1, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
              		
              		new text[32], price = 750*BizzInfo[i][bTill];
					if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
					{
					    price = floatround((750*BizzInfo[i][bTill])*50/100);
					    text = ". {fcfc00}[Скидка 50%%]";
					}
					else
					{
					    text = "";
					}

					BizzInfo[i][bMoneyHour] += price;
					BizzPay[i] += price;
					BizzInfo[i][bProduct] -= 10;
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveMoney(playerid, -price, "Покупка в аммунации");
					
					PlayerItem1[playerid][newslot] = 1;
					PlayerItem2[playerid][newslot] += 1;
					SaveItem(playerid, newslot);

					SCMF(playerid, COLOR_WHITE, "Вы купили кастет за {f0e86b}%d{FFFFFF} рублей%s", price, text);
					SendErr(playerid, "Оружие было помещено в инвентарь");
		        }
		        if(!strcmp(inputtext, "- Бейсбольная бита", true, 18))
		        {
			   		if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
			      	if(GetMoney(playerid) < 525*BizzInfo[i][bTill]) return SendErr(playerid, "У Вас не достаточно средств");
              		if(CheckMaxVes(playerid, 5, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
              		
              		new text[32], price = 525*BizzInfo[i][bTill];
					if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
					{
					    price = floatround((525*BizzInfo[i][bTill])*50/100);
					    text = ". {fcfc00}[Скидка 50%%]";
					}
					else
					{
					    text = "";
					}

					BizzInfo[i][bMoneyHour] += price;
					BizzPay[i] += price;
					BizzInfo[i][bProduct] -= 10;
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveMoney(playerid, -price, "Покупка в аммунации");
					
					PlayerItem1[playerid][newslot] = 5;
					PlayerItem2[playerid][newslot] += 1;
					SaveItem(playerid, newslot);

					SCMF(playerid, COLOR_WHITE, "Вы купили бейсбольную биту за {f0e86b}%d{FFFFFF} рублей%s", price, text);
					SendErr(playerid, "Оружие было помещено в инвентарь");
		        }
		        if(!strcmp(inputtext, "- Нож", true, 5))
		        {
			 		if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
          			if(GetMoney(playerid) < 1200*BizzInfo[i][bTill]) return SendErr(playerid, "У Вас не достаточно средств");
              		if(CheckMaxVes(playerid, 4, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
              		
              		new text[32], price = 1200*BizzInfo[i][bTill];
					if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
					{
					    price = floatround((1200*BizzInfo[i][bTill])*50/100);
					    text = ". {fcfc00}[Скидка 50%%]";
					}
					else
					{
					    text = "";
					}

					BizzInfo[i][bMoneyHour] += price;
					BizzPay[i] += price;
					BizzInfo[i][bProduct] -= 10;
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveMoney(playerid, -price, "Покупка в аммунации");
					
					PlayerItem1[playerid][newslot] = 4;
					PlayerItem2[playerid][newslot] += 1;
					SaveItem(playerid, newslot);

					SCMF(playerid, COLOR_WHITE, "Вы купили нож за {f0e86b}%d{FFFFFF} рублей%s", price, text);
					SendErr(playerid, "Оружие было помещено в инвентарь");
		        }
		        if(!strcmp(inputtext, "- Катана", true, 8))
		        {
			    	if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
			     	if(GetMoney(playerid) < 2205*BizzInfo[i][bTill]) return SendErr(playerid, "У Вас не достаточно средств");
              		if(CheckMaxVes(playerid, 8, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
              		
              		new text[32], price = 2205*BizzInfo[i][bTill];
					if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
					{
					    price = floatround((2205*BizzInfo[i][bTill])*50/100);
					    text = ". {fcfc00}[Скидка 50%%]";
					}
					else
					{
					    text = "";
					}

					BizzInfo[i][bMoneyHour] += price;
					BizzPay[i] += price;
					BizzInfo[i][bProduct] -= 10;
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveMoney(playerid, -price, "Покупка в аммунации");
					
					PlayerItem1[playerid][newslot] = 8;
					PlayerItem2[playerid][newslot] += 1;
					SaveItem(playerid, newslot);

					SCMF(playerid, COLOR_WHITE, "Вы купили катану за {f0e86b}%d{FFFFFF} рублей%s", price, text);
					SendErr(playerid, "Оружие было помещено в инвентарь");
		        }
		        if(!strcmp(inputtext, "- Ящик с патронами", true, 18))
		        {
                    if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
			     	if(GetMoney(playerid) < 11250*BizzInfo[i][bTill]) return SendErr(playerid, "У Вас не достаточно средств");
			     	if(CheckMaxVes(playerid, 72, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
			     	
			     	new text[32], price = 11250*BizzInfo[i][bTill];
					if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
					{
					    price = floatround((11250*BizzInfo[i][bTill])*50/100);
					    text = ". {fcfc00}[Скидка 50%%]";
					}
					else
					{
					    text = "";
					}

					BizzInfo[i][bMoneyHour] += price;
					BizzPay[i] += price;
					BizzInfo[i][bProduct] -= 10;
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
					GiveMoney(playerid, -price, "Покупка в аммунации");

					PlayerItem1[playerid][newslot] = 72;
					PlayerItem2[playerid][newslot] += 1;
					SaveItem(playerid, newslot);

					SCMF(playerid, COLOR_WHITE, "Вы купили ящик с патронами за {f0e86b}%d{FFFFFF} рублей%s", price, text);
					SendErr(playerid, "Оружие было помещено в инвентарь");
		        }
		    }
		    else
		    {
			  	format(STRING_GLOBAL, 512, "- Холодное оружие\n- Огнестрельное оружие\n- Ящики с боеприпасами\n- Бронежилет [{f0e86b}%d{FFFFFF} рублей]\n- Парашют [{f0e86b}%d{FFFFFF} рублей]", 1000*BizzInfo[i][bTill], 500*BizzInfo[i][bTill]);
			 	ShowPlayerDialogEx(playerid, D_AMMO, DIALOG_STYLE_LIST, "{ebec86}>> Оружейный магазин", STRING_GLOBAL, "Выбрать", "Выйти");
			 	return 1;
		    }
		}
	case D_AMMO+2:
		{
			if(response)
			{
			    new newslot;
			    new i = GetPVarInt(playerid, "PlayerBizz");
			    new IAmmo = strval(inputtext);
			    if(!strlen(inputtext) || IAmmo <= 0) return ShowPlayerDialogEx(playerid, D_AMMO+2, DIALOG_STYLE_INPUT, "{ebec86}>> Покупка оружия", "{FFFFFF}Введите нужное количество боеприпасов:", "Принять", "Назад");
		        if(GetMoney(playerid) < IAmmo*BizzInfo[i][bTill]) return ShowPlayerDialogEx(playerid, D_AMMO+2, DIALOG_STYLE_INPUT, "{ebec86}>> Покупка оружия", "{FFFFFF}Введите нужное количество боеприпасов:\n\n{AFAFAF}* У вас недостаточно денег", "Принять", "Назад");
				if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
  				if(CheckMaxVes(playerid, 42, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
  				
  				new text[32], price = IAmmo*BizzInfo[i][bTill];
				if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
				{
				    price = floatround((IAmmo*BizzInfo[i][bTill])*50/100);
				    text = ". {fcfc00}[Скидка 50%%]";
				}
				else
				{
				    text = "";
				}

				BizzInfo[i][bMoneyHour] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= 10;
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				GiveMoney(playerid, -price, "Покупка в аммунации");

				PlayerItem1[playerid][newslot] = 42;
				PlayerItem2[playerid][newslot] += IAmmo;
				SaveItem(playerid, newslot);

				SCMF(playerid, COLOR_WHITE, "Вы купили {f0e86b}%d{FAEBD7} патронов за {f0e86b}%d{FAEBD7} рублей%s", IAmmo, price, text);
				SendErr(playerid, "Патроны было помещено в инвентарь");
			}
		}
	case D_AMMO+3:
		{
			if(response)
			{
			    new newslot;
			    new i = GetPVarInt(playerid, "PlayerBizz");
			    new ICost, IWeaponName[24];
			    //new IAmmo = strval(inputtext);
			    new IWeapon = listitem;
			    //if(!strlen(inputtext) || IAmmo <= 0) return ShowPlayerDialogEx(playerid, D_AMMO+3, DIALOG_STYLE_INPUT, "{ebec86}>> Покупка оружия", "{FFFFFF}Введите нужное количество боеприпасов:\n\n{AFAFAF}* Если у вас есть данное оружие, то возьмите его в руки\n{AFAFAF}* Тогда вы не переплатите за оружие", "Принять", "Назад");
       			if(!IWeapon)
				{
				    IWeapon = 24;
				    ICost = 1000*BizzInfo[i][bTill];
					/*if(GetPlayerWeapon(playerid) == 24) ICost = IAmmo;
					else ICost = IAmmo+1000;*/
				}
			    else if(IWeapon == 1)
			    {
			        IWeapon = 25;
			        ICost = 5000*BizzInfo[i][bTill];
					/*if(GetPlayerWeapon(playerid) == 25) ICost = IAmmo*2;
					else ICost = IAmmo*2+5000;*/
				}
			    else if(IWeapon == 2)
			    {
			        IWeapon = 29;
			        ICost = 10000*BizzInfo[i][bTill];
					/*if(GetPlayerWeapon(playerid) == 29) ICost = IAmmo*2;
					else ICost = IAmmo*2+10000;*/
				}
			    else if(IWeapon == 3)
			    {
			        IWeapon = 30;
			        ICost = 15000*BizzInfo[i][bTill];
					/*if(GetPlayerWeapon(playerid) == 30) ICost = IAmmo*5;
					else ICost = IAmmo*5+15000;*/
				}
			    else if(IWeapon == 4)
			    {
			        IWeapon = 31;
			        ICost = 20000*BizzInfo[i][bTill];
					/*if(GetPlayerWeapon(playerid) == 31) ICost = IAmmo*5;
					else ICost = IAmmo*5+20000;*/
				}
			    else if(IWeapon == 5)
			    {
			        IWeapon = 34;
			        ICost = 25000*BizzInfo[i][bTill];
					/*if(GetPlayerWeapon(playerid) == 34) ICost = IAmmo*10;
					else ICost = IAmmo*10+25000;*/
				}
		        if(GetMoney(playerid) < ICost) return SendErr(playerid, "У Вас недостаточно денег");
				if(BizzInfo[i][bProduct] < 10) return SendErr(playerid, "В бизнесе недостаточно продуктов");
  				if(CheckMaxVes(playerid, IWeapon-3, 1, newslot) == 1) return SendErr(playerid, "У Вас в инвентаре не достаточно места");
  				
  				new text[32], price = ICost;
				if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
				{
				    price = floatround((ICost*50)/100);
				    text = ". {fcfc00}[Скидка 50%%]";
				}
				else
				{
				    text = "";
				}

				BizzInfo[i][bMoneyHour] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= 10;
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				GiveMoney(playerid, -price, "Покупка в аммунации");
				
				PlayerItem1[playerid][newslot] = IWeapon-3;
				PlayerItem2[playerid][newslot] += 1;
				SaveItem(playerid, newslot);

				GetWeaponName(IWeapon, IWeaponName, 24);
				SCMF(playerid, COLOR_WHITE, "Вы купили {f0e86b}%s{FAEBD7} за {f0e86b}%d{FAEBD7} рублей%s", IWeaponName, price, text);
				SendErr(playerid, "Оружие было помещено в инвентарь");
			}
			else
			{
			    new i = GetPVarInt(playerid, "PlayerBizz");
   				format(STRING_GLOBAL, 1800, "- Desert Eagle [{f0e86b}%d{FFFFFF} рублей]\n- Дробовик [{f0e86b}%d{FFFFFF} рублей]\n- MP5 [{f0e86b}%d{FFFFFF} рублей]\n- AK-47 [{f0e86b}%d{FFFFFF} рублей]\n- M4 [{f0e86b}%d{FFFFFF} рублей]\n- Снайперская винтовка [{f0e86b}%d{FFFFFF} рублей]",
				1000*BizzInfo[i][bTill], 1000*5*BizzInfo[i][bTill],
				1000*10*BizzInfo[i][bTill], 1000*15*BizzInfo[i][bTill],
				1000*20*BizzInfo[i][bTill], 1000*25*BizzInfo[i][bTill]);
			  	ShowPlayerDialogEx(playerid, D_AMMO+3, DIALOG_STYLE_LIST, "{ebec86}>> Оружейный магазин", STRING_GLOBAL, "Купить", "Назад");
			  	return 1;
			}
		}
    case D_AHELP:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(p_info[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 1LVL", "{f0e86b}/alogin{FFFFFF} - авторизоваться, как администратор\n\
					{f0e86b}/mutelist{FFFFFF} - список игроков с мутом\n\
					{f0e86b}/jaillist{FFFFFF} - список игроков, которые сидят в тюрьме\n\
					{f0e86b}/a{FFFFFF} - чат администрации\n\
					{f0e86b}/jail{FFFFFF} - посадить игрока в КПЗ\n\
					{f0e86b}/unjail{FFFFFF} - выпустить игрока из КПЗ\n\
					{f0e86b}/tp{FFFFFF} - телепорт\n\
					{f0e86b}/afly{FFFFFF} - fly\n\
					{f0e86b}/veh{FFFFFF} - создать транспорт\n\
					{f0e86b}/goto{FFFFFF} - телепорт к игроку\n\
					{f0e86b}/pm{FFFFFF} - ответить на репорт\n\
					{f0e86b}/freeze{FFFFFF} - заморозить игрока\n\
					{f0e86b}/unfrezze{FFFFFF} - разморозить игрока\n\
					{f0e86b}/check{FFFFFF} - статистика игрока\n\
					{f0e86b}/unmute{FFFFFF} - снять мут с игрока\n\
					{f0e86b}/mute{FFFFFF} - выдать мут игроку\n\
					{f0e86b}/spec{FFFFFF} - начать слежку\n\
					{f0e86b}/specoff{FFFFFF} - закончить слежку\n\
					{f0e86b}/gm{FFFFFF} - проверка на GM\n\
					{f0e86b}/alogs{FFFFFF} - информация о подключениях\n\
					{f0e86b}/afk{FFFFFF} - игроки на сервере в AFK", "Закрыть", "");
				}
			case 1:
				{
					if(p_info[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 2LVL", "{f0e86b}/sethp{FFFFFF} - установить уровень HP игроку\n\
					{f0e86b}/spawn{FFFFFF} - засправнить игрока\n\
					{f0e86b}/gotocar{FFFFFF} - телепорт к т/с\n\
					{f0e86b}/getcar{FFFFFF} - телепорт т/с к себе\n\
					{f0e86b}/warn{FFFFFF} - выдать WARN игроку\n\
					{f0e86b}/gun{FFFFFF} - оружие игрока\n\
					{f0e86b}/aclear{FFFFFF} - очистить розыск", "Закрыть", "");
				}
			case 2:
				{
					if(p_info[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 3LVL", "{f0e86b}/gethere{FFFFFF} - телепорт игрока к себе\n\
					{f0e86b}/o{FFFFFF} - общий чат от администратора\n\
					{f0e86b}/getip{FFFFFF} - узнать IP игрока\n\
					{f0e86b}/pgetip{FFFFFF} - проверить IP игрока\n\
     				{f0e86b}/ban{FFFFFF} - забанить на количество дней\n\
					{f0e86b}/tempskin{FFFFFF} - установить скин\n\
					{f0e86b}/fixveh{FFFFFF} - отремонтировать т/с\n\
					{f0e86b}/slap{FFFFFF} - подкинуть игрока\n\
					{f0e86b}/get{FFFFFF} - проверить аккаунт\n\
					{f0e86b}/offget{FFFFFF} - проверить аккаунт в оффлайне\n\
					{f0e86b}/agetid{FFFFFF} - проверить игрока по персональному ID\n\
					{f0e86b}/adivorce{FFFFFF} - развести игроков", "Закрыть", "");
				}
			case 3:
				{
					if(p_info[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 4LVL", "{f0e86b}/offban{FFFFFF} - забанить игрока в оффлайне\n\
					{f0e86b}/offwarn{FFFFFF} - выдать варн в оффлайне\n\
					{f0e86b}/kick{FFFFFF} - кикнуть игрока\n\
					{f0e86b}/delveh{FFFFFF} - удалить транспорт\n\
					{f0e86b}/setfuel{FFFFFF} - установить бензин в т/с", "Закрыть", "");
				}
			case 4:
				{
					if(p_info[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 5LVL", "{f0e86b}/object{FFFFFF} - выдать объект игроку\n\
					{f0e86b}/sethunger{FFFFFF} - установить уровень сытости\n\
					{f0e86b}/setname{FFFFFF} - одобрить смену ника\n\
					{f0e86b}/setsex{FFFFFF} - изменить пол\n\
					{f0e86b}/givegun{FFFFFF} - выдать оружие\n\
					{f0e86b}/atake{FFFFFF} - отобрать у игрока что-либо\n\
					{f0e86b}/uval{FFFFFF} - выгнать из организации", "Закрыть", "");
				}
			case 5:
				{
					if(p_info[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 6LVL", "{f0e86b}/agivevoen{FFFFFF} - выдать военный билет\n\
					{f0e86b}/skick{FFFFFF} - тихо кикнуть\n\
					{f0e86b}/sban{FFFFFF} - тихо забанить\n\
					{f0e86b}/ainvite{FFFFFF} - принять в организацию\n\
					{f0e86b}/fuelcars{FFFFFF} - заправить все т/с\n\
					{f0e86b}/iban{FFFFFF} - забанить навсегда\n\
					{f0e86b}/setskin{FFFFFF} - изменить скин\n\
					{f0e86b}/setam{FFFFFF} - установить уровень брони\n\
					{f0e86b}/clearchat{FFFFFF} - очистить чат\n\
					{f0e86b}/atakegun{FFFFFF} - обнулить оружие игрока\n\
					{f0e86b}/rt{FFFFFF} - телепорт по координатам", "Закрыть", "");
				}
			case 6:
				{
					if(p_info[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 7LVL", "{f0e86b}/setweather{FFFFFF} - изменить погоду\n\
					{f0e86b}/checkinv{FFFFFF} - проверить инвентарь\n\
					{f0e86b}/res{FFFFFF} - респавн всего транспорта\n\
					{f0e86b}/alldelveh{FFFFFF} - удалить весь транспорт\n\
					{f0e86b}/unwarn{FFFFFF} - снять варн\n\
					{f0e86b}/objectall{FFFFFF} - выдать объекты\n\
					{f0e86b}/takeweaponall{FFFFFF} - забрать оружие\n\
					{f0e86b}/hpall{FFFFFF} - выдать ХП\n\
					{f0e86b}/givegunall{FFFFFF} - выдать оружие\n\
					{f0e86b}/unban{FFFFFF} - разбанить игрока\n\
					{f0e86b}/settp{FFFFFF} - точка телепорта для мероприятий", "Закрыть", "");
				}
			case 7:
				{

					if(p_info[playerid][pAdmin] < 8) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 8LVL", "{f0e86b}/lunwarn{FFFFFF} - снять выговор лидеру\n\
					{f0e86b}/offlwarn{FFFFFF} - выдать лидеру выговор в OFFLINE\n\
					{f0e86b}/offlunwarn{FFFFFF} - снять выговор лидеру в OFFLINE\n\
					{f0e86b}/lwarn{FFFFFF} - выдать выговор лидеру\n\
					{f0e86b}/gg{FFFFFF} - пожелать удачи игрокам\n\
					{f0e86b}/agl{FFFFFF} - выдать лицензии игроку\n\
					{f0e86b}/setleader{FFFFFF} - назначить лидера\n\
					{f0e86b}/banip{FFFFFF} - забанить по IP адресу\n\
					{f0e86b}/unbanip{FFFFFF} - разбанить IP адрес\n\
					{f0e86b}/mpanel{FFFFFF} - панель гос. налога\n\
					{f0e86b}/setarmy{FFFFFF} - установить патроны армии\n\
					{f0e86b}/setpatr{FFFFFF} - установить патроны\n\
					{f0e86b}/setmats{FFFFFF} - установить металл\n\
					{f0e86b}/sethelper{FFFFFF} - назначить хелпера\n\
					{f0e86b}/hpanel{FFFFFF} - хелпер-панель\n\
					{f0e86b}/logs{FFFFFF} - логи сервера\n\
					{f0e86b}/reklama{FFFFFF} - подать Реклама!\n\
					{f0e86b}/setbizprod{FFFFFF} - установить продукты в бизнес", "Закрыть", "");
				}
			case 8:
				{
					if(p_info[playerid][pAdmin] < 9) return SendClientMessage(playerid, COLOR_GREY, "[Ошибка] У вас нет доступа!");
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды администратора 9LVL", "{f0e86b}/aunwarn{FFFFFF} - снять выговор администратору\n\
     				{f0e86b}/activate{FFFFFF} - активировать аккаунт\n\
					{f0e86b}/deactivate{FFFFFF} - деактивировать аккаунт\n\
					{f0e86b}/offawarn{FFFFFF} - выдать выговор адм. в OFFLINE\n\
					{f0e86b}/offaunwarn{FFFFFF} - снять выговор адм. в OFFLINE\n\
					{f0e86b}/awarn{FFFFFF} - выдать выговор администратору\n\
					{f0e86b}/createpodezd{FFFFFF} - создать подъезд\n\
					{f0e86b}/setcar{FFFFFF} - установить т/с игроку\n\
					{f0e86b}/settime{FFFFFF} - установить время на сервере\n\
					{f0e86b}/createradar{FFFFFF} - создать радар\n\
					{f0e86b}/setstat{FFFFFF} - изменить статистику\n\
					{f0e86b}/ainfo{FFFFFF} - информация об администраторе\n\
					{f0e86b}/givemoney{FFFFFF} - выдать деньги\n\
					{f0e86b}/givecredits{FFFFFF} - выдать донат\n\
					{f0e86b}/unavig{FFFFFF} - снять выговор администратору\n\
					{f0e86b}/add{FFFFFF} - создать что-либо\n\
					{f0e86b}/gmx{FFFFFF} - рестарт сервера\n\
					{f0e86b}/setvip{FFFFFF} - выдать VIP статус\n\
					{f0e86b}/pmenu{FFFFFF} - меню промокодов\n\
					{f0e86b}/unbanadm{FFFFFF} - снять запрет с адм.\n\
					{f0e86b}/setadmin{FFFFFF} - выдать права адм.\n\
					{f0e86b}/apanel{FFFFFF} - панель управления\n\
					{f0e86b}/giveinv{FFFFFF} - выдать в инвентарь\n\
					{f0e86b}/setskill{FFFFFF} - изменить скилл игроку\n\
					{f0e86b}/setbizname{FFFFFF} - изменить название бизнеса\n\
					{f0e86b}/bizlock{FFFFFF} - закрыть бизнес\n\
					{f0e86b}/setpos{FFFFFF} - перенести что-либо\n\
					{f0e86b}/setcars{FFFFFF} - удалить т/с 'vehicle'\n\
					{f0e86b}/addfamily{FFFFFF} - создать семью\n\
					{f0e86b}/familylist{FFFFFF} - семьи сервера\n\
					{f0e86b}/setfamily{FFFFFF} - установить семью\n\
					{f0e86b}/createarea{FFFFFF} - создать лифт\n\
					{f0e86b}/hgatecreate{FFFFFF} - создать ворота\n\
					{f0e86b}/addhcar{FFFFFF} - домашний транспорт\n\
					{f0e86b}/payday{FFFFFF} - запустить PayDay","Закрыть", "");
				}
			}
		}
	case DEMORGAN:
		{
			if(!response) return 1;
			new jailid = GetPVarInt(playerid, "demorgan"), jail_string[150];
			switch(listitem)
			{
			case 0:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 10*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: DM", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 10 минут. Причина: DM", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: DM",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 1:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 10*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: DB", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 10 минут. Причина: DB", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: DB",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 2:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 5*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: SK", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 5 минут. Причина: SK", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: SK",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 3:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 5*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: Срыв мероприятия", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 5 минут. Причина: Срыв мероприятия", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: Срыв МП",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 4:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 5*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerPos(jailid,-80.0286, 806.6516, -4.4737);
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: Срыв набора", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 5 минут. Причина: Срыв набора", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: Срыв Набора",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 5:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 10*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: DM in ZZ", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 10 минут. Причина: DM in ZZ", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: DM in ZZ",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 6:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 5*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: PG", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 5 минут. Причина: PG", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: PG",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 7:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 10*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: Багоюз", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 10 минут. Причина: Багоюз", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: Bagouse",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 8:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 10*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: DM в КПЗ", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 10 минут. Причина: DM в КПЗ", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: DM in КПЗ",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 9:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 10*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: DM in ZZ", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 10 минут. Причина: DM in ZZ", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: DM in ZZ",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 10:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 5*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: RK", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 5 минут. Причина: RK", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: RK",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 11:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 10*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: NonRP езда", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 10 минут. Причина: NonRP езда", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: NonRP езда",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			case 12:
				{
					p_info[jailid][pJail] = 1;
					p_info[jailid][pJailTime] = 5*60;
					p_info[jailid][pArrestSpawn] = 3;
					SetPlayerInterior(jailid, 0);
					SetPlayerPos(jailid,838.8856,1314.8070,517.7500);
					SetPlayerFacingAngle(jailid, 42.9641);
					SetPlayerWantedLevel(jailid, 0);
					SetPlayerFacingAngle(jailid,0);
					SetCameraBehindPlayer(jailid);
					format(jail_string, sizeof(jail_string), "Администратор %s посадил в деморган игрока %s. Причина: NonRP", GetName(playerid), GetName(jailid));
					SendClientMessageToAll(COLOR_RED, jail_string);
					format(jail_string, sizeof jail_string, "[{ebec86}A{828282}] %s[%d] заключил в тюрьму %s[%d] на 5 минут. Причина: NonRP", GetName(playerid), playerid, GetName(jailid), jailid);
					SendAdminMessage(COLOR_ADMIN, jail_string);
					SendClientMessage(jailid, -1, "Время до выхода на свободу: {cccc00}/time");
					
					format(STRING_GLOBAL, 200, "%s посадил %s. Причина: NonRP",GetName(playerid), GetName(jailid));
					WriteLog(TYPE_LOG_JAIL,STRING_GLOBAL);
				}
			}
			MysqlUpdatePlayerInt(jailid, "jail", p_info[jailid][pJail]);
			MysqlUpdatePlayerInt(jailid, "jailtime", p_info[jailid][pJailTime]);
			MysqlUpdatePlayerInt(jailid, "arrestspawn", p_info[jailid][pArrestSpawn]);
			if(pCuff[jailid][pCuffer] != INVALID_PLAYER_ID)
			{
				new cuffer = pCuff[jailid][pCuffer];
				SetPlayerSpecialAction(jailid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(jailid, 0);
				pCuff[jailid][pCuffer] = INVALID_PLAYER_ID;
				pCuff[jailid][pCuffee] = INVALID_PLAYER_ID;
				pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
				pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
			}
			AC_ResetPlayerWeapons(jailid);
			SetPlayerVirtualWorld(jailid, 1);
			admin_attempt[playerid] ++ ;

			mysql_format(dbHandle, jail_string, sizeof jail_string, "UPDATE "T_ADMIN" SET `jails` = jails+1 WHERE `name` = '%s'", GetName(playerid));
			mysql_tquery(dbHandle, jail_string, "", "");

			if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
			if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
			{
				admin_ban_time[playerid] = 600;
				MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
				admin_attempt[playerid] = 0;
				admin_check_time[playerid] = 0;
				SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
				return 1;
			}
		}


		/*case D_GOOGLE:
		{
			if(!response) return Kick(playerid);

			new google[512], pass[64];

			for(new i = 0; i < 17; i ++) strcat(google_password, password_words[random(sizeof(password_words))]);

			format(pass, sizeof pass, "{FFFFFF}Сгенерированный код: {2A89DC}%s\n\n", google_password);
			strcat(google, pass);
			strcat(google, "{FFFFFF}Теперь Вам необходимо следовать по данной инструкции:\n");
			strcat(google, "1. Откройте приложение Google Authenticator\n");
			strcat(google, "2. В окне 'Добавление аккаунта' выберите 'Ввести ключ'\n");
			strcat(google, "3. Укажите любое название аккаунта, а ниже сгенерированный выше ключ\n");
			strcat(google, "4. Нажмите 'Добавить' и введите выведенный на экране смартфона код в окно ниже:\n\n");
			strcat(google, "После проверки кода, Вы автоматически будете допущены к игре\n");
			strcat(google, "{DCC12A}С Уважением главная администрация "SERVER_NAME"!");
			ShowPlayerDialogEx(playerid, D_GOOGLE1, DIALOG_STYLE_INPUT, "{ebec86}>> Google Authenticator", google, "Далее", "Отмена");

		}

		case D_GOOGLE1:
		{
			if(!response) return Kick(playerid);

			new code = GoogleAuthenticatorCode(google_password, gettime());
			if(strval(inputtext) != code) SendErr(playerid, "Код указан неверно! Вы были кикнуты с сервера!"), Kick(playerid);
			else SendErr(playerid, "Код указан верно. Вы прошли проверку и были допущены к игре"), SetPVarInt(playerid, "GOOGLE", 1);

		}*/

	case D_REMOVEADMIN:
		{
			if(!response) return 0;

			new r_format[32], a_str[32], p_text[90];

			format(r_format, sizeof r_format, "admin_name_id_%d", listitem);
			GetPVarString(playerid, r_format, a_str, sizeof a_str);


			format(p_text, sizeof p_text, "{FFFFFF}Вы действительно хотите снять OFFLINE администратора %s?", a_str);

			SetPVarString(playerid, "ADMIN_NAME", a_str);

			ShowPlayerDialogEx(playerid, D_REMOVEADMIN1, DIALOG_STYLE_MSGBOX, "{ebec86}>> Снятие администратора", p_text, "Да", "Нет");

		}

	case D_REMOVEADMIN1:
		{
			if(!response) return 0;

			new a_name[24], string[128], delete_str[64];
			GetPVarString(playerid, "ADMIN_NAME", a_name, sizeof a_name);

			if(GetPlayerID(a_name) != INVALID_PLAYER_ID) p_info[GetPlayerID(a_name)][pAdmin] = 0;
			mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_ADMIN" WHERE `name`='%s'", a_name);
			mysql_tquery(dbHandle, string, "", "");
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ACCOUNTS" SET `admin` = '0' WHERE `name` = '%s'", a_name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "[{ebec86}A{828282}] %s снял %s с должности администратора", GetName(playerid), a_name);
			SendAdminMessage(COLOR_ADMIN, string);

			format(delete_str, sizeof delete_str, "Администратор %s был успешно снят с поста", a_name);
			SendClientMessage(playerid, -1, delete_str);
		}

	case D_REMOVELEADER:
		{
			if(!response) return 0;

			new r_format[32], a_str[32], p_text[90];

			format(r_format, sizeof r_format, "leader_name_id_%d", listitem);
			GetPVarString(playerid, r_format, a_str, sizeof a_str);


			format(p_text, sizeof p_text, "{FFFFFF}Вы действительно хотите снять OFFLINE лидера %s?", a_str);

			SetPVarString(playerid, "LEADER_NAME", a_str);

			ShowPlayerDialogEx(playerid, D_REMOVELEADER1, DIALOG_STYLE_MSGBOX, "{ebec86}>> Снятие лидера", p_text, "Да", "Нет");

		}


	case D_REMOVELEADER1:
		{
			if(!response) return 0;

			new a_name[24];
			GetPVarString(playerid, "LEADER_NAME", a_name, sizeof a_name);

			if(GetPlayerID(a_name) != INVALID_PLAYER_ID) p_info[GetPlayerID(a_name)][pLeader] = 0;

			STRING_GLOBAL[0] = EOS;
			mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET `leader` = '0', `rank` = '0', `member` = '0' WHERE `name` = '%s'", a_name);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[{ebec86}A{828282}] %s снял %s с должности лидера", GetName(playerid), a_name);
			SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, 128, "Лидер %s был успешно снят с поста", a_name);
			SendClientMessage(playerid, -1, STRING_GLOBAL);
		}
		
		case D_REMOVEHELPER:
		{
			if(!response) return 0;

			new r_format[32], a_str[32], p_text[90];

			format(r_format, sizeof r_format, "leader_name_id_%d", listitem);
			GetPVarString(playerid, r_format, a_str, sizeof a_str);


			format(p_text, sizeof p_text, "{FFFFFF}Вы действительно хотите снять OFFLINE хелпера %s?", a_str);

			SetPVarString(playerid, "LEADER_NAME", a_str);

			ShowPlayerDialogEx(playerid, D_REMOVEHELPER1, DIALOG_STYLE_MSGBOX, "{ebec86}>> Снятие хелпера", p_text, "Да", "Нет");

		}

	case D_REMOVEHELPER1:
		{
			if(!response) return 0;

			new a_name[24], string[128];
			GetPVarString(playerid, "LEADER_NAME", a_name, sizeof a_name);

			if(GetPlayerID(a_name) != INVALID_PLAYER_ID) p_info[GetPlayerID(a_name)][pHelper] = 0;

			mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_HELPER" WHERE `name`='%s'", a_name);
			mysql_tquery(dbHandle, string, "", "");
			//mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ACCOUNTS" SET `admin` = '0' WHERE `name` = '%s'", a_name);
			//mysql_tquery(dbHandle, string, "", "");

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[{ebec86}A{828282}] %s снял %s с должности хелпера", GetName(playerid), a_name);
			SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, 128, "Хелпер %s был успешно снят с поста", a_name);
			SendClientMessage(playerid, -1, STRING_GLOBAL);
		}

	case 16000:
		{
			if(response)
			{
				new Float:x, Float:y, Float:z, Float:fa,cost[MAX_PLAYERS],model[MAX_PLAYERS], fmt_query[300], slot = -1;

				if(0 <= listitem <= 3)
				{
					if(listitem == 0)
					{
						new rows;
						new Cache: result;

						mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s' AND slot=1", GetName(playerid));
						result = mysql_query(dbHandle, fmt_query);

						rows = cache_num_rows();

						if(rows)
						return SendClientMessage(playerid, C_GREY, "Автомобить в этом слоте уже есть, продайте его для покупки нового"), cache_delete(result);
						else slot = 1;

						cache_delete(result);
					}
					if(listitem == 1)
					{
						if(p_info[playerid][pVip] <= 0)
						return SendClientMessage(playerid,COLOR_ORANGE,"Покупать вторую машину доступно только VIP игрокам");

						new rows;
						new Cache: result;

						format(fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s' AND slot=2", GetName(playerid));
						result = mysql_query(dbHandle, fmt_query);

						rows = cache_num_rows();

						if(rows)
						return SendClientMessage(playerid, C_RED, "Автомобить в этом слоте уже есть, продайте его для покупки нового"), cache_delete(result);
						else slot = 2;

						cache_delete(result);
					}
					if(listitem == 2)
					{
						if(p_info[playerid][pDonateCar] == 0)
						return SendClientMessage(playerid,COLOR_ORANGE,"У Вас нет привелегии покупки авто для #3 слота, приобрести: /donate");

						new rows;
						new Cache: result;

						format(fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s' AND slot=3", GetName(playerid));
						result = mysql_query(dbHandle, fmt_query);

						rows = cache_num_rows();

						if(rows)
						return SendClientMessage(playerid, C_RED, "Автомобить в этом слоте уже есть, продайте его для покупки нового"), cache_delete(result);
						else slot = 3;

						cache_delete(result);
					}
					if(listitem == 3)
					{
						if(p_info[playerid][data_GARAGE] == -1)
						return SendClientMessage(playerid, COLOR_ORANGE, "У Вас нет привелегии покупки авто для #4 слота, приобретите гараж");

						new rows;
						new Cache: result;

						format(fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s' AND slot=4", GetName(playerid));
						result = mysql_query(dbHandle, fmt_query);

						rows = cache_num_rows();

						if(rows)
						return SendClientMessage(playerid, C_RED, "Автомобить в этом слоте уже есть, продайте его для покупки нового"), cache_delete(result);
						else slot = 4;

						cache_delete(result);
					}
					cost[playerid] = carsC[pPressed[playerid]][1]*WorkSalary[7], model[playerid] = carsC[pPressed[playerid]][0], x = -4.2735, y = -27.2061, z = 1080.9968, fa = 236.2707;

					if(GetMoney(playerid) < cost[playerid])
					return SendClientMessage(playerid, C_RED, "У Вас недостаточно денег");

					InShop[playerid] = 0;
					TogglePlayerControllable(playerid,true);

					GiveMoney(playerid, -cost[playerid], "Покупка т/с");

					HideAutoSalonMenu(playerid);
					
					DestroyVehicle(p_info[playerid][SalonCarID]);
					p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
					
					SetPlayerPos(playerid,x,y,z);
					SetPlayerFacingAngle(playerid,fa);
					SetPlayerInterior(playerid,1);
					SetPlayerVirtualWorld(playerid,1);
					SetCameraBehindPlayer(playerid);

					SendClientMessage(playerid, COLOR_ORANGE, "Поздравляем с приобретением автомобиля!");
					SendClientMessage(playerid, COLOR_ORANGE, "Загрузить автомобиль можно с помощью команды: /fixcar");
					format(fmt_query, sizeof fmt_query, "Автомобиль помещен в слот #%d, пожалуйста, не забудьте припарковать его (/park)", slot);
					SendClientMessage(playerid, COLOR_ORANGE, fmt_query);

					new r = random(sizeof(SalonRandSpawn));

					pPressed[playerid] = 0;

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, 512, "INSERT INTO ownable_cars (owner_name, model, color_1, color_2, slot, pos_x, pos_y, pos_z, pos_r) VALUES ('%s', '%d', '%d', '%d', '%d', '%f', '%f', '%f', '%f')", GetName(playerid), model[playerid], colors[playerid][0], colors[playerid][1], slot, SalonRandSpawn[r][0], SalonRandSpawn[r][1], SalonRandSpawn[r][2], SalonRandSpawn[r][3]);
					mysql_query(dbHandle, STRING_GLOBAL);
					
				}

				if(listitem == 4)
				{
					BuyCloseCar(playerid);
					SendErr(playerid, "Вы отказались от покупки автомобиля");
				}
			}
		}

	case D_FIXCAR:
		{
			if(response)
			{
				new index = g_player_listitem[playerid][listitem];

				if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID)
				{
					new fmt_query[80+MAX_PLAYER_NAME];
					new Cache: result;

					mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE id='%d'", index);
					result = mysql_query(dbHandle, fmt_query);

					if(cache_num_rows())
					{
						new vehicleid = CreateVehicle
						(
						cache_get_field_content_int(0, "model"),
						cache_get_field_content_float(0, "pos_x"),
						cache_get_field_content_float(0, "pos_y"),
						cache_get_field_content_float(0, "pos_z"),
						cache_get_field_content_float(0, "pos_r"),
						cache_get_field_content_int(0, "color_1"),
						cache_get_field_content_int(0, "color_2"),
						-1
						);

						SetVehicleVirtualWorld(vehicleid, cache_get_field_content_int(0, "virtual"));

						cache_get_field_content(0, "number", ownable_car[playerid][v_number], dbHandle, 32);

						p_info[playerid][pOwnableCar] = vehicleid;

						new coms[64];

						ownable_car[playerid][v_sql] = index;
						format(ownable_car[playerid][v_owner], 32, "%s", GetName(playerid));
						ownable_car[playerid][v_model] = cache_get_field_content_int(0, "model");
						ownable_car[playerid][v_color_1] = cache_get_field_content_int(0, "color_1");
						ownable_car[playerid][v_color_2] = cache_get_field_content_int(0, "color_2");
						ownable_car[playerid][v_pos_x] = cache_get_field_content_float(0, "pos_x");
						ownable_car[playerid][v_pos_y] = cache_get_field_content_float(0, "pos_y");
						ownable_car[playerid][v_pos_z] = cache_get_field_content_float(0, "pos_z");
						ownable_car[playerid][v_pos_r] = cache_get_field_content_float(0, "pos_r");
						ownable_car[playerid][v_mileage] = cache_get_field_content_float(0, "mileage");
						VehMileage[vehicleid] = ownable_car[playerid][v_mileage];
						ownable_car[playerid][v_virtual] = cache_get_field_content_int(0, "virtual");
						ownable_car[playerid][v_fuel] = cache_get_field_content_int(0, "fuel");
						ownable_car[playerid][v_slot] = cache_get_field_content_int(0, "slot");
						ownable_car[playerid][v_lock] = cache_get_field_content_int(0, "lock");
						ownable_car[playerid][v_paintjob] = cache_get_field_content_int(0, "paintjob");
						ownable_car[playerid][v_ticket] = cache_get_field_content_int(0, "ticket");
						
						ownable_car[playerid][v_pos_x] = cache_get_field_content_float(0, "pos_x");
						
						cache_get_field_content(0, "veh_com", coms);
						format(ownable_car[playerid][v_veh_com], 64, "%s", coms);

						sscanf(ownable_car[playerid][v_veh_com], "p<,>a<i>[14]",ownable_car[playerid][v_veh_coms]);
						
						new sscanf_delimit [ 200 ] ;
						cache_get_field_content ( 0, "v_eng_details", sscanf_delimit, dbHandle, 16 ) ;
						sscanf ( sscanf_delimit, "p<|>ddddd", VehInfos [ vehicleid - 1 ] [ v_pt_engine ] [ 0 ], VehInfos [ vehicleid - 1 ] [ v_pt_engine ] [ 1 ],
						VehInfos [ vehicleid - 1 ] [ v_pt_engine ] [ 2 ], VehInfos [ vehicleid - 1 ] [ v_pt_engine ] [ 3 ], VehInfos [ vehicleid - 1 ] [ v_pt_engine ] [ 4 ]	) ;

						cache_get_field_content ( 0, "v_brake_details", sscanf_delimit, dbHandle, 16 ) ;
						sscanf ( sscanf_delimit, "p<|>ddddd", VehInfos [ vehicleid - 1 ] [ v_pt_brake ] [ 0 ], VehInfos [ vehicleid - 1 ] [ v_pt_brake ] [ 1 ],
						VehInfos [ vehicleid - 1 ] [ v_pt_brake ] [ 2 ], VehInfos [ vehicleid - 1 ] [ v_pt_brake ] [ 3 ], VehInfos [ vehicleid - 1 ] [ v_pt_brake ] [ 4 ]	) ;
						
						cache_get_field_content ( 0, "v_stab_details", sscanf_delimit, dbHandle, 16 ) ;
						sscanf ( sscanf_delimit, "p<|>ddddd", VehInfos [ vehicleid - 1 ] [ v_pt_stability ] [ 0 ], VehInfos [ vehicleid - 1 ] [ v_pt_stability ] [ 1 ],
						VehInfos [ vehicleid - 1 ] [ v_pt_stability ] [ 2 ], VehInfos [ vehicleid - 1 ] [ v_pt_stability ] [ 3 ], VehInfos [ vehicleid - 1 ] [ v_pt_stability ] [ 4 ]	) ;
						
						VehInfos [ vehicleid - 1 ] [ v_engine_boost ] = cache_get_field_content_float ( 0,"v_engine_boost" ) ;
						VehInfos [ vehicleid - 1 ] [ v_brake_boost ] = cache_get_field_content_float ( 0,"v_brake_boost" ) ;
						VehInfos [ vehicleid - 1 ] [ v_stability_boost ] = cache_get_field_content_float ( 0,"v_stability_boost" ) ;
						
						new trunk_guns[200];
						cache_get_field_content ( 0, "TrunkGuns", trunk_guns, dbHandle, 200 ) ;

						sscanf(trunk_guns,"p<,>iiiiiiiiiiiiiiiiii",
						TrunkInfo[vehicleid][tGun][0], TrunkInfo[vehicleid][tAmmo][0], TrunkInfo[vehicleid][tGun][1], TrunkInfo[vehicleid][tAmmo][1],
						TrunkInfo[vehicleid][tGun][2], TrunkInfo[vehicleid][tAmmo][2], TrunkInfo[vehicleid][tGun][3], TrunkInfo[vehicleid][tAmmo][3],
						TrunkInfo[vehicleid][tGun][4], TrunkInfo[vehicleid][tAmmo][4], TrunkInfo[vehicleid][tGun][5], TrunkInfo[vehicleid][tAmmo][5],
						TrunkInfo[vehicleid][tGun][6], TrunkInfo[vehicleid][tAmmo][6], TrunkInfo[vehicleid][tGun][7], TrunkInfo[vehicleid][tAmmo][7],
						TrunkInfo[vehicleid][tGun][8], TrunkInfo[vehicleid][tAmmo][8]);
						
						TrunkInfo[vehicleid][tMoney] = cache_get_field_content_int ( 0,"pTrunkMoney" ) ;
						TrunkInfo[vehicleid][tDrugs] = cache_get_field_content_int ( 0,"pTrunkDrugs" ) ;
						TrunkInfo[vehicleid][tMats] = cache_get_field_content_int ( 0,"pTrunkMats" ) ;
						TrunkInfo[vehicleid][tArmours] = cache_get_field_content_int ( 0,"pTrunkArmours" ) ;
						TrunkInfo[vehicleid][tKanistra] = cache_get_field_content_int ( 0,"pTrunkKanistra" ) ;
						TrunkInfo[vehicleid][tDee] = cache_get_field_content_int ( 0,"pTrunkDee" ) ;
						TrunkInfo[vehicleid][tOpen] = true;
						
						ChangeVehicleColor(vehicleid, ownable_car[playerid][v_color_1], ownable_car[playerid][v_color_2]);
						ChangeVehiclePaintjob(vehicleid, ownable_car[playerid][v_paintjob]);
						
						if(ownable_car[playerid][v_ticket] > 0)
						{
						    SetVehicleVirtualWorld(vehicleid, 228);
						    SendInf(playerid, "Ваше транспортное средство на штрафстоянке, вы не можете его выгрузить. (/gps - Важные места - Штрафстоянка)");
						}

						for(new i = 13; i >= 0; i --)
						{
							if(ownable_car[playerid][v_veh_coms][i] != 0) AddVehicleComponent(vehicleid, ownable_car[playerid][v_veh_coms][i]);
						}

						Fuel[p_info[playerid][pOwnableCar]] = ownable_car[playerid][v_fuel];
						CarDoors(p_info[playerid][pOwnableCar], ownable_car[playerid][v_lock]);
						
						if(Fuel[p_info[playerid][pOwnableCar]] > 100) Fuel[p_info[playerid][pOwnableCar]] = 100;
                        if(Fuel[p_info[playerid][pOwnableCar]] <= 0) Fuel[p_info[playerid][pOwnableCar]] = 5;

						if(ownable_car_label[p_info[playerid][pOwnableCar]] != Text3D:INVALID_3DTEXT_ID)
						{
							DestroyDynamic3DTextLabel(ownable_car_label[p_info[playerid][pOwnableCar]]);
							ownable_car_label[p_info[playerid][pOwnableCar]] = Text3D:INVALID_3DTEXT_ID;
						}

						if(!strcmp(ownable_car[playerid][v_number], "-1", false) || !strcmp(ownable_car[playerid][v_number], "[ НЕТ НОМЕРОВ ]", false))
						{
						    format(ownable_car[playerid][v_number], 32, "[ НЕТ НОМЕРОВ ]");
							ownable_car_label[p_info[playerid][pOwnableCar]] = CreateDynamic3DTextLabel("", 0xa24646FF, 0.0, 0.0, 1.3, 10.0, INVALID_PLAYER_ID, vehicleid, 1);//[ НЕТ НОМЕРОВ ]
						}
						else
						{
							new string[128];
							format(string, sizeof(string), "", ownable_car[playerid][v_number]);//Номера: {ebec86}%s
							ownable_car_label[p_info[playerid][pOwnableCar]] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, 0.0, 0.0, 1.3, 10.0, INVALID_PLAYER_ID, vehicleid, 1);
						}

						SetVehicleNumberPlate(vehicleid, ownable_car[playerid][v_number]);

						SendClientMessage(playerid, C_OSNOV, "Ваш транспорт успешно загружен. Найти его можно с помощью команды: /findcar");
						
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE ownable_cars SET lastvisit = '%i' WHERE id = %d", (gettime()+DAY*14), index);
						mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

						cache_delete(result);
					}
					else cache_delete(result);
				}
				else
				{
					ownable_car[playerid][v_mileage] = VehMileage[p_info[playerid][pOwnableCar]];
					ownable_car[playerid][v_fuel] = Fuel[p_info[playerid][pOwnableCar]];

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, 128, "UPDATE ownable_cars SET fuel=%d, mileage='%f' WHERE id=%d", ownable_car[playerid][v_fuel], ownable_car[playerid][v_mileage], ownable_car[playerid][v_sql]);
					mysql_query(dbHandle, STRING_GLOBAL);

					if(ownable_car_label[p_info[playerid][pOwnableCar]] != Text3D:INVALID_3DTEXT_ID)
					{
						DestroyDynamic3DTextLabel(ownable_car_label[p_info[playerid][pOwnableCar]]);
						ownable_car_label[p_info[playerid][pOwnableCar]] = Text3D:INVALID_3DTEXT_ID;
					}
					DestroyVehicle(p_info[playerid][pOwnableCar]);
					p_info[playerid][pOwnableCar] = INVALID_VEHICLE_ID;

					SendClientMessage(playerid, C_OSNOV, "Ваш транспорт выгружен");
				}
			}
		}
	case 700:
		{
			if(!response) return 1;
			if(response)
			{
				switch(listitem)
				{
				case 0: ShowPlayerDialogEx(playerid,701,DIALOG_STYLE_INPUT, "{ebec86}>> Создание семьи","{FFFFFF}Для создании семьи необходимо иметь 500 кредитов и 10 уровень.\n\nНазвание семьи можно будет изменить в дальнейшем\nВведите название семьи:","Далее","Закрыть");
				case 1:
					{
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "1. Создание семьи\n2. Всего семей: {ebec86}%d", family_count);
						ShowPlayerDialogEx(playerid, 700, DIALOG_STYLE_LIST, "{ebec86}>> Информация о семьях", STRING_GLOBAL, "Выбор", "Выход");
					}
				}
			}
		}
	case 701:
		{
			if(!response)
			{
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "1. Создание семьи\n2. Всего семей: {ebec86}%d", family_count);
				ShowPlayerDialogEx(playerid, 700, DIALOG_STYLE_LIST, "{ebec86}>> Информация о семьях", STRING_GLOBAL, "Выбор", "Выход");
			}
			if(response)
			{
			    if(family_count >= 100 && p_info[playerid][pAdmin] < 9) return SendErr(playerid, "На сервере создано уже максимальное количество семей");
			    if(p_info[playerid][pLevel] < 10)
			    return SendErr(playerid, "Для создания семьи Вам необходимо иметь 10 уровень");
				if(p_info[playerid][pCredits] < 500)
				return SendErr(playerid, "Для создания семьи Вам необходимо иметь 500 кредитов");
				if(p_info[playerid][pFamilySozd] != 0)
				return SendErr(playerid, "У Вас уже есть семья! Нельзя создавать больше чем одну семью");
				if(p_info[playerid][pFamily] != 0)
				return SendErr(playerid, "Вы состоите в семье! Необходимо покинуть семью, что бы создать свою");
				if (strlen ( inputtext ) < 2 || strlen ( inputtext ) > 12 )
				return ShowPlayerDialogEx(playerid,701,DIALOG_STYLE_INPUT, "{ebec86}>> Создание семьи","{AFAFAF}Название семьи не может быть больше 12 символов!\n{FFFFFF}Перед созданием семьи рекомендуем ознакомиться с разделом 'Информация'\n\nНазвание семьи можно будет изменить в дальнейшем\nВведите название семьи:","Далее","Закрыть");

				new temp [32], newfam_id;
				mysql_real_escape_string (inputtext, temp) ;

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, 256, "INSERT INTO "T_FAMILY" ( `fam_name`, `fam_creator`, `fam_members_amount`, `fam_data` ) VALUES ( '%s', '%s', '1', NOW( ))", temp, GetName(playerid));
				mysql_function_query ( dbHandle, STRING_GLOBAL, false, "", "");
				family_count ++;
				newfam_id = family_count;
				p_info[playerid][pFamily] = newfam_id;
				MysqlUpdatePlayerInt(playerid, "family", p_info[playerid][pFamily]);
				
				p_info[playerid][pCredits] -= 500;
				MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);

				strmid (family_info [newfam_id][f_name], temp, 0, strlen(temp), strlen(temp)+5);
				strmid (family_info [newfam_id] [f_creator], GetName(playerid), 0, strlen(GetName(playerid)), strlen(GetName(playerid))+5);
				family_info [newfam_id] [f_chat_color] = 0;
				family_info [newfam_id] [f_members_amount] = 1;

				new year, month,day;
				getdate(year, month, day);
				format(family_info [newfam_id] [f_creating_data], 32,"%02d/%02d/%d",year,month,day);\
				p_info[playerid][pFamilySozd] = 1;
				MysqlUpdatePlayerInt(playerid, "familysozd", p_info[playerid][pFamilySozd]);
				SendClientMessage(playerid, COLOR_LIME, "Вы успешно создали семью, используйте '/help' для просмотр команд");
				
				new fmt_query[70+MAX_PLAYER_NAME];
				format(fmt_query, sizeof fmt_query, "UPDATE accounts SET family_date = '%d.%d.%d' WHERE name = '%s'", day, month, year, GetName(playerid));
				mysql_query(dbHandle, fmt_query);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Вы успешно создали семью {ebec86}%s{FFFFFF}.\n\nДля усправления используйте - /family\nБольше команд вы найдете - /help", family_info [newfam_id] [f_name]);
				ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Вы успешно создали семью", STRING_GLOBAL, "Закрыть", "");
			}
		}
		case d_offmembers_list1:
		{
			if ( ! response )
			{
				for ( new i = 0 ; i < 10 ; i ++ )
				{
					new pvar_string [ 8 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", i ) ;
					DeletePVar ( playerid, pvar_string ) ;
				}
				DeletePVar ( playerid, "ofm_list_page" ) ;
				DeletePVar ( playerid, "ofm_list_rows" ) ;
				DeletePVar ( playerid, "ofm_listitem" ) ;
				DeletePVar ( playerid, "ofm_type" ) ;
				pc_cmd_family(playerid);
				return 1 ;
			}
			if ( listitem == 0 )
			{
				new page_id = GetPVarInt ( playerid, "ofm_list_page" ) - 1;
				if ( page_id == 0 )
				{
					SendErr ( playerid, "Вы находитесь на первой странице списка членов семьи" ) ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						new query_string [ 126 ] ;
						mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pFamily ] ) ;
						mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
						return 1;
					}
					return 1 ;

				}
				SetPVarInt ( playerid, "ofm_list_page", page_id ) ;

				new query_string [ 126 ] ;
				if( ! GetPVarInt ( playerid, "ofm_type" ) )
				{
					mysql_format ( dbHandle, query_string, 98, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pFamily ] ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
					return 1;
				}

			}
			else if ( listitem == 1 )
			{
				new page_id = GetPVarInt ( playerid, "ofm_list_page" ) - 1 ;
				if ( ( page_id + 1 ) * 10 >= GetPVarInt ( playerid, "ofm_list_rows" ) )
				{
					SendErr ( playerid, "Вы находитесь на последней странице списка членов семьи" ) ;
					new query_string [ 126 ] ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						mysql_format ( dbHandle, query_string, 98, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pFamily ] ) ;
						mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
						return 1;
					}
					return 1 ;
				}
				SetPVarInt ( playerid, "ofm_list_page", page_id + 2) ;
				new query_string [ 126 ] ;
				if( ! GetPVarInt ( playerid, "ofm_type" ) )
				{
					mysql_format ( dbHandle, query_string, 98, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pFamily ] ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
					return 1;
				}
			}
			else
			{
				new pvar_string [ 28 ], pl_name [ 20 ] ;
				format ( pvar_string, 10, "ofm_%d", listitem - 2 ) ;
				GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
				SetPVarInt ( playerid, "ofm_listitem", listitem - 2 ) ;
				format ( pvar_string, sizeof ( pvar_string ), "{ebec86}>> %s", pl_name ) ;
				ShowPlayerDialogEx ( playerid, d_offmembers_pl_menu1, DIALOG_STYLE_LIST, pvar_string, "{FFFFFF}1. Информация об игроке\n2. Выгнать из семьи\n3. Назначить заместителем", "Выбрать", "Назад" ) ;
			}
			return 1 ;
		}

		case d_offmembers_pl_menu1:
		{
			if ( ! response )
			{
				DeletePVar( playerid, "ofm_listitem" ) ;
				if( ! GetPVarInt ( playerid, "ofm_type" ) )
				{
					new query_string [ 128 ] ;
					mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pFamily ] ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
					return 1;
				}
				return 1 ;
			}
			switch ( listitem )
			{
				case 0:
				{
					new pvar_string [ 18 ], pl_name [ 20 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
					GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
					new query_string [ 128 ] ;
					mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `familyzam`,`family_date`,`datavhod` FROM `accounts` WHERE `name` = '%s' LIMIT 1", pl_name ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offamily_info", "i", playerid ) ;
				}
				case 1:
				{
					new pvar_string [ 28 ], pl_name [ 20 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
					GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
					format ( pvar_string, sizeof ( pvar_string ), "{ebec86}>> %s", pl_name ) ;

					new query_string [ 128 ];
					format ( query_string,sizeof(query_string),"UPDATE `accounts` SET `family` = '0', `familyzam` = '0' WHERE `name` = '%s' LIMIT 1", pl_name ) ;
					mysql_tquery ( dbHandle, query_string, "", "" ) ;
					format ( query_string, sizeof query_string, "Вы выгнали {ebec86}%s{FFFFFF} из семьи", pl_name ) ;
					SendInf ( playerid, query_string ) ;
					
					new String[150];
					family_info [ p_info[playerid][pFamily] ] [ f_members_amount ] -= 1;

					format ( String, sizeof String, "UPDATE "T_FAMILY" SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [p_info[playerid][pFamily]] [f_members_amount], p_info[playerid][pFamily]);
					mysql_function_query ( dbHandle, String, false, "", "" ) ;

					DeletePVar( playerid, "ofm_listitem" ) ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pFamily ] ) ;
						mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
						return 1;
					}

				}
				case 2:
				{
				    new pvar_string [ 28 ], pl_name [ 20 ] ;
					format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
					GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
					format ( pvar_string, sizeof ( pvar_string ), "{ebec86}>> %s", pl_name ) ;
					
					new query_string [ 128 ];
					format ( query_string,sizeof(query_string),"UPDATE `accounts` SET `familyzam` = '1' WHERE `name` = '%s' LIMIT 1", pl_name ) ;
					mysql_tquery ( dbHandle, query_string, "", "" ) ;
					format ( query_string, sizeof query_string, "Вы назначили {ebec86}%s{FFFFFF} заместителем", pl_name ) ;
					SendInf ( playerid, query_string ) ;
					
					DeletePVar( playerid, "ofm_listitem" ) ;
					if( ! GetPVarInt ( playerid, "ofm_type" ) )
					{
						mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pFamily ] ) ;
						mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
						return 1;
					}
				}
			}
		}
		case d_offmembers_pl_menu_info1:
		{
			new pvar_string [ 38 ], pl_name [ MAX_PLAYER_NAME ] ;
			format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
			GetPVarString ( playerid, pvar_string, pl_name, MAX_PLAYER_NAME ) ;
			format ( pvar_string, sizeof ( pvar_string ), "{ebec86}>> %s", pl_name ) ;
			ShowPlayerDialogEx ( playerid, d_offmembers_pl_menu1, DIALOG_STYLE_LIST, pvar_string, "{FFFFFF}1. Информация об игроке\n2. Выгнать из семьи\n3. Назначить заместителем", "Выбрать", "Назад" ) ;
		}
	case 702:
		{
			if(!response) return 1;
			//
			new fam_id = p_info[playerid][pFamily];
			//
			switch(listitem)
			{
			case 0:
				{
					new zam_text[64], famonline = 0;
					if(!family_info [fam_id] [f_creator_zam]) zam_text = "Нет заместителя";
					else format(zam_text,sizeof(zam_text), "%s", family_info [fam_id] [f_creator_zam]);
					
					foreach(new i: Player)
					{
						if(p_info[playerid][pFamily] == p_info[i][pFamily]) famonline++;
					}

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"{FFFFFF}Название семьи: {%s}%s\n\n{FFFFFF}Состав семьи: всего {ebec86}%d{FFFFFF} игрок(ов)\nДата создания семьи: {ebec86}%s{FFFFFF}\n\nСоздатель семьи: {ebec86}%s{FFFFFF}\nЗаместитель семьи: {ebec86}%s{FFFFFF}\n\nОнлайн семьи: {ebec86}%d{FFFFFF} игрок(ов)",
					family_chat_color [family_info [fam_id] [f_chat_color]],family_info [fam_id] [f_name],family_info [fam_id] [f_members_amount],family_info [fam_id] [f_creating_data],family_info [fam_id] [f_creator],zam_text, famonline);
					ShowPlayerDialogEx(playerid,705,DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация о семье",STRING_GLOBAL,"Назад","");
				}
			case 1:
				{
					if(p_info[playerid][pFamilySozd] > 0) return SendErr(playerid, "Вы создатель семьи и не можете из неё выйти");

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{%s}[%s] {FFFFFF}%s[%d] покинул семью по собственному желанию",family_chat_color [family_info [fam_id] [f_chat_color]], family_info [fam_id] [f_name], GetName(playerid), playerid);
					family_message(p_info[playerid][pFamily], -1, STRING_GLOBAL);
					SendInf(playerid, "Вы покинули семью по собственному желанию");
					family_info [fam_id] [f_members_amount] -= 1;

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, 128, "UPDATE "T_FAMILY" SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [fam_id] [f_members_amount], fam_id);
					mysql_function_query(dbHandle, STRING_GLOBAL, false, "","");
					p_info[playerid][pFamily] = 0;
					p_info[playerid][pFamilyZam] = 0;
					MysqlUpdatePlayerInt(playerid, "family", p_info[playerid][pFamily]);
					MysqlUpdatePlayerInt(playerid, "familyzam", p_info[playerid][pFamilyZam]);
				}
			case 2:
				{
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----\n{%s}-----",family_chat_color [ 0 ],family_chat_color [ 1 ],family_chat_color [ 2 ],family_chat_color [ 3 ],family_chat_color [ 4 ]
					,family_chat_color [ 5 ],family_chat_color [ 6 ],family_chat_color [ 7 ],family_chat_color [ 8 ],family_chat_color [ 9 ],family_chat_color [ 10 ],family_chat_color [ 11 ],family_chat_color [ 12 ],family_chat_color [ 13 ],family_chat_color [ 14 ],family_chat_color [ 15 ],family_chat_color [ 16 ],family_chat_color [ 17 ],family_chat_color [ 18 ],family_chat_color [ 19 ],family_chat_color [ 20 ],family_chat_color [ 21 ]);
					ShowPlayerDialogEx(playerid,706,DIALOG_STYLE_LIST, "{ebec86}>> Цвет чата",STRING_GLOBAL,"Выбрать","Назад");
				}
			case 3:
				{
					if(p_info[playerid][pFamilySozd] == 0) return SendErr(playerid, "Название семьи может менять только создатель");
					ShowPlayerDialogEx(playerid,708,DIALOG_STYLE_INPUT, "{ebec86}>> Название семьи","{FFFFFF}Введите новое название семьи:","Далее","Закрыть");
				}
			case 4:
			    {
			        if(p_info[playerid][pFamilySozd] == 0) return SendErr(playerid, "Место появление может менять только создатель");
					if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "У Вас нет дома");
			        
			        SendInf(playerid, "Вы успешно изменили место появления семьи");
			        
			        new i = GetPVarInt(playerid, "PlayerHouse");
					
					family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 0 ] = HouseInfo[i][hExitx] ;
					family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 1 ] = HouseInfo[i][hExity] ;
					family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 2 ] = HouseInfo[i][hExitz] ;
			        
			        //GetPlayerPos ( playerid, family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 0 ], family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 1 ], family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 2 ] ) ;
					GetPlayerFacingAngle ( playerid, family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 3 ] ) ;

					family_info [ p_info[playerid][pFamily] ] [ f_spawn_int ] = HouseInfo[i][hInt] ;
					family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] = HouseInfo[i][hVirtual] ;
			        
					new sql_string [200];
					mysql_format(dbHandle, sql_string, 200, "UPDATE "T_FAMILY" SET `f_spawn` = '%f,%f,%f,%f,%d,%d' WHERE `fam_id` = '%d' LIMIT 1",
					family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 0 ], family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 1 ], family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 2 ],
					family_info [ p_info[playerid][pFamily] ] [ f_spawn ] [ 3 ], family_info [ p_info[playerid][pFamily] ] [ f_spawn_int ], family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ],  p_info[playerid][pFamily] );
					mysql_query(dbHandle, sql_string);
			    }
			case 5:
			    {
			        if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0) return SendErr(playerid, "У Вас не выбран дом семьи");
			        if(!PlayerToPoint(30.0, playerid, HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hExitx], HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hExity], HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hExitz])) return SendErr(playerid, "Использовать можно только в доме семьи");
			        format(STRING_GLOBAL, sizeof(STRING_GLOBAL), ""newgreen"Положить наркотики. (Наркотиков на складе: %d)\n"newgreen"Положить патроны. (Патрон на складе: %d)\n"newgreen"Положить металл. (Металла на складе: %d)\n"newgreen"Положить деньги. (На складе: %d рублей)\n"nwhite"Взять наркотики. (Наркотиков на складе: %d)\nВзять патроны. (Патрон на складе: %d)\nВзять металл. (Металла на складе: %d)\nВзять деньги. (На складе: %d рублей)",
			        family_info [ p_info[playerid][pFamily] ] [ f_drugs ], family_info [ p_info[playerid][pFamily] ] [ f_patron ], family_info [ p_info[playerid][pFamily] ] [ f_metall ], family_info [ p_info[playerid][pFamily] ] [ f_money ], family_info [ p_info[playerid][pFamily] ] [ f_drugs ], family_info [ p_info[playerid][pFamily] ] [ f_patron ], family_info [ p_info[playerid][pFamily] ] [ f_metall ], family_info [ p_info[playerid][pFamily] ] [ f_money ]);
			    	ShowPlayerDialogEx(playerid, 2171, DIALOG_STYLE_LIST, "{ebec86}>> Общак семьи", STRING_GLOBAL, "Далее", "Закрыть");
				}
			case 6:
			    {
			        if(p_info[playerid][pFamilySozd] == 0) return SendErr(playerid, "Этот раздел доступен лишь создателю");
			        if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0) return SendErr(playerid, "У вас не установлен дом семьи");
			        ShowPlayerDialogEx(playerid,dEditFamilyVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилями семьи","1. Респавн транспорта\n2. Сменить место спавна автомобиля\n3. Изменить модель автомобиля\n4. Купить автомобиль","Выбрать","Назад");
			    }
			case 7:
			    {
			        if(p_info[playerid][pFamilySozd] == 0) return SendErr(playerid, "Этот раздел доступен лишь создателю");
			        SetPVarInt ( playerid, "ofm_list_page", 1 ) ;
					new query_string [ 126 ] ;
					mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pFamily ] ) ;
					mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
			    }
			case 8:
				{
					new str[MAX_PLAYER_NAME+2], numb;
					STRING_GLOBAL[0] = EOS;
					foreach(Player, i)
					{
						if(p_info[i][pFamily] == fam_id)
						{
							format(str, MAX_PLAYER_NAME+2,"%s\n",GetName(i)),strcat(STRING_GLOBAL,str);
							DialogSlot[playerid][++numb] = i;
						}
					}
					ShowPlayerDialogEx(playerid,711,DIALOG_STYLE_LIST, "{ebec86}>> Игроки онлайн", STRING_GLOBAL, "Выбрать","Назад");
				}
			}
		}
    case dEditFamilyVehicle:
		{
			if(!response) return pc_cmd_family(playerid);
			if ( listitem == 0 )
			{
			    for(new i = TOTALVEH; i > 0; i --)
				{
					if(VehInfo[i][vFamily] != p_info[playerid][pFamily]) continue;
					if(IsVehicleOccupied(VehInfo[i][vVehicle])) continue;
					AC_SetVehicleToRespawn(VehInfo[i][vVehicle]);
				}
				
				format(STRING_GLOBAL, 128, "{%s}[%s]{FFFFFF} %s[%d]: заспавнил незанятые машины",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]], family_info [p_info[playerid][pFamily]] [f_name], GetName(playerid), playerid);
				family_message(p_info[playerid][pFamily], -1, STRING_GLOBAL);
			}
			else if ( listitem == 1 )
			{
       			if ( GetPlayerVehicleID ( playerid ) == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
       			if(PlayerToPoint(30.0, playerid, HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hEntrx], HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hEntry], HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hEntrz]))
				{
	       			for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
					{
						if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
						{
				 			SendErr(playerid, "Здесь запрещено парковать машину");
				 			return 1;
						}
					}
				    for(new veh_id = TOTALVEH; veh_id > 0; veh_id --)
				    {
						if ( VehInfo [ veh_id ] [ vFamily ] != p_info [ playerid ] [ pFamily ] ) return 1;
						if(VehInfo [ veh_id ] [ vVehicle ] != GetPlayerVehicleID ( playerid )) return 1;
						new vehicle = VehInfo [ veh_id ] [ vVehicle ];
						GetVehiclePos ( vehicle, VehInfo [ vehicle ] [ vPos_X ], VehInfo [ vehicle ] [ vPos_Y ], VehInfo [ vehicle ] [ vPos_Z ] ) ;
						GetVehicleZAngle( vehicle, VehInfo [ vehicle ] [ vPos_FA ] ) ;

						VehInfo [ vehicle ] [ vModel ] = GetVehicleModel ( GetPlayerVehicleID ( playerid ) );
						DestroyVehicle ( vehicle ) ;
						//VehInfo [ vehicle ] [ vVehicle ] = INVALID_VEHICLE_ID ;
						VehInfo [ veh_id ] [ vVehicle ] = CreateVehicle ( VehInfo [ vehicle ] [ vModel ], VehInfo [ vehicle ] [ vPos_X ], VehInfo [ vehicle ] [ vPos_Y ], VehInfo [ vehicle ] [ vPos_Z ], VehInfo [ vehicle ] [ vPos_FA ], VehInfo [ vehicle ] [ vColor ] [ 0 ] , VehInfo [ vehicle ] [ vColor ] [ 1 ], 900 ) ;

						GetVehicleParamsEx(vehicle, engine, lights, alarm, doors, bonnet, boot, objective);
						SetVehicleParamsEx(vehicle, false, lights, alarm, doors, bonnet, boot, objective);

						new sql_string[300];
						mysql_format(dbHandle, sql_string, 300, "UPDATE "T_VEHICLE" SET `x` = '%f',`y` = '%f',`z` = '%f',`fa` = '%f' WHERE `id` = '%d'",
						VehInfo [ vehicle ] [ vPos_X ], VehInfo [ vehicle ] [ vPos_Y ], VehInfo [ vehicle ] [ vPos_Z ], VehInfo [ vehicle ] [ vPos_FA ],
						veh_id );
						mysql_query ( dbHandle, sql_string ) ;

						SendInf(playerid, "Место спавна автомобиля успешно изменено");
						ShowPlayerDialogEx(playerid,dEditFamilyVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилями семьи","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Купить автомобиль","Выбрать","Назад");
					}
				}
				else SendErr(playerid, "Доступно рядом с домом семьи");
			}
			else if ( listitem == 2 )
			{
			    STRING_GLOBAL = "";
			    if ( GetPlayerVehicleID ( playerid ) == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
			    for(new veh_id = TOTALVEH; veh_id > 0; veh_id --)
				{
	     			if ( VehInfo[ veh_id ] [ vFamily ] != p_info [ playerid ] [ pFamily ] ) continue;
	     			if(VehInfo [ veh_id ] [ vVehicle ] != GetPlayerVehicleID ( playerid )) continue;

					new m_param ;
					if ( p_info[playerid][pFamily] != 0 ) m_param = 1 ;
					else return SendErr(playerid, "Нету машин для вашей семьи");
					new line_string [ 128 ] ;

					for ( new j = 0; j < 15; j ++ )
					{
						if ( model_change [ m_param ] [ j ] == 0 ) break ;
						format ( line_string, 128, "- {f0e86b}%s{FFFFFF}, Цена: {f0e86b}%d{FFFFFF}\n", VehicleNames [ model_change [ m_param ] [ j ] - 400 ], model_change [ m_param ] [ j ] * 1000 * WorkSalary[7] ) ;
						strcat(STRING_GLOBAL, line_string ) ;
					}
					ShowPlayerDialogEx(playerid,dModelFamilyEdit,DIALOG_STYLE_LIST, "{ebec86}>> Модель автомобиля", STRING_GLOBAL, "Купить", "Закрыть");
				}
			}
			else if ( listitem == 3 )
			{
			    STRING_GLOBAL = "";
			    format(STRING_GLOBAL, 256, "{FFFFFF}Вы собираетесь приобрести семеный транспорт.\nИзначально Вам будет выдан скутер.\n\nЦена: {f0e86b}%d{FFFFFF} рублей", 462*1000*WorkSalary[7]);
				ShowPlayerDialogEx(playerid, dBuyFamilyVehicle, DIALOG_STYLE_MSGBOX, "{ebec86}>> Покупка автомобиля", STRING_GLOBAL, "Купить", "Закрыть");
			}
			return 1 ;
		}
	case dModelFamilyEdit:
		{
			if ( ! response )return ShowPlayerDialogEx(playerid,dEditFamilyVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилями семьи","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Купить автомобиль","Выбрать","Назад");
			if ( GetPlayerVehicleID ( playerid ) == INVALID_VEHICLE_ID )return SendErr ( playerid, "Функция доступна только в автомобиле" ) ;
            for(new veh_id = TOTALVEH; veh_id > 0; veh_id --)
			{
	    		if ( VehInfo[ veh_id ] [ vFamily ] != p_info [ playerid ] [ pFamily ] ) continue;
	    		if(VehInfo [ veh_id ] [ vVehicle ] != GetPlayerVehicleID ( playerid )) continue;
	    		new vehicle = VehInfo [ veh_id ] [ vVehicle ];
				new m_param ;
				if ( p_info[playerid][pFamily] != 0 ) m_param = 1 ;
				if ( p_info[playerid][pCash] < model_change [ m_param ] [ listitem ] * 1000 * WorkSalary[7] ) return SendErr ( playerid, "У Вас недостаточно денег");

				VehInfo [ vehicle ] [ vModel ] = model_change [ m_param ] [ listitem ] ;
				GiveMoney(playerid, -model_change [ m_param ] [ listitem ] * 1000 * WorkSalary[7], "Смена модели семьи");
				
				GetVehiclePos ( vehicle, VehInfo [ vehicle ] [ vPos_X ], VehInfo [ vehicle ] [ vPos_Y ], VehInfo [ vehicle ] [ vPos_Z ] ) ;
				GetVehicleZAngle( vehicle, VehInfo [ vehicle ] [ vPos_FA ] ) ;

				DestroyVehicle ( vehicle ) ;
				//VehInfo [ vehicle ] [ vVehicle ] = INVALID_VEHICLE_ID ;
				VehInfo [ veh_id ] [ vVehicle ] = CreateVehicle ( VehInfo [ vehicle ] [ vModel ], VehInfo [ vehicle ] [ vPos_X ], VehInfo [ vehicle ] [ vPos_Y ], VehInfo [ vehicle ] [ vPos_Z ], VehInfo [ vehicle ] [ vPos_FA ], VehInfo [ vehicle ] [ vColor ][0], VehInfo [ vehicle ] [ vColor ][1], 900 ) ;

	    		GetVehicleParamsEx(vehicle, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(vehicle, false, lights, alarm, doors, bonnet, boot, objective);

				SendInf(playerid, "Модель автомобиля успешно изменена");
				ShowPlayerDialogEx(playerid,dEditFamilyVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилями семьи","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Купить автомобиль","Выбрать","Назад");

				new sql_string[200];
				mysql_format(dbHandle, sql_string, 200, "UPDATE "T_VEHICLE" SET `model` = '%d' WHERE `id` = '%d'",
				VehInfo [ vehicle ] [ vModel ], veh_id );
				mysql_query(dbHandle, sql_string);
			}
			return 1 ;
		}
    case dBuyFamilyVehicle:
		{
			if ( ! response ) return ShowPlayerDialogEx(playerid,dEditFamilyVehicle,DIALOG_STYLE_LIST, "{ebec86}>> Управление автомобилями семьи","1. Сменить место спавна автомобиля\n2. Изменить модель автомобиля\n3. Купить автомобиль","Выбрать","Назад");
            if(PlayerToPoint(30.0, playerid, HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hEntrx], HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hEntry], HouseInfo[family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ]][hEntrz]))
            {
				for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
				{
					if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
					{
			 			SendErr(playerid, "Здесь запрещено покупать машину");
			 			return 1;
					}
				}
				new family_car = 0;
	            for(new veh_id = TOTALVEH; veh_id > 0; veh_id --)
				{
					if ( VehInfo[ veh_id ] [ vFamily ] == p_info [ playerid ] [ pFamily ] )
					{
					    family_car++;
					}
				}
				if(family_car >= 5) return SendErr(playerid, "Вы исчерпали лимит на семеный транспорт");
				if ( p_info[playerid][pCash] < 462*1000*WorkSalary[7] ) return SendErr ( playerid, "У Вас недостаточно денег");

				GiveMoney(playerid, -462*1000*WorkSalary[7], "Покупка т/с семьи");
				TOTALVEH++;

				new Float:X, Float:Y, Float:Z, Float:A;
				GetPlayerPos(playerid, X, Y, Z);
				GetPlayerFacingAngle (playerid, A);

				VehInfo [ TOTALVEH ] [ vPos_X ] = X;
				VehInfo [ TOTALVEH ] [ vPos_Y ] = Y;
			 	VehInfo [ TOTALVEH ] [ vPos_Z ] = Z;
			 	VehInfo [ TOTALVEH ] [ vPos_FA ] = A;

				VehInfo [ TOTALVEH ] [ vFamily ] = p_info [ playerid ] [ pFamily ];
				VehInfo [ TOTALVEH ] [ vColor ][0] = VehInfo [ TOTALVEH ] [ vColor ][1] = 0;
	            format(VehInfo[TOTALVEH][vColors], 16, "%i, %i", VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1]);
				VehInfo [ TOTALVEH ] [ vVehicle ] = CreateVehicle ( 462, VehInfo [ TOTALVEH ] [ vPos_X ], VehInfo [ TOTALVEH ] [ vPos_Y ], VehInfo [ TOTALVEH ] [ vPos_Z ], VehInfo [ TOTALVEH ] [ vPos_FA ], VehInfo [ TOTALVEH ] [ vColor ][0], VehInfo [ TOTALVEH ] [ vColor ][1], 900 ) ;

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"INSERT INTO "T_VEHICLE" (id, model, x, y, z, fa, vint, world, colors, fraction, status, family) VALUES (%i, %i, '%f', '%f', '%f', '%f', %i, %i, '%s', %i, %i, %i)",
				TOTALVEH,462,VehInfo[TOTALVEH][vPos_X],VehInfo[TOTALVEH][vPos_Y],VehInfo[TOTALVEH][vPos_Z],VehInfo[TOTALVEH][vPos_FA],VehInfo[TOTALVEH][vInt],
				VehInfo[TOTALVEH][vWorld],VehInfo[TOTALVEH][vColors],VehInfo[TOTALVEH][vFraction], VehInfo[TOTALVEH][vStatus], VehInfo[TOTALVEH][vFamily]);
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				return 1 ;
			}
			else SendErr(playerid, "Доступно рядом с домом семьи");
		}
	case 711:
		{
			if(!response) return callcmd::family(playerid);
			{
			    STRING_GLOBAL = "";
			    new famonline = 0;
			    foreach(new i: Player)
				{
					if(p_info[playerid][pFamily] == p_info[i][pFamily]) famonline++;
				}
				
				if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0)
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {FF6347}Нет{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
				else
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {f0e86b}№%d{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ], famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
			}
			SetPVarInt(playerid,"UsePlayer",listitem+1);
			ShowPlayerDialogEx(playerid,712,DIALOG_STYLE_LIST, "{ebec86}>> Выбор действия","1. Назначить заместителем\n2. Выгнать из семьи\n3. Передать лидерство семьи","Выбрать","Назад");
		}
	case 712:
		{
			new dialogPLid = DialogSlot[playerid][GetPVarInt(playerid,"UsePlayer")];
			if(!response)
			{
			    new famonline = 0;
			    foreach(new i: Player)
				{
					if(p_info[playerid][pFamily] == p_info[i][pFamily]) famonline++;
				}
			
				STRING_GLOBAL[0] = EOS;
				if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0)
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {FF6347}Нет{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
				else
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {f0e86b}№%d{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ], famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
			}
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						// Проверяем есть ли заместитель у фракции
						if(p_info[playerid][pFamilySozd] == 0) return SendErr(playerid, "Назначать заместителя может только создатель");
						STRING_GLOBAL[0] = EOS;
						mysql_format(dbHandle, STRING_GLOBAL,sizeof(STRING_GLOBAL),"SELECT `name` FROM "T_ACCOUNTS" WHERE `family` = '%d' AND `familyzam` = '1'", p_info[playerid][pFamily]);
						mysql_function_query(dbHandle, STRING_GLOBAL,true,"OnMySQL_Query","ddd",playerid,100,dialogPLid);
					}
				case 1:
					{
						if(p_info[playerid][pFamilySozd] == 0 && p_info[playerid][pFamilyZam] == 0) return SendErr(playerid, "Выгонять из семьи может только заместитель и создатель");
						if(dialogPLid == playerid) return SendErr(playerid, "Вы не можете выгнать самого себя");
						if(p_info[playerid][pFamily] != p_info[dialogPLid][pFamily]) return SendErr(playerid, "Данный игрок не состоит в Вашей семье");

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s выгнал(а) Вас из семьи", GetName(playerid));
						SendClientMessage(dialogPLid, COLOR_BLUE, STRING_GLOBAL);

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы выгнали %s из семьи",GetName(dialogPLid));
						SendClientMessage(playerid, COLOR_BLUE, STRING_GLOBAL);

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"{%s}[%s]{FFFFFF} %s выгнал игрока %s из семьи",family_chat_color [family_info[p_info[playerid][pFamily]] [f_chat_color ]],family_info [p_info[playerid][pFamily]] [f_name],GetName(playerid),GetName(dialogPLid));
						family_message(p_info[playerid][pFamily], -1, STRING_GLOBAL);
						family_info [ p_info[playerid][pFamily] ] [ f_members_amount ] -= 1;
						p_info[dialogPLid][pFamily] = 0;
						p_info[dialogPLid][pFamilyZam] = 0;
						MysqlUpdatePlayerInt(dialogPLid, "family", p_info[dialogPLid][pFamily]);
						MysqlUpdatePlayerInt(dialogPLid, "familyzam", p_info[dialogPLid][pFamilyZam]);
						//
						STRING_GLOBAL[0] = EOS;
						format ( STRING_GLOBAL, 128, "UPDATE "T_FAMILY" SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [p_info[playerid][pFamily]] [f_members_amount], p_info[playerid][pFamily]);
						mysql_function_query ( dbHandle, STRING_GLOBAL, false, "", "" ) ;
					}
				case 2:
				    {
				        if(p_info[playerid][pFamilySozd] == 0) return SendErr(playerid, "Выгонять из семьи может только создатель");
				        if(dialogPLid == playerid) return SendErr(playerid, "Вы не можете назначить самого себя");
						if(p_info[playerid][pFamily] != p_info[dialogPLid][pFamily]) return SendErr(playerid, "Данный игрок не состоит в Вашей семье");
				    
				        STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"{%s}[%s]{FFFFFF} %s назначил %s новым лидером семьи",family_chat_color [family_info[p_info[playerid][pFamily]] [f_chat_color ]],family_info [p_info[playerid][pFamily]] [f_name],GetName(playerid),GetName(dialogPLid));
						family_message(p_info[playerid][pFamily], -1, STRING_GLOBAL);
				    
				        p_info[dialogPLid][pFamilySozd] = 1;
						MysqlUpdatePlayerInt(dialogPLid, "familysozd", p_info[dialogPLid][pFamilySozd]);
						p_info[dialogPLid][pFamilyZam] = 0;
						MysqlUpdatePlayerInt(dialogPLid, "familyzam", p_info[dialogPLid][pFamilyZam]);
						
						p_info[playerid][pFamilySozd] = 0;
						MysqlUpdatePlayerInt(playerid, "familysozd", p_info[playerid][pFamilySozd]);
						p_info[playerid][pFamilyZam] = 0;
						MysqlUpdatePlayerInt(playerid, "familyzam", p_info[playerid][pFamilyZam]);
				    
				        strmid (family_info [p_info[dialogPLid][pFamily]] [f_creator], GetName(dialogPLid), 0, strlen(GetName(dialogPLid)), strlen(GetName(dialogPLid))+5);
						new sql_string [200];
						mysql_format(dbHandle, sql_string, 200, "UPDATE "T_FAMILY" SET `fam_creator` = '%s' WHERE `fam_id` = '%d' LIMIT 1",
						family_info [ p_info[dialogPLid][pFamily] ] [ f_creator ],  p_info[dialogPLid][pFamily] );
						mysql_query(dbHandle, sql_string);
				    }
				}
			}
		}
	case 704:
		{
			if(response)
			{
			    new famonline = 0;
			    foreach(new i: Player)
				{
					if(p_info[playerid][pFamily] == p_info[i][pFamily]) famonline++;
				}
			
    			STRING_GLOBAL[0] = EOS;
				if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0)
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {FF6347}Нет{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
				else
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {f0e86b}№%d{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ], famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
			}
			ShowPlayerDialogEx(playerid,101 ,DIALOG_STYLE_MSGBOX, "{ebec86}>> Состав семьи", STRING_GLOBAL, "Назад","" ) ;
		}
	case 705:
		{
		    new famonline = 0;
	 		foreach(new i: Player)
			{
				if(p_info[playerid][pFamily] == p_info[i][pFamily]) famonline++;
			}
		
			STRING_GLOBAL[0] = EOS;
   			if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0)
			{
			    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {FF6347}Нет{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", famonline);
				ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
			}
			else
			{
			    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {f0e86b}№%d{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ], famonline);
				ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
			}
		}
	case 706:
		{
			if(p_info[playerid][pFamilySozd] == 0 && p_info[playerid][pFamilyZam] == 0) return SendErr(playerid, "Цвет чата семьи может менять только создатель и заместитель семьи");
			
			new famonline = 0;
 			foreach(new i: Player)
			{
				if(p_info[playerid][pFamily] == p_info[i][pFamily]) famonline++;
			}
			
			new fam_id = p_info[playerid][pFamily];
			if(response)
			{
				family_info [fam_id] [f_chat_color] = listitem;

				STRING_GLOBAL[0] = EOS;
				if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0)
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {FF6347}Нет{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
				else
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {f0e86b}№%d{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ], famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
				//
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, 128, "UPDATE "T_FAMILY" SET `fam_chat_color` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [fam_id] [f_chat_color], fam_id);
				mysql_function_query(dbHandle, STRING_GLOBAL, false, "", "");

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{%s}[%s]{FFFFFF} %s[%d]: изменил(а) цвет чата семьи",family_chat_color [family_info[fam_id] [f_chat_color]],family_info [fam_id] [f_name],GetName(playerid),playerid);
				family_message(fam_id,-1, STRING_GLOBAL);
			}
			else
			{
				STRING_GLOBAL[0] = EOS;
				if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0)
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {FF6347}Нет{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
				else
				{
				    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {f0e86b}№%d{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ], famonline);
					ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
				}
			}
		}
	case 707:
		{
			new familyid = GetPVarInt(playerid,"family_id");
			if(!response)
			{
				DeletePVar(playerid,"family_id");
				DeletePVar(playerid,"family_playerid");
			}
			else
			{
				p_info[playerid][pFamily] = familyid;
				MysqlUpdatePlayerInt(playerid, "family", p_info[playerid][pFamily]);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"{%s}[%s]{FFFFFF} %s[%d] вступил(а) в семью",family_chat_color [ family_info [ p_info[playerid][pFamily]] [ f_chat_color ] ],family_info [ p_info[playerid][pFamily] ] [ f_name ],GetName(playerid),playerid);
				family_message(p_info[playerid][pFamily],-1, STRING_GLOBAL);
				family_info [ p_info[playerid][pFamily]] [ f_members_amount ] += 1;

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, 128, "UPDATE "T_FAMILY" SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [p_info[playerid][pFamily]] [f_members_amount], p_info[playerid][pFamily]);
				mysql_function_query(dbHandle, STRING_GLOBAL, false, "", "");
				
				new year, month, day,
				fmt_query[70+MAX_PLAYER_NAME];

				getdate(year, month, day);
				format(fmt_query, sizeof fmt_query, "UPDATE accounts SET family_date = '%d.%d.%d' WHERE name = '%s'", day, month, year, GetName(playerid));
				mysql_query(dbHandle, fmt_query);
				
				DeletePVar(playerid,"family_id");
				DeletePVar(playerid,"family_playerid");
			}
		}
	case 708:
		{
			if(response)
			{
				if (strlen ( inputtext ) < 2 || strlen (inputtext ) > 12) return ShowPlayerDialogEx(playerid,708,DIALOG_STYLE_INPUT, "{ebec86}>> Название семьи","{FFFFFF}Введите новое название семьи:","Далее","Закрыть");
				format(family_info [p_info[playerid][pFamily]] [f_name], 32 , inputtext);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}%s[%d]: изменил(а) название семьи на {%s}%s",GetName(playerid),playerid,family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],inputtext);
				family_message(p_info[playerid][pFamily], -1, STRING_GLOBAL);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, 128, "UPDATE "T_FAMILY" SET `fam_name` = '%s' WHERE `fam_id` = '%d'",inputtext, p_info[playerid][pFamily]);
				mysql_function_query ( dbHandle, STRING_GLOBAL, false, "", "");
			}
		}
	case 3793:
		{
			if(!response) return 1;
			ShowPlayerDialogEx(playerid, 3794, DIALOG_STYLE_LIST, "{ebec86}>> Помощь по серверу", "1. Общение\n2. Список игроков\n3. Транспорт\n4. Общее\n5. Работа\n6. Оружие и убийство\n7. Получение документов\n8. Задания", "Далее", "Отмена");
			return 1;
		}
	case 3794:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "\tОбщение\n\n");
					strcat(STRING_GLOBAL, "Вы можете общаться с другими игроками через чат в левом верхнем углу.\n");
					strcat(STRING_GLOBAL, "Чтобы напечатать сообщение, нажмите клавишу \"F6\" или \"T\" (на латинице).\n");
					strcat(STRING_GLOBAL, "Так же с помощью чата используются все команды сервера, к примеру \"/menu\".\n\n");
					strcat(STRING_GLOBAL, "Используйте \"/menu\" для просмотра персонального меню.\n");
					strcat(STRING_GLOBAL, "В диалоговом окне Вы сможете найти всё необходимое.\n");
					strcat(STRING_GLOBAL, "Более подробное описание Вы найдёте на нашем сайте "SERVER_WEBSITE"\n");
					strcat(STRING_GLOBAL, "Так же регистрируйтесь на форуме, в дальнейшем Вам это пригодится "SERVER_FORUM"");
					ShowPlayerDialogEx(playerid, 3795, DIALOG_STYLE_MSGBOX, "{ebec86}>> Общение", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 1:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "\tСписок игроков\n\n");
					strcat(STRING_GLOBAL, "Данный список можно посмотреть, нажав клавишу \"TAB\".\n");
					strcat(STRING_GLOBAL, "Там вы увидите:\n\n");
					strcat(STRING_GLOBAL, "\"ID\" игрока (используется в командах)\n");
					strcat(STRING_GLOBAL, "\"Ник\" (Role Play имя игрока)\n");
					strcat(STRING_GLOBAL, "\"Уровень\" графа Score (количество лет в стране)\n");
					strcat(STRING_GLOBAL, "\"Пинг\" время отклика между Вами и сервером (в милисекундах)\n\n");
					strcat(STRING_GLOBAL, "Для просмотра списка полностью, используйте прокрутку справа.\n");
					strcat(STRING_GLOBAL, "Вы в этой табличке всегда отображаетесь первым, независимо от ID.");
					ShowPlayerDialogEx(playerid, 3795, DIALOG_STYLE_MSGBOX, "{ebec86}>> Список игроков", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 2:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "\tТранспорт\n\n");
					strcat(STRING_GLOBAL, "Я надеюсь Вы умеете управлять транспортным средством, но даже если нет,\n");
					strcat(STRING_GLOBAL, "наша Автошкола и Авиашкола научат Вас.\n\n");
					strcat(STRING_GLOBAL, "В Автошколу и Авиашколу придётся идти в любом случае, поскольку езда без прав не\n");
					strcat(STRING_GLOBAL, "безопасна, а полёты уж темболее, ну и думаю Вы не хотите платить штрафы.\n");
					strcat(STRING_GLOBAL, "Ну а пока можете воспользоваться велосипедом или общественным транспортом.\n");
					strcat(STRING_GLOBAL, "Для того, чтобы сесть на пассажирское место, используйте клавишу \"G\".\n");
					ShowPlayerDialogEx(playerid, 3795, DIALOG_STYLE_MSGBOX, "{ebec86}>> Транспорт", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 3:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "\tОбщее\n\n");
					strcat(STRING_GLOBAL, "На нашем сервере можно зарабатывать деньги, все работы Вы можете найти в GPS-навигаторе.\n");
					strcat(STRING_GLOBAL, "На заработанные деньги возможно приобретать недвижимость, транспорт и прочие мелочи.\n\n");
					strcat(STRING_GLOBAL, "Можно работать полицейским защищая гражданских или быть на противоположной стороне закона,\n");
					strcat(STRING_GLOBAL, "ведя войну за контроль над кварталами или бизнесами. И это только малая часть доступного!");
					ShowPlayerDialogEx(playerid, 3795, DIALOG_STYLE_MSGBOX, "{ebec86}>> Общее", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 4:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "\tРабота\n\n");
					strcat(STRING_GLOBAL, "Многие профессии доступны каждому, но есть ограничения по прожитию в стране (уровню).\n\n");
					strcat(STRING_GLOBAL, "Есть 4 работы для новичков, то место где Вы получите свои первые деньги:\n");
					strcat(STRING_GLOBAL, "Работа на лесопилке. Суть работы: пилить деревья и относить на склад.\n");
					strcat(STRING_GLOBAL, "Работа на шахте. Суть работы: добывать уголь и относить на склад. \n");
					strcat(STRING_GLOBAL, "Работа на оружейном заводе. Суть работы: собирать детали для оружия.\n");
					strcat(STRING_GLOBAL, "Любую из работ можно найти в GPS-навигаторе (/gps).\n\n");
					strcat(STRING_GLOBAL, "Остальные работы (с ограничениями по уровню):\n");
					strcat(STRING_GLOBAL, "Работа водителя маршрутки. Суть работы: ездить по разным заданным маршрутам.\n");
					strcat(STRING_GLOBAL, "Работа таксиста. Суть работы: развозить пассажиров по конкретным местам.\n");
					strcat(STRING_GLOBAL, "Работа механика. Суть работы: ремонтировать транспортные средства.\n");
					strcat(STRING_GLOBAL, "Работа дальнобойщика. Суть работы: перевозить дерево и уголь на оружейный завод.\n");
					strcat(STRING_GLOBAL, "На каждую из работ можно устроиться в любой мэрии города.");
					ShowPlayerDialogEx(playerid, 3795, DIALOG_STYLE_MSGBOX, "{ebec86}>> Работа", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 5:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "\tОружие и убийство\n\n");
					strcat(STRING_GLOBAL, "Для ношения оружия необходима лицензия, без неё Вы не сможете приобрести оружие\n");
					strcat(STRING_GLOBAL, "в магазине. Но, оружие можно достать и другими способами.\n\n");
					strcat(STRING_GLOBAL, "За убийство человека Вы будете объявлены в розыск, как опасный преступник,\n");
					strcat(STRING_GLOBAL, "а при аресте Вы лишитесь свободы и сядете в тюрьму!\n");
					strcat(STRING_GLOBAL, "Так же почитайте Правила на нашем форуме "SERVER_FORUM"");
					ShowPlayerDialogEx(playerid, 3795, DIALOG_STYLE_MSGBOX, "{ebec86}>> Оружие и убийство", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 6:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "\tПолучение документов\n\n");
					strcat(STRING_GLOBAL, "Чтобы получить гражданство в нашей стране\n");
					strcat(STRING_GLOBAL, "нужно направится в Мэрию города (/gps)\n\n");
					strcat(STRING_GLOBAL, "Получение мед. карты, нужно направится в Центральную больницу города\n");
					strcat(STRING_GLOBAL, "Получить лицензии можно в автошколе.\n");
					ShowPlayerDialogEx(playerid, 3795, DIALOG_STYLE_MSGBOX, "{ebec86}>> Получение документов", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 7:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "\tЗадания для выполнения\n\n");
					strcat(STRING_GLOBAL, "Чтобы вам не было скучно у нас на сервере\n");
					strcat(STRING_GLOBAL, "вы можете повыполнять задания для игроков (/quest)\n\n");
					strcat(STRING_GLOBAL, "и получать за это хорошие призы\n");
					ShowPlayerDialogEx(playerid, 3795, DIALOG_STYLE_MSGBOX, "{ebec86}>> Получение документов", STRING_GLOBAL, "Назад", "Закрыть");
				}
			}
		}
	case 3795:
		{
			if(!response) return 1;
			else ShowPlayerDialogEx(playerid, 3794, DIALOG_STYLE_LIST, "{ebec86}>> Помощь по серверу", "1. Общение\n2. Список игроков\n3. Транспорт\n4. Общее\n5. Работа\n6. Оружие и убийство\n7. Получение документов\n8. Задания", "Далее", "Отмена");
		}
	case D_INVENT:
		{
			if(response)
			{
				if(!strlen(inputtext))return SendErr(playerid, "Вы ничего не ввели!");
				if(strval(inputtext) < 1 || strval(inputtext) > 60) return SendErr(playerid, "Число может быть не больше 60");
				new slot=PlayerUseList[playerid][MAX_LIST];
				switch(PlayerItem1[playerid][slot])
				{
				case 19..35:
					{
						new ok;
						for(new s = 16; s > 0; s --)
						{
							if(PlayerItem1[playerid][s]==42){ok=s;break;}
						}
						if(PlayerItem2[playerid][ok]<strval(inputtext))return SendErr(playerid, "У вас нет столько патронов");
						switch(PlayerItem1[playerid][slot])
						{
						case 19:AC_GivePlayerWeapon(playerid,22,strval(inputtext));//AC_GivePlayerWeapon(playerid,22,strval(inputtext));
						case 20:AC_GivePlayerWeapon(playerid,23,strval(inputtext));
						case 21:AC_GivePlayerWeapon(playerid,24,strval(inputtext));
						case 22:AC_GivePlayerWeapon(playerid,25,strval(inputtext));
						case 23:AC_GivePlayerWeapon(playerid,26,strval(inputtext));
						case 24:AC_GivePlayerWeapon(playerid,27,strval(inputtext));
						case 25:AC_GivePlayerWeapon(playerid,28,strval(inputtext));
						case 26:AC_GivePlayerWeapon(playerid,29,strval(inputtext));
						case 27:AC_GivePlayerWeapon(playerid,30,strval(inputtext));
						case 28:AC_GivePlayerWeapon(playerid,31,strval(inputtext));
						case 29:AC_GivePlayerWeapon(playerid,32,strval(inputtext));
						case 30:AC_GivePlayerWeapon(playerid,33,strval(inputtext));
						case 31:AC_GivePlayerWeapon(playerid,34,strval(inputtext));
						case 32:AC_GivePlayerWeapon(playerid,35,strval(inputtext));
						case 33:AC_GivePlayerWeapon(playerid,36,strval(inputtext));
						case 35:AC_GivePlayerWeapon(playerid,38,strval(inputtext));
						}
						if(PlayerItem2[playerid][ok] == 0)
						{
							PlayerItem1[playerid][ok]=0;
						}
						PlayerItem2[playerid][ok]-=strval(inputtext);
						SaveItem(playerid,ok);
					}
				}
				UpDateInv(playerid);
			}
		}
	case D_INVENT+1:
		{
			if(response)
			{
				if(!strlen(inputtext))return SendErr(playerid, "Вы ничего не ввели!");
				if(strval(inputtext) < 1 || strval(inputtext) > 1000000) return SendErr(playerid, "Число может быть не больше 1000000");
				new id=PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
				new s=PlayerUseList[playerid][MAX_LIST];

				PlayerItem2[playerid][s]-=strval(inputtext);
				SaveItem(playerid,s);
				UpDateInv(playerid);
				new string[70];
				format(string, sizeof(string), "%s выкинул в сторону '%s'", GetName(playerid),Item[id][iName]);
				ProxDetector(15, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SendErr(playerid, "Вы успешно выкинули предмет!");
			}
		}
	case D_INVENT+2:
		{
			if(response)
			{
				PlayerUseList[playerid][MAX_LIST]=PlayerUseList[playerid][listitem];
				new str[45], string[128];
				new id=PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
				format(str,sizeof(str),"{ebec86}>> Предмет: %s",Item[PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]]][iName]);
				if(IsPlayerInRangeOfPoint(playerid,3.0,197.5494,490.0202,11.9900))
				{
					format(string, sizeof(string),
					"{FFFFFF}Вы желаете продать в ломбард {0099FF}'%s'{FFFFFF} за {f0e86b}%dр", Item[id][iName], Item[id][iLom]);
					ShowPlayerDialogEx(playerid, D_INVENT+14, DIALOG_STYLE_MSGBOX, "{ebec86}>> Ломбард", string, "Продать", "Отмена");
				}
				else ShowPlayerDialogEx(playerid,D_INVENT+3,DIALOG_STYLE_LIST,str, "1. Использовать\n2. Передать\n3. Выкинуть", "Выбрать", "Выйти");
			}
		}
	case D_INVENT+3:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:{OnPlayerUseItem(playerid,PlayerUseList[playerid][MAX_LIST]);}
				case 1:
					{
						if(CheckUseGun(playerid,PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]])==1){return 1;}
						ShowPlayerDialogEx(playerid,D_INVENT+5,DIALOG_STYLE_INPUT, "{ebec86}>> Передача предмета","{FFFFFF}Введите ид игрока,\nКоторому Вы хотите передать предмет!","Дальше","Выйти");
					}
				case 2:
					{
						if(GetPlayerInterior(playerid) != 0 && GetPlayerVirtualWorld(playerid) != 0) return SendErr(playerid, "Выйдите на улицу");
						new id = PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
						if(CheckUseGun(playerid,PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]])==1){return 1;}
						new s = PlayerUseList[playerid][MAX_LIST];
						switch(Item[id][iStek])
						{
						case 0:
							{
								PlayerItem2[playerid][s]=0;
								SaveItem(playerid,s);
								UpDateInv(playerid);
								new string[70];
								format(string, sizeof(string), "%s что-то выкинул в сторону", GetName(playerid));
								ProxDetector(15, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SendErr(playerid, "Вы успешно выкинули предмет!");
							}
						default:ShowPlayerDialogEx(playerid,D_INVENT+1,DIALOG_STYLE_INPUT, "{ebec86}>> Выкинуть предмет","Введите сумму предметов,\nКоторую Вы хотите выкинуть!","Дальше","Выйти");
						}
					}
				case 3:
					{
						new id = PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
						if(CheckUseGun(playerid,PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]])==1){return 1;}
						new s = PlayerUseList[playerid][MAX_LIST];
						switch(Item[id][iStek])
						{
						case 0:
							{
								PlayerItem2[playerid][s]=0;
								SaveItem(playerid,s);
								UpDateInv(playerid);
								GiveMoney(playerid, Item[id][iLom], "Продажа в ломбард");
								new string[70];
								format(string, sizeof(string), "%s продал в ломбард '%s'", GetName(playerid),Item[id][iName]);
								ProxDetector(15, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								SCMF(playerid,COLOR_GREY,"Вы успешно продали предмет за '%dр'",Item[id][iLom]);
							}
						default:ShowPlayerDialogEx(playerid,D_INVENT+13,DIALOG_STYLE_INPUT, "{ebec86}>> Ломбард","Введите сумму предметов,\nКоторую Вы хотите продать!","Дальше","Выйти");
						}
					}
				}
			}
		}
	case D_INVENT+5:
		{
			if(response)
			{
				if(!strlen(inputtext))return SendErr(playerid, "Вы ничего не ввели");
				if(!IsPlayerConnected(strval(inputtext))) return SendErr(playerid, "Игрок не в игре");
				new Float:p[3];
				GetPlayerPos(strval(inputtext),p[0],p[1],p[2]);
				if(!IsPlayerInRangeOfPoint(playerid,3,p[0],p[1],p[2]))return SendErr(playerid, "Игрок не рядом с вами");
				GivePlayer[playerid][0]=strval(inputtext);
				new id = PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
				new s=PlayerUseList[playerid][MAX_LIST];
				GivePlayer[playerid][4]=s;
				switch(Item[id][iStek])
				{
				case 0:
					{
						GivePlayer[playerid][1]=PlayerItem2[playerid][s];
						ShowPlayerDialogEx(playerid,D_INVENT+7,DIALOG_STYLE_INPUT, "{ebec86}>> Передача предмета","{FFFFFF}Введите точную сумму денег\nЗа которую Вы хотите продать предмет.","Дальше","Выйти");
					}
				default:ShowPlayerDialogEx(playerid,D_INVENT+6,DIALOG_STYLE_INPUT, "{ebec86}>> Передача предмета","{FFFFFF}Введите точное количество предметов\nКоторое Вы хотите продать игроку!","Дальше","Выйти");
				}

			}
		}
	case D_INVENT+6:
		{
			if(response)
			{
				if(!strlen(inputtext))return SendErr(playerid, "Вы ничего не ввели!");
				if(strval(inputtext) < 0 || strval(inputtext) > 1000000) return SendErr(playerid, "Число может быть не больше 1000000");
				new s=PlayerUseList[playerid][MAX_LIST];
				if(PlayerItem2[playerid][s]<strval(inputtext))return SendErr(playerid, "У вас нет столько предметов!");
				GivePlayer[playerid][1]=strval(inputtext);
				ShowPlayerDialogEx(playerid,D_INVENT+7,DIALOG_STYLE_INPUT, "{ebec86}>> Передача предмета","{FFFFFF}Введите точную сумму денег\nЗа которую Вы хотите продать предмет.","Дальше","Выйти");
			}
		}
	case D_INVENT+7:
		{
			if(response)
			{
				if(!strlen(inputtext))return SendErr(playerid, "Вы ничего не ввели!");
				if(strval(inputtext) < 0 || strval(inputtext) > 1000000) return SendErr(playerid, "Число может быть не больше 1000000");
				new id = PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
				new string[300];
				GivePlayer[playerid][2]=strval(inputtext);
				format(string,sizeof(string),"{FFFFFF}Вы действительно хотите продать след. итем?\n{FFFFFF}Название предмета: %s\n{FFFFFF}Стоимость предмета: %iр\n{FFFFFF}Количество предмета: %i\n{FFFFFF}Вес предмета: %i",Item[id][iName],GivePlayer[playerid][2],GivePlayer[playerid][1],Item[id][iGG]*GivePlayer[playerid][1]);
				ShowPlayerDialogEx(playerid,D_INVENT+8,DIALOG_STYLE_MSGBOX, "{ebec86}>> Подтверждение",string,"Дальше","Выйти");
			}
		}
	case D_INVENT+8:
		{
			if(response)
			{
				new id = PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
				new s = PlayerUseList[playerid][MAX_LIST];
				new string[350];
				SendErr(playerid, "Ожидайте, пока игрок согласится.");
				format(string,sizeof(string),"{FFFFFF}Вы действительно хотите купить след. итем?\n{FFFFFF}Название предмета: %s\n{FFFFFF}Стоимость предмета: %iр\n{FFFFFF}Количество предмета: %i\n{FFFFFF}Вес предмета: %i\n{FFFFFF}В сумку вместится еще: %iг",Item[id][iName],GivePlayer[playerid][2],GivePlayer[playerid][1],Item[id][iGG]*GivePlayer[playerid][1],p_info[GivePlayer[playerid][0]][pSprunk]-PlayerVesItem[GivePlayer[playerid][0]]);
				ShowPlayerDialogEx(GivePlayer[playerid][0],D_INVENT+9,DIALOG_STYLE_MSGBOX, "{ebec86}>> Подтверждение",string,"Выйти","Принять");
				GivePlayer[GivePlayer[playerid][0]][0]=playerid;// Id
				GivePlayer[GivePlayer[playerid][0]][1]=GivePlayer[playerid][1];// Kol Item
				GivePlayer[GivePlayer[playerid][0]][2]=GivePlayer[playerid][2];// Prise
				GivePlayer[GivePlayer[playerid][0]][3]=id;// Item id
				GivePlayer[GivePlayer[playerid][0]][4]=s;// slot id
			}
		}
	case D_INVENT+9:
		{
			if(!response)
			{
				new playa=GivePlayer[playerid][0];
				new s=GivePlayer[playerid][4];
				new kolv=GivePlayer[playerid][1];
				new id = GivePlayer[playerid][3];
				new money=GivePlayer[playerid][2];
				if(GetMoney(playerid) < money) return SendErr(playerid, "У вас недостаточно денег"),SendClientMessage(playa,COLOR_GREY,"У игрока недостаточно денег!");
				if(CheckMaxVes(playerid,id,kolv)==1){SendClientMessage(playa,COLOR_GREY,"Сумка игрока полна!");return 1;}

				new Float:p[3];
				GetPlayerPos(playa,p[0],p[1],p[2]);
				if(!IsPlayerInRangeOfPoint(playerid,3,p[0],p[1],p[2]))return SendErr(playerid, "Игрок не рядом с вами!"),SendClientMessage(playa,COLOR_GREY,"Вы слишком далеко!");


				if(PlayerItem2[playa][s]<kolv)return SendErr(playerid, "У игрока нет столько предметов!"),SendClientMessage(playa,COLOR_GREY,"У вас нет столько предметов!");

				GiveMoney(playerid, -money, "Покупка инвентаря");
				GiveMoney(playa, money, "Продажа инвентаря");

				new slot;
				if(Item[id][iStek]==1)
				{
					new stek=0;
					for(new si = 16; si > 0; si --)
					{
						if(PlayerItem1[playerid][si]==id){stek=1;slot=si;break;}
					}
					if(stek==0)
					{
						for(new si = 16; si > 0; si --)
						{
							if(PlayerItem1[playerid][si]==0){stek=0;slot=si;break;}
						}
					}
				}
				else
				{
					for(new si = 16; si > 0; si --)
					{
						if(PlayerItem1[playerid][si]==0){slot=si;break;}
					}
				}
				PlayerItem1[playerid][slot]=id;
				PlayerItem2[playerid][slot]+=kolv;
				format(PlayerItem3[playerid][slot],32,"%s",PlayerItem3[playa][slot]);
				if(PlayerItem2[playa][s]-kolv<=0)
				{
					PlayerItem1[playa][s]=0;
					PlayerItem2[playa][s]=0;
					format(PlayerItem3[playa][s],1,"");
				}
				else
				{
					PlayerItem2[playa][s]-=kolv;
				}
				SaveItem(playerid,slot);
				SaveItem(playa,s);
				UpDateInv(playerid);
				UpDateInv(playa);

				new string[70];
				format(string, sizeof(string), "%s передает что-то в руки %s", GetName(playa),GetName(playerid));
				ProxDetector(15, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return SendClientMessage(playa,COLOR_GREY,"Вы успешно продали предмет!"),SendErr(playerid, "Вы успешно купили предмет!");
			}
			else
			{
				SendErr(playerid, "Вы отказались от сделки"),SendClientMessage(GivePlayer[playerid][0],COLOR_GREY,"Игрок отказался от сделки");
			}
		}
	case D_INVENT+10:
		{
			if(response)
			{
				PlayerUseList[playerid][MAX_LIST]=PlayerUseList[playerid][listitem];
				new playa=GetPVarInt(playerid,"IDplayaInv");
				new str[45];
				format(str,sizeof(str),"{ebec86}>> Предмет: %s",Item[PlayerItem1[playa][PlayerUseList[playerid][MAX_LIST]]][iName]);
				ShowPlayerDialogEx(playerid,D_INVENT+11,DIALOG_STYLE_LIST,str, "Конфисковать", "Выбрать", "Выйти");
			}
		}
	case D_INVENT+11:
		{
			if(response)
			{
				new playa=GetPVarInt(playerid,"IDplayaInv");
				new id = PlayerItem1[playa][PlayerUseList[playerid][MAX_LIST]];
				//if(CheckUseGun(playa,PlayerItem1[playa][PlayerUseList[playerid][MAX_LIST]])==1){return SendErr(playerid, "Вы не можете достать этот предмет пока игрок его использует!");}
				new s=PlayerUseList[playerid][MAX_LIST];
				switch(Item[id][iStek])
				{
				case 0:
					{
					    if(IsACop(playerid)) return 1;
						new newslot;
						if(CheckMaxVes(playerid,id,1,newslot)==1)return 1;
						PlayerItem1[playerid][s]=id;
						PlayerItem2[playerid][s]=1;
						format(PlayerItem3[playerid][s],32,"%s",PlayerItem3[playa][s]);
						SaveItem(playerid,s);
						UpDateInv(playerid);
						PlayerItem2[playa][s]=0;
						SaveItem(playa,s);
						UpDateInv(playa);
					}
				default:ShowPlayerDialogEx(playerid,D_INVENT+12,DIALOG_STYLE_INPUT, "{ebec86}>> Конфисковать","Введите сумму предметов,\nКоторую Вы хотите конфисковать!","Дальше","Выйти");
				}
			}
		}
	case D_INVENT+12:
		{
			if(response)
			{
				if(!strlen(inputtext))return SendErr(playerid, "Вы ничего не ввели!");
				if(strval(inputtext) < 1 || strval(inputtext) > 1000000) return SendErr(playerid, "Число может быть не больше 1000000");
				new playa=GetPVarInt(playerid,"IDplayaInv");
				new id = PlayerItem1[playa][PlayerUseList[playerid][MAX_LIST]];
				new s=PlayerUseList[playerid][MAX_LIST];
				new kolv=0;
				if(PlayerItem2[playa][s]<=strval(inputtext)){kolv=PlayerItem2[playa][s];}
				else if(PlayerItem2[playa][s]>=strval(inputtext)){kolv=strval(inputtext);}
				new newslot;
				if(CheckMaxVes(playerid,id,kolv,newslot)==1)return 1;
				PlayerItem1[playerid][s]=id;
				PlayerItem2[playerid][s]=1;
				format(PlayerItem3[playerid][s],32,"%s",PlayerItem3[playa][s]);
				SaveItem(playerid,s);
				UpDateInv(playerid);
				PlayerItem2[playa][s]-=strval(inputtext);
				SaveItem(playa,s);
				UpDateInv(playa);
			}
		}
	case D_INVENT+13:
		{
			if(response)
			{
				if(!strlen(inputtext))return SendErr(playerid, "Вы ничего не ввели!");
				if(strval(inputtext) < 1 || strval(inputtext) > 1000000) return SendErr(playerid, "Число может быть не больше 1000000");
				new id=PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
				new s=PlayerUseList[playerid][MAX_LIST];
				//new kolv=0;
				//if(PlayerItem2[playerid][s]<=strval(inputtext)){kolv=PlayerItem2[playerid][s];}
				//else if(PlayerItem2[playerid][s]>=strval(inputtext)){kolv=strval(inputtext);}
				PlayerItem2[playerid][s]-=strval(inputtext);
				SaveItem(playerid,s);
				UpDateInv(playerid);
				GiveMoney(playerid, Item[id][iLom], "Продажа в ломбард");
				new string[70];
				format(string, sizeof(string), "%s продал в ломбард '%s'", GetName(playerid),Item[id][iName]);
				ProxDetector(15, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SCMF(playerid,COLOR_GREY,"Вы успешно продали предмет за '%dр'",Item[id][iLom]);
			}
		}
	case D_INVENT+14:
		{
			if(response)
			{
				new id = PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]];
				if(CheckUseGun(playerid,PlayerItem1[playerid][PlayerUseList[playerid][MAX_LIST]])==1){return 1;}
				new s = PlayerUseList[playerid][MAX_LIST];
				switch(Item[id][iStek])
				{
				case 0:
					{
						PlayerItem2[playerid][s]=0;
						SaveItem(playerid,s);
						UpDateInv(playerid);
						GiveMoney(playerid, Item[id][iLom], "Продажа в ломбард");
						new string[70];
						format(string, sizeof(string), "%s продал в ломбард '%s'", GetName(playerid),Item[id][iName]);
						ProxDetector(15, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SCMF(playerid,COLOR_GREY,"Вы успешно продали предмет за '%dр'",Item[id][iLom]);
					}
				default:ShowPlayerDialogEx(playerid,D_INVENT+13,DIALOG_STYLE_INPUT, "{ebec86}>> Ломбард","Введите сумму предметов,\nКоторую Вы хотите продать!","Дальше","Выйти");
				}
			}
		}
	case D_JOINCARS+4:
		{
			if(!response) return 1;
			BuyCar(playerid);
		}
	case D_JOINCARS+5:
		{
			if(!response) return 1;
			BuyCloseCar(playerid);
			SendClientMessage(playerid, COLOR_RED, "Вы отменили покупку транспорта");
		}
	case D_SETSPAWN:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: pc_cmd_setspawn(playerid);
			case 1:
				{
					p_info[playerid][pSpawnChange] = 0;
				}
			case 2:
				{
					if(!GetPlayerHouse(playerid)) return SendErr(playerid, "У вас нет дома");
					p_info[playerid][pSpawnChange] = 1;
				}
			case 3:
				{
					if(p_info[playerid][pMember] == 0) return SendErr(playerid, "Вы не состоите в организации");
					p_info[playerid][pSpawnChange] = 2;
				}
			case 4:
				{
					if(GetPlayerRooms(playerid) == 0) return SendErr(playerid, "У вас нет квартиры");
					p_info[playerid][pSpawnChange] = 3;
				}
            case 5:
				{
					if(p_info[playerid][pFamily] == 0) return SendErr(playerid, "Вы не состоите в семье");
					p_info[playerid][pSpawnChange] = 4;
				}
            case 6:
				{
					if(p_info[playerid][pRentHouse] == -1) return SendErr(playerid, "Вы не арендуете дом");
					p_info[playerid][pSpawnChange] = 5;
				}
			}
			SendClientMessage(playerid, COLOR_BLUE, "Ваше место появления в игре изменено");
			MysqlUpdatePlayerInt(playerid, "spawnchange", p_info[playerid][pSpawnChange]);
		}
	case D_PROMO:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: ShowPlayerDialogEx(playerid,D_PROMO+1,DIALOG_STYLE_INPUT, "{ebec86}>> Создание промокода | {FE6060}Шаг: 1","{FFFFFF}Вам необходимо придумать промокод\nДлина промокода должна быть от 1 до 16 символов, состоящая из цифр и букв латинского алфавита\n\nВведите промокод в строчку ниже:","Далее","Назад");
			case 1: mysql_function_query(dbHandle, "SELECT * FROM `promo` WHERE activate = '0' AND block = '0'", true, "ShowDPromo", "i", playerid);
			case 2: mysql_function_query(dbHandle, "SELECT * FROM `promo` WHERE activate = '1'", true, "ShowAPromo", "i", playerid);
			case 3: mysql_function_query(dbHandle, "SELECT * FROM `promo` WHERE block = '1'", true, "ShowBPromo", "i", playerid);
			case 4: ShowPlayerDialogEx(playerid,D_PROMO+2,DIALOG_STYLE_INPUT, "{ebec86}>> {F66B6D}Блокировка промокода","{FFFFFF}Введите ниже промокод, который хотите заблокировать:","Далее","Назад");
			case 5: ShowPlayerDialogEx(playerid,D_PROMO+3,DIALOG_STYLE_INPUT, "{ebec86}>> {F66B6D}Удаление промокода","{FFFFFF}Введите ниже промокод, который хотите удалить:","Далее","Назад");
			}
		}
	case D_PROMO+2:
		{
			if(!response)
			{
				return ShowPlayerDialogEx(playerid,D_PROMO,DIALOG_STYLE_LIST, "{ebec86}>> {F2E70F}Меню промокодов","\
				1. Создать промокод \n\
				2. Действующие промокоды \n\
				3. Активированные промокоды \n\
				4. Заблокированные промокоды \n\
				{F66B6D}5. Заблокировать промокод \n\
				{F66B6D}6. Удалить промокод","Далее","Выход");
			}
			new qstring[128];
			mysql_format(dbHandle, qstring, sizeof(qstring), "SELECT * FROM `promo` WHERE `name`='%s'", inputtext);
			mysql_tquery(dbHandle, qstring, "BlockPromo", "is", playerid,inputtext);
		}
	case D_PROMO+3:
		{
			if(!response)
			{
				return ShowPlayerDialogEx(playerid,D_PROMO,DIALOG_STYLE_LIST, "{ebec86}>> {F2E70F}Меню промокодов","\
				1. Создать промокод \n\
				2. Действующие промокоды \n\
				3. Активированные промокоды \n\
				4. Заблокированные промокоды \n\
				{F66B6D}5. Заблокировать промокод \n\
				{F66B6D}6. Удалить промокод","Далее","Выход");
			}
			new qstring[128];
			mysql_format(dbHandle, qstring, sizeof(qstring), "SELECT * FROM `promo` WHERE `name`='%s'", inputtext);
			mysql_tquery(dbHandle, qstring, "DeletePromo", "is", playerid,inputtext);
		}
	case D_PROMO+1:
		{
			if(!response)
			{
				ShowPlayerDialogEx(playerid,D_PROMO,DIALOG_STYLE_LIST, "{ebec86}>> {F2E70F}Меню промокодов","\
				1. Создать промокод \n\
				2. Действующие промокоды \n\
				3. Активированные промокоды \n\
				4. Заблокированные промокоды \n\
				{F66B6D}5. Заблокировать промокод \n\
				{F66B6D}6. Удалить промокод","Далее","Выход");
				return 1;
			}
			if(strlen(inputtext) < 1 || strlen(inputtext) > 16) return ShowPlayerDialogEx(playerid,D_PROMO+1,DIALOG_STYLE_INPUT, "{ebec86}>> Создание промокода | {FE6060}Шаг: 1","{FFFFFF}Вам необходимо придумать промокод\nДлина промокода должна быть от 1 до 16 символов, состоящая из цифр и букв латинского алфавита\n\nВведите промокод в строчку ниже:","Далее","Назад");
			SetPVarString(playerid,"PROMO",inputtext);

			STRING_GLOBAL[0] = EOS;
			strcat(STRING_GLOBAL,"{FFFFFF}Теперь необходимо ввести тип приза, количество выигрыша, количество активаций\n\n{4AA9CF}Типы:\n");
			strcat(STRING_GLOBAL,"{FFFFFF}1. VIP аккаунт\n");
			strcat(STRING_GLOBAL,"2. Игровая валюта\n");
			strcat(STRING_GLOBAL,"3. Кредиты\n\n");
			strcat(STRING_GLOBAL,"Если указан тип '1', то в качестве количества приза - указываете дни, в течении которых будет действовать VIP аккаунт\n");
			strcat(STRING_GLOBAL,"Если указаны типы '2' и '3', то соответственно указываете количество игровой валюты, и кредитов для выигрыша.\n\n");
			strcat(STRING_GLOBAL,"{F6F7D8}Указывать все значения нужно через запятую!\n");
			strcat(STRING_GLOBAL,"Пример: 1,30,10\n");
			strcat(STRING_GLOBAL,"Где 1 - тип(VIP), 30 - кол-во дней, 10 - число активаций");
			ShowPlayerDialogEx(playerid,D_PROMO+4,DIALOG_STYLE_INPUT, "{ebec86}>> Создание промокода | {FE6060}Шаг: 2", STRING_GLOBAL,"Далее","Назад");
		}
	case D_PROMO+4:
		{
			if(!response)
			{
				STRING_GLOBAL[0] = EOS;
				strcat(STRING_GLOBAL,"{FFFFFF}Теперь необходимо ввести тип приза, количество выигрыша, количество активаций\n\n{4AA9CF}Типы:\n");
				strcat(STRING_GLOBAL,"{FFFFFF}1. VIP аккаунт\n");
				strcat(STRING_GLOBAL,"2. Игровая валюта\n");
				strcat(STRING_GLOBAL,"3. Кредиты\n\n");
				strcat(STRING_GLOBAL,"Если указан тип '1', то в качестве количества приза - указываете дни, в течении которых будет действовать VIP аккаунт\n");
				strcat(STRING_GLOBAL,"Если указаны типы '2' и '3', то соответственно указываете количество игровой валюты, и кредитов для выигрыша.\n\n");
				strcat(STRING_GLOBAL,"{F6F7D8}Указывать все значения нужно через запятую!\n");
				strcat(STRING_GLOBAL,"Пример: 1,30,10\n");
				strcat(STRING_GLOBAL,"Где 1 - тип приза(VIP), 30 - количество дней, 10 - число доступных активаций промокода");
				ShowPlayerDialogEx(playerid,D_PROMO+4,DIALOG_STYLE_INPUT, "{ebec86}>> Создание промокода | {FE6060}Шаг: 2", STRING_GLOBAL,"Далее","Назад");
				return 1;
			}
			new numb[3];
			if(sscanf(inputtext, "p<,>iii",numb[0],numb[1],numb[2]))
			{
				STRING_GLOBAL[0] = EOS;
				strcat(STRING_GLOBAL,"{FFFFFF}Теперь необходимо ввести тип приза, количество выигрыша, количество активаций\n\n{4AA9CF}Типы:\n");
				strcat(STRING_GLOBAL,"{FFFFFF}1. VIP аккаунт\n");
				strcat(STRING_GLOBAL,"2. Игровая валюта\n");
				strcat(STRING_GLOBAL,"3. Кредиты\n\n");
				strcat(STRING_GLOBAL,"Если указан тип '1', то в качестве количества приза - указываете дни, в течении которых будет действовать VIP аккаунт\n");
				strcat(STRING_GLOBAL,"Если указаны типы '2' и '3', то соответственно указываете количество игровой валюты, и кредитов для выигрыша.\n\n");
				strcat(STRING_GLOBAL,"{F6F7D8}Указывать все значения нужно через запятую!\n");
				strcat(STRING_GLOBAL,"Пример: 1,30,10\n");
				strcat(STRING_GLOBAL,"Где 1 - тип приза(VIP), 30 - количество дней, 10 - число доступных активаций промокода");
				ShowPlayerDialogEx(playerid,D_PROMO+4,DIALOG_STYLE_INPUT, "{ebec86}>> Создание промокода | {FE6060}Шаг: 2",STRING_GLOBAL,"Далее","Назад");
				return 1;
			}
			SetPVarInt(playerid,"TYPEPROMO",numb[0]),SetPVarInt(playerid,"AMOUNTPROMO",numb[1]),SetPVarInt(playerid,"ACTIVATEPROMO",numb[2]);
			new promoname[16];
			GetPVarString(playerid, "PROMO", promoname, sizeof(promoname));

			STRING_GLOBAL[0] = EOS;
			mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM `promo` WHERE `name`='%s'", promoname);
			mysql_tquery(dbHandle, STRING_GLOBAL, "CreatePromo", "is", playerid,promoname);
		}
	case D_CTO:
		{
			if(response)
			{
				if(GetPlayerState(playerid) != 2) return SendErr(playerid, "Вы должны находится за рулем своего авто!");
				SetPVarInt(playerid, "UsedCTO", 1);
				new pveh = p_info[playerid][pOwnableCar];
				TogglePlayerControllable(playerid, false);
				SetVehiclePos(pveh, 708.7665, -210.8824, 3006.7998);
				AC_SetVehicleZAngle(pveh, 0.0);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, playerid);
				SetVehicleVirtualWorld(pveh, playerid);
				LinkVehicleToInterior(pveh, 3);
				PutPlayerInVehicle(playerid, pveh, 0);
				SetPlayerCameraPos(playerid, 706.6107, -205.9091, 3007.7930);
				SetPlayerCameraLookAt(playerid, 706.9498, -206.8483, 3007.6619);
				
				SendInf(playerid, "Если хотите выйти из СТО, то нажмите 'ВЫЙТИ'");
				SendInf(playerid, "Если у вас пропал диалог, то используйте '/tupdate'");
				ShowDetals(playerid);
				speedometr_status(playerid, false);
			}
		}
	case D_CTO+2:
		{
		    if(response)
		    {
		        ShowPlayerDialogEx(playerid, D_CTO+4, 1, "{ebec86}>> Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую\n\n{AFAFAF}* Пример: 1,2 (Все цвета можно найти в интернете)", "Перекрасить", "Назад");
		    }
      		else
		    {
		        SetPVarInt(playerid, "CTOColors", 1);
				for(new i = 3; i < 6; i++) TextDrawShowForPlayer(playerid, AutoSalon_Fon[i]);
				for(new i = 0; i < 2; i++) TextDrawShowForPlayer(playerid, AutoSalon_ButtonColor[i]);
				for(new i = 0; i < 48; i++) TextDrawShowForPlayer(playerid, AutoSalon_Color[i]);
				SelectTextDraw(playerid,0xddddddff);
		    }
		}
	case D_CTO+4: // CTO цвета 1
		{
			if(!response) return ShowDetals(playerid);
			new color[2];
			if(GetPlayerVehicleID(playerid) == p_info[playerid][pOwnableCar])
			{
				if(sscanf(inputtext, "p<,>ii",color[0], color[1])) return ShowPlayerDialogEx(playerid, D_CTO+4, 1, "{ebec86}>> Перекраска", "Введите основной и дополнительный цвет транспорта через запятую\n\n{AFAFAF}* Пример: 1,2 (Все цвета можно найти в интернете)", "Принять", "Назад");
				if(color[0] < 0 || color[0] > 255)
				{
					ShowPlayerDialogEx(playerid, D_CTO+4, 1, "{ebec86}>> Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую\n\n{AFAFAF}* Пример: 1,2 (Все цвета можно найти в интернете)", "Принять", "Назад");
					return SendErr(playerid, "ID цвета от 0 до 255!");
				}
				if(color[1] < 0 || color[1] > 255)
				{
					ShowPlayerDialogEx(playerid, D_CTO+4, 1, "{ebec86}>> Перекраска", "{FFFFFF}Введите основной и дополнительный цвет транспорта через запятую\n\n{AFAFAF}* Пример: 1,2 (Все цвета можно найти в интернете)", "Принять", "Назад");
					return SendErr(playerid, "ID цвета от 0 до 255!");
				}
				new i = GetPVarInt(playerid,"CTObizzid");
				new till = BizzInfo[i][bTill];
				if(GetMoney(playerid) < till*500) return SendErr(playerid, "Недостаточно средств");
				GiveMoney(playerid, -till*500, "Перекраска авто");
				if(BizzInfo[i][bProduct] > 0)
				{
					BizzInfo[i][bMoneyHour] += till*500;
					BizzInfo[i][bProduct] -= 500;
					BizzPay[i] += till*500;
					MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
					MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
				}
				ownable_car[playerid][v_color_1] = color[0];
				ownable_car[playerid][v_color_2] = color[1];
				ChangeVehicleColor(GetPlayerVehicleID(playerid), color[0], color[1]);
				SendInf(playerid, "Вы успешно перекрасили свое авто");

				new fmt_query[130];

				format(fmt_query, sizeof fmt_query, "UPDATE ownable_cars SET color_1=%d, color_2=%d WHERE id=%d", ownable_car[playerid][v_color_1], ownable_car[playerid][v_color_2], ownable_car[playerid][v_sql]);
				mysql_query(dbHandle, fmt_query);

				ShowDetals(playerid);
			}
		}
	case D_CTO+5:
	    {
	        if(!response)
			{
			    for(new i = 0; i < 48; i++) TextDrawHideForPlayer(playerid, AutoSalon_Color[i]);
	    		for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid, AutoSalon_ButtonColor[i]);
	    		for(new i = 3; i < 6; i++) TextDrawHideForPlayer(playerid, AutoSalon_Fon[i]);
				CancelSelectTextDraw(playerid);
				DeletePVar(playerid, "CTOColors");
			
			    ChangeVehicleColor(GetPlayerVehicleID(playerid), ownable_car[playerid][v_color_1], ownable_car[playerid][v_color_2]);
				ShowDetals(playerid);
				return 1;
			}
	        
	        for(new i = 0; i < 48; i++) TextDrawHideForPlayer(playerid, AutoSalon_Color[i]);
    		for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid, AutoSalon_ButtonColor[i]);
    		for(new i = 3; i < 6; i++) TextDrawHideForPlayer(playerid, AutoSalon_Fon[i]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid, "CTOColors");

			new i = GetPVarInt(playerid,"CTObizzid");
			new till = BizzInfo[i][bTill];
			if(GetMoney(playerid) < till*500)
			{
				SendErr(playerid, "Недостаточно средств");
				ShowDetals(playerid);
				return 1;
			}
			GiveMoney(playerid, -till*500, "Перекраска авто");
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoneyHour] += till*500;
				BizzInfo[i][bProduct] -= 500;
				BizzPay[i] += till*500;
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}

			ownable_car[playerid][v_color_1] = colors[playerid][0];
			ownable_car[playerid][v_color_2] = colors[playerid][1];
			ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][0], colors[playerid][1]);
			SendInf(playerid, "Вы успешно перекрасили свое авто");

			new fmt_query[130];

			format(fmt_query, sizeof fmt_query, "UPDATE ownable_cars SET color_1 = %d, color_2 = %d WHERE id = %d", ownable_car[playerid][v_color_1], ownable_car[playerid][v_color_2], ownable_car[playerid][v_sql]);
			mysql_query(dbHandle, fmt_query);

			ShowDetals(playerid);
	    }
	case D_GPS:
		{
			if(!response) return 1;
			new locname[40], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			case 0: ShowPlayerDialogEx(playerid, 11001, DIALOG_STYLE_LIST, "{ebec86}>> Важные места",
				"- Мэрия г.Арзамас\n\
					- Автошкола\n\
					- Автовокзал №1\n\
					- Получение номеров\n\
					- Спортзал\n\
					- Военкомат\n\
					- ЗАГС\n\
					- Новостройкино\n\
					- Покупка вертолета\n\
					- Рублёвка Арзамаса\n\
					- Рублёвка за Арзамасом\n\
					- Рублёвка Простоквасино\n\
					- Штрафстоянка", "Поиск", "Назад");
			case 1:	ShowPlayerDialogEx(playerid, 11014, DIALOG_STYLE_LIST, "{ebec86}>> Работы для Новичков",
					"- Завод по производству продуктов\n\
					- Городской склад {CC9900}(работа грузчика)\n\
					- Шахта {CC9900}(работа шахтера)\n\
					- Лесопилка {CC9900}(работа лесоруба)\n\
					- Чистильщики {CC9900}(уборщик улиц)", "Поиск", "Назад");
			case 2:	ShowPlayerDialogEx(playerid, 11002, DIALOG_STYLE_LIST, "{ebec86}>> По работе",
					"- Нефтедобывающий завод\n\
					- Нефтеперерабатывающий завод \n\
					- Автопарк для дальнобойщиков (продукты)\n\
					- Автопарк для дальнобойщиков (топливо)\n\
					- Стоянка автомехаников", "Поиск", "Назад");
			case 3: ShowPlayerDialogEx(playerid, 11003, DIALOG_STYLE_LIST, "{ebec86}>> Государственные организации",
				"- Правительство г. Арзамас\n\
					- Горсовет г.Южный\n\
					- Полиция г. Арзамас (ДПС)\n\
					- Центральная Больница\n\
					- Армия\n\
					- RECORD FM\n\
					- АвтоШкола пгт. Батырево\n\
					- Федеральная Служба Безопасности\n\
					- Полиция г. Южный (УВД)\n\
					- Спецназ", "Поиск", "Назад");
			case 4: ShowPlayerDialogEx(playerid, 11004, DIALOG_STYLE_LIST, "{ebec86}>> Нелегальные организации",
				"- Лыткаринская ОПГ\n\
					- Батыревская ОПГ\n\
					- Южная ОПГ\n\
					- Арзамасская ОПГ\n\
					- Банда Бомжей\n\
					- Русская Мафия", "Поиск", "Назад");
			case 5:	ShowPlayerDialogEx(playerid, 11005, DIALOG_STYLE_LIST, "{ebec86}>> Стоянки",
				"- Стоянка такси Ж/Д вокзал\n\
				    - Стоянка такси Автошкола\n\
				    - Стоянка такси Больница\n\
				    - Стоянка такси Эдово\n\
				    - Стоянка такси Лыткарино\n\
				    - Стоянка такси Южный\n\
					- Стоянка маршруток", "Поиск", "Назад");
			case 6: ShowPlayerDialogEx(playerid, 11007, DIALOG_STYLE_LIST, "{ebec86}>> Банки",
				"- Банк г.Арзамас\n\
					- Банк г.Южный\n\
					- Банк г.Батырево", "Поиск", "Назад");
			case 7: ShowPlayerDialogEx(playerid, 11009, DIALOG_STYLE_LIST, "{ebec86}>> Бизнесы","1. Магазины 24/7\n2. Закусочные\n3. Клубы\n4. Бары\n5. Аммуниции\n6. Магазины одежды\n7. Казино\n8. Автомастерские\n9. Спортивные залы", "Поиск", "Назад");
			case 8: ShowPlayerDialogEx(playerid, 11012, DIALOG_STYLE_LIST, "{ebec86}>> Мероприятия(Евенты)",
				"- Counter-Strike\n\
					- Прыжки с парошюта\n\
					- Трэк", "Поиск", "Назад");
			case 9: ShowPlayerDialogEx(playerid, 11006, DIALOG_STYLE_LIST, "{ebec86}>> Автосалоны",
				"- Авто/Мото/Вело салон", "Поиск", "Назад");
			case 10: ShowPlayerDialogEx(playerid, 11013, DIALOG_STYLE_LIST, "{ebec86}>> Аренда транспорта",
				"- Аренда машин(Автобаза)\n\
				    - Аренда машин(Рублёка Арзамас)\n\
					- Аренда лодок", "Поиск", "Назад");
			case 11:
				{
					new max_distance = 100000;
					new id_biz = -1;

					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 1) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
						if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizzInfo[id_biz][bEntrx], Y = BizzInfo[id_biz][bEntry], Z = BizzInfo[id_biz][bEntrz], locname = "Ближайший магазин 24/7";
					GPSPlayer_(playerid, X, Y, Z, locname);
				}
			case 12:
				{
					new max_distance = 100000;
					new id_biz = -1;

					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 2) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
						if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizzInfo[id_biz][bEntrx], Y = BizzInfo[id_biz][bEntry], Z = BizzInfo[id_biz][bEntrz], locname = "Ближайшая АЗС";
					GPSPlayer_(playerid, X, Y, Z, locname);
				}
			case 13:
				{
					new max_distance = 100000;
					new id_atm = -1;

					for(new i = 0; i <= TOTALATM; i++)
					{
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), ATMInfo[i][aX], ATMInfo[i][aY], ATMInfo[i][aZ]));
						if(here_distance < max_distance)
						{
							id_atm = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_atm == -1) return 1;
					X = ATMInfo[id_atm][aX], Y = ATMInfo[id_atm][aY], Z = ATMInfo[id_atm][aZ], locname = "Ближайший банкомат";
					GPSPlayer_(playerid, X, Y, Z, locname);
				}
			case 14:
				{
					new max_distance = 100000;
					new id_biz = -1;

					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 7) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
						if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizzInfo[id_biz][bEntrx], Y = BizzInfo[id_biz][bEntry], Z = BizzInfo[id_biz][bEntrz], locname = "Ближайшая СТО";
					GPSPlayer_(playerid, X, Y, Z, locname);
				}
			case 15:
				{
					new max_distance = 100000;
					new id_biz = -1;

					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 4) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
						if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizzInfo[id_biz][bEntrx], Y = BizzInfo[id_biz][bEntry], Z = BizzInfo[id_biz][bEntrz], locname = "Ближайший клуб";
					GPSPlayer_(playerid, X, Y, Z, locname);
				}
			case 16:
				{
					new max_distance = 100000;
					new id_biz = -1;

					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 9) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
						if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizzInfo[id_biz][bEntrx], Y = BizzInfo[id_biz][bEntry], Z = BizzInfo[id_biz][bEntrz], locname = "Ближайшее казино";
					GPSPlayer_(playerid, X, Y, Z, locname);
				}
			case 17:
				{
					new max_distance = 100000;
					new id_biz = -1;

					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 8) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
						if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizzInfo[id_biz][bEntrx], Y = BizzInfo[id_biz][bEntry], Z = BizzInfo[id_biz][bEntrz], locname = "Ближайший магазин одежды";
					GPSPlayer_(playerid, X, Y, Z, locname);
				}
			case 18:
				{
					new max_distance = 100000;
					new id_biz = -1;

					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 6) continue;
						new here_distance = (!IsPlayerInAnyVehicle(playerid)) ? floatround(GetPlayerDistanceFromPoint(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz])) : floatround(GetVehicleDistanceFromPoint(GetPlayerVehicleID(playerid), BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]));
						if(here_distance < max_distance)
						{
							id_biz = i;
							max_distance = here_distance;
						}
					}
					if(max_distance == -1 || id_biz == -1) return 1;
					X = BizzInfo[id_biz][bEntrx], Y = BizzInfo[id_biz][bEntry], Z = BizzInfo[id_biz][bEntrz], locname = "Ближайший оружейный магазин";
					GPSPlayer_(playerid, X, Y, Z, locname);
				}
			case 19: callcmd::hgps(playerid);
			}
			return 1;
		}
	case 11003:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			case 0: X = -317.6928, Y = 725.8645, Z = 12.0010, locname = "Мэрия г. Арзамас";
			case 1: X = 2412.7732, Y = -1841.9850, Z = 22.9476, locname = "Мэрия г.Южный";
			case 2: X = 206.5966, Y = 1473.0104, Z = 12.0304, locname = "Полиция г. Арзамас";
			case 3: X = -286.7289, Y = 586.8283, Z = 12.1589, locname = "Центральная Больница";
			case 4: X = 1314.7473, Y = -294.8979, Z = 3.9023, locname = "Армия";
			case 5: X = -2067.4021, Y = -199.3281, Z = 26.0026, locname = "RECORD FM";
			case 6: X = 1912.0990, Y = 2227.6367, Z = 16.0831, locname = "Автошкола";
			case 7: X = -400.2029, Y = 927.2481, Z = 12.1524, locname = "ФСБ";
			case 8: X = 2584.6646, Y = -2407.6736, Z = 21.9973, locname = "Полиция г. Южный";
			case 9: X = -125.9631, Y = -358.6588, Z = 4.2100, locname = "Спецназ";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11004:
		{
			if(!response) return callcmd::gps(playerid,inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			case 0: X = frac_place_put [ 15 ] [ 0 ], Y = frac_place_put [ 15 ] [ 1 ], Z = frac_place_put [ 15 ] [ 2 ], locname = "Лыткаринская ОПГ";
			case 1: X = frac_place_put [ 16 ] [ 0 ], Y = frac_place_put [ 16 ] [ 1 ], Z = frac_place_put [ 16 ] [ 2 ], locname = "Батыревская ОПГ";
			case 2: X = frac_place_put [ 7 ] [ 0 ], Y = frac_place_put [ 7 ] [ 1 ], Z = frac_place_put [ 7 ] [ 2 ], locname = "Южная ОПГ";
			case 3: X = frac_place_put [ 8 ] [ 0 ], Y = frac_place_put [ 8 ] [ 1 ], Z = frac_place_put [ 8 ] [ 2 ], locname = "Арзамасская ОПГ";
			case 4: X = frac_place_put [ 9 ] [ 0 ], Y = frac_place_put [ 9 ] [ 1 ], Z = frac_place_put [ 9 ] [ 2 ], locname = "Банда Бомжей";
			case 5: X = frac_place_put [ 10 ] [ 0 ], Y = frac_place_put [ 10 ] [ 1 ], Z = frac_place_put [ 10 ] [ 2 ], locname = "Русская Мафия";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11005:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			case 0: X = 505.0952, Y = 1757.6876, Z = 11.8931, locname = "Стоянка такси Ж/Д вокзал";
			case 1: X = 1872.5802, Y = 2260.5298, Z = 15.1562, locname = "Стоянка такси Автошкола";
			case 2: X = -245.0356, Y = 453.3494, Z = 12.7324, locname = "Стоянка такси Больница";
			case 3: X = -2490.6890, Y = 2846.5657, Z = 37.5173, locname = "Стоянка такси Эдово";
			case 4: X = -2399.8335, Y = 197.4634, Z = 21.0467, locname = "Стоянка такси Лыткарино";
			case 5: X = 2694.0095, Y = -2451.0759, Z = 21.9260, locname = "Стоянка такси Южка";
			case 6: X = 757.3745, Y = 719.7014, Z = 12.1885, locname = "Стоянка маршруток";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11001:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[32], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
			case 0: X = -317.6928, Y = 725.8645, Z = 12.0010, locname = "Мэрия г.Арзамас";
			case 1: X = 1912.0990, Y = 2227.6367, Z = 16.0831, locname = "Автошкола";
			case 2: X = 153.9774, Y = 803.7303, Z = 12.1494, locname = "Автовокзал №1";
			case 3: X = 206.5966, Y = 1473.0104, Z = 12.0304, locname = "Получение номеров";
			case 4: X = -231.4539, Y = 945.5009, Z = 12.0844, locname = "Спортзал";
			case 5: X = 1914.2288, Y = 2301.3870, Z = 15.5697, locname = "Военкомат";
			case 6: X = 1916.8846, Y = 2183.6685, Z = 15.7060, locname = "ЗАГС";
			case 7: X = -394.0672, Y = 860.6909, Z = 12.1600, locname = "Новостройкино";
			case 8: X = -42.9562, Y = 921.5800, Z = 12.0000, locname = "Покупка вертолета";
			case 9: X = -329.4723, Y = 1285.0946, Z = 17.6057, locname = "Рублёвка Арзамаса";
			case 10: X = 861.1058, Y = -107.1494, Z = 12.5501, locname = "Рублёвка за Арзамасом";
			case 11: X = -807.7808, Y = 1949.7864, Z = 45.8526, locname = "Рублёвка Простоквасино";
			case 12: X = 1778.3872, Y = 2254.2832, Z = 15.3664, locname = "Штрафстоянка";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11006:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[32], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				//case 0: X = -43.6693, Y = 921.8057, Z = 12.0000, locname = "Эконом класс";
			case 0: X = 2475.7024, Y = -729.8782, Z = 12.3000, locname = "Авто/Мото/Вело салон";
				//case 2: X = 2420.0894, Y = -2291.5247, Z = 21.9740, locname = "Мото/Вело салон";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11009:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "PlayerBizz", 0);
			GetPlayerBizz(playerid);
			new b = GetPVarInt(playerid, "PlayerBizz");
			new text[32];

	        switch(listitem)
	        {
	            case 0:
				{
				    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 1) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 1);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Магазины 24/7", STRING_GLOBAL, "Выбрать", "Назад");
				}
				case 1:
				{
                    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 3) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 2);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Закусочные", STRING_GLOBAL, "Выбрать", "Назад");
				}
				case 2:
				{
                    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 4) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 3);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Клубы", STRING_GLOBAL, "Выбрать", "Назад");
				}
				case 3:
				{
                    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 5) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 4);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Бары", STRING_GLOBAL, "Выбрать", "Назад");
				}
				case 4:
				{
                    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 6) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 5);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Аммуниции", STRING_GLOBAL, "Выбрать", "Назад");
				}
				case 5:
				{
                    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 8) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 6);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Магазины одежды", STRING_GLOBAL, "Выбрать", "Назад");
				}
				case 6:
				{
                    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 9) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 9);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Казино", STRING_GLOBAL, "Выбрать", "Назад");
				}
				case 7:
				{
                    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 7) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 10);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Автомастерские", STRING_GLOBAL, "Выбрать", "Назад");
				}
				case 8:
				{
                    STRING_GLOBAL = "";
					new count_ammo = 1;
					for(new i = TOTALBIZZ; i > 0; i --)
					{
						if(BizzInfo[i][bType] != 10) continue;
      					if(b == i)
						{
						    text = "{ebec86}- Ваш бизнес{FFFFFF}";
						}
						else
						{
						    text = "";
						}
						format(STRING_GLOBAL,(count_ammo*80),"%s%d. %s %s\n",STRING_GLOBAL,count_ammo,BizzInfo[i][bName], text);
						count_ammo++;
					}
					SetPVarInt(playerid, "Business", 11);
					ShowPlayerDialogEx(playerid, 9701, DIALOG_STYLE_LIST, "{ebec86}>> GPS - Спортивные залы", STRING_GLOBAL, "Выбрать", "Назад");
				}
	        }
		}
	case 9701:
	    {
	        if(!response) return pc_cmd_gps(playerid, "");
			new count_ammo = 1;
			for(new i = TOTALBIZZ; i > 0; i --)
			{
			    if(GetPVarInt(playerid, "Business") == 1)
				{
					if(BizzInfo[i][bType] != 1) continue;
				}
				if(GetPVarInt(playerid, "Business") == 2)
				{
					if(BizzInfo[i][bType] != 3) continue;
				}
				if(GetPVarInt(playerid, "Business") == 3)
				{
					if(BizzInfo[i][bType] != 4) continue;
				}
				if(GetPVarInt(playerid, "Business") == 4)
				{
					if(BizzInfo[i][bType] != 5) continue;
				}
				if(GetPVarInt(playerid, "Business") == 5)
				{
					if(BizzInfo[i][bType] != 6) continue;
				}
				if(GetPVarInt(playerid, "Business") == 6)
				{
					if(BizzInfo[i][bType] != 8) continue;
				}
				if(GetPVarInt(playerid, "Business") == 9)
				{
					if(BizzInfo[i][bType] != 9) continue;
				}
				if(GetPVarInt(playerid, "Business") == 10)
				{
					if(BizzInfo[i][bType] != 7) continue;
				}
				if(GetPVarInt(playerid, "Business") == 11)
				{
					if(BizzInfo[i][bType] != 10) continue;
				}
				if((count_ammo-1) == listitem)
				{
					GPSPlayer_(playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz], "Бизнес");
					DeletePVar(playerid, "Business");
					break;
				}
				count_ammo++;
			}
			return 1;
	    }
	case 11012:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = 2266.8013, Y = 1411.5314, Z = 11.4501, locname = "Counter-Strike";
				case 1: X = 2126.6462, Y = -1959.4130, Z = 20.2095, locname = "Прыжки с парошюта";
				case 2: X = -1509.7196, Y = 1608.1033, Z = 36.7735, locname = "Трэк";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11013:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = 1762.3790, Y = 2277.5322, Z = 15.9718, locname = "Автобаза №6";
				case 1: X = 451.9625, Y = 2083.5833, Z = 11.2063, locname = "Аренда машин(Рублёка Арзамас)";
				case 2: X = 2831.0281, Y = -1539.3876, Z = 2.1600, locname = "Аренда лодок";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11007:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = -139.5860, Y = 593.7264, Z = 12.1494, locname = "Банк г.Арзамас";
				case 1: X = 2376.4365, Y = -2141.9885, Z = 21.9589, locname = "Банк г.Южный";
				case 2: X = 1853.3405, Y = 2037.6676, Z = 16.9742, locname = "Банк г.Батырево";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11014:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = -1060.9310, Y = 2208.5684, Z = 38.0988, locname = "Завод";
				case 1: X = 514.9210, Y = 1641.4650, Z = 12.5089, locname = "Городской склад";
				case 2: X = 2296.8718, Y = 1757.0005, Z = 1.0234, locname = "Шахта";
				case 3: X = 2396.0789, Y = -592.4421, Z = 12.1172, locname = "Лесопилка";
				case 4: X = 1994.4435, Y = -1921.6176, Z = 31.9904, locname = "Чистильщики улиц";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 11002:
		{
			if(!response) return callcmd::gps(playerid, inputtext);
			new locname[30], Float:X, Float:Y, Float:Z;
			switch(listitem)
			{
				case 0: X = 357.0453, Y = -450.2787, Z = 3.8894, locname = "Нефтедобывающий завод";
				case 1: X = 974.5341, Y = 635.4688, Z = 11.6643, locname = "Нефтеперерабатывающий завод";
				case 2: X = -203.8864, Y = 237.5492, Z = 12.0956, locname = "Автопарк для дальнобойщиков";
				case 3: X = 357.0453, Y = -450.2787, Z = 3.8894, locname = "Автопаркдля дальнобойщиков";
				case 4: X = 1178.4241, Y = 2505.9893, Z = 12.4769, locname = "Стоянка автомехаников";
			}
			GPSPlayer_(playerid, X, Y, Z, locname);
			return 1;
		}
	case 6446:
		{
			if(!response) return 1;
			if(GetMoney(playerid) < 5000) return SendErr(playerid, "Недостаточно средств");
			GiveMoney(playerid, -5000, "Спортзал");

			new i = GetPVarInt(playerid, "PlayerBizz");
			BizzInfo[i][bMoneyHour] += 5000;
			BizzPay[i] += 5000;
			BizzInfo[i][bProduct] -= 100;
			MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
			MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);

			SetPVarInt(playerid, "StartTraining", 1);
			Oldskin2[playerid] = GetPlayerSkin(playerid);
			SetPlayerSkin(playerid, 80);
			SCM(playerid, 0x6ab1ffaa, "Что бы использовать тренажёры: {FFFFFF}Нажимайте: ЛКМ или ПРОБЕЛ. (По умолчанию)");
		}
    case 6447:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz");
			if(GetMoney(playerid) < 1000) return SendErr(playerid, "Недостаточно средств");
			GiveMoney(playerid, -1000, "Стили боя");
			
			BizzInfo[i][bMoneyHour] += 1000;
			BizzPay[i] += 1000;
			BizzInfo[i][bProduct] -= 100;
			MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
			MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			
			SetPVarInt(playerid, "StartTraining", 1);
			Oldskin2[playerid] = GetPlayerSkin(playerid);
			switch(listitem)
			{
			    case 0: SetPVarInt(playerid, "ChooseStyle", 1), SetPlayerPos(playerid, -332.8407,425.5874,2513.6201), SetPlayerVirtualWorld(playerid, i);
			    case 1: SetPVarInt(playerid, "ChooseStyle", 2), SetPlayerPos(playerid, -332.8407,425.5874,2513.6201), SetPlayerVirtualWorld(playerid, i);
			}
		}
	case D_PROMO+5:
		{
			if(!response) return 1;
			/*new qstring[128];
			mysql_format(dbHandle, qstring, sizeof(qstring), "SELECT * FROM `promo` WHERE `name`='%s'", inputtext);
				mysql_tquery(dbHandle, qstring, "ActivatePromo", "is", playerid,inputtext);*/
			SetPVarString(playerid, "CODE", inputtext);
			//mysql_format(dbHandle, qstring, sizeof(qstring), "SELECT * FROM `promo_activations` WHERE `account_id` = '%d' AND `name_promo`='%s'", p_info[playerid][pID], inputtext);

			STRING_GLOBAL[0] = EOS;
			mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM `promo_activations` WHERE `account_id` = '%d' AND `name_promo`='%s'",p_info[playerid][pID], inputtext);
			mysql_tquery(dbHandle, STRING_GLOBAL, "CheckPromo", "i", playerid);
		}
	case D_DONATE:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
					{FFFFFF}Состояние счёта:\t\t%i кредитов\n\
					{FFFF00}Пополнить счёт можно на {FFFFFF}"PAGE_WEBSITE_DONATE"",
					p_info[playerid][pCredits]);
					ShowPlayerDialogEx(playerid, D_DONATE+1, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация", STRING_GLOBAL, "Принять", "Назад");
				}
			case 1:
				{
					new name[MAX_PLAYER_NAME];
					GetPlayerName(playerid, name, sizeof(name));
					/*if(GetBalanceCSRInt(name) > 0)
					{
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "На ваш счет поступило %d кредитов!", GetBalanceCSRInt(name));
						SendClientMessage(playerid, COLOR_YELLOW, STRING_GLOBAL);
						p_info[playerid][pCredits]+=GetBalanceCSRInt(name);
						MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
						SetBalanceCSRInt(name,0);
					}
					else */
					SendClientMessage(playerid, COLOR_YELLOW, "Нет доступных пополнений!");
				}
			case 2:
				{
					if(doubling_donate)
					ShowPlayerDialogEx(playerid, D_DONATE+2, DIALOG_STYLE_INPUT, "{ebec86}>> Получение игровой валюты", "{FFFFFF}Введите количество кредитов, которые хотите перевести в игровые деньги\nКурс обмена: 1 кредит - 3000р {f0e86b}(с учётом акции)", "Далее", "Назад");
					else
					ShowPlayerDialogEx(playerid, D_DONATE+2, DIALOG_STYLE_INPUT, "{ebec86}>> Получение игровой валюты", "{FFFFFF}Введите количество кредитов, которые хотите перевести в игровые деньги\nКурс обмена: 1 кредит - 1500р", "Далее", "Назад");
				}
			case 3:
				{
					if(p_info[playerid][pWarn] == 0) return SendErr(playerid, "Вы не имеете предупреждений!");
					if(p_info[playerid][pCredits] < 150) return SendErr(playerid, "Недостаточно кредитов!");
					p_info[playerid][pCredits] -= 150;
					p_info[playerid][pWarn]--;
					if(p_info[playerid][pWarn] > 0)
					{
					    p_info[playerid][pWarnTime] = 10;
						MysqlUpdatePlayerInt(playerid, "warntime", p_info[playerid][pWarnTime]);
					}
					else
					{
					    p_info[playerid][pWarnTime] = 0;
						MysqlUpdatePlayerInt(playerid, "warntime", p_info[playerid][pWarnTime]);
					}
					MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
					SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно сняли {ffffff}одно {ffff00}предупреждение!");
					MysqlUpdatePlayerInt(playerid, "warn", p_info[playerid][pWarn]);
					
					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 15);
				}
			case 4:
				{
					if(p_info[playerid][pCredits] < 150) return SendErr(playerid, "Недостаточно кредитов!");
					ShowPlayerDialogEx(playerid, D_JOB+179, 1, "{ebec86}>> Смена Nick_Name", "{FFFFFF}Введите будущий игровой Nick_Name:", "Принять", "Назад");
				}
			case 5:
				{
					ShowPlayerDialogEx(playerid, D_DONATE+4, DIALOG_STYLE_LIST, "{ebec86}>> Покупка игровых привелегий", "\
					1. Приобрести все навыки оружием\t(400 кредитов)\n\
					2. Приобрести все лицензии\t\t(400 кредитов)\n\
					3. VIP статус\t\t\t\t(250 кредитов)\n\
					4. Увеличение инвентаря +1кг\t\t(150 кредитов)", "Выбрать", "Назад");
				}
			case 6:
				{
					if(p_info[playerid][pCredits] < 150) return SendErr(playerid, "Недостаточно кредитов!");

					if(p_info[playerid][pVoennik] == 0)
					{
						p_info[playerid][pVoennik] = 1;

						p_info[playerid][pCredits] -= 150;

						MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
						MysqlUpdatePlayerInt(playerid, "Voennik", p_info[playerid][pVoennik]);
						
						new query[128];
						format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
						mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 15);

						return SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно купили военный билет!");
					}
					else SendErr(playerid, "У Вас уже есть военный билет.");
				}
			case 7:
				{
					if(p_info[playerid][pDonateCar] == 1) return SendErr(playerid, "У Вас уже куплен #3 слот для транспорта!");

					if(p_info[playerid][pCredits] < 500) return SendErr(playerid, "Недостаточно кредитов!");

					p_info[playerid][pDonateCar] = 1;

					MysqlUpdatePlayerInt(playerid, "pDonateCar", p_info[playerid][pDonateCar]);

					p_info[playerid][pCredits] -= 500;

					MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
					
					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 50);

					return SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно купили #3 слот для авто!");
				}
			case 8:
				{
					if(p_info[playerid][pCredits] < 1000) return SendErr(playerid, "Недостаточно кредитов!");

					new rows;
					new fmt_query[90];
					new Cache: result;

					mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
					result = mysql_query(dbHandle, fmt_query);

					rows = cache_num_rows();

					if(!rows)
					return SendClientMessage(playerid, C_RED, "У Вас нет личного транспорта"), cache_delete(result);

					if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID) return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");

					ShowPlayerBuyVipNumberCar(playerid);
				}
			case 9:
			    {
			        if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "У Вас нет дома");
			        ShowPlayerDialogEx(playerid, 11111, DIALOG_STYLE_LIST, "{ebec86}>> Услуги для дома", "\
					1. Лифт в дом (500 кредитов)\n\
					2. Полное ограждение дома (1.500 кредитов)\n\
					2. Дополнительное Т/С к дому (700 рублей)", "Выбрать", "Назад");
			    }
			}
		}
    case 11111:
	    {
	        if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
			        if(p_info[playerid][pTotalCredits] < 500) return SendErr(playerid, "У Вас недостаточно реальных пополнений");

			        p_info[playerid][pTotalCredits] -= 500;
			        MysqlUpdatePlayerInt(playerid, "totalcredits", p_info[playerid][pTotalCredits]);

			        p_info[playerid][pDonateH][0] = 1;
			        MysqlUpdatePlayerInt(playerid, "pDonateH_0", p_info[playerid][pDonateH][0]);

			        SendInf(playerid, "Вы приобрели 'лифт в дом'. (Скоро к вам телепортируется администратор)");

			        format(STRING_GLOBAL, 200, "[{ebec86}A{828282}] %s[%d] приобрёл донат-услугу 'Лифт в дом'. (/hdonate)", p_info[playerid][pName], playerid);
					SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 20);
			    }
			    case 1:
			    {
			        if(p_info[playerid][pTotalCredits] < 1500) SendErr(playerid, "У Вас недостаточно реальных пополнений");

			        p_info[playerid][pTotalCredits] -= 1500;
			        MysqlUpdatePlayerInt(playerid, "totalcredits", p_info[playerid][pTotalCredits]);

			        p_info[playerid][pDonateH][1] = 1;
			        MysqlUpdatePlayerInt(playerid, "pDonateH_1", p_info[playerid][pDonateH][1]);

			        SendInf(playerid, "Вы приобрели 'полное ограждение дома'. (Скоро к вам телепортируется администратор)");

			        format(STRING_GLOBAL, 200, "[{ebec86}A{828282}] %s[%d] приобрёл донат-услугу 'полное ограждение дома'. (/hdonate)", p_info[playerid][pName], playerid);
					SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 150);
			    }
			    case 2:
			    {
			        if(p_info[playerid][pTotalCredits] < 700) SendErr(playerid, "У Вас недостаточно реальных пополнений");

			        p_info[playerid][pTotalCredits] -= 700;
			        MysqlUpdatePlayerInt(playerid, "totalcredits", p_info[playerid][pTotalCredits]);

			        p_info[playerid][pDonateH][2] = 1;
			        MysqlUpdatePlayerInt(playerid, "pDonateH_2", p_info[playerid][pDonateH][2]);

			        SendInf(playerid, "Вы приобрели 'Дополнительное Т/С к дому'. (Скоро к вам телепортируется администратор)");

			        format(STRING_GLOBAL, 200, "[{ebec86}A{828282}] %s[%d] приобрёл донат-услугу 'Дополнительное Т/С к дому'. (/hdonate)", p_info[playerid][pName], playerid);
					SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 50);
			    }
			}
	    }
	case D_JOB+200:
		{
			if(!response) return callcmd::donate(playerid);
			if(p_info[playerid][pVip])
			{
    			new year, month, day;
				new current_date = getdate(year, month, day);
				new time_left = p_info[playerid][pVipTime] - current_date;

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}У Вас уже имеется VIP статус!\n\n{FFFFFF}Дней до окончания: {FFFF00}%d\n{FFFFFF}Желаете продлить на {FFFF00}30 дней{FFFFFF} за 250 кредитов?\n\n", time_left);
				ShowPlayerDialogEx(playerid, D_JOB+202, DIALOG_STYLE_MSGBOX, "{ebec86}>> Потверждение действия", STRING_GLOBAL, "Да", "Нет");
				return 1;
			}
			if(p_info[playerid][pCredits] < 250) return SendErr(playerid, "Недостаточно кредитов!");
			new year, month, day;
			new current_date = getdate(year, month, day);
			p_info[playerid][pCredits] -= 250;
			p_info[playerid][pVip] = 1;
			p_info[playerid][pVipTime] = current_date + 30;
			SendClientMessage(playerid, COLOR_YELLOW, "Вы приобрели {ffffff}VIP{ffff00} статус на {ffffff}30{ffff00} дней (/viphelp)");
			MysqlUpdatePlayerInt(playerid, "vip", p_info[playerid][pVip]);
			MysqlUpdatePlayerInt(playerid, "viptime", p_info[playerid][pVipTime]);
			MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
			
			new query[128];
			format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
			mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 25);
		}
	case D_JOB+202:
		{
			if(!response) return callcmd::donate(playerid);
			if(p_info[playerid][pCredits] < 300) return SendErr(playerid, "Недостаточно кредитов!");
			new year, month, day;
			new current_date = getdate(year, month, day);
			new time_left = p_info[playerid][pVipTime] - current_date;
			p_info[playerid][pCredits] -= 300;
			p_info[playerid][pVipTime] = time_left + (current_date + 30);
			SendClientMessage(playerid, COLOR_YELLOW, "Вы продлили {ffffff}VIP{ffff00} статус на {ffffff}30{ffff00} дней (/viphelp)");
			MysqlUpdatePlayerInt(playerid, "vip", p_info[playerid][pVip]);
			MysqlUpdatePlayerInt(playerid, "viptime", p_info[playerid][pVipTime]);
			MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);

			new query[128];
			format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
			mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 30);
		}
	case DIALOG_BUY_VIP_NUMBER:
		{
			if(response)
			{
				if(!strlen(inputtext))
				return ShowPlayerBuyVipNumberCar(playerid);

				if(IsACarNumber(inputtext))
				{
					new fmt_query[128], Cache: result, rows;

					mysql_format(dbHandle, fmt_query, sizeof(fmt_query), "SELECT * FROM ownable_cars WHERE `number` = '%s'", inputtext);
					result = mysql_query(dbHandle, fmt_query, true);

					rows = cache_num_rows();

					cache_delete(result);

					if(rows)
					return SendClientMessage(playerid, COLOR_RED, "Введённый Вами номер уже занят");

					strmid(ownable_car[playerid][v_number], inputtext, 0, strlen(inputtext), 32);

					mysql_format(dbHandle, fmt_query, sizeof(fmt_query), "UPDATE ownable_cars SET number='%s' WHERE id=%d", inputtext, ownable_car[playerid][v_sql]);
					mysql_query(dbHandle, fmt_query, true);

					new vehicleid = p_info[playerid][pOwnableCar];

					if(ownable_car_label[p_info[playerid][pOwnableCar]] != Text3D:INVALID_3DTEXT_ID)
					{
						new string[128];
						format(string, sizeof(string), "", ownable_car[playerid][v_number]);//Номера: {ebec86}%s
						UpdateDynamic3DTextLabelText(ownable_car_label[p_info[playerid][pOwnableCar]], 0xFFFFFFFF, string);
						
						SetVehicleNumberPlate(vehicleid, ownable_car[playerid][v_number]);
					}

					SendClientMessage(playerid, C_OSNOV, "Вы успешно приобрели VIP номер на свой автомобиль");

					p_info[playerid][pCredits] -= 1000;
					MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
					
					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 50);
				}
				else SendClientMessage(playerid, COLOR_RED, "Вы ввели некорректный номер.");
			}
		}
	case DIALOG_CREDIT:
		{
		    if(!response) return 1;
			if(response)
			{
				if(strval(inputtext) < 10000000 || strval(inputtext) > 50000000) return SendErr(playerid, "Количество от 10000000 до 50000000 рублей!");

				new percent = strval(inputtext) + floatround((strval(inputtext)/100)*20);

				new fmt_dialog[330];

				format
				(
				fmt_dialog, sizeof fmt_dialog,
				"{ffffff}Вы действительно хотите взять кредит на {ffcc00}%d рублей\n"\
				"{ffffff}Ровно через 7 дней на Вашем банковском счёте должно быть {ffcc00}%d рублей,\n"\
				"{ffffff}В противном случаем у Вас отнимут: дом, квартиру, машину\n"\
				"{ffffff}На срок кредита Вам будет запрещена продажа имущества\n"\
				"{ffffff}(дом, квартира, машина)",
				strval(inputtext), percent
				);

				ShowPlayerDialogEx
				(
				playerid, DIALOG_CREDIT_TAKE, DIALOG_STYLE_MSGBOX,
				"{ebec86}>> Кредит",
				fmt_dialog,
				"Взять", "Отмена"
				);

				SetPVarInt(playerid, "credit_money", strval(inputtext));
				SetPVarInt(playerid, "credit_money_percent", percent);
			}
		}
	case DIALOG_CREDIT_TAKE:
		{
		    if(!response) return 1;
			if(response)
			{
				SendClientMessage(playerid, 0xFFCC00AA, "Вы успешно взяли кредит.");
				SendClientMessage(playerid, 0xFFCC00AA, "Теперь Вам запрещено продавать имущество.");

				new money_percent = GetPVarInt(playerid, "credit_money_percent");

				p_info[playerid][pCredit] = gettime() + 86400*7;
				p_info[playerid][pCreditMoney] = money_percent;

				MysqlUpdatePlayerInt(playerid, "credit", p_info[playerid][pCredit]);
				MysqlUpdatePlayerInt(playerid, "creditmoney", p_info[playerid][pCreditMoney]);

				GiveMoney(playerid, GetPVarInt(playerid, "credit_money"), "Кредит");
			}
		}
	case DIALOG_SELL_CAR:
		{
			if(response)
			{
				new vehicleid = p_info[playerid][pOwnableCar];

				if(vehicleid == INVALID_VEHICLE_ID) return 1;

				if(ownable_car_label[p_info[playerid][pOwnableCar]] != Text3D:INVALID_3DTEXT_ID)
				{
					DestroyDynamic3DTextLabel(ownable_car_label[p_info[playerid][pOwnableCar]]);
					ownable_car_label[p_info[playerid][pOwnableCar]] = Text3D:INVALID_3DTEXT_ID;
				}

				DestroyVehicle(vehicleid);

				new fmt_msg[190];

				format(fmt_msg, sizeof fmt_msg, "DELETE FROM ownable_cars WHERE `id` = '%d'", ownable_car[playerid][v_sql]);
				mysql_query(dbHandle, fmt_msg);

				new car_price = GetPVarInt(playerid, "sell_car_cost"), percent = GetPVarInt(playerid, "sell_car_percent");

				SendClientMessage(playerid, 0x3399FFFF, "Вы продали личный транспорт");

				format(fmt_msg, sizeof fmt_msg, "Налоговый сбор составляет 20 процентов от его стоимости {ebec86}(%d руб)", car_price);
				SendClientMessage(playerid, -1, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "На счет было переведено {FFFF00}%d руб", car_price - percent);
				SendClientMessage(playerid, 0x66CC00FF, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "~g~+%d rub", car_price - percent);
				GameTextForPlayer(playerid, fmt_msg, 4000, 1);

				GiveMoney(playerid, car_price - percent, "/sellcar");

				p_info[playerid][pOwnableCar] = INVALID_VEHICLE_ID;
				
				ownable_car[playerid][v_lock] =
				ownable_car[playerid][v_virtual] =
				ownable_car[playerid][v_sql] = 0;
				format(ownable_car[playerid][v_owner], 32, "None");
				ownable_car[playerid][v_model] =
				ownable_car[playerid][v_color_1] =
				ownable_car[playerid][v_color_2] =
				ownable_car[playerid][v_fuel] =
				ownable_car[playerid][v_slot] = -1;
				ownable_car[playerid][v_pos_x] =
				ownable_car[playerid][v_pos_y] =
				ownable_car[playerid][v_pos_z] =
				ownable_car[playerid][v_pos_r] = 0.0;
			}
		}
	case DIALOG_SELL_COPTER:
		{
			if(response)
			{
				new vehicleid = p_info[playerid][PlayerCopterID];

				if(vehicleid == INVALID_VEHICLE_ID) return 1;

				DestroyVehicle(vehicleid);

				new fmt_msg[128];

				format(fmt_msg, sizeof fmt_msg, "DELETE FROM copters WHERE owner_name='%s'", GetName(playerid));
				mysql_query(dbHandle, fmt_msg);

				new car_price = GetPVarInt(playerid, "sell_car_cost"), percent = GetPVarInt(playerid, "sell_car_percent");

				SendClientMessage(playerid, 0x3399FFFF, "Вы продали личный вертолет");

				format(fmt_msg, sizeof fmt_msg, "Налоговый сбор составляет 20 процентов от его стоимости {ebec86}(%d руб)", car_price);
				SendClientMessage(playerid, -1, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "На счет было переведено {FFFF00}%d руб", car_price - percent);
				SendClientMessage(playerid, 0x66CC00FF, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "~g~+%d rub", car_price - percent);
				GameTextForPlayer(playerid, fmt_msg, 4000, 1);

				GiveMoney(playerid, car_price - percent, "/sellcopter");

				p_info[playerid][PlayerCopterID] = INVALID_VEHICLE_ID;
			}
		}
	case DIALOG_INTERACTION_MONEY:
		{
			if(response)
			{
				if(p_info[playerid][pInteractionPlayer] == -1)
				return 1;

				new money = strval(inputtext);

				if(!IsNumeric(inputtext))
				return ShowPlayerDialogEx(playerid, DIALOG_INTERACTION_MONEY, DIALOG_STYLE_INPUT,	"{ebec86}>> Передать деньги", "{ffffff}Введите количество денег, которых хотите передать игроку:", "Передать", "Отмена");

				new to_player = GetPVarInt(playerid, "to_player_interaction");
				
				if(GetPVarInt(playerid, "payer") > gettime()) return SendErr(playerid, "Передавать деньги можно раз в минуту");
				else if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для передачи денег нужно отыграть 3 часа");
				else if(!IsPlayerConnected(to_player)) return SendErr(playerid, "Игрок не в игре");
				else if(PlayerLogged[to_player] == false) return SendErr(playerid, "Игрок не авторизован");
				else if(to_player == playerid) return SendErr(playerid, "Нельзя передавать деньги самому себе");
				else if(!ProxDetectorS(3.0, playerid, to_player)) return SendErr(playerid, "Игрок слишком далеко!");
				else if(money < 1 || GetMoney(playerid) < money) return SendErr(playerid, "У вас не хватает денег!");
				else if(money < 1 || money > 100000) return SendErr(playerid, "Игроки могут передавать только по 100.000 рублей");
				GiveMoney(playerid, -money, "/pay");
				GiveMoney(to_player, money, "/pay");

				format(STRING_GLOBAL, 144, "%s [%d] передал(а) Вам {f0e86b}%d{FFFFFF} рублей", GetName(playerid), playerid, money);
				SendInf(to_player, STRING_GLOBAL);

				format(STRING_GLOBAL,144,"Вы передали %s [%d] {f0e86b}%d{FFFFFF} рублей", GetName(to_player), to_player, money);
				SendInf(playerid, STRING_GLOBAL);

				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "передал(а) деньги %s", GetName(to_player));
				SetPlayerChatBubble(playerid, STRING_GLOBAL, COLOR_PURPLE, 10.0, 10000);

				ApplyAnimation(playerid, "DEALER", "shop_pay", 4.1, 0, 1, 1, 0, 0, 1);
				if(!p_info[playerid][pAdmin])
				{
					SetPVarInt(playerid, "payer", gettime()+60);
				}
			}
		}
	case DIALOG_INTERACTION_SELL_CAR:
		{
			if(response)
			{
				if(p_info[playerid][pInteractionPlayer] == -1)
				return 1;

				new money = strval(inputtext);
				if(money < 0 || money > 100000000)
				return ShowPlayerDialogEx(playerid, DIALOG_INTERACTION_SELL_CAR, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа личного ТС", "{ffffff}Введите сумму, за которую хотите продать своё ТС:\n{AFAFAF}* Не более 100 миллионов", "Продать", "Отмена");

				if(!IsNumeric(inputtext))
				return ShowPlayerDialogEx(playerid, DIALOG_INTERACTION_SELL_CAR, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа личного ТС", "{ffffff}Введите сумму, за которую хотите продать своё ТС:", "Продать", "Отмена");

				SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_SELL_CAR, money);
			}
		}
	case DIALOG_INTERACTION_SELL_HOUSE:
		{
			if(response)
			{
				new money = strval(inputtext);
				
				if(money < 0 || money > 100000000)
				return ShowPlayerDialogEx(playerid, DIALOG_INTERACTION_SELL_HOUSE, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа дома", "{ffffff}Введите сумму, за которую хотите продать свой дом:\n{AFAFAF}* Не более 100 миллионов", "Продать", "Отмена");

				if(!IsNumeric(inputtext))
				return ShowPlayerDialogEx(playerid, DIALOG_INTERACTION_SELL_HOUSE, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа дома", "{ffffff}Введите сумму, за которую хотите продать свой дом:", "Продать", "Отмена");

				SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_SELL_HOUSE, money);
			}
		}
	case DIALOG_INTERACTION_SELL_BIZ:
		{
			if(response)
			{
				new money = strval(inputtext);
				
				if(money < 0 || money > 100000000)
				return ShowPlayerDialogEx(playerid, DIALOG_INTERACTION_SELL_BIZ, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа бизнеса", "{ffffff}Введите сумму, за которую хотите продать свой бизнес:", "Продать", "Отмена");

				if(!IsNumeric(inputtext))
				return ShowPlayerDialogEx(playerid, DIALOG_INTERACTION_SELL_BIZ, DIALOG_STYLE_INPUT, "{ebec86}>> Продажа бизнеса", "{ffffff}Введите сумму, за которую хотите продать свой бизнес:", "Продать", "Отмена");

    			SendPlayerProposition(playerid, p_info[playerid][pInteractionPlayer], PROPOSITION_TYPE_SELL_BUSINESS, money);
			}
		}
	case D_DONATE+1:
		{
			if(!response) return callcmd::donate(playerid);
			else return 1;
		}
	case D_DONATE+2:
		{
			if(!response) return callcmd::donate(playerid);
			if(strval(inputtext) < 1 || strval(inputtext) > 5000) return SendErr(playerid, "Количество от 1 до 5000 кредитов!");
			if(p_info[playerid][pCredits] < strval(inputtext)) return SendErr(playerid, "Недостаточно кредитов!");
			p_info[playerid][pCredits] -= strval(inputtext);
			MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
			new string[128];
			if(!doubling_donate)
			{
				format(string, sizeof(string), "Вы получили {ffffff}%iр{ffff00} за {ffffff}%d{ffff00} кредитов!", strval(inputtext)*1500, strval(inputtext));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "+%iр", strval(inputtext)*1500);
				GameTextForPlayer(playerid, string, 3000, 6);
				GiveMoney(playerid, strval(inputtext)*1500, "Обмен кредитов");
			}
			else
			{
				format(string, sizeof(string), "Вы получили {ffffff}%iр{ffff00} за {ffffff}%d{ffff00} кредитов!", strval(inputtext)*3000, strval(inputtext));
				SendClientMessage(playerid, COLOR_YELLOW, string);
				format(string, sizeof(string), "+%iр", strval(inputtext)*3000);
				GameTextForPlayer(playerid, string, 3000, 6);//3000 не менять
				GiveMoney(playerid, strval(inputtext)*3000, "Обмен кредитов");
			}
			new query[128];
			format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
			mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, floatround(strval(inputtext)/10));
		}
	case D_DONATE+4:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(p_info[playerid][pCredits] < 400) return SendErr(playerid, "Недостаточно кредитов");
					p_info[playerid][pCredits] -= 400;
					MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
					for(new i; i < 8; i++) p_info[playerid][pGunSkill][i] = 100;
					SetPlayerSkills(playerid);

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET sdpistol=%i,deserteagle=%i,shotgun=%i,mp5=%i,ak47=%i,m4=%i,pistol=%i,microuzi=%i WHERE name='%s'",
					p_info[playerid][pGunSkill][0], p_info[playerid][pGunSkill][1], p_info[playerid][pGunSkill][2], p_info[playerid][pGunSkill][3], p_info[playerid][pGunSkill][4], p_info[playerid][pGunSkill][5], p_info[playerid][pGunSkill][6], p_info[playerid][pGunSkill][7], GetName(playerid));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					SendClientMessage(playerid, COLOR_LIME, "Вы приобрели все навыки владения оружием");
					
					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 40);
				}
			case 1:
				{
					if(p_info[playerid][pCredits] < 400) return SendErr(playerid, "Недостаточно кредитов");
					p_info[playerid][pCredits] -= 400;
					MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
					for(new i; i < 4; i++) p_info[playerid][pLic][i] = 1;

					STRING_GLOBAL[0] = EOS;
					format(p_info[playerid][pLics],16,"%i, %i, %i, %i",p_info[playerid][pLic][0],p_info[playerid][pLic][1],p_info[playerid][pLic][2],p_info[playerid][pLic][3]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE name='%s'", p_info[playerid][pLics], GetName(playerid));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					SendClientMessage(playerid, COLOR_LIME, "Вы приобрели все лицензии");
					
					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 40);
				}
			case 2:
				{
					STRING_GLOBAL[0] = EOS;
					strcat(STRING_GLOBAL, "{FFFF00}Преимущества VIP статуса:\n{FFFFFF}");
					strcat(STRING_GLOBAL, "1) Ускоренное лечение в больнице\n");
					strcat(STRING_GLOBAL, "2) Возможность покинуть организацию самому (/exitf)\n");
					strcat(STRING_GLOBAL, "3) Каждую 4-ую зарплату +1 респект\n");
					strcat(STRING_GLOBAL, "4) Прокачка скиллов в 2 раза быстрей\n");
					strcat(STRING_GLOBAL, "5) Проявление чувства голода у персонажа в 2 раза реже\n");
					strcat(STRING_GLOBAL, "6) Уменьшенное время на отправку вопроса/репорта\n");
					strcat(STRING_GLOBAL, "7) Возможность уволиться с работы не на месте устройства (/quitjob)\n");
					strcat(STRING_GLOBAL, "{FFFF00}Примечание:\n{FFFFFF}");
					strcat(STRING_GLOBAL, "- VIP статус выдаётся на 30 дней");
					ShowPlayerDialogEx(playerid, D_JOB+200, DIALOG_STYLE_MSGBOX, "{ebec86}>> VIP статус", STRING_GLOBAL, "Купить", "Назад");
				}
			case 3:
				{
					if(p_info[playerid][pCredits] < 150) return SendErr(playerid, "Недостаточно кредитов");
					p_info[playerid][pCredits] -= 150;
					p_info[playerid][pSprunk] += 1000;
					SendClientMessage(playerid, COLOR_LIME, "Вы увеличили вместимость инвентаря. (+1 кг)");
					MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
					MysqlUpdatePlayerInt(playerid, "sprunk", p_info[playerid][pSprunk]);
					
					new query[128];
					format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
					mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 15);
				}
			}
		}
	case 9345:
		{
			if(!response) return 1;
			if(listitem == 5)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
				StopAudioStreamForPlayer(playerid);
			}
			else
			{
				static const Radio_List[6][64] =
				{
					"http://radio02-cn03.akadostream.ru:8108/shanson128.mp3",
					"http://radio02-cn03.akadostream.ru:8112/nashe128.mp3",
					"http://online.radiorecord.ru:8101/rr_128",
					"http://radio.zaycev.fm:9002/ZaycevFM(128).m3u",
					"http://radio.zaycev.fm:9002/ZaycevFM(128).m3u",
					"http://radio.zaycev.fm:9002/rnb/ZaycevFM(128).m3u"
				};
				if(PlayerToPoint(10.0, playerid, -201.2533, 856.0426, 2613.6101))
				{
				    new Float:BBCoord[4];
					GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
					GetPlayerFacingAngle(playerid, BBCoord[3]);
					SetPVarFloat(playerid, "BBX", BBCoord[0]);
					SetPVarFloat(playerid, "BBY", BBCoord[1]);
					SetPVarFloat(playerid, "BBZ", BBCoord[2]);
					BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
					BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
					BBCoord[2] -= 1.0;
					Itter_AddInternal(_:_Y_ITER_C0:boxPlayer@YSII_Cg,_:_Y_ITER_C0:boxPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(boxPlayer));

					SetPVarInt(playerid, "BBArea", CreateDynamicSphere(-201.2533, 856.0426, 2613.6101, 10.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
				    if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, Radio_List[listitem], GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", Radio_List[listitem]);
					}
				    return 1;
				}
				if(GetPVarInt(playerid, "boomBox") == 1)
				{
					if(GetPVarType(playerid, "PlacedBB"))
					{
						foreach(new i: Player)
						{
							if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea")))
							{
								PlayStream(i, Radio_List[listitem], GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"), 30.0, 1);
							}
						}
						SetPVarString(playerid, "BBStation", Radio_List[listitem]);
					}
				}
				else
				{
					if(!(IsPlayerAttachedObjectSlotUsed(playerid, 3)))
					{
						ApplyAnimation(playerid, "goggles", "goggles_put_on", 4.1, 0, 0, 0, 0, 0, 1);
						SetPlayerAttachedObject(playerid, 3, 19424, 2, 0.05, 0.0, 0.0, 90.0, 360.0, 270.0);
					}
					PlayAudioStreamForPlayer(playerid, Radio_List[listitem]);
				}
			}
		}
	case D_CANCELRENT:
		{
			if(!response) return 1;
			SendClientMessage(playerid, COLOR_FADE1, "Вы отказались от аренды транспорта");
			new rc = GetPVarInt(playerid, "arendkey");
			ArendInfo[rc][aPlayerID] = INVALID_PLAYER_ID;
			AC_SetVehicleToRespawn(ArendInfo[rc][aID]);
			CarDoorsEx(ArendInfo[rc][aID], 0);
		}
	case D_LOGIN:
		{
			if(!response) { SendErr(playerid, "Сервер закрыл соединение! Для выхода из игры введите: /q(uit)"); Kick(playerid); }
			for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
				case 'А'..'Я', 'а'..'я', ' ':
				{
				    format(STRING_GLOBAL, 400, "{FFFFFF}Добро пожаловать на {f0e86b}"SERVER_NAME"{FFFFFF}\n\nИмя персонажа: {ebec86}%s\n{FFFFFF}Введите пароль:", GetName(playerid));
					ShowPlayerDialogEx(playerid, D_LOGIN, DIALOG_STYLE_INPUT, "{ebec86}>> Авторизация", STRING_GLOBAL, "Вход", "Выход");
					return 1;
				}
			}
			if(!strlen(inputtext))
			{
				format(STRING_GLOBAL, 400, "{FFFFFF}Добро пожаловать на {f0e86b}"SERVER_NAME"{FFFFFF}\n\nИмя персонажа: {ebec86}%s\n{FFFFFF}Введите пароль:", GetName(playerid));
				ShowPlayerDialogEx(playerid, D_LOGIN, DIALOG_STYLE_INPUT, "{ebec86}>> Авторизация", STRING_GLOBAL, "Вход", "Выход");
				return 1;
			}
			
			DeletePVar(playerid, "player_in_enter");

			STRING_GLOBAL[0] = EOS;
			mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%e' AND `password`='%e'", GetName(playerid), inputtext);
			mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerLogin", "ds", playerid, inputtext);
		}
	case 13212:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 13212, DIALOG_STYLE_INPUT, "{ebec86}>> Репорт", "{FFFFFF}Введите ID игрока и причину подачи на него в репорт:", "Отправить","Назад");
			if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendErr(playerid, "На отправку репорта/вопроса существует лимит времени, пожалуйста подождите");
            else if(CheckReport(inputtext)) return BotReport(playerid);
			new string[128];
			format(string, sizeof(string), "< Репорт: %s [%d] > {FFFFFF}%s",p_info[playerid][pName],playerid,inputtext);
			SendAdminMessage(0xa24646FF, string);
			SendHelperMessage(0xa24646FF, string);

			format(string, sizeof(string), "< Репорт: %s [%d] > {FFFFFF}%s", p_info[playerid][pName], playerid, inputtext);
			SendClientMessage(playerid, 0xa24646FF, string);
			SendInf(playerid, "Вы отправили сообщение администрации и помощникам");

			SetPVarInt(playerid, "AntiFloodRep", gettime() + 60);
		}
	case 13213:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, 13213, DIALOG_STYLE_INPUT, "{ebec86}>> Задать вопрос", "{FFFFFF}Введите чётко поставленный вопрос:", "Отправить","Назад");
			if(GetPVarInt(playerid,"AntiFloodRep") > gettime()) return SendErr(playerid, "На отправку репорта/вопроса существует лимит времени, пожалуйста подождите");
            else if(CheckReport(inputtext)) return BotReport(playerid);
			new string[128];
			format(string, sizeof(string), "< Репорт: %s [%d] > {FFFFFF}%s",p_info[playerid][pName], playerid, inputtext);
			SendAdminMessage(0xa24646FF, string);
			SendHelperMessage(0xa24646FF, string);

			format(string, sizeof(string), "< Репорт: %s [%d] > {FFFFFF}%s", p_info[playerid][pName], playerid, inputtext);
			SendClientMessage(playerid, 0xa24646FF, string);
			SendInf(playerid, "Вы отправили сообщение администрации и помощникам");

			SetPVarInt(playerid, "AntiFloodRep", gettime() + 60);
		}
	case 15144:
		{
			if(response) return ShowPlayerStatsDialog(playerid, playerid);
			else return 1;
		}
	case D_UCPADMIN:
		{
			if(!response) return 1;
			new string[100];
			switch(listitem)
			{
			case 0:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий ник для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Ник", string, "Принять", "Отмена");
					PlayerStats[playerid] = 1;
				}
			case 1:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Уровень", string, "Принять", "Отмена");
					PlayerStats[playerid] = 2;
				}
			case 2:
				{
					format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialogEx(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Опыт", string, "Принять", "Отмена");
					PlayerStats[playerid] = 3;
				}
			case 3:
				{
					format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s", GetName(NameStats[playerid]));
					ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Пол", string, "Принять", "Отмена");
					PlayerStats[playerid] = 4;
				}
			}
		}
	case D_UCPADMIN2:
		{
			if(!response) return 1;
			new string[100];
			switch(PlayerStats[playerid])
			{
			case 1:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий ник для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Ник", string, "Принять", "Отмена");
						return 1;
					}
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE `name` = '%s'", inputtext);
					mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerSetName", "is", playerid, inputtext);
				}
			case 2:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Уровень", string, "Принять", "Отмена");
						return 1;
					}
					if(strval(inputtext) < 1 || strval(inputtext) > 100)
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий уровень для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Уровень", string, "Принять", "Отмена");
						return 1;
					}
					SCMF(playerid, COLOR_LIME,"Вы установили уровень игрока %s на %d",GetName(NameStats[playerid]), strval(inputtext));
					SCMF(NameStats[playerid], COLOR_LIME, "Администратор %s установил вам уровень игрока на %d", GetName(playerid), strval(inputtext));
					p_info[NameStats[playerid]][pLevel] = strval(inputtext);
					SetPlayerScore(NameStats[playerid], p_info[NameStats[playerid]][pLevel]);
					MysqlUpdatePlayerInt(NameStats[playerid], "level", p_info[NameStats[playerid]][pLevel]);
				}
			case 3:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialogEx(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Опыт", string, "Принять", "Отмена");
						return 1;
					}
					if(strval(inputtext) < 1 || strval(inputtext) > 1000)
					{
						format(string, sizeof(string), "{FFFFFF}Введите количество опыта для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialogEx(playerid,D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Опыт", string, "Принять", "Отмена");
						return 1;
					}
					SCMF(playerid, COLOR_LIME, "Вы установили опыт %s на %d", GetName(NameStats[playerid]), strval(inputtext));
					SCMF(NameStats[playerid], COLOR_LIME, "Администратор %s установил вам опыт на %d", GetName(playerid), strval(inputtext));
					p_info[NameStats[playerid]][pExp] = strval(inputtext);
					MysqlUpdatePlayerInt(NameStats[playerid], "exp", p_info[NameStats[playerid]][pExp]);
				}
			case 4:
				{
					if(!strlen(inputtext))
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Пол", string, "Принять", "Отмена");
						return 1;
					}
					if(strval(inputtext) < 1 || strval(inputtext) > 2)
					{
						format(string, sizeof(string), "{FFFFFF}Введите будущий пол для игрока: %s", GetName(NameStats[playerid]));
						ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Пол", string, "Принять", "Отмена");
						return 1;
					}
					SCMF(playerid, COLOR_LIME, "Вы изменили пол игроку %s на %s",GetName(NameStats[playerid]), (strval(inputtext)==1)?("мужской"):("женский"));
					SCMF(NameStats[playerid], COLOR_LIME, "Администратор %s изменил ваш пол на %s", GetName(playerid), (strval(inputtext)==1)?("мужской"):("женский"));
					p_info[NameStats[playerid]][pSex] = strval(inputtext);
					MysqlUpdatePlayerInt(NameStats[playerid], "sex", p_info[NameStats[playerid]][pSex]);
				}
			}
			PlayerStats[playerid] = 0;
		}
	case D_ADDNED:
		{
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						STRING_GLOBAL[0] = EOS;
						strcat(STRING_GLOBAL,"ВАЖНО: Тип интерьера\n\nПРИМЕР: 1\n\n");
						strcat(STRING_GLOBAL,"1. Низкий класс\n");
						strcat(STRING_GLOBAL,"2. Средний класс\n");
						strcat(STRING_GLOBAL,"3. Высокий класс");
						ShowPlayerDialogEx(playerid,D_ADDNED+1,1,"{ebec86}>> Добавить дом",STRING_GLOBAL,"Выбрать","Закрыть");
					}
				case 1: ShowPlayerDialogEx(playerid, D_ADDNED+4, 2, "{ebec86}>> Добавить бизнес", "Магазин 24/7\nЗаправка\nПиццерия\nСпортзал\nСвободно\nСвободно\nСвободно\nСвободно\nБар\nАммуниция\nКлуб\nСТО\nМагазин одежды\nКазино", "Принять", "Отмена");
				case 2: ShowPlayerDialogEx(playerid, D_NMENU+15, 1, "{ebec86}>> Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус, Семья\nПРИМЕР: 504, 1, 3, 4, 0, 0", "Принять", "Отмена");
				case 3: ShowPlayerDialogEx(playerid, D_ADDNED+5, 0, "{ebec86}>> Добавить ATM", "Вы хотите начать установку банкомата?", "Да", "Нет");
				case 4: ShowPlayerDialogEx(playerid, D_ADDNED+6, 0, "{ebec86}>> Добавить SPRUNK", "Вы хотите начать установку автомата с гозировкой?", "Да", "Нет");
				case 5:
					{
						if(GetPlayerInterior(playerid) != 0) return SendErr(playerid, "В интерьере нельзя создать гараж");
						if(GetPVarInt(playerid, "CREATE_GARAGE")) return SendErr(playerid, "Вы уже начали создавать гараж");
						ShowPlayerDialogEx(playerid, dialog_CREATE_GARAGE, DIALOG_STYLE_MSGBOX, "{ebec86}>> Создание гаража", "{FFFFFF}Вы готовы приступить к созданию гаража?", "Да", "Нет");
					}
				}
			}
			return 1;
		}
	case D_ADDNED+1:
		{
			if(response)
			{
				new type, Float:x,Float:y,Float:z;
				if(sscanf(inputtext,"i",type))
				{
					new string[150];
					STRING_GLOBAL[0] = EOS;
					strcat(string,"ВАЖНО: Тип интерьера\n\nПРИМЕР: 1\n\n");
					strcat(STRING_GLOBAL,"1. Низкий класс\n");
					strcat(STRING_GLOBAL,"2. Средний класс\n");
					strcat(STRING_GLOBAL,"3. Высокий класс");
					return ShowPlayerDialogEx(playerid,D_ADDNED+1,1,"{ebec86}>> Добавить дом",STRING_GLOBAL,"Выбрать","Закрыть");
				}
				TOTALHOUSE++;
				GetPlayerPos(playerid,x,y,z);
				HouseInfo[TOTALHOUSE][hEntrx] = x;
				HouseInfo[TOTALHOUSE][hEntry] = y;
				HouseInfo[TOTALHOUSE][hEntrz] = z;
				new string[90];
				switch(type)
				{
				case 1: format(string,90,"435.4139, 1315.7772, 1615.5118,1,5");
				case 2: format(string,90,"-376.3782, 1026.7642, 1713.0265,2,9");
				case 3: format(string,90,"344.2858, 705.5203, 2998.0991,3,6");//2163.3025,2821.6401,1716.2400,271.5710,0,0,0,0,0,0);
				}
				sscanf(coordh,"p<,>ffff",
				HouseInfo[TOTALHOUSE][hCarx],HouseInfo[TOTALHOUSE][hCary],HouseInfo[TOTALHOUSE][hCarz],HouseInfo[TOTALHOUSE][hCarfa]);
				sscanf(string,"p<,>fffii",
				HouseInfo[TOTALHOUSE][hExitx],HouseInfo[TOTALHOUSE][hExity],HouseInfo[TOTALHOUSE][hExitz],
				HouseInfo[TOTALHOUSE][hDiscript],HouseInfo[TOTALHOUSE][hInt]);
				HouseInfo[TOTALHOUSE][hVirtual] = TOTALHOUSE;

				new tmpvar;
				switch(HouseInfo[TOTALHOUSE][hDiscript])
				{
				case 1: tmpvar = 300000;
				case 2: tmpvar = 550000;
				case 3: tmpvar = 875000;
				}
				HouseInfo[TOTALHOUSE][hPrice] = tmpvar;

				strmid(HouseInfo[TOTALHOUSE][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				HouseInfo[TOTALHOUSE][hMIcon] = CreateDynamicMapIcon(HouseInfo[TOTALHOUSE][hEntrx], HouseInfo[TOTALHOUSE][hEntry], HouseInfo[TOTALHOUSE][hEntrz], 31, 0,-1,-1,-1,150.0);
				HouseInfo[TOTALHOUSE][hPickup] = CreateDynamicPickup(1273,1, HouseInfo[TOTALHOUSE][hEntrx], HouseInfo[TOTALHOUSE][hEntry], HouseInfo[TOTALHOUSE][hEntrz], 0);
				HouseInfo[TOTALHOUSE][hPickupExit] = CreateDynamic3DTextLabel("{FFFFFF}Для выхода введите:\n{FFCC00}/exit\n{FFFFFF}Управление домом: \n{0099FF}/hmenu",COLOR_WHITE,HouseInfo[TOTALHOUSE][hExitx], HouseInfo[TOTALHOUSE][hExity], HouseInfo[TOTALHOUSE][hExitz],2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,HouseInfo[TOTALHOUSE][hVirtual],HouseInfo[TOTALHOUSE][hInt]);
                HouseInfo[TOTALHOUSE][hArea] = CreateDynamicSphere(HouseInfo[TOTALHOUSE][hEntrx], HouseInfo[TOTALHOUSE][hEntry], HouseInfo[TOTALHOUSE][hEntrz], 1.3, HouseInfo[TOTALHOUSE][hVirtual], -1);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"INSERT INTO "T_HOUSE" (id,hEntrx,hEntry,hEntrz,hExitx,hExity,hExitz,carx,cary,carz,carfa,hDiscript,hPrice,hInt,hVirtual)\
				VALUES (%d,'%f','%f','%f','%f','%f','%f','%f','%f','%f','%f','%d',%d,%d,%d)",
				TOTALHOUSE,
				HouseInfo[TOTALHOUSE][hEntrx],HouseInfo[TOTALHOUSE][hEntry],HouseInfo[TOTALHOUSE][hEntrz],
				HouseInfo[TOTALHOUSE][hExitx],HouseInfo[TOTALHOUSE][hExity],HouseInfo[TOTALHOUSE][hExitz],
				HouseInfo[TOTALHOUSE][hCarx],HouseInfo[TOTALHOUSE][hCary],HouseInfo[TOTALHOUSE][hCarz],HouseInfo[TOTALHOUSE][hCarfa],
				HouseInfo[TOTALHOUSE][hDiscript],HouseInfo[TOTALHOUSE][hPrice],HouseInfo[TOTALHOUSE][hInt],HouseInfo[TOTALHOUSE][hVirtual]);
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				SCMF(playerid,COLOR_LIME,"Дом №%d Успешно создан",TOTALHOUSE);
				return 1;
			}
			TPC[playerid] = false;
		}
	case D_ADDNED+4:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0: format(boordh,sizeof(boordh),"454.1961,2510.6208,3018.4202,449.2993,2508.3315,3018.4202,6,56,1"); // 24/7
			case 1: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,47,2"); // FUEL
			case 2: format(boordh,sizeof(boordh),"-721.3050, 225.4088, 2022.7360,-724.6412, 206.7564, 2022.7360,5,29,3");
			case 3: format(boordh,sizeof(boordh),"-330.3330,440.3921,2513.6201,377.3217,-67.8903,1001.5151,10,54,10"); // Sportzal
			case 4: format(boordh,sizeof(boordh),"364.9063,-11.7721,1001.8516,369.6516,-6.3217,1001.8589,9,14,3");
			case 5: format(boordh,sizeof(boordh),"493.3561,-24.8449,1000.6797,499.2758,-20.7244,1000.6797,17,48,4");
			case 6: format(boordh,sizeof(boordh),"-2636.6792,1402.4634,906.4609,-2659.1587,1416.9315,906.2734,3,48,4");
			case 7: format(boordh,sizeof(boordh),"1204.7395,-13.8515,1000.9219,1214.1865,-12.9937,1000.9219,2,48,4");
			case 8: format(boordh,sizeof(boordh),"-1501.3638, -296.6272, 1762.5275,-1498.5411, -300.3899, 1762.5275,11,49,5");
			case 9: format(boordh,sizeof(boordh),"540.2840,-842.7768,1002.0000,541.7650,-851.2516,1002.0000,7,18,6"); // AMMO
			case 10: format(boordh,sizeof(boordh),"-187.2723, 882.1444, 2612.5525 , -186.4855, 856.6979, 2612.4531,5,10,4"); // НОВЫЙ КЛУБ
			case 11: format(boordh,sizeof(boordh),"0.0,0.0,0.0,0.0,0.0,0.0,0,27,7"); // CTO
			case 12: format(boordh,sizeof(boordh),"-913.9672,1200.9209,1002.0200,-913.6543,1211.7676,1002.0200,5,45,8"); // Магазин одежды
			case 13: format(boordh,sizeof(boordh),"1600.3970, 971.2603, 1819.4727,1613.3817,997.2397,1819.0200,1,25,9"); // Казино
			}
			ShowPlayerDialogEx(playerid, D_HEAL+6, 1, "{ebec86}>> Бизнес", "ВАЖНО: Название\n\nПРИМЕР: Gas Station", "Принять", "Отмена");
		}
	case D_ADDNED+5:
		{
			if(p_info[playerid][pAdmin] < 9 || AdminLogged[playerid] == false) return 1;
			if(TOTALATM >= MAX_ATM-2) return SendErr(playerid, "Вы не можете больше устанавливать банкоматы!");
			if(GetPVarInt(playerid, "LoadATM") > 0) return SendErr(playerid, "Вы уже устанавливаете банкомат!");
			ShowPlayerDialogEx(playerid, D_ATM+9, 0, "{ebec86}>> Добавить банкомат", "Вы хотите начать установку банкомата?", "Да", "Нет");
			return 1;
		}
    case D_ADDNED+6:
		{
			if(p_info[playerid][pAdmin] < 9 || AdminLogged[playerid] == false) return 1;
			if(TOTALSPRUNK >= MAX_SPRUNK-2) return SendErr(playerid, "Вы не можете больше устанавливать автоматы с газировкой!");
			if(GetPVarInt(playerid, "LoadSprunk") > 0) return SendErr(playerid, "Вы уже устанавливаете автомат с газировкой!");
			
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			new atm1;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Чтобы выйти, нажмите: ESC и чтобы сохранить, нажмите курсором: СОХРАНИТЬ");
			atm1 = CreateDynamicObject(10012, x, y, z-0.35, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "LoadSprunk", atm1+1);
			EditDynamicObject(playerid, atm1);
			return 1;
		}
	case D_PODEZD:
		{
			if(response)
			{
				new idx = GetPVarInt(playerid, "PlayerPodezd");
				SetPlayerPos(playerid,PodezdInfo[idx][poExitX],PodezdInfo[idx][poExitY],PodezdInfo[idx][poExitZ]);
				SetPlayerInterior(playerid,PodezdInfo[idx][poI]);
				SetPlayerVirtualWorld(playerid,PodezdInfo[idx][poV]);
				DeletePVar(playerid,"PlayerPodezd");
			}
		}
	case D_PODEZD+1:
		{
			if(response)
			{
				new idx = GetPVarInt(playerid, "PlayerPodezd");
				SetPlayerPos(playerid,PodezdInfo[idx][poX],PodezdInfo[idx][poY],PodezdInfo[idx][poZ]);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				DeletePVar(playerid,"PlayerPodezd");
			}
		}
	case D_PODEZD+2:
		{
			if(response)
			{
				new idx = GetPVarInt(playerid, "PlayerRooms");
				new string[16];
				if(RoomsInfo[idx][rLock] == 1)
				{
					if(strcmp(p_info[playerid][pName], RoomsInfo[idx][rOwner], true) == 0) ShowPlayerDialogEx(playerid, D_PODEZD+6, 0, "{ebec86}>> Квартира", "Ваша квартира закрыта\n\nВы хотите её открыть?", "Да", "Нет");
					format(string, 16, "~r~Locked");
					GameTextForPlayer(playerid, string, 5000, 6);
				}
				else
				{
					SetPlayerPos(playerid,RoomsInfo[idx][rExitX],RoomsInfo[idx][rExitY],RoomsInfo[idx][rExitZ]);
					SetPlayerInterior(playerid,RoomsInfo[idx][rExitI]);
					SetPlayerVirtualWorld(playerid,RoomsInfo[idx][rExitV]);
				}
			}
		}
	case D_PODEZD+3:
		{
			if(response)
			{
				new idx = GetPVarInt(playerid, "PlayerRooms");
				new room = 0, house = 0;
				for(new i = TOTALROOMS; i > 0; i--)
				{
					if(!strcmp(RoomsInfo[i][rOwner],p_info[playerid][pName],true)) room++;
				}
				if(room != 0) return SendErr(playerid, "У вас уже есть квартира");
				for(new i = TOTALHOUSE; i > 0; i --)
				{
					if(!strcmp(HouseInfo[i][hOwner], GetName(playerid), true)) house++;
				}
				if(house != 0) return SendErr(playerid, "У вас уже есть дом");
				if(GetMoney(playerid) < RoomsInfo[idx][rCost]*WorkSalary[7])
				return SendClientMessage(playerid, COLOR_DARKORANGE,"У вас не хватает денег для покупки квартиры");
				GiveMoney(playerid, -RoomsInfo[idx][rCost]*WorkSalary[7], "Покупка квартиры");
				SCMF(playerid, COLOR_WHITE, "Вы купили квартиру за %i рублей.", RoomsInfo[idx][rCost]*WorkSalary[7]);
				SetPlayerPos(playerid,RoomsInfo[idx][rExitX],RoomsInfo[idx][rExitY],RoomsInfo[idx][rExitZ]);
				SetPlayerInterior(playerid,RoomsInfo[idx][rExitI]);
				p_info[playerid][pSpawnChange] = 3;
				MysqlUpdatePlayerInt(playerid, "spawnchange", p_info[playerid][pSpawnChange]);
				SetPlayerVirtualWorld(playerid,RoomsInfo[idx][rExitV]);
				strmid(RoomsInfo[idx][rOwner],p_info[playerid][pName], 0, strlen(p_info[playerid][pName]), MAX_PLAYER_NAME);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ROOMS" SET rOwner = '%s' WHERE id = '%d' LIMIT 1", RoomsInfo[idx][rOwner], idx);
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

				FracBank[9] += RoomsInfo[idx][rCost]*WorkSalary[7];
				MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			}
		}
	case D_PODEZD+4:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerRooms");
			new string[90];
			switch(listitem)
			{
			case 0:
				{
					if(RoomsInfo[i][rLock] == 1)
					{
						RoomsInfo[i][rLock] = 0;
						format(string, 16, "~g~unlock");
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, string, 5000, 6);
						format(string, 90, "%s достал ключи и открыл замок квартиры", p_info[playerid][pName]);
						MeAction(playerid, string);
						SetRoomsInt(i, "rLock", RoomsInfo[i][rLock]);
					}
					else
					{
						if(RoomsInfo[i][rLock] == 1) return SendErr(playerid, "Ваша квартира закрыта");
						RoomsInfo[i][rLock] = 1;
						format(string, 16, "~r~lock");
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, string, 5000, 6);
						format(string, 90, "%s достал ключи и закрыл замок квартиры", p_info[playerid][pName]);
						MeAction(playerid, string);
						SetRoomsInt(i, "rLock", RoomsInfo[i][rLock]);
					}
				}
			case 1: callcmd::rpanel(playerid);
			case 2: ShowPlayerDialogEx(playerid, D_PODEZD+5, 0, "{ebec86}>> Продать квартиру", "{FFFFFF}Вы хотите продать свою квартиру?", "Да", "Нет");
			}
		}
	case D_PODEZD+5:
		{
			if(response)
			{
				new i = GetPVarInt(playerid, "PlayerRooms");
				new string[32];
				strmid(RoomsInfo[i][rOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				RoomsInfo[i][rLock] = 0;
				SetRoomsStr(i, "rOwner", "None");
				RoomsInfo[i][rOplata] = 0;
				SCMF(playerid, COLOR_LIGHTRED, "Вы продали свой дом государству за %d рублей",RoomsInfo[i][rCost]);
				format(string, 32, "The house sold");
				p_info[playerid][pBank] += RoomsInfo[i][rCost];
				MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
				GameTextForPlayer(playerid, string, 3000, 6);
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ROOMS" SET  rOwner = '%s', rLock = %d WHERE id = %d LIMIT 1", RoomsInfo[i][rOwner], RoomsInfo[i][rLock], i);
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			}
		}
	case D_PODEZD+6:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerRooms");
			new string[90];
			RoomsInfo[i][rLock] = 0;
			format(string, 16, "~g~unlock");
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, string, 5000, 6);
			format(string, 90, "%s открывает замок квартиры", p_info[playerid][pName]);
			MeAction(playerid, string);
			SetRoomsInt(i, "rLock", RoomsInfo[i][rLock]);
			return 1;
		}
	case D_SELLHOUSE:
		{
			if(!response) return callcmd::home(playerid);
			new i = GetPVarInt(playerid, "PlayerHouse");
			strmid(HouseInfo[i][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			p_info[playerid][pSpawnChange] = 0;
			MysqlUpdatePlayerInt(playerid, "spawnchange", p_info[playerid][pSpawnChange]);
			MysqlUpdateHouseStr(i, "hOwner", "None");
			HouseInfo[i][hLock] = 1;
			HouseInfo[i][hOplata] = HouseInfo[i][hGarage] = HouseInfo[i][hUpdate] = 0;
			SCMF(playerid, COLOR_RED, "Вы продали свой дом государству за %d руб. Деньги переведены в банк",HouseInfo[i][hBuyPrice]);
			p_info[playerid][pBank] += HouseInfo[i][hBuyPrice];
			MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
			UpdateHouse(i);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HOUSE" SET  hOwner = '%s', buyprice = 0, hLock = %d, hOplata = 0, hGarage = 0, hUpdate = 0 WHERE id = '%d' LIMIT 1", HouseInfo[i][hOwner], HouseInfo[i][hLock], i);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[i][hVirtual])
			{
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz]);
				DeletePVar(playerid, "PlayerHouse");
			}
		}
	case D_SELLHOUSE+1:
		{
			if(response)
			{
				if(!IsPlayerConnected(HouseOffer[playerid])) return SendErr(playerid, "Игрок не в игре");
				if(PlayerLogged[HouseOffer[playerid]] == false) return SendErr(playerid, "Игрок не авторизован");
				if(GetMoney(playerid) < HousePrice[playerid])
				{
					SendErr(HouseOffer[playerid], "У игрока недостаточно средств" ) ;
					HouseOffer[playerid] = -1;
					HousePrice[playerid] = 0;
					return SendErr(playerid, "У вас не хватает денег");
				}

				GiveMoney(HouseOffer[playerid], -HousePrice[playerid], "Обмен домами");

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HOUSE" SET hOwner = '%s', hLock = 1, hOplata = 0 WHERE id = '%d' LIMIT 1", GetName(HouseOffer[playerid]), GetPVarInt(playerid, "PlayerHouse"));
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HOUSE" SET hOwner = '%s', hLock = 1, hOplata = 0 WHERE id = '%d' LIMIT 1", GetName(playerid), GetPVarInt(HouseOffer[playerid], "PlayerHouse"));
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				strmid(HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hOwner],GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				strmid(HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hOwner],GetName(HouseOffer[playerid]), 0, strlen(GetName(HouseOffer[playerid])), MAX_PLAYER_NAME);
				HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hLock] = 1;
				HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hLock] = 1;
				HouseInfo[GetPVarInt(HouseOffer[playerid], "PlayerHouse")][hOplata] = 1;
				HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hOplata] = 1;
				SetPVarInt(playerid, "PlayerHouse", GetPVarInt(HouseOffer[playerid], "PlayerHouse"));
				SetPVarInt(HouseOffer[playerid], "PlayerHouse", GetPVarInt(playerid, "PlayerHouse"));

				SCMF(playerid, COLOR_GREEN, "Вы обменялись домами с %s. Доплата: %d руб", GetName(HouseOffer[playerid]),HousePrice[playerid]);
				SCMF(HouseOffer[playerid], COLOR_GREEN, "Вы обменялись домами с %s. Ваша доплата: %d руб", GetName(playerid),HousePrice[playerid]);
				SendClientMessage(playerid, COLOR_YELLOW, "Ваш домашний счет проплачен на 1 дней, рекомендуем вам оплатить дом");
				SendClientMessage(HouseOffer[playerid], COLOR_YELLOW, "Ваш домашний счет проплачен на 1 дней, рекомендуем вам оплатить дом");
				HouseOffer[playerid] = -1;
				HousePrice[playerid] = 0;
				p_info[playerid][pSpawnChange] = 0;
				MysqlUpdatePlayerInt(playerid, "spawnchange", p_info[playerid][pSpawnChange]);
			}
			else SCMF(HouseOffer[playerid], COLOR_RED, "%s отклонил предложение обменяться домами с вами", GetName(playerid));
		}
	case D_JOINCARS:
		{
			if(!response) return 1;
			if(p_info[playerid][pLic][0] == 0) return SendErr(playerid, "У вас нет водительских прав");
			SendInf(playerid, "Чтобы выйти из меню выбора автомобиля нажмите 'ESC'");
			InShop[playerid] = 1;
			pPressed[playerid] = 0;
			p_info[playerid][SalonCarID] = CreateVehicle(carsC[pPressed[playerid]][0],-358.8557, 379.5386, 1002.1083, -121.3799, 0, 0, 10000);
			
			new info2[50],info3[50];
			format(info2,sizeof(info2),"ЦЕНА: %d РУБЛЕЙ",carsC[pPressed[playerid]][1]*WorkSalary[7]);
			format(info3,sizeof(info3),"НАЗВАНИЕ: %s",VehicleNames[carsC[pPressed[playerid]][0]-400]);

   			PlayerTextDrawSetString(playerid, AutoSalon_Stats[playerid][0], info2);
	    	PlayerTextDrawSetString(playerid, AutoSalon_Stats[playerid][1], info3);
	    	for(new i; i < 2; i++) PlayerTextDrawShow(playerid, AutoSalon_Stats[playerid][i]);
			
			SetPosInShop(playerid);
			ShowAutoSalonMenu(playerid);
			SetPlayerCameraPos(playerid, -353.6695, 372.8126, 1004.4951);
			SetPlayerCameraLookAt(playerid, -354.3768, 373.5177, 1004.3055);
		}
	case D_INVITEFRAC:
		{
			if(!response)
			{
				DeletePVar(playerid, "offerplayer");
				DeletePVar(playerid, "offerfractionid");
				return 1;
			}
			new fractionid = GetPVarInt(playerid, "offerfractionid");
			new offer = GetPVarInt(playerid, "offerplayer");
			new mes[256];
			for(new i; i < 8; i++)
			{
				new skinid = Fraction_Skin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes, sizeof(mes), "Одежда №%d (id %d)", i+1, skinid);
				else format(mes, sizeof(mes), "%s\nОдежда №%d (id %d)", mes, i+1, skinid);
			}
			SendClientMessage(playerid, COLOR_BLUE, "Ждите, пока лидер выберет одежду для Вас");
			ShowPlayerDialogEx(offer, D_INVITESKIN, 2, "{ebec86}>> Выбор скина", mes, "Принять", "");
		}
	case D_INVITESKIN:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid, "actplayerid");
			new fractionid = GetPVarInt(actplayerid, "offerfractionid");
			new skinid = Fraction_Skin[fractionid][listitem];
			SCMF(actplayerid, COLOR_BLUE, "Вы присоединились к организации \"%s\"", Fractions[fractionid][fractionName]);
			p_info[actplayerid][pMember] = fractionid;
			p_info[actplayerid][pRank] = 1;
			p_info[actplayerid][pMemberSkin] = skinid;
			MysqlUpdatePlayerInt(actplayerid, "memberskin", p_info[actplayerid][pMemberSkin]);
			MysqlUpdatePlayerInt(actplayerid, "member", p_info[actplayerid][pMember]);
			MysqlUpdatePlayerInt(actplayerid, "rank", p_info[actplayerid][pRank]);
			SetPlayerSkin(actplayerid, skinid);
			p_info[actplayerid][pJob] = 0;
			MysqlUpdatePlayerInt(actplayerid, "job", p_info[actplayerid][pJob]);
			SetPlayerColorEx(actplayerid, TeamColors[GetTeamID(actplayerid)]);
			AC_ResetPlayerWeapons(actplayerid);
			
			format(STRING_GLOBAL, 256, "{ffffff}%s[%d]{ebec86} Присоединился(ась) к организации. (Пригласил: {ffffff}%s[%d]{ebec86})", GetName(actplayerid), actplayerid, GetName(playerid), playerid);
			SendFMes(p_info[playerid][pMember], 0xa24646FF, STRING_GLOBAL);
			
			format(STRING_GLOBAL, 256, "[%s] %s принял %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), p_info[playerid][pName], GetName(actplayerid));
			WriteLogs(p_info[playerid][pMember], TYPE_LOG_INVITE, STRING_GLOBAL);
			
			new year, month, day,
			fmt_query[70+MAX_PLAYER_NAME];

			getdate(year, month, day);
			format(fmt_query, sizeof fmt_query, "UPDATE accounts SET fraction_date = '%d.%d.%d' WHERE name = '%s'", day, month, year, GetName(actplayerid));
			mysql_query(dbHandle, fmt_query);
			
			Iter_Add(TeamPlayers[GetFracID(actplayerid)], actplayerid);
			
			if(!IsAMafia(actplayerid)) SetWBook(actplayerid);
		}
	case D_WEATHER:
		{
			if(!response) return 1;
			SetWeather(listitem+1);
			SendClientMessage(playerid, COLOR_LIME, "Погода установлена");
		}
	case D_FRACMENU:
		{
			if(!response) return DeletePVar(playerid, "actplayerid");
			SetPVarInt(playerid, "actfraction", listitem+1);
			new fractionid = GetPVarInt(playerid, "actfraction");
			if(fractionid >= 13 && fractionid <= 14)
			{
				DeletePVar(playerid, "actplayerid");
				DeletePVar(playerid, "actfraction");
				return 1;
			}
			new mes[256];
			for(new i; i < 8; i++)
			{
				new skinid = Fraction_Skin[fractionid][i];
				if(!skinid) break;
				if(!i) format(mes, sizeof(mes), "Одежда №%d (id %d)", i+1, skinid);
				else format(mes, sizeof(mes), "%s\nОдежда №%d (id %d)", mes, i+1, skinid);
			}
			ShowPlayerDialogEx(playerid, D_LEADERSKIN, 2, "{ebec86}>> Выбор скина", mes, "Принять", "Отмена");
		}
	case D_LEADERSKIN:
		{
			if(!response)
			{
				DeletePVar(playerid, "actplayerid");
				DeletePVar(playerid, "actfraction");
				return 1;
			}
			new string[128];
			new actplayerid = GetPVarInt(playerid, "actplayerid");
			new fractionid = GetPVarInt(playerid, "actfraction");
			new skinid = Fraction_Skin[fractionid][listitem];
			if(!IsPlayerConnected(actplayerid)) return SendErr(playerid, "Игрок не в игре");
			else if(!PlayerLogged[actplayerid]) return SendErr(playerid, "Игрок не авторизован");
			switch(fractionid)
			{
				case TEAM_ARMY,TEAM_POLICIA,TEAM_POLICIA2,TEAM_SWAT: p_info[actplayerid][pRank] = 10;
				case TEAM_FBI: p_info[actplayerid][pRank] = 10;
				case TEAM_MERIA,TEAM_VDV,TEAM_PRAVO,TEAM_BOLNICA,TEAM_MERIAYJ,TEAM_LVHOSPITAL,TEAM_YAKUZA..TEAM_VAGOS,TEAM_OPG1..TEAM_YAK,TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: p_info[actplayerid][pRank] = 10;
				case TEAM_AUTOSCHOOL: p_info[actplayerid][pRank] = 8;
			}
			p_info[actplayerid][pLeader] = p_info[actplayerid][pMember] = fractionid;
			p_info[actplayerid][pJob] = 0;
			p_info[actplayerid][pSpawnChange] = 2;
			MysqlUpdatePlayerInt(actplayerid, "spawnchange", p_info[actplayerid][pSpawnChange]);
			p_info[actplayerid][pMemberSkin] = skinid;
			SetPlayerSkin(actplayerid, p_info[actplayerid][pMemberSkin]);

			format(string, sizeof string, "UPDATE accounts SET memberskin=%d, leader=%d, member=%d, rank=%d, job=0 WHERE name='%s'", p_info[actplayerid][pMemberSkin], p_info[actplayerid][pLeader], p_info[actplayerid][pMember], p_info[actplayerid][pRank], GetName(actplayerid));
			mysql_query(dbHandle, string);
			
			SetPlayerColorEx(actplayerid, TeamColors[GetTeamID(actplayerid)]);
			Iter_Add(TeamPlayers[GetTeamID(actplayerid)], actplayerid);

			format(string, sizeof(string), "Вы назначили %s лидером организации: %s", GetName(actplayerid), Fractions[fractionid][fractionName]);
			SendClientMessage(playerid, COLOR_LIME, string);
			format(string, sizeof(string), "Администратор %s назначил Вас лидером организации: %s", GetName(playerid), Fractions[fractionid][fractionName]);
			SendClientMessage(actplayerid, COLOR_BLUE, string);
			format(string, sizeof(string), "[{ebec86}A{828282}] %s назначил %s лидером организации \"%s\"", GetName(playerid), GetName(actplayerid), Fractions[fractionid][fractionName]);
			SendAdminMessage(COLOR_ADMIN, string);
			AC_ResetPlayerWeapons(actplayerid);
			
			new year, month, day,
			fmt_query[70+MAX_PLAYER_NAME];

			getdate(year, month, day);
			format(fmt_query, sizeof fmt_query, "UPDATE accounts SET fraction_date = '%d.%d.%d' WHERE name = '%s' LIMIT 1", day, month, year, GetName(actplayerid));
			mysql_query(dbHandle, fmt_query);
			
			format(STRING_GLOBAL, 128, "%s назначил %s лидером %s", GetName(playerid), GetName(actplayerid), Fractions[fractionid][fractionName]);
			WriteLog(TYPE_LOG_MKL, STRING_GLOBAL);
			
			if(!IsAMafia(actplayerid)) SetWBook(actplayerid);
		}
	case D_TEMPLEADER:
		{
			if(!response) return 1;
			new fractionid = listitem+1;
			switch(fractionid)
			{
				case TEAM_ARMY,TEAM_POLICIA,TEAM_POLICIA2,TEAM_SWAT: p_info[playerid][pRank] = 1;
				case TEAM_FBI: p_info[playerid][pRank] = 1;
				case TEAM_MERIA,TEAM_VDV,TEAM_PRAVO,TEAM_BOLNICA,TEAM_MERIAYJ,TEAM_LVHOSPITAL,TEAM_YAKUZA..TEAM_VAGOS,TEAM_OPG1..TEAM_YAK,TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: p_info[playerid][pRank] = 1;
				case TEAM_AUTOSCHOOL: p_info[playerid][pRank] = 1;
				case 13,14: return 1;
			}
			p_info[playerid][pTempLeader] = p_info[playerid][pMember] = fractionid;
			p_info[playerid][pJob] = 0;
			p_info[playerid][pMemberSkin] = GetPlayerSkin(playerid);
			p_info[playerid][pSpawnChange] = 2;
			MysqlUpdatePlayerInt(playerid, "spawnchange", p_info[playerid][pSpawnChange]);
			new string[128];
			format(string, sizeof(string), "Вы тихо вступили в организации: %s", Fractions[fractionid][fractionName]);
			SendClientMessage(playerid, COLOR_LIME, string);
			format(string, sizeof(string), "[{ebec86}A{828282}] %s тихо вступили в организации \"%s\"", GetName(playerid), Fractions[fractionid][fractionName]);
			SendAdminMessage(COLOR_ADMIN, string);
			AC_ResetPlayerWeapons(playerid);
			SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);
			Iter_Add(TeamPlayers[GetTeamID(playerid)], playerid);
			MysqlUpdatePlayerInt(playerid, "templeader", p_info[playerid][pTempLeader]);
			MysqlUpdatePlayerInt(playerid, "memberskin", p_info[playerid][pMemberSkin]);
			MysqlUpdatePlayerInt(playerid, "rank", p_info[playerid][pRank]);
			MysqlUpdatePlayerInt(playerid, "job", p_info[playerid][pJob]);
		}
	case D_FRACMENU+1:
		{
			new targetid = GetPVarInt(playerid, "PlayerRank");
			if(!response) { DeletePVar(playerid, "PlayerRank"); return 1; }
			if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
			if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");
			if(p_info[targetid][pMember] == 0) return SendErr(playerid, "Игрок не находиться в организации!");
			if(p_info[targetid][pLeader] > 0) return SendErr(playerid, "Игрок лидер другой организации!");
			if(p_info[targetid][pMember] != p_info[playerid][pMember]) return SendErr(playerid, "Игрок находиться в другой организации!");
			if(p_info[targetid][pRank] == p_info[playerid][pRank]) return SendErr(playerid, "Заму нельзя назчначить ранг!");
			DeletePVar(playerid, "PlayerRank");
			p_info[targetid][pRank] = listitem+1;
			SCMF(targetid,COLOR_BLUE,"%s %s повысил/понизил ваш ранг. Сейчас вы: %s",GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid),GetRank(p_info[targetid][pMember],p_info[targetid][pRank]));
			SCMF(playerid,COLOR_BLUE,"Вы повысили/понизили ранг %s. Сейчас он/она: %s",GetName(targetid), GetRank(p_info[targetid][pMember],p_info[targetid][pRank]));
			MysqlUpdatePlayerInt(targetid, "rank", p_info[targetid][pRank]);
		}
	case D_FRACMENU+2:
		{
			new targetid = GetPVarInt(playerid, "PlayerRank");
			if(!response) { DeletePVar(playerid, "PlayerRank"); return 1; }
			if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
			if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");
			if(p_info[targetid][pMember] == 0) return SendErr(playerid, "Игрок не находиться в организации!");
			if(p_info[targetid][pLeader] > 0) return SendErr(playerid, "Игрок лидер другой организации!");
			DeletePVar(playerid, "PlayerRank");
			p_info[targetid][pRank] = listitem+1;
			SCMF(targetid,COLOR_BLUE,"Администратор %s повысил/понизил ваш ранг. Сейчас вы: %s",GetName(playerid),GetRank(p_info[targetid][pMember],p_info[targetid][pRank]));
			SCMF(playerid,COLOR_LIME,"Вы повысили/понизили ранг %s. Сейчас он/она: %s",GetName(targetid), GetRank(p_info[targetid][pMember],p_info[targetid][pRank]));
			MysqlUpdatePlayerInt(targetid, "rank", p_info[targetid][pRank]);
		}
	case D_FRACMENU+8:
		{
			if(!response) return 1;
			new actplayerid = GetPVarInt(playerid, "actplayerid");
			new fractionid = p_info[actplayerid][pMember];
			new skinid = Fraction_Skin[fractionid][listitem];
			if(skinid == p_info[actplayerid][pMemberSkin]) return 1;
			new mes[128];
			format(mes,sizeof(mes), "%s выдал(а) Вам новую фракционную одежду", GetName(playerid));
			SendClientMessage(actplayerid, COLOR_BLUE, mes);
			format(mes,sizeof(mes), "%s получил(а) новую фракционную одежду", GetName(actplayerid));
			SendClientMessage(playerid, COLOR_BLUE, mes);
			
			p_info[actplayerid][pMemberSkin] = skinid;
			MysqlUpdatePlayerInt(actplayerid, "memberskin", p_info[actplayerid][pMemberSkin]);
			
			SetPlayerSkin(actplayerid, skinid);
			DeletePVar(playerid, "actplayerid");
		}
	case D_ATM+9:
		{
			if(!response) return 1;
			new Float:x, Float:y, Float:z, Float:angle;
			GetPlayerPos(playerid, x, y, z);
			GetPlayerFacingAngle(playerid, angle);
			x += floatsin(-angle, degrees);
			y += floatcos(-angle, degrees);
			new atm1;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Чтобы выйти, нажмите: ESC и чтобы сохранить, нажмите курсором: СОХРАНИТЬ");
			atm1 = CreateDynamicObject(2942, x, y, z-0.35, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "LoadATM", atm1+1);
			EditDynamicObject(playerid, atm1);
		}
	case D_ATM+5:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					new string[90];
					format(string, 90, "{ffffff}Баланс банковского счёта: {f0e86b}%iр", p_info[playerid][pBank]);
					ShowPlayerDialogEx(playerid, D_NULL, 0, "Баланс", string, "Назад", "");
				}
			case 1: ShowPlayerDialogEx(playerid, D_ATM+7, 1, "Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			case 2: ShowPlayerDialogEx(playerid, D_ATM+8, 1, "Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			case 3:
				{
					if(p_info[playerid][pLevel] >= 5) ShowPlayerDialogEx(playerid, D_LIC+4, 1, "Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
					else SendErr(playerid, "Переводить деньги можно только с 5-го уровня");
				}
			case 4:
				{
					if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "У вас нет дома");
					new h = GetPVarInt(playerid, "PlayerHouse");
					ShowPlayerDialogExPayHouse(playerid, h);
				}
			case 5:
				{
					new b = GetPVarInt(playerid, "PlayerBizz");
					if(GetPlayerBizz(playerid) == 0) return SendErr(playerid, "Вы не владеете бизнесом!");
					new string[128];
					format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %dр", BizzInfo[b][bMoney]);
					ShowPlayerDialogEx(playerid, D_HEAL+21, 1, "Пополнение счета бизнеса", string, "Принять", "Назад");
				}
			case 6:
				{

					new b = GetPVarInt(playerid, "PlayerBizz");
					if(GetPlayerBizz(playerid) == 0) return SendErr(playerid, "Вы не владеете бизнесом!");
					new string[128];
					format(string, sizeof(string), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: %dр", BizzInfo[b][bMoney]);
					ShowPlayerDialogEx(playerid, D_HEAL+213, 1, "Вывод счета с бизнеса", string, "Принять", "Назад");
				}
			}
		}
	case D_ATM+932:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					new string[90];
					format(string, 90, "{ffffff}Баланс банковского счета: {f0e86b}%iр", p_info[playerid][pBank]);
					ShowPlayerDialogEx(playerid, D_NULL, 0, "Баланс", string, "Назад", "");
				}
			case 1: ShowPlayerDialogEx(playerid, D_ATM+12, 1, "Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			case 2: ShowPlayerDialogEx(playerid, D_ATM+11, 1, "Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			case 3:
				{
					if(GetPlayerHouse(playerid) > 0)
					{
						new h = GetPVarInt(playerid, "PlayerHouse");
						ShowPlayerDialogExPayHouse(playerid, h);
					}
					if(GetPlayerRooms(playerid) > 0)
					{
						if(GetPlayerRooms(playerid) == 0) return SendErr(playerid, "У вас нет квартиры!");
						new string[128];
						format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий домашний баланс: %dр", RoomsInfo[GetPVarInt(playerid, "PlayerRooms")][rOplata]);
						ShowPlayerDialogEx(playerid, D_LIC+6, 1, "Пополнение домашнего счета", string, "Принять", "Назад");
					}
					else SendErr(playerid, "У вас нет квартиры/дома!");
				}
			case 4:
				{
					if(GetPlayerBizz(playerid) == 0) return SendErr(playerid, "Вы не владеете бизнесом!");
					new string[128];
					format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %dр", BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bMoney]);
					ShowPlayerDialogEx(playerid, D_HEAL+21, 1, "Пополнение счета бизнеса", string, "Принять", "Назад");
				}
			case 5:
				{
					new string[150];
					if(p_info[playerid][pPhoneNumber] <= 1)
					{
						SendErr(playerid, "У вас нет Sim-Card!");
						return 1;
					}
					new ok=0;
					for(new s = 16; s > 0; s --)
					{
						if(PlayerItem1[playerid][s]==47){ok=s;break;}
					}
					if(ok==0){return SendErr(playerid, "У вас нет телефона");}
					format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {1D99D4}0%%\n\n{FFFFFF}Текущее состояние счёта: {f0e86b}%dр", p_info[playerid][pPhoneBalance]);
					ShowPlayerDialogEx(playerid, D_ATM+1, 1, "Пополнение счета телефона", string, "Принять", "Назад");
				}
			case 6:
				{
					new string[150];
					format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {f0e86b}%dр", p_info[playerid][pCharity]);
					ShowPlayerDialogEx(playerid, D_ATM+4, 1, "Благотворительность", string, "Принять", "Назад");
				}
			}
		}
	case D_ATM+7:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialogEx(playerid, D_ATM+7, 1, "{ebec86}>> Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialogEx(playerid, D_ATM+7, 1, "{ebec86}>> Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(p_info[playerid][pCash] < price) { ShowPlayerDialogEx(playerid, D_ATM+7, 1, "{ebec86}>> Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад"); return SendErr(playerid, "У вас не хватает денег!"); }
            if(p_info[playerid][pBank] + price >= MONEY_LIMIT) return SendErr(playerid, "Вы не можете положить более 2 миллиардов");
			GiveBankMoney(playerid, price, "Пополнение счета (Б)");
			GiveMoney(playerid, -price, "Пополнение счета");
			SCMF(playerid, COLOR_LIME, "Вы положили на счет: %iр. На счету: %iр", price, p_info[playerid][pBank]);
			MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
			return 1;
		}
	case D_ATM+8:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialogEx(playerid, D_ATM+8, 1, "{ebec86}>> Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialogEx(playerid, D_ATM+8, 1, "{ebec86}>> Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(p_info[playerid][pBank] < price) { ShowPlayerDialogEx(playerid, D_ATM+8, 1, "{ebec86}>> Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад"); return SendErr(playerid, "На вашем счету в банке не хватает денег!"); }
			GiveBankMoney(playerid, -price, "Снятие со счета (Б)");
			GiveMoney(playerid, price, "Снятие со счета");
			SCMF(playerid, COLOR_LIME, "Вы сняли со счета: %iр. На счету: %iр", price, p_info[playerid][pBank]);
			MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
			return 1;
		}
	case D_ATM+12:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialogEx(playerid, D_ATM+12, 1, "{ebec86}>> Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialogEx(playerid, D_ATM+12, 1, "{ebec86}>> Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад");
			if(p_info[playerid][pCash] < price) { ShowPlayerDialogEx(playerid, D_ATM+12, 1, "{ebec86}>> Пополнение", "{FFFFFF}Введите количество денег\nна которое хотите пополнить банковский счёт", "Принять", "Назад"); return SendErr(playerid, "У вас не хватает денег!"); }
            if(p_info[playerid][pBank] + price >= MONEY_LIMIT) return SendErr(playerid, "Вы не можете положить более 2 миллиардов");
			GiveBankMoney(playerid, price, "Пополнение счета (Б)");
			GiveMoney(playerid, -price, "Пополнение счета");
			SCMF(playerid, COLOR_LIME, "Вы положили на счет: %iр. На счету: %iр", price, p_info[playerid][pBank]);
			return 1;
		}
	case D_ATM+11:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialogEx(playerid, D_ATM+8, 1, "{ebec86}>> Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(price < 1) return ShowPlayerDialogEx(playerid, D_ATM+8, 1, "{ebec86}>> Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад");
			if(p_info[playerid][pBank] < price) { ShowPlayerDialogEx(playerid, D_ATM+8, 1, "{ebec86}>> Снять со счета", "{FFFFFF}Введите количество денег\nкоторое хотите снять с банковского счёта", "Принять", "Назад"); return SendErr(playerid, "На вашем счету в банке не хватает денег!"); }
			GiveBankMoney(playerid, -price, "Снятие со счета (Б)");
			GiveMoney(playerid, price, "Снятие со счета");
			SCMF(playerid, COLOR_LIME, "Вы сняли со счета: %iр. На счету: %iр", price, p_info[playerid][pBank]);
			return 1;
		}
	case D_NMENU:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
				    if(p_info[playerid][pAdmin] < 1)
					{
					    if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionObwyak])
						{
							format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionObwyak]);
							SendErr(playerid,STRING_GLOBAL);
							return 1;
						}
					}
  					if(Ether[playerid] == true)
       				{
       				    new CB[16], string[128];
       				    Convert(GetPVarInt(playerid,"InEther"));
           				Ether[playerid] = false;
               			SendInf(playerid, "Вы вышли из прямого эфира радиостанции RECORD FM");
               			format(string, 90, "[ОРГАНИЗАЦИЯ]: %s вышел из прямого эфира (Время в эфире: %s, СМС: %i)",GetName(playerid), CB, SmsNews[0]);
						SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, string);
						SmsNews[0] = 0;
						DeletePVar(playerid, "InEther");
                  		return 1;
                   	}
                    if(Ether[playerid] == false)
                   	{
                    	Ether[playerid] = true;
                     	SendInf(playerid, "Вы вошли в прямой эфир радиостанции RECORD FM");
                      	return 1;
                    }
				}
            case 1:
				{
				    if(p_info[playerid][pAdmin] < 1)
					{
					    if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionObwyak])
						{
							format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionObwyak]);
							SendErr(playerid,STRING_GLOBAL);
							return 1;
						}
					}
					if(efir_player == true)
					{
	    				ShowPlayerDialogEx(playerid,D_NMENU+2, DIALOG_STYLE_INPUT, "{ebec86}>> Удаление игрока из эфира", "{FFFFFF}Введите ID игрока", "Выбрать", "Отмена");
					    return 1;
					}
	    			if(efir_player == false)
					{
						ShowPlayerDialogEx(playerid,D_NMENU+1, DIALOG_STYLE_INPUT, "{ebec86}>> Добавление игрока в эфира", "{FFFFFF}Введите ID игрока", "Выбрать", "Отмена");
						return 1;
					}
				}
			case 2:
				{
					if(Ether[playerid] == false) return SendErr(playerid, "Вы должны находиться в прямом эфире");
					new string[90];
					if(EtherSms[0] == false)
					{
						EtherSms[0] = true;
						format(string, 90, "[ОРГАНИЗАЦИЯ]: %s включил прием СМС в студию",GetName(playerid));
						SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, string);
						return 1;
					}
					if(EtherSms[0] == true)
					{
						EtherSms[0] = false;
						format(string, 90, "[ОРГАНИЗАЦИЯ]: %s выключил прием СМС в студию",GetName(playerid));
						SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, string);
						return 1;
					}
				}
			case 3:
				{
				    new dtext[128];
					format(dtext,sizeof(dtext),"{ebec86}>> Баланс. (Рублей: {FFFFFF}%d{ebec86})", FracBank[8]);
	    			ShowPlayerDialogEx(playerid, D_JOB+131, DIALOG_STYLE_LIST, dtext, "1. Снять деньги со счета RECORD FM", "Выбрать", "Отмена");
				}
			case 4: NewsPanel(playerid);
			case 5:
			    {
			        if(p_info[playerid][pLeader] != TEAM_SMI) return 1;
			        ShowPlayerDialogEx(playerid, D_NMENU+4, 2, "{ebec86}>> Панель", "1. Установить цену за звонок\n2. Установить цену за СМС\n3. Установить цену за объявление", "Принять", "Отмена");
			    }
            case 6:
				{
				    if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У Вас бан чата, Вы не можете редактировать объявления");
					if(p_info[playerid][pRank] < 3 && p_info[playerid][pAdmin] < 1) return SendErr(playerid, "Редактирование объявлений доступно с 3 ранга");
					AdvertList(playerid);
				}
			case 7:
			    {
				    if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionCapture])
					{
						format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionCapture]);
						SendErr(playerid,STRING_GLOBAL);
						return 1;
					}
					STRING_GLOBAL = "";
					format(STRING_GLOBAL, 512, "1. Проведение мероприятий: {ebec86}%s (%i){FFFFFF}\n2. Призовой фонд [{ebec86}%i{FFFFFF} рублей]\n3. Изъять оружие\n4. Установить здоровье\n5. Выдать оружие\n6. Выдать приз\n7. Места проведения мероприятий", GetRank(p_info[playerid][pMember],gFractionRank[p_info[playerid][pMember] - 1][fractionCapture]),gFractionRank[p_info[playerid][pMember] - 1][fractionCapture], fond_mp);
					ShowPlayerDialogEx(playerid, D_NMENU+14, 2, "{ebec86}>> Меню мероприятий", STRING_GLOBAL, "Принять", "Отмена");
			    }
			}
		}
    case D_NMENU+12:
		{
			if(!response) return 1;
			new targetid;
            if(fond_mp == 0) return SendErr(playerid, "Фонд мероприятия ничему не равен");
			if(sscanf(inputtext, "u",targetid)) ShowPlayerDialogEx(playerid, D_NMENU+12, 1, "{ebec86}>> Выдача приза", "{FFFFFF}Введите ID игрока:", "Принять", "Отмена");
			if(targetid == playerid) return SendErr(playerid, "Вы не можете выдать приз себе");
			if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
			if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");

			format(STRING_GLOBAL, 128, "< RECORD FM >{FFFFFF} победителем мероприятия становится: %s. Приз: %d", p_info[targetid][pName], fond_mp);
			LSNews(0x00D3F6AA, STRING_GLOBAL);
			
			GiveMoney(playerid, floatround(fond_mp/80), "Процент с МП");
			GiveMoney(targetid, fond_mp, "Приз на МП");
			fond_mp = 0;
			return 1;
		}
    case D_NMENU+14:
        {
            if(!response) return 1;
            switch(listitem)
			{
			    case 0:
			    {
			        if(p_info[playerid][pLeader] < 1) return SendErr(playerid, "Вам недоступен данный раздел");
				   	STRING_GLOBAL = "";
					for(new i=1; i<=FractionRank[p_info[playerid][pMember]-1]-1; i++)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%i. %s%s\n", STRING_GLOBAL,i,(i==gFractionRank[p_info[playerid][pMember]-1][5-1])?("{ebec86}"):(""cWHITE""),GetRank(p_info[playerid][pMember],i));
					}
					SetPVarInt(playerid,"leader_rank", 5);
					ShowPlayerDialogEx(playerid, dLeaderRank, DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать", "Закрыть");
			    }
			    case 1:
			    {
					if(mp_start == 1)
					{
					    SendInf(playerid, "Вы закрыли доступность призового фонда");
					    mp_start = 0;
					    return 1;
					}
					if(mp_start == 0)
					{
					    SendInf(playerid, "Вы открыли призовой фонд, пополнять его могут игроки в банке");
					    mp_start = 1;
					    return 1;
					}
			    }
				case 2:
				{
				    if(PlayerToPoint(100.0, playerid, -198.8310, 466.4834, 12.8838) || PlayerToPoint(100.0, playerid, 1846.5176, 2465.9861, 16.5703)  || PlayerToPoint(100.0, playerid, 944.5037, -470.5076, 4.1441))
					{
					    new Float:pos[3];
						GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
						foreach(new i : Player)
						{
							if(!IsPlayerInRangeOfPoint(i, 50, pos[0],pos[1],pos[2])) continue;
							AC_ResetPlayerWeapons(i);
							SendClientMessage(i, COLOR_YELLOW, "* Репортер забрал у Вас оружие");
						}
						SendClientMessage(playerid, COLOR_YELLOW, "* Вы успешно забрали оружие у игроков");
					}
					else SendErr(playerid, "Вы должны находиться на месте проведения мероприятия");
				}
				case 3:
				{
				    if(PlayerToPoint(100.0, playerid, -198.8310, 466.4834, 12.8838) || PlayerToPoint(100.0, playerid, 1846.5176, 2465.9861, 16.5703)  || PlayerToPoint(100.0, playerid, 944.5037, -470.5076, 4.1441))
					{
					    new Float:pos[3];
						GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
						foreach(new i : Player)
						{
							if(!IsPlayerInRangeOfPoint(i, 50, pos[0],pos[1],pos[2])) continue;
							SetHealth(i, 100);
							SetArmour(i, 0);
							SendClientMessage(i, COLOR_YELLOW, "* Репортер изменил Вам уровень здоровья");
						}
						SendClientMessage(playerid, COLOR_YELLOW, "* Вы успешно изменили HP игрокам в радиусе");
					}
                    else SendErr(playerid, "Вы должны находиться на месте проведения мероприятия");
				}
				case 4:
				{
				    if(PlayerToPoint(100.0, playerid, -198.8310, 466.4834, 12.8838) || PlayerToPoint(100.0, playerid, 1846.5176, 2465.9861, 16.5703)  || PlayerToPoint(100.0, playerid, 944.5037, -470.5076, 4.1441))
					{
				    	ShowPlayerDialogEx(playerid, D_NMENU+13, 2, "{ebec86}>> Выдать оружие", "1. Desert Eagle\n2. ShotGun\n3. M4\n4. AK-47\n5. Снайперская винтовка", "Выдать", "Отмена");
					}
					else SendErr(playerid, "Вы должны находиться на месте проведения мероприятия");
				}
				case 5:
				{
				   	ShowPlayerDialogEx(playerid,D_NMENU+12, DIALOG_STYLE_INPUT, "{ebec86}>> Выдача приза", "{FFFFFF}Введите ID игрока", "Выбрать", "Отмена");
				}
				case 6:
				{
				    ShowPlayerDialogEx(playerid, D_NMENU+16, 2, "{ebec86}>> Выдать оружие", "1. Стадион г. Арзамас\n2. Танцпол пгт. Батырево\n3. Ферма г. Арзамас", "Выдать", "Отмена");
				}
			}
        }
        case D_NMENU+16:
        {
            if(!response) return 1;
            switch(listitem)
            {
                case 0: GPSPlayer_(playerid, -198.8310, 466.4834, 12.8838, "Стадион");
                case 1: GPSPlayer_(playerid, 1846.5176, 2465.9861, 16.5703, "Танцпол");
                case 2: GPSPlayer_(playerid, 944.5037, -470.5076, 4.1441, "Ферма");
            }
		}
        case D_NMENU+13:
        {
            if(!response) return 1;
            switch(listitem)
			{
			    case 0:
			    {
			        new Float:pos[3];
					GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
					new string[144];
					new players;
					foreach(new i : Player)
					{
						if(!IsPlayerInRangeOfPoint(i, 50, pos[0], pos[1], pos[2])) continue;
						AC_GivePlayerWeapon(i, 24, 100);
						SendClientMessage(i, COLOR_YELLOW, "* Вы получили Desert Eagle с 100 патронами");
						players++;
					}
					format(string, sizeof string, "* Оружие выдано %i игрокам в радиусе 50 метров", players);
					SendClientMessage(playerid, COLOR_YELLOW, string);
			    }
			    case 1:
			    {
			        new Float:pos[3];
					GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
					new string[144];
					new players;
					foreach(new i : Player)
					{
						if(!IsPlayerInRangeOfPoint(i, 50, pos[0], pos[1], pos[2])) continue;
						AC_GivePlayerWeapon(i, 25, 100);
						SendClientMessage(i, COLOR_YELLOW, "* Вы получили ShotGun с 100 патронами");
						players++;
					}
					format(string, sizeof string, "* Оружие выдано %i игрокам в радиусе 50 метров", players);
					SendClientMessage(playerid, COLOR_YELLOW, string);
			    }
			    case 2:
			    {
			        new Float:pos[3];
					GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
					new string[144];
					new players;
					foreach(new i : Player)
					{
						if(!IsPlayerInRangeOfPoint(i, 50, pos[0], pos[1], pos[2])) continue;
						AC_GivePlayerWeapon(i, 31, 300);
						SendClientMessage(i, COLOR_YELLOW, "* Вы получили M4 с 300 патронами");
						players++;
					}
					format(string, sizeof string, "* Оружие выдано %i игрокам в радиусе 50 метров", players);
					SendClientMessage(playerid, COLOR_YELLOW, string);
			    }
			    case 3:
			    {
			        new Float:pos[3];
					GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
					new string[144];
					new players;
					foreach(new i : Player)
					{
						if(!IsPlayerInRangeOfPoint(i, 50, pos[0], pos[1], pos[2])) continue;
						AC_GivePlayerWeapon(i, 30, 300);
						SendClientMessage(i, COLOR_YELLOW, "* Вы получили Ak-47 с 300 патронами");
						players++;
					}
					format(string, sizeof string, "* Оружие выдано %i игрокам в радиусе 50 метров", players);
					SendClientMessage(playerid, COLOR_YELLOW, string);
			    }
			    case 4:
			    {
			        new Float:pos[3];
					GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
					new string[144];
					new players;
					foreach(new i : Player)
					{
						if(!IsPlayerInRangeOfPoint(i, 50, pos[0], pos[1], pos[2])) continue;
						AC_GivePlayerWeapon(i, 34, 50);
						SendClientMessage(i, COLOR_YELLOW, "* Вы получили Снайперскую винтовку с 50 патронами");
						players++;
					}
					format(string, sizeof string, "* Оружие выдано %i игрокам в радиусе 50 метров", players);
					SendClientMessage(playerid, COLOR_YELLOW, string);
			    }
			}
		}
	case D_NMENU+1:
		{
			if(!response) return 1;
			new targetid;
			if(sscanf(inputtext, "u",targetid)) ShowPlayerDialogEx(playerid, D_NMENU+1, 1, "{ebec86}>> Добавление игрока в эфира", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
			if(targetid == playerid) return SendErr(playerid, "Вы не можете пригласить себя");
			if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
			if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");
			if(IsPlayerInAnyVehicle(playerid)&&!IsPlayerInVehicle(targetid, GetPlayerVehicleID(playerid)) || !IsPlayerInAnyVehicle(playerid) && !IsPlayerInRangeOfPlayer(10.0, playerid, targetid)) return SendErr(playerid, "Игрок должен находиться с вами в транспорте!");
			if(EtherLive[targetid] == true) return SendErr(playerid, "Игрок уже в прямом эфире");
			efir_player = true;
			EtherLive[targetid] = true;
			SetPVarInt(targetid, "Etherfrac", p_info[playerid][pMember]);
			SCMF(playerid, COLOR_LIGHTBLUE, "Вы пригласили в эфир: %s", GetName(targetid));
			SCMF(targetid, COLOR_LIGHTBLUE, "%s пригласил вас в эфир", GetName(playerid));
		}
	case D_NMENU+2:
		{
			if(!response) return 1;
			new targetid;
			if(sscanf(inputtext, "u",targetid)) ShowPlayerDialogEx(playerid, D_NMENU+2, 1, "{ebec86}>> Удаление игрока из эфира", "{FFFFFF}Введите ID или имя игрока:", "Принять", "Отмена");
			if(targetid == playerid) return SendErr(playerid, "Вы не можете выпроводить себя");
			if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
			if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");
			if(IsPlayerInAnyVehicle(playerid)&&!IsPlayerInVehicle(targetid, GetPlayerVehicleID(playerid)) || !IsPlayerInAnyVehicle(playerid) && !IsPlayerInRangeOfPlayer(10.0, playerid, targetid)) return SendErr(playerid, "Игрок должен находиться с вами в транспорте!");
			if(EtherLive[targetid] == false) return SendErr(playerid, "Игрок не находиться в прямом эфире");
			EtherLive[targetid] = false;
			efir_player = false;
			DeletePVar(targetid, "Etherfrac");
			SCMF(playerid, COLOR_LIGHTRED, "Вы выпроводили из эфира: %s", GetName(targetid));
			SCMF(targetid, COLOR_LIGHTRED, "%s выпроводил вас из эфира", GetName(playerid));
		}
	case D_NMENU+4:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialogEx(playerid, D_NMENU+9, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за {f0e86b}1{FFFFFF} секунду разговора по телефону\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от {f0e86b}1{FFFFFF} руб. до {f0e86b}3{FFFFFF} руб.", "Принять", "Отмена");
				case 1: ShowPlayerDialogEx(playerid, D_NMENU+10, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за СМС\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от {f0e86b}10{FFFFFF} руб. до {f0e86b}20{FFFFFF} руб.", "Принять", "Отмена");
				case 2: ShowPlayerDialogEx(playerid, D_NMENU+11, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за {f0e86b}1{FFFFFF} символ объявления\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от {f0e86b}5{FFFFFF} руб. до {f0e86b}50{FFFFFF} руб.", "Принять", "Отмена");//убрать
			}
		}
	case D_NMENU+5:
		{
			if(!response) return 1;
			DeletePVar(playerid, "AdvertID");
			SetPVarInt(playerid, "AdvertID", listitem+1);
			ShowPlayerDialogEx(playerid, D_NMENU+6, 2, "{ebec86}>> Объявления", "1. Прочитать объявление\n2. Редактировать объявление\n3. Удалить объявление\n4. Отправить объявление\n5. Отправить администрации", "Принять", "Назад");
		}
	case D_NMENU+6:
		{
			if(!response) { DeletePVar(playerid, "AdvertID"); return AdvertList(playerid); }
			new full = 0;
			if(p_info[playerid][pAdmin] > 0) full = 0;
			else full = (p_info[playerid][pMember] == TEAM_SMI) ? (0) : (p_info[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
			new string[150];
			switch(listitem)
			{
			case 0:
				{

					format(string, sizeof(string), "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
					ShowPlayerDialogEx(playerid, D_NMENU+7, 0, "{ebec86}>> Объявления", string, "Назад", "");
				}
			case 1:
				{
					format(string, sizeof(string), "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
					ShowPlayerDialogEx(playerid, D_NMENU+8, 1, "{ebec86}>> Объявления", string, "Принять", "Назад");
				}
			case 2:
				{
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
						strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
						strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
					if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Объявление удалено");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			case 3:
				{
					if(AdvertTime > gettime())
					{
						DeletePVar(playerid, "AdvertID");
						SendErr(playerid, "Отправлять объявление можно раз в 30 секунд");
						return AdvertList(playerid);
					}
					format(string, sizeof(string), "%s. Отправитель: %s (тел.: %i)",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aPhone]);
					SendClientMessageToAll(COLOR_GREEN, string);
					if(p_info[playerid][pAdmin] < 1)
					{
						format(string, sizeof(string), "Проверил(а) объявление %s: %s",GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid));
						SendClientMessageToAll(0x4BA85DFF, string);
					}
					else
					{
					    format(string, sizeof(string), "Проверил(а) объявление администратор: %s", GetName(playerid));
						SendAdminMessage(COLOR_ADMIN, string);
					}
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
						strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
						strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
					if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					AdvertTime = gettime() + 30;
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
					SetPVarInt(playerid, "advert_count", GetPVarInt(playerid, "advert_count") + 1);
				}
			case 4:
				{
					format(string, sizeof(string), "[AD] %s: %s Редактор: %s", AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName], AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText], GetName(playerid));
					SendAdminMessage(COLOR_YELLOW, string);
					for(new i = GetPVarInt(playerid, "AdvertID"); i <= TOTALADVERT[full] - 1; i++)
					{
						AdvertInfo[i][full][aPhone] = AdvertInfo[i+1][full][aPhone];
						strmid(AdvertInfo[i][full][aText],AdvertInfo[i+1][full][aText],0,strlen(AdvertInfo[i+1][full][aText]), 128);
						strmid(AdvertInfo[i][full][aName],AdvertInfo[i+1][full][aName],0,strlen(AdvertInfo[i+1][full][aName]), MAX_PLAYER_NAME);
					}
					if(TOTALADVERT[full] > 0) TOTALADVERT[full]--;
					SendClientMessage(playerid, COLOR_LIGHTRED, "Объявление отправлено администрации");
					DeletePVar(playerid, "AdvertID");
					AdvertList(playerid);
				}
			}

		}
	case D_NMENU+7: ShowPlayerDialogEx(playerid, D_NMENU+6, 2, "{ebec86}>> Объявления", "1. Прочитать объявление\n2. Редактировать объявление\n3. Удалить объявление\n4. Отправить объявление\n5. Отправить администрации", "Принять", "Назад");
	case D_NMENU+8:
		{
			if(!response) return ShowPlayerDialogEx(playerid, D_NMENU+6, 2, "{ebec86}>> Объявления", "1. Прочитать объявление\n2. Редактировать объявление\n3. Удалить объявление\n4. Отправить объявление\n5. Отправить администрации", "Принять", "Назад");
			new full = 0;
			if(p_info[playerid][pAdmin] > 0) full = 0;
			else full = (p_info[playerid][pMember] == TEAM_SMI) ? (0) : (p_info[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
			new text[128];
			if(sscanf(inputtext, "s[128]",text))
			{
				new string[128];
				format(string, 128, "{FFFFFF}Текст: %s - Прислал: %s",AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aName]);
				return ShowPlayerDialogEx(playerid, D_NMENU+8, 1, "Объявления", string, "Принять", "Назад");
			}
			strmid(AdvertInfo[GetPVarInt(playerid, "AdvertID")][full][aText],text,0,strlen(text),sizeof(text));
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Объявление отредактировано и сохранено");
			ShowPlayerDialogEx(playerid, D_NMENU+6, 2, "{ebec86}>> Объявления", "1. Прочитать объявление\n2. Редактировать объявление\n3. Удалить объявление\n4. Отправить объявление\n5. Отправить администрации", "Принять", "Назад");
		}
	case D_NMENU+9:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialogEx(playerid, D_NMENU+9, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за 1 секунду в эфире\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 1р до 3р", "Принять", "Отмена");
			if(price < 1 || price > 3) return ShowPlayerDialogEx(playerid, D_NMENU+9, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за 1 секунду в эфире\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 1р до 3р", "Принять", "Отмена");
			CallPrice[0] = price;
			SCMF(playerid, COLOR_LIGHTGREEN, "Цена за 1 секунду в эфире: %iр", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			MysqlUpdateOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+10:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialogEx(playerid, D_NMENU+10, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за СМС\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 10р до 20р", "Принять", "Отмена");
			if(price < 10 || price > 20) return ShowPlayerDialogEx(playerid, D_NMENU+10, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за СМС\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 10р до 20р", "Принять", "Отмена");
			SmsPrice[0] = price;
			SCMF(playerid, COLOR_LIGHTGREEN, "Цена за СМС: %iр", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			MysqlUpdateOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+11:
		{
			if(!response) return 1;
			new price;
			if(sscanf(inputtext, "i",price)) return ShowPlayerDialogEx(playerid, D_NMENU+11, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за 1 символ объявления\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 5р до 10р", "Принять", "Отмена");
			if(price < 5 || price > 50) return ShowPlayerDialogEx(playerid, D_NMENU+11, 1, "{ebec86}>> Панель", "{FFFFFF}Введите цену за 1 символ объявления\n\n{FFFF00}Примечание:\n{FFFFFF}Цена может быть от 5р до 50р", "Принять", "Отмена");//убрать 10
			AdvertPrice[0] = price;
			SCMF(playerid, COLOR_LIGHTGREEN, "Цена за 1 символ объявления: %iр", price);
			format(NewsPrice, sizeof(NewsPrice),"%i, %i, %i, %i, %i, %i", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
			MysqlUpdateOtherStr("newsprice", NewsPrice);
		}
	case D_NMENU+15:
		{
			if(!response) return 1;
			new color[2], model, frac, fam, status, Float:x, Float:y, Float:z, Float:angle;
			if(sscanf(inputtext,"p<,>iiiii",model, color[0], color[1], frac, status)) return ShowPlayerDialogEx(playerid, D_NMENU+15,1, "{ebec86}>> Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(model < 400 || model > 611) return ShowPlayerDialogEx(playerid, D_NMENU+15, 1, "{ebec86}>> Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(color[0] < 0 || color[0] > 252) return ShowPlayerDialogEx(playerid, D_NMENU+15, 1, "{ebec86}>> Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(color[1] < 0 || color[1] > 252) return ShowPlayerDialogEx(playerid, D_NMENU+15, 1, "{ebec86}>> Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(frac < 0 || frac > MAX_FRACTIONS-1) return ShowPlayerDialogEx(playerid, D_NMENU+15, 1, "{ebec86}>> Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
//            if(fam < 0 || fam > MAX_FAMILY-1) return ShowPlayerDialogEx(playerid, D_NMENU+15, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			GetPlayerFacingAngle(playerid,angle);
			GetPlayerPos(playerid, x, y, z);
			new carid = CreateVehicle(model, x, y, z, angle, color[0], color[1], 90000);
			PutPlayerInVehicle(playerid, carid, 0);
			LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			SetPVarInt(playerid, "AddVehicleFrac", carid);
			format(coordv, sizeof(coordv), "%i, %i, %i, %i, %i, %i, %i, %i", model, color[0], color[1], frac, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid), status, fam);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Тест транспорт создан. Установить координаты: /vpc");
		}
	case D_LIC+1:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			if(IsPlayerInRangeOfPlayer(15.0, playerid, GetPVarInt(playerid, "LicName")))
			{
				new text[32];
				switch(listitem)
				{
				case 0: text = "водительские права";
				case 1: text = "лицензию на судоходство";
				case 2: text = "лицензию на полеты";
				case 3: text = "лицензию на оружие";
				case 4: text = "патроны";
				case 5: text = "";
				case 6: text = "наркотики";
				case 7: text = "паспорт";
				case 8: text = "мед. карту";
				}
				if(listitem >= 0 && listitem < 4)
				{
					if(!p_info[GetPVarInt(playerid, "LicName")][pLic][listitem]) return SendErr(playerid, "У игрока нет этой лицензии");
					p_info[GetPVarInt(playerid, "LicName")][pLic][listitem] = 0;
					if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName")) && listitem < 3) RemovePlayerFromVehicle(GetPVarInt(playerid, "LicName"));
					SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
					SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), text);

					format(p_info[GetPVarInt(playerid, "LicName")][pLics],16,"%i, %i, %i, %i",p_info[GetPVarInt(playerid, "LicName")][pLic][0],p_info[GetPVarInt(playerid, "LicName")][pLic][1],p_info[GetPVarInt(playerid, "LicName")][pLic][2],p_info[GetPVarInt(playerid, "LicName")][pLic][3]);
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE name='%s'", p_info[GetPVarInt(playerid, "LicName")][pLics], GetName(GetPVarInt(playerid, "LicName")));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				else
				{
					if(listitem == 4)
					{
						if(!p_info[GetPVarInt(playerid, "LicName")][pPatron]) return SendErr(playerid, "У игрока нет патрон");
						p_info[GetPVarInt(playerid, "LicName")][pPatron] = 0;
						MysqlUpdatePlayerInt(GetPVarInt(playerid, "LicName"), "patron", p_info[GetPVarInt(playerid, "LicName")][pPatron]);
						SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
						SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), text);
					}
					if(listitem == 5)
					{
						if(!p_info[GetPVarInt(playerid, "LicName")][pGunAmount]) return SendErr(playerid, "У игрока нет металла");
						p_info[GetPVarInt(playerid, "LicName")][pGunAmount] = 0;
						MysqlUpdatePlayerInt(GetPVarInt(playerid, "LicName"), "gunamount", p_info[GetPVarInt(playerid, "LicName")][pGunAmount]);
						SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
						SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), text);
					}
					if(listitem == 6)
					{
						if(!p_info[GetPVarInt(playerid, "LicName")][pDrugs]) return SendErr(playerid, "У игрока нет наркотиков");
						p_info[GetPVarInt(playerid, "LicName")][pDrugs] = 0;
						MysqlUpdatePlayerInt(GetPVarInt(playerid, "LicName"), "drugs", p_info[GetPVarInt(playerid, "LicName")][pDrugs]);
						SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
						SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), text);
					}
					if(listitem == 7)
					{
						if(!PhoneNumbers[GetPVarInt(playerid, "LicName")][1]) return SendErr(playerid, "У игрока нет паспорта");
						PhoneNumbers[GetPVarInt(playerid, "LicName")][1] = 0;
						SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
						SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), text);
					}
					if(listitem == 8)
					{
						if(!PhoneNumbers[GetPVarInt(playerid, "LicName")][2]) return SendErr(playerid, "У игрока нет паспорта");
						PhoneNumbers[GetPVarInt(playerid, "LicName")][2] = 0;
						SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
						SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "%s %s забрал у вас %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), text);
					}
				}
			}
			else SendErr(playerid, "Игрок слишком далеко!");
			DeletePVar(playerid, "LicName");
		}
	case D_LIC+2:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			new fmt_str[144];
			new to_player = GetPVarInt(playerid, "LicName");

			switch(listitem)
			{
			case 0:
				{
					p_info[to_player][pLic][0] = 1;
					format(fmt_str, sizeof fmt_str, "Администратор %s выдал Вам водительские права", GetName(playerid));
					SendClientMessage(to_player, COLOR_LIGHTBLUE, fmt_str);

					format(fmt_str, sizeof fmt_str, "Вы выдали %s водительские права", GetName(to_player));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, fmt_str);
				}
			case 1:
				{
					p_info[to_player][pLic][1] = 1;
					format(fmt_str, sizeof fmt_str, "Администратор %s выдал Вам лицензию на судоходство", GetName(playerid));
					SendClientMessage(to_player, COLOR_LIGHTBLUE, fmt_str);

					format(fmt_str, sizeof fmt_str, "Вы выдали %s лицензию на судоходство", GetName(to_player));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, fmt_str);
				}
			case 2:
				{
					p_info[to_player][pLic][2] = 1;
					format(fmt_str, sizeof fmt_str, "Администратор %s выдал Вам лицензию на полеты", GetName(playerid));
					SendClientMessage(to_player, COLOR_LIGHTBLUE, fmt_str);

					format(fmt_str, sizeof fmt_str, "Вы выдали %s лицензию на полеты", GetName(to_player));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, fmt_str);
				}
			case 3:
				{
					p_info[to_player][pLic][3] = 1;
					format(fmt_str, sizeof fmt_str, "Администратор %s выдал Вам лицензию на оружие", GetName(playerid));
					SendClientMessage(to_player, COLOR_LIGHTBLUE, fmt_str);

					format(fmt_str, sizeof fmt_str, "Вы выдали %s лицензию на оружие", GetName(to_player));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, fmt_str);
				}
			case 4:
				{
					if(GetPlayerBizz(to_player) == 0)
					return SendErr(playerid, "Игрок не имеет бизнеса!");

					new i = GetPVarInt(to_player, "PlayerBizz");
					BizzInfo[i][bLic] = 1;
					MysqlUpdateBizzInt(i, "lic", BizzInfo[i][bLic]);

					format(fmt_str, sizeof fmt_str, "Администратор %s выдал Вам лицензию на бизнес", GetName(playerid));
					SendClientMessage(to_player, COLOR_LIGHTBLUE, fmt_str);

					format(fmt_str, sizeof fmt_str, "Вы выдали %s лицензию на бизнес", GetName(to_player));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, fmt_str);
				}
			case 5:
				{
					for(new i; i < 4; i++) p_info[playerid][pLic][i] = 1;

					format(fmt_str, sizeof fmt_str, "Администратор %s выдал Вам комплект лицензий", GetName(playerid));
					SendClientMessage(to_player, COLOR_LIGHTBLUE, fmt_str);

					format(fmt_str, sizeof fmt_str, "Вы выдали %s комплект лицензий", GetName(to_player));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, fmt_str);
				}
			}

			format(p_info[to_player][pLics],16,"%i, %i, %i, %i",p_info[to_player][pLic][0],p_info[to_player][pLic][1],p_info[to_player][pLic][2],p_info[to_player][pLic][3]);
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE name='%s'", p_info[to_player][pLics], GetName(to_player));
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			SetPlayerSkills(playerid);
		}
	case D_LIC+3:
		{
			if(!response) return DeletePVar(playerid, "LicName");
			new text[32];
			switch(listitem)
			{
			case 0: text = "водительские права";
			case 1: text = "лицензию на судоходство";
			case 2: text = "лицензию на полеты";
			case 3: text = "лицензию на оружие";
			case 4: text = "паспорт";
			case 5: text = "мед. карту";
			}
			if(listitem >= 0 && listitem < 4)
			{
				if(!p_info[GetPVarInt(playerid, "LicName")][pLic][listitem]) return SendErr(playerid, "У игрока нет этой лицензии");
				p_info[GetPVarInt(playerid, "LicName")][pLic][listitem] = 0;
				if(IsPlayerInAnyVehicle(GetPVarInt(playerid, "LicName")) && listitem < 3) RemovePlayerFromVehicle(GetPVarInt(playerid, "LicName"));
				SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
				SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s забрал у вас %s",GetName(playerid), text);

				format(p_info[GetPVarInt(playerid, "LicName")][pLics],16,"%i, %i, %i, %i",p_info[GetPVarInt(playerid, "LicName")][pLic][0],p_info[GetPVarInt(playerid, "LicName")][pLic][1],p_info[GetPVarInt(playerid, "LicName")][pLic][2],p_info[GetPVarInt(playerid, "LicName")][pLic][3]);
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE name='%s'", p_info[GetPVarInt(playerid, "LicName")][pLics], GetName(GetPVarInt(playerid, "LicName")));
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			}
			else
			{
				if(listitem == 5)
				{
					if(!PhoneNumbers[GetPVarInt(playerid, "LicName")][1]) return SendErr(playerid, "У игрока нет паспорта");
					PhoneNumbers[GetPVarInt(playerid, "LicName")][1] = 0;
					SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
					SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s забрал у вас %s",GetName(playerid), text);
				}
				if(listitem == 6)
				{
					if(!PhoneNumbers[GetPVarInt(playerid, "LicName")][2]) return SendErr(playerid, "У игрока нет паспорта");
					PhoneNumbers[GetPVarInt(playerid, "LicName")][2] = 0;
					SCMF(playerid, COLOR_LIGHTBLUE, "Вы забрали %s у %s", text, GetName(GetPVarInt(playerid, "LicName")));
					SCMF(GetPVarInt(playerid, "LicName"), COLOR_LIGHTBLUE, "Администратор %s забрал у вас %s",GetName(playerid), text);
				}
			}
		}
	case D_LIC+4:
		{
			if(!response) return 1;
			new targetid, price;
			if(sscanf(inputtext, "ui", targetid, price)) return ShowPlayerDialogEx(playerid, D_LIC+4, 1, "{ebec86}>> Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
			if(!IsPlayerConnected(targetid))
			{
				ShowPlayerDialogEx(playerid, D_LIC+4, 1, "{ebec86}>> Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
				return SendErr(playerid, "Игрок не в игре");
			}
			if(PlayerLogged[targetid] == false)
			{
				ShowPlayerDialogEx(playerid, D_LIC+4, 1, "{ebec86}>> Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
				return SendErr(playerid, "Игрок не авторизован");
			}
			if(p_info[playerid][pBank] < price)
			{
				ShowPlayerDialogEx(playerid, D_LIC+4, 1, "{ebec86}>> Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
				return SendErr(playerid, "На вашем счету в банке не хватает денег");
			}
			if(p_info[targetid][pBank]+price >= MONEY_LIMIT)
			{
				ShowPlayerDialogEx(playerid, D_LIC+4, 1, "{ebec86}>> Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
				return SendErr(playerid, "У игрока на банковском счете не может более 2 миллиардов");
			}
			if(price < 1) return ShowPlayerDialogEx(playerid, D_LIC+4, 1, "{ebec86}>> Перевод", "{FFFFFF}Введите ID или имя игрока и количество денег через запятую\n\nПример: Ivan_Ivanov, 10000", "Принять", "Назад");
			GiveBankMoney(playerid, -price, "Получение (Б)");
			GiveBankMoney(targetid, price, "Перевод (Б)");
			SCMF(playerid, COLOR_WHITE, "Вы перевели %dр игроку %s[%d] на счет", price, GetName(targetid), playerid);
			SCMF(targetid, COLOR_WHITE, "Вам поступил перевод на ваш счет в размере %dр от игрока %s[%d]", price, GetName(playerid), playerid);
		}
	case D_LIC+5:
		{
			if(!response) return 1;
			new pay_days, fmt_msg[128];

			new h = GetPVarInt(playerid, "PlayerHouse");
			if(sscanf(inputtext, "i", pay_days))
			{
				ShowPlayerDialogExPayHouse(playerid, h);
			}
			if(pay_days > 0 && isNumeric(inputtext))
			{
				if((pay_days + HouseInfo[h][hOplata]) > 10)
				return SendErr(playerid, "Вы не можете оплатить проживание более чем на 10 дней");

				if(GetMoney(playerid) < (pay_days * GetHomeOplata(h)))
				{
					SendErr(playerid, "У Вас недостаточно средств для оплаты");

					format(fmt_msg, sizeof fmt_msg, "Для оплаты проживания на %d дней необходимо %d руб", pay_days, pay_days * GetHomeOplata(h));
					return SendErr(playerid, fmt_msg);
				}
				else
				{
					HouseInfo[h][hOplata] += pay_days;
					MysqlUpdateHouseInt(h, "hOplata", HouseInfo[h][hOplata]);

					GiveMoney(playerid, -pay_days * GetHomeOplata(h), "Оплата дома");

					format(fmt_msg, sizeof fmt_msg, "Вы успешно оплатили проживание в доме ещё на {00CCFF}%d дней", pay_days);
					return SendClientMessage(playerid, 0x99FF00FF, fmt_msg);
				}
			}
		}
	case D_LIC+6:
		{
			if(!response) return 1;
			new price, string[128];
			new h = GetPVarInt(playerid, "PlayerRooms");
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий домашний баланс: %dр", RoomsInfo[h][rOplata]);
				return ShowPlayerDialogEx(playerid, D_LIC+6, 1, "{ebec86}>> Пополнение домашнего счета", string, "Принять", "Назад");
			}
			if(price < 1 || price > 99999)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий домашний баланс: %dр", RoomsInfo[h][rOplata]);
				return ShowPlayerDialogEx(playerid, D_LIC+6, 1, "{ebec86}>> Пополнение домашнего счета", string, "Принять", "Назад");
			}
			if(p_info[playerid][pBank] < price)
			{
				SendErr(playerid, "На вашем счету в банке не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий домашний баланс: %dр", RoomsInfo[h][rOplata]);
				return ShowPlayerDialogEx(playerid, D_LIC+6, 1, "{ebec86}>> Пополнение домашнего счета", string, "Принять", "Назад");
			}
			if(price + RoomsInfo[h][rOplata] > 100000) return SendErr(playerid, "На Вашем домашнем счету достаточно средств");
			p_info[playerid][pBank] -= price;
			RoomsInfo[h][rOplata] += price;
			SetRoomsInt(h, "rOplata", RoomsInfo[h][rOplata]);
			SCMF(playerid, TEAM_BLUE_COLOR, "Вы положили на домашний счет: %iр. На домашнем счету: %iр", price, RoomsInfo[h][rOplata]);
			MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
		}
	case D_HOME:
		{
			if(!response) return 1;
			new a = GetPVarInt(playerid, "PlayerHouse");
			switch(listitem)
			{
			case 0:
				{
					if(HouseInfo[a][hLock] == 1)
					{
						HouseInfo[a][hLock] = 0;
						GameTextForPlayer(playerid, "~g~unlock", 5000, 6);
						MeAction(playerid, "открывает замок дома");
					}
					else
					{
						HouseInfo[a][hLock] = 1;
						GameTextForPlayer(playerid, "~r~lock", 5000, 6);
						MeAction(playerid, "закрывает замок дома");
					}
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					MysqlUpdateHouseInt(a, "hLock", HouseInfo[a][hLock]);
				}
			case 1,2: callcmd::hmenu(playerid);
			case 3: ShowHouseUpdateDialog(playerid);
			case 4:
				{
					if(p_info[playerid][pCredit] != 0) return SendClientMessage(playerid, COLOR_RED, "Во время кредита Вам запрещено продавать имущество");
					ShowPlayerDialogEx(playerid, D_SELLHOUSE, 0, "{ebec86}>> Продажа дома", "{FFFFFF}Вы действительно хотите продать свой дом?\nОт его продажи Вам вернётся только половина стоимости дома", "Принять", "Назад");
				}
			case 5:
				{
					if(HouseInfo[a][gRentStatus])
					{
						HouseInfo[a][gRentStatus] = 0;
						SendInf(playerid, "Вы отключили возможность аренды Вашего дома");
						MysqlUpdateHouseInt(a, "RentStatus", HouseInfo[a][gRentStatus]);
						return 1;
					}
					ShowPlayerDialogEx(playerid,dRentSelectPlata,DIALOG_STYLE_INPUT, "{ebec86}>> Управление арендаторами",""cWHITE"Установите {f0e86b}плату "cWHITE"за аренду вашего дома\nПримечание:\n- Сумма должна быть от {f0e86b}500 "cWHITE"рублей до {f0e86b}500.000 "cWHITE"рублей в час","Далее","Отмена");
					return 1;
				}
			case 6:
				{
					STRING_GLOBAL = "";
					foreach(new i: Player)
					{
					    if(p_info[i][pRentHouse] == a)
					    {
					        p_info[i][pRentHouse] = -1;
					        MysqlUpdatePlayerInt(i, "renthouse", p_info[i][pRentHouse]);
					        SendErr(i, "Владелец, арендуемого Вами дома выселил(а) Вас");
					    }
					}
					format(STRING_GLOBAL, 128, "UPDATE `accounts` SET `renthouse` = '0' WHERE `renthouse` = '%d'", a);
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					SendInf(playerid, "Вы выселили Всех арендаторов Вашего дома");
				}
			}
		}
    case D_GUNSAFE_MAIN:
		{
			if (!response) return 0;

			SetPVarInt(playerid, "GunSafeListitem", listitem);

			ShowPlayerDialogEx(playerid, D_GUNSAFE_GIVE, DIALOG_STYLE_LIST, "{ebec86}>> Оружие", "Взять\nПоложить", "Выбрать", "Назад");

			return 1;
		}
	case D_GUNSAFE_GIVE:
		{
			if (!response) return ShowPlayerGunSafe(playerid);

			if (listitem == 0)
			{
				new slotid = GetPVarInt(playerid, "GunSafeListitem");
				if (HouseInfo[GetPVarInt(playerid, "PlayerHouse")][hSafeGun][slotid] == 0) return SendErr(playerid, "Слот пустой"), ShowPlayerGunSafe(playerid);

				ShowPlayerDialogEx(playerid, D_GUNSAFE_AMMO, DIALOG_STYLE_INPUT, "{ebec86}>> Взять оружие", "Введите количество патронов:", "Ввести", "Отмена");
			}
			else
			{
				ShowPlayerDialogEx(playerid, D_GUNSAFE_AMMO_1, DIALOG_STYLE_INPUT, "{ebec86}>> Положить оружие", "Введите количество патронов:", "Ввести", "Отмена");
			}
			return 1;
		}
	case D_GUNSAFE_AMMO:
		{
			if (!response) return 0;

			new value = strval(inputtext);
			new h = GetPVarInt(playerid, "PlayerHouse");
			new slotid = GetPVarInt(playerid, "GunSafeListitem");

			if (value > HouseInfo[h][hSafeAmmos][slotid] || value <= 0) return SendErr(playerid, "В данном слоте нету столько патронов"), ShowPlayerDialogEx(playerid, D_GUNSAFE_AMMO, DIALOG_STYLE_INPUT, "{ebec86}>> Взять оружие", "Введите количество патронов:", "Ввести", "Отмена");

			AC_GivePlayerWeapon(playerid, HouseInfo[h][hSafeGun][slotid], value);

			new str[256], gunname[32];
			GetWeaponName(HouseInfo[h][hSafeGun][slotid], gunname, 32);
			format(str, sizeof(str), "Вы взяли со слота №%d %s. Количество патронов: %d", slotid + 1, gunname, value);
			SendInf(playerid, str);

			if (HouseInfo[h][hSafeAmmos][slotid] - value <= 0)
			{
				HouseInfo[h][hSafeAmmos][slotid] = 0;
				HouseInfo[h][hSafeGun][slotid] = 0;
			}
			else
			{
				HouseInfo[h][hSafeAmmos][slotid] -= value;
			}

			DeletePVar(playerid, "GunSafeListitem");
			UpdateHouseGunSafe(h);
			return 1;
		}
	case D_GUNSAFE_AMMO_1:
		{
			if (!response) return 0;

			new value = strval(inputtext);
			new playervalue = GetPlayerAmmo(playerid);

			if (value > playervalue || value <= 0) return SendErr(playerid, "У Вас нету столько патронов"), ShowPlayerDialogEx(playerid, D_GUNSAFE_AMMO_1, DIALOG_STYLE_INPUT, "{ebec86}>> Положить оружие", "Введите количество патронов:", "Ввести", "Отмена");

			new h = GetPVarInt(playerid, "PlayerHouse");
			new slotid = GetPVarInt(playerid, "GunSafeListitem");

			DeletePVar(playerid, "GunSafeListitem");

			if (HouseInfo[h][hSafeAmmos][slotid] + value > 5000) SendErr(playerid, "На каждом слоте можно хранить только 5000 патронов");
			else
			{
				if (HouseInfo[h][hSafeGun][slotid] == GetPlayerWeapon(playerid))
				{
					HouseInfo[h][hSafeAmmos][slotid] += value;
				}
				else
				{
					HouseInfo[h][hSafeGun][slotid] = GetPlayerWeapon(playerid);
					HouseInfo[h][hSafeAmmos][slotid] = value;
				}

				new str[256], gunname[32];
				GetWeaponName(HouseInfo[h][hSafeGun][slotid], gunname, 32);
				format(str, sizeof(str), "Вы положили в слот №%d %s. Количество патронов: %d", slotid + 1, gunname, HouseInfo[h][hSafeAmmos][slotid]);
				SendInf(playerid, str);

				SetPlayerAmmo(playerid, HouseInfo[h][hSafeGun][slotid], playervalue - value);
				UpdateHouseGunSafe(h);
			}
			return 1;
		}
    case D_SAFE_MAIN:
		{
			if (!response) return 0;

			if (listitem == 4) ShowPlayerGunSafe(playerid);
			else ShowSafeUsingMenu(playerid, listitem);

			return 1;
		}
	case D_SAFE_USE:
		{
			if (!response)
			{
				DeletePVar(playerid, "SAFEUSEID");
				return 0;
			}
			if (! strlen(inputtext)) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID"));

			new id = GetPVarInt(playerid, "SAFEUSEID");
			new h = GetPVarInt(playerid, "PlayerHouse");
			new string[12];

			strmid(string, inputtext, 1, strlen(inputtext));

			new value = strval(string);

			if (value <= 0) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "Недопустимое число");

			if (inputtext[0] == '-')
			{
				switch(id)
				{
				case 0:
					{
						if (HouseInfo[h][hMoney] < value) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "В шкафе нет столько денег");

						HouseInfo[h][hMoney] -= value;
						GiveMoney(playerid, value, "Домашний сейф");

						new str[150];
						format(str, sizeof(str), "Вы взяли со шкафа {00ff00}%d{ffffff} рублей. Остаток: {00ff00}%d{ffffff} рублей", value, HouseInfo[h][hMoney]);
						SendInf(playerid, str);
					}
				case 1:
					{
					    new newslot;
						if (HouseInfo[h][hMetall] < value) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "В шкафе нет столько деталей");
						if(CheckMaxVes(playerid, 69, strval(inputtext), newslot) == 1) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "Вы не можете взять столько гр. наркотиков");

						HouseInfo[h][hMetall] -= value;
						PlayerItem1[playerid][newslot] = 69;
						PlayerItem2[playerid][newslot] += strval(inputtext);
						SaveItem(playerid, newslot);

						new str[140];
						format(str, sizeof(str), "Вы взяли со шкафа {00ff00}%d{ffffff} кг металла. Остаток: {00ff00}%d{ffffff} кг", value, HouseInfo[h][hMetall]);
						SendInf(playerid, str);
					}
				case 2:
					{
					    new newslot;
						if (HouseInfo[h][hPatrons] < value) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "В шкафе нет столько патронов");
						if(CheckMaxVes(playerid, 42, strval(inputtext), newslot) == 1) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "Вы не можете взять столько гр. наркотиков");

						HouseInfo[h][hPatrons] -= value;
						PlayerItem1[playerid][newslot] = 42;
						PlayerItem2[playerid][newslot] += strval(inputtext);
						SaveItem(playerid, newslot);

						new str[128];
						format(str, sizeof(str), "Вы взяли со шкафа {00ff00}%d{ffffff} патронов. Остаток: {00ff00}%d", value, HouseInfo[h][hPatrons]);
						SendInf(playerid, str);
					}
				case 3:
					{
					    new newslot;
						if (HouseInfo[h][hDrugs] < value) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "В шкафе нет столько гр. наркотиков");
						if(CheckMaxVes(playerid, 44, strval(inputtext), newslot) == 1) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "Вы не можете взять столько гр. наркотиков");

						HouseInfo[h][hDrugs] -= value;
						PlayerItem1[playerid][newslot] = 44;
						PlayerItem2[playerid][newslot] += strval(inputtext);
						SaveItem(playerid, newslot);

						new str[128];
						format(str, sizeof(str), "Вы взяли со шкафа {00ff00}%d{ffffff} гр. наркотиков. Остаток: {00ff00}%d", value, HouseInfo[h][hDrugs]);
						SendInf(playerid, str);
					}
				}
			}
			else if (inputtext[0] == '+')
			{
				switch(id)
				{
				case 0:
					{
						if (GetMoney(playerid) < value) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "У Вас нет столько денег");
						if (value + HouseInfo[h][hMoney] > 500000) return SendErr(playerid, "Шкаф заполнен");

						HouseInfo[h][hMoney] += value;
						GiveMoney(playerid, -value, "Домашний сейф");

						new str[128];
						format(str, sizeof(str), "Вы положили в шкаф {00ff00}%d{ffffff} рублей", value);
						SendErr(playerid, str);
					}
				case 1:
					{
					    new ok;
					    for(new s = 16; s > 0; s --)
						{
							if(PlayerItem1[playerid][s] == 69)
							{
								ok = s;
								break;
							}
						}
						if (PlayerItem2[playerid][ok] < value) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "У Вас нет столько деталей");
						if (value > PlayerItem2[playerid][ok]) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "Вы не можете положить столько деталей");
						if (value + HouseInfo[h][hMetall] > 10000) return SendErr(playerid, "Шкаф заполнен");
						
						if(PlayerItem2[playerid][ok] == 0)
						{
							PlayerItem1[playerid][ok] = 0;
						}

						HouseInfo[h][hMetall] += value;
						PlayerItem2[playerid][ok] -= value;
						SaveItem(playerid, ok);

						new str[128];
						format(str, sizeof(str), "Вы положили в шкаф {00ff00}%d{ffffff} металла", value);
						SendInf(playerid, str);
					}
				case 2:
					{
					    new ok;
					    for(new s = 16; s > 0; s --)
						{
							if(PlayerItem1[playerid][s] == 42)
							{
								ok = s;
								break;
							}
						}
						if (PlayerItem2[playerid][ok] < value) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "У Вас нет столько патронов");
						if (value > PlayerItem2[playerid][ok]) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "Вы не можете положить столько патронов");
						if (value + HouseInfo[h][hPatrons] > 10000) return SendErr(playerid, "Шкаф заполнен");
						
						if(PlayerItem2[playerid][ok] == 0)
						{
							PlayerItem1[playerid][ok] = 0;
						}

						HouseInfo[h][hPatrons] += value;
						PlayerItem2[playerid][ok] -= value;
						SaveItem(playerid, ok);

						new str[128];
						format(str, sizeof(str), "Вы положили в шкаф {00ff00}%d{ffffff} патронов", value);
						SendInf(playerid, str);
					}
				case 3:
					{
					    new ok;
					    for(new s = 16; s > 0; s --)
						{
							if(PlayerItem1[playerid][s] == 44)
							{
								ok = s;
								break;
							}
						}
						if (PlayerItem2[playerid][ok] < value) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "У Вас нет столько гр. наркотиков");
						if (value > PlayerItem2[playerid][ok]) return ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID")), SendErr(playerid, "Вы не можете положить столько гр. наркотиков");
						if (value + HouseInfo[h][hDrugs] > 5000) return SendErr(playerid, "Шкаф заполнен");
						
						if(PlayerItem2[playerid][ok] == 0)
						{
							PlayerItem1[playerid][ok] = 0;
						}

						HouseInfo[h][hDrugs] += value;
						PlayerItem2[playerid][ok] -= value;
						SaveItem(playerid, ok);

						new str[128];
						format(str, sizeof(str), "Вы положили в шкаф {00ff00}%d{ffffff} гр. наркотиков", value);
						SendInf(playerid, str);
					}
				}
			}
			else ShowSafeUsingMenu(playerid, GetPVarInt(playerid, "SAFEUSEID"));

			UpdateHouseSafe(h);
			return 1;
		}
    case 111:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerHouse");
			if(response)
			{
				switch(listitem)
				{
				case 0:
					{
						if(HouseInfo[i][hUpdate] >= 1) return SendErr(playerid, "У Вас уже куплено это улучшение");
						if(GetMoney(playerid) < 8000) return SendErr(playerid, "Недостаточно денег");
						HouseInfo[i][hUpdate] = 1;
						GiveMoney(playerid, -8000, "hUpdate");
						GameTextForPlayer(playerid, "~r~-8000 rub", 2000, 6);
						SendClientMessage(playerid, 0x1a89e6ff, "Вы улучшили свой дом до {ffff00}первого{1a89e6} уровня");
						SendClientMessage(playerid, 0x34DAC0FF, "Теперь вам можно просто нажать {FF8C00}ALT{34DAC0} для выхода");
						ShowHouseUpdateDialog(playerid);
						MysqlUpdateHouseInt(i, "hUpdate", HouseInfo[i][hUpdate]);
					}
				case 1:
					{
						if(HouseInfo[i][hUpdate] < 1) return SendErr(playerid, "Для покупки этого улучшения Вам необходимо купить предыдущее улучшение (автоматические двери)");
						if(HouseInfo[i][hUpdate] >= 2) return SendErr(playerid, "У Вас уже куплено это улучшение");
						if(GetMoney(playerid) < 13000) return SendErr(playerid, "Недостаточно денег");
						HouseInfo[i][hUpdate] = 2;
						GiveMoney(playerid, -13000, "hUpdate");
						GameTextForPlayer(playerid, "~r~-13000 rub", 2000, 6);
						SendClientMessage(playerid, 0x1a89e6ff, "Вы улучшили свой дом до {ffff00}второго{1a89e6} уровня");
						SendClientMessage(playerid, 0x34DAC0FF, "Теперь у Вас дома будет стоять аптечка");
						ShowHouseUpdateDialog(playerid);
						MysqlUpdateHouseInt(i, "hUpdate", HouseInfo[i][hUpdate]);
					}
				case 2:
					{
						if(HouseInfo[i][hUpdate] < 2) return SendErr(playerid, "Для покупки этого улучшения Вам необходимо купить предыдущее улучшение (домашняя аптечка)");
						if(HouseInfo[i][hUpdate] >= 3) return SendErr(playerid, "У Вас уже куплено это улучшение");
						if(GetMoney(playerid) < 18000) return SendErr(playerid, "Недостаточно денег");
						HouseInfo[i][hUpdate] = 3;
						GiveMoney(playerid, -18000, "hUpdate");
						GameTextForPlayer(playerid, "~r~-18000 rub", 2000, 6);
						SendClientMessage(playerid, 0x1a89e6ff, "Вы улучшили свой дом до {ffff00}третьего{1a89e6} уровня");
						SendClientMessage(playerid, 0x34DAC0FF, "Арендная плата понижена в два раза");
						HouseInfo[i][hOplata] = HouseInfo[i][hOplata] / 2;
						ShowHouseUpdateDialog(playerid);
						MysqlUpdateHouseInt(i, "hUpdate", HouseInfo[i][hUpdate]);
					}
				case 3:
					{
						if(HouseInfo[i][hUpdate] < 3) return SendErr(playerid, "Для покупки этого улучшения Вам необходимо купить предыдущее улучшение (субсидию)");
						if(HouseInfo[i][hUpdate] >= 4) return SendErr(playerid, "У Вас уже куплено это улучшение");
						if(GetMoney(playerid) < 25000) return SendErr(playerid, "Недостаточно денег");
						HouseInfo[i][hUpdate] = 4;
						GiveMoney(playerid, -25000, "hUpdate");
						GameTextForPlayer(playerid, "~r~-25000 rub", 2000, 6);
						SendClientMessage(playerid, 0x1a89e6ff, "Вы улучшили свой дом до {ffff00}четвертого{1a89e6} уровня");
						SendClientMessage(playerid, 0x34DAC0FF, "Арсенал доступен в шкафу");
						ShowHouseUpdateDialog(playerid);
						MysqlUpdateHouseInt(i, "hUpdate", HouseInfo[i][hUpdate]);
					}
				case 4:
					{
						STRING_GLOBAL = "";
						strcat(STRING_GLOBAL, "{6B8E23}1. Автоматические двери:\n{ffffff}С покупкой этого улучшения вам не придется \nбольше вводить /exit, вы сможете просто нажать лев. Alt для выхода.\n");
						strcat(STRING_GLOBAL, "{6B8E23}2. Аптечка:\n{ffffff}С покупкой этого улучшения вам в дом будет добавлена аптечка\nс помощью которой вы сможете пополнить здоровье.\n");
						strcat(STRING_GLOBAL, "{6B8E23}3. Субсидия:\n{FFFFFF}С покупкой этого улучшения ваша квартплата будет в 2 раза меньше,\nтем самым вы сможете сэкономить.\n");
						strcat(STRING_GLOBAL, "{6B8E23}4. Улучшение шкафа:\n{FFFFFF}С покупкой этого улучшения вы можете хранить оружие в шкафе.");
						ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация", STRING_GLOBAL, "Закрыть", "");
					}
				}
			}
		}
    case dRentSelectPlata:
		{
			if(!response) return 1;
			new house = GetPVarInt(playerid, "PlayerHouse");
			if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid,dRentSelectPlata,DIALOG_STYLE_INPUT, "{ebec86}>> Управление арендаторами",""cWHITE"Установите {f0e86b}плату "cWHITE"за аренду вашего дома\nПримечание:\n- Сумма должна быть от {f0e86b}500 "cWHITE"рублей до {f0e86b}500.000 "cWHITE"рублей в час","Далее","Отмена");
			//if(isNumeric(inputtext)) return ShowPlayerDialogEx(playerid,dRentSelectPlata,DIALOG_STYLE_INPUT, "{ebec86}>> Управление арендаторами",""cWHITE"Установите {f0e86b}плату "cWHITE"за аренду вашего дома\nПримечание:\n- Сумма должна быть от {f0e86b}500 "cWHITE"рублей до {f0e86b}500.000 "cWHITE"рублей в час","Далее","Отмена");
			if(strval(inputtext) < 500 || strval(inputtext) > 500000)  return ShowPlayerDialogEx(playerid,dRentSelectPlata,DIALOG_STYLE_INPUT, "{ebec86}>> Управление арендаторами",""cWHITE"Установите {f0e86b}плату "cWHITE"за аренду вашего дома\nПримечание:\n- Сумма должна быть от {f0e86b}500 "cWHITE"рублей до {f0e86b}500.000 "cWHITE"рублей в час","Далее","Отмена");
			HouseInfo[house][RentAllPlata] = strval(inputtext);
			format(STRING_GLOBAL, 128, "Плата за аренду вашего дома: {f0e86b}%d{FFFFFF} рублей",HouseInfo[house][RentAllPlata]);
			SendInf(playerid, STRING_GLOBAL);
			HouseInfo[house][gRentStatus] = 1;
			SendInf(playerid, "Вы включили возможность аренды Вашего дома");
			MysqlUpdateHouseInt(house, "RentStatus", HouseInfo[house][gRentStatus]);
			MysqlUpdateHouseInt(house, "RentAllPlata", HouseInfo[house][RentAllPlata]);
			return 1;
		}
	case D_RADAR:
		{
			if(!response) return 0;
			if(GetPVarInt(playerid, "CreateRadar")) return SendClientMessage(playerid,COLOR_GREEN,"Вы уже устанавливаете радар!");
			SetPVarInt(playerid, "TypeRadar", listitem);
			new Float: posX, Float: posY, Float: posZ;
			GetPlayerPos(playerid, posX, posY, posZ);
			SendClientMessage(playerid, COLOR_GREEN, "Вы начали установку радара. Поставьте радар в любую удобную для Вас позицию..");
			new radar = CreateObject(18880, posX+1, posY, posZ-0.35, 0.0, 0.0, 0.0);
			SetPVarInt(playerid, "CreateRadar", 1);
			SetPVarInt(playerid, "RadarObject", radar);
			EditObject(playerid, radar);
		}
	case D_HOME+2:
		{
			if(!response) return 1;
			new a = GetPVarInt(playerid, "PlayerHouse");
			new vehicleid = GetPlayerVehicleID(playerid);
			SetVehiclePos(vehicleid, -1616.6018,1579.0420,2005.5146);
			PutPlayerInVehicle(playerid, vehicleid, 0);
			AC_SetVehicleZAngle(vehicleid, 90.9035);
			SetCameraBehindPlayer(playerid);
			LinkVehicleToInterior(vehicleid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, HouseInfo[a][hVirtual]);
			SetVehicleVirtualWorld(vehicleid, HouseInfo[a][hVirtual]);
			return 1;
		}
	case 15419:
		{
			if(!response) return 1;
			static const list_skins[3] = {287,179,255};
			SetPlayerSkin(playerid, list_skins[listitem]);
			SendClientMessage(playerid, COLOR_GREEN, (listitem == 0) ? ("Вы переоделись в постовую форму") :
			(listitem == 1) ? ("Вы переоделись в спортивную форму") : ("Вы переоделись в парадную форму"));
		}
	case 15420:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(!ClosetSkins[playerid][0]) return 1;
					SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
					SendClientMessage(playerid,COLOR_YELLOW, "Вы переоделись");
				}
			case 1:
				{
					if(!p_info[playerid][pMemberSkin]) return SendErr(playerid, "Вы не состоите в организации");
					SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
					SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму организации");
				}
			}
		}
	case 15421:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(!ClosetSkins[playerid][0]) return 1;
					SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
					SendClientMessage(playerid,COLOR_YELLOW,"Вы переоделись в гражданскую форму");
				}
			case 1:
				{
					if(!p_info[playerid][pMemberSkin]) return SendErr(playerid, "Вы не состоите в организации");
					SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
					SendClientMessage(playerid,COLOR_YELLOW,"Вы надели форму организации");
				}
			case 2:
			    {
			        SendInf(playerid, "Вы взяли фотоаппарат");
			        AC_GivePlayerWeapon(playerid, 43, 50);
			        return 1;
			    }
			}
		}
	case D_ARMOURY:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return 1;
				case 1:
				{
				    if(frac_metall[2] < 25) return SendErr(playerid, "Склад полиции пуст");
					frac_metall[2] -= 25;
					UpdateFractionStore(2);

					AC_GivePlayerWeapon(playerid,3,1);
				}
				case 2:
				{
				    if(GetPlayerWeapon(playerid) != 24)
				    {
				        if(frac_metall[2] < 75) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[2] -= 75;
					}
					frac_patron[2] -= 50;
					UpdateFractionStore(2);

					AC_GivePlayerWeapon(playerid,24,50);
				}
				case 3:
				{
				    if(GetPlayerWeapon(playerid) != 25)
				    {
					    if(frac_metall[2] < 150) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[2] -= 150;
					}
					frac_patron[2] -= 50;
					UpdateFractionStore(2);

					AC_GivePlayerWeapon(playerid,25,50);
				}
				case 4:
				{
				    if(GetPlayerWeapon(playerid) != 29)
				    {
					    if(frac_metall[2] < 170) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[2] -= 170;
					}
					frac_patron[2] -= 150;
					UpdateFractionStore(2);

					AC_GivePlayerWeapon(playerid,29,150);
				}
				case 5:
				{
				    if(GetPlayerWeapon(playerid) != 31)
				    {
					    if(frac_metall[2] < 250) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[2] -= 250;
					}
					frac_patron[2] -= 150;
					UpdateFractionStore(2);

					AC_GivePlayerWeapon(playerid,31,150);
				}
				case 6:
				{
				    if(frac_metall[2] < 100) return SendErr(playerid, "Склад полиции пуст");
					frac_metall[2] -= 100;
					UpdateFractionStore(2);

					SetArmour(playerid, 100);
					SetHealth(playerid, 100);
				}
				case 7:
				{
			        SendClientMessage(playerid, COLOR_BLUE, "Вы взяли жезл, используйте /baton");
					if(p_info[playerid][pSex] == 1) MeAction(playerid, "взял жезл");
					else MeAction(playerid, "взяла жезл");
					SetPlayerAttachedObject(playerid, 1, 1214, 6, -0.040454, 0.028840, -0.012862, 2.521301, 76.277267, 70.163467, 0.300000, 0.300000, 0.500000);
			    }
			}
			new stringer1[128];
			STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t1\t25\nDesert Eagle\t50\t75\nShotgun\t50\t150\nMP5\t150\t170\nM4\t150\t250\nБронежилет\t100\nЖезл\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
            format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", frac_patron[2], frac_metall[2]);
			ShowPlayerDialogEx(playerid, D_ARMOURY, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
			return 1;
		}
    case D_ARMOURY+1:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return 1;
				case 1:
				{
				    if(gArmyWarehouse[0] < 25) return SendErr(playerid, "Склад армии пуст");
					gArmyWarehouse[0] -= 25;
					UpdateFractionStore(12);

					AC_GivePlayerWeapon(playerid,3,1);
				}
				case 2:
				{
				    if(GetPlayerWeapon(playerid) != 24)
				    {
				        if(gArmyWarehouse[0] < 75) return SendErr(playerid, "Склад армии пуст");
						gArmyWarehouse[0] -= 75;
					}
					gArmyWarehouse[1] -= 50;
					UpdateFractionStore(12);

					AC_GivePlayerWeapon(playerid,24,50);
				}
				case 3:
				{
				    if(GetPlayerWeapon(playerid) != 25)
				    {
					    if(gArmyWarehouse[0] < 150) return SendErr(playerid, "Склад армии пуст");
						gArmyWarehouse[0] -= 150;
					}
					gArmyWarehouse[1] -= 50;
					UpdateFractionStore(12);

					AC_GivePlayerWeapon(playerid,25,50);
				}
				case 4:
				{
				    if(GetPlayerWeapon(playerid) != 29)
				    {
					    if(gArmyWarehouse[0] < 170) return SendErr(playerid, "Склад армии пуст");
						gArmyWarehouse[0] -= 170;
					}
					gArmyWarehouse[1] -= 150;
					UpdateFractionStore(12);

					AC_GivePlayerWeapon(playerid,29,150);
				}
				case 5:
				{
				    if(GetPlayerWeapon(playerid) != 31)
				    {
					    if(gArmyWarehouse[0] < 250) return SendErr(playerid, "Склад армии пуст");
						gArmyWarehouse[0] -= 250;
					}
					gArmyWarehouse[1] -= 150;
					UpdateFractionStore(12);

					AC_GivePlayerWeapon(playerid,31,150);
				}
				case 6:
				{
				    if(gArmyWarehouse[0] < 100) return SendErr(playerid, "Склад армии пуст");
					gArmyWarehouse[0] -= 100;
					UpdateFractionStore(12);

					SetArmour(playerid, 100);
					SetHealth(playerid, 100);
				}
			}
			new stringer1[128];
			STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t1\t25\nDesert Eagle\t50\t75\nShotgun\t50\t150\nMP5\t150\t170\nM4\t150\t250\nБронежилет\t100\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
            format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", gArmyWarehouse[1], gArmyWarehouse[0]);
			ShowPlayerDialogEx(playerid, D_ARMOURY+1, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
			return 1;
		}
    case D_ARMOURY+10:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return 1;
				case 1:
				{
				    if(frac_metall[TEAM_SWAT] < 25) return SendErr(playerid, "Склад полиции пуст");
					frac_metall[TEAM_SWAT] -= 25;
					UpdateFractionStore(TEAM_SWAT);

					AC_GivePlayerWeapon(playerid,3,1);
				}
				case 2:
				{
				    if(GetPlayerWeapon(playerid) != 24)
				    {
				        if(frac_metall[TEAM_SWAT] < 75) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_SWAT] -= 75;
					}
					frac_patron[TEAM_SWAT] -= 50;
					UpdateFractionStore(TEAM_SWAT);

					AC_GivePlayerWeapon(playerid,24,50);
				}
				case 3:
				{
				    if(GetPlayerWeapon(playerid) != 25)
				    {
					    if(frac_metall[TEAM_SWAT] < 150) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_SWAT] -= 150;
					}
					frac_patron[TEAM_SWAT] -= 50;
					UpdateFractionStore(TEAM_SWAT);

					AC_GivePlayerWeapon(playerid,25,50);
				}
				case 4:
				{
				    if(GetPlayerWeapon(playerid) != 29)
				    {
					    if(frac_metall[TEAM_SWAT] < 170) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_SWAT] -= 170;
					}
					frac_patron[TEAM_SWAT] -= 150;
					UpdateFractionStore(TEAM_SWAT);

					AC_GivePlayerWeapon(playerid,29,150);
				}
				case 5:
				{
				    if(GetPlayerWeapon(playerid) != 31)
				    {
					    if(frac_metall[TEAM_SWAT] < 250) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_SWAT] -= 250;
					}
					frac_patron[TEAM_SWAT] -= 150;
					UpdateFractionStore(TEAM_SWAT);

					AC_GivePlayerWeapon(playerid,31,150);
				}
				case 6:
				{
				    if(frac_metall[TEAM_SWAT] < 100) return SendErr(playerid, "Склад полиции пуст");
					frac_metall[TEAM_SWAT] -= 100;
					UpdateFractionStore(TEAM_SWAT);

					SetArmour(playerid, 100);
					SetHealth(playerid, 100);
				}
			}
			new stringer1[128];
			STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t1\t25\nDesert Eagle\t50\t75\nShotgun\t50\t150\nMP5\t150\t170\nM4\t150\t250\nБронежилет\t100\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
            format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", frac_patron[TEAM_SWAT], frac_metall[TEAM_SWAT]);
			ShowPlayerDialogEx(playerid, D_ARMOURY+10, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
			return 1;
		}
    case D_ARMOURY+11:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return 1;
				case 1:
				{
				    if(frac_metall[TEAM_POLICIA2] < 25) return SendErr(playerid, "Склад полиции пуст");
					frac_metall[TEAM_POLICIA2] -= 25;
					UpdateFractionStore(TEAM_POLICIA2);

					AC_GivePlayerWeapon(playerid,3,1);
				}
				case 2:
				{
				    if(GetPlayerWeapon(playerid) != 24)
				    {
				        if(frac_metall[TEAM_POLICIA2] < 75) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_POLICIA2] -= 75;
					}
					frac_patron[TEAM_POLICIA2] -= 50;
					UpdateFractionStore(TEAM_POLICIA2);

					AC_GivePlayerWeapon(playerid,24,50);
				}
				case 3:
				{
				    if(GetPlayerWeapon(playerid) != 25)
				    {
					    if(frac_metall[TEAM_POLICIA2] < 150) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_POLICIA2] -= 150;
					}
					frac_patron[TEAM_POLICIA2] -= 50;
					UpdateFractionStore(TEAM_POLICIA2);

					AC_GivePlayerWeapon(playerid,25,50);
				}
				case 4:
				{
				    if(GetPlayerWeapon(playerid) != 29)
				    {
					    if(frac_metall[TEAM_POLICIA2] < 170) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_POLICIA2] -= 170;
					}
					frac_patron[TEAM_POLICIA2] -= 150;
					UpdateFractionStore(TEAM_POLICIA2);

					AC_GivePlayerWeapon(playerid,29,150);
				}
				case 5:
				{
				    if(GetPlayerWeapon(playerid) != 31)
				    {
					    if(frac_metall[TEAM_POLICIA2] < 250) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_POLICIA2] -= 250;
					}
					frac_patron[TEAM_POLICIA2] -= 150;
					UpdateFractionStore(TEAM_POLICIA2);

					AC_GivePlayerWeapon(playerid,31,150);
				}
				case 6:
				{
				    if(frac_metall[TEAM_POLICIA2] < 100) return SendErr(playerid, "Склад полиции пуст");
					frac_metall[TEAM_POLICIA2] -= 100;
					UpdateFractionStore(TEAM_POLICIA2);

					SetArmour(playerid, 100);
					SetHealth(playerid, 100);
				}
			}
			new stringer1[128];
			STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t1\t25\nDesert Eagle\t50\t75\nShotgun\t50\t150\nMP5\t150\t170\nM4\t150\t250\nБронежилет\t100\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
            format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", frac_patron[TEAM_POLICIA2], frac_metall[TEAM_POLICIA2]);
			ShowPlayerDialogEx(playerid, D_ARMOURY+11, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
			return 1;
		}
    case D_ARMOURY+12:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: return 1;
				case 1:
				{
				    if(frac_metall[TEAM_FBI] < 25) return SendErr(playerid, "Склад полиции пуст");
					frac_metall[TEAM_FBI] -= 25;
					UpdateFractionStore(TEAM_FBI);

					AC_GivePlayerWeapon(playerid,3,1);
				}
				case 2:
				{
				    if(GetPlayerWeapon(playerid) != 24)
				    {
				        if(frac_metall[TEAM_FBI] < 75) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_FBI] -= 75;
					}
					frac_patron[TEAM_FBI] -= 50;
					UpdateFractionStore(TEAM_FBI);

					AC_GivePlayerWeapon(playerid,24,50);
				}
				case 3:
				{
				    if(GetPlayerWeapon(playerid) != 25)
				    {
					    if(frac_metall[TEAM_FBI] < 150) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_FBI] -= 150;
					}
					frac_patron[TEAM_FBI] -= 50;
					UpdateFractionStore(TEAM_FBI);

					AC_GivePlayerWeapon(playerid,25,50);
				}
				case 4:
				{
				    if(GetPlayerWeapon(playerid) != 29)
				    {
					    if(frac_metall[TEAM_FBI] < 170) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_FBI] -= 170;
					}
					frac_patron[TEAM_FBI] -= 150;
					UpdateFractionStore(TEAM_FBI);

					AC_GivePlayerWeapon(playerid,29,150);
				}
				case 5:
				{
				    if(GetPlayerWeapon(playerid) != 31)
				    {
					    if(frac_metall[TEAM_FBI] < 250) return SendErr(playerid, "Склад полиции пуст");
						frac_metall[TEAM_FBI] -= 250;
					}
					frac_patron[TEAM_FBI] -= 150;
					UpdateFractionStore(TEAM_FBI);

					AC_GivePlayerWeapon(playerid,31,150);
				}
				case 6:
				{
				    if(frac_metall[TEAM_FBI] < 100) return SendErr(playerid, "Склад полиции пуст");
					frac_metall[TEAM_FBI] -= 100;
					UpdateFractionStore(TEAM_FBI);

					SetArmour(playerid, 100);
					SetHealth(playerid, 100);
				}
				case 7:
				{
				    SendInf(playerid, "Вы взяли жучок. (/tipster)");
		            SetPVarInt(playerid,"tipster", true);
				}
			}
			new stringer1[128];
			STRING_GLOBAL = "Название\tПатронов\tМеталла\n"cWHITE"Дубинка\t1\t25\nDesert Eagle\t50\t75\nShotgun\t50\t150\nMP5\t150\t170\nM4\t150\t250\nБронежилет\t100\nЖучок\n \n{AFAFAF}* Если у вас есть данное оружие,\n{AFAFAF}* То возьмите его в руки\n{AFAFAF}* Тогда вы не потратите металл";
            format(stringer1, 128, "{ebec86}>> Оружие. (Патронов: {FFFFFF}%d{ebec86}, Металла: {FFFFFF}%d{ebec86})", frac_patron[TEAM_FBI], frac_metall[TEAM_FBI]);
			ShowPlayerDialogEx(playerid, D_ARMOURY+12, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Выбрать", "Закрыть");
			return 1;
		}
	case D_ARMOURY+3:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{

					if(GetMoney(playerid) < 100000) return SendErr(playerid, "У вас недостаточно денег");
					if(GetPlayerBizz(playerid) == 0) return SendErr(playerid, "Вы не владеете бизнесом!");
					new i = GetPVarInt(playerid, "PlayerBizz");
					BizzInfo[i][bLic] = 1;
					MysqlUpdateBizzInt(i, "lic", BizzInfo[i][bLic]);
					GiveMoney(playerid, -100000, "Лицензия на бизнес");
					FracBank[9] += 100000;
					MysqlUpdateOtherInt("sfnbank", FracBank[9]);
					SendErr(playerid, "Вы успешно получили лицензию на бизнес.");
				}
			}
		}
	case D_ARMOURY+4:
		{
			if(PhoneNumbers[playerid][5] < 40) return SendErr(playerid, "Недостаточно подарков!");
			{
				new rand_money = random(99999);
				PhoneNumbers[playerid][5] -= 40;
				MysqlUpdatePlayerInt(playerid, "phnumber6", PhoneNumbers[playerid][5]);
				GiveMoney(playerid, rand_money, "Подарок");
				new string[128];
				format(string,sizeof(string), "Подарки |{FFFFFF} Вы выиграли {bbbbbb}%dр{ebec86}>> на игровой аккаунт", rand_money);
				SendClientMessage(playerid, 0xFFCD00FF, string);
			}
		}
	case D_STOPLOAD:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			new vehicleid = GetPlayerVehicleID(playerid);
			if(!vehicleid) return 1;
			if(gVehicleGun[vehicleid][vGunLoading] == false && gVehicleGun[vehicleid][vGunUnloading] == false) return 1;
			gVehicleGun[vehicleid][vGunLoading] = false;
			gVehicleGun[vehicleid][vGunUnloading] = false;
			if(IsValidDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText])) DestroyDynamic3DTextLabel(gVehicleGun[vehicleid][vGunText]);
			DestroyDynamicArea(gVehicleGun[vehicleid][vGunArea]);
			DestroyDynamicPickup(gVehicleGun[vehicleid][vGunPickup]);
			gVehicleGun[vehicleid][vGunArea] = 0;
			gVehicleGun[vehicleid][vGunPickup] = 0;
			SendClientMessage(playerid, COLOR_GREEN, "Загрузка / разгрузка завершена");
			SetTimerEx("Itter_OPDCInternal_VehicleGun", 0, false, "i", vehicleid);
			return 1;
		}
	case D_HEAL+6:
		{
			if(!response) return 1;
			new name[32];
			if(sscanf(inputtext,"s[32]",name)) return ShowPlayerDialogEx(playerid, D_HEAL+6, 1, "Бизнес", "ВАЖНО: Название\n\nПРИМЕР: Gas Station", "Принять", "Отмена");
			TOTALBIZZ++;
			sscanf(boordh,"p<,>ffffffiii",
			BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],
			BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],
			BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bMIcon], BizzInfo[TOTALBIZZ][bType]);
			GetPlayerPos(playerid,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz]);
			strmid(BizzInfo[TOTALBIZZ][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			strmid(BizzInfo[TOTALBIZZ][bName], name, 0, strlen(name), 32);
			BizzInfo[TOTALBIZZ][bVirtual] = TOTALBIZZ;
			BizzInfo[TOTALBIZZ][bEnter] = 0;
			BizzInfo[TOTALBIZZ][bTill] = 50;
			BizzInfo[TOTALBIZZ][bProdMax] = 1000;

			new tmpvar, tmpvar2;
			switch(BizzInfo[TOTALBIZZ][bType])
			{
				case 1: tmpvar = 540000, tmpvar2 = 5000;
				case 2: tmpvar = 500000, tmpvar2 = 20000;
				case 3: tmpvar = 340000, tmpvar2 = 3000;
				case 4: tmpvar = 460000, tmpvar2 = 7000;
				case 5: tmpvar = 240000, tmpvar2 = 7000;
				case 6: tmpvar = 800000, tmpvar2 = 20000;
				case 7: tmpvar = 450000, tmpvar2 = 100000;
				case 8: tmpvar = 410000, tmpvar2 = 50000;
				case 9: tmpvar = 1000000, tmpvar2 = 50000;
				case 10: tmpvar = 500000, tmpvar2 = 50000;
			}
			BizzInfo[TOTALBIZZ][bPrice] = tmpvar;
			BizzInfo[TOTALBIZZ][bProduct] = tmpvar2;

			BizzInfo[TOTALBIZZ][bIcon] = CreateDynamicMapIcon(BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz], BizzInfo[TOTALBIZZ][bMIcon], 0,-1,-1,-1,200.0);

			if(BizzInfo[TOTALBIZZ][bType] != 2 && BizzInfo[TOTALBIZZ][bType] != 7)
			{
				new string[300];
				BizzInfo[TOTALBIZZ][bArea] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz], 1.3, BizzInfo[TOTALBIZZ][bVirtual], -1);
				BizzInfo[TOTALBIZZ][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz], 0);
				BizzInfo[TOTALBIZZ][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz],BizzInfo[TOTALBIZZ][bVirtual]);
				BizzInfo[TOTALBIZZ][bMenu] = CreateDynamicSphere(BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],1.0,BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bInt]);
				if(BizzInfo[TOTALBIZZ][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual]);
				else CreateDynamicPickup(1274,1,BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz],BizzInfo[TOTALBIZZ][bVirtual]);
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}ALT{FFFFFF} - войти в бизнес", BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 2)
			{
				new string[300];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
					CreateDynamicPickup(1650,1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7);
				}
				else
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}H{FFFFFF} - Меню АЗС\n{FFFFFF}Цена за 1 литр бензина: {f0e86b}%i{FFFFFF} рублей", BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bTill]*WorkSalary[15]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
					CreateDynamicPickup(1650,1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7);
				}
			}
			else if(BizzInfo[TOTALBIZZ][bType] == 7)
			{
				new string[300];
				if(!strcmp(BizzInfo[TOTALBIZZ][bOwner],"None",true))
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
					CreateDynamicPickup(1085,1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7);
				}
				else
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}H{FFFFFF} - Заехать в СТО", BizzInfo[TOTALBIZZ][bName]);
					LABELBIZZ[TOTALBIZZ] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
					CreateDynamicPickup(1085,1,BizzInfo[TOTALBIZZ][bEntrx], BizzInfo[TOTALBIZZ][bEntry], BizzInfo[TOTALBIZZ][bEntrz]+0.7);
				}
			}
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO "T_BIZZ" (id, x, y, z, xt, yt, zt,menux,menuy,menuz, vint, virt, owner, name, price, product, type, icon, bProdMax) VALUES (%i, '%f', '%f', '%f', '%f', '%f', '%f','%f', '%f', '%f',%i, %i, '%s', '%s', %i, %i, %i, %i, %i)",
			TOTALBIZZ,BizzInfo[TOTALBIZZ][bEntrx],BizzInfo[TOTALBIZZ][bEntry],BizzInfo[TOTALBIZZ][bEntrz],BizzInfo[TOTALBIZZ][bExitx],BizzInfo[TOTALBIZZ][bExity],BizzInfo[TOTALBIZZ][bExitz], BizzInfo[TOTALBIZZ][bMenux],BizzInfo[TOTALBIZZ][bMenuy],BizzInfo[TOTALBIZZ][bMenuz]
			,BizzInfo[TOTALBIZZ][bInt],BizzInfo[TOTALBIZZ][bVirtual],BizzInfo[TOTALBIZZ][bOwner],BizzInfo[TOTALBIZZ][bName], BizzInfo[TOTALBIZZ][bPrice], BizzInfo[TOTALBIZZ][bProduct], BizzInfo[TOTALBIZZ][bType], BizzInfo[TOTALBIZZ][bMIcon], BizzInfo[TOTALBIZZ][bProdMax]);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			SCMF(playerid,COLOR_LIME,"Бизнес номер %d создан",TOTALBIZZ);
			return 1;
		}
	case D_HEAL+9:
		{
			if(!response) return 1;
			if(GetPlayerBizz(playerid) == 1) return SendErr(playerid, "Вы уже владеете бизнесом!");
			new full, full_;
			for(new idx = TOTALBIZZ; idx > 0; idx --)
			{
				if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
				{
					full++;
					if(!strcmp(BizzInfo[idx][bOwner],"None",true))
					{
						full_++;
						if(GetMoney(playerid) < BizzInfo[idx][bPrice]*WorkSalary[7]) return SendErr(playerid, "У вас не хватает денег!");
						else
						{
							GiveMoney(playerid, -BizzInfo[idx][bPrice]*WorkSalary[7], "Покупка бизнеса");
							BizzInfo[idx][bProduct] = 100;
							BizzInfo[idx][bMoney] = 1000;
							BizzInfo[idx][bEnter] = 0;
							BizzInfo[idx][bTill] = 50;
							SCMF(playerid, COLOR_GREEN, "Вы купили бизнес %s за %iр. У вас осталось: %iр", BizzInfo[idx][bName], BizzInfo[idx][bPrice]*WorkSalary[7], p_info[playerid][pCash]);
							SCMF(playerid, COLOR_YELLOW, "Аренда бизнеса оплачена на 1 час (%iр), не забывайте регулярно следить за его балансом.", BizzInfo[idx][bMoney]);
							SendClientMessage(playerid, COLOR_YELLOW, "Приобретите лицензию на ваш бизнес, если в течении 12 часов этого не будет, он будет продан государству!");
							strmid(BizzInfo[idx][bOwner],GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);

							STRING_GLOBAL[0] = EOS;
							format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET owner = '%s', product = %i, money = %i WHERE id = '%d' LIMIT 1", BizzInfo[idx][bOwner], BizzInfo[idx][bProduct],BizzInfo[idx][bMoney], idx);
							mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
							UpdateBizz(idx);
							
							FracBank[9] += BizzInfo[idx][bPrice]*WorkSalary[7];
							MysqlUpdateOtherInt("sfnbank", FracBank[9]);
						}
					}
					else full_++;
				}
			}
			if(full == 0) return SendErr(playerid, "Вы должны находится рядом с бизнесом!");
			if(full_ == 0) return SendErr(playerid, "Бизнес уже имеет владельца!");
			return 1;
		}
	case D_HEAL+32:
	    {
	        if ( ! response ) return 1 ;
			new pvar_string [ 32 ] ;
			format ( pvar_string, 10, "vline_biz_%d", listitem ) ;
			new v_id = GetPVarInt ( playerid, pvar_string ) ;
			SetPVarInt(playerid, "PlayerBizz", v_id);
			ShowPlayerDialogEx(playerid, D_HEAL+10, 2, "{ebec86}>> Панель управления бизнесом", "1. Открыть бизнес\n2. Установить цену за товар\n3. Установить цену за вход\n4. Продать бизнес\n5. Заказать продукты\n5. Улучшения\n6. Изменить название", "Принять", "Отмена");
	    }
	case D_HEAL+10:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz");
			switch(listitem)
			{
			case 0:
				{
					if(BizzInfo[i][bLock] == 0) return SendErr(playerid, "Бизнес уже открыт!");
					if(BizzInfo[i][bProduct] <= 0 || BizzInfo[i][bLic] == 0) return SendErr(playerid, "В бизнесе нет продуктов или нет лицензии!");
					BizzInfo[i][bLock] = 0;
					BizzInfo[i][bLockTime] = 0;
					MysqlUpdateBizzInt(i, "block", BizzInfo[i][bLock]);
					MysqlUpdateBizzInt(i, "locktime", BizzInfo[i][bLockTime]);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Вы открыли бизнес. Всегда следите за состоянием продуктов и лицензией");
					SendClientMessage(playerid, COLOR_LIGHTRED, "В противном случае вы можете потерять бизнес");
				}
			case 1:
				{
					if(BizzInfo[i][bType] == 1 || BizzInfo[i][bType] == 6 || BizzInfo[i][bType] == 7 || BizzInfo[i][bType] == 8)
					{
						SendErr(playerid, "В данном типе бизнеса нельзя управлять ценой на товар");
					}
					else
					{
						ShowPlayerDialogEx(playerid, D_HEAL+11, 1, "{ebec86}>> Цена", "{ffffff}Введите цену за товар:", "Принять", "Отмена");
					}
				}
			case 2:
				{
					if(BizzInfo[i][bType] == 2 || BizzInfo[i][bType] == 7)
					{
						SendErr(playerid, "В данном типе бизнеса нельзя управлять ценой за вход!");
					}
					else
					{
						ShowPlayerDialogEx(playerid, D_HEAL+12, 1, "{ebec86}>> Цена", "{ffffff}Введите цену за вход:", "Принять", "Отмена");
					}
				}
			case 3: ShowPlayerDialogEx(playerid, D_HEAL+16, 0, "{ebec86}>> Продать бизнес", "{ffffff}Вы хотите продать свой бизнес?\n\n{FF6347}Вам вернут только половину стоимости бизнеса!", "Да", "Нет");
			case 4:
				{
				    STRING_GLOBAL = "";
				    format(STRING_GLOBAL, 128, "{ffffff}Введите к-во товара, которое хотите заказать {FFFF00}(1 ед. = %d руб.):", 3*WorkSalary[14]);
					ShowPlayerDialogEx(playerid, D_HEAL+27, 1, "{ebec86}>> Заказать продукты", STRING_GLOBAL, "Принять", "Отмена");
				}
			case 5: ShowPlayerDialogEx(playerid, D_BUSSINESUP, DIALOG_STYLE_LIST, "{ebec86}>> Улучшения","1. Автоматические продукты ({f0e86b}1.000.000{ffffff} рублей)\n2. Расширение склада ({f0e86b}50.000 рублей + 1000 Прод.{ffffff})\n3. Аптечка в бизнес ({f0e86b}250.000{ffffff} рублей)\n4. Кассир ({f0e86b}5.000.000{ffffff} рублей)", "Купить", "Назад");
			case 6: ShowPlayerDialogEx(playerid, D_HEAL+29, DIALOG_STYLE_INPUT, "{ebec86}>> Изменение названия бизнеса", ""nwhite"Введите новое название для вашего бизнеса:", "Принять", "Отмена");
			case 7:
				{
					STRING_GLOBAL = ""; new str[128];
					strcat(STRING_GLOBAL, "{ffffff}Дата\t\t\t\tДоход\n");
					for (new b; b < 10; b ++)
					{
						format(str, sizeof(str), "{ffffff}%s\t\t\t{f0e86b}%d{ffffff} рублей\n", BizStatsDate[i][b], BizStats[i][b]);
						strcat(STRING_GLOBAL, str);
					}
					ShowPlayerDialog(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Статистика", STRING_GLOBAL, "Принять", "");
				}
			}
		}
	case D_HEAL+29:
		{
		    new name[32]; new i = GetPVarInt(playerid, "PlayerBizz");
		    if(!response) return callcmd::bpanel(playerid);
			if(sscanf(inputtext, "s[32]", name)) return ShowPlayerDialogEx(playerid, D_HEAL+29, DIALOG_STYLE_INPUT, "{ebec86}>> Изменение названия бизнеса", ""nwhite"Введите новое название для вашего бизнеса:", "Принять", "Отмена");
			if(IsIpFound(inputtext) || CheckString(inputtext)) return ShowPlayerDialogEx(playerid, D_HEAL+29, DIALOG_STYLE_INPUT, "{ebec86}>> Изменение названия бизнеса", ""nwhite"Введите новое название для вашего бизнеса:", "Принять", "Отмена");
			strmid(BizzInfo[i][bName], name, 0, strlen(name), 32);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET name = '%s' WHERE id = '%d' LIMIT 1",
			BizzInfo[i][bName], i);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			SendInf(playerid, "Вы успешно изменили название бизнеса");
			UpdateBizz(i);
			return 1;
		}
    case D_BUSSINESUP:
		{
			if(!response) return callcmd::bpanel(playerid);
			new bizid = GetPVarInt(playerid, "PlayerBizz");
			switch(listitem)
			{
			case 0:
				{
					if(GetMoney(playerid) < 1000000) return SendErr(playerid, "Не достаточно средств");
					if(BizzInfo[bizid][bAvtoProd] == 1) return SendErr(playerid, "У вас уже есть данное улучшение");
					SendInf(playerid, "Вы приобрели улучшение 'Автоматические продукты'");
					
					BizzInfo[bizid][bAvtoProd] = 1;
					MysqlUpdateBizzInt(bizid, "bAvtoProd", BizzInfo[bizid][bAvtoProd]);

					GiveMoney(playerid, -1000000, "Авто. продукты");

				}
			case 1:
				{
					if(GetMoney(playerid) < 50000) return SendErr(playerid, "Не достаточно средств");
					if(BizzInfo[bizid][bProdMax] >= 20000) return SendErr(playerid, "У вас приобретено максимальное расширение");
					SendInf(playerid, "Вы приобрели расширение склада");
					
					BizzInfo[bizid][bProdMax] += 1000;
					MysqlUpdateBizzInt(bizid, "bProdMax", BizzInfo[bizid][bProdMax]);
					
					GiveMoney(playerid, -50000, "Расш. склада");
				}
			case 2:
				{
					if(GetMoney(playerid) < 250000) return SendErr(playerid, "Не достаточно средств");
					if(BizzInfo[bizid][bHeal] == 1) return SendErr(playerid, "У вас приобретено данное улучшение");
					SendInf(playerid, "Вы приобрели улучшение 'Аптечка'");
					
					BizzInfo[bizid][bHeal] = 1;
					MysqlUpdateBizzInt(bizid, "bHeal", BizzInfo[bizid][bHeal]);
					
					GiveMoney(playerid, -250000, "Аптечка в биз");
				}
            case 3:
				{
					if(GetMoney(playerid) < 5000000) return SendErr(playerid, "Не достаточно средств");
					if(BizzInfo[bizid][bActor] == 1) return SendErr(playerid, "У вас приобретено данное улучшение");
					SendInf(playerid, "Вы приобрели улучшение 'Кассир'");
					
					BizzInfo[bizid][bActor] = 1;
					MysqlUpdateBizzInt(bizid, "bActor", BizzInfo[bizid][bActor]);
					
					GiveMoney(playerid, -5000000, "Кассир");
				}
			}
		}
	case D_HEAL+27:
		{
			if(!response) return callcmd::bpanel(playerid);
			new idx = GetPVarInt(playerid, "PlayerBizz");
			new prod = strval(inputtext);
			new string[128];
			if(BizzInfo[idx][bType] == 1)
			{
				if(prod < 0 || prod > BizzInfo[idx][bProdMax]-BizzInfo[idx][bProduct]) return SendErr(playerid, "Вы не можете хранить больше товара, чем вмещает склад Вашего бизнеса");
				if(GetMoney(playerid) < prod*3*WorkSalary[14])
				{
					format(string, sizeof(string), "Вам нужно %dр для того чтобы заказать %d ед. товара", prod*3*WorkSalary[14], prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %dр?", prod, prod*3*WorkSalary[14]);
				ShowPlayerDialogEx(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 2)
			{
				if(prod < 0 || prod > BizzInfo[idx][bProdMax]-BizzInfo[idx][bProduct]) return SendErr(playerid, "Вы не можете хранить больше товара, чем вмещает склад Вашего бизнеса");
				if(GetMoney(playerid) < prod*3*WorkSalary[14])
				{
					format(string, sizeof(string), "Вам нужно %dр для того чтобы заказать %d л. бензина", prod*3*WorkSalary[14], prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d л. бензина за %dр?", prod, prod*3*WorkSalary[14]);
				ShowPlayerDialogEx(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 3)
			{
				if(prod < 0 || prod > BizzInfo[idx][bProdMax]-BizzInfo[idx][bProduct]) return SendErr(playerid, "Вы не можете хранить больше товара, чем вмещает склад Вашего бизнеса");
				if(GetMoney(playerid) < prod*3*WorkSalary[14])
				{
					format(string, sizeof(string), "Вам нужно %dр для того чтобы заказать %d ед. товара", prod*3*WorkSalary[14], prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %dр?", prod, prod*3*WorkSalary[14]);
				ShowPlayerDialogEx(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 4 || BizzInfo[idx][bType] == 5)
			{
				if(prod < 0 || prod > BizzInfo[idx][bProdMax]-BizzInfo[idx][bProduct]) return SendErr(playerid, "Вы не можете хранить больше товара, чем вмещает склад Вашего бизнеса");
				if(GetMoney(playerid) < prod*3*WorkSalary[14])
				{
					format(string, sizeof(string), "Вам нужно %dр для того чтобы заказать %d ед. товара", prod*3*WorkSalary[14], prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %dр?", prod, prod*3*WorkSalary[14]);
				ShowPlayerDialogEx(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 6)
			{
				if(prod < 0 || prod > BizzInfo[idx][bProdMax]-BizzInfo[idx][bProduct]) return SendErr(playerid, "Вы не можете хранить больше товара, чем вмещает склад Вашего бизнеса");
				if(GetMoney(playerid) < prod*3*WorkSalary[14])
				{
					format(string, sizeof(string), "Вам нужно %dр для того чтобы заказать %d ед. товара", prod*3*WorkSalary[14], prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %dр?", prod, prod*3*WorkSalary[14]);
				ShowPlayerDialogEx(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 7)
			{
				if(prod < 0 || prod > BizzInfo[idx][bProdMax]-BizzInfo[idx][bProduct]) return SendErr(playerid, "Вы не можете хранить больше товара, чем вмещает склад Вашего бизнеса");
				if(GetMoney(playerid) < prod*3*WorkSalary[14])
				{
					format(string, sizeof(string), "Вам нужно %dр для того чтобы заказать %d ед. товара", prod*3*WorkSalary[14], prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %dр?", prod, prod*3*WorkSalary[14]);
				ShowPlayerDialogEx(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 8)
			{
				if(prod < 0 || prod > BizzInfo[idx][bProdMax]-BizzInfo[idx][bProduct]) return SendErr(playerid, "Вы не можете хранить больше товара, чем вмещает склад Вашего бизнеса");
				if(GetMoney(playerid) < prod*3*WorkSalary[14])
				{
					format(string, sizeof(string), "Вам нужно %dр для того чтобы заказать %d ед. товара", prod*3*WorkSalary[14], prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %dр?", prod, prod*3*WorkSalary[14]);
				ShowPlayerDialogEx(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
			if(BizzInfo[idx][bType] == 9)
			{
				if(prod < 0 || prod > BizzInfo[idx][bProdMax]-BizzInfo[idx][bProduct]) return SendErr(playerid, "Вы не можете хранить больше товара, чем вмещает склад Вашего бизнеса");
				if(GetMoney(playerid) < prod*3*WorkSalary[14])
				{
					format(string, sizeof(string), "Вам нужно %dр для того чтобы заказать %d ед. товара", prod*3*WorkSalary[14], prod);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}
				SetPVarInt(playerid, "orderprod", prod);
				format(string, sizeof(string), "{FFFFFF}Вы действительно хотите заказать %d ед. товара за %dр?", prod, prod*3*WorkSalary[14]);
				ShowPlayerDialogEx(playerid, D_HEAL+28, 0, " ", string, "Да", "Нет");
			}
		}
	case D_HEAL+28:
		{
			if(!response) return callcmd::bpanel(playerid);
			new idx = GetPVarInt(playerid, "PlayerBizz");
			new prod = GetPVarInt(playerid, "orderprod");
			new price = prod*3*WorkSalary[14];
			GiveMoney(playerid, -price, "Заказ продуктов");
			
			FracBank[9] += price;
			MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			
			BizzInfo[idx][bProdOrder] += prod;
			SendClientMessage(playerid, COLOR_GREEN, "Вы заказали товар, в скором времени Вам его доставят");
		}
	case D_HEAL+11:
		{
			if(!response) return 1;
			new price, i = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialogEx(playerid, D_HEAL+11, 1, "{ebec86}>> Цена", "{ffffff}Введите цену за товар:", "Принять", "Отмена");
			if(BizzInfo[i][bType] == 2)
			{
				if(price < 50 || price > 200) return SendErr(playerid, "Неверная цена. Возможно от 50 до 200р");
			}
			else
			{
				if(price < 1 || price > 500) return SendErr(playerid, "Неверная цена. Возможно от 1 до 500р");
			}
			BizzInfo[i][bTill] = price;
			MysqlUpdateBizzInt(i, "till", price);
			SendClientMessage(playerid, COLOR_BLUE, "Новая цена товара установлена");
			UpdateBizz(i);
			return 1;
		}
	case D_HEAL+12:
		{
			if(!response) return 1;
			new price, i = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i", price)) return ShowPlayerDialogEx(playerid, D_HEAL+12, 1, "{ebec86}>> Цена", "{ffffff}Введите цену за вход:", "Принять", "Отмена");
			if(price < 0 || price > 1000) return SendErr(playerid, "Неверная цена. Возможно от 0 до 1000р");
			BizzInfo[i][bEnter] = price;
			MysqlUpdateBizzInt(i, "penter", price);
			SendClientMessage(playerid, COLOR_BLUE, "Цена за вход успешно установлена");
			UpdateBizz(i);
			return 1;
		}
	case D_HEAL+13:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz");
			new price = shop_price_sell[listitem]*BizzInfo[i][bTill], newslot;
			
			if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
			{
			    price = floatround((shop_price_sell[listitem]*BizzInfo[i][bTill])*50/100);
			    SendClientMessage(playerid, COLOR_YELLOW, "* Для Вашей ОПГ Скидка 50%%");
			}
			
			if(GetMoney(playerid) < price) return SendErr(playerid, "Недостаточно средств");
			switch(listitem)
			{
			case 0:
			    {
			        new sim_card = RandomEx(100000, 999999);
			        if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(CheckMaxVes(playerid, 47, 1, newslot) == 1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					PlayerItem1[playerid][newslot]=47;
					PlayerItem2[playerid][newslot]+=1;
					GiveMoney(playerid, -500, "Покупка телефона");
					p_info[playerid][pPhone][0] = 100;
					SaveItem(playerid,newslot);

					new str[60];
					format(str, sizeof(str), "SELECT * FROM "T_ACCOUNTS" WHERE phonenumber = '%i'", sim_card);
					mysql_tquery(dbHandle, str, "OnPlayerSetPhoneNumber", "i", playerid);
					SetPVarInt(playerid, "CheckNumber", sim_card);

					format(STRING_GLOBAL, 128, "SELECT * FROM `contacts` WHERE `NickName` = '%s' LIMIT 1", p_info[playerid][pName]);
					mysql_tquery(dbHandle, STRING_GLOBAL, "LoadContacts", "d", playerid);
			    }
			case 1:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(CheckMaxVes(playerid,38,30,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					PlayerItem1[playerid][newslot]=38;
					PlayerItem2[playerid][newslot]+=30;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили фотоаппарат");
				}
            case 2:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "Вы не владеете домом");
					new p = GetPVarInt(playerid, "PlayerHouse");
					HouseInfo[p][hHeal] += 10;
					MysqlUpdateHouseInt(p, "hHeal", HouseInfo[p][hHeal]);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили 10 аптечек для вашего дома");
				}
			case 3:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(CheckMaxVes(playerid,14,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					PlayerItem1[playerid][newslot]=14;
					PlayerItem2[playerid][newslot]+=1;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили цветы");
				}
			case 4:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(CheckMaxVes(playerid,41,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					PlayerItem1[playerid][newslot]=41;
					PlayerItem2[playerid][newslot]+=1;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили наручные часы");
				}
			case 5:
				{
                    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(CheckMaxVes(playerid,45,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					PlayerItem1[playerid][newslot]=45;
					PlayerItem2[playerid][newslot]+=1;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили маску");
						
					if(robbery_role[playerid] == 2)
					{
					    robbery_mask[robbery_players[playerid]] = 1;
					    SendInf(playerid, "Вы достали маски, поделитесь ими с соучастниками");
					}
				}
			case 6:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(CheckMaxVes(playerid,46,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					PlayerItem1[playerid][newslot]=46;
					PlayerItem2[playerid][newslot]+=1;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили 1 сигарету");
				}
			case 7:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(CheckMaxVes(playerid,70,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					PlayerItem1[playerid][newslot]=70;
					PlayerItem2[playerid][newslot]+=1;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили Спранк");
				}
			case 8:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(p_info[playerid][pAptechka] >= 3) return SendErr(playerid, "В рюкзак вмещается до 3 аптечек");
					p_info[playerid][pAptechka]++;
					SCMF(playerid, COLOR_BLUE, "Вы купили 1 аптечку, теперь у вас %d аптечек(-ки)",p_info[playerid][pAptechka]);
					MysqlUpdatePlayerInt(playerid, "aptechka", p_info[playerid][pAptechka]);
				}
			case 9:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(CheckMaxVes(playerid,40,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре");
					PlayerItem1[playerid][newslot]=40;
					PlayerItem2[playerid][newslot]+=1;
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили MP3-плеер");
				}
            case 10:
				{
				    if(GetMoney(playerid) < price) return SendErr(playerid, "У вас недостаточно средств");
					if(p_info[playerid][pJackCar] > 0) return SendErr(playerid, "У Вас уже есть скрепки");
					p_info[playerid][pJackCar] += 3;
					MysqlUpdatePlayerInt(playerid, "jackcar", p_info[playerid][pJackCar]);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили скрепки. (3 штуки)");
				}
			case 11:
				{
					if(GetPVarInt(playerid, "boomBox")) return SendErr(playerid, "Вы уже имеете магнитофон");
					SetPVarInt(playerid, "boomBox", 1);
					SendClientMessage(playerid, COLOR_BLUE, "Вы купили магнитофон. '/recorder' - установить");
				}
			}
			GiveMoney(playerid, -price, "Покупка в 24/7");
			SaveItem(playerid, newslot);
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoneyHour] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= shop_prod_sell[listitem];
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
		}
	case D_HEAL+14:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz"), interiorid = GetPlayerInterior(playerid), newslot;
			if(p_info[playerid][pHunger] >= 100) return SendErr(playerid, "Вы не голодны");
			new price = gEateryCosts[listitem]*BizzInfo[i][bTill];
			
			if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
			{
			    price = floatround((gEateryCosts[listitem]*BizzInfo[i][bTill])*50/100);
			    SendClientMessage(playerid, COLOR_YELLOW, "* Для Вашей ОПГ Скидка 50%%");
			}
			
			if(GetMoney(playerid) < price) return SendErr(playerid, "Недостаточно средств");
			switch(listitem)
			{
			case 0:
				{
					if(interiorid == 5)
					{
						MeAction(playerid, "купил(а) маленькую пиццу");
						if(CheckMaxVes(playerid,50,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=50;
						PlayerItem2[playerid][newslot]+=1;
					}
					else if(interiorid == 10)
					{
						MeAction(playerid, "купил(а) бургер");
						if(CheckMaxVes(playerid,51,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=51;
						PlayerItem2[playerid][newslot]+=1;
					}
					else if(interiorid == 9)
					{
						MeAction(playerid, "купил(а) кусочки курицы");
						if(CheckMaxVes(playerid,52,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=52;
						PlayerItem2[playerid][newslot]+=1;
					}
				}
			case 1:
				{
					if(interiorid == 5)
					{
						MeAction(playerid, "купил(а) среднию пиццу");
						if(CheckMaxVes(playerid,55,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=55;
						PlayerItem2[playerid][newslot]+=1;
					}
					else if(interiorid == 10)
					{
						MeAction(playerid, "купил(а) большой бургер");
						if(CheckMaxVes(playerid,56,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=56;
						PlayerItem2[playerid][newslot]+=1;
					}
					else if(interiorid == 9)
					{
						MeAction(playerid, "купил(а) куринные ножки");
						if(CheckMaxVes(playerid,57,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=57;
						PlayerItem2[playerid][newslot]+=1;
					}
				}
			case 2:
				{
					if(interiorid == 5)
					{
						MeAction(playerid, "купил(а) большую пиццу");
						if(CheckMaxVes(playerid,60,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=60;
						PlayerItem2[playerid][newslot]+=1;
					}
					else if(interiorid == 10)
					{
						MeAction(playerid, "купил(а) гамбургер");
						if(CheckMaxVes(playerid,61,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=61;
						PlayerItem2[playerid][newslot]+=1;
					}
					else if(interiorid == 9)
					{
						MeAction(playerid, "купил(а) куринную ножку");
						if(CheckMaxVes(playerid,62,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=62;
						PlayerItem2[playerid][newslot]+=1;
					}
				}
			case 3:
				{
					if(interiorid == 5)
					{
						MeAction(playerid, "купил(а) пиццу в коробке");
						if(CheckMaxVes(playerid,65,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=65;
						PlayerItem2[playerid][newslot]+=1;
					}
					else if(interiorid == 10)
					{
						MeAction(playerid, "купил(а) гамбургер в упаковке");
						if(CheckMaxVes(playerid,66,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=66;
						PlayerItem2[playerid][newslot]+=1;
					}
					else if(interiorid == 9)
					{
						MeAction(playerid, "купил(а) курицу в коробке");
						if(CheckMaxVes(playerid,67,1,newslot)==1)return SendErr(playerid, "У вас нет свободного места в инвентаре!");
						PlayerItem1[playerid][newslot]=67;
						PlayerItem2[playerid][newslot]+=1;
					}
				}
			}
			GiveMoney(playerid, -price, "Покупка в закуске");
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoneyHour] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= gEateryProd[listitem];
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			SaveItem(playerid,newslot);
			EatList(playerid, i);
		}
	case D_HEAL+15:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz");
			new price = gBarCost[listitem]*BizzInfo[i][bTill];
			
			if(BizzInfo[i][bMafia] == p_info[playerid][pMember])
			{
			    price = floatround((gBarCost[listitem]*BizzInfo[i][bTill])*50/100);
			    SendClientMessage(playerid, COLOR_YELLOW, "* Для Вашей ОПГ Скидка 50%%");
			}
			
			if(GetMoney(playerid) < price) return SendErr(playerid, "Недостаточно средств!");
			switch(listitem)
			{
			case 0:
				{
					if(p_info[playerid][pSex] == 1) MeAction(playerid, "выпил воды");
					else MeAction(playerid, "выпила воды");
					if(p_info[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
					}
					else GiveHunger(playerid, 10);
				}
			case 1:
				{
					if(p_info[playerid][pSex] == 1) MeAction(playerid, "выпил соды");
					else MeAction(playerid, "выпила соды");
					if(p_info[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
					}
					else GiveHunger(playerid, 10);
				}
			case 2:
				{
					if(p_info[playerid][pSex] == 1) MeAction(playerid, "выпил кока-колы");
					else MeAction(playerid, "выпила кока-колы");
					if(p_info[playerid][pHunger]+10 > 100)
					{
						SetHunger(playerid, 100);
					}
					else GiveHunger(playerid, 10);
				}
			case 3:
				{
					if(p_info[playerid][pSex] == 1) MeAction(playerid, "выпил пиво");
					else MeAction(playerid, "выпила пиво");
					if(p_info[playerid][pHunger]+20 > 100)
					{
						SetHunger(playerid, 100);
					}
					else GiveHunger(playerid, 20);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+2000);
				}
			case 4:
				{
					if(p_info[playerid][pSex] == 1) MeAction(playerid, "выпил водки");
					else MeAction(playerid, "выпила водки");
					if(p_info[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			case 5:
				{
					if(p_info[playerid][pSex] == 1) MeAction(playerid, "выпил коньяк");
					else MeAction(playerid, "выпила коньяк");
					if(p_info[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			case 6:
				{
					if(p_info[playerid][pSex] == 1) MeAction(playerid, "выпил абсент");
					else MeAction(playerid, "выпила абсент");
					if(p_info[playerid][pHunger]+30 > 100)
					{
						SetHunger(playerid, 100);
					}
					else GiveHunger(playerid, 30);
					if(GetPlayerDrunkLevel(playerid) < 20000) SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+5000);
				}
			}
			GiveMoney(playerid, -price, "Покупка в баре");
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoneyHour] += price;
				BizzPay[i] += price;
				BizzInfo[i][bProduct] -= gBarProd[listitem];
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
				MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
			}
			ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.1, 0, 0, 0, 0, 0, 1);
			if(GetPlayerDrunkLevel(playerid) > 20000) SetPlayerDrunkLevel(playerid, 20000);
			BarList(playerid, i);
		}
	case D_HEAL+16:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerBizz");
			strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			SCMF(playerid, COLOR_RED, "Вы продали свой бизнес за %iр. Деньги с бизнеса переведены на ваш счет",BizzInfo[i][bPrice]/2);
			p_info[playerid][pBank] += BizzInfo[i][bPrice]/2;
			p_info[playerid][pBank] += BizzInfo[i][bMoney];
			MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
			BizzInfo[i][bLock] = BizzInfo[i][bMoney] = BizzInfo[i][bLic] = BizzInfo[i][bEnter] = BizzInfo[i][bMafia] = 0;
			BizzInfo[i][bTill] = 50;
			switch(BizzInfo[i][bType])
			{
			case 1: BizzInfo[i][bProduct] = 5000;
			case 2: BizzInfo[i][bProduct] = 20000;
			case 3: BizzInfo[i][bProduct] = 3000;
			case 4: BizzInfo[i][bProduct] = 7000;
			case 5: BizzInfo[i][bProduct] = 7000;
			case 6: BizzInfo[i][bProduct] = 20000;
			case 7: BizzInfo[i][bProduct] = 100000;
			case 8: BizzInfo[i][bProduct] = 50000;
			case 9: BizzInfo[i][bProduct] = 50000;
			}
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET owner='%s', block=%d, money=%d, lic=%d, penter=%d, till=%d, product=%d WHERE id = %d",
			BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill], BizzInfo[i][bProduct],i);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			UpdateBizz(i);
		}
	case D_HEAL+17:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(p_info[playerid][pJob]) return SendErr(playerid, "Сначала увольтесь с прежней работы");
					else if(p_info[playerid][pLevel] < 1) return SendErr(playerid, "Работа доступна со 1-го уровня");
					p_info[playerid][pJob] = JOB_BUS;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу водитель маршрутки");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
			case 1:
				{
					if(p_info[playerid][pJob]) return SendErr(playerid, "Сначала увольтесь с прежней работы");
					else if(p_info[playerid][pLevel] < 1) return SendErr(playerid, "Работа доступна со 1-го уровня");
					p_info[playerid][pJob] = JOB_TAXI;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу водитель такси");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
			case 2:
				{
					if(p_info[playerid][pJob]) return SendErr(playerid, "Сначала увольтесь с прежней работы");
					else if(p_info[playerid][pLevel] < 1) return SendErr(playerid, "Работа доступна с 1-го уровня");
					p_info[playerid][pJob] = JOB_MECHANIC;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу автомеханика");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
            case 3:
				{
					if(p_info[playerid][pJob]) return SendErr(playerid, "Сначала увольтесь с прежней работы");
					else if(p_info[playerid][pLevel] < 1) return SendErr(playerid, "Работа доступна с 1-го уровня");
					p_info[playerid][pJob] = JOB_TRUCKER;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу дальнобойщика");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
			case 4:
				{
					if(p_info[playerid][pJob]) return SendErr(playerid, "Сначала увольтесь с прежней работы");
					else if(p_info[playerid][pLevel] < 9) return SendErr(playerid, "Работа доступна с 9-го уровня");
					p_info[playerid][pJob] = JOB_INKASATOR;
					SendClientMessage(playerid, COLOR_YELLOW, "Поздравляем");
					SendClientMessage(playerid, COLOR_WHITE, "Вы были приняты на работу инкасатором");
					SendClientMessage(playerid, COLOR_WHITE, "Помощь по командам: /menu - Команды сервера");
				}
			case 5:
				{
					if(p_info[playerid][pMember]) return SendErr(playerid, "Вы состоите в организации");
					else if(!p_info[playerid][pJob]) return SendErr(playerid, "Вы нигде не работаете");
					p_info[playerid][pJob] = 0;
					SendClientMessage(playerid, COLOR_BLUE, "Вы уволились с работы");
				}
			}
			MysqlUpdatePlayerInt(playerid, "job", p_info[playerid][pJob]);
		}
	case D_HEAL+19:
		{
			new targetid = GetPVarInt(playerid, "PlayerMarriage");
			if(response)
			{
				new string[128];
				format(string, sizeof(string), "%s и %s вступили в брак", GetName(targetid), GetName(playerid));
				SendClientMessageToAll(COLOR_PURPLE, string);
				strmid(p_info[playerid][pWhoMarried], GetName(targetid), 0, strlen(GetName(targetid)), MAX_PLAYER_NAME);
				strmid(p_info[targetid][pWhoMarried], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
				p_info[playerid][pMarried] = p_info[targetid][pMarried] = 1;
				MysqlUpdatePlayerInt(playerid, "married", p_info[playerid][pMarried]);
				MysqlUpdatePlayerInt(targetid, "married", p_info[targetid][pMarried]);
				MysqlUpdatePlayerStr(playerid, "whomarried", p_info[playerid][pWhoMarried]);
				MysqlUpdatePlayerStr(targetid, "whomarried", p_info[targetid][pWhoMarried]);
				SCMF(playerid, COLOR_YELLOW, "Вы приняли предложение связать судьбу с %s", GetName(targetid));
				if(p_info[playerid][pSex] == 1) SCMF(targetid, COLOR_GREEN, "%s принял предложение связать судьбу с вами", GetName(playerid));
				else SCMF(targetid, COLOR_GREEN, "%s приняла предложение связать судьбу с вами", GetName(playerid));
			}
			else
			{
				if(p_info[playerid][pSex] == 1) SCMF(targetid, COLOR_RED, "%s отклонил предложение связать судьбу с вами", GetName(playerid));
				else SCMF(targetid, COLOR_RED, "%s отклонила предложение связать судьбу с вами", GetName(playerid));
			}
			DeletePVar(playerid, "PlayerMarriage");
		}
	case D_HEAL+20:
		{
			new targetid = GetPVarInt(playerid, "PlayerMarriage");
			if(response)
			{
				strmid(p_info[playerid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				strmid(p_info[targetid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				p_info[playerid][pMarried] = p_info[targetid][pMarried] = 0;
				MysqlUpdatePlayerInt(playerid, "married", p_info[playerid][pMarried]);
				MysqlUpdatePlayerInt(targetid, "married", p_info[targetid][pMarried]);
				MysqlUpdatePlayerStr(playerid, "whomarried", p_info[playerid][pWhoMarried]);
				MysqlUpdatePlayerStr(targetid, "whomarried", p_info[targetid][pWhoMarried]);
				SCMF(playerid, COLOR_YELLOW, "Вы приняли предложение развестись %s", GetName(targetid));
				if(p_info[playerid][pSex] == 1) SCMF(targetid, COLOR_GREEN, "%s принял предложение развестись с вами", GetName(playerid));
				else SCMF(targetid, COLOR_GREEN, "%s приняла предложение развестись с вами", GetName(playerid));
			}
			else
			{
				if(p_info[playerid][pSex] == 1) SCMF(targetid, COLOR_RED, "%s отклонил предложение развестись с вами", GetName(playerid));
				else SCMF(targetid, COLOR_RED, "%s отклонила предложение развестись с вами", GetName(playerid));
			}
			DeletePVar(playerid, "PlayerMarriage");
		}
	case D_HEAL+21:
		{
			if(!response) return 1;
			new price, string[128];
			new b = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %dр", BizzInfo[b][bMoney]);
				return ShowPlayerDialogEx(playerid, D_HEAL+21, 1, "{ebec86}>> Пополнение счета бизнеса", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %dр", BizzInfo[b][bMoney]);
				return ShowPlayerDialogEx(playerid, D_HEAL+21, 1, "{ebec86}>> Пополнение счета бизнеса", string, "Принять", "Назад");
			}
			if(p_info[playerid][pBank] < price)
			{
				SendErr(playerid, "На вашем счету в банке не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\nТекущий счет бизнеса: %dр", BizzInfo[b][bMoney]);
				return ShowPlayerDialogEx(playerid, D_HEAL+21, 1, "{ebec86}>> Пополнение счета бизнеса", string, "Принять", "Назад");
			}
			p_info[playerid][pBank] -= price;
			BizzInfo[b][bMoney] += price;
			SCMF(playerid, TEAM_BLUE_COLOR, "Вы положили на счет бизнеса: %iр. На счете бизнеса: %iр", price, BizzInfo[b][bMoney]);
			MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
		}
	case D_HEAL+213:
		{
			if(!response) return 1;
			new price, string[128];
			new b = GetPVarInt(playerid, "PlayerBizz");
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: %dр", BizzInfo[b][bMoney]);
				return ShowPlayerDialogEx(playerid, D_HEAL+213, 1, "{ebec86}>> Вывод счета с бизнеса", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: %dр", BizzInfo[b][bMoney]);
				return ShowPlayerDialogEx(playerid, D_HEAL+213, 1, "{ebec86}>> Вывод счета с бизнеса", string, "Принять", "Назад");
			}
			if(BizzInfo[b][bMoney] < price)
			{
				SendErr(playerid, "На вашем счету в бизнесе не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите сумму вывода денег с бизнеса\nТекущий счет бизнеса: %dр", BizzInfo[b][bMoney]);
				return ShowPlayerDialogEx(playerid, D_HEAL+213, 1, "{ebec86}>> Вывод счета с бизнеса", string, "Принять", "Назад");
			}
			BizzInfo[b][bMoney] -= price;
			GiveMoney(playerid, price, "Снятие со счета биза");
			SCMF(playerid, TEAM_BLUE_COLOR, "Вы вывели со счета бизнеса: %iр. На счете бизнеса: %iр", price, BizzInfo[b][bMoney]);
		}
	case D_ATM+1:
		{
			if(!response) return 1;
			new price, string[150];
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {1D99D4}0%%\n\n{FFFFFF}Текущее состояние счёта: {f0e86b}%dр", p_info[playerid][pPhoneBalance]);
				return ShowPlayerDialogEx(playerid, D_ATM+1, 1, "{ebec86}>> Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {1D99D4}0%%\n\n{FFFFFF}Текущее состояние счёта: {f0e86b}%dр", p_info[playerid][pPhoneBalance]);
				return ShowPlayerDialogEx(playerid, D_ATM+1, 1, "{ebec86}>> Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(GetMoney(playerid) < price)
			{
				SendErr(playerid, "У вас не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите сумму пополнения\n\nКомиссия за операцию: {1D99D4}0%%\n\n{FFFFFF}Текущее состояние счёта: {f0e86b}%dр", p_info[playerid][pPhoneBalance]);
				return ShowPlayerDialogEx(playerid, D_ATM+1, 1, "{ebec86}>> Пополнение счета телефона", string, "Принять", "Назад");
			}
			if(p_info[playerid][pPhoneBalance] + price > 15000) return SendErr(playerid, "Нельзя положить на баланс телефона более 15000р");
			p_info[playerid][pPhoneBalance] += price;
			MysqlUpdatePlayerInt(playerid, "phonebalance", p_info[playerid][pPhoneBalance]);
			GiveMoney(playerid, -price, "Положил на счет биза");
			SCMF(playerid, COLOR_YELLOW, "SMS: {FFFFFF}Поступление платежа: %iр. Текущее состояние счёта: %iр. {FFFF00}Отправитель: {FFFFFF}Оператор связи", price, p_info[playerid][pPhoneBalance]);
			return 1;
		}
	case D_ATM+4:
		{
			if(!response) return 1;
			new price, string[150];
			if(sscanf(inputtext, "i", price))
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {f0e86b}%dр", p_info[playerid][pCharity]);
				return ShowPlayerDialogEx(playerid, D_ATM+4, 1, "{ebec86}>> Благотворительность", string, "Принять", "Назад");
			}
			if(price < 1)
			{
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {f0e86b}%dр", p_info[playerid][pCharity]);
				return ShowPlayerDialogEx(playerid, D_ATM+4, 1, "{ebec86}>> Благотворительность", string, "Принять", "Назад");
			}
			if(GetMoney(playerid) < price)
			{
				SendErr(playerid, "У вас не хватает денег!");
				format(string, sizeof(string), "{FFFFFF}Введите количество денег, которые хотите пожертвовать на благотворительность\n\nВы пожертвовали: {f0e86b}%dр", p_info[playerid][pCharity]);
				return ShowPlayerDialogEx(playerid, D_ATM+4, 1, "{ebec86}>> Благотворительность", string, "Принять", "Назад");
			}
			p_info[playerid][pCharity] += price;
			MysqlUpdatePlayerInt(playerid, "charity", p_info[playerid][pCharity]);
			GiveMoney(playerid, -price, "Благотворительность");
			FracBank[9] += price;
			MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			SCMF(playerid, COLOR_YELLOW, "Вы пожертвовали на благотворительность {FFFFFF}%dр{FFFF00}. Список самых щедрых: {FFFFFF}/charity", price);
			return 1;
		}
	case D_LEAVE:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: pc_cmd_exitf(playerid);
			    case 1:
			    {
			        if(GetMoney(playerid) < 300000) return SendErr(playerid, "У Вас недостаточно денег");
			        
			        if(IsAMafia(playerid))
			        {
				        GiveMoney(playerid, -300000, "/exitf");
				        frac_money[p_info[playerid][pMember]] += 300000;
						UpdateFractionStore(p_info[playerid][pMember]);
						UpdateStoreGang(p_info[playerid][pMember]);

				        new str[89];
						format(str, sizeof(str), "[F] %s покинул организацию заплатив 300.000 рублей", GetName(playerid));
						SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, str);
						LeaveFractionPlayer(playerid);
					}
					else
					{
					    GiveMoney(playerid, -300000, "/exitf");
				        FracBank[9] += 300000;
	    				MysqlUpdateOtherInt("sfnbank", FracBank[9]);

				        new str[89];
						format(str, sizeof(str), "[R] %s покинул организацию заплатив неустойку в размере: 300.000 рублей", GetName(playerid));
						SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, str);
						LeaveFractionPlayer(playerid);
					}
			    }
			    case 2:
			    {
					if(p_info[playerid][pRank] > 3) return SendErr(playerid, "Вы выше требуемого ранга");
			        if(IsAMafia(playerid))
			        {
			            new str[89];
						format(str, sizeof(str), "[F] %s покинул организацию по собственному желанию", GetName(playerid));
						SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, str);
						LeaveFractionPlayer(playerid);
					}
					else
					{
				        new str[89];
						format(str, sizeof(str), "[R] %s покинул организацию по собственному желанию", GetName(playerid));
						SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, str);
						LeaveFractionPlayer(playerid);
					}
			    }
			    case 3:
			    {
			        new query[256], src[256];
					new currtime = gettime(), fracid = p_info[playerid][pMember];
					Bl_Info[playerid][Bl_onFrac][fracid] = 1;
					Bl_Info[playerid][Bl_Kills][fracid] = 0;
					format(query, sizeof query, "INSERT INTO `blacklist` (`f_id`,`accused`,`date`,`accuser`,`reason`,`lastvisit`) VALUES (");
					scf(query, src, "'%i','%i','%i',", fracid, p_info[playerid][pID], currtime);
					scf(query, src, "'%i','Неуплата за увольнение','%i')", p_info[playerid][pID], currtime+DAY*15);
					mysql_tquery(dbHandle, query, "", "");
			    
			        new str[89];
					format(str, sizeof(str), "[F] %s покинул организацию и был занесён в чёрный список", GetName(playerid));
					SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, str);
					LeaveFractionPlayer(playerid);
			    }
			}
			return 1;
		}
	case D_JOB+14:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid, "PlayerHouse");
			HouseInfo[i][hLock] = 0;
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~g~unlock", 5000, 6);
			MeAction(playerid, "открывает замок дома");
			MysqlUpdateHouseInt(i, "hLock", HouseInfo[i][hLock]);
			LoadTexture(playerid);
			SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
			SetPlayerInterior(playerid,HouseInfo[i][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
			
			if(HouseInfo[i][hUpdate] >= 2) SendClientMessage(playerid, 0xEFFF87FF, "В этом доме имеется аптечка. Чтобы восстановить здоровье используйте {FFFFFF}/healup");
			return 1;
		}
	case D_MAIL:
		{
			if(!response) return 1;
			new	code = RandomEx(10000,99999);
			new string[300];
			format(string, sizeof(string), "%s?authkey=%s&email=%s&code=%d", EMAIL_ACTIVE, EMAIL_AUTHKEY, p_info[playerid][pMail], code);
			new result = HTTP(0, HTTP_HEAD, string, "","");
			SetPVarInt(playerid, "authcode", code);
			if(!result) return SendClientMessage(playerid, COLOR_RED, "Произошла ошибка при http запросе");
			ShowPlayerDialogEx(playerid, D_MAIL+1, DIALOG_STYLE_INPUT, "{ebec86}>> Потверждение почты", "{FFFFFF}Используйте сюда код который пришёл Вам на почту", "Принять", "Закрыть");
		}
	case D_MAIL+1:
		{
			if(!response) return 1;
			if(isNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialogEx(playerid, D_MAIL+1, DIALOG_STYLE_INPUT, "{ebec86}>> Потверждение почты", "{FFFFFF}Используйте сюда код который пришёл Вам на почту", "Принять", "Закрыть");
			if(GetPVarInt(playerid,"authcode") != strval(inputtext)) return ShowPlayerDialogEx(playerid, D_MAIL+1, DIALOG_STYLE_INPUT, "{ebec86}>> Потверждение почты", "{FFFFFF}Используйте сюда код который пришёл Вам на почту\n\n{FF6347}Неверный код, потвердите попытку ввода", "Принять", "Закрыть");
			SCMF(playerid, COLOR_YELLOW, "Вы успешно потвердили свою почту {FFFFFF}'%s'", p_info[playerid][pMail]);
			p_info[playerid][pMailConfirmed] = 1;
			MysqlUpdatePlayerInt(playerid, "mailconf", p_info[playerid][pMailConfirmed]);
			DeletePVar(playerid, "authcode");
		}
	case D_POLMENU://ДПС
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(PhoneNumbers[playerid][7] == 0) return SendErr(playerid, "У вас не имеются штрафы");
					else
					{
						new shtraf = PhoneNumbers[playerid][7];
						if(GetMoney(playerid) < shtraf) return SendErr(playerid, "Недостаточно денег");
						GiveMoney(playerid, -shtraf, "Оплата штрафа с пикапа");
						PhoneNumbers[playerid][6] = 0;
						MysqlUpdatePlayerInt(playerid, "phnumber7", PhoneNumbers[playerid][6]);
						PhoneNumbers[playerid][7] = 0;
						MysqlUpdatePlayerInt(playerid, "phnumber8", PhoneNumbers[playerid][7]);
						SCMF(playerid, COLOR_BLUE, "Вы заплатили %iр за свои штрафы.",shtraf);
					}

				}
			case 1:
				{
					if(p_info[playerid][pLic][3]) return SendErr(playerid, "Вы уже имеете лицензию на владение оружием");
					else if(p_info[playerid][pLevel] < 2) return SendErr(playerid, "Для покупки лицензии необходимо иметь 2 уровень");
					else if(PhoneNumbers[playerid][2] < 2) return SendErr(playerid, "У вас нет мед. карты или вам запрещенно использовать оружие");
					ShowPlayerDialogEx(playerid, D_PASS+2, DIALOG_STYLE_MSGBOX, "{ebec86}>> Оформление лицензии", "\
					{FFFFFF}- Вас приветствует сотрудник {0055FF}Полиции\n\n\
					{FFFFFF}Желаете оформить лицензию на владение оружием?", "Принять", "Отмена");
				}
			case 2:
				{
					ShowPlayerDialogEx(playerid, D_VEHNUMBER, DIALOG_STYLE_MSGBOX, "{ebec86}>> Пункт выдачи номеров", "\
					{f0e86b}Требования:\n\
					{FFFFFF}- Наличие паспорта\n\
					- Наличие водительского удостоверения\n\
					- Документы на автомобиль\n\n\
					{afafaf}Если все это у вас есть, нажмите `Далее`", "Далее", "Закрыть");
				}
			}
		}
	case D_POLMENU+1:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(PhoneNumbers[playerid][7] == 0) return SendErr(playerid, "У вас не имеются штрафы");
					else
					{
						new shtraf = PhoneNumbers[playerid][7];
						if(GetMoney(playerid) < shtraf) return SendErr(playerid, "Недостаточно денег");
						GiveMoney(playerid, -shtraf, "Оплата штрафа с пикапа");
						PhoneNumbers[playerid][6] = 0;
						MysqlUpdatePlayerInt(playerid, "phnumber7", PhoneNumbers[playerid][6]);
						PhoneNumbers[playerid][7] = 0;
						MysqlUpdatePlayerInt(playerid, "phnumber8", PhoneNumbers[playerid][7]);
						SCMF(playerid, COLOR_BLUE, "Вы заплатили %iр за свои штрафы.",shtraf);
					}

				}
			case 1:
				{
					if(p_info[playerid][pLic][3]) return SendErr(playerid, "Вы уже имеете лицензию на владение оружием");
					else if(p_info[playerid][pLevel] < 2) return SendErr(playerid, "Для покупки лицензии необходимо иметь 2 уровень");
					else if(PhoneNumbers[playerid][2] < 2) return SendErr(playerid, "У вас нет мед. карты или вам запрещенно использовать оружие");
					ShowPlayerDialogEx(playerid, D_PASS+2, DIALOG_STYLE_MSGBOX, "{ebec86}>> Оформление лицензии", "{FFFFFF}- Вас приветствует сотрудник {0055FF}Полиции\n\n{FFFFFF}Желаете оформить лицензию на владение оружием?", "Принять", "Отмена");
				}
			case 2:
				{
					ShowPlayerDialogEx(playerid, D_VEHNUMBER, DIALOG_STYLE_MSGBOX, "{ebec86}>> Пункт выдачи номеров", "{f0e86b}Требования:\n{FFFFFF}- Наличие паспорта\n- Наличие водительского удостоверения\n- Документы на автомобиль\n\n{afafaf}Если все это у вас есть, нажмите `Далее`", "Далее", "Закрыть");
				}
			}
		}
	case D_VEHNUMBER:
		{
			if(response)
			{
				if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID)
				{
					new rows;
					new fmt_query[90];
					new Cache: result;

					mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
					result = mysql_query(dbHandle, fmt_query);

					rows = cache_num_rows();

					if(!rows)
					return SendClientMessage(playerid, C_RED, "У Вас нет личного транспорта"), cache_delete(result);

					cache_delete(result);

					return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");
				}
				else
				{
					if(strcmp(ownable_car[playerid][v_number], "[ НЕТ НОМЕРОВ ]", false))
					return SendErr(playerid, "У Вас уже есть номера");
					
					new labelcar[20];
					format(labelcar, sizeof labelcar, "%s%d%d%d%s%s", VehNumber(), random(9), random(9), random(9), VehNumber(), VehNumber());
				    SetPVarString(playerid, "NUMBER_CAR", labelcar);
				    SetPVarInt(playerid, "N_CAR", 1);

				    for(new i; i < 30; i ++) TextDrawShowForPlayer(playerid, buy_numbers_car[i]);
				    PlayerTextDrawSetString(playerid, buy_numbers_player_car[playerid], labelcar);
				    PlayerTextDrawShow(playerid, buy_numbers_player_car[playerid]);

				    SelectTextDraw(playerid,0xddddddff);
				}
			}
		}
	case D_PASS+2:
		{
			if(!response) return 1;
			if(GetMoney(playerid) < WorkSalary[30]) return SendErr(playerid, "Недостаточно средств!");
			GiveMoney(playerid, -WorkSalary[30], "Лиц. на оружие");
			
			FracBank[9] += WorkSalary[30];
			MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			
			p_info[playerid][pLic][3] = 1;
			ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Лицензия на оружие", "\
			\n\n{FFFFFF}Вы успешно оформили лицензию на оружие\n\
			Теперь Вам разрешено использовать оружие\n\n\
			{FF6347}За несоблюдение законов и правил обращения с оружием,\n\
			у Вас его могут изъять, вместе с лицензией, а также\n\
			вы можете понести наказание по уголовному кодексу.\n\n", "Ок", "");
		}
	case D_PASS+1:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(PhoneNumbers[playerid][2] != 0) return SendErr(playerid, "У Вас уже есть мед.карта!");
					PhoneNumbers[playerid][2] = 4;
					MysqlUpdatePlayerInt(playerid, "phnumber3", PhoneNumbers[playerid][2]);
					SendClientMessage(playerid, COLOR_GREEN, "Вы успешно получили мед. карту. Чтобы показать, используйте команду '/med'");
				}
			case 1:
			    {
			        if(!GetPVarInt(playerid, "pHospitals"))
				    {
					    if(!WorkSalary[20])
					    {
					    	ShowPlayerDialogEx(playerid, 250, 0, "{ebec86}>> Лечение", "{FFFFFF}Стоимость лечения: {f0e86b}бесплатно\n{FFFFFF}Вам нельзя будет покинуть больницу", "Принять", "Выйти");
						}
					    if(WorkSalary[20])
					    {
						    STRING_GLOBAL = "";
							format(STRING_GLOBAL, 128, "{FFFFFF}Стоимость лечения: {f0e86b}%d{FFFFFF} рублей\n{FFFFFF}Вам нельзя будет покинуть больницу", WorkSalary[20]);
						    ShowPlayerDialogEx(playerid, 250, 0, "{ebec86}>> Лечение", STRING_GLOBAL, "Принять", "Выйти");
						}
					}
					else SendErr(playerid, "Вы уже начали курс реабилитации");
			    }
			}
		}
	case D_PASS:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(p_info[playerid][data_PASS] > 0) return SendErr(playerid, "У Вас уже есть паспорт!");
					if(GetMoney(playerid) < WorkSalary[6]*500) return SendErr(playerid, "Недостаточно средств!");
					
					new random_n = RandomEx(100000,999999);
					p_info[playerid][data_PASS_S] = 5214;
		            p_info[playerid][data_PASS_N] = random_n;
		            p_info[playerid][data_PASS] = 1;

		            new day, month, year;
		    		getdate(year, month, day);

		    		format(p_info[playerid][data_PASS_DATE], 32, "%02d.%02d.%d", day, month, year);
		    		
		    		MysqlUpdatePlayerInt(playerid, "passport", p_info[playerid][data_PASS]);
		    		MysqlUpdatePlayerInt(playerid, "pass_s", p_info[playerid][data_PASS_S]);
		    		MysqlUpdatePlayerInt(playerid, "pass_n", p_info[playerid][data_PASS_N]);
		    		
					new fmt_query[70+MAX_PLAYER_NAME];
					format(fmt_query, sizeof fmt_query, "UPDATE accounts SET pass_d='%d.%d.%d' WHERE name='%s'", day, month, year, GetName(playerid));
					mysql_query(dbHandle, fmt_query);

					GiveMoney(playerid, -WorkSalary[6]*500, "Паспорт");
					
					format(STRING_GLOBAL, 128, "Поздравляем Вас с получением паспорта! Серия: %d, Номер: %d. (/pass)", p_info[playerid][data_PASS_S], p_info[playerid][data_PASS_N]);
					SendClientMessage(playerid, COLOR_GREEN, STRING_GLOBAL);
					
					FracBank[9] += WorkSalary[6]*500;
					MysqlUpdateOtherInt("sfnbank", FracBank[9]);
				}
			}
		}
    case D_HELPER:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(p_info[playerid][pHelper] < 1) return SendErr(playerid, "У вас нет доступа!");
					new year, month, day, string[100];
					new current_date = getdate(year, month, day);
					SendClientMessage(playerid, COLOR_BLUE, "VIP игроки:");
					foreach(new i: Player)
					{
						if(p_info[i][pVip])
						{
							format(string, sizeof(string), "- %s[%i] (осталось дн.: %i)", GetName(i), i, p_info[i][pVipTime] - current_date);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
				}
			case 1:
				{
					if(p_info[playerid][pHelper] < 1) return SendErr(playerid, "У вас нет доступа!");
					new year, month, day;
					new current_date = getdate(year, month, day);
					SendClientMessage(playerid, COLOR_BLUE, "Игроки с мутом:");
					foreach(new i: Player)
					{
						if(p_info[i][pMuted])
						{
							STRING_GLOBAL[0] = EOS;
							format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "- %s[%i] (осталось: %i сек)", GetName(i), i, p_info[i][pMuted] - current_date);
							SendClientMessage(playerid, COLOR_WHITE, STRING_GLOBAL);
						}
					}
				}
			case 2:
				{
					if(p_info[playerid][pHelper] < 1) return SendErr(playerid, "У вас нет доступа!");
					new year, month, day;
					new current_date = getdate(year, month, day);
					SendClientMessage(playerid, COLOR_BLUE, "Игроки в тюрьме:");
					foreach(new i: Player)
					{
						if(p_info[i][pJail])
						{
							STRING_GLOBAL[0] = EOS;
							format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "- %s[%i] (осталось: %i сек)", GetName(i), i, p_info[i][pJailTime] - current_date);
							SendClientMessage(playerid, COLOR_WHITE, STRING_GLOBAL);
						}
					}
				}
			case 3: callcmd::helpers(playerid);
			case 4:
				{
				    STRING_GLOBAL = "{FFFFFF}";
					strcat(STRING_GLOBAL, "Команды хелпера 1LVL:\n");
					strcat(STRING_GLOBAL, "/pm - ответить на вопрос, /helpers - хелперы в игре, /hpanel - панель хелперов, /h - чат хелперов\n\n");
					if(p_info[playerid][pHelper] > 1)
					{
					    strcat(STRING_GLOBAL, "Команды хелпера 2LVL:\n");
						strcat(STRING_GLOBAL, "/spec - проследить за игроком, /specoff - закончить слежку за игроком\n\n");
					}
					if(p_info[playerid][pHelper] > 2)
					{
					    strcat(STRING_GLOBAL, "Команды хелпера 3LVL:\n");
						strcat(STRING_GLOBAL, "/spawn - заспавнить игрока, /slap - подкинуть игрока\n");
					}
					ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды хелперов", STRING_GLOBAL, "Закрыть", "");
				}
			case 5:
				{
					if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "У вас нет доступа");
					mysql_tquery(dbHandle, "SELECT * FROM "T_HELPER" WHERE level > '0'", "AllHelpers", "i", playerid);
				}
			}
		}
	case D_APANEL:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(p_info[playerid][pAdmin] < 5) return SendErr(playerid, "У вас нет доступа");
					new year, month, day, string[100];
					new current_date = getdate(year, month, day);
					SendClientMessage(playerid, COLOR_BLUE, "VIP игроки:");
					foreach(new i: Player)
					{
						if(p_info[i][pVip])
						{
							format(string, sizeof(string), "- %s[%i] (осталось дн.: %i)", GetName(i), i, p_info[i][pVipTime] - current_date);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
				}
			case 1:
				{
					if(p_info[playerid][pAdmin] < 5) return SendErr(playerid, "У вас нет доступа");
					new year, month, day;
					new current_date = getdate(year, month, day);
					SendClientMessage(playerid, COLOR_BLUE, "Игроки с мутом:");
					foreach(new i: Player)
					{
						if(p_info[i][pMuted])
						{
							STRING_GLOBAL[0] = EOS;
							format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "- %s[%i] (осталось: %i сек)", GetName(i), i, p_info[i][pMuted] - current_date);
							SendClientMessage(playerid, COLOR_WHITE, STRING_GLOBAL);
						}
					}
				}
			case 2:
				{
					if(p_info[playerid][pAdmin] < 5) return SendErr(playerid, "У вас нет доступа");
					new year, month, day;
					new current_date = getdate(year, month, day);
					SendClientMessage(playerid, COLOR_BLUE, "Игроки в тюрьме:");
					foreach(new i: Player)
					{
						if(p_info[i][pJail])
						{
							STRING_GLOBAL[0] = EOS;
							format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "- %s[%i] (осталось: %i сек)", GetName(i), i, p_info[i][pJailTime] - current_date);
							SendClientMessage(playerid, COLOR_WHITE, STRING_GLOBAL);
						}
					}
				}
			case 3: callcmd::admins(playerid);
			case 4:
				{
					if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "У вас нет доступа");
					mysql_tquery(dbHandle, "SELECT * FROM "T_ADMIN" WHERE level > '0'", "AllAdmins", "i", playerid);
				}
			case 5:
				{
					if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "У вас нет доступа");
					mysql_tquery(dbHandle, "SELECT * FROM "T_ACCOUNTS" WHERE leader > '0'", "Allleaders", "i", playerid);
				}
            case 6: ShowPlayerDialogEx(playerid, 5678, DIALOG_STYLE_INPUT, "{ebec86}>> Список забаненных", "{ffffff}Введите дату:\nНапример: 3.12.2017", "Далее", "Отмена");
			case 7: callcmd::ahelp(playerid);
			case 8:
				{
					if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "У вас нет доступа");

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ffffff}Телепорт к себе [%s{ffffff}]\nТелепорт себя [%s{ffffff}]\nСлежка за собой [%s{ffffff}]\nИнформация",
					(AdminInfo[playerid][admGoto]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"),
					(AdminInfo[playerid][admGethere]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"),
					(AdminInfo[playerid][admSpectate]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"));
					ShowPlayerDialogEx(playerid, D_APANEL+3, 2, "{ebec86}>> Настройки администратора", STRING_GLOBAL, "Выбрать", "Назад");
				}
			case 9:
				{
				    if(p_info[playerid][pAdmin] < 1) return SendErr(playerid, "У вас нет доступа");
				    STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Правительство: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[1]), frac_patron[1], frac_metall[1]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}ГИБДД: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[2]), frac_patron[2], frac_metall[2]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}ГУВД: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[3]), frac_patron[3], frac_metall[3]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}ФСБ: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[4]), frac_patron[4], frac_metall[4]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Больница: {ebec86}%i{FFFFFF} человек(а).\n", STRING_GLOBAL, Iter_Count(TeamPlayers[5]));
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Автошкола: {ebec86}%i{FFFFFF} человек(а).\n", STRING_GLOBAL, Iter_Count(TeamPlayers[6]));
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Южная ОПГ: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[7]), frac_patron[7], frac_metall[7]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Арзамасская ОПГ: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[8]), frac_patron[8], frac_metall[8]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Армия: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[12]), gArmyWarehouse[1], gArmyWarehouse[0]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Лыткаринская ОПГ: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[15]), frac_patron[15], frac_metall[15]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Батыревская ОПГ: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[16]), frac_patron[16], frac_metall[16]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}RECORD FM: {ebec86}%i{FFFFFF} человек(а).\n", STRING_GLOBAL, Iter_Count(TeamPlayers[18]));
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Спецназ: {ebec86}%i{FFFFFF} человек(а). (патроны: {ebec86}%i{FFFFFF}, металл: {ebec86}%i{FFFFFF})\n", STRING_GLOBAL, Iter_Count(TeamPlayers[21]), frac_patron[21], frac_metall[21]);
					ShowPlayerDialogEx(playerid, D_APANEL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Статистика организаций", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 10:
				{
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Посещение за все время\t\t{ebec86}%i\n", STRING_GLOBAL, MD[5]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Посещение за сегодня\t\t{ebec86}%i\n", STRING_GLOBAL, Conday[0]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Посещение за час\t\t\t{ebec86}%i\n", STRING_GLOBAL, Conday[1]);
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}Регистраций за сегодня\t\t{ebec86}%i\n", STRING_GLOBAL, Conday[2]);
					ShowPlayerDialogEx(playerid, D_APANEL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Инфорация сервера", STRING_GLOBAL, "Назад", "Закрыть");
				}
			case 11:
				{
				    if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "У вас нет доступа");
					ShowPlayerDialogEx(playerid, D_APANEL+5, DIALOG_STYLE_INPUT, "{ebec86}>> Расформировать фракцию", "{FFFFFF}Введите ID фракции, которую необходимо расформировать:","ОК","Отмена");
				}
			case 12:
				{
					if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "У вас нет доступа");
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ffffff}Удвоение опыта [%s{FFFFFF}]\nУдвоение доната [%s{FFFFFF}]\nУдвоение зарплаты [%s{FFFFFF}]\nПик онлайна для x2 [{f0e86b}%d{ffffff} игроков]",
					(!doubling_exp) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					(!doubling_donate) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					(!doubling_job) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					pickplayers[0]);
					ShowPlayerDialogEx(playerid, D_APANEL+2, 2, "{ebec86}>> Управление сервером", STRING_GLOBAL, "Выбрать", "Назад");
				}
			}
		}
    case 5678:
		{
		    if(!response) return 1;
		    new query[75];
			format(query, sizeof query, "SELECT * FROM bans WHERE bandate = '%s'", inputtext);
			mysql_tquery(dbHandle, query, "ShowOrgAllPlayers2", "i", playerid);
		}
	case D_APANEL+2:
		{
			if(!response) return callcmd::apanel(playerid);
			switch(listitem)
			{
			case 0:
				{
					doubling_exp = (!doubling_exp) ? (1) : (0);
					MysqlUpdateOtherInt("d_exp", doubling_exp);
					
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ffffff}Удвоение опыта [%s{FFFFFF}]\nУдвоение доната [%s{FFFFFF}]\nУдвоение зарплаты [%s{FFFFFF}]\nПик онлайна для x2 [{f0e86b}%d{ffffff} игроков]",
					(!doubling_exp) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					(!doubling_donate) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					(!doubling_job) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					pickplayers[0]);
					ShowPlayerDialogEx(playerid, D_APANEL+2, 2, "{ebec86}>> Управление сервером", STRING_GLOBAL, "Выбрать", "Назад");
				}
			case 1:
				{
					doubling_donate = (!doubling_donate) ? (1) : (0);
					MysqlUpdateOtherInt("d_donate", doubling_donate);
					
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ffffff}Удвоение опыта [%s{FFFFFF}]\nУдвоение доната [%s{FFFFFF}]\nУдвоение зарплаты [%s{FFFFFF}]\nПик онлайна для x2 [{f0e86b}%d{ffffff} игроков]",
					(!doubling_exp) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					(!doubling_donate) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					(!doubling_job) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					pickplayers[0]);
					ShowPlayerDialogEx(playerid, D_APANEL+2, 2, "{ebec86}>> Управление сервером", STRING_GLOBAL, "Выбрать", "Назад");
				}
			case 2:
				{
					doubling_job = (!doubling_job) ? (1) : (0);
					MysqlUpdateOtherInt("d_jobik", doubling_job);
					
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ffffff}Удвоение опыта [%s{FFFFFF}]\nУдвоение доната [%s{FFFFFF}]\nУдвоение зарплаты [%s{FFFFFF}]\nПик онлайна для x2 [{f0e86b}%d{ffffff} игроков]",
					(!doubling_exp) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					(!doubling_donate) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					(!doubling_job) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
					pickplayers[0]);
					ShowPlayerDialogEx(playerid, D_APANEL+2, 2, "{ebec86}>> Управление сервером", STRING_GLOBAL, "Выбрать", "Назад");
				}
			case 3: ShowPlayerDialogEx(playerid, D_APANEL+6, 1, "{ebec86}>> Настройка пикового онлайна", "{FFFFFF}Введите количество игроков для пикового онлайна x2:", "Далее", "Отмена");
			}
		}
    case D_APANEL+6:
		{
		    if(!response) pc_cmd_apanel(playerid);
		    pickplayers[0] = strval(inputtext);
			MysqlUpdateOtherInt("pickplayers", pickplayers[0]);
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ffffff}Удвоение опыта [%s{FFFFFF}]\nУдвоение доната [%s{FFFFFF}]\nУдвоение зарплаты [%s{FFFFFF}]\nПик онлайна для x2 [{f0e86b}%d{ffffff} игроков]",
			(!doubling_exp) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
			(!doubling_donate) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
			(!doubling_job) ? ("{FF6347}Выключено") : ("{f0e86b}Включено"),
			pickplayers[0]);
			ShowPlayerDialogEx(playerid, D_APANEL+2, 2, "{ebec86}>> Управление сервером", STRING_GLOBAL, "Выбрать", "Назад");
		}
	case D_APANEL+3:
		{
			if(!response) return callcmd::apanel(playerid);
			if(listitem < 3)
			{
				switch(listitem)
				{
				case 0:
					{
						AdminInfo[playerid][admGoto] = (!AdminInfo[playerid][admGoto]) ? (1) : (0);

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ADMIN" SET a_goto='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admGoto], GetName(playerid));
						mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					}
				case 1:
					{
						AdminInfo[playerid][admGethere] = (!AdminInfo[playerid][admGethere]) ? (1) : (0);

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ADMIN" SET a_gethere='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admGoto], GetName(playerid));
						mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					}
				case 2:
					{
						AdminInfo[playerid][admSpectate] = (!AdminInfo[playerid][admSpectate]) ? (1) : (0);

						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ADMIN" SET a_spec='%d' WHERE name='%s' LIMIT 1", AdminInfo[playerid][admGoto], GetName(playerid));
						mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					}
				}
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ffffff}Телепорт к себе [%s{ffffff}]\nТелепорт себя [%s{ffffff}]\nСлежка за собой [%s{ffffff}]\nИнформация",
				(AdminInfo[playerid][admGoto]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"),
				(AdminInfo[playerid][admGethere]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"),
				(AdminInfo[playerid][admSpectate]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"),
				pickplayers[0]);
				ShowPlayerDialogEx(playerid, D_APANEL+3, 2, "{ebec86}>> Настройки администратора", STRING_GLOBAL, "Выбрать", "Назад");
			}
			else
			{
				switch(listitem)
				{
				case 3: ShowPlayerDialogEx(playerid, D_APANEL+4, 0, "{ebec86}>> Информация", "{FFFFFF}Данные запреты действуют только на администраторов младше 9 уровня", "Назад", "");
				}
			}
		}
	case D_APANEL+4:
		{
			if(response)
			{
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{ffffff}Телепорт к себе [%s{ffffff}]\nТелепорт себя [%s{ffffff}]\nСлежка за собой [%s{ffffff}]\nИнформация",
				(AdminInfo[playerid][admGoto]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"),
				(AdminInfo[playerid][admGethere]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"),
				(AdminInfo[playerid][admSpectate]) ? ("{FF6347}Запрещено") : ("{f0e86b}Разрешено"));
				ShowPlayerDialogEx(playerid, D_APANEL+3, 2, "{ebec86}>> Настройки администратора", STRING_GLOBAL, "Выбрать", "Назад");
			}
		}
	case D_APANEL+5:
		{
			STRING_GLOBAL[0] = EOS;
			mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET `member` = 0, `rank` = 0, `leader` = 0 WHERE `member` = '%i'",strval(inputtext));
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			SendClientMessage(playerid,-1,"Фракция расформирована");
		}
	case D_JOB+201:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
				    if(GeneralCard[playerid] == 1)
				    {
				        SendInf(playerid, "Вы изменили способ оплаты на 'наличными'");
				        GeneralCard[playerid] = 0;
				        return 1;
				    }
				    else
				    {
				        SendInf(playerid, "Вы изменили способ оплаты на 'с карты'");
	       				GeneralCard[playerid] = 1;
				       	return 1;
				   	}
				}
			case 1: ShowPlayerDialogEx(playerid, dSetWalk, 2, " ", "1. Стандартная\n2. Походка 1\n3. Походка 2\n4. Походка 3\n5. Походка 4\n6. Походка 5\n7. Походка 6\n8. Походка 7\n9. Походка 8\n10. Походка 9\n11. Походка 10\n12. Походка 11", "Дальше", "Закрыть");
			case 2: ShowPlayerDialogEx(playerid, dSetAnim, 2, " ", "1. Стандартный\n2. Стиль 1\n3. Стиль 2\n4. Стиль 3\n5. Стиль 4\n6. Стиль 5\n7. Стиль 6", "Дальше", "Закрыть");
            case 3:
				{
					if(DamageInfo[playerid] == 0) DamageInfo[playerid] = 1;
					else DamageInfo[playerid] = 0;
				}
			case 4:
				{
				    if(Kolokol[playerid] == 0) Kolokol[playerid] = 1;
					else Kolokol[playerid] = 0;
				}
			case 5:
				{
					ShowPlayerDialogEx(playerid, D_JOB+20, 1, "{ebec86}>> Смена нонРП ника",
					"{FFFFFF}Вы можете изменить имя своего персонажа, если оно не соответствует RP правилам\n"\
					"Во всех остальных случаях смена имени осуществляется в {66CC00}/menu > Донат.\n\n"\
					"{f0e86b}RP ник имеет формат Имя_Фамилия.\n"\
					"Например: Andrey_Ivanov, Nikolas_Ryan, Kate_Valente и т. п.\n\n"\
					"Введите новое имя в поле ниже. Допустимы только латинские символы:",
					"Принять", "Назад");
				}
			case 6: ShowPlayerDialogEx(playerid, D_JOB+18, 1, "{ebec86}>> Смена пароля", "{FFFFFF}Введите ваш действующий пароль:", "Принять", "Отмена");
			case 7:
				{
					SendErr(playerid, "Временно недоступно");
					/*if(!GetPVarInt(playerid, "authcode"))
					{
						if(p_info[playerid][pMailConfirmed]) return SendErr(playerid, "Ваша почта уже потверждена!");
						ShowPlayerDialogEx(playerid, D_MAIL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Потверждение почты", "{FFFFFF}На почту, которую Вы указали при регистрации, отправлен код потверждения.", "Ок", "Закрыть");
					}
					else ShowPlayerDialogEx(playerid, D_MAIL+1, DIALOG_STYLE_INPUT, "{ebec86}>> Потверждение почты", "{FFFFFF}Используйте сюда код который пришёл Вам на почту", "Принять", "Закрыть");*/
				}
			case 8:
			    {
			        STRING_GLOBAL = "";
	            	format(STRING_GLOBAL, 256, "SELECT * FROM `captchalog` WHERE `clName` = '%s' ORDER BY `captchalog`.`clID` DESC LIMIT 10", p_info[playerid][pName]);
	  				mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerCaptchaLoaded", "i", playerid);
		    		return 1;
				}
			case 9:
				{
					if(p_info[playerid][pCheckCode])
					{
						p_info[playerid][pCheckCode] = 0;
						MysqlUpdatePlayerInt(playerid,"checkcode",p_info[playerid][pCheckCode]);
						PlayerSecurity(playerid);
					}
					else ShowPlayerDialogEx(playerid, 12422, DIALOG_STYLE_INPUT, "{ebec86}>> Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
				}
			case 10:
				{
					if(p_info[playerid][pCheckCode])
					{
						new mes[30];
						switch(p_info[playerid][pCheckCode])
						{
						case 1: mes = "Запрашивается всегда";
						case 2: mes = "При несовпадении IP адреса";
						case 3: mes = "При несовпадении подсети";
						}
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "- {ebec86}%s{FFFFFF}\n1. Запрашивать всегда\n2. При несовпадении IP адреса\n3. При несовпадении подсети", mes);
						ShowPlayerDialogEx(playerid, 12423, DIALOG_STYLE_LIST, "{ebec86}>> Настройки графического пароля", STRING_GLOBAL, "Выбрать", "Назад");
					}
					else SendErr(playerid, "У вас не установлен графический пароль");
				}
			}
		}
	case 12422:
		{
			if(!response) return PlayerSecurity(playerid);
			new day;
			if(sscanf(inputtext, "i", day)) return ShowPlayerDialogEx(playerid, 12422, DIALOG_STYLE_INPUT, "{ebec86}>> Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
			if(strlen(inputtext) != 4) return ShowPlayerDialogEx(playerid, 12422, DIALOG_STYLE_INPUT, "{ebec86}>> Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
			if(strfind(inputtext, "0", true) != -1)
			{
				ShowPlayerDialogEx(playerid, 12422, DIALOG_STYLE_INPUT, "{ebec86}>> Графический пароль", "{FFFFFF}Графический пароль защищает ваш аккаунт, если Ваш IP адрес не совпадает с последним IP адресом.\nУбедитесь в правильности ввода данных и сделайте скриншот (F8).\nГрафический пароль может состоять только из 4 цифр!", "Принять", "Назад");
				return SendErr(playerid, "В графическом пароле нельзя использовать цифру 0");
			}
			p_info[playerid][pSecurityCode] = day;
			p_info[playerid][pCheckCode] = 2;
			SCMF(playerid, COLOR_LIME, "Ваш новый графический пароль: {ffffff}%i", day);
			SendClientMessage(playerid, COLOR_LIME, "Рекомендуется сделать скриншот. Клавиша: {ffffff}F8");
			MysqlUpdatePlayerInt(playerid,"securitycode",p_info[playerid][pSecurityCode]);
			MysqlUpdatePlayerInt(playerid,"checkcode",p_info[playerid][pCheckCode]);
		}
	case 12423:
		{
			if(!response) return PlayerSecurity(playerid);
			switch(listitem)
			{
			case 1:
				{
					p_info[playerid][pCheckCode] = 1;
					SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при каждом заходе на сервер");
				}
			case 2:
				{
					p_info[playerid][pCheckCode] = 2;
					SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при несовпадении IP адреса");
				}
			case 3:
				{
					p_info[playerid][pCheckCode] = 3;
					SendClientMessage(playerid, COLOR_GREEN, "Графический пароль будет запрашиваться при несовпадении подсети");
				}
			}
			MysqlUpdatePlayerInt(playerid,"checkcode",p_info[playerid][pCheckCode]);
		}
	case D_JOB+18:
		{
			if(!response) return 1;
			new len = strlen(inputtext);

			if(1 <= len <= 15)
			{
				if(strlen(inputtext) && !strcmp(p_info[playerid][pPassword], inputtext, false, 16))
				{
					ShowPlayerDialogEx(playerid, D_JOB+19, 1, "{ebec86}>> Смена пароля", "{ffffff}Введите новый пароль:", "Принять", "Отмена");

					return 1;
				}
				else SendErr(playerid, "Вы ввели неверный пароль");
			}
			else SendErr(playerid, "Количество символов от 1 до 15!");
		}
	case D_JOB+19:
		{
			if(!response) return 1;
			if(!(1 <= strlen(inputtext) <= 15) || strfind(inputtext, " ") != -1)
			{
				SendErr(playerid, "Длина пароля должна быть от 6 до 15 символов");
				SendErr(playerid, "Также не допускается использование пробелов");
			}
			else
			{
				new fmt_msg[90+MAX_PLAYER_NAME];

				strmid(p_info[playerid][pPassword], inputtext, 0, strlen(inputtext), 32);

				format(fmt_msg, sizeof fmt_msg, "Ваш новый пароль: {ffffff}'%s' (без кавычек)", inputtext);
				SendClientMessage(playerid, COLOR_LIGHTRED, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "UPDATE "T_ACCOUNTS" SET `password` = '%s' WHERE `name` = '%s'", inputtext, GetName(playerid));
				mysql_tquery(dbHandle, fmt_msg, "", "");

				SendClientMessage(playerid, COLOR_LIGHTRED, "Рекомендуется сделать скриншот. Клавиша: {ffffff}F8");
			}

		}
	case D_JOB+20:
		{
			if(!response) return 1;

			new len = strlen(inputtext);

			if(3 <= len <= 20)
			{
				new bool: valid_name = true;
				for(new idx; idx < len; idx ++)
				{
					switch(inputtext[idx])
					{
					case 'a'..'z', 'A'..'Z', '[', ']', '_': continue;
					default:
						valid_name = false;
					}
				}

				if(valid_name == false)
				return ShowPlayerDialogEx(playerid, D_JOB+20, 1, "{ebec86}>> Смена нонРП ника", "{FFFFFF}Введите будущий ник\n\n{FF6347}Возможно сменить только если у Вас нонРП ник!", "Принять", "Назад");

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", inputtext);
				mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerChangeName", "is", playerid, inputtext);
			}
		}
	case D_JOB+23:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			new arid = GetArendCarID(GetPlayerVehicleID(playerid));
			if(arid != -1)
			{
				if(GetPVarInt(playerid, "arendkey") == -1)
				{
					if(ArendInfo[arid][aPlayerID] == INVALID_PLAYER_ID || !IsPlayerConnected(ArendInfo[arid][aPlayerID]))
					{
						if(GetMoney(playerid) >= ArendInfo[arid][aCost])
						{
							SetPVarInt(playerid, "arendkey", arid);
							GiveMoney(playerid,-ArendInfo[arid][aCost], "Аренда т/с");
							ArendInfo[arid][aPlayerID] = playerid;
							SendClientMessage(playerid, COLOR_FADE1, "Вы успешно арендовали этот транспорт");
							ShowPlayerDialogEx(playerid, 0, 0, "{ebec86}>> Вы успешно арендовали транспорт", "{FFFFFF}Список доступных команд:\n\n{46ca00}/lock 3{FFFFFF} - закрыть/открыть арендованный транспорт\n{46ca00}/crent{FFFFFF} - отказаться от аренды\n\n{afafaf}При отдалении от ТС на 2км контракт автоматически расторгается", "Закрыть", "");
						}
						else
						{
							SendClientMessage(playerid, COLOR_FADE1, "У вас не хватает денег");
							RemovePlayerFromVehicle(playerid);
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_FADE1, "Этот транспорт уже арендуют");
						RemovePlayerFromVehicle(playerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_FADE1, "Вы уже арендуете транспорт");
					RemovePlayerFromVehicle(playerid);
				}
			}
			return 1;
		}
	case D_JOB+31:
		{
			if(!response) return 1;
			ClothesRound[playerid] = 2;
			InShopSkin[playerid] = GetPlayerVirtualWorld(playerid);
			AC_SpawnPlayer(playerid);
		}
    case DIALOG_DRIVING_TUTORIAL_START:
			{
				if(response)
					ShowDrivingTutorialSection(playerid, 0);
			}
			case DIALOG_DRIVING_TUTORIAL:
			{
				new step = GetPVarInt(playerid, "driving_tutorial_step");
				if(response)
				{
					step ++;
				}
				else step --;

				if(step >= sizeof driving_tutorial)
				{
					ShowPlayerDialogEx
					(
						playerid, DIALOG_DRIVING_TUTORIAL_END, DIALOG_STYLE_MSGBOX,
						"{ebec86}>> Завершение",
						"{FFFFFF}Надеемся вы все внимательно прочли и готовы приступить к сдаче экзамена\n"\
						"Если вы сомневаетесь в чем-либо, то рекомендуем не рисковать и прочитать нужный раздел еще раз!\n\n"\
						"{CC9900}Желаем Вам удачи на экзамене!\n"\
						"Для того, чтобы завершить обучение нажмите \"Выход\"",
						"Выход", "Назад"
					);
				}
				else if(step < 0)
				{
					ShowPlayerDrivingTutorial(playerid);
				}
				else
				{
					ShowDrivingTutorialSection(playerid, step);
				}
			}
			case DIALOG_DRIVING_TUTORIAL_END:
			{
				if(!response)
					ShowDrivingTutorialSection(playerid, sizeof driving_tutorial - 1);
			}
			case DIALOG_DRIVING_EXAM_INFO:
			{
				if(response)
				{
				    GiveMoney(playerid, -WorkSalary[26], "Вод. права");
					FracBank[9] += WorkSalary[26];
					MysqlUpdateOtherInt("sfnbank", FracBank[9]);
					
					ShowPlayerDialogEx
					(
						playerid, DIALOG_DRIVING_EXAM_START, DIALOG_STYLE_MSGBOX,
						"{ebec86}>> Теоретическая часть",
						"{FFFFFF}Вам будет предложено 12 вопросов для проверки теоретических знаний\n"\
						"Чтобы сдать эту часть экзамена необходимо ответить минимум на 9 из них\n"\
						"Если правильных ответов будет меньше, то вы не будете допущены до практический части\n\n"\
						"{33CCFF}На каждый вопрос будет несколько вариантов ответа, правильный из который только один.\n"\
						"О результате вы узнаете когда ответите на все 12 вопросов",
						"Далее", "Отмена"
					);
					ClearPlayerDrivingExamInfo(playerid);
				}
			}
			case DIALOG_DRIVING_EXAM_START:
			{
				if(response)
				{
					SetPlayerDrivingExamInfo(playerid, DE_POINTS, 0);
					ShowPlayerDrivingExam(playerid, 0);
				}
			}
			case DIALOG_DRIVING_EXAM:
			{
				new step = GetPlayerDrivingExamInfo(playerid, DE_EXAM_STEP);

				if(driving_exam[step][DE_CORRECT_ANSWER] == (listitem + 1))
				{
					SetPlayerChatBubble(playerid, "+1", 0xFFFF00FF, 5.0, 2000);
					SetPlayerDrivingExamInfo(playerid, DE_POINTS, GetPlayerDrivingExamInfo(playerid, DE_POINTS) + 1);
				}
				ShowPlayerDrivingExam(playerid, step + 1);
			}
			case DIALOG_DRIVING_EXAM_RESULT:
			{
				if(GetPlayerDrivingExamInfo(playerid, DE_POINTS) >= 9)
				{
					ShowPlayerDialogEx
					(
						playerid, D_NULL, DIALOG_STYLE_MSGBOX,
						"{ebec86}>> Практическая часть",
						"{FFFFFF}Отлично, теперь приступим к практической части\n"\
						"Вам нужно будет немного проехаться по городу на учебном авто\n"\
						"Найти его можно на стоянке слева от выхода\n\n"\
						"{66CC00}Внимание! Соблюдайте осторожность и не превышайте скорость\n"\
						"Если вы повредите автомобиль экзамен будет провален",
						"Начать", ""
					);
				}
			}
	case D_JOB+42:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(GetMoney(playerid) < WorkSalary[26]) return SendErr(playerid, "Недостаточно средств");
					if(p_info[playerid][pLic][0] == 1) return SendErr(playerid, "У вас уже имеются водительские права");
					
					STRING_GLOBAL = "";
				    format(STRING_GLOBAL, 512,
				   	"{FFFFFF}Здравствуйте!\n"\
					"Вы готовы приступить к экзамену? Тогда начнем.\n"\
					"Экзамен будет состоять из теоретической и практической части\n"\
					"В теории вам нужно будет ответить на вопросы из вашего экзаменационного билета,\n"\
					"а в практике применить полученные знания за рулем учебного автомобиля.\n\n"\
					"{CC9900}Сдача на права стоит %d рублей и в случае провала деньги не будут возвращены!\n"\
					"Поэтому перед сдачей внимательно прочитайте обучающий раздел", WorkSalary[26]);
					
					ShowPlayerDialogEx
					(
						playerid, DIALOG_DRIVING_EXAM_INFO, DIALOG_STYLE_MSGBOX,
						"{ebec86}>> Экзамен по вождению",
						STRING_GLOBAL,
						"Начать", "Отмена"
					);
				}
			case 1:
				{
					if(GetMoney(playerid) < WorkSalary[27]) return SendErr(playerid, "Недостаточно средств");
					if(p_info[playerid][pLic][2] == 1) return SendErr(playerid, "У вас уже имеются воздушные права");
					
					GiveMoney(playerid, -WorkSalary[27], "Вод. права");
					FracBank[9] += WorkSalary[27];
					MysqlUpdateOtherInt("sfnbank", FracBank[9]);
					
					p_info[playerid][pLic][2] = 1;

					format(p_info[playerid][pLics],16,"%i, %i, %i, %i",p_info[playerid][pLic][0],p_info[playerid][pLic][1],p_info[playerid][pLic][2],p_info[playerid][pLic][3]);

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE name='%s'", p_info[playerid][pLics], GetName(playerid));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
			case 2:
				{
					if(GetMoney(playerid) < WorkSalary[28]) return SendErr(playerid, "Недостаточно средств");
					if(p_info[playerid][pLic][1] == 1) return SendErr(playerid, "У вас уже имеются водные права");
					
					GiveMoney(playerid, -WorkSalary[28], "Вод. права");
					FracBank[9] += WorkSalary[28];
					MysqlUpdateOtherInt("sfnbank", FracBank[9]);
					
					p_info[playerid][pLic][1] = 1;

					format(p_info[playerid][pLics],16,"%i, %i, %i, %i",p_info[playerid][pLic][0],p_info[playerid][pLic][1],p_info[playerid][pLic][2],p_info[playerid][pLic][3]);

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET lic='%s' WHERE name='%s'", p_info[playerid][pLics], GetName(playerid));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
			case 3:
			    {
					if(GetMoney(playerid) < WorkSalary[29]) return SendErr(playerid, "Недостаточно средств");
					if(GetPlayerBizz(playerid) == 0) return SendErr(playerid, "У Вас нет бизнеса");

					new i = GetPVarInt(playerid, "PlayerBizz");
					BizzInfo[i][bLic] = 1;
					MysqlUpdateBizzInt(i, "lic", BizzInfo[i][bLic]);
					GiveMoney(playerid, -WorkSalary[29], "Лицензия на бизнес");

					FracBank[9] += WorkSalary[29];
					MysqlUpdateOtherInt("sfnbank", FracBank[9]);

					SendErr(playerid, "Вы успешно приобрели лицензию на Ваш бизнес");
			    }
			case 4:
			    {
			        ShowPlayerDrivingTutorial(playerid);
				}
			}
			return 1;
		}
	case D_JOB+53:
		{
			if(!response) return 1;
			if(!GetPVarInt(playerid, "O_COLOR")) return SendErr(playerid, "Сначала выберите основной цвет");
			new color;
			if(sscanf(inputtext, "i",color)) return ShowPlayerDialogEx(playerid, D_JOB+53, 1, "{ebec86}>> Цвет салона", "{FFFFFF}Введите цвет салона транспорта:", "Принять", "Отмена");
			if(color < 0 || color > 252)
			{
				ShowPlayerDialogEx(playerid, D_JOB+53, 1, "{ebec86}>> Цвет салона", "{FFFFFF}Введите цвет салона транспорта:", "Принять", "Отмена");
				return SendErr(playerid, "ID цвета от 0 до 252");
			}
			colors[playerid][1] = color;
			ChangeVehicleColor(GetPlayerVehicleID(playerid), colors[playerid][0], colors[playerid][1]);
			DeletePVar(playerid, "O_COLOR");
			return 1;
		}
	case D_JOB+54:
		{
			if(!response) return 1;
			new color;
			if(sscanf(inputtext, "i",color)) return ShowPlayerDialogEx(playerid, D_JOB+54, 1, "{ebec86}>> Основной цвет", "{FFFFFF}Введите основной цвет транспорта:", "Принять", "Отмена");
			if(color < 0 || color > 252)
			{
				ShowPlayerDialogEx(playerid, D_JOB+54, 1, "{ebec86}>> Основной цвет", "{FFFFFF}Введите основной цвет транспорта:", "Принять", "Отмена");
				return SendErr(playerid, "ID цвета от 0 до 252!");
			}
			//ChangeVehicleColor(GetPlayerVehicleID(playerid), color, 1);
			colors[playerid][0] = color;
			SetPVarInt(playerid, "O_COLOR", 1);
			return 1;
		}
	case D_JOB+177:
		{
			if(!response) return 1;
			switch(listitem)
			{
			case 0:
				{
					if(p_info[playerid][pImprove][0] == 1) return SendErr(playerid, "Вы уже приобрели данное улучшение");
					if(p_info[playerid][pLevel] < 5) return SendErr(playerid, "Необходим 5 уровень и 50000 рублей");
					if(GetMoney(playerid) < 50000) return SendErr(playerid, "Необходим 5 уровень и 50000 рублей");
					GiveMoney(playerid, -50000, "Выносливость");
					p_info[playerid][pImprove][0] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Ваша выносливость была улучшена");
				}
			case 1:
				{
					if(p_info[playerid][pImprove][1] == 1) return SendErr(playerid, "Вы уже приобрели данное улучшение");
					if(p_info[playerid][pLevel] < 7) return SendErr(playerid, "Необходим 7 уровень и 75000 рублей");
					if(GetMoney(playerid) < 75000) return SendErr(playerid, "Необходим 7 уровень и 75000 рублей");
					GiveMoney(playerid, -75000, "Решительность");
					p_info[playerid][pImprove][1] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Теперь Вы можете самостоятельно увольняться с организации (/exitf)");
				}
			case 2:
				{
					if(p_info[playerid][pImprove][3] == 1) return SendErr(playerid, "Вы уже приобрели данное улучшение");
					if(p_info[playerid][pLevel] < 10) return SendErr(playerid, "Необходим 10 уровень и 125000 рублей");
					if(GetMoney(playerid) < 125000) return SendErr(playerid, "Необходим 10 уровень и 125000 рублей");
					GiveMoney(playerid, -125000, "Антизаглушение");
					p_info[playerid][pImprove][3] = 1;
					SendClientMessage(playerid, COLOR_LIME, "Теперь Ваш транспорт не будет глохнуть при столкновениях");
				}
			case 3:
				{
					new string_dialogue[841], string[340];
					format(string, sizeof(string), "{FFFFFF}Выносливость - способность организма к продолжительному выполнению какой-либо работы\nбез заметного снижения работоспособности. С данным улучшением, при голоде,\nВаше здоровье будет гораздо дольше держаться, по сравнению с невыносливым человеком.");
					strcat(string_dialogue, string);
					strcat(string_dialogue, "\n\n");
					format(string, sizeof(string), "{FFFFFF}Решительность - это индивидуальное качество воли человека, связанное со способностью и умением\nсамостоятельно и своевременно принимать ответственные решения и упорно реализовывать их в реальной деятельности.\nДанное улучшение позволит Вам самостоятельно, без каких-либо просьб, увольняться из организации - /exitf.");
					strcat(string_dialogue, string);
					strcat(string_dialogue, "\n\n");
					format(string, sizeof(string), "{FFFFFF}Мастер вождения - став мастером вождения, двигатель транспорта под Вашим управлением\nбольше не будет глохнуть при различных ударах.");
					strcat(string_dialogue, string);
					ShowPlayerDialogEx(playerid, D_NULL, 0, "{ebec86}>> Помощь", string_dialogue, "Закрыть", "");
				}
			}

			new fmt_query[70+MAX_PLAYER_NAME];

			format(fmt_query, sizeof fmt_query, "UPDATE accounts SET improves='%i, %i, %i, %i' WHERE name='%s'", p_info[playerid][pImprove][0],p_info[playerid][pImprove][1],p_info[playerid][pImprove][2],p_info[playerid][pImprove][3], GetName(playerid));
			mysql_query(dbHandle, fmt_query);
		}
	case D_JOB+179:
		{
			if(!response) return callcmd::donate(playerid);
			if(p_info[playerid][pCredits] < 20) return SendErr(playerid, "Недостаточно кредитов!");

			new len = strlen(inputtext);

			if(3 <= len <= 20)
			{
				new bool: valid_name = true;
				for(new idx; idx < len; idx ++)
				{
					switch(inputtext[idx])
					{
					case 'a'..'z', 'A'..'Z', '[', ']', '_': continue;
					default:
						valid_name = false;
					}
				}

				if(valid_name == false)
				return ShowPlayerDialogEx(playerid, D_JOB+179, 1, "{ebec86}>> Смена Nick_Name", "{FFFFFF}Введите будущий игровой Nick_Name:", "Принять", "Назад");

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", inputtext);
				mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerChangeDonateName", "is", playerid, inputtext);
			}
			else ShowPlayerDialogEx(playerid, D_JOB+179, 1, "{ebec86}>> Смена Nick_Name", "{FFFFFF}Введите будущий игровой Nick_Name:", "Принять", "Назад");
		}
	case D_JOB+130:
		{
			new targetid = GetPVarInt(playerid, "MechanicPlayer"), price = GetPVarInt(playerid, "MechanicPrice");
			if(response)
			{
				if(GetPlayerState(playerid) == 2)
				{
					if(GetMoney(playerid) < price)
					{
						SCMF(targetid,COLOR_LIGHTBLUE, "У игрока %s недостаточно средств", GetName(playerid));
						DeletePVar(playerid, "MechanicPlayer");
						DeletePVar(playerid, "MechanicPrice");
						return SendErr(playerid, "Недостаточно средств");
					}
					if(Fuel[GetPlayerVehicleID(playerid)] >= 100)
					{
						SendClientMessage(targetid, COLOR_BLUE, "У игрока достаточно бензина в баке");
						DeletePVar(playerid, "MechanicPlayer");
						DeletePVar(playerid, "MechanicPrice");
						return SendErr(playerid, "У вас достаточно бензина в баке");
					}
					GiveMoney(playerid, -price, "/refill механику");
					p_info[playerid][pBank] += price;
					MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
					SCMF(playerid, COLOR_BLUE, "Автомеханик %s заправил ваш транспорт за %iр", GetName(targetid), price);
					SCMF(targetid, COLOR_BLUE, "Вы заправили транспорт %s за %iр", GetName(playerid), price);
					Fuel[GetPlayerVehicleID(playerid)] = 100;
				}
				else SendClientMessage(playerid, COLOR_LIGHTBLUE, "Вы должны находиться в транспорте!");
			}
			else
			{
				SCMF(targetid, COLOR_LIGHTBLUE, "%s отклонил предложение заправить транспорт за %iр", GetName(playerid), price);
				DeletePVar(playerid, "MechanicPlayer");
				DeletePVar(playerid, "MechanicPrice");
			}
		}
	case D_JOB+131:
		{
			if(!response) return 1;
			if(PlayerLogged[playerid] == false) return 1;
			if(p_info[playerid][pLeader] > 0)
			{
				new price, bank;
				if(sscanf(inputtext, "i",price)) return ShowPlayerDialogEx(playerid, D_JOB+131, 1, "{ebec86}>> Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
				if(p_info[playerid][pMember] == TEAM_SMI) bank = FracBank[8];
				if(p_info[playerid][pMember] == TEAM_MERIA) bank = FracBank[9];
				if(p_info[playerid][pMember] == TEAM_LVNEWS) bank = FracBank[10];
				if(price < 1 || price > bank)
				{
					SCMF(playerid, COLOR_GREY, "Количество денег от 1 до %i!", bank);
					return ShowPlayerDialogEx(playerid, D_JOB+131, 1, "{ebec86}>> Снять деньги", "{FFFFFF}Введите количество денег:", "Обналичить", "Назад");
				}
				SCMF(playerid, COLOR_BLUE, "Вы взяли %iр из сейфа. Остаток: %iр", price, bank-price);
				
				format(STRING_GLOBAL, 128, "%s взял со склада %d рублей", p_info[playerid][pName], price);
				WriteLogs(p_info[playerid][pMember], TYPE_LOG_OBWYAK, STRING_GLOBAL);
				
				GiveMoney(playerid, price, "Снятие с банка орг.");
				if(p_info[playerid][pMember] == TEAM_SMI) MysqlUpdateOtherInt("lsnbank", FracBank[8]),FracBank[8]-=price;
				if(p_info[playerid][pMember] == TEAM_MERIA) MysqlUpdateOtherInt("sfnbank", FracBank[9]),FracBank[9]-=price;
				if(p_info[playerid][pMember] == TEAM_LVNEWS) MysqlUpdateOtherInt("lvnbank", FracBank[10]),FracBank[10]-=price;
			}
		}
	case D_JOB+136:
		{
			if(!response) return 1;
			if(response)
			{
				if(!SetPlayerAnimation(playerid, listitem))
				{
					ShowPlayerDialogEx
					(
						playerid, D_NULL, DIALOG_STYLE_MSGBOX,
						"{ebec86}>> Информация",
						"{FFFFFF}Для быстрого запуска нужной анимации можно использовать /anim(list) [номер анимации из списка]",
						"Закрыть", ""
					);
				}
			}
			return 1;
		}
	case D_ALOGIN:
		{
			if(!response) return 1;
			new string[144];
			switch(GetPVarInt(playerid,"aLogin"))
			{
			case 1:
				{
					if(!strlen(inputtext)|| !strcmp(inputtext, "qwerty", true) || strlen(inputtext) < 6 || strlen(inputtext) > 16 || strfind(inputtext, "=", true) != -1)
					return ShowPlayerDialogEx(playerid, D_ALOGIN, DIALOG_STYLE_PASSWORD, "{ebec86}>> Регистрация администратора", "\
					{FFFFFF}Введите пароль, который будет от панели администратора\n\n\
					{f0e86b}Примечание:\n\
					\t- Пароль должен состоять из латинских букв и цифр\n\
					\t- Размер пароля от 6 до 15 символов", "Принять", "Отмена");
					SetPVarString(playerid, "inputtext", inputtext);
					format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE `name` = '%s'", GetName(playerid));
					mysql_tquery(dbHandle, string, "AloginReg", "is", playerid, GetName(playerid));
				}
			case 0:
				{
					if(!strlen(inputtext)) return ShowPlayerDialogEx(playerid, D_ALOGIN, DIALOG_STYLE_PASSWORD, "{ebec86}>> Доступ администратора", "\
				{FFFFFF}Введите Ваш пароль от панели администратора", "Принять", "Отмена");
					mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE `name` = '%s' AND `password` = '%e'", GetName(playerid), inputtext);
					mysql_tquery(dbHandle, string, "AloginAuth", "is", playerid, inputtext);
					SendClientMessage(playerid,COLOR_YELLOW, "Вы успешно вошли как администратор!");
				}
			}
			return 1;
		}
	}
	return 1;
}

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
	if(PlayerLogged[playerid] == false) return 0;
	return 1;
}

cmd:mutelist(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new list,full,str[100];

	foreach(new i: Player)
	{
		if(p_info[i][pMuted] > 0) list++;
	}
	STRING_GLOBAL[0] = EOS;
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == false) continue;
		if(p_info[i][pMuted] > 0)
		{
			format(str,sizeof(str),"{ffffff}%s[%i] - {FF6347}TIME: %s\n",p_info[i][pName], i, Converts(p_info[i][pMuted]));
			strcat(STRING_GLOBAL, str);
			full++;
		}
	}
	if(full == 0) strcat(STRING_GLOBAL, "{ffffff}Информация не найдена");
	ShowPlayerDialogEx(playerid,D_NULL,DIALOG_STYLE_MSGBOX, "{ebec86}>> MUTE LIST",STRING_GLOBAL,"Закрыть","");
	return 1;
}

cmd:jaillist(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new list,full,str[100];

	STRING_GLOBAL[0] = EOS;
	foreach(new i: Player)
	{
		if(p_info[i][pJail])
		{
			format(str,sizeof(str),"{ffffff}%s[%i] - {FF6347}TIME: %s\n",p_info[i][pName], i, Converts(p_info[i][pJailTime]));
			strcat(STRING_GLOBAL, str);
			full++;
			list++;
		}
	}
	if(full == 0) strcat(STRING_GLOBAL, "{ffffff}Информация не найдена");
	ShowPlayerDialogEx(playerid,D_NULL,DIALOG_STYLE_MSGBOX, "{ebec86}>> JAIL LIST",STRING_GLOBAL,"Закрыть","");
	return 1;
}

cmd:baton(playerid)
{
	if(p_info[playerid][pMember] != TEAM_POLICIA)
	return SendErr(playerid, "Вы не состоите в ДПС");
	if(!IsPlayerAttachedObjectSlotUsed(playerid, 1))
	return SendErr(playerid, "У вас нет с собой жезла");

	if(Baton[playerid] == false)
	{
		ApplyAnimation(playerid, "PED", "Driveby_R", 4.1, 0, 1, 1, 1, 1, 1);
		Baton[playerid] = true;
	}
	else if(Baton[playerid] == true)
	{
		ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
		Baton[playerid] = false;
	}

	return 1;
}

cmd:controlmost(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return 1;
	switch(SDvers[4])
	{
	case 0:
		{
			MoveObject(Dvers[4],2747.34448242,-1142.90002441,22.6000002, 0.1, 55.00000000,0.00000000,180.00000000);
			MoveObject(Dvers[5],2747.30004883,-1262.00000000,22.6000002, 0.1, 55.00000000,0.00000000,0.00000000 );
			SDvers[4] = 1;
		}
	case 1:
		{
			MoveObject(Dvers[4],2747.34448242, -1142.90002441, 21.60000038, 0.1, 0.00000000, 0.00000000, 180.00000000 );
			MoveObject(Dvers[5],2747.30004883, -1262.00000000, 21.60000038, 0.1, 0.00000000,0.00000000,0.00000000 );
			SDvers[4] = 0;
		}
	}
	return 1;
}
cmd:tp(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	SetPVarInt(playerid, "AdminTeleport", 1);
	STRING_GLOBAL = "";
	strcat(STRING_GLOBAL, "- Важные Места\n");
	strcat(STRING_GLOBAL, "- Работы для Новичков\n");
	strcat(STRING_GLOBAL, "- По работе\n");
	strcat(STRING_GLOBAL, "- Государственные Организации\n");
	strcat(STRING_GLOBAL, "- Нелегальные Организации\n");
	strcat(STRING_GLOBAL, "- Стоянки\n");
	strcat(STRING_GLOBAL, "- Банки\n");
	strcat(STRING_GLOBAL, "- Бизнесы\n");
	strcat(STRING_GLOBAL, "- Мероприятия(Евенты)\n");
	strcat(STRING_GLOBAL, "- Автосалоны\n");
	strcat(STRING_GLOBAL, "- Аренда транспорта\n");
	ShowPlayerDialogEx(playerid, D_GPS, DIALOG_STYLE_LIST, "{ebec86}>> GPS", STRING_GLOBAL, "Выбрать", "Отмена");
	return 1;
}
CMD:reklama (playerid,params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return 1;
	if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
    if(sscanf(params, "s[40]", params[0]))return SendClientMessage(playerid,-1,"Поправка: /reklama Текст (Отправить объявление)");
    if(aProgress)                         return SendClientMessage(playerid,-1,"Подождите, пока исчезнет предыдущее объявление.");
    aProgress = true;
    TD_Position = 521.0000;
    sAnnounce[0] = 0, strcat(sAnnounce, params[0]);
    AnnounceTextDraw();
    return SendClientMessage(playerid, -1, "Объявление опубликовано.");
}

cmd:agivevoen(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/agivevoen [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[params[0]][pVoennik]) return SendErr(playerid, "У игрока уже имеется военный билет!");
	p_info[params[0]][pVoennik] = 1;
	MysqlUpdatePlayerInt(params[0], "Voennik", p_info[params[0]][pVoennik]);
	SendClientMessage(params[0], COLOR_LIME, "Администратор выдал вам военный билет! Теперь вы сможете работать в Полиции!");
	SendClientMessage(playerid, COLOR_GREEN, "Вы выдали военный билет!");
	return 1;
}

cmd:givevoen(playerid, params[])
{
	if(p_info[playerid][pMember] != TEAM_ARMY) return 1;
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/givevoen [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[params[0]][pVoennik]) return SendErr(playerid, "У игрока уже имеется военный билет!");
	else if(p_info[params[0]][pMember] != TEAM_ARMY) return SendErr(playerid, "Игрок не служит в армии!");
	else if(IsPlayerInAnyVehicle(params[0])) return SendErr(playerid, "Игрок не должен находиться в транспорте!");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	if(p_info[playerid][pMember] == TEAM_ARMY && p_info[playerid][pRank] >= 10)
	{
		p_info[params[0]][pVoennik] = 1;
		MysqlUpdatePlayerInt(params[0], "Voennik", p_info[params[0]][pVoennik]);
		SendClientMessage(params[0], COLOR_LIME, "Вам выдали военный билет! Теперь вы сможете работать в Полиции!");
		SendClientMessage(playerid, COLOR_GREEN, "Вы выдали военный билет!");
	}
	else SendErr(playerid, "Вы не можете выдавать военный билет!");
	return 1;
}

cmd:pivo(playerid, params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
	return true;
}
cmd:vino(playerid, params[])
{
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	return true;
}
cmd:mangal(playerid, params[])
{
	if (!FirePlayers[playerid][0])//Ставим мангал
	{
		new Float:x, Float:y, Float:z;
		GetPlayerPos (playerid, x, y, z);
		SetPlayerFacingAngle(playerid, 0);
		ClearAnimations(playerid);
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 1, 1, 1, 2000, 1);
		FirePlayers[playerid][0] = CreateObject (1481, x, y+1.5, z-0.7, 0.0, 0.0, 0.0, 200.0);
		FirePlayers[playerid][1] = CreateObject (18688, x, y+1.5, z-1.4, 0.0, 0.0, 0.0, 200.0);
		SetTimerEx ("DestroyFires", 5*60*1000, false, "i", playerid);
		SendClientMessage (playerid, 0xFF440000, "[Сервер]: Вы установили мангал!");
	}
	else
	{
		for (new i=0; i<2; i++) DestroyObject (FirePlayers[playerid][i]);
		FirePlayers[playerid][0] = FirePlayers[playerid][1] = 0;
		SendClientMessage (playerid, 0xFF440000, "[Сервер]: Вы убрали мангал!");
	}
	return true;
}
cmd:settp(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 7) return 1;
	if(Teleport == 0)
	{
		GetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]); // Записываем координаты
		TeleportInfo[0] = GetPlayerInterior(playerid); // Записываем интерьер
		TeleportInfo[1] = GetPlayerVirtualWorld(playerid); // Записываем виртуальный мир
		Teleport = 1;
		new string[120];
		format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] установил точку телепорта для игроков. {0abf12}ТП включен.", GetName(playerid), playerid);
		SendAdminMessage(COLOR_ADMIN, string);
		foreach(new q: Player)
		{
			for(new i = 0; i < 3; i++) TextDrawShowForPlayer(q, MpDraw[i]);
		}
	}
	else
	{
		new string[120];
		format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] удалил точку телепорта для игроков. {c16e38}ТП отключен.", GetName(playerid), playerid);
		SendAdminMessage(COLOR_ADMIN, string);
		Teleport = 0;
		foreach(new q: Player)
		{
			for(new i = 0; i < 3; i++) TextDrawHideForPlayer(q, MpDraw[i]);
		}
		return 1;
	}
	return 1;
}
cmd:gotomp(playerid)
{
	if(p_info[playerid][pJail] > 0) return SendErr(playerid, "Заключённым нельзя телепортироваться");
	if(Teleport == 0) return 1;
	else
	{
		SetPlayerPos(playerid, TeleportFloat[0], TeleportFloat[1], TeleportFloat[2]);
		SetPlayerInterior(playerid, TeleportInfo[0]);
		SetPlayerVirtualWorld(playerid, TeleportInfo[1]);
	}
	return 1;
}

cmd:fixcar(playerid, params[])
{
	new rows;
	new fmt_query[90];
	new Cache: result;
	new fmt_str[256];
	new fmt_dialog[sizeof(fmt_str)*3];
	new number[32];
	new model;
	new status[64];
	new id;

	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(!rows)
	return SendClientMessage(playerid, C_RED, "У Вас нет личного транспорта"), cache_delete(result);

	for(new idx; idx < rows; idx ++)
	{
		id = cache_get_row_int(idx, 0);

		cache_get_row(idx, 11, number, dbHandle, 32);

		if(!strcmp(number, "-1", false))
		number = "НЕТ НОМЕРОВ";//

        model = cache_get_row_int(idx, 2);

		if(GetVehicleModel(p_info[playerid][pOwnableCar]) != model)
		{
			format(status, sizeof status, "{FF6347}Не используется");
		}
		else
		{
			format(status, sizeof status, "{f0e86b}Используется");
		}

		format(fmt_str, sizeof fmt_str, "{ffffff}%d. Марка: {ebec86}%s{ffffff}, Номера: {ebec86}%s{ffffff}, %s\n", idx + 1, VehicleNames[model-400], number, status);
		strcat(fmt_dialog, fmt_str);

		g_player_listitem[playerid][idx] = id;
	}

	ShowPlayerDialogEx
	(
	playerid, D_FIXCAR, DIALOG_STYLE_LIST,
	"{ebec86}>> Личный транспорт",
	fmt_dialog,
	"Далее", "Отмена"
	);

	return 1;
}

cmd:fixcopter(playerid, params[])
{
	if(p_info[playerid][PlayerCopterID] == INVALID_VEHICLE_ID)
	{
		new rows;
		new fmt_query[90];
		new Cache: result;

		mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM copters WHERE owner_name='%s'", GetName(playerid));
		result = mysql_query(dbHandle, fmt_query);

		rows = cache_num_rows();

		if(!rows)
		return SendClientMessage(playerid, C_RED, "У Вас нет личного вертолета"), cache_delete(result);

		for(new idx; idx < rows; idx ++)
		{
			p_info[playerid][PlayerCopterID] =
			CreateVehicle
			(
			cache_get_row_int(idx, 2),
			cache_get_row_float(idx, 5, dbHandle),
			cache_get_row_float(idx, 6, dbHandle),
			cache_get_row_float(idx, 7, dbHandle),
			cache_get_row_float(idx, 8, dbHandle),
			cache_get_row_int(idx, 3),
			cache_get_row_int(idx, 4),
			90000
			);

			return SendClientMessage(playerid, 0xFFCC00FF, "Вы загрузили вертолет");
		}
	}
	else
	{
		DestroyVehicle(p_info[playerid][PlayerCopterID]);
		p_info[playerid][PlayerCopterID] = INVALID_VEHICLE_ID;
		return SendClientMessage(playerid, 0xFFCC00FF, "Вы выгрузили вертолет");
	}

	return 1;
}

cmd:lock(playerid, params[])
{
	if(sscanf(params,"i",params[0])) SendInf(playerid, "/lock [тип]");
	if(params[0] == 0)
	{
	    ShowPlayerDialogEx(playerid,dCarLock,DIALOG_STYLE_LIST, "{ebec86}>> Закрытие автомобиля","1. Личный автомобиль\n2. Арендованный автомобиль\n3. Личный вертолёт\n4. Семейный автомобиль\n5. Домашний транспорт\n6. Рабочий транспорт\n7. Транспорт организации","Выбрать","Назад");
	    return 1;
	}
	if(params[0] < 1 || params[0] > 7) return 1;
	if(params[0] == 1)
	{
		new rows;
		new fmt_query[90];
		new Cache: result;

		mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
		result = mysql_query(dbHandle, fmt_query);

		rows = cache_num_rows();

		if(!rows)
		return SendClientMessage(playerid, C_RED, "У Вас нет личного транспорта"), cache_delete(result);

		if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID) return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");

		new vehicleid = p_info[playerid][pOwnableCar];

		new Float: posX, Float: posY, Float: posZ;

		GetVehiclePos(vehicleid, posX, posY, posZ);

		if(PlayerToPoint(3.0, playerid, posX, posY, posZ))
		{
			if(vehicleid == p_info[playerid][pOwnableCar])
			{
				if(IsLocked[vehicleid] == false)
				{
					ownable_car[playerid][v_lock] = 1;
					IsLocked[vehicleid] = true;
					CarDoors(vehicleid, ownable_car[playerid][v_lock]);
					GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и закрыл транспорт");

					format(fmt_query, sizeof fmt_query, "UPDATE `ownable_cars` SET `lock`='%d' WHERE `id` = '%d'", ownable_car[playerid][v_lock], ownable_car[playerid][v_sql]);
					mysql_query(dbHandle, fmt_query);

					return 1;
				}
				else
				{
					ownable_car[playerid][v_lock] = 0;
					IsLocked[vehicleid] = false;
					CarDoors(vehicleid, ownable_car[playerid][v_lock]);
					GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и открыл транспорт");

					format(fmt_query, sizeof fmt_query, "UPDATE `ownable_cars` SET `lock`='%d' WHERE `id` = '%d'", ownable_car[playerid][v_lock], ownable_car[playerid][v_sql]);
					mysql_query(dbHandle, fmt_query);
				}
			}
		}
		else SendClientMessage(playerid, C_RED, "Вы должны находиться рядом с личным транспортом");
	}
	if(params[0] == 2)
	{
		if(GetPVarInt(playerid, "arendkey") == -1) return SendErr(playerid, "Вы не арендуете транспорт");
		new rc = GetPVarInt(playerid, "arendkey");
		if(ArendInfo[rc][aPlayerID] != playerid)
		{
			SendErr(playerid, "Вы не арендуете транспорт");
			SetPVarInt(playerid, "arendkey", -1);
			return 1;
		}
		new Float: posX, Float: posY, Float: posZ;
		GetVehiclePos(ArendInfo[rc][aID], posX, posY, posZ);
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, posX, posY, posZ)) return SendErr(playerid, "Вы должны находиться возле арендованного Вами транспорта!");
		if(IsLocked[ArendInfo[rc][aID]] == false)
		{
			IsLocked[ArendInfo[rc][aID]] = true;
			CarDoorsEx(ArendInfo[rc][aID], 1);
			GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			MeAction(playerid, "достал ключи и закрыл транспорт");
		}
		else
		{
			IsLocked[ArendInfo[rc][aID]] = false;
			CarDoorsEx(ArendInfo[rc][aID], 0);
			GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
			PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
			MeAction(playerid, "достал ключи и открыл транспорт");
		}
	}
	if(params[0] == 3)
	{
  		new rows;
		new fmt_query[128];
		new Cache: result;

		mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM copters WHERE owner_name='%s'", GetName(playerid));
		result = mysql_query(dbHandle, fmt_query);

		rows = cache_num_rows();

		if(!rows)
		return SendClientMessage(playerid, C_RED, "У Вас нет личного вертолета"), cache_delete(result);

		if(p_info[playerid][PlayerCopterID] == INVALID_VEHICLE_ID)
		return SendClientMessage(playerid, 0xFFCC00FF, "Ваш вертолет не загружен, используйте: /fixcopter");

		new Float: posX, Float: posY, Float: posZ, vehicleid = p_info[playerid][PlayerCopterID];

		GetVehiclePos(vehicleid, posX, posY, posZ);

		if(PlayerToPoint(3.0, playerid, posX, posY, posZ))
		{
			if(IsLocked[vehicleid] == false)
			{
				IsLocked[vehicleid] = true;
				CarDoors(vehicleid, ownable_car[playerid][v_lock]);
				GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				MeAction(playerid, "достал ключи и закрыл транспорт");

				format(fmt_query, sizeof fmt_query, "UPDATE copters SET lock=1 WHERE owner_name='%s'", GetName(playerid));
				mysql_query(dbHandle, fmt_query);

				return 1;
			}
			else
			{
				IsLocked[vehicleid] = false;
				CarDoors(vehicleid, ownable_car[playerid][v_lock]);
				GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				MeAction(playerid, "достал ключи и открыл транспорт");

				format(fmt_query, sizeof fmt_query, "UPDATE copters SET lock=0 WHERE owner_name='%s'", GetName(playerid));
				mysql_query(dbHandle, fmt_query);
			}
		}
	}
	if(params[0] == 4)
	{
		if(p_info[playerid][pFamily] == 0) return SendErr(playerid, "Вы не состоите в семье");
		new Float: posX, Float: posY, Float: posZ;
		for(new veh_id = TOTALVEH; veh_id > 0; veh_id --)
		{
		    if ( VehInfo [ veh_id ] [ vFamily ] != p_info [ playerid ] [ pFamily ] )continue;
			new vehicle = VehInfo [ veh_id ] [ vVehicle ];
			GetVehiclePos(vehicle, posX, posY, posZ);
			if(!IsPlayerInRangeOfPoint(playerid, 3.0, posX, posY, posZ)) continue;
			if(IsLocked[vehicle] == false)
			{
				IsLocked[vehicle] = true;
				CarDoorsEx(vehicle, 1);
				GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
				PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
				MeAction(playerid, "достал ключи и закрыл транспорт");
			}
			else
			{
				IsLocked[vehicle] = false;
				CarDoorsEx(vehicle, 0);
				GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
				PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
				MeAction(playerid, "достал ключи и открыл транспорт");
			}
		}
	}
	if(params[0] == 5)
	{
		if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "У вас нет дома");
		new Float: posX, Float: posY, Float: posZ;
     	for(new v = TOTALVEH; v > 0; v --)
		{
		    if ( VehInfo [ v ] [ vHouse ] != GetPVarInt(playerid, "PlayerHouse") && VehInfo [ v ] [ vHouse ] != p_info[playerid][pRentHouse] ) continue ;
		    new vehicle = VehInfo [ v ] [ vVehicle ];
			GetVehiclePos(vehicle, posX, posY, posZ);
			if(PlayerToPoint(5.0, playerid, posX, posY, posZ))
			{
				if(IsLocked[vehicle] == false)
				{
					IsLocked[vehicle] = true;
					CarDoorsEx(vehicle, 1);
					GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
					PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и закрыл транспорт");
				}
				else
				{
					IsLocked[vehicle] = false;
					CarDoorsEx(vehicle, 0);
					GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
					PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и открыл транспорт");
				}
			}
		}
	}
	if(params[0] == 6)
	{
		if(p_info[playerid][pJob] == 0) return SendErr(playerid, "Вы нигде не работаете");
		new Float: posX, Float: posY, Float: posZ;
    	for(new v = 1; v < MAX_VEHICLES; v++)
		{
		    if ( TaxiVehicleDriver[v] != playerid && MechanicVehicleDriver[v] != playerid ) continue ;
			GetVehiclePos(v, posX, posY, posZ);
			if(PlayerToPoint(5.0, playerid, posX, posY, posZ))
			{
				if(IsLocked[v] == false)
				{
					IsLocked[v] = true;
					CarDoorsEx(v, 1);
					GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
					PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и закрыл транспорт");
				}
				else
				{
					IsLocked[v] = false;
					CarDoorsEx(v, 0);
					GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
					PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и открыл транспорт");
				}
			}
		}
	}
	if(params[0] == 7)
	{
		if(p_info[playerid][pMember] == 0) return SendErr(playerid, "Вы нигде не состоите");
		new Float: posX, Float: posY, Float: posZ;
    	for(new v = 1; v < MAX_VEHICLES; v++)
		{
		    if ( VehInfo[v][vFraction] != p_info[playerid][pMember]) continue ;
			GetVehiclePos(v, posX, posY, posZ);
			if(PlayerToPoint(5.0, playerid, posX, posY, posZ))
			{
				if(IsLocked[v] == false)
				{
					IsLocked[v] = true;
					CarDoorsEx(v, 1);
					GameTextForPlayer(playerid, ("~w~CAR ~r~LOCK"), 5000, 6);
					PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и закрыл транспорт");
				}
				else
				{
					IsLocked[v] = false;
					CarDoorsEx(v, 0);
					GameTextForPlayer(playerid, ("~w~CAR ~g~UNLOCK"), 5000, 6);
					PlayerPlaySound(playerid, 24600, 0.0, 0.0, 0.0);
					MeAction(playerid, "достал ключи и открыл транспорт");
				}
			}
		}
	}
	return 1;
}
CMD:findcar(playerid, params[])
{
	new rows;
	new fmt_query[90];
	new Cache: result;

	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(!rows)
	return SendClientMessage(playerid, C_RED, "У Вас нет личного транспорта"), cache_delete(result);

	if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID) return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");

	new Float: X, Float: Y, Float: Z;

	GetVehiclePos(p_info[playerid][pOwnableCar], X, Y, Z);
	new locname[20] = "Личный автомобиль";
	GPSPlayer_(playerid, X, Y, Z, locname);

	return 1;
}

cmd:parkcopter(playerid, params[])
{
	new rows;
	new fmt_query[190];
	new Cache: result;

	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM copters WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(!rows)
	return SendClientMessage(playerid, C_RED, "У Вас нет личного вертолета"), cache_delete(result);

	if(p_info[playerid][PlayerCopterID] == INVALID_VEHICLE_ID)
	return SendClientMessage(playerid, C_RED, "Ваш вертолет не загружен, используйте: /fixcopter");
	
	for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	{
		if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
		{
 			SendErr(playerid, "Здесь запрещено парковать машину"), cache_delete(result);
 			return 1;
		}
	}

	if(GetPlayerVehicleID(playerid) == p_info[playerid][PlayerCopterID])
	{
		new Float: X, Float: Y, Float: Z, Float: R;

		GetVehiclePos(p_info[playerid][PlayerCopterID], X, Y, Z);
		GetVehicleZAngle(p_info[playerid][PlayerCopterID], R);

		format(fmt_query, sizeof fmt_query, "UPDATE copters SET pos_x=%f, pos_y=%f, pos_z=%f, pos_r=%f WHERE owner_name='%s'", X, Y, Z, R, GetName(playerid));
		mysql_query(dbHandle, fmt_query);

		SendClientMessage(playerid, C_OSNOV, "Вы успешно припарковали вертолет");
	}
	else SendClientMessage(playerid, C_RED, "Вы должны находиться в вертолете");
	return 1;
}

cmd:park(playerid, params[])
{
	new rows;
	new fmt_query[256];
	new Cache: result;

	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM `ownable_cars` WHERE `owner_name` = '%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(!rows)
	return SendErr(playerid, "У Вас нет личного транспорта"), cache_delete(result);

	if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID) return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");

	if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Нужно находиться в автомобиле"), cache_delete(result);
	
	for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
	{
		if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
		{
 			SendErr(playerid, "Здесь запрещено парковать машину"), cache_delete(result);
 			return 1;
		}
	}

	new Float: X, Float: Y, Float: Z, Float: R, h = GetPVarInt(playerid, "PlayerHouse");

	GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
	GetVehicleZAngle(GetPlayerVehicleID(playerid), R);

	if(GetPlayerVehicleID(playerid) == p_info[playerid][pOwnableCar])
	{
		if(IsPlayerInRangeOfPoint(playerid,15, -1618.8967,1577.9028,2005.5228))
		{
			ownable_car[playerid][v_pos_x] = X;
			ownable_car[playerid][v_pos_y] = Y;
			ownable_car[playerid][v_pos_z] = Z;
			ownable_car[playerid][v_pos_r] = R;
			ownable_car[playerid][v_virtual] = HouseInfo[h][hVirtual];

			format(fmt_query, sizeof fmt_query, "UPDATE `ownable_cars` SET `pos_x` = '%4.4f', `pos_y` = '%4.4f', `pos_z` = '%4.4f', `pos_r` = '%4.4f', `virtual` = '%d' WHERE `id` = '%d'", X, Y, Z, R, HouseInfo[h][hVirtual], ownable_car[playerid][v_sql]);
			mysql_query(dbHandle, fmt_query);

			format(fmt_query, sizeof fmt_query, "Ваш личный транспорт №%d успешно припаркован в доме", ownable_car[playerid][v_slot]);
			SendClientMessage(playerid, C_OSNOV, fmt_query);

			cache_delete(result);
		}
		else
		{
			ownable_car[playerid][v_pos_x] = X;
			ownable_car[playerid][v_pos_y] = Y;
			ownable_car[playerid][v_pos_z] = Z;
			ownable_car[playerid][v_pos_r] = R;

			format(fmt_query, sizeof fmt_query, "UPDATE `ownable_cars` SET `pos_x` = '%4.4f', `pos_y` = '%4.4f', `pos_z` = '%4.4f', `pos_r` = '%4.4f', `virtual` = '%d' WHERE `id` = '%d'", X, Y, Z, R, GetPlayerVirtualWorld(playerid), ownable_car[playerid][v_sql]);
			mysql_query(dbHandle, fmt_query);

			format(fmt_query, sizeof fmt_query, "Ваш личный транспорт №%d успешно припаркован на этом месте", ownable_car[playerid][v_slot]);
			SendClientMessage(playerid, C_OSNOV, fmt_query);

			cache_delete(result);
		}
	}

	return 1;
}
cmd:bank(playerid, params[])
{   
	if(IsPlayerConnected(playerid))   
	{   
		if(p_info[playerid][pJob] != JOB_INKASATOR)  // Ваш ID работы 
		{   
			SendClientMessage(playerid, COLOR_RED, "Вы не работаете Инкассатором!");   
			return 1;   
		}   
		if(PlayerIsInkasator[playerid] == 1)   
		{   
			SendClientMessage(playerid, COLOR_RED, "Вы уже работаете");   
			return 1;   
		}   
		new carid = GetPlayerVehicleID(playerid);   
		if(IsAInkasator(carid))   
		{   
			TogglePlayerControllable(playerid, 1);   
			new randomize;   
			randomize = random(sizeof(gInkasatorPoints));   
			SetPlayerCheckpoint(playerid, gInkasatorPoints[randomize][0], gInkasatorPoints[randomize][1], gInkasatorPoints[randomize][2], 5.0);   
			SendClientMessage(playerid, COLOR_WHITE, "Банк: Bремя пошло, заберите деньги и привезите нам их.");  
			PlayerIsInkasator[playerid] = 2;   
		}   
	}   
	return 1;   
}

cmd:findcopter(playerid, params[])
{
	new rows;
	new fmt_query[90];
	new Cache: result;

	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM copters WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(!rows)
	return SendClientMessage(playerid, C_RED, "У Вас нет личного вертолета"), cache_delete(result);

	if(p_info[playerid][PlayerCopterID] == INVALID_VEHICLE_ID)
	return SendClientMessage(playerid, 0xFFCC00FF, "Ваш вертолет не загружен, используйте: /fixcopter");

	new Float: X, Float: Y, Float: Z, locname[20];

	GetVehiclePos(p_info[playerid][PlayerCopterID], X, Y, Z);

	locname = "Личный вертолет";
	GPSPlayer_(playerid, X, Y, Z, locname);

	return 1;
}

cmd:sethp(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 2) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/sethp [ID] [кол-во жизней]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(params[1] > 100 || params[1] < 0) return SendErr(playerid, "Количество жизней от 0 до 100!");
	SetHealth(params[0], params[1]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель здоровья на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] изменил показатель здоровья игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_ADMIN, string);
	return 1;
}

cmd:sethunger(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 5) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "ui", params[0],params[1])) return SendInf(playerid, "/sethunger [ID] [кол-во сытости]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(params[1] > 100 || params[1] < 0) return SendErr(playerid, "Количество сытости от 0 до 100!");
	SetHunger(params[0], params[1]);
	MysqlUpdatePlayerInt(params[0], "hunger", p_info[params[0]][pHunger]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель сытости на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] изменил показатель сытости игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_ADMIN, string);
	return 1;
}

cmd:setam(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "ui", params[0],params[1])) return SendInf(playerid, "/setam [ID] [кол-во брони]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(params[1] > 100 || params[1] < 0) return SendErr(playerid, "Количество брони от 0 до 100!");
	SetArmour(params[0], params[1]);
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] изменил Вам показатель брони на %i", GetName(playerid), playerid, params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] изменил показатель брони игроку %s[%d] на %i", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_ADMIN, string);
	return 1;
}

cmd:cc(playerid) return callcmd::clearchat(playerid);
cmd:clearchat(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	for(new i = 0; i < 100; i++) SendClientMessageToAll(COLOR_WHITE, "");
	new string[100];//краш
	format(string, sizeof(string),  "[{ebec86}A{828282}] %s[%i] очистил чат",GetName(playerid),playerid);
	SendAdminMessage(COLOR_ADMIN, string);
	return 1;
}

cmd:object(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 5) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/object [id игрока]");
	else if(PlayerLogged[params[0]] == false) return 1;
	objectplayerid = params[0];
	ShowPlayerDialogEx(playerid,8420,DIALOG_STYLE_LIST, "{ebec86}>> Выдать объект игроку","1. Шляпа курицы\n2. Огонек на голову\n3. Мигалка на голову\n4. Черная маска\n5. Бандана №1\n6. Бандана №2\n7. Бандана №3\n8. Бандана №4\n9. Бандана №5\n10. Маска дракона\n11. Лазер на голову\n12. Комплект всемогущий\n13. Попугай на плечо\n14. Яркий свет\n15. Большой М4 в руку\n16. Пенис\n17. Костюм попугая\n18. Удалить все объекты","Выбрать","Закрыть");
	return 1;
}

cmd:setcar(playerid, params[])
{
	if(p_info[playerid][pAdmin] > 8)
	{
		extract params -> new to_player, model_car, slot, color1, color2; else return SendInf(playerid, "/setcar [ид игрока] [ид авто] [слот (1/2/3/4)] [цвет 1] [цвет 2] ");

		if(to_player == INVALID_PLAYER_ID)
		return SendClientMessage(playerid, C_RED, "Такого игрока нет");

		if(!(400 <= model_car <= 611))
		return SendClientMessage(playerid, C_RED, "Ид авто от 400 до 611");

		if(!(1 <= slot <= 4))
		return SendClientMessage(playerid, C_RED, "Слот от 1 до 4");

		if(!(0 <= color1 <= 255 || 0 <= color2 <= 255))
		return SendClientMessage(playerid, C_RED, "Цвет от 0 до 255");

		new rows;
		new fmt_query[300];
		new Cache: result;

		mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s' AND slot=%d", GetName(to_player), slot);
		result = mysql_query(dbHandle, fmt_query);

		rows = cache_num_rows();

		if(rows)
		{
			if(p_info[playerid][pOwnableCar] != INVALID_VEHICLE_ID)
			{
				if(ownable_car_label[p_info[playerid][pOwnableCar]] != Text3D:INVALID_3DTEXT_ID)
				{
					DestroyDynamic3DTextLabel(ownable_car_label[p_info[playerid][pOwnableCar]]);
					ownable_car_label[p_info[playerid][pOwnableCar]] = Text3D:INVALID_3DTEXT_ID;
				}
				DestroyVehicle(p_info[playerid][pOwnableCar]);
				p_info[playerid][pOwnableCar] = INVALID_VEHICLE_ID;
			}

			format(fmt_query, sizeof fmt_query, "UPDATE ownable_cars SET model=%d, color_1=%d, color_2=%d WHERE owner_name='%s' AND slot=%d", model_car, color1, color2, GetName(to_player), slot);
			mysql_query(dbHandle, fmt_query);

			format(fmt_query, sizeof fmt_query, "Руководитель %s установил Вам автомобиль %s в слоте %d", GetName(playerid), VehicleNames[model_car-400], slot);
			SendClientMessage(to_player, C_OSNOV, fmt_query);

			format(fmt_query, sizeof fmt_query, "Вы установили %s автомобиль %s в слот %d", GetName(to_player), VehicleNames[model_car-400], slot);
			SendClientMessage(playerid, C_OSNOV, fmt_query);
			
			format(STRING_GLOBAL, 128, "%s выдал %s (%s)", GetName(playerid), GetName(to_player), VehicleNames[model_car-400]);
			WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);

			cache_delete(result);

			return 1;
		}
		else
		{
			new r = random(44);

			mysql_format(dbHandle, fmt_query, sizeof fmt_query, "INSERT INTO ownable_cars (owner_name, model, color_1, color_2, slot, pos_x, pos_y, pos_z, pos_r) VALUES ('%s', '%d', '%d', '%d', '%d', '%f', '%f', '%f', '%f')", GetName(to_player), model_car, color1, color2, slot, SalonRandSpawn[r][0], SalonRandSpawn[r][1], SalonRandSpawn[r][2], SalonRandSpawn[r][3]);
			mysql_query(dbHandle, fmt_query);

			format(fmt_query, sizeof fmt_query, "Руководитель %s установил Вам автомобиль %s в слоте %d", GetName(playerid), VehicleNames[model_car-400], slot);
			SendClientMessage(to_player, C_OSNOV, fmt_query);

			format(fmt_query, sizeof fmt_query, "Вы установили %s автомобиль %s в слот %d", GetName(to_player), VehicleNames[model_car-400], slot);
			SendClientMessage(playerid, C_OSNOV, fmt_query);
			
			format(STRING_GLOBAL, 128, "%s выдал %s (%s)", GetName(playerid), GetName(playerid), VehicleNames[model_car-400]);
			WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);

			cache_delete(result);
		}

		cache_delete(result);
	}
	return 1;
}

cmd:setname(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 5) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	if(set_name == -1) return SendErr(playerid, "Никто не предлагал сменить ник");
	else if(!strcmp(PlayerName[set_name], "None", true)) return SendErr(playerid, "Этот игрок не предлагал сменить ник");
	if(GetPlayerHouse(set_name) > 0)
	{
		new i = GetPVarInt(set_name, "PlayerHouse");
		format(HouseInfo[i][hOwner], MAX_PLAYER_NAME, PlayerName[set_name]);
		MysqlUpdateHouseStr(i, "hOwner", PlayerName[set_name]);
	}
	if(GetPlayerBizz(set_name) > 0)
	{
		new i = GetPVarInt(set_name, "PlayerBizz");
		format(BizzInfo[i][bOwner], MAX_PLAYER_NAME, PlayerName[set_name]);
		MysqlUpdateBizzStr(i, "owner", PlayerName[set_name]);
		UpdateBizz(i);
	}
	new rows;
	new string[128];
	new Cache: result;

	format(string, sizeof string, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(set_name));
	result = mysql_query(dbHandle, string);
	rows = cache_num_rows();

	if(rows)
	{
		format(string, sizeof string, "UPDATE ownable_cars SET owner_name='%s' WHERE owner_name='%s' LIMIT 1", PlayerName[set_name], GetName(set_name));
		mysql_query(dbHandle, string);
		cache_delete(result);
	}

	cache_delete(result);

	format(string, sizeof(string), "Заявку одобрил администратор %s", GetName(playerid));
	SendAdminMessage(COLOR_ADMIN, string);
	format(string, sizeof(string), "%s сменил(а) имя на %s", GetName(set_name), PlayerName[set_name]);
	SendClientMessageToAll(COLOR_YELLOW, string);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"UPDATE "T_ACCOUNTS" SET name='%s' WHERE name='%s' LIMIT 1", PlayerName[set_name], GetName(set_name));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	if(p_info[set_name][pAdmin])
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ADMIN" SET name='%s' WHERE name='%s' LIMIT 1", PlayerName[set_name], GetName(set_name));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[set_name][pHelper])
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HELPER" SET name='%s' WHERE name='%s' LIMIT 1", PlayerName[set_name], GetName(set_name));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	
	if(p_info[set_name][pFamilySozd] > 0)
	{
	    STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_FAMILY" SET fam_creator='%s' WHERE fam_id='%d' LIMIT 1", PlayerName[set_name], p_info[set_name][pFamily]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[set_name][pFamilyZam] > 0)
	{
	    STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_FAMILY" SET fam_zamcreator='%s' WHERE fam_id='%d' LIMIT 1", PlayerName[set_name], p_info[set_name][pFamily]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET referal='%s' WHERE referal='%s' LIMIT 1", PlayerName[set_name], GetName(set_name));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO `historyname` (`idacca`, `Name`, `lastname`) VALUE ('%d', '%s', '%s')", p_info[set_name][pID], PlayerName[set_name], GetName(set_name));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	format(GetName(set_name), MAX_PLAYER_NAME, PlayerName[set_name]);
	SetPlayerName(set_name, PlayerName[set_name]);
	SCMF(set_name, COLOR_GREEN, "Ваше новое имя: {ffffff}%s", PlayerName[set_name]);
	SendClientMessage(set_name, COLOR_GREEN, "Обязательно нужно сделать скриншот. Клавиша: {ffffff}F8");
	SendClientMessage(set_name, COLOR_GREEN, "Пропишите свой новый ник в окне {ffffff}CR:MP");
	strmid(PlayerName[set_name], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	Kick(set_name);
	set_name = -1;
	return 1;
}

cmd:tie(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	if(pCuff[playerid][pCuffee] == playerid) return SendErr(playerid, "Вы в наручниках, вы не можете связывать!");
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/tie [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	new Float:possed[4];
	GetPlayerPos(params[0],possed[0],possed[1],possed[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 1, possed[0],possed[1],possed[2])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от данного игрока");
	if(params[0] == playerid) return SendErr(playerid, "Вы не можете связать себя!");
	if(PlayerTied[params[0]]) return SendErr(playerid, "Игрок уже связан!");
	new string[100];
	SCMF(playerid, 0x6495EDFF, "Вы связали %s", GetName(params[0]));
	if(p_info[playerid][pSex] == 1)
	{
		SCMF(params[0], 0x6495EDFF, "%s связал Вас", GetName(playerid));
		format(string, sizeof(string), "связал %s", GetName(params[0]));
	}
	else
	{
		SCMF(params[0], 0x6495EDFF, "%s связала Вас", GetName(playerid));
		format(string, sizeof(string), "связала %s", GetName(params[0]));
	}
	MeAction(playerid, string);
	GameTextForPlayer(playerid, "~r~tieted", 5000, 6);
	GameTextForPlayer(params[0], "~r~tieted", 5000, 6);
	TogglePlayerControllable(params[0], 0);
	PlayerTied[params[0]] = true;
	return 1;
}

cmd:untie(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/untie [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	new Float:possed[4];
	GetPlayerPos(params[0],possed[0],possed[1],possed[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 4, possed[0],possed[1],possed[2])) return SendClientMessage(playerid, COLOR_WHITE, "Вы слишком далеко от данного игрока");
	if(params[0] == playerid) return SendErr(playerid, "Вы не можете развязать себя!");
	if(!PlayerTied[params[0]]) return SendErr(playerid, "Игрок не связан!");
	new string[100];
	SCMF(playerid, 0x6495EDFF, "Вы развязали %s", GetName(params[0]));
	if(p_info[playerid][pSex] == 1)
	{
		SCMF(params[0], 0x6495EDFF, "%s развязал Вас", GetName(playerid));
		format(string, sizeof(string), "развязал %s", GetName(params[0]));
	}
	else
	{
		SCMF(params[0], 0x6495EDFF, "%s развязала Вас", GetName(playerid));
		format(string, sizeof(string), "развязала %s", GetName(params[0]));
	}
	MeAction(playerid, string);
	GameTextForPlayer(playerid, "~g~untied", 5000,6);
	GameTextForPlayer(params[0], "~g~untied", 5000,6);
	TogglePlayerControllable(params[0], 1);
	PlayerTied[params[0]] = false;
	return 1;
}

cmd:spawn(playerid, params[])
{
    if(GetPVarInt(playerid, "anti_flod_slap") > gettime()) return SendErr(playerid, "Использовать можно раз в минуту");
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 2 && p_info[playerid][pHelper] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/spawn [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] заспавнил игрока %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	AC_SpawnPlayer(params[0]);
	if(p_info[playerid][pHelper] > 0) SetPVarInt(playerid, "anti_flod_slap", gettime()+60);
	if(p_info[playerid][pHelper] > 0)
	{
		mysql_format(dbHandle, string, sizeof string, "UPDATE "T_HELPER" SET `ans` = ans+1 WHERE `name` = '%s'", GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
	}
	return 1;
}

cmd:jet(playerid,  params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 5) return 1;
	if(sscanf(params, "d", params[0])) return SendInf(playerid, "/jet [id игрока]");
	if(p_info[params[0]][pAdmin] < 1) return SendErr(playerid, "Данный игрок не администратор");
	
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] выдал(а) JetPack %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	
	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_USEJETPACK);
	return 1;
}

cmd:g(playerid, params[]) return callcmd::goto(playerid, params);
cmd:goto(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/goto [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[playerid][pAdmin] < 9 && AdminInfo[params[0]][admGoto]) return SendErr(playerid, "Телепорт к этому администратору запрещён");
	//else if(GetString(GetName(playerid), NGA1)) return SendErr(playerid, "Телепорт к этому администратору запрещён");
	new Float:plocx,Float:plocy,Float:plocz;
	GetPlayerPos(params[0], plocx, plocy, plocz);
	if(GetPlayerState(playerid) == 2) SetVehiclePos(GetPlayerVehicleID(playerid), plocx+2, plocy+2, plocz);
	else SetPlayerPos(playerid, plocx+2, plocy+2, plocz);
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] телепортировался к игроку %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	return 1;
}

cmd:gcar(playerid, params[]) return callcmd::gotocar(playerid, params);
cmd:gotocar(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 2) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "i", params[0])) return SendErr(playerid, "{9ACD32}Введите: {FFFFFF} /gotocar [id транспорта]");
	new Float:x, Float:y, Float:z;
	GetVehiclePos(params[0], x, y, z);
	SetPlayerPos(playerid, x+2, y+2, z);
	return 1;
}

cmd:getcar(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 2) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "i", params[0])) return SendErr(playerid, "{9ACD32}Введите: {FFFFFF} /getcar [id транспорта]");
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	SetVehiclePos(params[0], x+2, y+2, z);
	return 1;
}

cmd:gethere(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/gethere [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[playerid][pAdmin] < 9 && AdminInfo[params[0]][admGethere]) return SendErr(playerid, "Телепорт этого администратора запрещён");
	new Float:plocx, Float:plocy, Float:plocz;
	GetPlayerPos(playerid, plocx, plocy, plocz);
	SetPlayerPos(params[0], plocx, plocy, plocz);
	SetPlayerVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
	SetPlayerInterior(params[0], GetPlayerInterior(playerid));
	if(InHospital[params[0]]) InHospital[params[0]] = false;
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] телепортировал(а) Вас к себе", GetName(playerid), playerid);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] телепортировал(а) игрока %s[%d] к себе", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	return 1;
}

cmd:settime(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		else if(sscanf(params, "i", params[0])) return SendInf(playerid, "/settime [время]");
		else if(params[0] < 0 || params[0] > 23) return SendErr(playerid, "Время от 0 до 23!");
		SetWorldTime(params[0]);
		new string[128];
		format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] изменил(а) время на %i часа", GetName(playerid), playerid, params[0]);
		SendAdminMessage(COLOR_ADMIN, string);
	}
	return 1;
}

cmd:setweather(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 7) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	ShowPlayerDialogEx(playerid, D_WEATHER, 2, "{ebec86}>> Погода", "\
		1. Разные версии синих небес/облаков\n\
		2. Разные версии синих небес/облаков\n\
		3. Разные версии синих небес/облаков\n\
		4. Разные версии синих небес/облаков\n\
		5. Разные версии синих небес/облаков\n\
		6. Разные версии синих небес/облаков\n\
		7. Разные версии синих небес/облаков\n\
		8. Гроза\n\
		9. Пасмурно и туман\n\
		10. Ясное синее небо\
	", "Принять", "Отмена");
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] изменил(а) погоду на сервере", GetName(playerid), playerid, params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	return 1;
}

cmd:o(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(isnull(params)) return SendInf(playerid, "/o [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	new string[128];
	format(string, sizeof(string), "(( Администратор %s[%d]: %s ))", GetName(playerid), playerid, params[0]);
	SendClientMessageToAll(0xa1cc82FF, string);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:createradar(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		ShowPlayerDialogEx(playerid, D_RADAR, DIALOG_STYLE_LIST, "{ebec86}>> Создание радара","\
			{FFFFFF}1. Дворовая территория {49C830}(Макс. доп. скорость: 20км/ч)\n\
			{FFFFFF}2. Населенные пункты {49C830}(Макс. доп. скорость: 60км/ч)\n\
			{FFFFFF}3. Автомагистрали {49C830}(Макс. доп. скорость: 110км/ч)\n\
			{FFFFFF}4. Вне населенных пунктов(ост. дороги): {49C830}(Макс. доп. скорость: 90км/ч)",
		"Выбрать","Отмена");
	}
	else SendClientMessage(playerid,COLOR_GREEN,"Радар имеет право устанавливать только Гл.Администратор сервера");
	return 1;
}

cmd:a(playerid,params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(isnull(params)) return SendInf(playerid, "/a [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d]: %s", GetName(playerid), playerid, params[0]);
	SendAdminMessage(COLOR_LIGHTGREEN, string);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:h(playerid,params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pHelper] < 1) return 1;
	else if(isnull(params)) return SendInf(playerid, "/a [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	new string[128];
	format(string, sizeof(string), "[H] %s[%d]: %s", GetName(playerid), playerid, params[0]);
	SendHelperMessage(COLOR_LIGHTGREEN, string);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:b(playerid, params[]) return callcmd::n(playerid, params);
cmd:n(playerid, params[])
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	else if(isnull(params)) return SendInf(playerid, "/n [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "(( %s[%i]: %s ))", GetName(playerid), playerid, params);
	ProxDetector(20.0, playerid, string, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF);
	SetPlayerChatBubble(playerid, params, 0xCCCC99FF, 20.0, 7000);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:s(playerid, params[])
{
	if(p_info[playerid][pTime] < 1) return SendErr(playerid, "Вы должны играть на сервере более 1 часа");
	else if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	else if(isnull(params)) return SendInf(playerid, "/s [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);

	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid, "ON_LOOKERS", "shout_01", 4.1, 0, 0, 0, 0, 0, 1);

	new string[164];
	SetPlayerChatBubble(playerid, params[0], COLOR_WHITE, 5.0, 7500);
	format(string, sizeof(string), "- {%s}%s[%d]{FFFFFF} кричит: %s", GetColor(playerid), GetName(playerid), playerid, params[0]);
	ProxDetector(15.0, playerid, string, 0xF5FFFAAA, 0xF5FFFAAA, 0xF5FFFAAA, 0xF5FFFAAA, 0xF5FFFAAA);
	
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:w(playerid, params[])
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	else if(isnull(params)) return SendInf(playerid, "/w [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	new string[128];
	format(string, sizeof(string), "%s шепчет: %s", GetName(playerid), params[0]);
	ProxDetector(1.2,playerid, string, 0xBDB76BFF, 0xBDB76BFF, 0xBDB76BFF, 0xBDB76BFF, 0xBDB76BFF);
	SetPlayerChatBubble(playerid,params[0],COLOR_WHITE,1.2,10000);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:gnews(playerid, params[])
{
	new count_player_row = GetPVarInt(playerid,"count_row");
	new max_rows = GetPVarInt(playerid, "max_rows");
	new get_goverment_text[100];
	new set_pvar_string[15];

	STRING_GLOBAL = "";
	if(!IsTheMember(p_info[playerid][pMember])) return SendErr(playerid, "Вам недоступна данная возможность");
	else if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionObwyak])
	{
		format(STRING_GLOBAL, 128, "Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionObwyak]);
		SendErr(playerid, STRING_GLOBAL);
		return 1;
	}
	else if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;

	if(!max_rows)
	{
		if(sscanf(params,"i",params[0])) return SendInf(playerid, "/gnews [количество строк]");
		if(params[0] < 1 || params[0] > 5) return SendErr(playerid, "от 1 до 5 строк");
		SetPVarInt(playerid,"max_rows", params[0] + 1);
		SetPVarInt(playerid, "count_row", 1);
		format(STRING_GLOBAL, 256, "Вы выбрали для гос. новостей строк: %d {C0C0C0}| Используйте /gnews [строка 1]", params[0]);
		SendClientMessage(playerid, 0x4466CCFF, STRING_GLOBAL);
	}
	else
	{
		if(max_rows == count_player_row)
		{
			new day, month, year, hour, minuite, second;
 			getdate(year, month, day);
 			gettime(hour, minuite, second);

			SendClientMessageToAll(0x4466CCFF,"================== {C0C0C0}[ Государственные новости ]{4466CC} ==================");

			for(new i = 1; i < max_rows; i++)
			{
				format(set_pvar_string, 15, "gnews%d", i);
				GetPVarString(playerid, set_pvar_string, get_goverment_text, 100);
				
				if(IsIpFound(get_goverment_text) || CheckString(get_goverment_text))
				{
				    PlayerGetsChatBan(playerid, get_goverment_text);
				    return 1;
				}

				format(STRING_GLOBAL, 256, "%s: {FFFFFF}%s", Fractions[p_info[playerid][pMember]][fractionName], get_goverment_text);
				SendClientMessageToAll(0xD6D6D6C8, STRING_GLOBAL);
			}
			format(STRING_GLOBAL, 256, "Время: %02d:%02d:%02d, Дата: %d.%d.%d", hour, minuite, second, day, month, year);
			SendClientMessageToAll(0xD6D6D6C8, STRING_GLOBAL);
			SendClientMessageToAll(0x4466CCFF, "=============================================================");
			format(STRING_GLOBAL, 256, "[{ebec86}A{828282}] %s %s[%d] - Использовал /gnews", Fractions[p_info[playerid][pMember]][fractionName], GetName(playerid), playerid);
			SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);

			DeletePVar(playerid,"max_rows");
			DeletePVar(playerid,"count_row");

			return 1;
		}
		format(STRING_GLOBAL, 64, "/gnews [строка %d]",count_player_row);
		if (isnull(params)) return SendErr(playerid, STRING_GLOBAL);
		format(set_pvar_string, 15, "gnews%d", count_player_row);
		SetPVarString(playerid, set_pvar_string, params);


		if(count_player_row + 1 == max_rows)
		{
			format(STRING_GLOBAL, 255, "Строка %d : %s", count_player_row, params);
			SendClientMessage(playerid,0x4466CCFF, STRING_GLOBAL);
			SendClientMessage(playerid, COLOR_GREEN, "Используйте команду /gnews еще раз. Чтобы опубликовать новости");
		}
		else
		{
			format(STRING_GLOBAL, 255, "Строка %d : %s {489191}| Используйте /gnews [строка %d]", count_player_row, params, count_player_row + 1);
			SendClientMessage(playerid, 0x4466CCFF, STRING_GLOBAL);
		}
		SetPVarInt(playerid,"count_row", count_player_row + 1);
	}
	return 1;
}

cmd:pm(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1 && p_info[playerid][pHelper] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "us[128]", params[0],params[1])) return SendInf(playerid, "/pm [ID] [текст]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	foreach(new i: Player)
 	{
 	    if(p_info[playerid][pHelper] > 0)
 	    {
			if(GetPVarInt(i, "AnswerPlayerID") == params[0] && GetPVarInt(i, "AnswerPlayerTime") > gettime()) return SendErr(playerid, "Этому игроку уже ответили");
		}
	}
	new string[180];
	if(p_info[playerid][pAdmin] > 0)
	{
	    /*if(p_info[playerid][Spectating][0] == INVALID_PLAYER_ID)
	    {
	        SetPVarInt(playerid, "AnswerPlayerID", params[0]);
	        SetPVarInt(playerid, "AnswerPlayerTime", gettime()+60);
	    }*/
		format(string, sizeof(string), "Администратор №%d Вам: {FFFFFF}%s", p_info[playerid][pID], params[1]);
		SendClientMessage(params[0], 0xFFD700AA, string);
		format(string, sizeof(string), "< PM: Администратор %s[%d] игроку %s[%d] > {FFFFFF}%s", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
		SendAdminMessage(0xFFD700AA, string);

		mysql_format(dbHandle, string, sizeof string, "UPDATE "T_ADMIN" SET `ans` = ans+1 WHERE `name` = '%s'", GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
	}
	if(p_info[playerid][pHelper] > 0)
	{
		if(p_info[params[0]][pHelper] > 0 || p_info[params[0]][pAdmin] > 0) return SendErr(playerid, "Вы не можете ответить хелперу");
		if(p_info[playerid][Spectating][0] == INVALID_PLAYER_ID)
	    {
	        SetPVarInt(playerid, "AnswerPlayerID", params[0]);
	        SetPVarInt(playerid, "AnswerPlayerTime", gettime()+60);
	    }
	    format(string, sizeof(string), "Хелпер №%d Вам: {FFFFFF}%s", p_info[playerid][pID], params[1]);
		SendClientMessage(params[0], 0xFFD700AA, string);
		format(string, sizeof(string), "< PM: Хелпер %s[%d] игроку %s[%d] > {FFFFFF}%s", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
		SendAdminMessage(0xFFD700AA, string);
		SendHelperMessage(0xFFD700AA, string);
	
		mysql_format(dbHandle, string, sizeof string, "UPDATE "T_HELPER" SET `ans` = ans+1 WHERE `name` = '%s'", GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
	}
	return 1;
}

cmd:freeze(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendErr(playerid, "{9ACD32}Введите: {FFFFFF} /freeze [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(FreezePlayer1[params[0]] == true) return SendErr(playerid, "Этот игрок уже заморожен");
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%i] заморозил(а) %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	format(string, sizeof(string), "Администратор %s заморозил(а) Вас", GetName(playerid));
	SendClientMessage(params[0], COLOR_RED, string);
	TogglePlayerControllable(params[0], 0);
	FreezePlayer1[params[0]] = true;
	return 1;
}

cmd:unfreeze(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendErr(playerid, "{9ACD32}Введите: {FFFFFF} /unfreeze [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(FreezePlayer1[params[0]] == false) return SendErr(playerid, "Этот игрок не заморожен");
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%i] разморозил(а) %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	format(string, sizeof(string), "Администратор %s разморозил(а) Вас", GetName(playerid));
	SendClientMessage(params[0], COLOR_RED, string);
	TogglePlayerControllable(params[0], 1);
	FreezePlayer1[params[0]] = false;
	return 1;
}

cmd:kick(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 4) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "uS()[32]", params[0], params[1])) return SendInf(playerid, "/kick [ID] [причина]");
	else if(IsIpFound(params[1]) || CheckString(params[1])) return AdminAntisliv(playerid, params[1]);
	else if(p_info[playerid][pAdmin] <= p_info[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);

	admin_attempt[playerid] ++ ;
	if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
	if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
	{
		new ban_str[128];
		format(ban_str, sizeof ban_str, "Внимание! Администратору %s были заблокированы действия на сервере по подозрению во взломе.", GetName(playerid));
		SendClientMessageToAll(0xFE0000AA, ban_str);
		SendClientMessageToAll(0xFE0000AA, "Сообщите об этом основателю, так как возможен взлом!");
		admin_ban_time[playerid] = 600;
		MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
		admin_attempt[playerid] = 0;
		admin_check_time[playerid] = 0;
		SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
		return 1;
	}

	new string[128];
	if(strlen(params[1])) format(string, sizeof(string), "Администратор %s кикнул игрока %s. Причина: %s", GetName(playerid), GetName(params[0]), params[1]);
	else format(string, sizeof(string), "[{ebec86}A{828282}] Администратор %s кикнул игрока %s.", GetName(playerid), GetName(params[0]));
	SendClientMessageToAll(COLOR_RED, string);
	Kick(params[0]);
	
	format(STRING_GLOBAL, 144, "%s кикнул %s. Причина: %s", GetName(playerid), GetName(params[0]), params[1]);
	WriteLog(TYPE_LOG_KICK,STRING_GLOBAL);

	mysql_format(dbHandle, string, sizeof string, "UPDATE "T_ADMIN" SET `kicks` = kicks+1 WHERE `name` = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, string, "", "");
	return 1;
}

cmd:skick(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/skick [id игрока]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	if(p_info[playerid][pAdmin] <= p_info[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] тихо кикнул игрока %s [ID:%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	
	format(STRING_GLOBAL,128,"[{ebec86}A{828282}] %s тихо кикнул %s",GetName(playerid), GetName(params[0]));
	WriteLog(TYPE_LOG_KICK,STRING_GLOBAL);

	admin_attempt[playerid] ++ ;
	if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
	if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
	{
		admin_ban_time[playerid] = 600;
		MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
		admin_attempt[playerid] = 0;
		admin_check_time[playerid] = 0;
		SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
		return 1;
	}
	Kick(params[0]);
	return 1;
}

cmd:check(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/check [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	ShowPlayerStatsDialog(playerid, params[0]);
	return 1;
}

cmd:setstat(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/setstats [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		NameStats[playerid] = params[0];
		ShowPlayerDialogEx(playerid, D_UCPADMIN, DIALOG_STYLE_LIST, GetName(params[0]), "Ник\nУровень\nОпыт\nПол", "Принять", "Отмена");
	}
	return 1;
}

cmd:sban(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "ids[32]", params[0], params[1], params[2])) return SendInf(playerid, "/sban [id игрока] [кол-во дней] [причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[playerid][pAdmin] <= p_info[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
	else if(IsIpFound(params[2]) || CheckString(params[2])) return AdminAntisliv(playerid, params[2]);
	else if(params[1] > 30 || params[1] < 1) return SendErr(playerid, "Количество дней от 1 до 30!");
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] тихо забанил игрока %s на %d дней. Причина: %s", GetName(playerid), playerid, GetName(params[0]),params[1], params[2]);
	SendAdminMessage(COLOR_ADMIN,string);
	format(STRING_GLOBAL, 129, "[%s] [IP: %s] - [RegIP: %s] - [LastIP: %s]", GetName(params[0]), p_info[params[0]][pIP], p_info[params[0]][pRegIP], p_info[params[0]][pLastIP]);
	SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
	
	format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] %s тихо забанил %s. Причина: %s", GetName(playerid), GetName(params[0]), params[2]);
	WriteLog(TYPE_LOG_BAN,STRING_GLOBAL);
	
	admin_attempt[playerid] ++ ;
	if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
	if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
	{
		admin_ban_time[playerid] = 600;
		MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
		admin_attempt[playerid] = 0;
		admin_check_time[playerid] = 0;
		SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
		return 1;
	}
	new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + params[1]*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', %d, %d, '%s')", GetName(params[0]), GetName(playerid), p_info[params[0]][pIP], data, params[1], unbandate, params[2]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	Kick(params[0]);
	return 1;
}

cmd:getip(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/getip [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	//else if(GetString(GetName(playerid), NGA1)) return SendErr(playerid, "Нельзя просмотреть IP данного администратора!");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[%s] [IP: %s]-[RegIP: %s]-[LastIP: %s]", GetName(params[0]),p_info[params[0]][pIP],p_info[params[0]][pRegIP],p_info[params[0]][pLastIP]);
	SendClientMessage(playerid, COLOR_YELLOW, STRING_GLOBAL);
	return 1;
}

CMD:pgetip(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 3) return 1;
	if(sscanf(params,"s[60]",params[0])) return SendInf(playerid, "/pgetip [ip]");

	STRING_GLOBAL = "";
	format(STRING_GLOBAL, 300, "SELECT `name` FROM `accounts` WHERE `ip` = '%s'", params[0]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "p_get_ip", "i", playerid);

	return 1;
}

forward p_get_ip(playerid);
public p_get_ip(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	if(rows)
	{
		new name[MAX_PLAYER_NAME+1];
		for(new i = 0; i < rows; i++)
		{
			cache_get_row(i, 3, name, dbHandle, MAX_PLAYER_NAME);
			format(STRING_GLOBAL, 128, "%i. %s", i+1, name);
			SendInf(playerid, STRING_GLOBAL);
		}
	}
	else SendErr(playerid, "IP адресов по Вашему запросу не найдено");

	return 1;
}

cmd:iban(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	if(sscanf(params, "uS()[32]", params[0], params[1])) return SendInf(playerid, "/iban [id игрока] [причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[playerid][pAdmin] <= p_info[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
	else if(IsIpFound(params[1]) || CheckString(params[1])) return AdminAntisliv(playerid, params[1]);
	p_info[params[0]][pSpawnChange] = 0;
	MysqlUpdatePlayerInt(params[0], "spawnchange", p_info[params[0]][pSpawnChange]);
	new string[128];
	if(strlen(params[1])) format(string, sizeof(string), "Администратор %s заблокировал навсегда аккаунт игрока %s(%d). Причина: %s", GetName(playerid), GetName(params[0]), params[0], params[1]);
	else format(string, sizeof(string), "[{ebec86}A{828282}] Администратор %s заблокировал аккаунт игрока %s(%d) навсегда", GetName(playerid), GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string, params[0]);
	format(STRING_GLOBAL, 129, "[%s] [IP: %s] - [RegIP: %s] - [LastIP: %s]", GetName(params[0]), p_info[params[0]][pIP], p_info[params[0]][pRegIP], p_info[params[0]][pLastIP]);
	SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
	new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + 99999*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO bans (name, whobanned, ip, bandate, unbandate, reason, ban_type) VALUES ('%s', '%s', '%s', '%s', %d, '%s', '1')", GetName(params[0]), GetName(playerid), p_info[params[0]][pIP], data, unbandate, params[1]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	AC_ResetPlayerWeapons(params[0]);
	Kick(params[0]);
	return 1;
}

cmd:ban(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	if(sscanf(params, "udS()[32]", params[0], params[1], params[2])) return SendInf(playerid, "/ban [id игрока] [кол-во дней] [причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(params[1] > 30 || params[1] < 1) return SendErr(playerid, "Количество дней от 1 до 30");
	else if(p_info[playerid][pAdmin] <= p_info[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
	else if(IsIpFound(params[2]) || CheckString(params[2])) return AdminAntisliv(playerid, params[2]);
	p_info[params[0]][pSpawnChange] = 0;
	MysqlUpdatePlayerInt(params[0], "spawnchange", p_info[params[0]][pSpawnChange]);
	new string[128];
	if(strlen(params[2])) format(string, sizeof(string), "Администратор %s забанил игрока %s на %d дней. Причина: %s", GetName(playerid), GetName(params[0]), params[1], params[2]);
	else format(string, sizeof(string), "Администратор %s забанил игрока %s на %d дней.", GetName(playerid), GetName(params[0]), params[1]);
	SendClientMessageToAll(COLOR_RED, string);
	
	format(STRING_GLOBAL, 128, "%s забанил %s. Причина: %s", GetName(playerid), GetName(params[0]), params[2]);
	WriteLog(TYPE_LOG_BAN,STRING_GLOBAL);
	
	format(STRING_GLOBAL, 129, "[%s] [IP: %s] - [RegIP: %s] - [LastIP: %s]", GetName(params[0]), p_info[params[0]][pIP], p_info[params[0]][pRegIP], p_info[params[0]][pLastIP]);
	SendAdminMessage(COLOR_RED, STRING_GLOBAL);
	
	admin_attempt[playerid] ++ ;
	if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
	if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
	{
		admin_ban_time[playerid] = 600;
		MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
		admin_attempt[playerid] = 0;
		admin_check_time[playerid] = 0;
		SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
		return 1;
	}
	new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + params[1]*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', %d, %d, '%s')", GetName(params[0]), GetName(playerid), p_info[params[0]][pIP], data, params[1], unbandate, params[2]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	AC_ResetPlayerWeapons(params[0]);
	Kick(params[0]);

	STRING_GLOBAL[0] = EOS;
	mysql_format(dbHandle, STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET `bans` = bans+1 WHERE `name` = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

cmd:offban(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 4) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new playername[MAX_PLAYER_NAME], countday, reason[32];
	if(sscanf(params, "s[60]is[60]", playername, countday, reason)) return SendInf(playerid, "/offban [ник игрока] [кол-во дней] [причина]");
	else if(CheckExceptionName(playername)) return AttemptRemoveChiefAdmin(playerid);
	else if(IsIpFound(reason) || CheckString(reason)) return AdminAntisliv(playerid, reason);
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendErr(playerid, "Игрок в сети, используйте команду /ban");
	else if(countday > 30 || countday < 1) return SendErr(playerid, "Количество дней от 1 до 30!");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s'", playername);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerOffban", "isis", playerid, playername, countday, reason);
	return 1;
}

cmd:ainfo(playerid, params[])
{
	if(p_info[playerid][pAdmin] > 8)
	{
		if(!strlen(params))
		return SendInf(playerid, "/ainfo [ник]");

		new fmt_query[50+MAX_PLAYER_NAME],
Cache: result,
		rows;

		mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM admin WHERE name='%s' LIMIT 1", params);
		result = mysql_query(dbHandle, fmt_query);

		rows = cache_num_rows();

		if(rows)
		{
			new level,
			set_admin[MAX_PLAYER_NAME],
			set_date[64],
			status[10],
			last_connect[64],
			ans,
			kicks,
			warns,
			bans,
			jails,
			mutes,
			id,
			online[7],
			fmt_msg[64],
			fmt_dialog[sizeof(fmt_msg)*15];

			level = cache_get_row_int(0, 1);
			cache_get_field_content(0, "put_admin", set_admin);
			cache_get_field_content(0, "data", set_date);
			online[0] = cache_get_row_int(0, 17);
			online[1] = cache_get_row_int(0, 18);
			online[2] = cache_get_row_int(0, 19);
			online[3] = cache_get_row_int(0, 20);
			online[4] = cache_get_row_int(0, 21);
			online[5] = cache_get_row_int(0, 22);
			online[6] = cache_get_row_int(0, 23);

			id = GetPlayerID(params);

			if(id != INVALID_PLAYER_ID) status = "в сети";
			else status = "не в сети";

			cache_get_field_content(0, "last_connect", last_connect);

			ans = cache_get_row_int(0, 11);
			kicks = cache_get_row_int(0, 12);
			warns = cache_get_row_int(0, 13);
			bans = cache_get_row_int(0, 14);
			mutes = cache_get_row_int(0, 15);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Ник: {ebec86}%s\n", params);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Уровень администратирования: {ebec86}%d\n", level);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Назначил: {ebec86}%s\n", set_admin);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Дата назначения: {ebec86}%s\n", set_date);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Статус: {ebec86}%s\n", status);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Последний вход: {ebec86}%s\n\n", last_connect);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Статистика (за сутки):\n\n");
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Ответов на репорт: {ebec86}%d\n", ans);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Киков: {ebec86}%d\n", kicks);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Варнов: {ebec86}%d\n", warns);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Банов: {ebec86}%d\n", bans);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Затычек: {ebec86}%d\n", mutes);
			strcat(fmt_dialog, fmt_msg);

			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Джаилов: {ebec86}%d\n\n", jails);
			strcat(fmt_dialog, fmt_msg);
			
			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Время в игре:\n\n");
			strcat(fmt_dialog, fmt_msg);
			
			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Суббота: {ebec86}%d ч.\n", online[0]);
			strcat(fmt_dialog, fmt_msg);
			
			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Воскресенье: {ebec86}%d ч.\n", online[1]);
			strcat(fmt_dialog, fmt_msg);
			
			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Понедельник: {ebec86}%d ч.\n", online[2]);
			strcat(fmt_dialog, fmt_msg);

            format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Вторник: {ebec86}%d ч.\n", online[3]);
			strcat(fmt_dialog, fmt_msg);
			
			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Среда: {ebec86}%d ч.\n", online[4]);
			strcat(fmt_dialog, fmt_msg);
			
			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Четверг: {ebec86}%d ч.\n", online[5]);
			strcat(fmt_dialog, fmt_msg);
			
			format(fmt_msg, sizeof fmt_msg, "{FFFFFF}Пятница: {ebec86}%d ч.\n", online[6]);
			strcat(fmt_dialog, fmt_msg);
			
			ShowPlayerDialogEx
			(
			playerid, D_NULL, DIALOG_STYLE_MSGBOX,
			"{ebec86}>> Статистика администратора",
			fmt_dialog,
			"Закрыть", ""
			);

		}
		else SendClientMessage(playerid, C_RED, "Такой администратор не найден");
		cache_delete(result);
	}
	return 1;
}

cmd:offwarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 4) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new playername[MAX_PLAYER_NAME], reason[32];
	if(sscanf(params, "s[60]s[60]", playername, reason)) return SendInf(playerid, "/offwarn [ник игрока] [причина]");
	else if(CheckExceptionName(playername)) return AttemptRemoveChiefAdmin(playerid);
	else if(IsIpFound(reason) || CheckString(reason)) return AdminAntisliv(playerid, reason);
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendErr(playerid, "Игрок в сети, используйте команду /warn");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s'", playername);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerOffwarn", "iss", playerid, playername, reason);
	return 1;
}

cmd:aunwarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/aunwarn [id игрока]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!p_info[params[0]][pAdmin]) return SendErr(playerid, "Выбранный Вами администратор не является лидером");
	else if(!p_info[params[0]][pAWarn]) return SendErr(playerid, "Выбранный Вами администратор не имеет выговоров");
	p_info[params[0]][pAWarn] --;
	MysqlUpdatePlayerInt(params[0], "awarn", p_info[params[0]][pAWarn]);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Руководитель %s снял выговор с администратора %s [%d/3]", GetName(playerid), GetName(params[0]), p_info[params[0]][pAWarn]);
	SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
	return 1;
}

cmd:lunwarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/lunwarn [id игрока]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!p_info[params[0]][pLeader]) return SendErr(playerid, "Выбранный Вами лидер не является лидером");
	else if(!p_info[params[0]][pLWarn]) return SendErr(playerid, "Выбранный Вами лидер не имеет выговоров");
	p_info[params[0]][pLWarn] --;
	MysqlUpdatePlayerInt(params[0], "lwarn", p_info[params[0]][pLWarn]);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 128, "Администратор %s снял выговор с лидера %s [%d/3]", GetName(playerid), GetName(params[0]), p_info[params[0]][pLWarn]);
	SendClientMessageToAll(COLOR_RED, STRING_GLOBAL);
	return 1;
}

cmd:activate(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");

	if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "s[24]", params[0])) return SendInf(playerid, "/activate [ник игрока]");

	STRING_GLOBAL[0] = EOS;
	mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s' AND `deactivate` = '1'", params[0]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "ActivateAccount", "is", playerid, params[0]);

	return 1;
}

cmd:deactivate(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "s[24]", params[0])) return SendInf(playerid, "/deactivate [ник игрока]");

	if(GetPlayerID(params[0]) != INVALID_PLAYER_ID)
	{
		new string[128], string1[128];
		p_info[GetPlayerID(params[0])][pDeActivate] = 1;
		MysqlUpdatePlayerInt(GetPlayerID(params[0]), "deactivate", p_info[GetPlayerID(params[0])][pDeActivate]);

		format(string1, sizeof string1, "Ваш аккаунт был деактивирован администратором %s(%d) для проведения расследования", GetName(playerid), playerid);
		SendClientMessage(GetPlayerID(params[0]), COLOR_RED, string1);
		SendClientMessage(GetPlayerID(params[0]), COLOR_RED, "Если Вы считаете, что произошла ошибка, сообщите об этом администрации сервера");

		format(string, sizeof string, "[{ebec86}A{828282}] Администратор %s деактивировал аккаунт игрока %s для проведения расследования", GetName(playerid), GetName(GetPlayerID(params[0])));
		SendAdminMessage(COLOR_ADMIN, string);

		Kick(GetPlayerID(params[0]));
	}
	else
	{

		new string1[128];

		mysql_format(dbHandle, string1, sizeof(string1), "UPDATE "T_ACCOUNTS" SET `deactivate` = '1' WHERE `name` = '%s'", params[0]);
		mysql_tquery(dbHandle, string1, "", "");

		new string[128];

		format(string, sizeof string, "[{ebec86}A{828282}] Администратор %s OFFLINE деактивировал аккаунт игрока %s", GetName(playerid), params[0]);
		SendAdminMessage(COLOR_ADMIN, string);

	}


	return 1;
}

cmd:offlwarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "s[24]", params[0])) return SendInf(playerid, "/offlwarn [ник игрока]");
	else if(GetPlayerID(params[0]) != INVALID_PLAYER_ID) return SendErr(playerid, "Игрок в сети, используйте команду /lwarn");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 128, "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s' LIMIT 1", params[0]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OffWarnLeader", "iss", playerid, params[0], params[1]);
	return 1;

}

cmd:offawarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "s[24]", params[0])) return SendInf(playerid, "/offawarn [ник игрока]");
	else if(GetPlayerID(params[0]) != INVALID_PLAYER_ID) return SendErr(playerid, "Игрок в сети, используйте команду /awarn");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 128, "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s' LIMIT 1", params[0]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OffWarnAdmin", "iss", playerid, params[0], params[1]);
	return 1;

}

cmd:offlunwarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "s[24]", params[0])) return SendInf(playerid, "/offlunwarn [ник игрока]");
	else if(GetPlayerID(params[0]) != INVALID_PLAYER_ID) return SendErr(playerid, "Игрок в сети, используйте команду /lunwarn");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 128, "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s' AND `leader` > '0'", params[0]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OffUNWarnLeader", "is", playerid, params[0]);
	return 1;

}

cmd:offaunwarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "s[24]", params[0])) return SendInf(playerid, "/offaunwarn [ник игрока]");
	else if(GetPlayerID(params[0]) != INVALID_PLAYER_ID) return SendErr(playerid, "Игрок в сети, используйте команду /aunwarn");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 128, "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s' AND `admin` > '0'", params[0]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OffUNWarnAdmin", "is", playerid, params[0]);
	return 1;

}


cmd:lwarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "us[24]", params[0], params[1])) return SendInf(playerid, "/lwarn [id игрока] [причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!p_info[params[0]][pLeader]) return SendErr(playerid, "Выбранный Вами игрок не является лидером");
	new string[128], string1[128];
	p_info[params[0]][pLWarn] ++;
	MysqlUpdatePlayerInt(params[0], "lwarn", p_info[params[0]][pLWarn]);
	if(p_info[params[0]][pLWarn] < 3) format(string, sizeof(string), "Администратор %s выдал выговор лидеру %s [%i/3]. Причина: %s", GetName(playerid), GetName(params[0]), p_info[params[0]][pLWarn], params[1]);
	else
	{
		p_info[params[0]][pLWarn] = 0;
		MysqlUpdatePlayerInt(params[0], "lwarn", p_info[params[0]][pLWarn]);
		LeaveFractionPlayer(params[0]);
		format(string, sizeof(string), "Лидер %s(%d) получил 3 выговора и был снят администратором %s(%d)", GetName(params[0]), params[0], GetName(playerid), playerid);
	}
	SendClientMessageToAll(COLOR_RED, string);

	format(string1, sizeof string1, "Вы получили выговор от администратора %s(%d). При 3-х имеющихся выговоров, Вы будете сняты с поста", GetName(playerid), playerid);
	SendClientMessage(params[0], COLOR_GREEN, string1);

	SendClientMessage(params[0], COLOR_GREEN, "Если Вы считаете, что произошла ошибка, обратитесь к основателям сервера");
	return 1;
}
cmd:awarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "У Вас нет доступа к этой команде");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "us[24]", params[0], params[1])) return SendInf(playerid, "/awarn [id игрока] [причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!p_info[params[0]][pAdmin]) return SendErr(playerid, "Выбранный Вами игрок не является администратором");
	new string[128], string1[128];
	p_info[params[0]][pAWarn] ++;
	MysqlUpdatePlayerInt(params[0], "awarn", p_info[params[0]][pAWarn]);
	if(p_info[params[0]][pAWarn] < 3) format(string, sizeof(string), "Руководитель %s выдал выговор администратору %s [%i/3]. Причина: %s", GetName(playerid), GetName(params[0]), p_info[params[0]][pAWarn], params[1]);
	else
	{
		p_info[params[0]][pAWarn] = 0;
		MysqlUpdatePlayerInt(params[0], "awarn", p_info[params[0]][pAWarn]);
		RemoveAdmin(params[0], GetName(params[0]));
		format(string, sizeof(string), "Администратор %s(%d) получил 3 выговора и был снят руководителем %s(%d)", GetName(params[0]), params[0], GetName(playerid), playerid);
	}
	SendAdminMessage(COLOR_ADMIN, string);
	format(string1, sizeof string1, "Вы получили выговор от руководителя %s(%d). При 3-х имеющихся выговоров, Вы будете сняты с поста!", GetName(playerid), playerid);
	SendClientMessage(params[0], COLOR_GREEN, string1);
	SendClientMessage(params[0], COLOR_GREEN, "Если Вы считаете, что произошла ошибка, обратитесь к основателям сервера");
	return 1;
}

cmd:warn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 2) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "us[24]", params[0], params[1])) return SendInf(playerid, "/warn [id игрока] [причина]");
	else if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID || params[0] == playerid) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[playerid][pAdmin] <= p_info[params[0]][pAdmin]) return AttemptRemoveAdmin(playerid);
	else if(IsIpFound(params[1]) || CheckString(params[1])) return AdminAntisliv(playerid, params[1]);
	p_info[params[0]][pWarn]++;
	MysqlUpdatePlayerInt(params[0], "warn", p_info[params[0]][pWarn]);
	p_info[params[0]][pWarnTime] = 10;
	MysqlUpdatePlayerInt(params[0], "warntime", p_info[params[0]][pWarnTime]);
	new string[128];
	if(p_info[params[0]][pWarn] < 3)
	{
		format(string, sizeof(string), "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s", GetName(playerid), GetName(params[0]), p_info[params[0]][pWarn], params[1]);

        format(STRING_GLOBAL, 128, "%s выдал предупреждение %s [%i/3]. Причина: %s", GetName(playerid), GetName(params[0]), p_info[params[0]][pWarn], params[1]);
		WriteLog(TYPE_LOG_WARN,STRING_GLOBAL);
	}
	else
	{
		new data[15], unbandate;
		p_info[params[0]][pWarn] = 0;
		MysqlUpdatePlayerInt(params[0], "warn", p_info[params[0]][pWarn]);
		format(string, sizeof(string), "Администратор %s забанил игрока %s (3 предупреждения). Причина: %s", GetName(playerid), GetName(params[0]), params[1]);
		getdate(years, months, days);
		unbandate = gettime() + 7*86400;
		format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', 7, %d, '%s')", GetName(params[0]), GetName(playerid), p_info[params[0]][pIP], data, unbandate, params[1]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	SendClientMessageToAll(COLOR_RED, string);
	admin_attempt[playerid] ++ ;
	if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
	if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
	{
		admin_ban_time[playerid] = 600;
		MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
		admin_attempt[playerid] = 0;
		admin_check_time[playerid] = 0;
		SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
		return 1;
	}
	LeaveFractionPlayer(params[0]);
	p_info[params[0]][pSpawnChange] = 0;
	MysqlUpdatePlayerInt(params[0], "spawnchange", p_info[params[0]][pSpawnChange]);
	Kick(params[0]);

	mysql_format(dbHandle, string, sizeof string, "UPDATE "T_ADMIN" SET `warns` = warns+1 WHERE `name` = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, string, "", "");
	return 1;
}

cmd:unwarn(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 7) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/unwarn [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[params[0]][pWarn] == 0) return SendErr(playerid, "У данного игрока нет предупреждений!");
	p_info[params[0]][pWarn]--;
	MysqlUpdatePlayerInt(params[0], "warn", p_info[params[0]][pWarn]);
	if(p_info[params[0]][pWarn] > 0)
	{
	    p_info[params[0]][pWarnTime] = 10;
		MysqlUpdatePlayerInt(params[0], "warntime", p_info[params[0]][pWarnTime]);
	}
	else
	{
	    p_info[params[0]][pWarnTime] = 0;
		MysqlUpdatePlayerInt(params[0], "warntime", p_info[params[0]][pWarnTime]);
	}
	new string[128];
	format(string, sizeof(string), "Администратор %s[%d] снял Вам 1 предупреждение", GetName(playerid), playerid);
	SendClientMessage(params[0], COLOR_WHITE, string);
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] снял предупреждение игроку %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	
	format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] %s снял предупреждение %s", GetName(playerid), GetName(params[0]));
	WriteLog(TYPE_LOG_UNWARN,STRING_GLOBAL);
	return 1;
}

cmd:unban(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 7) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "s[64]", params[0])) return SendInf(playerid, "/unban [имя игрока]");

	STRING_GLOBAL[0]= EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM bans WHERE name = '%s'", params[0]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerUnban", "is", playerid, params[0]);
	return 1;
}

cmd:banip(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(isnull(params)) return SendInf(playerid, "/banip [ip адрес]");
	new string[100];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s заблокировал IP адрес %s", GetName(playerid), params);
	SendAdminMessage(COLOR_ADMIN, string);
	format(string, sizeof(string), "banip %s", params);
	SendRconCommand(string);
	return 1;
}

cmd:unbanip(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(isnull(params)) return SendInf(playerid, "/unbanip [ip адрес]");
	new string[100];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s разблокировал IP адрес %s", GetName(playerid), params);
	SendAdminMessage(COLOR_ADMIN, string);
	format(string, sizeof(string), "unbanip %s", params);
	SendRconCommand(string);
	return 1;
}

CMD:en(playerid)
{
	STRING_GLOBAL = "";
	new VehicleID = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new EngineStatus[50], LightsStatus[50], BootStatus[50], BonnetStatus[50], LimiterStatus[50];
		if(engine == 1) EngineStatus = "{f0e86b}Заведен";
		else EngineStatus = "{FF6347}Заглушен";
		if(lights == 1) LightsStatus = "{f0e86b}Включены";
		else LightsStatus = "{FF6347}Выключены";
		if(boot == 1) BootStatus = "{f0e86b}Открыт";
		else BootStatus = "{FF6347}Закрыт";
		if(bonnet == 1) BonnetStatus = "{f0e86b}Открыт";
		else BonnetStatus = "{FF6347}Закрыт";
		if(GetPVarInt(playerid, "slimit")) LimiterStatus = "{f0e86b}Включен";
		else LimiterStatus = "{FF6347}Выключен";
		if(IsVehicleBikes(VehicleID)) return SendErr(playerid, "У вашего транспорта нет панели управления");
		else if(IsVehicleAir(VehicleID))
		{
			format(STRING_GLOBAL, 128, "1. Двигатель [%s{FFFFFF}]", EngineStatus);
			ShowPlayerDialogEx(playerid, D_ENMENU, DIALOG_STYLE_LIST, "{ebec86}>> Управление транспортом", STRING_GLOBAL, "Изменить", "Выйти");
		}
		else if(IsVehicleMoto(VehicleID))
		{
			format(STRING_GLOBAL, 128, "1. Двигатель [%s{FFFFFF}]\n2. Фары [%s{FFFFFF}]", EngineStatus, LightsStatus);
			ShowPlayerDialogEx(playerid, D_ENMENU, DIALOG_STYLE_LIST, "{ebec86}>> Управление транспортом", STRING_GLOBAL, "Изменить", "Выйти");
		}
		else if(IsVehicleBoats(VehicleID)) return SendErr(playerid, "У вашего транспорта нет панели управления");
		else
		{
			format(STRING_GLOBAL, 350, "1. Двигатель [%s{FFFFFF}]\n2. Фары [%s{FFFFFF}]\n3. Капот [%s{FFFFFF}]\n4. Багажник [%s{FFFFFF}]\n5. Ограничитель [%s{FFFFFF}]", EngineStatus, LightsStatus, BonnetStatus, BootStatus, LimiterStatus);
			ShowPlayerDialogEx(playerid, D_ENMENU, DIALOG_STYLE_LIST, "{ebec86}>> Управление транспортом", STRING_GLOBAL, "Изменить", "Выйти");
		}
	}
	else SendErr(playerid, "Вы не находитесь в транспорте");
	return 1;
}

cmd:hgps(playerid)
{
	if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "Вы не владеете домом");
	for(new i = TOTALHOUSE; i > 0; i --)
	{
		if(strcmp(GetName(playerid),HouseInfo[i][hOwner], true) == 0)
		{
			SetPlayerRaceCheckpoint(playerid,1, HouseInfo[i][hEntrx],HouseInfo[i][hEntry],HouseInfo[i][hEntrz],0.0,0.0,0.0, 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Ваш дом обозначен на карте {FF6347}красной меткой");
			SetPVarInt(playerid, "Home", 1);
		}
	}
	return 1;
}

cmd:unmute(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/unmute [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[params[0]][pMuted] == 0) return SendErr(playerid, "Игрок не имеет бан чата!");
	p_info[params[0]][pMuted] = 0;
	MysqlUpdatePlayerInt(params[0], "mute", p_info[params[0]][pMuted]);
	new string[100];
	format(string, sizeof(string), "Администратор %s снял бан чата у %s",GetName(playerid),GetName(params[0]));
	SendClientMessageToAll(COLOR_RED, string);
	
	format(STRING_GLOBAL, 128, "%s снял бан чата %s", GetName(playerid),GetName(params[0]));
	WriteLog(TYPE_LOG_UNMUTE, STRING_GLOBAL);
	return 1;
}

cmd:mute(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "udS()[64]", params[0], params[1], params[2])) return SendInf(playerid, "/mute [id игрока] [время] [причина]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[params[0]][pMuted] > 0) return SendErr(playerid, "Игрок уже имеет бан чата!");
	else if(params[1] > 40 || params[1] < 10) return SendErr(playerid, "Время от 10 до 40 минут!");
	else if(IsIpFound(params[2]) || CheckString(params[2])) return AdminAntisliv(playerid, params[2]);
	p_info[params[0]][pMuted] = params[1]*60;
	MysqlUpdatePlayerInt(params[0], "mute", p_info[params[0]][pMuted]);
	new string[144];
	if(strlen(params[2])) format(string, sizeof(string), "Администратор %s выдал бан чата %s на %d минут. Причина: %s",GetName(playerid), GetName(params[0]), params[1], params[2]);
	else format(string, sizeof(string), "Администратор %s выдал бан чата %s на %d минут.",GetName(playerid), GetName(params[0]), params[1]);
	SendClientMessageToAll(COLOR_RED, string);
	
	format(STRING_GLOBAL, 128, "%s бан чата %s на %i минут. Причина: %s",GetName(playerid), GetName(params[0]), params[1], params[2]);
	WriteLog(TYPE_LOG_MUTE,STRING_GLOBAL);

	mysql_format(dbHandle, string, sizeof string, "UPDATE "T_ADMIN" SET `mutes` = mutes+1 WHERE `name` = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, string, "", "");

	admin_attempt[playerid] ++ ;
	if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
	if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
	{
		admin_ban_time[playerid] = 600;
		MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
		admin_attempt[playerid] = 0;
		admin_check_time[playerid] = 0;
		SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
		return 1;
	}
	return 1;
}

cmd:jail(playerid,params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	STRING_GLOBAL[0] = EOS;
	new demorgan_dialog[128];
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/jail [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	SetPVarInt(playerid, "demorgan", params[0]);

	format(demorgan_dialog, sizeof demorgan_dialog, "{ebec86}>> Наказать игрока %s за:", GetName(params[0]));
	strcat(STRING_GLOBAL, "1. Deathmatch (DM)  \t\t\t\t{FF5533}[10 минут]\n");
	strcat(STRING_GLOBAL, "2. Drive By (DB)  \t\t\t\t{FF5533}[10 минут]\n");
	strcat(STRING_GLOBAL, "3. Spawn Kill (SK)  \t\t\t\t{FF5533}[5 минут]\n");
	strcat(STRING_GLOBAL, "4. Срыв Мероприятия  \t\t\t{FF5533}[5 минут]\n");
	strcat(STRING_GLOBAL, "5. Срыв набора \t\t\t\t{FF5533}[5 минут]\n");
	strcat(STRING_GLOBAL, "6. DM in ZZ  \t\t\t\t{FF5533}[10 минут]\n");
	strcat(STRING_GLOBAL, "7. PowerGaming (PG)  \t\t\t\t{FF5533}[5 минут]\n");
	strcat(STRING_GLOBAL, "8. Багоюз \t\t\t\t\t{FF5533}[10 минут]\n");
	strcat(STRING_GLOBAL, "9. DM в КПЗ  \t\t\t\t\t{FF5533}[10 минут]\n");
	strcat(STRING_GLOBAL, "10. DM в ZZ  \t\t\t\t\t{FF5533}[10 минут]\n");
	strcat(STRING_GLOBAL, "11. Revenge Kill (RK)  \t\t\t\t{FF5533}[5 минут]\n");
	strcat(STRING_GLOBAL, "12. NonRP езда  \t\t\t\t\t{FF5533}[10 минут]\n");
	strcat(STRING_GLOBAL, "13. NonRP  \t\t\t\t\t{FF5533}[5 минут]");
	ShowPlayerDialogEx(playerid, DEMORGAN, DIALOG_STYLE_LIST, demorgan_dialog, STRING_GLOBAL, "Далее", "Отмена");

	return 1;
}

cmd:unjail(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/unjail [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[params[0]][pJail] == 0) return SendErr(playerid, "Игрок не находиться в тюрьме");
	p_info[params[0]][pJailTime] = 1;
	MysqlUpdatePlayerInt(params[0], "jailtime", p_info[params[0]][pJailTime]);
	AC_ResetPlayerWeapons(params[0]);
	new string[100];
	format(string, sizeof(string), "Администратор %s[%i] выпустил из тюрьмы %s[%i]",GetName(playerid),playerid,GetName(params[0]),params[0]);
	SendClientMessageToAll(COLOR_RED, string);

	format(string, sizeof(string), "Администратор %s[%i] вытащил вас из тюрьмы",GetName(playerid),playerid);
	SendClientMessage(params[0],COLOR_LIGHTGREEN, string);
	
	format(STRING_GLOBAL, 128, "%s выпустил из тюрьмы %s",GetName(playerid),GetName(params[0]));
	WriteLog(TYPE_LOG_UNJAIL,STRING_GLOBAL);
	return 1;
}

cmd:unarrest(playerid, params[])
{
	if(p_info[playerid][pMember] != TEAM_MERIA) return 1;
	else if(!IsPlayerInRangeOfPoint(playerid, 40.0,611.1249,2769.9980,1250.5100)) return 1;
	else if(p_info[playerid][pRank] != 4) return SendErr(playerid, "Доступно только адвокатам!");
	else if(sscanf(params, "i", params[0])) return SendInf(playerid, "/unarrest [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	else if(p_info[params[0]][pJail] == 0) return SendErr(playerid, "Игрок не находиться в тюрьме!");
	SCMF(playerid, COLOR_BLUE, "Вы оформили документы по освобождению %s в размере %dр.", GetName(params[0]), 50000);
	SCMF(params[0], COLOR_BLUE, "Адвокат %s оформил(а) документы по освобождению в размере %dр.", GetName(playerid), 50000);
	SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
	SetPVarInt(params[0], "JailPlayer", playerid);
	SetPVarInt(params[0], "JailSumma", 50000);
	SetPVarInt(params[0], "KeyJail", 1);
	return 1;
}

CMD:id(playerid, params[])
{
    if(sscanf(params, "s[24]", params[0])) return SendInf(playerid, "/id [имя]");
    new count,ggwp;

	if(ggwp == 10) return 1;
    foreach(new i: Player)
    {
        if(!IsPlayerConnected(i)) continue;
        if(strfind(p_info[i][pName], params[0], true) != -1)
        {
            new string[MAX_PLAYER_NAME+100], text[30];
            if(p_info[i][pAFK] > 3)
            {
                text = "- {f0e86b}AFK{FFFFFF}";
            }
            else
            {
                text = "";
            }
        	format(string,sizeof(string),"%s - {f0e86b}%d{FFFFFF} %s",p_info[i][pName], i, text);
        	SendClientMessage(playerid, -1, string);
        	count++;
			ggwp++;

			if(ggwp == 10) return SendClientMessage(playerid, 0xFFCC00FF, "Первые 10 игроков с похожим ником");
        }
    }
    if(count == 0) return SendErr(playerid, "Игроков с похожим ником нет на сервере!");
    return 1;
}

cmd:givegun(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 5) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "uii", params[0],params[1],params[2])) return SendInf(playerid, "/givegun [id игрока] [id оружия] [кол-во патронов]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if((params[1] < 1 || params[1] > 47) || params[1] == 38) return SendErr(playerid, "ID оружия от 1 до 47");
	else if(params[2] > 500 || params[2] < 1) return SendErr(playerid, "Количество патронов от 1 до 500");
	AC_GivePlayerWeapon(params[0], params[1], params[2]);
	SCMF(playerid, COLOR_LIME, "Вы установили оружие игроку %s",GetName(params[0]));
	return 1;
}

cmd:atakegun(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/atakegun [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	AC_ResetPlayerWeapons(params[0]);
	SCMF(playerid, COLOR_YELLOW, "Вы сбросили оружие игроку %s",GetName(params[0]));
	SCMF(params[0], COLOR_GREEN, "Администратор %s обнулил ваше оружие",GetName(playerid));
	return 1;
}

cmd:givemoney(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		else if(sscanf(params, "ui", params[0],params[1])) return SendInf(playerid, "/givemoney [id игрока] [кол-во денег]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(params[1] > 100000000 || params[1] < 1) return SendErr(playerid, "Количество денег от 1 до 100000000!");

		GiveMoney(params[0], params[1], "/givemoney");

		SCMF(playerid, COLOR_LIME, "Вы установили денег игроку: %s", GetName(params[0]));
		SCMF(params[0], COLOR_WHITE, "Администратор %s выписал Вам чек на %dр", GetName(playerid),params[1]);
		SendClientMessage(params[0], COLOR_WHITE, "Деньги были зачислены на ваш баланс");
		
		format(STRING_GLOBAL, 128, "%s выдал %s +%d руб", GetName(playerid), GetName(params[0]), params[1]);
		WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);
	}
	return 1;
}

cmd:givecredits(playerid, params[])
{
	if(p_info[playerid][pAdmin] > 8)
	{
		if(sscanf(params, "ui", params[0],params[1])) return SendInf(playerid, "/givecredits [id игрока] [кол-во]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(params[1] > 10000 || params[1] < 1) return SendErr(playerid, "Количество от 1 до 10000!");
		p_info[params[0]][pCredits] += params[1];
		new string[128];
		format(string, sizeof(string), "Вы перевели %i кредитов на счёт игроку %s", params[1], GetName(params[0]));
		SendClientMessage(playerid, COLOR_GREEN, string);
		format(string, sizeof(string), "На Ваш аккаунт поступили денежные средства", params[1]);
		SendClientMessage(params[0], COLOR_YELLOW, string);
		SendClientMessage(params[0], COLOR_YELLOW, "Чтобы ими воспользоваться, введите /donate");
		format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET credits=%d WHERE name='%s'", p_info[params[0]][pCredits], GetName(params[0]));
		mysql_tquery(dbHandle, string, "", "");
		PlayerPlaySound(params[0], 6401, 0.0, 0.0, 0.0);
		
		format(STRING_GLOBAL, 128, "%s выдал %s +%d кредитов", GetName(playerid), GetName(params[0]), params[1]);
		WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);
	}
	return 1;
}

cmd:unavig(playerid, params[])
{
	if(p_info[playerid][pAdmin] > 8)
	{
		if(sscanf(params, "u", params[0])) return SendInf(playerid, "/unavig [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(PhoneNumbers[params[0]][4] == 0) return SendErr(playerid, "У игрока нет выговоров!");
		PhoneNumbers[params[0]][4] = 0;
		new string[128];
		format(string, sizeof(string), "Вы сняли выговоры игроку %s", GetName(params[0]));
		SendClientMessage(playerid, COLOR_GREEN, string);
		format(string, sizeof(string), "Администратор %s снял с вас все выговоры", GetName(playerid));
		SendClientMessage(params[0], COLOR_YELLOW, string);
	}
	return 1;
}

cmd:slap(playerid, params[])
{
    if(GetPVarInt(playerid, "anti_flod_slap") > gettime()) return SendErr(playerid, "Использовать можно раз в минуту");
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3 && p_info[playerid][pHelper] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/slap [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	new Float:shealth,Float:slx, Float:sly, Float:slz;
	GetPlayerHealth(params[0], shealth);
	SetHealth(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] подкинул игрока %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
	SendAdminMessage(COLOR_ADMIN, string);
	if(p_info[playerid][pHelper] > 2) SetPVarInt(playerid, "anti_flod_slap", gettime()+60);
	if(p_info[playerid][pHelper] > 0)
	{
		mysql_format(dbHandle, string, sizeof string, "UPDATE "T_HELPER" SET `ans` = ans+1 WHERE `name` = '%s'", GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
	}
	return 1;
}

cmd:alogin(playerid, params[])
{
	if(GetPVarInt(playerid, "check_alogin") > gettime()) return 1;
	else if(AdminLogged[playerid]) return SendErr(playerid, "Вы уже авторизовались как администратор!");

	new string[128];
	format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE `name` = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, string, "Alogin", "is", playerid, GetName(playerid));
	SetPVarInt(playerid, "check_alogin", gettime()+5);
	return 1;
}

cmd:setsex(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 5) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/setsex [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	new string[128];
	switch(p_info[params[0]][pSex])
	{
	case 1:
		{
			format(string, sizeof(string), "Вы изменили пол игроку %s на женский", GetName(params[0]));
			SendClientMessage(playerid, COLOR_LIME, string);
			SendClientMessage(params[0], COLOR_LIME, "Администратор изменил ваш пол на женский");
			p_info[params[0]][pSex] = 2;
		}
	case 2:
		{
			format(string, sizeof(string), "Вы изменили пол игроку %s на мужской",GetName(params[0]));
			SendClientMessage(playerid, COLOR_LIME, string);
			SendClientMessage(params[0], COLOR_LIME, "Администратор изменил ваш пол на мужской");
			p_info[params[0]][pSex] = 1;
		}
	}
	MysqlUpdatePlayerInt(params[0], "sex", 	p_info[params[0]][pSex]);
	return 1;
}

cmd:tempskin(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "ui", params[0],params[1])) return SendInf(playerid, "/tempskin [id игрока] [id внешности]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(params[1] > 299 || params[1] < 1) return SendErr(playerid, "Неверный id внешности. Можно установить от 1 до 299");
	SetPlayerSkin(params[0], params[1]);
	new string[128];
	format(string, sizeof(string), "Администратор %s выдал Вам временный скин", GetName(playerid));
	SendClientMessage(params[0], COLOR_LIME, string);
	format(string, sizeof(string), "Вы выдали временный скин [%i] игроку %s", params[1], GetName(params[0]));
	SendClientMessage(playerid, COLOR_LIME, string);
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%i] выдал временный скин %s[%d] (%i)", GetName(playerid), playerid, GetName(params[0]), params[0], params[1]);
	SendAdminMessage(COLOR_ADMIN, string);
	return 1;
}

cmd:setskin(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "ui", params[0],params[1])) return SendInf(playerid, "/setskin [id игрока] [id внешности]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(params[1] > 299 || params[1] < 1) return SendErr(playerid, "Неверный id внешности. Можно установить от 1 до 299");
	if(p_info[params[0]][pMember])
	{
		p_info[params[0]][pMemberSkin] = params[1];
		SetPlayerSkin(params[0], p_info[params[0]][pMemberSkin]);
		MysqlUpdatePlayerInt(params[0], "memberskin", p_info[params[0]][pMemberSkin]);
	}
	else
	{
		ClosetSkins[params[0]][0] = params[1];
		SetPlayerSkin(params[0], ClosetSkins[params[0]][0]);
		MysqlUpdatePlayerInt(params[0], "Skin", ClosetSkins[params[0]][0]);
	}
	new string[128];
	format(string, sizeof(string), "Администратор %s выдал Вам статический скин", GetName(playerid));
	SendClientMessage(params[0], COLOR_LIME, string);
	format(string, sizeof(string), "Вы выдали статический скин [%i] игроку %s", params[1], GetName(params[0]));
	SendClientMessage(playerid, COLOR_LIME, string);
	return 1;
}

cmd:exit(playerid, params[])
{
	if(GetPVarInt(playerid, "StartTraining"))
	{
     	new i = GetPVarInt(playerid, "PlayerBizz");
	    DeletePVar(playerid, "StartTraining");
	    DeletePVar(playerid, "ChooseStyle");
	    if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
		else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
	    SetPlayerPos(playerid, -336.0977,425.8536,2513.6201);
	    SetPlayerVirtualWorld(playerid, i);
	    return 1;
	}
	for(new idx = TOTALHOUSE; idx > 0; idx --)
	{
		if(PlayerToPoint(1.0, playerid, HouseInfo[idx][hExitx], HouseInfo[idx][hExity], HouseInfo[idx][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[idx][hVirtual])
		{
			LoadTexture(playerid);
			SetPlayerPos(playerid, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	return 1;
}

cmd:skills(playerid)
{
	new Stats_Level[8][30];
	if(p_info[playerid][pGunSkill][0] <= 10) Stats_Level[0] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][0] <= 30) Stats_Level[0] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][0] <= 70) Stats_Level[0] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][0] <= 90) Stats_Level[0] = "{F09945}[Хорошо]";
	else Stats_Level[0] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][1] <= 10) Stats_Level[1] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][1] <= 30) Stats_Level[1] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][1] <= 70) Stats_Level[1] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][1] <= 90) Stats_Level[1] = "{F09945}[Хорошо]";
	else Stats_Level[1] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][2] <= 10) Stats_Level[2] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][2] <= 30) Stats_Level[2] = "{F06245}[Плохо]";
	else if(p_info[playerid][pGunSkill][2] <= 70) Stats_Level[2] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][2] <= 90) Stats_Level[2] = "{F09945}[Хорошо]";
	else Stats_Level[2] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][3] <= 10) Stats_Level[3] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][3] <= 30) Stats_Level[3] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][3] <= 70) Stats_Level[3] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][3] <= 90) Stats_Level[3] = "{F09945}[Хорошо]";
	else Stats_Level[3] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][4] <= 10) Stats_Level[4] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][4] <= 30) Stats_Level[4] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][4] <= 70) Stats_Level[4] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][4] <= 90) Stats_Level[4] = "{F09945}[Хорошо]";
	else Stats_Level[4] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][5] <= 10) Stats_Level[5] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][5] <= 30) Stats_Level[5] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][5] <= 70) Stats_Level[5] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][5] <= 90) Stats_Level[5] = "{F09945}[Хорошо]";
	else Stats_Level[5] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][6] <= 10) Stats_Level[6] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][6] <= 30) Stats_Level[6] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][6] <= 70) Stats_Level[6] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][6] <= 90) Stats_Level[6] = "{F09945}[Хорошо]";
	else Stats_Level[6] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][7] <= 10) Stats_Level[7] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][7] <= 30) Stats_Level[7] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][7] <= 70) Stats_Level[7] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][7] <= 90) Stats_Level[7] = "{F09945}[Хорошо]";
	else Stats_Level[7] = "{FFFF00}[Отлично]";
	new string[56], string_dialogue[400];
	format(string_dialogue, sizeof(string_dialogue), "\
	{FFFFFF}Pistol 9mm\t\t%d%%\t%s\n\
	{FFFFFF}Silenced 9mm:\t\t%d%%\t%s\n\
	{FFFFFF}Desert Eeagle:\t\t%d%%\t%s\n\
	{FFFFFF}Shotgun:\t\t%d%%\t%s\n\
	{FFFFFF}Micro Uzi\t\t%d%%\t%s\n\
	{FFFFFF}MP5\t\t\t%d%%\t%s\n\
	{FFFFFF}AK47:\t\t\t%d%%\t%s\n\
	{FFFFFF}M4A1:\t\t\t%d%%\t%s",
	p_info[playerid][pGunSkill][6], Stats_Level[6],
	p_info[playerid][pGunSkill][0], Stats_Level[0],
	p_info[playerid][pGunSkill][1], Stats_Level[1],
	p_info[playerid][pGunSkill][2], Stats_Level[2],
	p_info[playerid][pGunSkill][7], Stats_Level[7],
	p_info[playerid][pGunSkill][3], Stats_Level[3],
	p_info[playerid][pGunSkill][4], Stats_Level[4],
	p_info[playerid][pGunSkill][5], Stats_Level[5]);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Навыки игрока", string_dialogue, "Закрыть", "");
	format(string, sizeof(string), "просматривает свои навыки", GetName(playerid));
	MeAction(playerid, string);
	return 1;
}

cmd:skill(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/skill [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	new Stats_Level[8][30];
	if(p_info[playerid][pGunSkill][0] <= 10) Stats_Level[0] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][0] <= 30) Stats_Level[0] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][0] <= 70) Stats_Level[0] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][0] <= 90) Stats_Level[0] = "{F09945}[Хорошо]";
	else Stats_Level[0] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][1] <= 10) Stats_Level[1] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][1] <= 30) Stats_Level[1] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][1] <= 70) Stats_Level[1] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][1] <= 90) Stats_Level[1] = "{F09945}[Хорошо]";
	else Stats_Level[1] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][2] <= 10) Stats_Level[2] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][2] <= 30) Stats_Level[2] = "{F06245}[Плохо]";
	else if(p_info[playerid][pGunSkill][2] <= 70) Stats_Level[2] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][2] <= 90) Stats_Level[2] = "{F09945}[Хорошо]";
	else Stats_Level[2] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][3] <= 10) Stats_Level[3] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][3] <= 30) Stats_Level[3] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][3] <= 70) Stats_Level[3] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][3] <= 90) Stats_Level[3] = "{F09945}[Хорошо]";
	else Stats_Level[3] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][4] <= 10) Stats_Level[4] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][4] <= 30) Stats_Level[4] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][4] <= 70) Stats_Level[4] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][4] <= 90) Stats_Level[4] = "{F09945}[Хорошо]";
	else Stats_Level[4] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][5] <= 10) Stats_Level[5] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][5] <= 30) Stats_Level[5] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][5] <= 70) Stats_Level[5] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][5] <= 90) Stats_Level[5] = "{F09945}[Хорошо]";
	else Stats_Level[5] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][6] <= 10) Stats_Level[6] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][6] <= 30) Stats_Level[6] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][6] <= 70) Stats_Level[6] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][6] <= 90) Stats_Level[6] = "{F09945}[Хорошо]";
	else Stats_Level[6] = "{FFFF00}[Отлично]";
	if(p_info[playerid][pGunSkill][7] <= 10) Stats_Level[7] = "{FF6347}[Очень плохо]";
	else if(p_info[playerid][pGunSkill][7] <= 30) Stats_Level[7] = "{FF6347}[Плохо]";
	else if(p_info[playerid][pGunSkill][7] <= 70) Stats_Level[7] = "{f0e86b}[Нормально]";
	else if(p_info[playerid][pGunSkill][7] <= 90) Stats_Level[7] = "{F09945}[Хорошо]";
	else Stats_Level[7] = "{FFFF00}[Отлично]";
	new string[56], string_dialogue[400];
	format(string_dialogue, sizeof(string_dialogue), "\
	{FFFFFF}Pistol 9mm\t\t%d%%\t%s\n\
	{FFFFFF}Silenced 9mm:\t\t%d%%\t%s\n\
	{FFFFFF}Desert Eeagle:\t\t%d%%\t%s\n\
	{FFFFFF}Shotgun:\t\t%d%%\t%s\n\
	{FFFFFF}Micro Uzi\t\t%d%%\t%s\n\
	{FFFFFF}MP5\t\t\t%d%%\t%s\n\
	{FFFFFF}AK47:\t\t\t%d%%\t%s\n\
	{FFFFFF}M4A1:\t\t\t%d%%\t%s",
	p_info[playerid][pGunSkill][6], Stats_Level[6],
	p_info[playerid][pGunSkill][0], Stats_Level[0],
	p_info[playerid][pGunSkill][1], Stats_Level[1],
	p_info[playerid][pGunSkill][2], Stats_Level[2],
	p_info[playerid][pGunSkill][7], Stats_Level[7],
	p_info[playerid][pGunSkill][3], Stats_Level[3],
	p_info[playerid][pGunSkill][4], Stats_Level[4],
	p_info[playerid][pGunSkill][5], Stats_Level[5]);
	ShowPlayerDialogEx(params[0], D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Навыки игрока", string_dialogue, "Закрыть", "");
	format(string, sizeof(string), "показал(а) свои навыки %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

cmd:smoke(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,100.0,645.9722,-339.3981,-94.7852)) return SendErr(playerid, "В больнице запрещено курить");
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==46){ok=s;break;}
	}
	if(ok==0){return SendErr(playerid, "У вас нет сигарет, купите их в супермаркете или 24/7");}
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	if(PlayerItem2[playerid][ok] == 0)
	{
		PlayerItem1[playerid][ok]=0;
	}
	PlayerItem2[playerid][ok]--;
	SaveItem(playerid,ok);
	if(p_info[playerid][pHunger] <= 97) GiveHunger(playerid, 3);
	else SetHunger(playerid, 100);
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) ApplyAnimation(playerid,"SMOKING","M_smk_drag",4.1,0,0,0,0,0,1);
	MeAction(playerid, "достал(а) сигарету и закурила её");
	return 1;
}

cmd:fuel(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы должны находится в транспорте");
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==49){ok=s;break;}
	}
	if(ok==0){return SendErr(playerid, "У вас нет канистры, купите её на заправочной станции");}
	else if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendErr(playerid, "Вы должны находиться за рулем транспорт");
	else if(Fuel[GetPlayerVehicleID(playerid)] >= 100) return SendErr(playerid, "В баке есть бензин");
	Fuel[GetPlayerVehicleID(playerid)] += 10;
	if(PlayerItem2[playerid][ok] == 0)
	{
		PlayerItem1[playerid][ok] = 0;
	}
	PlayerItem2[playerid][ok]--;
	SaveItem(playerid,ok);
	MeAction(playerid, "достал(а) канистру и заливает бензин в бак машины");
	return 1;
}

cmd:tools(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы должны находится в транспорте");
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==48){ok=s;break;}
	}
	if(ok==0){return SendErr(playerid, "У вас нет набора инструментов, купите его на заправочной станции");}
	else if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendErr(playerid, "Вы должны находиться за рулем транспорт");
	RepairVehicle(GetPlayerVehicleID(playerid));
	if(PlayerItem2[playerid][ok] == 0)
	{
		PlayerItem1[playerid][ok] = 0;
	}
	PlayerItem2[playerid][ok]--;
	SaveItem(playerid,ok);
	MeAction(playerid, "достал(а) инструменты и ремонтирует машину");
	return 1;
}

cmd:mask(playerid)
{
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==45){ok=s;break;}
	}
	if(ok==0){return SendErr(playerid, "У вас нет маски, купите их в супермаркете или 24/7!");}
	if(!PlayerUseMask[playerid])
	{
		SetPlayerColor(playerid, 0x00000000);
		PlayerUseMask[playerid] = true;
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.1, 0, 0, 0, 0, 0);
		SendClientMessage(playerid, COLOR_YELLOW, "Ваше местоположение на GPS {ffffff}скрыто{ffff00} на 10 минут!");
		SetPlayerChatBubble(playerid, "одевает маску", COLOR_ORANGE, 20.0, 500);
		GameTextForPlayer(playerid, "~b~INVISABLE ON", 800, 6);
		PlayerPlaySound(playerid, 21000, 0.0, 0.0, 0.0);
		MeAction(playerid, "одевает маску");
		MaskTimer[playerid] = SetTimerEx("MaskOff", 600000, false, "d", playerid);
	}
	else
	{
		SetPlayerColorEx(playerid,TeamColors[GetTeamID(playerid)]);
		PlayerUseMask[playerid] = false;
		if(PlayerItem2[playerid][ok] == 0)
		{
			PlayerItem1[playerid][ok]=0;
		}
		PlayerItem2[playerid][ok]--;
		SaveItem(playerid,ok);
		GameTextForPlayer(playerid, "~y~INVISABLE OFF", 800, 6);
		PlayerPlaySound(playerid, 21001, 0.0, 0.0, 0.0);
		MeAction(playerid, "снял(а) маску");
		SetPlayerChatBubble(playerid, "снял(а) маску", -1, 20.0, 500);
		KillTimer(MaskTimer[playerid]);
	}
	return 1;
}

cmd:healme(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid,100.0,2466.0825, -2140.7622, 634.2466)) return SendErr(playerid, "В больнице запрещено использовать аптечку");
	else if(p_info[playerid][pAptechka] == 0) return SendErr(playerid, "У вас нет аптечек, купите их в супермаркете или 24/7");
	new Float:shealth;
	GetPlayerHealth(playerid, shealth);
	if(shealth >= 100) return SendErr(playerid, "Твое здоровье вполне в хорошем состоянии");
	SetHealth(playerid, shealth+40);
	GetPlayerHealth(playerid, shealth);
	if(shealth > 100) SetHealth(playerid, 100);
	if(!IsPlayerInAnyVehicle(playerid)) { ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1); }
	p_info[playerid][pAptechka]--;
	MysqlUpdatePlayerInt(playerid, "aptechka", p_info[playerid][pAptechka]);
	if(p_info[playerid][pSex] == 1) SetPlayerChatBubble(playerid,"использовал аптечку",COLOR_PURPLE,30.0,1000);
	else SetPlayerChatBubble(playerid,"использовала аптечку",COLOR_PURPLE,30.0,1000);
	GameTextForPlayer(playerid, "~b~+40 HP", 100, 6);
	return 1;
}

cmd:time(playerid)
{
	if(p_info[playerid][pMuted] > 0)
	{
		format(STRING_GLOBAL, 144, "Осталось молчать: %d секунд", p_info[playerid][pMuted]);
		SendErr(playerid, STRING_GLOBAL);
	}
	if(p_info[playerid][pJailTime] > 0)
	{
		format(STRING_GLOBAL, 144, "Осталось сидеть: %d секунд", p_info[playerid][pJailTime]);
		SendErr(playerid, STRING_GLOBAL);
	}

	new hour, minuite, second, year, month, day, saturday = 1310155200, w = gettime(), day_week;
	gettime(hour, minuite, second);
	getdate(year, month, day);
	while(w - saturday > 60 * 60 * 24)
    {
        w -= 60 * 60 * 24;
        day_week ++;
    }
    while(day_week >= 7) day_week -= 7;
	static const Names_Months[12][12] = {"января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"};
    static const Names_Days[7][12] = {"суббота","воскресенье","понедельник","вторник","среда","четверг","пятница"};
	STRING_GLOBAL = "";
    format(STRING_GLOBAL, 1000, "\
		{FFFFFF}Текущее время: {3399FF}%02d:%02d\n\
		{FFFFFF}Сегодняшняя дата: {63BD4E}%s, %d %s %04d г.\n\n\
		{FFFFFF}Время в игре за час: {FF6666}%d мин\n\
		{FFFFFF}Время в игре за сегодня: {FFCC00}%s\n\
		{FFFFFF}Время в игре за вчера: {FFCC00}%s\n\
		{FFFFFF}AFK за сегодня: {ebec86}%s\n\
		{FFFFFF}AFK за вчера: {ebec86}%s",
		hour, minuite,
		Names_Days[day_week], day, Names_Months[month-1], year,
		p_info[playerid][pTimeHour]/60,
		ConvertsCmdTime(gOnlinePlayer[playerid][0]),
		ConvertsCmdTime(gOnlinePlayer[playerid][1]),
		ConvertsCmdTime(gOnlinePlayerAFK[playerid][0]),
		ConvertsCmdTime(gOnlinePlayerAFK[playerid][1]));
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Часы", STRING_GLOBAL, "Закрыть", "");

	ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,2000,1);
	return 1;
}

cmd:veh(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;

	else if(AdminLogged[playerid] == false)
	return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(GetPlayerInterior(playerid) > 0)
	return SendErr(playerid, "В интерьере нельзя создавать транспорт!");
	else if(sscanf(params, "ddd", params[0], params[1], params[2]))
	return SendInf(playerid, "/veh [id машины] [цвет 1] [цвет 2]");
	else if(params[0] > 611 || params[0] < 400)
	return SendErr(playerid, "ID машины не может быть меньше 400 и больше чем 611");
	else if(params[1] > 255 || params[1] < 0)
	return SendErr(playerid, "Номер цвета не может быть меньше 0 и больше 255");
	else if(params[2] > 255 || params[2] < 0)
	return SendErr(playerid, "Номер цвета не может быть меньше 0 и больше 255");
	else if(TotalAdminVehicles > 80)
	return SendErr(playerid, "Лимит админ-машин превышен");

	new Float:X,
Float:Y,
Float:Z;

	GetPlayerPos(playerid, X,Y,Z);
	X += 1.5;

	AVehicle[TotalAdminVehicles] = CreateVehicle(params[0], X,Y,Z, 0.0, params[1], params[2], -1);
	SetVehicleVirtualWorld(TotalAdminVehicles, GetPlayerVirtualWorld(playerid));
	LinkVehicleToInterior(TotalAdminVehicles, GetPlayerInterior(playerid));

	Fuel[TotalAdminVehicles] = 100;
	Engine[TotalAdminVehicles] = Lights[TotalAdminVehicles] = IsLocked[TotalAdminVehicles] = false;
	
	TotalAdminVehicles++;
	return 1;
}

cmd:alldelveh(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 7) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%i] удалил все автомобили созданные администраторами", GetName(playerid), playerid);
	SendAdminMessage(COLOR_ADMIN, string);
	for(new i = 0; i < TotalAdminVehicles; i++)
	{
		if(IsValidVehicle(AVehicle[i]))
		{
			DestroyVehicle(AVehicle[i]);
		}
		AVehicle[i] = 0;
	}
	TotalAdminVehicles = 0;
	return 1;
}

cmd:delveh(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 4) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы должны находится в транспорте!");
	new vehh = GetPlayerVehicleID(playerid);
	new slot = -1;
	for(new i = 0; i < TotalAdminVehicles; i++)
	{
		if(vehh == AVehicle[i])
		{
			slot = i;
		}

	}
	if(slot == -1) return SendErr(playerid, "Этот автомобиль не создавал администратор");
	new string[128];
	format(string, sizeof(string), "[{ebec86}A{828282}] %s[%i] удалил транспорт (%s, ID: %d)", GetName(playerid), playerid, VehicleNames[GetVehicleModel(AVehicle[slot])-400], AVehicle[slot]);
	SendAdminMessage(COLOR_ADMIN, string);
	if(IsValidVehicle(AVehicle[slot]))
	{
		DestroyVehicle(AVehicle[slot]);
	}
	AVehicle[slot] = 0;
	TotalAdminVehicles--;
	return 1;
}

cmd:fixveh(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы должны находится в транспорте!");
	RepairVehicle(GetPlayerVehicleID(playerid));
	return SendClientMessage(playerid, COLOR_WHITE, "Ваша машина отремонтирована!");
}

cmd:do(playerid, params[])
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/do [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	
	new fmt_str[128];
	format(fmt_str, sizeof fmt_str, "%s (%s)", params[0], GetName(playerid));
	SendMessageInLocal(playerid, fmt_str, COLOR_PURPLE, 25.0);
	
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:try(playerid, params[])
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/try [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	
	new fmt_str[128];
	format(fmt_str, sizeof fmt_str, "%s %s %s", GetName(playerid), params[0], !random(3) ? ("{f0e86b}| Удачно") : ("{FF6347}| Неудачно"));
	SendMessageInLocal(playerid, fmt_str, COLOR_PURPLE, 25.0);
	
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:me(playerid, params[])
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/me [текст]");
	else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	MeAction(playerid, params[0]);
	SetString(OldMessage[playerid], params[0]);
	TextReset[playerid] = gettime()+3;
	return 1;
}

cmd:setfuel(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 4) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы должны находится в транспорте!");
	else if(sscanf(params, "d", params[0])) return SendInf(playerid, "/setfuel [кол-во бензина]");
	else if(params[0] > 100 || params[0] < 1) return SendErr(playerid, "Неверное кол-во литров. Можно установить от 1 до 100 л");
	Fuel[GetPlayerVehicleID(playerid)] = params[0];
	return SendClientMessage(playerid, COLOR_LIME, "Транспорт заправлен");
}

cmd:msg(playerid, params[])///2018
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(isnull(params)) return SendInf(playerid, "/msg [текст]");
	new string[128];
	format(string, sizeof(string), "[A] %s[%d]: %s", GetName(playerid), playerid, params[0]);
	return SendAdminMessage(VAGOS_COLOR, string);
}

cmd:fuelcars(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	for(new i; i != MAX_VEHICLES; i++) Fuel[i] = 100;
	new string[128];
	format(string, sizeof(string), "Администратор %s заправил весь общественный транспорт на сервере. Приятной игры :)", GetName(playerid));
	return SendAdminMessage(VAGOS_COLOR, string);
}

cmd:engine(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 0;
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!IsAPlane(vehicleid)) return 0;
	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(vehicleid,(Engine[vehicleid])?(false):(true),lights,alarm,doors,bonnet,boot,objective);
	Engine[vehicleid] = (Engine[vehicleid])?(false):(true);
	return 1;
}

cmd:admins(playerid)
{
	if(p_info[playerid][pAdmin] > ADM_NONE || p_info[playerid][pVip] > 0)
	{
		new info[29], str[170];
		format(info, sizeof(info), "Администраторы онлайн: (%i)", GetAdminsOnline());
		SendClientMessage(playerid, COLOR_GREEN, info);
		foreach(new i: Admins)
		{
		    if(p_info[i][pAdmin] != ADM_NONE)
		    {
				format(str, sizeof(str), "%s[%d] (%i lvl) [%i/3] ", GetName(i), i, p_info[i][pAdmin],p_info[i][pAWarn]);
				if(p_info[i][Spectating][0] == INVALID_PLAYER_ID && p_info[i][pAFK] >= 3)
				format(str, sizeof(str), "%s AFK %s", str, Converts(p_info[i][pAFK]));
				else if(p_info[i][Spectating][0] != INVALID_PLAYER_ID && p_info[i][pAFK] < 3)
				format(str, sizeof(str), "%s {FF6347}(SP >> %i)", str, p_info[i][Spectating][0]);
				else if(p_info[i][Spectating][0] != INVALID_PLAYER_ID && p_info[i][pAFK] >= 3)
				format(str, sizeof(str), "%s AFK %s {FF6347}(SP >> %i)", str, Converts(p_info[i][pAFK]), p_info[i][Spectating][0]);
				SendClientMessage(playerid, COLOR_WHITE, str);
			}
		}
	}
	return 1;
}

cmd:helpers(playerid)
{
	if(p_info[playerid][pAdmin] > 0 || p_info[playerid][pHelper] > 0 || p_info[playerid][pVip] > 0)
	{
		new info[29], str[170];
		format(info, sizeof(info), "Хелперы онлайн: (%i)", GetHelpersOnline());
		SendClientMessage(playerid, COLOR_GREEN, info);
		foreach(new i: Helpers)
		{
		    if(p_info[i][pHelper] != 0)
		    {
				format(str, sizeof(str), "%s[%d] (%i lvl) ", GetName(i), i, p_info[i][pHelper]);
				if(p_info[i][Spectating][0] == INVALID_PLAYER_ID && p_info[i][pAFK] >= 3)
				format(str, sizeof(str), "%s AFK %s", str, Converts(p_info[i][pAFK]));
				else if(p_info[i][Spectating][0] != INVALID_PLAYER_ID && p_info[i][pAFK] < 3)
				format(str, sizeof(str), "%s {FF6347}(SP >> %i)", str, p_info[i][Spectating][0]);
				else if(p_info[i][Spectating][0] != INVALID_PLAYER_ID && p_info[i][pAFK] >= 3)
				format(str, sizeof(str), "%s AFK %s {FF6347}(SP >> %i)", str, Converts(p_info[i][pAFK]), p_info[i][Spectating][0]);
				SendClientMessage(playerid, COLOR_WHITE, str);
			}
		}
	}
	return 1;
}

cmd:gun(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 2) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/gun [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	new strin[70],strs[100],gunname[32];
	new weapons[13][2];

	STRING_GLOBAL[0] = EOS;
	format(strs, 100, "Игрок:\t\t\t%s{FFFFFF}", GetName(params[0]));
	strcat(STRING_GLOBAL, strs);
	for(new i = 0; i != 12; i ++)
	{
		GetPlayerWeaponData(params[0], i, weapons[i][0], weapons[i][1]);
		GetWeaponName(weapons[i][0],gunname,32);
		if(weapons[i][0] != 0)
		{
			format(strin,70,"\n\nОружие:\t\t%s (%d)\nПатроны:\t\t%d",gunname,weapons[i][0],weapons[i][1]);
			strcat(STRING_GLOBAL,strin);
		}
	}
	ShowPlayerDialogEx(playerid,D_NULL,0,"{ebec86}>> Оружие игрока",STRING_GLOBAL,"Закрыть","");
	return 1;
}

cmd:add(playerid, params[])
{
	if(p_info[playerid][pAdmin] > 8)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		ShowPlayerDialogEx(playerid, D_ADDNED, 2, "{ebec86}>> Добавить", "1. Дом\n2. Добавить бизнес\n3. Добавить транспорт\n4. Добавить ATM\n5. Добавить SPRUNK\n6. Гараж", "Принять", "Отмена");
	}
	return 1;
}

CMD:createpodezd(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return 1;
	if(sscanf(params, "ii", params[0],params[1]))
	{
		SendInf(playerid, "/createpodezd [Тип] [Уровень цены]");
		SendErr(playerid, "Типы: 1 тип - 3 этажа, 2 тип - 3 этажа, как в Южном, 3 тип - 2 этажа, 4 тип - 5 этажей");
		SendErr(playerid, "Уровни: 1, 2, 3");
		return 1;
	}
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if(params[0] == 0 || params[0] >= 5)
	{
		SendInf(playerid, "/createpodezd [Тип] [Уровень цены]");
		SendErr(playerid, "Типы: 1 тип - 3 этажа, 2 тип - 3 этажа, как в Южном, 3 тип - 2 этажа, 4 тип - 5 этажей");
		SendErr(playerid, "Уровни: 1, 2, 3");
		return 1;
	}
	if(params[1] == 0 || params[1] >= 4)
	{
		SendInf(playerid, "/createpodezd [Тип] [Уровень цены]");
		SendErr(playerid, "Типы: 1 тип - 3 этажа, 2 тип - 3 этажа, как в Южном, 3 тип - 2 этажа, 4 тип - 5 этажей");
		SendErr(playerid, "Уровни: 1, 2, 3");
		return 1;
	}
	new type = params[0];
	new cena = params[1];
	new string[100];
	TOTALPODEZD++;
	switch(type)
	{
	case 1: format(string,90,"92.2885,-166.0693,996.7797,1,1");	// Инт 4 этажа
	case 2: format(string,90,"514.6105,-73.8570,1398.2188,2,2");// Инт 2 падика
	case 3: format(string,90,"468.5620,-61.4008,1408.6062,3,3");// Инт 4 этажа
	case 4: format(string,90,"363.9392,-73.1163,1411.6899,4,4");// Инт 4 этажа
	}
	sscanf(string,"p<,>fffii",
	PodezdInfo[TOTALPODEZD][poExitX],PodezdInfo[TOTALPODEZD][poExitY],PodezdInfo[TOTALPODEZD][poExitZ],
	PodezdInfo[TOTALPODEZD][poI],PodezdInfo[TOTALPODEZD][poType]);
	PodezdInfo[TOTALPODEZD][poX] = x;
	PodezdInfo[TOTALPODEZD][poY] = y;
	PodezdInfo[TOTALPODEZD][poZ] = z;
	PodezdInfo[TOTALPODEZD][poV] = TOTALPODEZD;

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 600, "INSERT INTO "T_PODEZD" (\
	`poX`, `poY`, `poZ`, `poExitX`, `poExitY`, `poExitZ`, `poI`, `poV`, `poType`) \
	VALUES ('%f', '%f', '%f', '%f', '%f', '%f', '%i', '%i', '%i')",
	PodezdInfo[TOTALPODEZD][poX], PodezdInfo[TOTALPODEZD][poY], PodezdInfo[TOTALPODEZD][poZ], PodezdInfo[TOTALPODEZD][poExitX], PodezdInfo[TOTALPODEZD][poExitY], PodezdInfo[TOTALPODEZD][poExitZ], PodezdInfo[TOTALPODEZD][poI], PodezdInfo[TOTALPODEZD][poV], PodezdInfo[TOTALPODEZD][poType]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	CreateDynamicMapIcon(PodezdInfo[TOTALPODEZD][poX], PodezdInfo[TOTALPODEZD][poY], PodezdInfo[TOTALPODEZD][poZ], 35, 0,-1,-1,-1,200.0);
	PodezdInfo[TOTALPODEZD][poPickup] = CreateDynamicPickup(19133, 1, PodezdInfo[TOTALPODEZD][poX], PodezdInfo[TOTALPODEZD][poY], PodezdInfo[TOTALPODEZD][poZ], 0);
	PodezdInfo[TOTALPODEZD][poPickupExit] = CreateDynamicPickup(19133, 1, PodezdInfo[TOTALPODEZD][poExitX], PodezdInfo[TOTALPODEZD][poExitY], PodezdInfo[TOTALPODEZD][poExitZ], PodezdInfo[TOTALPODEZD][poV]);
	new podezdid = TOTALPODEZD;
	new string2[100];
	new string1[100];
	new ids = 0;
	new typepodezd = PodezdInfo[TOTALPODEZD][poType];
	new maxids;
	switch(typepodezd)
	{
	case 1: maxids = 19;
	case 2: maxids = 6;
	case 3: maxids = 7;
	case 4: maxids = 24;
	}
	while(ids < maxids)
	{
		TOTALROOMS++;
		if(typepodezd == 1)
		{
			format(string2,90,"%f,%f,%f", RoomClass1[ids][0], RoomClass1[ids][1], RoomClass1[ids][2]);
		}
		if(typepodezd == 2)
		{
			format(string2,90,"%f,%f,%f", RoomClass2[ids][0], RoomClass2[ids][1], RoomClass2[ids][2]);
		}
		if(typepodezd == 3)
		{
			format(string2,90,"%f,%f,%f", RoomClass3[ids][0], RoomClass3[ids][1], RoomClass3[ids][2]);
		}
		if(typepodezd == 4)
		{
			format(string2,90,"%f,%f,%f", RoomClass4[ids][0], RoomClass4[ids][1], RoomClass4[ids][2]);
		}
		sscanf(string2,"p<,>fff",
		RoomsInfo[TOTALROOMS][rX], RoomsInfo[TOTALROOMS][rY], RoomsInfo[TOTALROOMS][rZ]);
		RoomsInfo[TOTALROOMS][rI] = 1;
		switch(random(3))
		{
		case 0: format(string1, 100,"-236.6516,413.3671,1003.5000, 2, 1, 750000");
		case 1: format(string1, 100,"-236.6516,413.3671,1003.5000, 3, 2, 950000");
		case 2: format(string1, 100,"-236.6516,413.3671,1003.5000, 4, 3, 1200000");
		}
		sscanf(string1,"p<,>fffiii",
		RoomsInfo[TOTALROOMS][rExitX], RoomsInfo[TOTALROOMS][rExitY], RoomsInfo[TOTALROOMS][rExitZ], RoomsInfo[TOTALROOMS][rExitI], RoomsInfo[TOTALROOMS][rType],RoomsInfo[TOTALROOMS][rCost]);
		RoomsInfo[TOTALROOMS][rCost] = RoomsInfo[TOTALROOMS][rCost]*cena;
		RoomsInfo[TOTALROOMS][rV] = PodezdInfo[podezdid][poV];
		RoomsInfo[TOTALROOMS][rI] = PodezdInfo[podezdid][poI];
		RoomsInfo[TOTALROOMS][rExitV] = TOTALROOMS+1;
		strmid(RoomsInfo[TOTALROOMS][rOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 600, "INSERT INTO "T_ROOMS" (\
		`rX`, `rY`, `rZ`, `rV`, `rI`, `rExitX`, `rExitY`, `rExitZ`, `rExitV`, `rExitI`, `rType`, `rCost`) \
		VALUES ('%f', '%f', '%f', '%i', '%i', '%f', '%f', '%f', '%i', '%i', '%i', '%i')",
		RoomsInfo[TOTALROOMS][rX], RoomsInfo[TOTALROOMS][rY], RoomsInfo[TOTALROOMS][rZ], RoomsInfo[TOTALROOMS][rV], RoomsInfo[TOTALROOMS][rI],
		RoomsInfo[TOTALROOMS][rExitX], RoomsInfo[TOTALROOMS][rExitY], RoomsInfo[TOTALROOMS][rExitZ], RoomsInfo[TOTALROOMS][rExitV], RoomsInfo[TOTALROOMS][rExitI],
		RoomsInfo[TOTALROOMS][rType], RoomsInfo[TOTALROOMS][rCost]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
		RoomsInfo[TOTALROOMS][rPickupEnter] = CreateDynamicPickup(1239, 1, RoomsInfo[TOTALROOMS][rX], RoomsInfo[TOTALROOMS][rY], RoomsInfo[TOTALROOMS][rZ], RoomsInfo[TOTALROOMS][rV]);
		RoomsInfo[TOTALROOMS][rPickupExit] = CreateDynamicPickup(1239, 1, RoomsInfo[TOTALROOMS][rExitX], RoomsInfo[TOTALROOMS][rExitY], RoomsInfo[TOTALROOMS][rExitZ], RoomsInfo[TOTALROOMS][rExitV]);
		ids++;
	}
	SCMF(playerid, COLOR_LIGHTBLUE, "Подьезд №{FFCC00}%i {0099FF}успешно создан.", TOTALPODEZD);
	return 1;
}

CMD:sellcar(playerid, params[])
{
	new rows;
	new Cache: result;

	STRING_GLOBAL[0] = EOS;
	mysql_format(dbHandle, STRING_GLOBAL, 128, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, STRING_GLOBAL);

	rows = cache_num_rows();

	if(!rows)
	return SendClientMessage(playerid, C_RED, "У Вас нет личного транспорта"), cache_delete(result);

	if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID) return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");

	new model = GetVehicleModel(p_info[playerid][pOwnableCar]);
	if(!model) return 1;

	new price,
	percent;

	for(new idx = 0; idx < sizeof(carsC); idx ++)
	{
		if(model != carsC[idx][0])
		continue;

		price = carsC[idx][1];

		percent = carsC[idx][1] * 20 / 100;

		break;
	}

	STRING_GLOBAL[0] = EOS;
	format
	(
	STRING_GLOBAL, 512,
	"{FFFFFF}Модель:\t%s (№%d)\n\
		Стоимость:\t%d руб\n\n\
		Вы уверены что хотите продать транспорт?\n\
		На Ваш банковский счет будет начислено %d руб\n\n\
		Если Вы хотите продать его другому игроку,\n\
		используйте команду /sellmycar",
	VehicleNames[model-400],
	model,
	price,
	price - percent
	);

	ShowPlayerDialogEx
	(
	playerid, DIALOG_SELL_CAR, DIALOG_STYLE_MSGBOX,
	"{ebec86}>> Продажа личного транспорта",
	STRING_GLOBAL,
	"Да", "Нет"
	);

	SetPVarInt(playerid, "sell_car_cost", price);
	SetPVarInt(playerid, "sell_car_percent", percent);

	return 1;
}

cmd:sellmycar(playerid, params[])
{
	if(p_info[playerid][pCredit] != 0) return SendClientMessage(playerid, COLOR_RED, "Во время кредита Вам запрещено продавать имущество");
	if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи авто нужно отыграть 3 часа");

	new rows;
	new fmt_query[90];
	new Cache: result;

	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(!rows)
	return SendClientMessage(playerid, C_RED, "У Вас нет личного транспорта"), cache_delete(result);
	
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/sellmycar [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");

	if(p_info[playerid][pOwnableCar] == INVALID_VEHICLE_ID)
	return SendErr(playerid, "Ваш личный транспорт не создан. Создайте его с помощью команды: /fixcar");
	
	p_info[playerid][pInteractionPlayer] = params[0];

	ShowPlayerDialogEx
	(
	playerid, DIALOG_INTERACTION_SELL_CAR, DIALOG_STYLE_INPUT,
	"{ebec86}>> Продажа личного ТС",
	"{ffffff}Введите сумму, за которую хотите продать своё ТС:",
	"Продать", "Отмена"
	);
	return 1;
}

cmd:sellcopter(playerid, params[])
{
	new rows;
	new Cache: result;

	STRING_GLOBAL[0] = EOS;
	mysql_format(dbHandle, STRING_GLOBAL, 128, "SELECT * FROM copters WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, STRING_GLOBAL);

	rows = cache_num_rows();

	if(rows < 1 || rows > 3)
	return SendClientMessage(playerid, C_RED, "У Вас нет личного вертолета"), cache_delete(result);

	if(p_info[playerid][PlayerCopterID] == INVALID_VEHICLE_ID)
	return SendClientMessage(playerid, 0xFFCC00FF, "Ваш вертолет не загружен, используйте: /fixcopter");

	new model = GetVehicleModel(p_info[playerid][PlayerCopterID]);
	if(!model) return 1;


	new price,
	percent;

	for(new idx = 0; idx < sizeof(copter_cars); idx ++)
	{
		if(model != copter_cars[idx][copID])
		continue;

		price = copter_cars[idx][copCost];

		percent = copter_cars[idx][copCost] * 20 / 100;

		break;
	}

	STRING_GLOBAL[0] = EOS;
	format
	(
	STRING_GLOBAL, 512,
	"{FFFFFF}Модель:\t%s (№%d)\n\
		Стоимость:\t%d руб\n\n\
		Вы уверены что хотите продать вертолет?\n\
		На Ваш банковский счет будет начислено %d руб",
	VehicleNames[model-400],
	model,
	price,
	price - percent
	);

	ShowPlayerDialogEx
	(
	playerid, DIALOG_SELL_COPTER, DIALOG_STYLE_MSGBOX,
	"{ebec86}>> Продажа личного вертолета",
	STRING_GLOBAL,
	"Да", "Нет"
	);

	SetPVarInt(playerid, "sell_car_cost", price);
	SetPVarInt(playerid, "sell_car_percent", percent);

	return 1;
}

cmd:sellmyhouse(playerid, params[])
{
	if(p_info[playerid][pCredit] != 0) return SendErr(playerid, "Во время кредита Вам запрещено продавать имущество");
	if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "У вас нет дома");
	if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи дома нужно отыграть 3 часа");
	else if(sscanf(params, "ud", params[0], params[1]))
	{
		SendInf(playerid, "/sellmyhouse [id игрока] [доплата]");
		SendInf(playerid, "Для того, чтоб продать дом нажмите 'ПКМ + Н' на игрока");
		return 1;
	}
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(GetPlayerHouse(params[0]) == 0) return SendErr(playerid, "У игрока нет дома!");
	else if(params[1] < 0 || params[1] > 15000000) return SendErr(playerid, "Количество доплаты от 1 до 15000000");
	new i = GetPVarInt(playerid, "PlayerHouse");
	new i2 = GetPVarInt(params[0], "PlayerHouse");
	if(IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz]) || IsPlayerInRangeOfPoint(playerid, 15.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
	{
		if(IsPlayerInRangeOfPlayer(3.0, playerid, params[0]) && params[0] != INVALID_PLAYER_ID)
		{
			if(params[0] == playerid) return SendErr(playerid, "Вы указали свой ID");
			SCMF(playerid, COLOR_LIGHTBLUE, "Вы предлежили обменяться домами с %s. Твоя доплата: %d",GetName(params[0]), params[1]);
			SCMF(params[0], COLOR_LIGHTBLUE, "%s предлежил обменяться домами с вами. Доплата: %d",GetName(playerid), params[1]);

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFF00}%s предложил обменять свой дом\n\n\t\t{ffffff}(Номер: %d, Класс: %s, Доплата: %d)\n{FFFF00}на ваш дом\n\t\t{ffffff}(Номер: %d, Тип: %s)\n\n{FFFF00}Вы согласны?", GetName(playerid), i, HouseInfo[i][hDiscript], params[1], i2, HouseInfo[i2][hDiscript]);
			ShowPlayerDialogEx(params[0], D_SELLHOUSE+1, 0, "{ebec86}>> Обменять дом", STRING_GLOBAL, "Да", "Нет");

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFF00}Вы предложили %s обменять свой дом\n\n\t\t{ffffff}(Номер: %d, Тип: %s, Доплата: %d)\n{FFFF00}на его дом\n\t\t{ffffff}(Номер: %d, Тип: %s)", GetName(params[0]), i, HouseInfo[i][hDiscript], params[1], i2, HouseInfo[i2][hDiscript]);
			ShowPlayerDialogEx(playerid, D_NULL, 0, "{ebec86}>> Обменять дом", STRING_GLOBAL, "Закрыть", "");
			HouseOffer[params[0]] = playerid;
			HousePrice[params[0]] = params[1];
		}
		else SendErr(playerid, "Игрок должен находиться рядом с тобой!");
	}
	else SendErr(playerid, "Вы должны находится в вашем доме!");
	return 1;
}

cmd:vostacc(playerid, params[])
{
	if(p_info[playerid][pTime] >= 2) return SendErr(playerid, "Вы уже брали данный бонус");
	p_info[playerid][pTime] += 2;
	MysqlUpdatePlayerInt(playerid, "time", p_info[playerid][pTime]);
	GiveMoney(playerid, 20000000, "/vostacc");
	p_info[playerid][pCredits] += 400;
	MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);

	SendClientMessage(playerid, C_OSNOV, "Вы взяли бонус от администрации "SERVER_NAME"");
	SendClientMessage(playerid, C_OSNOV, "Ваш бонус состоит из: 20кк игровой валюты, 400 кредитов");
	SendClientMessage(playerid, C_OSNOV, "Приятной игры на "SERVER_NAME"");
	return 1;
}

cmd:vpc(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(GetPVarInt(playerid, "AddVehicleFrac") == 0) return 1;
	else if(GetPlayerState(playerid) != 2) return 1;
	else if(!IsPlayerInVehicle(playerid, GetPVarInt(playerid, "AddVehicleFrac"))) return 1;
	new Float:X,Float:Y,Float:Z,Float:FA;
	GetVehicleZAngle(GetPlayerVehicleID(playerid), FA);
	GetVehiclePos(GetPlayerVehicleID(playerid), X,Y,Z);
	DestroyVehicle(GetPVarInt(playerid, "AddVehicleFrac"));
	TOTALVEH++;
	sscanf(coordv, "p<,>iiiiiiii", VehInfo[TOTALVEH][vModel], VehInfo[TOTALVEH][vColor][0],
	VehInfo[TOTALVEH][vColor][1],VehInfo[TOTALVEH][vFraction],VehInfo[TOTALVEH][vInt],VehInfo[TOTALVEH][vWorld], VehInfo[TOTALVEH][vStatus], VehInfo[TOTALVEH][vFamily]);
	format(VehInfo[TOTALVEH][vColors], 16, "%i, %i", VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1]);
	VehInfo[TOTALVEH][vPos_X] = X;
	VehInfo[TOTALVEH][vPos_Y] = Y;
	VehInfo[TOTALVEH][vPos_Z] = Z;
	VehInfo[TOTALVEH][vPos_FA] = FA;
	VehInfo[TOTALVEH][vVehicle] = CreateVehicle(VehInfo[TOTALVEH][vModel], VehInfo[TOTALVEH][vPos_X], VehInfo[TOTALVEH][vPos_Y], VehInfo[TOTALVEH][vPos_Z], VehInfo[TOTALVEH][vPos_FA],VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1], 300);
	LinkVehicleToInterior(VehInfo[TOTALVEH][vVehicle], VehInfo[TOTALVEH][vInt]);
	SetVehicleVirtualWorld(VehInfo[TOTALVEH][vVehicle], VehInfo[TOTALVEH][vWorld]);
	Fuel[VehInfo[TOTALVEH][vVehicle]] = 100;
	Engine[VehInfo[TOTALVEH][vVehicle]] = false;
	Lights[VehInfo[TOTALVEH][vVehicle]] = false;
	DeletePVar(playerid, "AddVehicleFrac");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"INSERT INTO "T_VEHICLE" (id, model, x, y, z, fa, vint, world, colors, fraction, status, family) VALUES (%i, %i, '%f', '%f', '%f', '%f', %i, %i, '%s', %i, %i, %i)",
	TOTALVEH,VehInfo[TOTALVEH][vModel],VehInfo[TOTALVEH][vPos_X],VehInfo[TOTALVEH][vPos_Y],VehInfo[TOTALVEH][vPos_Z],VehInfo[TOTALVEH][vPos_FA],VehInfo[TOTALVEH][vInt],
	VehInfo[TOTALVEH][vWorld],VehInfo[TOTALVEH][vColors],VehInfo[TOTALVEH][vFraction], VehInfo[TOTALVEH][vStatus], VehInfo[TOTALVEH][vFamily]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	SCMF(playerid, COLOR_LIME, "Транспорт номер %i создан", TOTALVEH);
	return 1;
}

cmd:tpc(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	if(TPC[playerid] == false)
	{
		if(!IsPlayerInVehicle(playerid, VehTest[playerid])) return SendErr(playerid, "Вы должны находится в транспорте!");
		new Float:X,Float:Y,Float:Z,Float:FA;
		GetVehicleZAngle(VehTest[playerid], FA);
		GetVehiclePos(VehTest[playerid], X,Y,Z);
		format(coordh, sizeof(coordh), "%f, %f, %f, %f", X, Y, Z, FA);
		DestroyVehicle(VehTest[playerid]);
		VehTest[playerid] = INVALID_VEHICLE_ID;
		TPC[playerid] = true;
		return SendClientMessage(playerid, COLOR_LIGHTRED, "Координаты созданы. Установите интерьер: /tpc");
	}
	if(TPC[playerid] == true)
	{
		new string1[616];
		strcat(string1,"ВАЖНО: Тип интерьера\n\nПРИМЕР: 1\n\n");
		strcat(string1,"1. Низкий класс\n");
		strcat(string1,"2. Средний класс\n");
		strcat(string1,"3. Высокий класс");
		ShowPlayerDialogEx(playerid,D_ADDNED+1,1,"{ebec86}>> Добавить дом",string1,"Выбрать","Закрыть");
	}
	return 1;
}

cmd:crent(playerid)
{
	if(GetPVarInt(playerid, "arendkey") == -1) return SendClientMessage(playerid, COLOR_FADE1, "Вы не арендуете транспорт.");
	new rc = GetPVarInt(playerid, "arendkey");
	if(ArendInfo[rc][aPlayerID] != playerid)
	{
		SendClientMessage(playerid, COLOR_FADE1, "Вы не арендуете транспорт");
		SetPVarInt(playerid, "arendkey", -1);
		return 1;
	}
	ShowPlayerDialogEx(playerid, D_CANCELRENT, 0, "{ebec86}>> Отмена аренды", "{FFFFFF}Вы действительно хотите отменить аренду транспорта?\nДальнейшее его использование станет недоступным,\nдо нового заключения договора на аренду транспорта.", "Принять", "Отмена");
	return 1;
}
CMD:afly(playerid,params[])
{
    if(p_info[playerid][pAdmin] < 1) return 1;
    SetPVarInt(playerid,"spawn_ac",1);
     
	if(GetPVarType(playerid, "FlyMode"))
	{
		new inter, world, Float:X, Float:Y, Float:Z, Float:FA;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, FA);
		inter = GetPlayerInterior(playerid);
		world = GetPlayerVirtualWorld(playerid);
		SetPVarFloat(playerid, "SpecX", X);
		SetPVarFloat(playerid, "SpecY", Y);
		SetPVarFloat(playerid, "SpecZ", Z);
		SetPVarFloat(playerid, "SpecFA", FA);
		SetPVarInt(playerid, "SpecInt", inter);
		SetPVarInt(playerid, "SpecWorld", world);
		 
		CancelFlyMode(playerid);
	}
	else
	{
			SetPVarInt(playerid, "SpecBool", 1);
			FlyMode(playerid);
	}
	return true;
}
cmd:sp(playerid, params[]) return callcmd::spec(playerid, params);
cmd:spec(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1 && p_info[playerid][pHelper] < 2) return 1;
	else if(IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "В транспорте нельзя следить");
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/spec [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[playerid][pAdmin] < 9 && AdminInfo[params[0]][admSpectate]) return SendErr(playerid, "Следить за этим администратором запрещено");
	new Float:xPos[4];
	GetPlayerPos(playerid, xPos[0], xPos[1], xPos[2]);
	GetPlayerFacingAngle(playerid, xPos[3]);
	if(p_info[playerid][Spectating][0] == INVALID_PLAYER_ID)
	{
		SetPVarInt(playerid, "SpecInt", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "SpecVw", GetPlayerVirtualWorld(playerid));
		SetPVarFloat(playerid, "SpecX", xPos[0]);
		SetPVarFloat(playerid, "SpecY", xPos[1]);
		SetPVarFloat(playerid, "SpecZ", xPos[2]);
		SetPVarFloat(playerid, "SpecA", xPos[3]);
		if(p_info[playerid][pAdmin] < 9)
		{
			new string[128];
			format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] начал наблюдать за %s[%d]", GetName(playerid), playerid, GetName(params[0]), params[0]);
			SendAdminMessage(COLOR_ADMIN, string);
		}
		
		new Float: player_health ;
		GetPlayerHealth ( params [ 0 ], player_health ) ;

		new td_str [ 98 ] ;
		format ( td_str, 48, "%s(%d)", p_info [ params [ 0 ] ] [ pName ], params [ 0 ] ) ;
		sp_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 86.666687, 166.148117, td_str ) ;
		PlayerTextDrawLetterSize(playerid, sp_ptd[playerid][0], 0.242082, 1.076297);
		PlayerTextDrawAlignment(playerid, sp_ptd[playerid][0], 2);
		PlayerTextDrawColor(playerid, sp_ptd[playerid][0], -1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, sp_ptd[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, sp_ptd[playerid][0], 255);
		PlayerTextDrawFont(playerid, sp_ptd[playerid][0], 1);
		PlayerTextDrawSetProportional(playerid, sp_ptd[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][0], 0);

		sp_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 32.083312, 189.999969, "LEVEL:~n~PING:~n~HEALTH:~n~ARMOUR:~n~AMMO:~n~SPEED:~n~IP:~n~WARNS:~n~CASH:");
		PlayerTextDrawLetterSize(playerid, sp_ptd[playerid][1], 0.242082, 1.076297);
		PlayerTextDrawAlignment(playerid, sp_ptd[playerid][1], 1);
		PlayerTextDrawColor(playerid, sp_ptd[playerid][1], -2139062017);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, sp_ptd[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, sp_ptd[playerid][1], 255);
		PlayerTextDrawFont(playerid, sp_ptd[playerid][1], 1);
		PlayerTextDrawSetProportional(playerid, sp_ptd[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][1], 0);

		format ( td_str, sizeof ( td_str ), "%d~n~%d~n~%.2f~n~%.2f~n~%d~n~%d~n~%s~n~%d~n~%d$",
		p_info [ params [ 0 ] ] [ pLevel ],
		GetPlayerPing ( params [ 0 ] ),
		PlayerHP [ params [ 0 ] ],
		PlayerAP [ params [ 0 ] ],
		GetPlayerAmmo ( params [ 0 ] ),
		SpeedVehicle ( params [ 0 ] ),
		p_info [ params [ 0 ] ] [ pIP ],
		p_info [ params [ 0 ] ] [ pWarn ],
		p_info [ params [ 0 ] ] [ pCash ] ) ;
		sp_ptd[playerid][2] = CreatePlayerTextDraw(playerid, 138.333206, 189.999862, td_str ) ;
		PlayerTextDrawLetterSize(playerid, sp_ptd[playerid][2], 0.242082, 1.076297);
		PlayerTextDrawAlignment(playerid, sp_ptd[playerid][2], 3);
		PlayerTextDrawColor(playerid, sp_ptd[playerid][2], -1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, sp_ptd[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, sp_ptd[playerid][2], 255);
		PlayerTextDrawFont(playerid, sp_ptd[playerid][2], 1);
		PlayerTextDrawSetProportional(playerid, sp_ptd[playerid][2], 1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][2], 0);

		for ( new j = 0 ; j < 7 ; j ++ )
		{
			TextDrawShowForPlayer ( playerid, sp_td [ j ] ) ;
			if ( j < 3 )PlayerTextDrawShow ( playerid, sp_ptd [ playerid ] [ j ] ) ;
		}

		ShowMenuForPlayer(specmenu, playerid);
	}
	SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
	AC_TogglePlayerSpectating(playerid, 1);
	SpRabotaySer[playerid] = true;
	if(IsPlayerInAnyVehicle(params[0])) PlayerSpectateVehicle(playerid, GetPlayerVehicleID(params[0]));
	else PlayerSpectatePlayer(playerid, params[0]);
	p_info[playerid][Spectating][0] = params[0];
	p_info[playerid][Spectating][1] = playerid;
	return 1;
}

cmd:spoff(playerid, params[]) return callcmd::specoff(playerid, params);
cmd:specoff(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1 && p_info[playerid][pHelper] < 2) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(p_info[playerid][Spectating][0] == INVALID_PLAYER_ID) return SendErr(playerid, "Вы не наблюдаете за игроком");
	if(p_info[playerid][pAdmin] < 9)
	{
		new string[128];
		format(string, sizeof(string), "[{ebec86}A{828282}] %s[%d] закончил наблюдение за %s[%i]", GetName(playerid), playerid, GetName(p_info[playerid][Spectating][0]), p_info[playerid][Spectating][0]);
		SendAdminMessage(COLOR_ADMIN, string);
	}
	AC_TogglePlayerSpectating(playerid, 0);
	SpRabotaySer[playerid] = false;
	if(p_info[playerid][pAdmin] > 0)
	{
		for ( new j = 0 ; j < 7 ; j ++ )
		{
			TextDrawHideForPlayer ( playerid, sp_td [ j ] ) ;
			if ( j < 3 )
			{
				PlayerTextDrawDestroy ( playerid, sp_ptd [ playerid ] [ j ] ) ;
				sp_ptd [ playerid ] [ j ] = PlayerText:-1;
			}
		}
		p_info[playerid][Spectating][0] = INVALID_PLAYER_ID;
		HideMenuForPlayer(specmenu, playerid);
	}
	return 1;
}

cmd:res(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 7) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new radius;
	if(sscanf(params, "d", radius)) return SendInf(playerid, "/res [радиус] (радиус от 1 до 80 | значение радиуса '-1' зареспавнит весь транспорт на сервере)");
	else if(!(radius >= -100 && radius <= 0x50)) return SendErr(playerid, "Неверное значение радиуса");
	if(radius == -1)
	{
		for(new i = 1; i < MAX_VEHICLES; i++)
		{
			if(IsVehicleOccupied(i)) continue;
			AC_SetVehicleToRespawn(i);
		}
		new string[128];
		format(string, sizeof(string), "[{ebec86}A{828282}] %s зареспавнил весь транспорт на сервере", GetName(playerid));
		SendAdminMessage(COLOR_ADMIN, string);
	}
	else
	{
		new Float:x, Float:y, Float:z;
		for(new i = 1; i < MAX_VEHICLES; i++)
		{
			GetPlayerPos(playerid, x, y, z);
			if(IsVehicleInRangeOfPoint(i, radius, x, y, z))
			{
			    if(IsVehicleOccupied(i)) continue;
				AC_SetVehicleToRespawn(i);
			}
		}
		new string[128];
		format(string, sizeof(string), "[{ebec86}A{828282}] %s зареспавнил весь транспорт в радиусе %d м", GetName(playerid), radius);
		SendAdminMessage(COLOR_ADMIN, string);
	}
	return 1;
}

cmd:gps(playerid, params[])
{
	if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0 || GetPVarInt(playerid, "pHospitals") >= 1) return SendErr(playerid, "GPS-навигатор не может установить соединение со спутником. Выйдите на улицу.");
	if(UseGPS[playerid])
	{
		SendClientMessage(playerid, COLOR_RED, "Вы отменили GPS");
		DisablePlayerRaceCheckpoint(playerid);
		UseGPS[playerid] = false;
		KillTimer(markTimer[playerid]);
    	markDist[playerid] = 0.0;
		HideGPSTextDraws(playerid);
	}
	STRING_GLOBAL = "";
	strcat(STRING_GLOBAL, "- Важные Места\n");
	strcat(STRING_GLOBAL, "- Работы для новичков\n");
	strcat(STRING_GLOBAL, "- По работе\n");
	strcat(STRING_GLOBAL, "- Государственные Организации\n");
	strcat(STRING_GLOBAL, "- Нелегальные Организации\n");
	strcat(STRING_GLOBAL, "- Стоянки\n");
	strcat(STRING_GLOBAL, "- Банки\n");
	strcat(STRING_GLOBAL, "- Бизнесы\n");
	strcat(STRING_GLOBAL, "- Мероприятия(Евенты)\n");
	strcat(STRING_GLOBAL, "- Автосалоны\n");
	strcat(STRING_GLOBAL, "- Аренда транспорта\n");
	strcat(STRING_GLOBAL, "- {c6635d}Ближайший магазин 24/7\n");
	strcat(STRING_GLOBAL, "- {c6635d}Ближайшая АЗС\n");
	strcat(STRING_GLOBAL, "- {c6635d}Ближайший банкомат\n");
	strcat(STRING_GLOBAL, "- {c6635d}Ближайшую СТО\n");
	strcat(STRING_GLOBAL, "- {c6635d}Ближайший клуб\n");
	strcat(STRING_GLOBAL, "- {c6635d}Ближайшее казино\n");
	strcat(STRING_GLOBAL, "- {c6635d}Ближайший магазин одежды\n");
	strcat(STRING_GLOBAL, "- {c6635d}Ближайший оружейный магазин\n");
	strcat(STRING_GLOBAL, "- {c6635d}Найти свой дом");
	ShowPlayerDialogEx(playerid, D_GPS, DIALOG_STYLE_LIST, "{ebec86}>> GPS", STRING_GLOBAL, "Выбрать", "Отмена");
	return 1;
}

CMD:agm(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "Введите: /agm [id]");
    SetPVarInt(playerid,"agm", 1);
    SetPlayerHealth(playerid, 0x7F800000);
    SendClientMessage(playerid, -1, "AGM активен");
    return 1;
}

cmd:agmoff(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "Введите: /agmoff [id]");
    SetPVarInt(playerid,"agm", 0);
    SetPlayerHealth(playerid, 100.0);
    SendClientMessage(playerid, -1, "AGM не активен");
    return 1;
}

cmd:gm(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/gm [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(StartGMTest[playerid] == true) return SendErr(playerid, "Вы тестируете другого человека, подождите окончания теста!");
	new Float:gmhealth;
	GetPlayerHealth(params[0], gmhealth);
	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(params[0],boomx, boomy, boomz);
	CreateExplosion(boomx, boomy, boomz+7, 5, 0.5);
	SetTimerEx("GmTest", 1000, false, "ddf", playerid, params[0], gmhealth);
	StartGMTest[playerid] = true;
	return 1;
}

cmd:setskill(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "udd", params[0], params[1], params[2]))
	{
		SendInf(playerid, "/setskill [id игрока] [номер] [количество]");
		SendClientMessage(playerid, COLOR_WHITE, "0 - Silenced 9mm, 1 - Desert Eagle, 2 - Shotgun, 3 - MP5, 4 - AK47, 5 - M4A1, 6 - Pistol, 7 - Micro Uzi");
		return 1;
	}
	else if(params[1] > 7 || params[1] < 0) return SendErr(playerid, "Неизвестное значение");
	else if(params[2] > 100 || params[2] < 0) return SendErr(playerid, "Значение владения оружием может быть от 0 до 100");
	else if(!IsPlayerConnected(params[0])) return 1;
	p_info[params[0]][pGunSkill][params[1]] = params[2];
	SendInf(playerid, "Уровень владения оружием игроку установлен");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET sdpistol=%i,deserteagle=%i,shotgun=%i,mp5=%i,ak47=%i,m4=%i,pistol=%i,microuzi=%i WHERE name='%s'",
	p_info[params[0]][pGunSkill][0], p_info[params[0]][pGunSkill][1], p_info[params[0]][pGunSkill][2], p_info[params[0]][pGunSkill][3], p_info[params[0]][pGunSkill][4], p_info[params[0]][pGunSkill][5], p_info[params[0]][pGunSkill][6], p_info[params[0]][pGunSkill][7], GetName(params[0]));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

cmd:gmx(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		
		SendClientMessageToAll(COLOR_RED, "Внимание! Происходит рестарт на сервере");
		SendClientMessageToAll(COLOR_RED, "Рестарт будет длиться 20-30 секунд");
		SendClientMessageToAll(COLOR_RED, "С Уважением администрация "SERVER_NAME"");
		
		foreach(new i: Player)
		{
			KickEx(i);
		}
		SaveWarehouse();
		SetTimer("GameModeExitDelay", 5000, false);
	}
	return 1;
}

cmd:setvip(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		else if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/setvip [id игрока] [кол-во дней]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(params[1] < 0 || params[1] > 30) return SendErr(playerid, "Нельзя выдавать VIP статус более чем на 30 дней");
		new string[128];
		if(params[1] > 0)
		{
			new year, month, day;
			getdate(year, month, day);
			new current_date = getdate(year, month, day);
			p_info[params[0]][pVip] = 1;
			p_info[params[0]][pVipTime] = current_date + params[1];
			format(string, sizeof(string), "Вы выдали VIP статус игроку %s на %i дней", GetName(params[0]), params[1]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "Администратор %s выдал вам VIP статус на %i дней", GetName(playerid), params[1]);
			SendClientMessage(params[0], COLOR_YELLOW, string);
			MysqlUpdatePlayerInt(params[0], "vip", p_info[params[0]][pVip]);
			MysqlUpdatePlayerInt(params[0], "viptime", p_info[params[0]][pVipTime]);
			
			format(STRING_GLOBAL, 128, "%s выдал VIP %s", GetName(playerid), GetName(params[0]));
			WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);
		}
		else if(params[1] == 0)
		{
			p_info[params[0]][pVip] = 0;
			p_info[params[0]][pVipTime] = 0;
			format(string, sizeof(string), "Вы забрали VIP статус у игрока %s", GetName(params[0]));
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "Администратор %s забрал у вас VIP статус", GetName(playerid));
			SendClientMessage(params[0], COLOR_YELLOW, string);
			MysqlUpdatePlayerInt(params[0], "vip", p_info[params[0]][pVip]);
			MysqlUpdatePlayerInt(params[0], "viptime", p_info[params[0]][pVipTime]);
		}
	}
	return 1;
}

cmd:pmenu(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		ShowPlayerDialogEx(playerid,D_PROMO,DIALOG_STYLE_LIST, "{ebec86}>> Меню промокодов","\
		1. Создать промокод \n\
		2. Действующие промокоды \n\
		3. Активированные промокоды \n\
		4. Заблокированные промокоды \n\
		{F66B6D}5. Заблокировать промокод \n\
		{F66B6D}6. Удалить промокод","Далее","Выход");
	}
	return 1;
}

cmd:alogs(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 1)
	return 1;

	if(AdminInfo[playerid][admAlog] == 0)
	{
		AdminInfo[playerid][admAlog] = 1;

		SendClientMessage(playerid, COLOR_BLUE, "Вы включили информацию о входах/выходах");
	}
	else
	{
		AdminInfo[playerid][admAlog] = 0;

		SendClientMessage(playerid, COLOR_BLUE, "Вы выключили информацию о входах/выходах");
	}

	new fmt_query[80];

	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "UPDATE "T_ADMIN" SET alog=%d WHERE name='%s' LIMIT 1", AdminInfo[playerid][admAlog], GetName(playerid));
	mysql_tquery(dbHandle, fmt_query, "", "");

	return 1;
}

cmd:unbanadm(playerid, params[])
{
	if(p_info[playerid][pAdmin] > 8)
	{
		extract params -> new to_player; else return SendInf(playerid, "/unbanadm [ид]");

		if(p_info[to_player][pAdmin] != 0)
		{
			if(admin_ban_time[to_player] > 0)
			{
				new fmt_msg[128];

				format(fmt_msg, sizeof fmt_msg, "Руководитель %s снял Вам блокировку админ-действий", GetName(playerid));
				SendClientMessage(to_player, 0xFFCC00FF, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "Вы разблокировали админ-действия %s", GetName(to_player));
				SendClientMessage(playerid, 0xFFCC00FF, fmt_msg);

				format(fmt_msg, sizeof fmt_msg, "[{ebec86}A{828282}] Руководитель %s[%d] разблокировал админ-действия %s[%d]", GetName(playerid), playerid, GetName(to_player), to_player);
				SendAdminMessage(COLOR_ADMIN, fmt_msg);

				admin_ban_time[to_player] = 0;

				MysqlUpdatePlayerInt(to_player, "ban_time", admin_ban_time[to_player]);
			}
			else SendErr(playerid, "У этого администратора не заблокированы админ-действия");
		}
		else SendErr(playerid, "Этот игрок не является администратором");
	}
	return 1;
}

cmd:sethelper(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 7)
	{
		if(PlayerLogged[playerid] == false) return 1;
		new playername[24], admin_level;
		if(sscanf(params, "s[64]i", playername, admin_level)) return SendInf(playerid, "/sethelper [ник игрока] [уровень хелпера]");
		new string[128];
		format(string, sizeof(string), "SELECT * FROM "T_HELPER" WHERE `name` = '%s'", playername);
		mysql_tquery(dbHandle, string, "SetHelper", "isi", playerid, playername, admin_level);
	}
	return 1;
}

forward SetHelper(playerid, name[], level);
public SetHelper(playerid, name[], level)
{
	new rows, fields, string[256];
	cache_get_data(rows, fields);
	if(rows)
	{
		if(!level)
		{
			if(GetPlayerID(name) != INVALID_PLAYER_ID) p_info[GetPlayerID(name)][pHelper] = 0;
			mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_HELPER" WHERE `name`='%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_HELPER" SET `admin` = '0' WHERE `name` = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "Вы сняли %s с должности хелпера", name);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
			if(GetPlayerID(name) != INVALID_PLAYER_ID) p_info[GetPlayerID(name)][pHelper] = level;
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_HELPER" SET `level` = '%d' WHERE `name` = '%s' LIMIT 1", level, name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "Вы установили уровень хелпера %s на %i", name, level);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			
			format(STRING_GLOBAL, 128, "%s выдал HLVL %s (%d)", GetName(playerid), name, level);
			WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);
		}
	}
	else
	{
		if(!level) return SendErr(playerid, "Игрок не администратор");
		new data[15];
		getdate(years, months, days);
		format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
		mysql_format(dbHandle, string, sizeof(string), "INSERT INTO "T_HELPER" (`name`, `level`, `last_connect`, `put_admin`, `data`) VALUES ('%s', %d, '%s', '%s', '%s')", name, level, data, GetName(playerid), data);
		mysql_tquery(dbHandle, string, "", "");
		format(string, sizeof(string), "%s добавлен в список хелперов. Уровень полномочий %i", name, level);
		SendClientMessage(playerid, COLOR_GREEN, string);
		if(GetPlayerID(name) != INVALID_PLAYER_ID)
		{
		    p_info[GetPlayerID(name)][pHelper] = 1;
			format(string, sizeof(string), "%s назначил Вас хелпером", GetName(playerid));
			SendClientMessage(GetPlayerID(name), COLOR_YELLOW, string);
		}
		format(STRING_GLOBAL, 128, "%s выдал HLVL %s (%d)", GetName(playerid), name, level);
		WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);
	}
	return 1;
}

cmd:setadmin(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		if(PlayerLogged[playerid] == false) return 1;
		new playername[24], admin_level;
		if(sscanf(params, "s[64]i", playername, admin_level)) return SendInf(playerid, "/setadmin [ник игрока] [уровень админа]");
		new string[128];
		format(string, sizeof(string), "SELECT * FROM "T_ADMIN" WHERE `name` = '%s'", playername);
		mysql_tquery(dbHandle, string, "SetAdmin", "isi", playerid, playername, admin_level);
	}
	return 1;
}

cmd:gg(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return 1;
	{
		new string[128];
		format(string, sizeof(string), "Администратор %s пожелал(а) Вам приятной игры на сервере, спасибо Вам, что Вы с нами :3", GetName(playerid));
		SendClientMessageToAll(0xffa500FF, string);
	}
	return 1;
}

cmd:setleader(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 7)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		else if(sscanf(params, "ud", params[0], params[1])) return SendInf(playerid, "/setleader [id игрока] [1 - гл. лидер, 2 - помощник]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(IsPlayerInAnyVehicle(params[0])) return SendErr(playerid, "Игрок не должен находиться в транспорте!");
		else if(p_info[params[0]][pTempLeader]) return SendErr(playerid, "Сначала снимите с себя права временного состояние в организации!");
		else if(params[1] < 1 || params[1] > 2) return SendErr(playerid, "Неправильно указана позиция лидера");
		if(p_info[params[0]][pLeader])
		{
			LeaveFractionPlayer(params[0]);
			SCMF(playerid, COLOR_BLUE, "Вы сняли %s с должности лидера организации",GetName(params[0]));
			SCMF(params[0], COLOR_BLUE, "Администратор %s снял вас с должности лидера организации", GetName(playerid));
			
			p_info[params[0]][pLeaderPosition] = 0;
			MysqlUpdatePlayerInt(params[0], "leaderposition", p_info[params[0]][pLeaderPosition]);
		}
		else
		{
			if(p_info[params[0]][pLeader] > 0) return SendErr(playerid, "Игрок лидер другой организации!");
			if(p_info[params[0]][pMember] > 0) return SendErr(playerid, "Игрок находиться в другой организации!");
			
			p_info[params[0]][pLeaderPosition] = params[1];
			MysqlUpdatePlayerInt(params[0], "leaderposition", p_info[params[0]][pLeaderPosition]);
			
			new str[90], str2[600];
			for(new i = 1; i < MAX_FRACTIONS; i++)
			{
				format(str, sizeof(str), "№%i - %s\n", i, Fractions[i][fractionName]);
				strcat(str2, str);
			}
			SetPVarInt(playerid, "actplayerid", params[0]);
			ShowPlayerDialogEx(playerid, D_FRACMENU, 2, "{ebec86}>> Организации", str2, "Принять", "Отмена");
		}
	}
	return 1;
}

cmd:ainvite(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	if(p_info[playerid][pTempLeader])
	{
		if(p_info[playerid][pTempLeader] == 0) return SendErr(playerid, "Вы не состоите в организации!");
		LeaveFractionPlayer(playerid);
		p_info[playerid][pTempLeader] = 0;
		SendClientMessage(playerid, COLOR_BLUE, "Вы тихо вышли из организации.");
		MysqlUpdatePlayerInt(playerid, "templeader", p_info[playerid][pTempLeader]);
	}
	else
	{
		new str[90];
		STRING_GLOBAL[0] = EOS;
		for(new i = 1; i < MAX_FRACTIONS; i++)
		{
			format(str, sizeof(str), "№%i - %s\n", i, Fractions[i][fractionName]);
			strcat(STRING_GLOBAL, str);
		}
		ShowPlayerDialogEx(playerid, D_TEMPLEADER, 2, "{ebec86}>> Организации", STRING_GLOBAL, "Принять", "Отмена");
	}
	return 1;
}

cmd:f(playerid, params[])
{
	if(p_info[playerid][pMember] >= 7 && p_info[playerid][pMember] <= 11 || p_info[playerid][pMember] >= 13 && p_info[playerid][pMember] <= 17)
	{
		if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/f [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[F] %s %s[%d]: %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[0]);
		SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, mesid);
		SendSpyMessage(p_info[playerid][pMember], COLOR_RED, mesid);
		
		SetPlayerChatBubble(playerid, "Сказал(а) что-то в семейный чат", COLOR_PURPLE, 10.0, 3000);
		
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else if(GetPVarInt(playerid, "spy_member") >= 7 && GetPVarInt(playerid, "spy_member") <= 11 || GetPVarInt(playerid, "spy_member") >= 13 && GetPVarInt(playerid, "spy_member") <= 17)
	{
	    if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/f [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[F] %s %s[%d]: %s", GetRank(GetPVarInt(playerid, "spy_member"), 7), GetName(playerid), playerid, params[0]);
		SendFMes(GetPVarInt(playerid, "spy_member"), COLOR_LIGHTBLUE, mesid);
		
		SetPlayerChatBubble(playerid, "Сказал(а) что-то в семейный чат", COLOR_PURPLE, 10.0, 3000);
		
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:fn(playerid, params[])
{
	if(p_info[playerid][pMember] >= 7 && p_info[playerid][pMember] <= 11 || p_info[playerid][pMember] >= 13 && p_info[playerid][pMember] <= 17)
	{
		if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/fn [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[F] (( %s %s[%d]: %s ))", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[0]);
		SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, mesid);
		SendSpyMessage(p_info[playerid][pMember], COLOR_RED, mesid);
		
		SetPlayerChatBubble(playerid, "Сказал(а) что-то в семейный чат", COLOR_PURPLE, 10.0, 3000);
		
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else if(GetPVarInt(playerid, "spy_member") >= 7 && GetPVarInt(playerid, "spy_member") <= 11 || GetPVarInt(playerid, "spy_member") >= 13 && GetPVarInt(playerid, "spy_member") <= 17)
	{
	    if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/f [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[F] (( %s %s[%d]: %s ))", GetRank(GetPVarInt(playerid, "spy_member"), 7), GetName(playerid), playerid, params[0]);
		SendFMes(GetPVarInt(playerid, "spy_member"), COLOR_LIGHTBLUE, mesid);
		
		SetPlayerChatBubble(playerid, "Сказал(а) что-то в семейный чат", COLOR_PURPLE, 10.0, 3000);
		
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:r(playerid, params[])
{
    if(PlayerTied[playerid] == true) return SendErr(playerid, "Ваши руки связаны");
    if(GetPVarInt(playerid, "spy_member") == TEAM_ARMY || GetPVarInt(playerid, "spy_member") == TEAM_POLICIA || GetPVarInt(playerid, "spy_member") == TEAM_POLICIA2 || GetPVarInt(playerid, "spy_member") == TEAM_SWAT)
	{
	    if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(sscanf(params, "ds[128]", params[0], params[1])) return SendInf(playerid, "/r [1 - чат ФСБ, 2 - чат организации] [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[1])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[1]) || CheckString(params[1])) return PlayerGetsChatBan(playerid, params[1]);
		else if(params[0] < 1 && params[0] > 2) return SendErr(playerid, "Вы не выбрали чат");
		if(params[0] == 1)
		{
			new mesid[150];
			format(mesid, sizeof(mesid), "[R] %s %s[%d]: %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[1]);
			SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, mesid);
			
			new strings[160];
			format(strings, sizeof(strings), "сказал(а) в рацию: {FFFFFF}%s", params[1]);
			SetPlayerChatBubble(playerid, strings, COLOR_PURPLE, 15.0, 10000);
			
			SetString(OldMessage[playerid], params[1]);
			TextReset[playerid] = gettime()+3;
		}
		else if(params[0] == 2)
		{
		    new mesid[150];
			format(mesid, sizeof(mesid), "[R] %s %s[%d]: %s", GetRank(GetPVarInt(playerid, "spy_member"), 5), GetName(playerid), playerid, params[1]);
			SendFMes(GetPVarInt(playerid, "spy_member"), COLOR_LIGHTBLUE, mesid);
			
			new strings[160];
			format(strings, sizeof(strings), "сказал(а) в рацию: {FFFFFF}%s", params[1]);
			SetPlayerChatBubble(playerid, strings, COLOR_PURPLE, 15.0, 10000);
			
			SetString(OldMessage[playerid], params[1]);
			TextReset[playerid] = gettime()+3;
		}
		return 1;
	}
	if(IsACop(playerid) || p_info[playerid][pMember] == TEAM_ARMY || IsAMedic(playerid) || IsAMayor(playerid) || p_info[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/r [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[R] %s %s[%d]: %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[0]);
		SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, mesid);
		SendSpyMessage(p_info[playerid][pMember], COLOR_RED, mesid);
		
		new strings[160];
		format(strings, sizeof(strings), "сказал(а) в рацию: {FFFFFF}%s", params[0]);
		SetPlayerChatBubble(playerid, strings, COLOR_PURPLE, 15.0, 10000);
			
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:rn(playerid, params[])
{
    if(PlayerTied[playerid] == true) return SendErr(playerid, "Ваши руки связаны");
    if(GetPVarInt(playerid, "spy_member") == TEAM_ARMY || GetPVarInt(playerid, "spy_member") == TEAM_POLICIA || GetPVarInt(playerid, "spy_member") == TEAM_POLICIA2 || GetPVarInt(playerid, "spy_member") == TEAM_SWAT)
	{
	    if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(sscanf(params, "ds[128]", params[0], params[1])) return SendInf(playerid, "/r [1 - чат ФСБ, 2 - чат организации] [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[1])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[1]) || CheckString(params[1])) return PlayerGetsChatBan(playerid, params[1]);
		else if(params[0] < 1 && params[0] > 2) return SendErr(playerid, "Вы не выбрали чат");
		if(params[0] == 1)
		{
			new mesid[150];
			format(mesid, sizeof(mesid), "[R] (( %s %s[%d]: %s ))", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[1]);
			SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, mesid);

			new strings[160];
			format(strings, sizeof(strings), "сказал(а) в рацию: {FFFFFF}(( %s ))", params[1]);
			SetPlayerChatBubble(playerid, strings, COLOR_PURPLE, 15.0, 10000);

			SetString(OldMessage[playerid], params[1]);
			TextReset[playerid] = gettime()+3;
		}
		else if(params[0] == 2)
		{
		    new mesid[150];
			format(mesid, sizeof(mesid), "[R] (( %s %s[%d]: %s ))", GetRank(GetPVarInt(playerid, "spy_member"), 5), GetName(playerid), playerid, params[1]);
			SendFMes(GetPVarInt(playerid, "spy_member"), COLOR_LIGHTBLUE, mesid);

			new strings[160];
			format(strings, sizeof(strings), "сказал(а) в рацию: {FFFFFF}(( %s ))", params[1]);
			SetPlayerChatBubble(playerid, strings, COLOR_PURPLE, 15.0, 10000);

			SetString(OldMessage[playerid], params[1]);
			TextReset[playerid] = gettime()+3;
		}
		return 1;
	}
	if(IsACop(playerid) || p_info[playerid][pMember] == TEAM_ARMY || IsAMedic(playerid) || IsAMayor(playerid) || p_info[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
		if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/rn [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[R] (( %s %s[%d]: %s ))", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[0]);
		SendFMes(p_info[playerid][pMember], COLOR_LIGHTBLUE, mesid);
		SendSpyMessage(p_info[playerid][pMember], COLOR_RED, mesid);
		
		new strings[160];
		format(strings, sizeof(strings), "сказал(а) в рацию: {FFFFFF}(( %s ))", params[0]);
		SetPlayerChatBubble(playerid, strings, COLOR_PURPLE, 15.0, 10000);
		
		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:d(playerid, params[])
{
    if(PlayerTied[playerid] == true) return SendErr(playerid, "Ваши руки связаны");
	if(IsACop(playerid) || p_info[playerid][pMember] == TEAM_ARMY || IsAMedic(playerid) || IsAMayor(playerid) || p_info[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
	    if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionObwyak])
		{
			format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionObwyak]);
			SendErr(playerid,STRING_GLOBAL);
			return 1;
		}
		if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(GetPVarInt(playerid,"dep") > gettime()) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/d [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[D] [%s] %s %s[%d]: %s", Fractions[p_info[playerid][pMember]][fractionName], GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[0]);
		SendDMes(0xFF8282FF, mesid);
		
 		new strings[160];
		format(strings, sizeof(strings), "сказал(а) в депортамент: {FFFFFF}%s", params[0]);
		SetPlayerChatBubble(playerid, strings, COLOR_PURPLE, 15.0, 10000);
		
		SetPVarInt(playerid,"dep",gettime() + 5);
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:dn(playerid, params[])
{
    if(PlayerTied[playerid] == true) return SendErr(playerid, "Ваши руки связаны");
	if(IsACop(playerid) || p_info[playerid][pMember] == TEAM_ARMY || IsAMedic(playerid) || IsAMayor(playerid) || p_info[playerid][pMember] == TEAM_AUTOSCHOOL || IsANews(playerid))
	{
	    if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionObwyak])
		{
			format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionObwyak]);
			SendErr(playerid,STRING_GLOBAL);
			return 1;
		}
		if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(GetPVarInt(playerid,"dep") > gettime()) return SendClientMessage(playerid, 0xFF7979AA, "Вы слишком часто пытаетесь отправить сообщение");
		else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/dn [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[D] (( [%s] %s %s[%d]: %s ))", Fractions[p_info[playerid][pMember]][fractionName], GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[0]);
		SendDMes(0xFF8282FF, mesid);
		
		new strings[160];
		format(strings, sizeof(strings), "сказал(а) в депортамент: {FFFFFF}%s", params[0]);
		SetPlayerChatBubble(playerid, strings, COLOR_PURPLE, 15.0, 10000);
		
		SetPVarInt(playerid,"dep",gettime() + 5);
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:members(playerid) return callcmd::find(playerid);
cmd:find(playerid)
{
	if(p_info[playerid][pMember] == 0) return SendErr(playerid, "Вам недоступна данная возможность");
	new query[70];
	mysql_format(dbHandle,query,sizeof(query),"SELECT `member` FROM `accounts` WHERE `member` = '%d'",p_info[playerid][pMember]);
	mysql_function_query(dbHandle, query, true, "LoadAllMembers", "d", playerid);
	return 1;
}

cmd:leaders(playerid)
{
	STRING_GLOBAL = "";
	new countleader = 0;
	foreach(new i: Player)
	{
		if(p_info[i][pLeader] != 0)
		{
			format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"%s{fcfc00}%s:\n{F0F0F0}%s [%d] - [т. %d]\n\n",STRING_GLOBAL,Fractions[p_info[i][pLeader]][fractionName],p_info[i][pName],i,p_info[i][pPhoneNumber]);
			countleader++;
		}
	}
	if(countleader)
	{
		format(STRING_GLOBAL, 1024, "%s    {F0F0F0}В сети всего %i лидер(ов)", STRING_GLOBAL, countleader);
		ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Лидеры организаций в сети",STRING_GLOBAL, "Принять", "");
	}
	else ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Лидеры организаций в сети","{F0F0F0}Нету ни кого из лидеров в сети.", "Хорошо", "");
	return 1;
}

cmd:invite(playerid, params[])
{
	new targetid;
	if(p_info[playerid][pMember] == 0) return 1;
	if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionInvite])
	{
		format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionInvite]);
		SendErr(playerid,STRING_GLOBAL);
		return 1;
	}
	if(sscanf(params, "u", targetid)) return SendInf(playerid, "/invite [id игрока]");
	else if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(playerid == targetid) return SendErr(playerid, "Вы ввели свой ID");
	else if(p_info[targetid][pLeader] > 0) return SendErr(playerid, "Игрок лидер другой организации");
	else if(p_info[targetid][pMember] > 0) return SendErr(playerid, "Игрок находиться в другой организации");
	else if(p_info[targetid][pWarn] > 0) return SendErr(playerid, "У игрока предупреждение");
	else if(IsPlayerInAnyVehicle(targetid)) return SendErr(playerid, "Игрок не должен находиться в транспорте");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, targetid)) return SendErr(playerid, "Игрок слишком далеко");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"{FFFFFF}%s %s предлагает вам присоединиться к {ebec86}%s\n\n{FFFFFF}Вы согласны?",GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), Fractions[p_info[playerid][pMember]][fractionName]);
	ShowPlayerDialogEx(targetid, D_INVITEFRAC, 0, "{ebec86}>> Вступление во фракцию",STRING_GLOBAL, "Да", "Нет");
	SetPVarInt(targetid, "offerfractionid", p_info[playerid][pMember]);
	SetPVarInt(targetid, "offerplayer", playerid);
	SetPVarInt(playerid, "actplayerid", targetid);
	return 1;
}

cmd:changeskin(playerid, params[])
{
	new targetid;
	if(sscanf(params, "u", targetid)) return SendInf(playerid, "/changeskin [id игрока]");
	else if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[targetid][pMember] == 0) return SendErr(playerid, "Игрок не находиться в организации");
	else if(p_info[targetid][pMember] != p_info[playerid][pMember]) return SendErr(playerid, "Игрок находиться в другой организации");
	else if(GetPlayerDistanceToPlayer(playerid,targetid) > 5.0 || GetPlayerVirtualWorld(playerid) != GetPlayerVirtualWorld(targetid)) return SendErr(playerid, "Вы далеко друг от друга");
	
	if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionInvite])
	{
		format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionInvite]);
		SendErr(playerid,STRING_GLOBAL);
		return 1;
	}
	
	SetPVarInt(playerid, "actplayerid", targetid);
	new fractionid = p_info[playerid][pMember];
	new mes[256];
	for(new i; i < 8; i++)
	{
		new skinid = Fraction_Skin[fractionid][i];
		if(!skinid) break;
		if(!i) format(mes, sizeof(mes), "Одежда №%d (id %d)", i+1, skinid);
		else format(mes, sizeof(mes), "%s\nОдежда №%d (id %d)", mes, i+1, skinid);
	}
	ShowPlayerDialogEx(playerid, D_FRACMENU+8, 2, "{ebec86}>> Выбор скина", mes, "Принять", "");
	return 1;
}

cmd:leave(playerid) return callcmd::exitf(playerid);
cmd:exitf(playerid)
{
	if(p_info[playerid][pMember] == 0) return SendErr(playerid, "Вы нигде не состоите");
	if(p_info[playerid][pLeader] > 0) return SendErr(playerid, "Вы лидер, Вы не сможете уволиться");
    STRING_GLOBAL[0] = EOS;
	if(IsAMafia(playerid))
	{
    	format(STRING_GLOBAL, 256, "- Ваша организация: {f0e86b}%s{FFFFFF}\n1. Уволиться за 300.000 рублей\n2. Уволиться (доступно до 3 ранга)\n3. Уволиться с занесением в ЧС", Fractions[p_info[playerid][pMember]][fractionName]);
	}
	else
	{
	    format(STRING_GLOBAL, 256, "- Ваша организация: {f0e86b}%s{FFFFFF}\n1. Уволиться за 300.000 рублей\n2. Уволиться (доступно до 3 ранга)", Fractions[p_info[playerid][pMember]][fractionName]);
	}
	ShowPlayerDialogEx(playerid, D_LEAVE, DIALOG_STYLE_LIST, "{ebec86}>> Выбор увольнения", STRING_GLOBAL, "Выбрать", "Отмена");
	return 1;
}

cmd:quitjob(playerid, params[])
{
	if(!p_info[playerid][pVip]) return SendErr(playerid, "Вы не имеете VIP статус");
	else if(!p_info[playerid][pJob]) return SendErr(playerid, "Вы нигде не работаете");
	p_info[playerid][pJob] = 0;
	SendClientMessage(playerid, COLOR_BLUE, "Вы уволились с работы");
	MysqlUpdatePlayerInt(playerid, "job", p_info[playerid][pJob]);
	return 1;
}
cmd:report(playerid)
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	ReportDialog(playerid);
	return 1;
}
cmd:ask(playerid)
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	ShowPlayerDialogEx(playerid, 13213, DIALOG_STYLE_INPUT, "{ebec86}>> Задать вопрос", "\
	{ff0033}Запрещено:\n{FFFFFF}- Использовать нецензурные выражения\n\
	- Оскорблять, унижать других игроков\n- Писать вопросы и жалобы не по теме\n\
	- Выпрашивать что-либо, нарушающее РП процесс\n\n\
	Все доступные места можно посмотреть '/gps'\n\
	Все доступные команды можно посмотреть '/cmd'\n\n\
	Введите чётко поставленный вопрос:", "Отправить","Отмена");
	return 1;
}

cmd:uninvite(playerid, params[])
{
	new targetid, reason[32];
	if(p_info[playerid][pMember] == 0) return 1;
	if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionUnInvite])
	{
		format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionUnInvite]);
		SendErr(playerid,STRING_GLOBAL);
		return 1;
	}
	if(sscanf(params, "us[32]", targetid, reason)) return SendInf(playerid, "/uninvite [id игрока] [причина]");
	else if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[targetid][pMember] == 0) return SendErr(playerid, "Игрок не находиться в организации!");
	else if(p_info[targetid][pLeader] > 0) return SendErr(playerid, "Игрок лидер другой организации!");
	else if(p_info[targetid][pMember] != p_info[playerid][pMember]) return SendErr(playerid, "Игрок находиться в другой организации!");
	else if(playerid == targetid) return SendErr(playerid, "Самого себя нельзя уволить!");
	SCMF(playerid, COLOR_BLUE, "Вы уволили %s из организации. Причина: %s",GetName(targetid),reason);
	SCMF(targetid, COLOR_BLUE, "%s %s уволил(а) Вас из организации. Причина: %s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]),GetName(playerid),reason);

    format(STRING_GLOBAL,128,"%s уволил %s. Причина: %s", p_info[playerid][pName], GetName(targetid), reason);
	WriteLogs(p_info[playerid][pMember], TYPE_LOG_UVAL, STRING_GLOBAL);

	LeaveFractionPlayer(targetid);
	return 1;
}

cmd:uval(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 5) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new targetid, reason[32];
	if(sscanf(params, "us[32]", targetid, reason)) return SendInf(playerid, "/uval [id игрока] [причина]");
	else if(playerid == targetid) return SendErr(playerid, "Вы ввели свой ID");
	else if(!IsPlayerConnected(targetid)) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[targetid] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[targetid][pMember] == 0) return SendErr(playerid, "Игрок не находиться в организации");
	else if(p_info[targetid][pLeader] > 0) return SendErr(playerid, "Игрок лидер другой организации");
	SCMF(playerid, COLOR_BLUE, "Вы уволили %s из организации. Причина: %s",GetName(targetid),reason);
	SCMF(targetid, COLOR_BLUE, "Администратор %s уволил(а) Вас из организации. Причина: %s",GetName(playerid),reason);
	
	format(STRING_GLOBAL,128,"[{ebec86}A{828282}] %s уволил %s. Причина: %s", p_info[playerid][pName], GetName(targetid), reason);
	WriteLogs(p_info[targetid][pMember], TYPE_LOG_UVAL, STRING_GLOBAL);
	
	LeaveFractionPlayer(targetid);
	return 1;
}

CMD:giverank(playerid, params[])
{
	if(!p_info[playerid][pMember]) return 1;
	if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionGiverank] && p_info[playerid][pLeader] == 0)
	{
		format(STRING_GLOBAL,128,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionGiverank]);
		SendErr(playerid,STRING_GLOBAL);
		return 1;
	}
	if(sscanf(params,"i",params[0])) return SendInf(playerid, "/giverank [id]");
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(playerid == params[0]) return SendErr(playerid, "Вы ввели свой ID");
	if(p_info[params[0]][pLeader] >= 1 && p_info[playerid][pLeader] == 0) return SendErr(playerid, "Нельзя применять на лидере");
	if(p_info[playerid][pMember] != p_info[params[0]][pMember]) return SendErr(playerid, "Данный игрок не в вашей фракции");
	if(p_info[params[0]][pRank] >= p_info[playerid][pRank] && p_info[playerid][pLeader] == 0) return SendErr(playerid, "Игрок выше вас рангом, или вашего ранга");

	STRING_GLOBAL = "";
	if(p_info[playerid][pLeader] != 0)
	{
		for(new i = 1; i <= FractionRank[p_info[playerid][pMember]-1]-1; i++)
		{
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%s%s (%i)\n",STRING_GLOBAL,(p_info[params[0]][pRank] == i) ? ("{ebec86}") : (""),GetRank(p_info[playerid][pMember],i),i);
			ShowPlayerDialogEx(playerid,dRank,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
		return 1;
	}
	else if(p_info[playerid][pRank] == FractionRank[p_info[playerid][pMember]-1]-(FractionRank[p_info[playerid][pMember]-1]-p_info[playerid][pRank]))
	{
		for(new i = 1; i <= FractionRank[p_info[playerid][pMember]-1]-(FractionRank[p_info[playerid][pMember]-1]-p_info[playerid][pRank]+1); i++)
		{
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%s%s (%i)\n",STRING_GLOBAL,(p_info[params[0]][pRank] == i) ? ("{ebec86}") : (""),GetRank(p_info[playerid][pMember],i),i);
			ShowPlayerDialogEx(playerid,dRank,DIALOG_STYLE_LIST, "{ebec86}>> Выберите ранг",STRING_GLOBAL,"Выбрать","Закрыть");
		}
		SetPVarInt(playerid,"id_giverank",params[0]);
		return 1;
	}
	return 1;
}

cmd:spawnchange(playerid) return pc_cmd_setspawn(playerid);
cmd:setspawn(playerid)
{
	STRING_GLOBAL = "";
    new spewn[50];
	switch(p_info[playerid][pSpawnChange])
	{
	    case 0: spewn = "{BE2D2D}Вокзал{FFFFFF}";
 		case 1: spewn = "{f0e86b}Дом{FFFFFF}";
 		case 2: spewn = "{f0e86b}База организации{FFFFFF}";
 		case 3: spewn = "{f0e86b}Квартира{FFFFFF}";
 		case 4: spewn = "{f0e86b}Дом семьи{FFFFFF}";
 		case 5: spewn = "{f0e86b}Арендуемый дом{FFFFFF}";
	}
	format(STRING_GLOBAL, 512, "- Текущее место появления: %s\n1. Место появления на вокзале\n2. Место появления в доме\n3. Место появления на базе организации\n4. Место появления в квартире\n5. Место появления в доме семьи\n6. Место появления в арендуемом доме", spewn);
	ShowPlayerDialogEx(playerid, D_SETSPAWN, DIALOG_STYLE_LIST, "{ebec86}>> Изменение места появления в игре", STRING_GLOBAL, "Выбрать", "Отмена");
	return 1;
}

cmd:salelic(playerid, params[])
{
	if(p_info[playerid][pMember] != TEAM_AUTOSCHOOL) return SendErr(playerid, "Вам недоступна данная возможность");
	else if(p_info[playerid][pRank] < 3) return SendErr(playerid, "Ваш ранг недостаточно высок для этого");
	else if(sscanf(params, "ud", params[0], params[1])) return SendInf(playerid, "/salelic [id игрока] [id лицензии (1-водительские,2-водные,3-воздушные,4-оружие,5-бизнес)]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(10.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	new bool:dostup;
	switch(params[1])
	{
	case 1:	if(p_info[params[0]][pLic][0]) dostup = true;
	case 2: if(p_info[params[0]][pLic][1]) dostup = true;
	case 3: if(p_info[params[0]][pLic][2]) dostup = true;
	case 4: if(p_info[params[0]][pLic][3]) dostup = true;
	case 5:
		{
			new i = GetPVarInt(params[0], "PlayerBizz");
			if(BizzInfo[i][bLic]) dostup = true;
		}
	}
	if(params[1] == 5 && !GetPlayerBizz(params[0])) return SendErr(playerid, "Игрок не имеет бизнеса!");
	if(dostup == true) return SendErr(playerid, "У игрока есть данная лицензия");
	new type[24], price;
	switch(params[1])
	{
		case 1: type = "водительские права", price = 1000;
		case 2: type = "лицензию на судоходство", price = 3000;
		case 3: type = "лицензию на полеты", price = 10000;
		case 4: type = "лицензию на оружие", price = 30000;
		case 5: type = "лицензию на бизнес", price = 50000;
	}
	new string[144];
	format(string, sizeof(string), "Вы предложили %s купить %s. Цена: %iр", GetName(params[0]), type, price);
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "%s предложил Вам купить %s. Цена: %iр", GetName(playerid), type, price);
	SendClientMessage(params[0], COLOR_BLUE, string);
	SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
	SetPVarInt(params[0], "sellexamlic", 1);
	SetPVarInt(params[0], "changelic", params[1]);
	SetPVarInt(params[0], "idselllic", playerid);
	return 1;
}

cmd:agl(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/agivelic [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	ShowPlayerDialogEx(playerid, D_LIC+2, 2, "{ebec86}>> Панель", "\
	Выдать водительские права\n\
	Выдать лицензию на судоходство\n\
	Выдать лицензию на полеты\n\
	Выдать лицензию на оружие\n\
	Выдать лицезнию на бизнес\n\
	Выдать комплект лицензий", "Принять", "Отмена");
	SetPVarInt(playerid, "LicName", params[0]);
	return 1;
}

cmd:takegun(playerid, params[])
{
	if((p_info[playerid][pMember] == TEAM_POLICIA || p_info[playerid][pMember] == TEAM_POLICIA2 || p_info[playerid][pMember] == TEAM_SWAT || p_info[playerid][pMember] == TEAM_FBI) && p_info[playerid][pRank] >= 6)
	{
		if(sscanf(params, "u", params[0])) return SendInf(playerid, "/take [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
		AC_ResetPlayerWeapons(params[0]);
		SCMF(playerid, COLOR_LIME, "Вы забрали оружие у %s",GetName(params[0]));
		SCMF(params[0], COLOR_LIME, "%s забрал у вас оружие",GetName(playerid));
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:take(playerid, params[])
{
	if((p_info[playerid][pMember] == TEAM_POLICIA || p_info[playerid][pMember] == TEAM_POLICIA2 || p_info[playerid][pMember] == TEAM_SWAT || p_info[playerid][pMember] == TEAM_FBI) && p_info[playerid][pRank] >= 8)
	{
		if(sscanf(params, "u", params[0])) return SendInf(playerid, "/take [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
		ShowPlayerDialogEx(playerid, D_LIC+1, 2, "{ebec86}>> Панель", "Отобрать водительские права\nОтобрать лицензию на судоходство\nОтобрать лицензию на полеты\nОтобрать лицензию на оружие", "Принять", "Отмена");
		SetPVarInt(playerid, "LicName", params[0]);
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:atake(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 5) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/atake [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	ShowPlayerDialogEx(playerid, D_LIC+3, 2, "{ebec86}>> Панель", "Отобрать водительские права\nОтобрать лицензию на судоходство\nОтобрать лицензию на полеты\nОтобрать лицензию на оружие\nОтобрать паспорт\nОтобрать мед. карту", "Принять", "Отмена");
	SetPVarInt(playerid, "LicName", params[0]);
	return 1;
}

cmd:inv(playerid)
{
	if(p_info[playerid][pJail] > 0) return SendErr(playerid, "В тюрьме инвентарь недоступен");
	new num,string[1800];
	PlayerVesItem[playerid] = 0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s] == 0)continue;
		if(PlayerItem1[playerid][s] > 0)
		{
			new id = PlayerItem1[playerid][s];
			PlayerUseList[playerid][num] = s;
			PlayerVesItem[playerid] += PlayerItem2[playerid][s] * Item[id][iGG];
			num++;
			if(Item[id][iStek]==1){format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s ({ebec86}%i{FFFFFF} шт)\n",string,PlayerItem2[playerid][s]*Item[id][iGG],Item[id][iName],PlayerItem2[playerid][s]);}
			else
			{
				switch(PlayerItem1[playerid][s])
				{
				case 127:format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s (номер: {ebec86}%s{FFFFFF})\n",string,Item[id][iGG],Item[id][iName],PlayerItem3[playerid][s]);
				default:format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s\n",string,Item[id][iGG],Item[id][iName]);
				}
			}
		}
	}
	if(num>0)
	{
		new str[500];
		format(str,sizeof(str),"{ebec86}>> Инвентарь. [{FFFFFF}%i{ebec86}г / {FFFFFF}%i{ebec86}г]", PlayerVesItem[playerid], p_info[playerid][pSprunk]);
		ShowPlayerDialogEx(playerid, D_INVENT+2, DIALOG_STYLE_LIST, str, string, "Выбрать", "Выйти");
	}
	else SendErr(playerid, "Инвентарь пустой");
	return 1;
}

cmd:giveinv(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 9) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	if(sscanf(params, "iii",params[0],params[1],params[2])) return SendInf(playerid, "/giveinv [playerid] [Item] [kolv]");
	new newslot,kolv;
	if(Item[params[1]][iStek]==0){kolv=1;}
	else kolv=params[2];
	if(CheckMaxVes(params[0],params[1],kolv,newslot)==1)return SendErr(playerid, "У игрока нет свободного места!");
	PlayerItem1[params[0]][newslot]=params[1];
	PlayerItem2[params[0]][newslot]+=kolv;
	SaveItem(params[0],newslot);
	new string[200];
	format(string, sizeof(string), "%s получил предмет %s в количестве %i", GetName(params[0]),Item[params[1]][iName],kolv);
	SendClientMessage(params[0], COLOR_GREY, string);
	return 1;
}

cmd:checkinv(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 7) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	if(sscanf(params, "i",params[0])) return SendInf(playerid, "/checkinv [playerid]");
	new num,string[900];
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[params[0]][s]==0)continue;
		if(PlayerItem1[params[0]][s]>0)
		{
			new id=PlayerItem1[params[0]][s];
			PlayerUseList[playerid][num]=s;
			num++;
			if(Item[id][iStek]==1){format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s ({ebec86}%i{FFFFFF} шт)\n",string,PlayerItem2[params[0]][s]*Item[id][iGG],Item[id][iName],PlayerItem2[params[0]][s]);}
			else
			{
				switch(PlayerItem1[params[0]][s])
				{
				case 126:format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s (номер: {ebec86}%s{FFFFFF})\n",string,Item[id][iGG],Item[id][iName],PlayerItem3[params[0]][s]);
				default:format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s\n",string,Item[id][iGG],Item[id][iName]);
				}
			}
		}
	}
	if(num>0)
	{
		SetPVarInt(playerid,"IDplayaInv",params[0]);
		new str[62];
		format(str,sizeof(str),"{ebec86}>> Инвентарь %s",GetName(params[0]));
		ShowPlayerDialogEx(playerid, D_INVENT+10, DIALOG_STYLE_LIST, str, string, "Выбрать", "Выйти");
	}
	else SendErr(playerid, "Инвентарь пустой");
	return 1;
}

cmd:takeinv(playerid, params[])
{
	if((p_info[playerid][pMember] == TEAM_POLICIA || p_info[playerid][pMember] == TEAM_POLICIA2 || p_info[playerid][pMember] == TEAM_SWAT || p_info[playerid][pMember] == TEAM_FBI) && p_info[playerid][pRank] >= 8)
	{
		if(sscanf(params, "i",params[0])) return SendInf(playerid, "/takeinv [playerid]");
		new num,string[900];
		for(new s = 16; s > 0; s --)
		{
			if(PlayerItem1[params[0]][s]==0)continue;
			if(PlayerItem1[params[0]][s]>0)
			{
				new id=PlayerItem1[params[0]][s];
				if(id > 0 && 39 < id || id == 44 || id == 69 || id == 71 || id == 72)
				{
					PlayerUseList[playerid][num]=s;
					num++;
					if(Item[id][iStek]==1){format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s ({ebec86}%i{FFFFFF} шт)\n",string,PlayerItem2[params[0]][s]*Item[id][iGG],Item[id][iName],PlayerItem2[params[0]][s]);}
					else
					{
						switch(PlayerItem1[params[0]][s])
						{
							case 126:format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s (номер: {ebec86}%s{FFFFFF})\n",string,Item[id][iGG],Item[id][iName],PlayerItem3[params[0]][s]);
							default:format(string,sizeof(string),"%s[{ebec86}%i{FFFFFF} г] {FFFFFF}%s\n",string,Item[id][iGG],Item[id][iName]);
						}
					}
				}
			}
		}
		if(num>0)
		{
			SetPVarInt(playerid,"IDplayaInv",params[0]);
			new str[62];
			format(str,sizeof(str),"{ebec86}>> Инвентарь %s",GetName(params[0]));
			ShowPlayerDialogEx(playerid, D_INVENT+10, DIALOG_STYLE_LIST, str, string, "Выбрать", "Выйти");
		}
		else SendErr(playerid, "Инвентарь пустой");
	}
	return 1;
}

cmd:unammo(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid))return SendErr(playerid, "Вы не можете разрядить оружие в машине");
	AC_ResetPlayerWeapons(playerid);
	SendErr(playerid, "Вы разрядили всё оружие");
 	MeAction(playerid, "разрядил(а) оружие");
	return 1;
}

CMD:family(playerid)
{
	STRING_GLOBAL = "";
	if(p_info[playerid][pFamily] == 0) return SendErr(playerid, "Вы не состоите не в какой семье");
	new famonline = 0;
    foreach(new i: Player)
	{
		if(p_info[playerid][pFamily] == p_info[i][pFamily]) famonline++;
	}
	if(family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ] == 0)
	{
	    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {FF6347}Нет{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", famonline);
		ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
	}
	else
	{
	    format(STRING_GLOBAL, 256, "1. Информация о семье\n2. Покинуть семью\n3. Изменить цвет рации семьи\n4. Смена названия семьи\n5. Дом семьи: {f0e86b}№%d{FFFFFF}\n6. Общак семьи\n7. Автопарк семьи\n8. Весь состав семьи\n9. Члены семьи онлайн: {ebec86}%d{FFFFFF} человек(а)", family_info [ p_info[playerid][pFamily] ] [ f_spawn_virt ], famonline);
		ShowPlayerDialogEx(playerid, 702, DIALOG_STYLE_LIST, "{ebec86}>> Меню семьи", STRING_GLOBAL, "Выбор", "Выход");
	}
	return 1;
}
CMD:finvite(playerid, params[])
{
	new String[128];
	if(p_info[playerid][pFamilySozd] == 0 && p_info[playerid][pFamilyZam] == 0) return SendErr(playerid, "Принимать в семью может только создатель и заместитель семьи");
	if(sscanf(params, "d", params [0])) return SendInf(playerid, "/finvite [id]");
	if(!IsPlayerConnected(params [0])) return SendErr(playerid, "Указан не верный ID игрока");
	if(GetDistanceBetweenPlayers(playerid, params[0]) > 5.0) return SendErr(playerid, "Этот игрок находится далеко от Вас");
	if(p_info[params[0]][pFamily] > 0) return SendErr(playerid, "Этот игрок уже состоит в семье");
	new text_string [46 + MAX_PLAYER_NAME + 32];
	format(text_string,sizeof(text_string),"Вы пригласили %s присоединиться к семье %s",GetName(params[0]),family_info [p_info[playerid][pFamily]] [f_name]);
	SendClientMessage(playerid,-1,text_string);
	//
	format(String,sizeof(String),"{ffffff}%s приглашает вас присоединиться к семье %s.\nВы согласны присоединиться?",GetName(playerid),family_info[p_info[playerid][pFamily]] [f_name]);
	ShowPlayerDialogEx(params[0],707,DIALOG_STYLE_MSGBOX, "{ebec86}>> Приглашение в семью",String,"Да","Нет");
	//
	SetPVarInt(params [0],"family_id",p_info[playerid][pFamily]);
	SetPVarInt(params [0],"family_playerid",playerid);
	return 1;
}
CMD:funinvite(playerid, params[])
{
	new String[128], YCMDstr[64];
	if(sscanf(params, "ds[128]",params[0],String)) return SendInf(playerid, "/funinvite [id] [причина]");
	{
		if(p_info[playerid][pFamilySozd] == 0 && p_info[playerid][pFamilyZam] == 0) return SendErr(playerid, "Выгонять из семьи может только заместитель и создатель");
		if(params[0] == playerid) return SendErr(playerid, "Вы не можете выгнать самого себя");
		if(p_info[params[0]][pFamilySozd] > 0) return SendErr(playerid, "Вы не можете уволить создателя семьи");
		if(p_info[playerid][pFamily] != p_info[params[0]][pFamily]) return SendErr(playerid, "Данный игрок не состоит в Вашей семье");
		format(YCMDstr, sizeof(YCMDstr), "%s выгнал Вас из семьи. Причина: %s",GetName(playerid), String);
		SendClientMessage(params[0], 0xFFD39BFF, YCMDstr);
		format(YCMDstr, sizeof(YCMDstr), "Вы выгнали игрока %s из семьи. Причина %s",GetName(params[0]), String);
		SendClientMessage(playerid, 0xFFD39BFF, YCMDstr);
		family_info [ p_info[params[0]][pFamily] ] [ f_members_amount ] -= 1;
		p_info[params[0]][pFamily] = 0;
		p_info[params[0]][pFamilyZam] = 0;
		MysqlUpdatePlayerInt(params[0], "family", p_info[params[0]][pFamily]);
		MysqlUpdatePlayerInt(params[0], "familyzam", p_info[params[0]][pFamilyZam]);
		format(String,sizeof(String),"{%s}[%s]{FFFFFF} %s выгнал игрока %s из семьи. Причина: %s",family_chat_color [family_info[p_info[playerid][pFamily]] [f_chat_color ]],family_info [p_info[playerid][pFamily]] [f_name],GetName(playerid),GetName(params[0]),String);
		family_message(p_info[playerid][pFamily],-1, String);
		//
		format ( String, sizeof String, "UPDATE "T_FAMILY" SET `fam_members_amount` = '%d' WHERE `fam_id` = '%d' LIMIT 1",family_info [p_info[playerid][pFamily]] [f_members_amount], p_info[playerid][pFamily]);
		mysql_function_query ( dbHandle, String, false, "", "" ) ;
		return 1;
	}
}
CMD:k(playerid, params[])
{
	new String[128];
	if(p_info[playerid][pFamily] == 0) return SendErr(playerid, "Вы не состоите в семье");
	if(sscanf(params, "s[128]", params[0]))return SendInf(playerid, "/k [текст]");
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
	format(String, sizeof(String), "{%s}[%s]{FFFFFF} %s[%d]: %s",family_chat_color [family_info [p_info[playerid][pFamily]] [f_chat_color]],family_info [p_info[playerid][pFamily]] [f_name],GetName(playerid),playerid,params);
	family_message(p_info[playerid][pFamily],-1, String);
	SetPlayerChatBubble(playerid, "Отправляет сообщение в рацию",COLOR_PURPLE,30.0,10000);
	return 1;
}
cmd:news(playerid, params[])
{
	if(!IsANews(playerid) && p_info[playerid][pAdmin] < 1) return SendErr(playerid, "Вам недоступна данная возможность");
	if(p_info[playerid][pAdmin] > 0) return NewsPanel(playerid);
	if(IsPlayerInAnyVehicle(playerid))
	{
		new full = 0;
		for(new i = TOTALVEH; i > 0; i --)
		{
			if(p_info[playerid][pMember] == TEAM_SMI)
			{
				if(VehInfo[i][vVehicle] == GetPlayerVehicleID(playerid) && (i >= 96 && i <= 102))
				{
					NewsPanel(playerid);
					full++;
					break;
				}
			}
		}
		if(full == 0) SendErr(playerid, "Вы должны находиться в офисе или служебном транспорте");
	}
	else
	{
		if(IsPlayerInRangeOfPoint(playerid, 100.0, -96.1380,453.6070,3013.1499)) NewsPanel(playerid);
		else SendErr(playerid, "Вы должны находиться в офисе или служебном транспорте");
	}
	return 1;
}

cmd:ad(playerid, params[])
{
	new string[128];
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==47){ok=s;break;}
	}
	if(ok==0){return SendErr(playerid, "У вас нет телефона!");}
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
	else if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для подачи объявления нужно отыграть 3 часа");
	else if(p_info[playerid][pPhoneNumber] <= 1) return SendErr(playerid, "У вас нет SIM-карты");
	else if(TOTALADVERT[0] >= 15) return SendErr(playerid, "Линия заполнена, обратитесь позже");
	else if(AdvertTime_ > gettime()) return SendErr(playerid, "Посылать объявление можно раз в минуту");
	else if(sscanf(params, "s[128]", params[0])) return SendInf(playerid, "/ad [текст]");
	else if(GetMoney(playerid) < strlen(params[0])*AdvertPrice[0]) return SendErr(playerid, "У вас не хватает денег");

	TOTALADVERT[0]++;
	strmid(AdvertInfo[TOTALADVERT[0]][0][aText],params[0],0,strlen(params[0]),128);
	strmid(AdvertInfo[TOTALADVERT[0]][0][aName],GetName(playerid),0,strlen(GetName(playerid)),MAX_PLAYER_NAME);
	AdvertInfo[TOTALADVERT[0]][0][aPhone] = p_info[playerid][pPhoneNumber];
	GiveMoney(playerid, -strlen(params[0]) * AdvertPrice[0], "/ad");

	FracBank[8] += strlen(params[0]) * AdvertPrice[0];
	MysqlUpdateOtherInt("lsnbank", FracBank[8]);
	
	new smi = 0;
	foreach(new i: Player)
	{
	    if(p_info[i][pMember] == TEAM_SMI) smi++;
	}
	SendClientMessage(playerid, COLOR_LIGHTRED, "Ваше объявление было отправлено на обработку");
	if(smi == 0) SendAdminMessage(COLOR_LIGHTBLUE, "[ОБЪЯВЛЕНИЕ]: Пришло новое объявление для редактирования. (Отредактировать: /news)");
	else SendFMes(TEAM_SMI, COLOR_LIGHTBLUE, "[ОБЪЯВЛЕНИЕ]: Пришло новое объявление для редактирования. (Отредактировать: /news)");
	format(string, sizeof(string), "~r~Цена %d руб~n~~w~Содержащиеся сообщение: %d символа", strlen(params[0]) * AdvertPrice[0], strlen(params[0]));
	GameTextForPlayer(playerid, string, 5000, 6);
	AdvertTime_ = gettime() + 60;
	return 1;
}

cmd:bpanel(playerid)
{
	if(GetPlayerBizz(playerid) == 0) return SendErr(playerid, "Вы не владеете бизнесом");
 	ShowPlayerDialogEx(playerid, D_HEAL+10, 2, "{66CC00}>> Панель управления бизнесом", "1. Открыть бизнес\n2. Установить цену за товар\n3. Установить цену за вход\n4. Продать бизнес\n5. Заказать продукты\n6. Улучшения\n7. Изменить название\n8. Доходы", "Принять", "Отмена");
	return 1;
}

cmd:setbizprod(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 8) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "i", params[0])) return SendInf(playerid, "/setbizprod [количество продуктов]");
	for(new idx = TOTALBIZZ; idx > 0; idx --)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			BizzInfo[idx][bProduct] = params[0];
			MysqlUpdateBizzInt(idx, "product", params[0]);
			SCMF(playerid, COLOR_WHITE, "Вы заменили бизнесу %s продуктов на %d",BizzInfo[idx][bName], BizzInfo[idx][bProduct]);
		}
	}
	return 1;
}
// сперма
cmd:sperm(playerid, params[])
{   if (p_info[playerid][pLevel] < 2) return SendClientMessage(playerid,-1, "[INFO] Команда доступна со 2 LVL");
    // координаты сдачи
    if(!IsPlayerInRangeOfPoint(playerid,10.0,2030.2604, -1462.2567, 14.7300) | !IsPlayerInRangeOfPoint(playerid,10.0,2030.2604, -1462.2567, 14.7300) | !IsPlayerInRangeOfPoint(playerid,10.0,2030.2604, -1462.2567, 14.7300) | !IsPlayerInRangeOfPoint(playerid,10.0,2030.2604, -1462.2567, 14.7300)) return SendClientMessage(playerid,-1,"Вы не на точке сдачи спермы!");
	//
	if(GetPVarInt(playerid,"Sperm") > 0) return SendClientMessage(playerid,-1,"Невозможно использовать сейчас эту команду!"); 
    SetPlayerAttachedObject(playerid, 1, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012785 );  
    ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.1,1,0,0,1,0);  
    SetTimerEx("sperma", 20000, false, "d", playerid); 
    SetPVarInt(playerid,"Sperm",1); 
    return 1; 
}
//
cmd:buybiz(playerid, params[])
{
	if(GetPlayerBizz(playerid) == 1) return SendErr(playerid, "Вы уже владеете бизнесом!");
	new full, full_;
	for(new idx = TOTALBIZZ; idx > 0; idx --)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz]))
		{
			full++;
			if(!strcmp(BizzInfo[idx][bOwner],"None",true))
			{
				full_++;
				if(GetMoney(playerid) < BizzInfo[idx][bPrice]) return SendErr(playerid, "У вас не хватает денег");
				else
				{
					GiveMoney(playerid, -BizzInfo[idx][bPrice], "Покупка бизнеса");
					BizzInfo[idx][bProduct] = 100;
					BizzInfo[idx][bMoney] = 1000;
					BizzInfo[idx][bEnter] = 0;
					BizzInfo[idx][bTill] = 50;
					SCMF(playerid, COLOR_GREEN, "Вы купили бизнес %s за %iр. У вас осталось: %iр", BizzInfo[idx][bName], BizzInfo[idx][bPrice], p_info[playerid][pCash]);
					SCMF(playerid, COLOR_YELLOW, "Аренда бизнеса оплачена на 1 час (%iр), не забывайте регулярно следить за его балансом.", BizzInfo[idx][bMoney]);
					SendClientMessage(playerid, COLOR_YELLOW, "Приобретите лицензию на ваш бизнес, если в течении 12 часов этого не будет, он будет продан государству!");
					strmid(BizzInfo[idx][bOwner],GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET owner = '%s', product = %i, money = %i WHERE id = '%d' LIMIT 1", BizzInfo[idx][bOwner], BizzInfo[idx][bProduct],BizzInfo[idx][bMoney], idx);
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					UpdateBizz(idx);
				}
			}
			else full_++;
		}
	}
	if(full == 0) return SendErr(playerid, "Вы должны находится рядом с бизнесом!");
	if(full_ == 0) return SendErr(playerid, "Бизнес уже имеет владельца!");
	return 1;
}

cmd:sellmybiz(playerid, params[])
{
	if(p_info[playerid][pCredit] != 0) return SendErr(playerid, "Во время кредита Вам запрещено продавать имущество");
	
	if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи бизнеса нужно отыграть 3 часа");

	if(GetPlayerBizz(playerid) == 0)
	return SendErr(playerid, "Вы не владеете бизнесом");

	else if(sscanf(params, "ii", params[0],params[1]))
	return SendInf(playerid, "/sellmybiz [ ID ] [ Цена ]");

	if(GetPlayerBizz(params[0]) == 1)
	return SendErr(playerid, "У игрока уже есть бизнес");
	if(params[1] < 1)
	return SendErr(playerid, "Не верная цена");
	if(params[1] > 99999999)
	return SendErr(playerid, "Не верная цена");
	
	new i = GetPVarInt(playerid, "PlayerBizz");
	SetPVarInt(params[0], "sellbiz",1);
 	SetPVarInt(params[0], "bizzid", i);
	SetPVarInt(params[0], "price_bizz", params[1]);
	SetPVarInt(params[0], "idsellplayerbiz",playerid);

	new fmt_str[144];

	format(fmt_str, sizeof fmt_str, "Игрок %s хочет продать Вам свой бизнес №%d (%s) за %d рублей", GetName(playerid), GetPVarInt(playerid, "PlayerBizz"), BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bName], params[1]);
	SendClientMessage(params[0], 0x3399FFFF, fmt_str);

	format(fmt_str, sizeof fmt_str, "Вы предложили %s купить свой бизнес №%d (%s) за %d рублей", GetName(params[0]), GetPVarInt(playerid, "PlayerBizz"), BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bName], params[1]);
	SendClientMessage(playerid, 0x3399FFFF, fmt_str);

	SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

	return 1;
}

cmd:play(playerid)
{
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==40){ok=s;break;}
	}
	if(ok==0){return SendErr(playerid, "У вас нет плеера MP3");}
	ShowPlayerDialogEx(playerid, 9345, DIALOG_STYLE_LIST, "{ebec86}>> Выберите радиостанцию", "1. Радио Шансон\n2. Наше Радио\n3. Радио Рекорд\n4. Зайцев.FM (Pop)\n5. Зайцев.FM (RnB)\n6. Выключить радио", "Выбор", "Выход");
	return 1;
}

CMD:rpanel(playerid)
{
	if(GetPlayerRooms(playerid) == 0) return SendErr(playerid, "У вас нету квартиры");
	new i = GetPVarInt(playerid, "PlayerRooms");
	if(strcmp(p_info[playerid][pName],RoomsInfo[i][rOwner],true) == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid, 15.0, RoomsInfo[i][rExitX], RoomsInfo[i][rExitY], RoomsInfo[i][rExitZ]))
		{
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "\
			{0099FF}1. {FFFFFF}Закрыть/Открыть\n\
			{0099FF}2. {FFFFFF}Состояние счета: {f0e86b}%i{FFFFFF} рублей\n\
			{0099FF}3. {FFFFFF}Продать", RoomsInfo[i][rOplata]);
			ShowPlayerDialogEx(playerid, D_PODEZD+4, 2, "{ebec86}>> Панель управления Квартирой", STRING_GLOBAL, "Принять", "Отмена");
		}
		else SendErr(playerid, "Вы не в квартире");
	}
	return 1;
}

cmd:home(playerid) return callcmd::hmenu(playerid);
cmd:hmenu(playerid)
{
	if(GetPlayerHouse(playerid) == 0) return SendErr(playerid, "У вас нет дома");
	new i = GetPVarInt(playerid, "PlayerHouse");
	if(strcmp(GetName(playerid), HouseInfo[i][hOwner], true) == 0)
	{
		if((IsPlayerInRangeOfPoint(playerid,60.0,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]) || IsPlayerInRangeOfPoint(playerid,3.0,2934.4077,2967.4949,3176.5769)) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hVirtual])
		{
			new string[400];
			format(string, sizeof(string), "{ffffff}\
			{0099FF}1. {FFFFFF}Открыть / закрыть дом\n\
			{0099FF}2. {FFFFFF}Оплачен на: {f0e86b}%d / 10 дней\n{FFFFFF}\
			{0099FF}3. {FFFFFF}Аптечек в доме: {f0e86b}%i шт\n{FFFFFF}\
			{0099FF}4. {FFFFFF}Улучшения дома\n\
			{0099FF}5. {FFFFFF}Продать дом\n\
			{0099FF}6. {FFFFFF}Аренда [%s{FFFFFF}]\n\
			{0099FF}7. {FFFFFF}Выселить арендаторов", HouseInfo[i][hOplata], HouseInfo[i][hHeal],
			(HouseInfo[i][gRentStatus]) ? ("{f0e86b}Доступна") : ("{FF6347}Не доступна"));
			ShowPlayerDialogEx(playerid, D_HOME, 2, "{ebec86}>> Панель управления домом", string, "Принять", "Отмена");
		}
		else SendErr(playerid, "Вы должны находится в своем доме");
	}
	return 1;
}

cmd:bizlist(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	new stringer1[128], count_business = 0;
	new dial[128];
    STRING_GLOBAL = "";
    for(new i = TOTALBIZZ; i > 0; i --)
	{
		if(BizzInfo[i][bMafia] != p_info[playerid][pMember]) continue;
		
		format(dial, sizeof(dial), "%s - {f0e86b}%d{ffffff} рублей\n", BizzInfo[i][bName], BizzPay[i]);
		strcat(STRING_GLOBAL, dial);
		count_business++;
  	}

	format(stringer1, 128, "{ebec86}>> Захваченные бизнесы. (Количество: {FFFFFF}%d{ebec86})", count_business);
	ShowPlayerDialogEx(playerid, D_NULL, 2, stringer1, STRING_GLOBAL, "Принять", "");
	return 1;
}

cmd:bmafia(playerid, params[])
{
    if(!IsAMafia(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
    if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionCapture])
	{
		format(STRING_GLOBAL, 128 ,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionCapture]);
		SendErr(playerid,STRING_GLOBAL);
		return 1;
	}
	new Business, String[128];
	for(new h = TOTALBIZZ; h > 0; h --)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 6.0, BizzInfo[h][bEntrx],BizzInfo[h][bEntry],BizzInfo[h][bEntrz]))
		{
		    Business = h;
		}
	}
	if(!strcmp(BizzInfo[Business][bOwner], "None", true)) return SendErr(playerid, "У бизнеса нет владельца");
	if(!BizzInfo[Business][bMafia]) ShowPlayerDialogEx(playerid, 183, DIALOG_STYLE_MSGBOX, "{ebec86}>> Управление бизнесом", "{FFFFFF}Этот бизнес свободен\nВы можете его захватить без боя", "Захватить", "Выйти");
	if(BizzInfo[Business][bMafia] != p_info[playerid][pMember])
	{
		format(String, sizeof(String), "{FFFFFF}Этот бизнес под контролем %s\nВы можете его захватить с боем", GetMafiaName(BizzInfo[Business][bMafia]));
		ShowPlayerDialogEx(playerid, 183, DIALOG_STYLE_MSGBOX, "{ebec86}>> Управление бизнесом", String, "Захватить", "Выйти");
	}
	else
	{
		format(String, sizeof(String), "{FFFFFF}Этот бизнес под контролем вашей организации\nВы можете забрать деньги - {f0e86b}%d{FFFFFF} рублей", BizzPay[Business]);
		ShowPlayerDialogEx(playerid, 183, DIALOG_STYLE_MSGBOX, "{ebec86}>> Управление бизнесом", String, "Забрать", "Выйти");
	}
    return 1;
}

/*CMD:break(playerid,params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная команда");
	if(IsACop(playerid) && p_info[playerid][pRank] < 5 || p_info[playerid][pMember] == TEAM_FBI && p_info[playerid][pRank] < 3) return SendErr(playerid, "Вам недоступна установка ограждений");
    if(GetPlayerInterior(playerid) != 0) return SendErr(playerid, "Вы находитесь в интерьере");

   	if ( br_player[playerid][br_flag] != 15 ) return SendErr ( playerid , "Пожалуйста подождите ..." ) ;
	for(new i = 0; i <= 11; i++) TextDrawShowForPlayer ( playerid , TD_BRAKE[i] ) ;
	SelectTextDraw(playerid, 0x022F3299);
	br_player[playerid][br_flag] ^= 1 << 0;
	return 1;
}*/

cmd:flight(playerid, params[])
{
	if(IsACop(playerid) || p_info[playerid][pMember] == TEAM_ARMY)
	{
		if(IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Нельзя использовать в машине");
		else if(sscanf(params, "i", params[0])) return SendInf(playerid, "/flight [тип 1-2]");
		if(params[0] == 0)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы спрятали фонарик в карман");
		}
		else if(params[0] == 1)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы достали фонарик малой дальности");
			SetPlayerAttachedObject(playerid, 1, 18656, 5, 0.1, 0.038, -0.1, -90.0, 180.0, 0.0, 0.03, 0.03, 0.03);
			return SetPlayerAttachedObject(playerid, 2, 18641, 5, 0.1, 0.02, -0.05, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
		}
		else if(params[0] == 2)
		{
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вы достали фонарик повышенной дальности");
			SetPlayerAttachedObject(playerid, 1, 18656, 5, 0.1, 0.038, -0.01, -90.0, 180.0, 0.0, 0.03, 0.1, 0.03);
			return SetPlayerAttachedObject(playerid, 2, 18641, 5, 0.1, 0.02, -0.05, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);
		}
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:su(playerid, params[]) return callcmd::suspect(playerid, params);
cmd:suspect(playerid, params[])
{
	if(!IsACop(playerid) || p_info[playerid][pRank] < 5) return SendErr(playerid, "Вам недоступна данная возможность");
	else if(PlayerTied[playerid] == true) return SendErr(playerid, "Ваши руки связаны");
	else if(sscanf(params, "us[24]", params[0], params[1])) return SendInf(playerid, "/suspect [id игрока] [причина]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[params[0]][pJail] > 0) return SendErr(playerid, "Данный игрок уже находиться в тюрьме");
	else if(IsACop(params[0]) || p_info[params[0]][pMember] == TEAM_ARMY) return SendErr(playerid, "Данный игрок полицейский/агент/военный");
	else if(p_info[playerid][pMember] != TEAM_FBI && p_info[params[0]][pWanted] >= 3) return SendErr(playerid, "Вы не можете дать более 3-ех звезд");
	else if(p_info[playerid][pMember] == TEAM_FBI && p_info[params[0]][pWanted] >= 6) return SendErr(playerid, "Вы не можете дать более 6-ти звезд");
	p_info[params[0]][pWanted]++;
	if(p_info[params[0]][pWanted] > 0) p_info[params[0]][pWantedTime] = 1800 + random(300);
	SetPlayerCriminal(params[0], GetName(playerid), params[1]);
	MysqlUpdatePlayerInt(params[0], "wanted", p_info[params[0]][pWanted]);
	MysqlUpdatePlayerInt(params[0], "wantedtime", p_info[params[0]][pWantedTime]);
	return 1;
}

cmd:ticket(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	else if(sscanf(params, "iis[24]", params[0], params[1], params[2])) return SendInf(playerid, "/ticket [id игрока] [сумма] [причина]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	else if(params[1] < 1 || params[1] > 10000) return SendErr(playerid, "Сумма штрафа от 1р до 10000р");
	SCMF(playerid, COLOR_BLUE, "Вы выписали штраф %s в размере %dр. Причина: %s", GetName(params[0]), params[1], params[2]);
	SCMF(params[0], COLOR_BLUE, "Офицер %s выписал вам штраф в размере %dр. Причина: %s", GetName(playerid), params[1], params[2]);
	SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
	SetPVarInt(params[0], "TicketPlayer", playerid);
	SetPVarInt(params[0], "TicketSumma", params[1]);
	SetPVarInt(params[0], "KeyTicket", 1);
	return 1;
}

CMD:maprecord(playerid, params[]) return Kick(playerid);

cmd:history(playerid, params[])
{
	new nickname[MAX_PLAYER_NAME];
	if(sscanf(params, "s[90]", nickname)) return SendInf(playerid, "/history [имя игрока]");
	new string[128];
	format(string, sizeof(string), "SELECT `id`, `lastname` FROM "T_ACCOUNTS" WHERE `name` = '%s'", nickname);
	mysql_tquery(dbHandle, string, "OnPlayerHistoryName", "d", playerid);
	return 1;
}

cmd:hunger(playerid)
{
	new string[256], Stats_Level[40];
	switch(p_info[playerid][pHunger])
	{
	case 81..100: Stats_Level = "{f0e86b}[Вы сыты]";
	case 51..80: Stats_Level = "{CCFF00}[Вы сыты]";
	case 31..50: Stats_Level = "{FDE910}[Вы немного проголодались]";
	case 16..30: Stats_Level = "{FF8800}[Вы голодны]";
	case 0..15: Stats_Level = "{FF0600}[Вы очень голодны]";
	}
	format(string, sizeof(string), "{FFFFFF}%d%% %s\n\n{FFFFFF}Пополнить сытость можно в любой закусочной города\nЕсли долго не есть ваше здоровье начнет ухудшаться", p_info[playerid][pHunger], Stats_Level);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Уровень сытости игрока", string, "Закрыть", "");
	return 1;
}

cmd:stats(playerid)
{
	ShowPlayerStatsDialog(playerid, playerid);
	return 1;
}

cmd:mm(playerid) return callcmd::menu(playerid);
cmd:mn(playerid) return callcmd::menu(playerid);
cmd:mainmenu(playerid) return callcmd::menu(playerid);
cmd:menu(playerid)
{
	PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
	
	ShowPlayerDialogEx(playerid, 9623, DIALOG_STYLE_LIST, "{ebec86}>> Меню игрока", "1. Статистика персонажа\n2. Команды\n3. Связь с администрацией\n4. Настройки\n5. Донат\n6. Активация промокода\n7. Аксессуары\n8. Улучшения персонажа", "Выбрать", "Отмена");
	return 1;
}

cmd:help(playerid) return callcmd::cmd(playerid);
cmd:cmd(playerid)
{
	STRING_GLOBAL [ 0 ] = EOS;
	strcat(STRING_GLOBAL, "{FFFFFF}Общие:\n");
	strcat(STRING_GLOBAL, "/menu (/mm), /gps, /anim - анимации, /lock - открыть/закрыть транспорт, /report - обратиться к администрации, /time, /pay\n");
	strcat(STRING_GLOBAL, "/sms, /call - позвонить, /number - телефонная книга, /phone - контакты, /kiss, /play - использовать MP3-плеер, /referals\n");
	strcat(STRING_GLOBAL, "/quitjob - уволиться с работы, /getbizstats - статистика бизнеса, /healme - вылечиться аптечкой, /inv - инвентарь, /wbook\n");
	strcat(STRING_GLOBAL, "/pass - показать паспорт, /id - узнать имя игрока, /setspawn - место появления, /skill - показать скиллы, /smoke - курить\n");
	strcat(STRING_GLOBAL, "/lic - показать лицензии, /med - показать медицинскую книжку, /diplom - показать диплом, /giveflowers - передать цветы\n");
	strcat(STRING_GLOBAL, "/ad - подать объявление, /history - история никнеймов, /sellsim - продать SIM-карту, /hi - пожать руку, /bind - биндер\n");
	strcat(STRING_GLOBAL, "\n");
	strcat(STRING_GLOBAL, "Общение:\n");
	strcat(STRING_GLOBAL, "/me - действие, /mes - действие со звуком, /try - действие с вероятным успехом, /s - кричать\n");
	strcat(STRING_GLOBAL, "/b - OOC чат, /do - действие от 3-го лица, /todo - использование чата и действие персонажа\n");
	strcat(STRING_GLOBAL, "/ado - описание персонажа, /action - описание, /caraction - описание автомобиля, /w - шептать\n");
	if(GetPlayerHouse(playerid) == 1)
	{
 		strcat(STRING_GLOBAL, "\n");
   		strcat(STRING_GLOBAL, "{FFFFFF}Дом:\n");
		strcat(STRING_GLOBAL, "/hmenu - меню дома, /healing - домашняя аптечка, /hgps, /sellmyhouse - обмен домами, /towcar - домашний транспорт\n");
		strcat(STRING_GLOBAL, "Нажмите 'ПКМ + Н' на игрока, для того, чтоб продать дом\n");
	}
	if(GetPlayerBizz(playerid) == 1)
	{
 		strcat(STRING_GLOBAL, "\n");
  		strcat(STRING_GLOBAL, "{FFFFFF}Бизнес:\n");
		strcat(STRING_GLOBAL, "/bpanel - меню бизнеса, /sellmybiz - продать бизнес\n");
	}
	
	new rows;
	new fmt_query[90];
	new Cache:result;
	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(rows)
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Транспортное средство:\n");
		strcat(STRING_GLOBAL, "/eject - выкинуть из транспорта, /fixcar - загрузить транспорт, /sell(my)car - продать транспорт\n");
		strcat(STRING_GLOBAL, "/lock - закрыть транспорт, /fuel - использовать канистру, /tools - использовать инструменты\n");
		strcat(STRING_GLOBAL, "/fixcopter - загрузить вертолет, /sellcopter - продать вертолет, /park - припарковать транспорт\n");
		strcat(STRING_GLOBAL, "'Q' и 'E' - поворотники, 'ALT+W' - фары\n");
	}
	cache_delete(result);

	if(p_info[playerid][pJob] == JOB_BUS)
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Работа:\n");
		strcat(STRING_GLOBAL, "/beginwork - начать работу\n");
	}
	if(p_info[playerid][pJob] == JOB_TAXI)
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Работа:\n");
		strcat(STRING_GLOBAL, "/staxi - начать работу\n");
	}
	if(p_info[playerid][pJob] == JOB_MECHANIC)
	{
 		strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Работа:\n");
		strcat(STRING_GLOBAL, "/loadfuel - залить бензин на заправке, /mrepair - предложить ремонт, /mfill - предложить заправить\n");
	}
	if(p_info[playerid][pJob] == JOB_TRUCKER)
	{
 		strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Работа:\n");
		strcat(STRING_GLOBAL, "/prodlist - бизнесы заказавшие продукты, /fuellist - заправочные станции заказавшие топливо\n");
	}
	if(p_info[playerid][pJob] == JOB_INKASATOR)
	{
 		strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Работа:\n");
		strcat(STRING_GLOBAL, "/bank - начать работу\n");
	}
	
	if(IsAMayor(playerid))
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Команды организации:\n");
		strcat(STRING_GLOBAL, "/r, /rn, /d, /dn, /gnews - государственные новости, /unarrest - выпустить из тюрьмы, /find - члены организации\n");
		strcat(STRING_GLOBAL, "/mpanel - государственные цены, /showudost - показать удостоверение, /exitf\n");
	}
	if(p_info[playerid][pMember] == TEAM_POLICIA || p_info[playerid][pMember] == TEAM_POLICIA2 || p_info[playerid][pMember] == TEAM_SWAT
		|| p_info[playerid][pMember] == TEAM_FBI)
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Команды организации:\n");
		strcat(STRING_GLOBAL, "/r, /rn, /d, /dn, /gnews - государственные новости, /m - мегафон, /wanted - розыскиваемые, /takegun - изъять оружие\n");
		strcat(STRING_GLOBAL, "/take - изъять что-либо, /ticket - выписать штраф, /ram - взломать дверь дома, /spikes - шипы, /push - затолкать в машину\n");
		strcat(STRING_GLOBAL, "/(un)cuff - наручники, /find - члены организации, /clear - очистить розыск, /su - розыск, /takeinv - обыскать человека\n");
		strcat(STRING_GLOBAL, "/showudost - показать удостоверение, /tow - Взять транспорт на буксир, /exitf\n");
		if(p_info[playerid][pMember] == TEAM_FBI)
		{
		    strcat(STRING_GLOBAL, "/flight - фонарик, /unmask - снять маску, /gotome - вести за собой, /spy - шпионаж, /tipster - прослушка\n");
		}
		else
		{
		    strcat(STRING_GLOBAL, "/flight - фонарик, /unmask - снять маску, /gotome - вести за собой\n");
		}
	}
	if(p_info[playerid][pMember] == TEAM_ARMY)
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Команды организации:\n");
		strcat(STRING_GLOBAL, "/r, /rn, /d, /dn, /gnews - государственные новости, /m - мегафон, /find - члены организации, /givevoen - выдать военный билет\n");
		strcat(STRING_GLOBAL, "/(un)load - поставка боеприпасов, /showudost - показать удостоверение, /exitf\n");
		strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Доставка боеприпасов в правоохранительные органы:\n");
		strcat(STRING_GLOBAL, "Возьмите одну из фур стоящих на стоянке, заедьте на красный маркер, рядом со стоянкой автомобилей находится склад\n");
		strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Конфискация:\n");
		strcat(STRING_GLOBAL, "Возьмите фуры для перевозки боеприпасов и отправляйтесь на территорию мафии, там Вам нужно найти общак мафии\n");
	}
	if(IsANews(playerid))
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Команды организации:\n");
		strcat(STRING_GLOBAL, "/r, /rn, /news - объявления, /find - члены организации, /showudost - показать удостоверение, /exitf\n");
	}
	if(p_info[playerid][pMember] == TEAM_AUTOSCHOOL)
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Команды организации:\n");
		strcat(STRING_GLOBAL, "/r, /rn, /d, /dn, /gnews - государственные новости, /find - члены организации, /salelic - продажа лицензий, /showudost - показать удостоверение\n");
	}
	if(IsAMedic(playerid))
	{
 		strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Команды организации:\n");
		strcat(STRING_GLOBAL, "/r, /rn, /d, /dn, /gnews - государственные новости, /find - члены организации, /heal - лечение, /healdrugs - лечение от зависимости\n");
        strcat(STRING_GLOBAL, "/showudost - показать удостоверение, /exitf\n");
	}
	if(IsAMafia(playerid))
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Команды организации:\n");
		strcat(STRING_GLOBAL, "/f, /fn, /u, /un, /(un)tie - верёвка, /incar - затащить в автомобиль, /bmafia - управление бизнесом, /find - члены организации\n");
		strcat(STRING_GLOBAL, "/(un)load - боеприпасы / контрабанда, /gotome - тащить за собой, /sellgun - продажа оружия, /dip - принять запрос на дипломатию\n");
		strcat(STRING_GLOBAL, "/bl - чёрный список, /jackcar - угон автомобиля, /dipinfo - дипломатические отношения, /exitf, /givewar\n");
	}

	if(p_info[playerid][pFamily] > 0)
	{
	    strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Семья:\n");
		strcat(STRING_GLOBAL, "/k, /family, /finvite, /funinvite\n");
	}

	if(p_info[playerid][pLeader] > 0)
	{
	   	strcat(STRING_GLOBAL, "\n");
	    strcat(STRING_GLOBAL, "{FFFFFF}Команды лидера:\n");
		strcat(STRING_GLOBAL, "/(un)invite, /giverank, /changeskin, /offmembers - состав организации, /lmenu - панель лидера\n");
	}
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Команды сервера", STRING_GLOBAL, "Закрыть", "");
	return 1;
}

cmd:viphelp(playerid)
{
	if(!p_info[playerid][pVip]) return SendErr(playerid, "Вы не имеете VIP статус");
	new str[68], string[576];
	new year, month, day;
	new current_date = getdate(year, month, day);
	new time_left = p_info[playerid][pVipTime] - current_date;
	format(str, sizeof(str), "{FFFF00}Вы владеете VIP статусом. Осталось дней: %i\n\n", time_left);
	strcat(string, str);
	strcat(string, "{FFFFFF}Ниже приведены ваши преимущества.\n");
	strcat(string, "1) Ускоренное лечение в больнице\n");
	strcat(string, "2) Удаление тюнинга с личного транспорта (/rtune)\n");
	strcat(string, "3) Возможность покинуть организацию самому (/exitf)\n");
	strcat(string, "4) Увеличеный процент по банковскому вкладу\n");
	strcat(string, "5) Прокачка скиллов в 2 раза быстрей\n");
	strcat(string, "6) Проявление чувства голода у персонажа в 2 раза реже\n");
	strcat(string, "7) Возможность уволиться с работы не на месте устройства (/quitjob)\n");
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> VIP статус", string, "Закрыть", "");
	return 1;
}

CMD:ahelp(playerid)
{
    if(p_info[playerid][pAdmin] < 1) return 1;

    switch(p_info[playerid][pAdmin])
	{
	    case 1: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{CC3333}-{FFFFFF}]\n3 уровень [{CC3333}-{FFFFFF}]\n4 уровень [{CC3333}-{FFFFFF}]\n5 уровень [{CC3333}-{FFFFFF}]\n6 уровень [{CC3333}-{FFFFFF}]\n7 уровень [{CC3333}-{FFFFFF}]\n8 уровень [{CC3333}-{FFFFFF}]\n9 уровень [{CC3333}-{FFFFFF}]", "Закрыть", "");
	    case 2: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{f0e86b}+{FFFFFF}]\n3 уровень [{CC3333}-{FFFFFF}]\n4 уровень [{CC3333}-{FFFFFF}]\n5 уровень [{CC3333}-{FFFFFF}]\n6 уровень [{CC3333}-{FFFFFF}]\n7 уровень [{CC3333}-{FFFFFF}]\n8 уровень [{CC3333}-{FFFFFF}]\n9 уровень [{CC3333}-{FFFFFF}]", "Закрыть", "");
	    case 3: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{f0e86b}+{FFFFFF}]\n3 уровень [{f0e86b}+{FFFFFF}]\n4 уровень [{CC3333}-{FFFFFF}]\n5 уровень [{CC3333}-{FFFFFF}]\n6 уровень [{CC3333}-{FFFFFF}]\n7 уровень [{CC3333}-{FFFFFF}]\n8 уровень [{CC3333}-{FFFFFF}]\n9 уровень [{CC3333}-{FFFFFF}]", "Закрыть", "");
	    case 4: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{f0e86b}+{FFFFFF}]\n3 уровень [{f0e86b}+{FFFFFF}]\n4 уровень [{f0e86b}+{FFFFFF}]\n5 уровень [{CC3333}-{FFFFFF}]\n6 уровень [{CC3333}-{FFFFFF}]\n7 уровень [{CC3333}-{FFFFFF}]\n8 уровень [{CC3333}-{FFFFFF}]\n9 уровень [{CC3333}-{FFFFFF}]", "Закрыть", "");
	    case 5: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{f0e86b}+{FFFFFF}]\n3 уровень [{f0e86b}+{FFFFFF}]\n4 уровень [{f0e86b}+{FFFFFF}]\n5 уровень [{f0e86b}+{FFFFFF}]\n6 уровень [{CC3333}-{FFFFFF}]\n7 уровень [{CC3333}-{FFFFFF}]\n8 уровень [{CC3333}-{FFFFFF}]\n9 уровень [{CC3333}-{FFFFFF}]", "Закрыть", "");
	    case 6: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{f0e86b}+{FFFFFF}]\n3 уровень [{f0e86b}+{FFFFFF}]\n4 уровень [{f0e86b}+{FFFFFF}]\n5 уровень [{f0e86b}+{FFFFFF}]\n6 уровень [{f0e86b}+{FFFFFF}]\n7 уровень [{CC3333}-{FFFFFF}]\n8 уровень [{CC3333}-{FFFFFF}]\n9 уровень [{CC3333}-{FFFFFF}]", "Закрыть", "");
	    case 7: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{f0e86b}+{FFFFFF}]\n3 уровень [{f0e86b}+{FFFFFF}]\n4 уровень [{f0e86b}+{FFFFFF}]\n5 уровень [{f0e86b}+{FFFFFF}]\n6 уровень [{f0e86b}+{FFFFFF}]\n7 уровень [{f0e86b}+{FFFFFF}]\n8 уровень [{CC3333}-{FFFFFF}]\n9 уровень [{CC3333}-{FFFFFF}]", "Закрыть", "");
	    case 8: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{f0e86b}+{FFFFFF}]\n3 уровень [{f0e86b}+{FFFFFF}]\n4 уровень [{f0e86b}+{FFFFFF}]\n5 уровень [{f0e86b}+{FFFFFF}]\n6 уровень [{f0e86b}+{FFFFFF}]\n7 уровень [{f0e86b}+{FFFFFF}]\n8 уровень [{f0e86b}+{FFFFFF}]\n9 уровень [{CC3333}-{FFFFFF}]", "Закрыть", "");
	    case 9: ShowPlayerDialogEx(playerid, D_AHELP, DIALOG_STYLE_LIST, "{ebec86}>> Команды администрации","1 уровень [{f0e86b}+{FFFFFF}]\n2 уровень [{f0e86b}+{FFFFFF}]\n3 уровень [{f0e86b}+{FFFFFF}]\n4 уровень [{f0e86b}+{FFFFFF}]\n5 уровень [{f0e86b}+{FFFFFF}]\n6 уровень [{f0e86b}+{FFFFFF}]\n7 уровень [{f0e86b}+{FFFFFF}]\n8 уровень [{f0e86b}+{FFFFFF}]\n9 уровень [{f0e86b}+{FFFFFF}]", "Закрыть", "");
	}
	return 1;
}

cmd:apanel(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		ShowPlayerDialogEx(playerid, D_APANEL, 2, "{ebec86}>> Панель администратора", "\
		{ffffff}1. Игроки с VIP'ом\n\
		{ffffff}2. Игроки с мутом\n\
		{ffffff}3. Игроки в тюрьме\n\
		{ffffff}4. Администрация в сети\n\
		{ffffff}5. Весь список администрации\n\
		{ffffff}6. Весь список лидеров\n\
		{ffffff}7. Список забаненых\n\
		{ffffff}8. Команды администратора\n\
		{ffffff}9. Настройки администратора\n\
		{ffffff}10. Статистика организаций\n\
		{ffffff}11. Статистика сервера\n\
		{ffffff}12. Расформировать фракцию\n\
		{ffffff}13. Управление сервером", "Выбрать", "Отмена");
	}
	else
	{
		if(p_info[playerid][pAdmin] < 1) return 1;
		else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		ShowPlayerDialogEx(playerid, D_APANEL, 2, "{ebec86}>> Панель администратора", "\
		{ffffff}1. Игроки с VIP'ом\n\
		{ffffff}2. Игроки с мутом\n\
		{ffffff}3. Игроки в тюрьме\n\
		{ffffff}4. Администрация в сети\n\
		{ffffff}5. Весь список администрации\n\
		{ffffff}6. Весь список лидеров\n\
		{ffffff}7. Список забаненых\n\
		{ffffff}8. Команды администратора\n\
		{ffffff}9. Настройки администратора\n\
		{ffffff}10. Статистика организаций", "Выбрать", "Отмена");
	}
	return 1;
}

cmd:hpanel(playerid)
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 7)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		ShowPlayerDialogEx(playerid, D_HELPER, 2, "{ebec86}>> Панель хелпера", "\
		{ffffff}1. Игроки с VIP'ом\n\
		{ffffff}2. Игроки с мутом\n\
		{ffffff}3. Игроки в тюрьме\n\
		{ffffff}4. Хелперы в сети\n\
		{ffffff}5. Команды хелпера\n\
		{ffffff}6. Весь список хелперов", "Выбрать", "Отмена");
	}
	else
	{
		if(p_info[playerid][pHelper] < 1) return 1;
		ShowPlayerDialogEx(playerid, D_HELPER, 2, "{ebec86}>> Панель хелпера", "\
		{ffffff}1. Игроки с VIP'ом\n\
		{ffffff}2. Игроки с мутом\n\
		{ffffff}3. Игроки в тюрьме\n\
		{ffffff}4. Хелперы в сети\n\
		{ffffff}5. Команды хелпера", "Выбрать", "Отмена");
	}
	return 1;
}

cmd:get(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/get [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	new string[64];

	STRING_GLOBAL[0] = EOS;
	format(string, sizeof(string), "Номер аккаунта: %i\n", p_info[params[0]][pID]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof(string), "Наличные: %i\n", p_info[params[0]][pCash]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof(string), "Банковский счёт: %i\n", p_info[params[0]][pBank]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof(string), "Уровень: %i\n", p_info[params[0]][pLevel]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof(string), "IP адрес (регис.): %s\n", p_info[params[0]][pRegIP]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof(string), "IP адрес (последн.): %s\n", p_info[params[0]][pLastIP]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof(string), "Дата регистрации: %s\n", p_info[params[0]][pRegData]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof(string), "Донат: %i\n", p_info[params[0]][pCredits]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof string, "Суббота: %d ч.\n", p_info[params[0]][data_NONLINE][1]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof string, "Воскресенье: %d ч.\n", p_info[params[0]][data_NONLINE][2]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof string, "Понедельник: %d ч.\n", p_info[params[0]][data_NONLINE][3]);
	strcat(STRING_GLOBAL, string);
    format(string, sizeof string, "Вторник: %d ч.\n", p_info[params[0]][data_NONLINE][4]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof string, "Среда: %d ч.\n", p_info[params[0]][data_NONLINE][5]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof string, "Четверг: %d ч.\n", p_info[params[0]][data_NONLINE][6]);
	strcat(STRING_GLOBAL, string);
	format(string, sizeof string, "Пятница: %d ч.\n", p_info[params[0]][data_NONLINE][7]);
	strcat(STRING_GLOBAL, string);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, GetName(params[0]), STRING_GLOBAL, "Закрыть", "");
	return 1;
}

cmd:offget(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[128]", playername)) return SendInf(playerid, "/offget [имя игрока]");
	else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendErr(playerid, "Игрок в сети, используйте команду /get");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE `name`='%s'", playername);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerOffget", "is", playerid, playername);
	return 1;
}

cmd:agetid(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new playername[MAX_PLAYER_NAME];
	if(sscanf(params, "s[90]", playername)) return SendInf(playerid, "/agetid [id игрока]");
	//else if(GetPlayerID(playername) != INVALID_PLAYER_ID) return SendErr(playerid, "Игрок в сети, используйте команду /get");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE `id`='%s'", playername);
	mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerOffgeta", "is", playerid, playername);
	return 1;
}

cmd:unmask(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна эта команда");
	foreach(new i: Player)
	{
		if(!PlayerLogged[i]) continue;
		if(pCuff[i][pCuffee] == i)
		{
			if(!PlayerUseMask[i]) continue;
			if(ProxDetectorS(2.0, playerid, i) && GetPlayerFaceToPlayer(playerid, i, 30.0))
			{
				new string[100];
				PlayerUseMask[i] = false;
				format(string, sizeof(string), "Вы сняли маску с игрока %s", GetName(i));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s снял с вас маску", GetName(playerid));
				SendClientMessage(i, COLOR_GREY, string);
				format(string, sizeof(string), "снял маску с игрока %s", GetName(i));
				MeAction(playerid, string);
				break;
			}
		}
		else SendErr(playerid, "Игрок должен быть в наручниках");
	}
	return 1;
}

cmd:cuff(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	else if(PlayerTied[playerid] == true) return SendErr(playerid, "Вы связаны, вы не можете одеть наручники!");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/cuff [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!ProxDetectorS(3.0, playerid, params[0])) return SendErr(playerid, "Вы далеко друг от друга");
	else if(params[0] == playerid) return SendErr(playerid, "Вы не можете надеть наручники на себя!");
	else if(IsACop(params[0])) return SendErr(playerid, "Данный игрок Полицейский/Агент/Военный!");
	else if(pCuff[params[0]][pCuffee] == params[0]) return SendErr(playerid, "Игрок уже в наручниках!");
	else if(p_info[params[0]][pWanted] == 0) return SendErr(playerid, "Игрок не находится в розыске");
	if(GetPVarInt(params[0], "Tazer") > 0)
	{
		SetPVarInt(params[0], "Tazer", 0);
		TogglePlayerControllable(params[0], 1);
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
	}
	SCMF(playerid, COLOR_BLUE, "Вы надели наручники на %s", GetName(params[0]));
	SCMF(params[0], COLOR_BLUE, "%s надел(а) на вас наручники", GetName(playerid));
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
	SetPlayerAttachedObject(params[0], 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	pCuff[params[0]][pCuffee] = params[0];
	pCuff[playerid][pCuffee] = params[0];
	pCuff[params[0]][pCuffer] = playerid;
	pCuff[playerid][pCuffer] = playerid;
	GameTextForPlayer(playerid, "~r~cuffed", 5000, 6);
	GameTextForPlayer(params[0], "~r~cuffed", 5000, 6);
	new string[64];
	if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "надел наручники на %s", GetName(params[0]));
	else format(string, sizeof(string), "надела наручники на %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

cmd:uncuff(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/uncuff [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!ProxDetectorS(3.0, playerid, params[0])) return SendErr(playerid, "Вы далеко друг от друга");
	else if(params[0] == playerid) return SendErr(playerid, "Вы не можете снять наручники с себя!");
	else if(pCuff[params[0]][pCuffer] == INVALID_PLAYER_ID) return SendErr(playerid, "Игрок не в наручниках");
	SCMF(playerid, COLOR_BLUE, "Вы сняли наручники с %s", GetName(params[0]));
	SCMF(params[0], COLOR_BLUE, "%s снял(а) с вас наручники", GetName(playerid));
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(params[0], 0);
	pCuff[params[0]][pCuffer] = pCuff[params[0]][pCuffee] = pCuff[playerid][pCuffee] = pCuff[playerid][pCuffer] = INVALID_PLAYER_ID;
	GameTextForPlayer(playerid, "~g~uncuffed", 5000, 6);
	GameTextForPlayer(params[0], "~g~uncuffed", 5000, 6);
	TogglePlayerControllable(params[0], 1);
	new string[64];
	if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "снял наручники с %s", GetName(params[0]));
	else format(string, sizeof(string), "сняла наручники с %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

cmd:arrest(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	if(IsPlayerInRangeOfPoint(playerid, 10.0,896.2441,2084.9253,2721.8101))
	{
		if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/arrest [id игрока] [минуты]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(!IsPlayerInRangeOfPlayer(3.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко");
		else if(p_info[params[0]][pJail] > 0) return SendErr(playerid, "Данный игрок уже находиться в тюрьме");
		else if(params[0] == playerid) return SendErr(playerid, "Вы не можете арестовать самого себя");
		else if(IsACop(params[0]) || p_info[params[0]][pMember] == TEAM_ARMY) return SendErr(playerid, "Данный игрок полицейский/агент/военный");
		else if(p_info[params[0]][pWanted] == 0) return SendErr(playerid, "Игрок должен иметь хотя бы 1 уровень розыска");
		else if(params[1] < 1 || params[1] > 20) return SendErr(playerid, "Количество минут от 1 до 20");
		AC_ResetPlayerWeapons(params[0]);
		p_info[params[0]][pJailTime] = params[1] * 60;
		p_info[params[0]][pWanted] = 0;
		MysqlUpdatePlayerInt(params[0], "wanted", p_info[params[0]][pWanted]);
		if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
		{
			new cuffer = pCuff[params[0]][pCuffer];
			SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0], 0);
			pCuff[params[0]][pCuffer] = INVALID_PLAYER_ID;
			pCuff[params[0]][pCuffee] = INVALID_PLAYER_ID;
			pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
			pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		}
		SetPlayerColorEx(params[0],TeamColors[0]);
		SCMF(playerid, COLOR_BLUE, "Вы посадили в камеру %s[%i] на %i секунд", GetName(params[0]), params[0], params[1]*60);
		SCMF(params[0], COLOR_BLUE, "%s %s[%i] посадил вас в камеру на %i секунд", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[1]*60);
		SetPlayerInterior(params[0], 0);
		SetPlayerPos(params[0], 896.1680,2081.5542,2721.8101);
		SetPlayerFacingAngle(params[0], 358.4341);
		LoadTexture(params[0]);
		p_info[params[0]][pJail] = 1;
		p_info[params[0]][pArrestSpawn] = 1;
		SetPlayerWantedLevel(params[0], 0);
		TogglePlayerControllable(params[0], 1);
		MysqlUpdatePlayerInt(params[0], "jail", p_info[params[0]][pJail]);
		MysqlUpdatePlayerInt(params[0], "jailtime", p_info[params[0]][pJailTime]);
		MysqlUpdatePlayerInt(params[0], "arrestspawn", p_info[params[0]][pArrestSpawn]);
		if(GetPVarInt(playerid, "walk_goto_me_player"))
		{
			walk_goto_me[GetPVarInt(playerid, "walk_goto_me_player") - 1] = 0;
			DeletePVar(playerid,"walk_goto_me_player");
		}
		SendInf(playerid, "Вы получили премию за арестованного преступника");
		p_info[playerid][pPayCheck] += WorkSalary[24];
		MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);
	}
	if(IsPlayerInRangeOfPoint(playerid, 10.0,2550.7563,-2430.6584,2999.5273))
	{
		if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/arrest [id игрока] [минуты]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(!IsPlayerInRangeOfPlayer(3.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
		else if(p_info[params[0]][pJail] > 0) return SendErr(playerid, "Данный игрок уже находиться в тюрьме!");
		else if(params[0] == playerid) return SendErr(playerid, "Вы не можете арестовать самого себя!");
		else if(IsACop(params[0]) || p_info[params[0]][pMember] == TEAM_ARMY) return SendErr(playerid, "Данный игрок полицейский/агент/военный!");
		else if(p_info[params[0]][pWanted] == 0) return SendErr(playerid, "Игрок должен иметь хотя бы 1 уровень розыска!");
		else if(params[1] < 1 || params[1] > 20) return SendErr(playerid, "Количество минут от 1 до 20!");
		AC_ResetPlayerWeapons(params[0]);
		p_info[params[0]][pJailTime] = params[1] * 60;
		p_info[params[0]][pWanted] = 0;
		MysqlUpdatePlayerInt(params[0], "wanted", p_info[params[0]][pWanted]);
		if(pCuff[params[0]][pCuffer] != INVALID_PLAYER_ID)
		{
			new cuffer = pCuff[params[0]][pCuffer];
			SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(params[0], 0);
			pCuff[params[0]][pCuffer] = INVALID_PLAYER_ID;
			pCuff[params[0]][pCuffee] = INVALID_PLAYER_ID;
			pCuff[cuffer][pCuffee] = INVALID_PLAYER_ID;
			pCuff[cuffer][pCuffer] = INVALID_PLAYER_ID;
		}
		SetPlayerColorEx(params[0],TeamColors[0]);
		SCMF(playerid, COLOR_BLUE, "Вы посадили в камеру %s[%i] на %i секунд", GetName(params[0]), params[0], params[1]*60);
		SCMF(params[0], COLOR_BLUE, "%s %s[%i] посадил вас в камеру на %i секунд", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[1]*60);
		SetPlayerInterior(params[0], 0);
		SetPlayerPos(params[0], 621.1590,2483.6973,-96.0300);
		SetPlayerFacingAngle(params[0], 233.4832);
		LoadTexture(params[0]);
		p_info[params[0]][pJail] = 1;
		p_info[params[0]][pArrestSpawn] = 2;
		SetPlayerWantedLevel(params[0], 0);
		TogglePlayerControllable(params[0], 1);
		MysqlUpdatePlayerInt(params[0], "jail", p_info[params[0]][pJail]);
		MysqlUpdatePlayerInt(params[0], "jailtime", p_info[params[0]][pJailTime]);
		MysqlUpdatePlayerInt(params[0], "arrestspawn", p_info[params[0]][pArrestSpawn]);
		if(GetPVarInt(playerid, "walk_goto_me_player"))
		{
			walk_goto_me[GetPVarInt(playerid, "walk_goto_me_player") - 1] = 0;
			DeletePVar(playerid,"walk_goto_me_player");
		}
		SendInf(playerid, "Вы получили премию за арестованного преступника");
		p_info[playerid][pPayCheck] += WorkSalary[24];
		MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);
	}
	return 1;
}

cmd:m(playerid, params[]) return callcmd::megaphone(playerid, params);
cmd:megaphone(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы должны находится в транспорте!");
	{
		if(isnull(params)) return SendInf(playerid, "/megaphone [текст]");
		new string[128];
		format(string, sizeof(string), "[%s] %s %s: %s", Fractions[p_info[playerid][pMember]][fractionName], GetRank(p_info[playerid][pMember], p_info[playerid][pRank]), GetName(playerid), params[0]);
		SendStreamMessage(80.0, playerid, string, COLOR_YELLOW);
	}
	return 1;
}

cmd:clear(playerid, params[])
{
	if(!IsACop(playerid) || p_info[playerid][pRank] < 4) return SendErr(playerid, "Вам недоступна данная возможность");
	else if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы должны находится в транспорте!");
	{
		if(sscanf(params, "u", params[0])) return SendInf(playerid, "/clear [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(params[0] == playerid) return SendErr(playerid, "Вы не можете снять себе розыск!");
		else if(!p_info[params[0]][pWanted]) return SendErr(playerid, "Игрок должен находиться в розыске!");
		else if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendErr(playerid, "Игрок должен находиться с вами в транспорте!");
		SCMF(playerid, COLOR_LIGHTBLUE, "Вы сняли уровни розыска с %s'а", GetName(params[0]));
		SCMF(params[0], COLOR_LIGHTBLUE, "Офицер %s снял с вас уровни розыска", GetName(playerid));
		new string[128];
		format(string, sizeof(string), "Офицер %s зашел(ла) в базу данных полиции", GetName(playerid));
		MeAction(playerid, string);
		p_info[params[0]][pWanted] = 0;
		SetPlayerWantedLevel(params[0], 0);
		MysqlUpdatePlayerInt(params[0], "wanted", p_info[params[0]][pWanted]);
	}
	return 1;
}

cmd:aclear(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 2) return 1;
	{
		if(sscanf(params, "u", params[0])) return SendInf(playerid, "/clear [id игрока]");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(!p_info[params[0]][pWanted]) return SendErr(playerid, "Игрок должен находиться в розыске!");
		SCMF(playerid, COLOR_LIGHTBLUE, "Вы сняли уровни розыска с %s'а", GetName(params[0]));
		SCMF(params[0], COLOR_LIGHTBLUE, "Администратор %s снял с вас уровни розыска", GetName(playerid));
		p_info[params[0]][pWanted] = 0;
		SetPlayerWantedLevel(params[0], 0);
		MysqlUpdatePlayerInt(params[0], "wanted", p_info[params[0]][pWanted]);
	}
	return 1;
}

cmd:push(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна эта команда!");
	else if(GetPlayerState(playerid) != 2) return SendErr(playerid, "Вы должны быть в авто!");
	else if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/push [id игрока] [место(1-3)]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!ProxDetectorS(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами!");
	else if(IsPlayerInAnyVehicle(params[0])) return SendErr(playerid, "Игрок не должен находится в транспорте!");
	else if(pCuff[params[0]][pCuffer] == INVALID_PLAYER_ID) return SendErr(playerid, "Игрок не в наручниках!");
	else if(params[0] == playerid) return SendErr(playerid, "Вы не можете затащить в автомобиль самого себя!");
	else if(params[1] > 3 || params[1] < 1) return SendErr(playerid, "Количество мест от 1 до 3!");
	new string[90];
	{
		if(params[0] == playerid) return SendErr(playerid, "Вы не можете затащить в автомобиль самого себя!");
		PutPlayerInVehicle(params[0], GetPlayerVehicleID(playerid), params[1]);
		TogglePlayerControllable(params[0], 0);
		FreezePlayer1[params[0]] = true;
		if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "затащил в авто %s", GetName(params[0]));
		else format(string, sizeof(string), "затащила в авто %s", GetName(params[0]));
		MeAction(playerid, string);
	}
	return 1;
}

cmd:incar(playerid, params[])
{
	if(!IsAMafia(playerid)) return SendErr(playerid, "Вам недоступна эта команда!");
	else if(GetPlayerState(playerid) != 2) return SendErr(playerid, "Вы должны быть в авто!");
	else if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/incar [id игрока] [место(1-3)]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!ProxDetectorS(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами!");
	else if(IsPlayerInAnyVehicle(params[0])) return SendErr(playerid, "Игрок не должен находится в транспорте!");
	else if(params[0] == playerid) return SendErr(playerid, "Вы не можете затащить в автомобиль самого себя!");
	else if(!PlayerTied[params[0]]) return SendErr(playerid, "Игрок не связан!");
	else if(params[1] > 3 || params[1] < 1) return SendErr(playerid, "Количество мест от 1 до 3!");
	new string[90];
	{
		if(params[0] == playerid) return SendErr(playerid, "Вы не можете затащить в автомобиль самого себя!");
		PutPlayerInVehicle(params[0], GetPlayerVehicleID(playerid), params[1]);
		TogglePlayerControllable(params[0], 0);
		FreezePlayer1[params[0]] = true;
		if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "насильно затащил в авто %s", GetName(params[0]));
		else format(string, sizeof(string), "насильно затащила в авто %s", GetName(params[0]));
		MeAction(playerid, string);
	}
	return 1;
}

cmd:ram(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	new full = 0;
	for(new i = TOTALHOUSE; i > 0; i --)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz]))
		{
			SCMF(playerid, COLOR_LIGHTRED, "Вы выбили дверь дома (Владелец: %s)", HouseInfo[i][hOwner]);
			if(p_info[playerid][pSex] == 1) MeAction(playerid, "выбил дверь дома");
			else MeAction(playerid, "выбила дверь дома");
			LoadTexture(playerid);
			SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
			SetPlayerInterior(playerid,HouseInfo[i][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[i][hVirtual]);
			full++;
		}
	}
	if(full == 0) SendErr(playerid, "Вы должны находиться рядом с домом!");
	return 1;
}

cmd:lic(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/lic [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко");
	else if(GetPVarInt(params[0], "LicPlayer") == 1) return SendErr(playerid, "Игрок уже просматривает документы");
	
	lic_td_status ( params[0], true );

	new text[32];
	format(text, sizeof text, "%s", GetName(playerid));
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][26], text);

	new text1[32];
	format(text1, sizeof text1, "%d", p_info[playerid][pPhoneNumber]);
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][27], text1);

	new day, month, year, hour, minuite, second;
 	getdate(year, month, day);
 	gettime(hour, minuite, second);

	new text2[32];
	format(text2, sizeof text2, "%d.%d.%d", day, month, year);
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][30], text2);
	
	new rows;
	new fmt_query[90];
	new Cache: result;
	new car_text[11];
	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(!rows)
	{
	    car_text = "Нету";
	}
	else
	{
	    car_text = "Есть";
	}

	new text4[32];
	format(text4, sizeof text4, "%s", car_text);
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][31], text4);
	
	cache_delete(result);

	new text5[32];
	format(text5, sizeof text5, "%s %s %s %s", (!p_info[playerid][pLic][0]) ? ("-"):("A"), (!p_info[playerid][pLic][2]) ? ("-"):("C"), (!p_info[playerid][pLic][3]) ? ("-"):("О"), (!p_info[playerid][pLic][1]) ? ("-"):("К"));
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][32], text5);

	new text6[32];
	format(text6, sizeof text6, "%s", GetName(playerid));
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][33], text6);

	new string[80];
	format(string, sizeof(string), "показал(а) свои лицензии %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

CMD:showudost(playerid, params[])
{
	if(IsAMafia(playerid) || p_info[playerid][pMember] == 0) return SendErr(playerid, "Вы не из государственных структур");
    if(sscanf(params, "u", params[0])) return SendInf(playerid, "/showudost [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко");
	else if(GetPVarInt(params[0], "LicPlayer") == 1) return SendErr(playerid, "Игрок уже просматривает документы");

   	lic_td_status ( params[0], true );

    PlayerTextDrawSetString(params[0], LicPlayer[params[0]][21], "УДОСТОВЕРЕНИЕ");
    PlayerTextDrawSetString(params[0], LicPlayer[params[0]][23], "ДОЛЖ.");
    PlayerTextDrawSetString(params[0], LicPlayer[params[0]][24], "ВОЕННЫЙ БИЛ");
    PlayerTextDrawSetString(params[0], LicPlayer[params[0]][28], "ОРГ.");

	new text[32];
	format(text, sizeof text, "%s", GetName(playerid));
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][26], text);

	new text1[32];
	format(text1, sizeof text1, "%s", Fractions[p_info[playerid][pMember]][fractionName]);
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][27], text1);
	
	new day, month, year, hour, minuite, second;
 	getdate(year, month, day);
 	gettime(hour, minuite, second);
	
	new text2[32];
	format(text2, sizeof text2, "%d.%d.%d", day, month, year);
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][30], text2);
	
	new text4[32];
	format(text4, sizeof text4, "%s", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]));
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][31], text4);
	
	new text5[32];
	format(text5, sizeof text5, "%s", p_info[playerid][pVoennik] == 1 ? "Имеется" : "Нету");
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][32], text5);
	
	new text6[32];
	format(text6, sizeof text6, "%s", GetName(playerid));
	PlayerTextDrawSetString(params[0], LicPlayer[params[0]][33], text6);
	
	new string[80];
	format(string, sizeof(string), "показал(а) удостоверение %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

cmd:pass(playerid, params[])
{
	if(p_info[playerid][data_PASS] == 0) return SendErr(playerid, "У Вас нет паспорта");
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/pass [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	else if(GetPVarInt(params[0], "showpass") == 1) return SendErr(playerid, "Игроку уже показывают паспорт");

	SetPVarInt(params[0], "showpass", 1);
	
	new info_text[256], wanted_text[32], name_text[64], s_n_text[50], string[60];

    SelectTextDraw(params[0], 0xddddddff);

	TextDrawShowForPlayer(params[0], passport_text[0]);TextDrawShowForPlayer(params[0], passport_text[1]);TextDrawShowForPlayer(params[0], passport_text[2]);TextDrawShowForPlayer(params[0], passport_text[4]);TextDrawShowForPlayer(params[0], passport_text[5]);
	TextDrawShowForPlayer(params[0], passport_text[6]);TextDrawShowForPlayer(params[0], passport_text[7]); TextDrawShowForPlayer(params[0], passport_text[9]);TextDrawShowForPlayer(params[0], passport_text[10]);TextDrawShowForPlayer(params[0], passport_text[11]);
	TextDrawShowForPlayer(params[0], passport_text[12]);TextDrawShowForPlayer(params[0], passport_text[13]);

	PlayerTextDrawShow(params[0], passport_name[playerid]);
 	PlayerTextDrawShow(params[0], passport_sex[playerid]);
  	PlayerTextDrawShow(params[0], passport_s_n[playerid]);
   	PlayerTextDrawShow(params[0], passport_info[playerid]);

	if(p_info[playerid][pSex] == 1) PlayerTextDrawSetString(params[0], passport_sex[playerid], "M"), TextDrawShowForPlayer(params[0], passport_text[3]);
	else PlayerTextDrawSetString(params[0], passport_sex[playerid], "„"), TextDrawShowForPlayer(params[0], passport_text[8]);

	if(p_info[playerid][pWanted] > 0) wanted_text = "~r~…MEE¦C•";
	else wanted_text = "~g~®E …MEE¦C•";

	format(s_n_text, sizeof s_n_text, "~w~%d  %d", p_info[playerid][data_PASS_S], p_info[playerid][data_PASS_N]);
	PlayerTextDrawSetString(params[0], passport_s_n[playerid], s_n_text);

	format(name_text, sizeof name_text, "Ѓ.….O~n~%s", p_info[playerid][pName]);
	PlayerTextDrawSetString(params[0], passport_name[playerid], name_text);

 	format(info_text, sizeof info_text,"\
	~w~‹O€PAC¦: %d ‡E¦\
	~n~MEC¦O PA—O¦‘: %s\
	~n~PO€‘CK: %s\
	~n~~w~ѓA¦A ‹‘ѓAЌ…: %s",
	p_info[playerid][pAge],
	Fractions[p_info[playerid][pMember]][fractionName],
	wanted_text,
	p_info[playerid][data_PASS_DATE]);
	PlayerTextDrawSetString(params[0], passport_info[playerid], info_text);
	
	if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "показал свой паспорт %s", GetName(params[0]));
	else format(string, sizeof(string), "показалa свой паспорт %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

cmd:med(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/med [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	new med_status[25], gender_text[8];
	switch(PhoneNumbers[playerid][2])
	{
	case 0: return SendErr(playerid, "У вас нет мед. карты");
	case 1: med_status = "не определен";
	case 2: med_status = "психически не здоров(-а)";
	case 3: med_status = "наблюдаются отклонения";
	case 4: med_status = "полностью здоровый(-ая)";
	}
	if(p_info[playerid][pSex] == 1) gender_text = "Мужчина";
	else if(p_info[playerid][pSex] == 2) gender_text = "Женщина";
	new string[64], string_dialogue[300];
	strcat(string_dialogue, "{FFFFFF}");
	format(string, sizeof(string), "Имя: %s\n", GetName(playerid));
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Возраст: %d\n", p_info[playerid][pAge]);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Пол: %s\n", gender_text);
	strcat(string_dialogue, string);
	format(string, sizeof(string), "Статус: %s\n", med_status);
	strcat(string_dialogue, string);
	ShowPlayerDialogEx(params[0], D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Мед. карта", string_dialogue, "Закрыть", "");
	if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "показал свою мед. карту %s", GetName(params[0]));
	else format(string, sizeof(string), "показалa свою мед. карту %s", GetName(params[0]));
	MeAction(playerid, string);
	return 1;
}

cmd:eject(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Вы должны находится в транспорте!");
	else if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendErr(playerid, "Вы должны находиться за рулем транспорт!");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/eject [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(playerid == params[0]) return SendErr(playerid, "Ты не можешь выкинуть себя!");
	else if(!IsPlayerInVehicle(params[0],GetPlayerVehicleID(playerid))) return SendErr(playerid, "Игрок должен находиться в вашем транспорте!");
	SCMF(playerid, COLOR_LIGHTBLUE, "Вы выкинули из транспорта %s", GetName(params[0]));
	SCMF(params[0], COLOR_LIGHTBLUE, "%s выкинул вас из транспорта", GetName(playerid));
	FreezePlayer1[params[0]] = false;
	TogglePlayerControllable(params[0], 1);
	new string[100];
	format(string, sizeof(string), "выкинул из транспорта %s", GetName(params[0]));
	MeAction(playerid, string);
	RemovePlayerFromVehicle(params[0]);
	return 1;
}

cmd:payday(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] > 8)
	{
		if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
		PayDay();
	}
	return 1;
}

cmd:pay(playerid, params[])
{
	if(GetPVarInt(playerid, "payer") > gettime()) return SendErr(playerid, "Передавать деньги можно раз в минуту");
	else if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для передачи денег нужно отыграть 3 часа");
	else if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/pay [id игрока] [сумма]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(params[0] == playerid) return SendErr(playerid, "Нельзя передавать деньги самому себе");
	else if(!ProxDetectorS(3.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	else if(params[1] < 1 || GetMoney(playerid) < params[1]) return SendErr(playerid, "У вас не хватает денег!");
	else if(params[1] < 1 || params[1] > 100000) return SendErr(playerid, "Игроки могут передавать только по 100.000 рублей");
	GiveMoney(playerid, -params[1], "/pay");
	GiveMoney(params[0], params[1], "/pay");
	
	format(STRING_GLOBAL, 144, "%s [%d] передал(а) Вам {f0e86b}%d{FFFFFF} рублей", GetName(playerid), playerid, params[1]);
	SendInf(params[0], STRING_GLOBAL);

	format(STRING_GLOBAL,144,"Вы передали %s [%d] {f0e86b}%d{FFFFFF} рублей", GetName(params[0]), params[0], params[1]);
	SendInf(playerid, STRING_GLOBAL);
	
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "передал(а) деньги %s", GetName(params[0]));
	SetPlayerChatBubble(playerid, STRING_GLOBAL, COLOR_PURPLE, 10.0, 10000);

	ApplyAnimation(playerid, "DEALER", "shop_pay", 4.1, 0, 1, 1, 0, 0, 1);
	if(!p_info[playerid][pAdmin])
	{
		SetPVarInt(playerid, "payer", gettime()+60);
	}
	return 1;
}

cmd:healdrugs(playerid, params[])
{
	if(!IsAMedic(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	if(IsPlayerInRangeOfPoint(playerid, 70.0, 2466.0825, -2140.7622, 634.2466) && IsAMedic(playerid))
	{
		if(sscanf(params, "u", params[0])) return SendInf(playerid, "/healdrugs [id игрока]");
		else if(!Medicines[playerid]) return SendErr(playerid, "У вас нет с собой медикаментов");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко");
		new Float:shealth;
		GetPlayerHealth(params[0], shealth);
		if(shealth >= 100.0) return SendErr(playerid, "Данный игрок здоров");
		SCMF(playerid, COLOR_BLUE, "Вы предложили %s вылечиться за %iр", GetName(params[0]), WorkSalary[21]);
		SCMF(params[0], COLOR_BLUE, "%s %s предложил Вам вылечиться за %iр", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), WorkSalary[21]);
		SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
		SetPVarInt(params[0], "PlayerHeal1", playerid);
		SetPVarInt(params[0], "MoneyHeal1", WorkSalary[21]);
		SetPVarInt(params[0], "KeyHeal1", 1);
	}
	return 1;
}

cmd:heal(playerid, params[])
{
	if(!IsAMedic(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	if(IsPlayerInRangeOfPoint(playerid, 70.0, 2466.0825, -2140.7622, 634.2466) && IsAMedic(playerid))
	{
		if(sscanf(params, "u", params[0])) return SendInf(playerid, "/heal [id игрока]");
		else if(!Medicines[playerid]) return SendErr(playerid, "У вас нет с собой медикаментов");
		else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
		else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
		else if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко");
		new Float:shealth;
		GetPlayerHealth(params[0], shealth);
		if(shealth >= 100.0) return SendErr(playerid, "Данный игрок здоров");
		SCMF(playerid, COLOR_BLUE, "Вы предложили %s вылечиться за %iр", GetName(params[0]), WorkSalary[21]);
		SCMF(params[0], COLOR_BLUE, "%s %s предложил Вам вылечиться за %iр", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), WorkSalary[21]);
		SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
		SetPVarInt(params[0], "PlayerHeal", playerid);
		SetPVarInt(params[0], "MoneyHeal", WorkSalary[21]);
		SetPVarInt(params[0], "KeyHeal", 1);
		if(PlayerDied[params[0]] == true)
		{
			p_info[params[0]][pCity] = 0;
			PlayerDied[params[0]] = false;
			MysqlUpdatePlayerInt(params[0], "city", p_info[params[0]][pCity]);
		}
	}
	else if(IsPlayerInAnyVehicle(playerid))
	{
		new vehid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehid) != 416 || GetVehicleModel(vehid) != 563)
		{
			if(sscanf(params, "u", params[0])) return SendInf(playerid, "/heal [id игрока]");
			else if(!Medicines[playerid]) return SendErr(playerid, "У вас нет с собой медикаментов");
			else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
			else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
			else if(playerid == params[0]) return SendErr(playerid, "Вы не можете вылечить себя");
			else if(!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendErr(playerid, "Игрок должен находиться с вами в транспорте");
			new Float:shealth;
			GetPlayerHealth(params[0], shealth);
			if(shealth >= 100.0) return SendErr(playerid, "Данный игрок здоров");
			SCMF(playerid, COLOR_BLUE, "Вы предложили вылечить %s за %iр", GetName(params[0]), WorkSalary[21]);
			SCMF(params[0], COLOR_BLUE, "%s %s предложил Вам вылечиться за %iр", GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), WorkSalary[21]);
   			SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
			SetPVarInt(params[0], "PlayerHeal", playerid);
			SetPVarInt(params[0], "MoneyHeal", WorkSalary[21]);
			SetPVarInt(params[0], "KeyHeal", 1);
		}
		else SendErr(playerid, "Вы должны находиться в специализированном транспорте");
	}
	return 1;
}

cmd:healing(playerid, params[])
{
	new full = 0;
	for(new i = TOTALHOUSE; i > 0; i --)
	{
		if(IsPlayerInRangeOfPoint(playerid, 60.0, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
		{
			if(HouseInfo[i][hVirtual] == GetPlayerVirtualWorld(playerid))
			{
				if(HouseInfo[i][hHeal] == 0) return SendErr(playerid, "В доме нет аптечек!");
				new Float:shealth;
				GetPlayerHealth(playerid, shealth);
				if(shealth >= 100) return SendErr(playerid, "Вы не нуждаетесь в лечении!");
				HouseInfo[i][hHeal]--;
				MysqlUpdateHouseInt(i, "hHeal", HouseInfo[i][hHeal]);
				SetHealth(playerid, shealth+25);
				GetPlayerHealth(playerid, shealth);
				if(shealth > 100) SetHealth(playerid, 100);
				SCMF(playerid, COLOR_BLUE, "Вы использовали 1 аптечку. Осталось %i аптечек", HouseInfo[i][hHeal]);
				MeAction(playerid, "использовал аптечку");
				full++;
			}
		}
	}
	if(full == 0) SendErr(playerid, "Вы должны находиться в доме!");
	return 1;
}

cmd:afk(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 1) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new list,full,str[100];
	foreach(new i: Player)
	{
		if(p_info[i][pAFK] >= 3) list++;
	}
	STRING_GLOBAL[0] = EOS;
	format(str,sizeof(str),"{FF6347}Всего в AFK - %i игрок(ов)\n\n",list);
	strcat(STRING_GLOBAL, str);
	foreach(new i: Player)
	{
		if(p_info[i][pAFK] >= 3)
		{
			format(str,sizeof(str),"{ffffff}%s[%i] - {FF6347}AFK: %s\n",GetName(i), i, Converts(p_info[i][pAFK]));
			strcat(STRING_GLOBAL, str);
			full++;
		}
	}
	if(full == 0) strcat(STRING_GLOBAL, "{ffffff}Информация не найдена");
	ShowPlayerDialogEx(playerid,D_NULL,DIALOG_STYLE_MSGBOX, "{ebec86}>> AFK", STRING_GLOBAL, "Принять", "");
	return 1;
}

cmd:wanted(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная возможность");
	new full, str[150], line_string[128];

	STRING_GLOBAL[0] = EOS;
	foreach(new i: Player)
	{
		if(p_info[i][pWanted] > 0)
		{
		    format ( line_string, 12, "player_%d", full ) ;
			SetPVarInt ( playerid, line_string, i ) ;
			
			format(str,sizeof(str),"{ffff00}%s - {ffffff}Звезд: {ffff00}%i, {ffffff}причина: {ffff00}%s, {ffffff}доложил: {ffff00}%s\n",GetName(i), p_info[i][pWanted], p_info[i][pWantedReason], p_info[i][pWantedWho]);
			strcat(STRING_GLOBAL, str);
			full++;
		}
	}
	if(full == 0) return SendErr(playerid, "В данный момент список розыска пуст");
	ShowPlayerDialogEx(playerid, D_WANTED, DIALOG_STYLE_LIST, "{ebec86}>> Внимание, в розыске", STRING_GLOBAL, "Найти", "Закрыть");
	return 1;
}

cmd:wedding(playerid, params[])
{
	if(p_info[playerid][pMarried] == 1) return SendErr(playerid, "Вы уже связаны узами брака!");
	else if(!IsPlayerInRangeOfPoint(playerid,5.0,105.0641,2895.8247,1010.6396)) return SendErr(playerid, "Вы должны находиться у ЗАГС'а!");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/wedding [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(playerid == params[0]) return SendErr(playerid, "Ты не можешь заключить брак сам с собой!");
	else if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	else if(p_info[params[0]][pMarried] == 1) return SendErr(playerid, "Игрок уже связан узами брака!");
	new string[128];
	format(string, sizeof(string), "Вы предложили %s заключить брачный договор", GetName(params[0]));
	SendClientMessage(playerid, COLOR_BLUE, string);
	if(p_info[playerid][pSex] == 1)
	{
		format(string, sizeof(string), "%s предложил Вам заключить брачный договор", GetName(playerid));
		SendClientMessage(params[0], COLOR_BLUE, string);
		format(string, sizeof(string), "{FFFFFF}%s предложил Вам заключить брачный договор\n\nВы согласны?", GetName(playerid));
		ShowPlayerDialogEx(params[0], D_HEAL+19, 0, "{FF6666}Свадьба", string, "Да", "Нет");
	}
	else
	{
		format(string, sizeof(string), "%s предложила Вам заключить брачный договор", GetName(playerid));
		SendClientMessage(params[0], COLOR_BLUE, string);
		format(string, sizeof(string), "{FFFFFF}%s предложила Вам заключить брачный договоре\n\nВы согласны?", GetName(playerid));
		ShowPlayerDialogEx(params[0], D_HEAL+19, 0, "{FF6666}Свадьба", string, "Да", "Нет");
	}
	SetPVarInt(params[0], "PlayerMarriage", playerid);
	return 1;
}

cmd:divorce(playerid, params[])
{
	if(p_info[playerid][pMarried] == 0) return SendErr(playerid, "Вы не связаны узами брака!");
	else if(!IsPlayerInRangeOfPoint(playerid, 5.0,105.0641,2895.8247,1010.6396)) return SendErr(playerid, "Вы должны находиться у церкви!");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/divorce [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(playerid == params[0]) return SendErr(playerid, "Ты не можешь разорвать брак сам с собой!");
	else if(!IsPlayerInRangeOfPlayer(5.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	if(!strcmp(GetName(params[0]), p_info[playerid][pWhoMarried], true))
	{
		new string[128];
		format(string, sizeof(string), "Вы предложили %s развестись", GetName(params[0]));
		SendClientMessage(playerid, COLOR_BLUE, string);
		if(p_info[playerid][pSex] == 1)
		{
			format(string, sizeof(string), "%s предложил Вам развестись", GetName(playerid));
			SendClientMessage(params[0], COLOR_BLUE, string);
			format(string, sizeof(string), "{FFFFFF}%s предложил Вам развестись\n\nВы согласны?", GetName(playerid));
			ShowPlayerDialogEx(params[0], D_HEAL+20, 0, "{FF6347}Развод", string, "Да", "Нет");
		}
		else
		{
			format(string, sizeof(string), "%s предложила Вам развестись", GetName(playerid));
			SendClientMessage(params[0], COLOR_BLUE, string);
			format(string, sizeof(string), "{FFFFFF}%s предложила Вам развестись\n\nВы согласны?", GetName(playerid));
			ShowPlayerDialogEx(params[0], D_HEAL+20, 0, "{FF6347}Развод", string, "Да", "Нет");
		}
		SetPVarInt(params[0], "PlayerMarriage", playerid);
	}
	else SendErr(playerid, "Игрок не связам узами брака с вами!");
	return 1;
}

cmd:donate(playerid)
{
	new fmt_msg[60], fmt_dialog[sizeof(fmt_msg)*10];
	if(doubling_donate)
	{
		format(fmt_msg, sizeof fmt_msg, "{3399FF}1. Информация\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "{3399FF}2. Проверить зачисления\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "3. Получение игровой валюты \t(X2)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "4. Снятие предупреждения\t\t(150 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "5. Смена игрового Nick_Name\t\t(150 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "6. Покупка игровых привелегий\t(от 150 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "7. Покупка военного билета\t\t(150 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "8. Покупка #3 слота для транспорта\t(500 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "9. Покупка VIP номеров\t\t(1000 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);
		
		format(fmt_msg, sizeof fmt_msg, "10. Услуги для дома\t\t\t(500 кредитов)");
		strcat(fmt_dialog, fmt_msg);
	}
	else
	{
		format(fmt_msg, sizeof fmt_msg, "{3399FF}1. Информация\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "{3399FF}2. Проверить зачисления\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "3. Получение игровой валюты\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "4. Снятие предупреждения\t\t(150 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "5. Смена игрового Nick_Name\t\t(150 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "6. Покупка игровых привелегий\t(от 150 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "7. Покупка военного билета\t\t(150 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "8. Покупка #3 слота для транспорта\t(500 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);

		format(fmt_msg, sizeof fmt_msg, "9. Покупка VIP номеров\t\t(1000 кредитов)\n");
		strcat(fmt_dialog, fmt_msg);
		
		format(fmt_msg, sizeof fmt_msg, "10. Услуги для дома\t\t\t(500 кредитов)");
		strcat(fmt_dialog, fmt_msg);
	}

	ShowPlayerDialogEx
	(
	playerid, D_DONATE, DIALOG_STYLE_LIST,
	"{ebec86}>> Дополнительно",
	fmt_dialog,
	"Далее", "Назад"
	);

	return 1;
}

cmd:adivorce(playerid, params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 3) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/adivorce [id игрока]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(p_info[params[0]][pMarried] == 0) return SendErr(playerid, "Игрок не связан узами брака!");
	new targetid;
	sscanf(p_info[params[0]][pWhoMarried], "u", targetid);
	if(IsPlayerConnected(targetid))
	{
		SCMF(targetid, COLOR_GREEN, "Администратор %s развел тебя с %s", GetName(playerid), p_info[targetid][pWhoMarried]);
		strmid(p_info[targetid][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
		p_info[targetid][pMarried] = 0;
		MysqlUpdatePlayerInt(targetid, "married", p_info[targetid][pMarried]);
		MysqlUpdatePlayerStr(targetid, "whomarried", p_info[targetid][pWhoMarried]);
	}
	else
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'",p_info[params[0]][pWhoMarried]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "OnPlayerDivorce", "i", params[0]);
	}
	SCMF(playerid, COLOR_LIME, "Вы развели игрока %s и %s", GetName(params[0]), p_info[params[0]][pWhoMarried]);
	SCMF(params[0], COLOR_GREEN, "Администратор %s развел тебя с %s", GetName(playerid), p_info[targetid][pWhoMarried]);
	strmid(p_info[params[0]][pWhoMarried], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	p_info[params[0]][pMarried] = 0;
	MysqlUpdatePlayerInt(params[0], "married", p_info[params[0]][pMarried]);
	MysqlUpdatePlayerStr(params[0], "whomarried", p_info[params[0]][pWhoMarried]);
	return 1;
}

forward OnPlayerDivorce(targetid);
public OnPlayerDivorce(targetid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET married = 0, whomarried = None WHERE name = '%s'",p_info[targetid][pWhoMarried]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	return 1;
}

cmd:anim(playerid, params[]) return callcmd::animlist(playerid, params);
cmd:animlist(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Анимации нельзя использовать в транспорте");
    
	if(!strlen(params))
	{
		ShowPlayerDialogEx
		(
			playerid, D_JOB+136, DIALOG_STYLE_LIST,
			"{ebec86}>> Анимации",
			anim_list_items,
			"Выбрать", "Закрыть"
		);
	}
	else
	{
		extract params -> new anim_id;

		if(!SetPlayerAnimation(playerid, anim_id-1))
			return SendInf(playerid, "/anim(list) [номер анимации из списка]");
	}
	return 1;
}

cmd:kiss(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/kiss [id игрока]");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Вы не можете поцеловать самомого себе!");
	if(!IsPlayerInRangeOfPlayer(2.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	new Float:angle, string[64];
	GetPlayerFacingAngle(playerid, angle);
	SetPlayerFacingAngle(params[0], angle + 180);
	format(string, sizeof(string), "поцеловал %s", GetName(params[0]));
	MeAction(playerid, string);
	if(!IsPlayerInAnyVehicle(playerid))ApplyAnimation(playerid,"BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
	if(!IsPlayerInAnyVehicle(params[0])) ApplyAnimation(params[0],"BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0,1);
	return 1;
}

cmd:hi(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/hi [id игрока]");
	if(params[0] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Вы не можете пожать руку самому себе!");
	if(!IsPlayerInRangeOfPlayer(2.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	new Float:angle, string[64];
	GetPlayerFacingAngle(playerid, angle);
	SetPlayerFacingAngle(params[0], angle + 180);
	format(string, sizeof(string), "пожал руку %s", GetName(params[0]));
	MeAction(playerid, string);
	if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);
	if(!IsPlayerInAnyVehicle(params[0])) ApplyAnimation(params[0],"GANGS","hndshkfa",4.0,0,0,0,0,0);
	return 1;
}

cmd:usedrugs(playerid)
{
    if(DrugEffect[playerid] >= 1) return  SendErr(playerid, "Вы употребляете наркотик слишком часто");
	if(IsPlayerInRangeOfPoint(playerid,100.0,645.9722,-339.3981,-94.7852)) return SendErr(playerid, "В больнице опасно принимать наркотики");
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==44){ok=s;break;}
	}
	if(ok==0){return SendErr(playerid, "У вас нет наркотиков");}
	new Float:health;
	GetPlayerHealth(playerid, health);
	SetHealth(playerid, health+20);
	GetPlayerHealth(playerid, health);
	if(health > 120) return SendErr(playerid, "Вам плохо от наркотиков, пожалуйста подождите");
	if(PlayerItem2[playerid][ok] == 0)
	{
		PlayerItem1[playerid][ok]=0;
	}
	PlayerItem2[playerid][ok]--;
	
	ApplyAnimation(playerid,"GANGS","smkcig_prtl_F",4.0,0,1,1,1,1);
	SetPlayerTime(playerid,17,0);
	SetPlayerDrunkLevel(playerid, 3000);
	SetPlayerWeather(playerid, -68);
	DrugEffect[playerid] = 60;
	
	startnarko[playerid] = 0;
	send[playerid] = 0;
	
	p_info[playerid][Disease][2] += random(30);
	MysqlUpdatePlayerInt(playerid, "Disease2", p_info[playerid][Disease][2]);
	return 1;
}

cmd:usezezl(playerid)
{
	new ok=0;
	for(new s = 16; s > 0; s --)
	{
		if(PlayerItem1[playerid][s]==43){ok=s;break;}
	}
	if(ok==0){return SendErr(playerid, "У вас нет жезла!");}
	if(!rodEnable[playerid])
	{
		SetPlayerAttachedObject(playerid, 1, 1214, 6,-0.040454, 0.028840, -0.012862,2.521301, 76.277267, 70.163467,0.300000, 0.300000, 0.500000);
		ApplyAnimation(playerid, "PED", "Driveby_R", 4.1, 0, 1, 1, 1, 1, 1);
		rodEnable[playerid] = 1;
		rodRaised[playerid] = 1;
	}
	else if(rodEnable[playerid])
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		if(rodRaised[playerid]) ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);
		rodEnable[playerid] = 0;
		rodRaised[playerid] = 0;
	}
	return 1;
}

cmd:load(playerid)
{
	if(!IsAArmy(playerid) && !IsAMafia(playerid)) return SendErr(playerid, "Вам недоступна данная функция");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]) return SendErr(playerid, "Авто уже стоит на загрузке / разгрузке");
		gVehicleGun[vehicleid][vGunLoading] = true;
		RemovePlayerFromVehicle(playerid);
		new Float:x, Float:y, Float:z, Float:a;
		GetVehiclePos(vehicleid, x, y, z);
		GetVehicleZAngle(vehicleid, a);
		switch(GetVehicleModel(vehicleid))
		{
			case 433:
			{
				x = x - (-4.5*floatsin(a, degrees));
				y = y - 5.5*floatcos(a, degrees);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(3013, 1, x, y, z-0.5, -1); //Пикап грузовиков
			}
			case 400,404,436,466,475,489,492,579,482:
			{
				x = x - (-3.0*floatsin(a, degrees));
				y = y - 3.5*floatcos(a, degrees);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(3013, 1, x, y, z-0.2, -1); //Пикап для легковых авто
			}
			default: SendErr(playerid, "Вы должны быть в машине предназначенной для загрузки");
		}
		new string[160];
		if(IsAMafia(playerid))
		{
			format(string, sizeof(string),"{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков\n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} пакетов", gVehicleGun[vehicleid][vGunAmmo], gVehicleGun[vehicleid][vGunNarko]);
		}
		else
		{
			format(string, sizeof(string),"{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков", gVehicleGun[vehicleid][vGunAmmo]);
		}
		gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y, z+0.8, 20.0);
		gVehicleGun[vehicleid][vGunArea] = CreateDynamicSphere(x, y, z, 1.0);
		Itter_Add(VehicleGun, vehicleid);
		SendClientMessage(playerid, COLOR_GREEN, "Загрузка началась");
	}
	return 1;
}

cmd:unload(playerid)
{
	if(!IsAArmy(playerid) && !IsAMafia(playerid)) return SendErr(playerid, "Вам недоступна данная функция");
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(gVehicleGun[vehicleid][vGunLoading] || gVehicleGun[vehicleid][vGunUnloading]) return SendErr(playerid, "Авто уже стоит на загрузке / разгрузке");
		gVehicleGun[vehicleid][vGunUnloading] = true;
		RemovePlayerFromVehicle(playerid);
		new Float:x, Float:y, Float:z, Float:a;
		GetVehiclePos(vehicleid, x, y, z);
		GetVehicleZAngle(vehicleid, a);
		switch(GetVehicleModel(vehicleid))
		{
			case 433:
			{
				x = x - (-6.0*floatsin(a, degrees));
				y = y - 5.5*floatcos(a, degrees);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133, 1, x, y, z-0.5, -1); //Пикап грузовиков
			}
			case 400,404,436,466,475,489,492,579,482:
			{
				x = x - (-3.0*floatsin(a, degrees));
				y = y - 3.5*floatcos(a, degrees);
				gVehicleGun[vehicleid][vGunPickup] = CreateDynamicPickup(19133, 1, x, y, z-0.2, -1); //Пикап для легковых авто
			}
			default: SendErr(playerid, "Вы должны быть в машине предназначенной для загрузки!");
		}
		new string[160];
		if(IsAMafia(playerid))
		{
			format(string, sizeof(string),"{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков\n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} пакетов", gVehicleGun[vehicleid][vGunAmmo], gVehicleGun[vehicleid][vGunNarko]);
		}
		else
		{
			format(string, sizeof(string),"{f0f0f0}Загрузка: \n"cBLUE"%d{f0f0f0} из "cBLUE" 20{f0f0f0} ящиков", gVehicleGun[vehicleid][vGunAmmo]);
		}
		gVehicleGun[vehicleid][vGunText] = CreateDynamic3DTextLabel(string, 0xFFFFFFFF, x, y, z+0.8, 20.0);
		gVehicleGun[vehicleid][vGunArea] = CreateDynamicSphere(x, y, z, 1.0);
		Itter_Add(VehicleGun, vehicleid);
		SendClientMessage(playerid, COLOR_GREEN, "Разгрузка началась");
	}
	return 1;
}

cmd:giveflowers(playerid, params[])
{
	if(!HaveWeapon(playerid, 14)) return SendErr(playerid, "У вас нет цветов!");
	else if(sscanf(params, "u", params[0])) return SendInf(playerid, "/giveflowers [id игрока]");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко!");
	else if(params[0] == playerid) return SendErr(playerid, "Самому себе нельзя передавать!");
	else if(HaveWeapon(params[0], 14)) return SendErr(playerid, "У игрока уже есть цветы!");
	RemovePlayerWeapon(playerid, 14);
	AC_GivePlayerWeapon(params[0], 14, 1);
	new string[128];
	format(string, sizeof(string), "передал цветы %s", GetName(params[0]));
	MeAction(playerid, string);
	format(string, sizeof(string), "Вы передали %s цветы", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "%s передал Вам цветы", GetName(playerid), params[1]);
	SendClientMessage(params[0], COLOR_WHITE, string);
	return 1;
}

cmd:sellsim(playerid, params[])
{
    if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи нужно отыграть 3 часа");
	if(p_info[playerid][pPhoneNumber] <= 1) return SendErr(playerid, "У вас нет SIM-карты");
	else if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/sellsim [id игрока] [цена]");
	else if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Игрок не в игре");
	else if(PlayerLogged[params[0]] == false) return SendErr(playerid, "Игрок не авторизован");
	else if(playerid == params[0]) return SendErr(playerid, "Самому себе нельзя продавать SIM-карту");
	else if(!IsPlayerInRangeOfPlayer(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко");
	else if(params[1] < 1 || params[1] > 1000000) return SendErr(playerid, "Цена должна быть от 1 рубля до 1.000.000 рублей");
	new string[144];
	format(string, sizeof(string), "Вы предложили %s купить SIM-карту. Цена: %iр", GetName(params[0]), params[1]);
	SendClientMessage(playerid, COLOR_BLUE, string);
	format(string, sizeof(string), "%s предложил Вам купить SIM-карту. Цена: %iр", GetName(playerid), params[1]);
	SendClientMessage(params[0], COLOR_BLUE, string);
 	SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
	SetPVarInt(params[0], "KeySim", 1);
	SetPVarInt(params[0], "PlayerSim", playerid);
	SetPVarInt(params[0], "SimPrice", params[1]);
	return 1;
}

cmd:rt(playerid,params[])
{
	if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши админ-действия на сервере заблокированы");
	if(p_info[playerid][pAdmin] < 6) return 1;
	else if(AdminLogged[playerid] == false) return SendErr(playerid, "Вы не авторизованы. Используйте {FFCC00}/alogin");
	new Float:px,Float:py,Float:pz,string[128];
	if(sscanf(params,"p<,>fff",px,py,pz)) return SendClientMessage(playerid, 0xFFFFFFAA, "{9ACD32}Введите: {FFFFFF} /rt <x,y,z>");
	SetPlayerPos(playerid,px,py,pz);
	format(string, sizeof(string), "Вы были телепортированны на указанные вами координаты: %f, %f, %f",px,py,pz);
	SendClientMessage(playerid, 0xFFFFFFAA, string);
	return 1;
}

stock ProxDetectorS(Float:radi, playerid, targetid)
{
	if(!IsPlayerConnected(targetid)) return 0;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(targetid, X, Y, Z);
	return PlayerToPoint(radi, playerid, X, Y, Z);
}

forward GameModeExitDelay();
public GameModeExitDelay()
{
	GameModeExit();
}

stock GetNearestVehicle(playerid)
{
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		if(GetVehicleModel(i))
		{
			new Float:Xx, Float:Yy, Float:Zz;
			GetVehiclePos(i, Xx, Yy, Zz);
			if(PlayerToPoint(8.0, playerid, Xx, Yy, Zz)) return i;
		}
	}
	return 1;
}

stock PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if(GetPVarInt(playerid, "ChoiceBattleZone") != 0)
	{
	    if(MafiaBattleZoneID != 0)
		{
			GangZoneDestroy(MafiaBattleZoneID );
			MafiaBattleZoneID  = 0;
		}
	    MafiaBattleZoneID = GangZoneCreate(fX+100, fY+100, fX-100, fY-100);
	    MafiaBattleZone[0] = fX+100;
	    MafiaBattleZone[1] = fY+100;
	    MafiaBattleZone[2] = fX-100;
	    MafiaBattleZone[3] = fY-100;
		SetPVarInt(playerid, "ChoiceBattleZone", 2);
	}
	if(GetPVarInt(playerid, "ChoiceTaxiMap") == 1)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(IsATaxi(carid))
	    {
	     	foreach(new i: Player)
	     	{
		     	if(IsPlayerInAnyVehicle(i) && IsPlayerInVehicle(playerid, GetPlayerVehicleID(i)))
				{
			     	if(p_info[i][pJob] == JOB_TAXI)
					{
		   				GPSPlayer_(i, fX, fY, fZ, "Такси");
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s выбрал(а) пункт назначения. Он отмечен на карте", GetName(playerid));
						SendInf(i, STRING_GLOBAL);
						SendInf(playerid, "Вы выбрали пункт назначения");
						DeletePVar(playerid, "ChoiceTaxiMap");
						return 1;
					}
				}
			}
		}
	}
	return 1;
}

stock UpDateInv(playerid)
{
	PlayerVesItem[playerid]=0;
	for(new i = 16; i > 0; i --)
	{
		if(PlayerItem1[playerid][i]>0)
		{
			PlayerVesItem[playerid]+=Item[PlayerItem1[playerid][i]][iGG]*PlayerItem2[playerid][i];
		}
	}
}

stock CheckMaxVes(playerid,id,kol,&newslot=0)
{
	UpDateInv(playerid);
	new stek=0;
	if(Item[id][iStek]==1)
	{
		for(new s = 16; s > 0; s --)
		{
			if(PlayerItem1[playerid][s]==id){newslot=s;stek=1;break;}
		}
		if(stek==0)
		{
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==0){newslot=s;stek=1;break;}
			}
		}
	}
	else
	{
		for(new s = 16; s > 0; s --)
		{
			if(PlayerItem1[playerid][s]==0){newslot=s;stek=1;break;}
		}
	}
	if(stek==0){return SendErr(playerid, "У вас не хватает свободных слотов в сумке! (( Нужен 1 свободный слот))");}
	new ves=PlayerVesItem[playerid];
	ves+=Item[id][iGG]*kol;
	if(p_info[playerid][pSprunk]<ves)
	{
		new string[200];
		format(string,sizeof(string),"У вас не хватает места в сумке! (( Нужно еще %i гр. свободного места ))",p_info[playerid][pSprunk]-(Item[id][iGG]*kol));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}
	return 0;
}

stock OnPlayerUseItem(playerid,list)
{
	new string[128];
	new Float:p[3];
	GetPlayerPos(playerid,p[0],p[1],p[2]);
	new id=PlayerItem1[playerid][list];
	if(PlayerItem1[playerid][list]<=0)return SendErr(playerid, "Предмет не найден!");
	switch(id)
	{
	case 1:return AC_GivePlayerWeapon(playerid,1,1);
	case 2:return AC_GivePlayerWeapon(playerid,2,1);
	case 3:return AC_GivePlayerWeapon(playerid,3,1);
	case 4:return AC_GivePlayerWeapon(playerid,4,1);
	case 5:return AC_GivePlayerWeapon(playerid,5,1);
	case 6:return AC_GivePlayerWeapon(playerid,6,1);
	case 7:return AC_GivePlayerWeapon(playerid,7,1);
	case 8:return AC_GivePlayerWeapon(playerid,8,1);
	case 9:return AC_GivePlayerWeapon(playerid,9,1);
	case 10:return AC_GivePlayerWeapon(playerid,10,1);
	case 11:return AC_GivePlayerWeapon(playerid,11,1);
	case 12:return AC_GivePlayerWeapon(playerid,12,1);
	case 13:return AC_GivePlayerWeapon(playerid,13,1);
	case 14:return AC_GivePlayerWeapon(playerid,14,1);
	case 15:return AC_GivePlayerWeapon(playerid,15,1);
	case 16:return AC_GivePlayerWeapon(playerid,16,1);
	case 17:return AC_GivePlayerWeapon(playerid,17,1);
	case 18:return AC_GivePlayerWeapon(playerid,18,1);
	case 19..35:{return ShowPlayerDialogEx(playerid,D_INVENT,DIALOG_STYLE_INPUT, "{ebec86}>> Зарядить оружие", "Введите сумму патронов,\nКоторыми хотите зарядить оружие:", "Зарядить", "Выйти");}
	case 36:return AC_GivePlayerWeapon(playerid,41,250);
	case 37:return AC_GivePlayerWeapon(playerid,42,1000);
	case 38:return AC_GivePlayerWeapon(playerid,43,10);
	case 39:return AC_GivePlayerWeapon(playerid,46,1);
	case 40:return callcmd::play(playerid);
	case 41:return callcmd::time(playerid);
	case 42:{return SendErr(playerid, "Этот предмет нельзя использовать");}
	case 43:return callcmd::usezezl(playerid);
	case 44:return callcmd::usedrugs(playerid);
	case 45:return callcmd::mask(playerid);
	case 46:return callcmd::smoke(playerid);
	case 47:return callcmd::phone(playerid);
	case 48:return callcmd::tools(playerid);
	case 49:return callcmd::fuel(playerid);
	case 50..54:
		{
			if(p_info[playerid][pHunger] > 98) return SendErr(playerid, "Вы не хотите кушать!");
			GiveHunger(playerid, 2);format(string, sizeof(string), "%s ест %s", GetName(playerid),Item[id][iName]);PlayerPlaySound(playerid, 32200, p[0],p[1],p[2]);
		}
	case 55..59:
		{
			if(p_info[playerid][pHunger] > 97) return SendErr(playerid, "Вы не хотите кушать!");
			GiveHunger(playerid, 3);format(string, sizeof(string), "%s ест %s", GetName(playerid),Item[id][iName]);PlayerPlaySound(playerid, 32200, p[0],p[1],p[2]);
		}
	case 60..64:
		{
			if(p_info[playerid][pHunger] > 96) return SendErr(playerid, "Вы не хотите кушать!");
			GiveHunger(playerid, 4);format(string, sizeof(string), "%s ест %s", GetName(playerid),Item[id][iName]);PlayerPlaySound(playerid, 32200, p[0],p[1],p[2]);
		}
	case 65..68:
		{
			if(p_info[playerid][pHunger] > 95) return SendErr(playerid, "Вы не хотите кушать!");
			GiveHunger(playerid, 5);format(string, sizeof(string), "%s ест %s", GetName(playerid),Item[id][iName]);PlayerPlaySound(playerid, 32200, p[0],p[1],p[2]);
		}
	case 69:
	    {
	        ShowMakeGunList(playerid);
	    }
	case 70:
		{
			if(p_info[playerid][pHunger] > 97) return SendErr(playerid, "Вы не хотите пить!");
			GiveHunger(playerid, 3);format(string, sizeof(string), "%s пьет %s", GetName(playerid),Item[id][iName]);PlayerPlaySound(playerid, 42600, p[0],p[1],p[2]),SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
		}
	case 71: SetArmour(playerid, 100), SendInf(playerid, "Вы надели бронежилет");
	case 72:
		{
			new newslot;
		    PlayerItem1[playerid][newslot] = 42;
			PlayerItem2[playerid][newslot] += 500;

			PlayerItem1[playerid][newslot] = 69;
			PlayerItem2[playerid][newslot] += 500;
			SendInf(playerid, "Вы открыли ящик с оружием, теперь можете положить на склад патроны и металл");
		}
	/*case 91:
	    {
	        new car_win = random(500);
	        switch(car_win)
	        {
	            case 0..50:
	            {
	                SendInf(playerid, "Вы выйграли автомобиль ''");
	            }
	        }
	    }*/
	}
	ProxDetector(15, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	PlayerItem2[playerid][list]--;
	SaveItem(playerid,list);
	
	/*AddItem(91,"[Подарок] Машина",10,1,0,100);
	AddItem(92,"[Подарок] Деньги",10,1,0,100);
	AddItem(93,"[Подарок] Кредиты",10,1,0,100);
	AddItem(94,"[Подарок] VIP Статус",10,1,0,100);
	AddItem(95,"[Подарок] Военный билет",10,1,0,100);
	AddItem(96,"[Подарок] Подача новости",10,1,0,100);
	AddItem(97,"[Подарок] x2 PayDay на 1 час",10,1,0,100);
	AddItem(98,"[Подарок] x2 PayDay на 2 час",10,1,0,100);
	AddItem(99,"[Подарок] x2 PayDay на 3 час",10,1,0,100);*/
	return 1;
}

stock GetGunIdInItem(item)
{
	switch(item)
	{
	case 1..15:{return item;}
	case 19:return 22;
	case 20:return 23;
	case 21:return 24;
	case 22:return 25;
	case 23:return 26;
	case 24:return 27;
	case 25:return 28;
	case 26:return 29;
	case 27:return 30;
	case 28:return 31;
	case 29:return 32;
	case 30:return 33;
	case 31:return 34;
	case 32:return 35;
	case 33:return 36;
	case 35:return 38;
	default:return 0;
	}
	return 0;
}

stock CheckUseGun(playerid,item,oks=0)
{
	new idgun=GetGunIdInItem(item);
	if(idgun==0)return 0;
	new weapons[13][2],ok=0;
	for (new i = 0; i <= 12; i++)
	{
		GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);
		if(weapons[i][0]==idgun)
		{
			for(new s = 16; s > 0; s --)
			{
				if(PlayerItem1[playerid][s]==item){ok++;}
			}
			break;
		}
	}
	if(ok==1&&oks==1)return 1;
	if(ok==1&&oks==0)return SendErr(playerid, "Прежде чем передать/выкинуть уберите оружие. (/unammo)");
	return 0;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	SetPVarInt(playerid,"EngineStalled",GetPVarInt(playerid,"EngineStalled")+1);
	if(GetPVarInt(playerid,"EngineStalled") >= 4 && Engine[vehicleid] == true && !p_info[playerid][pImprove][3])
	{
		Engine[vehicleid] = false;
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,false,lights,alarm,doors,bonnet,boot,objective);
		GameTextForPlayer(playerid, "~w~ENGINE ~r~OFF", 1000, 6);
		DeletePVar(playerid,"EngineStalled");
	}
	if(p_info[playerid][pAdmin] > 5)
	{
		RepairVehicle(vehicleid);
	}
	if(GetPVarInt(playerid, "DrivingTest") > 0)
	{
	    new Float: veh_health;
		GetVehicleHealth(vehicleid, veh_health);
	    new Float: health = GetPVarFloat(playerid, "car_damage");

		health -= floatabs((health - veh_health));

		SetPVarFloat(playerid, "car_damage", health);
	}
	//AckSent[playerid] += 2;
	return 1;
}

stock strtok(const strin[], &index)
{
	new length = strlen(strin);
	while ((index < length) && (strin[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (strin[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = strin[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

stock IsInAllowedM(mnumbers)
{
	for(new i =0;i<sizeof(allowedmfactions);i++)
	{
		if(mnumbers == allowedmfactions[i]) return 1;
	}
	return 0;
}

stock emptyMessage(string[])
{
	for(new i; string[i] != 0x0; i++)
	{
		switch(string[i])
		{
		case 0x20: continue;
		default: return 0;
		}
	}
	return 1;
}

stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 		p_info[playerid][pGunSkill][0]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 		p_info[playerid][pGunSkill][1]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 				p_info[playerid][pGunSkill][2]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 					p_info[playerid][pGunSkill][3]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 				p_info[playerid][pGunSkill][4]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 					p_info[playerid][pGunSkill][5]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 				p_info[playerid][pGunSkill][6]*10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 			p_info[playerid][pGunSkill][7]*10);
	return 1;
}

stock OnPlayerAmmoChange(playerid)
{
	Shot[playerid]++;
	switch(GetPlayerWeapon(playerid))
	{
	case 22:
		{
		    if(p_info[playerid][pGunSkill][6] < 100)
		    {
				if(Shot[playerid] >= AMMO_PISTOL && !p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][6]++, Shot[playerid] = 0;
					SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, p_info[playerid][pGunSkill][6]*10);
	            	format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS PISTOL ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][6]);
		    		GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "pistol", p_info[playerid][pGunSkill][6]);
				}
				else if(Shot[playerid] >= AMMO_PISTOL_VIP && p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][6]++, Shot[playerid] = 0;
		            SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, p_info[playerid][pGunSkill][6]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS PISTOL ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][6]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "pistol", p_info[playerid][pGunSkill][6]);
				}
			}
		}
	case 23:
		{
		    if(p_info[playerid][pGunSkill][0] < 100)
		    {
				if(Shot[playerid] >= AMMO_SDPISTOL && !p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][0]++, Shot[playerid] = 0;
					SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, p_info[playerid][pGunSkill][0]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS SDPISTOL ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][0]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "sdpistol", p_info[playerid][pGunSkill][0]);
				}
				else if(Shot[playerid] >= AMMO_SDPISTOL_VIP && p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][0]++, Shot[playerid] = 0;
		            SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, p_info[playerid][pGunSkill][0]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS SDPISTOL ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][0]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "sdpistol", p_info[playerid][pGunSkill][0]);
				}
			}
		}
	case 24:
		{
		    if(p_info[playerid][pGunSkill][1] < 100)
		    {
				if(Shot[playerid] >= AMMO_DEAGLE && !p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][1]++, Shot[playerid] = 0;
					SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, p_info[playerid][pGunSkill][1]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS DESERT EAGLE ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][1]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "deserteagle", p_info[playerid][pGunSkill][1]);
				}
				else if(Shot[playerid] >= AMMO_DEAGLE_VIP && p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][1]++, Shot[playerid] = 0;
		            SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, p_info[playerid][pGunSkill][1]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS DESERT EAGLE ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][1]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "deserteagle", p_info[playerid][pGunSkill][1]);
				}
			}
		}
	case 25:
		{
		    if(p_info[playerid][pGunSkill][2] < 100)
		    {
				if(Shot[playerid] >= AMMO_SHOTGUN && !p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][2]++, Shot[playerid] = 0;
					SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, p_info[playerid][pGunSkill][2]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS SHOTGUN ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][2]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "shotgun", p_info[playerid][pGunSkill][2]);
				}
				else if(Shot[playerid] >= AMMO_SHOTGUN_VIP && p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][2]++, Shot[playerid] = 0;
		            SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, p_info[playerid][pGunSkill][2]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS SHOTGUN ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][2]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "shotgun", p_info[playerid][pGunSkill][2]);
				}
			}
		}
	case 28:
		{
		    if(p_info[playerid][pGunSkill][7] < 100)
		    {
				if(Shot[playerid] >= AMMO_MICROUZI && !p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][7]++, Shot[playerid] = 0;
					SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, p_info[playerid][pGunSkill][7]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS UZI ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][7]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "microuzi", p_info[playerid][pGunSkill][7]);
				}
				else if(Shot[playerid] >= AMMO_MICROUZI_VIP && p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][7]++, Shot[playerid] = 0;
		            SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, p_info[playerid][pGunSkill][7]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS UZI ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][7]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "microuzi", p_info[playerid][pGunSkill][7]);
				}
			}
		}
	case 29:
		{
		    if(p_info[playerid][pGunSkill][3] < 100)
		    {
				if(Shot[playerid] >= AMMO_MP5 && !p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][3]++, Shot[playerid] = 0;
					SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, p_info[playerid][pGunSkill][3]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS MP5 ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][3]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "mp5", p_info[playerid][pGunSkill][3]);
				}
				else if(Shot[playerid] >= AMMO_MP5_VIP && p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][3]++, Shot[playerid] = 0;
		            SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, p_info[playerid][pGunSkill][3]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS MP5 ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][3]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "mp5", p_info[playerid][pGunSkill][3]);
				}
			}
		}
	case 30:
		{
		    if(p_info[playerid][pGunSkill][4] < 100)
		    {
				if(Shot[playerid] >= AMMO_AK47 && !p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][4]++, Shot[playerid] = 0;
					SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, p_info[playerid][pGunSkill][4]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS AK47 ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][4]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "ak47", p_info[playerid][pGunSkill][4]);
				}
				else if(Shot[playerid] >= AMMO_AK47_VIP && p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][4]++, Shot[playerid] = 0;
		            SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, p_info[playerid][pGunSkill][4]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS AK47 ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][4]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "ak47", p_info[playerid][pGunSkill][4]);
				}
			}
		}
	case 31:
		{
		    if(p_info[playerid][pGunSkill][5] < 100)
		    {
				if(Shot[playerid] >= AMMO_M4A1 && !p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][5]++, Shot[playerid] = 0;
					SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, p_info[playerid][pGunSkill][5]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS M4 ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][5]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "m4", p_info[playerid][pGunSkill][5]);
				}
				else if(Shot[playerid] >= AMMO_M4A1_VIP && p_info[playerid][pVip])
				{
					p_info[playerid][pGunSkill][5]++, Shot[playerid] = 0;
		            SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, p_info[playerid][pGunSkill][5]*10);
		            format(STRING_GLOBAL,128,"~n~~n~~n~~n~~g~+1 ~w~SKILLS M4 ~n~ALL: ~g~ %i/100",p_info[playerid][pGunSkill][5]);
			    	GameTextForPlayer(playerid, STRING_GLOBAL, 2000, 6);
					MysqlUpdatePlayerInt(playerid, "m4", p_info[playerid][pGunSkill][5]);
				}
			}
		}
	}
	return 1;
}

stock IsABike(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	case 581,522,521,523,586,448,461,463,468,471: return 1;
	default: return 0;
	}
	return 0;
}

stock iswheelmodel(modelid) {

	new wheelmodels[17] = {1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098};
	for(new i = 0; i < 17; i++)
	{
		if(modelid == wheelmodels[i])
		return 1;
	}
	return 0;
}

stock IllegalCarNitroIde(carmodel) {

	new illegalvehs[29] = {581,523,462,521,463,522,461,448,468,586,509,481,510,472,473,493,595,484,430,453,452,446,454,590,569,537,538,570,449};
	for(new i = 0; i < 29; i++)
	{
		if(carmodel == illegalvehs[i])
		return 1;
	}
	return 0;
}

stock illegal_nos_vehicle(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	new playercarmodel = GetVehicleModel(carid);
	return IllegalCarNitroIde(playercarmodel);
}

stock islegalcarmod(vehicleide, componentid)
{
	new modok = false;
	if((iswheelmodel(componentid)) || (componentid == 1086) || (componentid == 1087) || ((componentid >= 1008) && (componentid <= 1010)))
	{
		new nosblocker = IllegalCarNitroIde(vehicleide);
		if(!nosblocker) modok = true;
	}
	else
	{
		for(new i = 0; i < 48; i++)
		{
			if(legalmods[i][0] == vehicleide)
			{
				for(new j = 1; j < 22; j++)
				{
					if(legalmods[i][j] == componentid) modok = true;
				}
			}
		}
	}
	return modok;
}

stock GetPlayerID(name[])
{
	foreach(new i: Player)
	{
		if(strcmp(GetName(i), name, true, strlen(name)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}

stock IsAPlane(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	case 592,577,511,512,593,520,553,476,519,460,513,548,417,487,488,497,563,447,469: return 1;
	default: return 0;
	}
	return 0;
}

stock IsAVel(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	case 481,509,510: return 1;// 514 камаз
	default: return 0;
	}
	return 0;
}

stock IsAMoped(vehicleid) return (GetVehicleModel(vehicleid) == 462) ? (1) : (0);

stock IsABoat(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	case 472,473,493,595,484,430,452..454,446: return 1;
	default: return 0;
	}
	return 0;
}

stock IsLoginInvalid(text[])
{
	if(strfind(text, "none", false) != -1) return 1;
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "/", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	if(strfind(text, "1", true) != -1) return 1;
	if(strfind(text, "2", true) != -1) return 1;
	if(strfind(text, "3", true) != -1) return 1;
	if(strfind(text, "4", true) != -1) return 1;
	if(strfind(text, "5", true) != -1) return 1;
	if(strfind(text, "6", true) != -1) return 1;
	if(strfind(text, "7", true) != -1) return 1;
	if(strfind(text, "8", true) != -1) return 1;
	if(strfind(text, "9", true) != -1) return 1;
	return 0;
}

stock IsTextInvalid(text[])
{
	if(strfind(text, "'", true) != -1) return 1;
	if(strfind(text, "%", true) != -1) return 1;
	if(strfind(text, "&", true) != -1) return 1;
	if(strfind(text, "*", true) != -1) return 1;
	if(strfind(text, "(", true) != -1) return 1;
	if(strfind(text, ")", true) != -1) return 1;
	return 0;
}

stock IsTextRussian(text[])
{
	if(strfind(text, "а", true) != -1) return 1;
	if(strfind(text, "б", true) != -1) return 1;
	if(strfind(text, "в", true) != -1) return 1;
	if(strfind(text, "г", true) != -1) return 1;
	if(strfind(text, "д", true) != -1) return 1;
	if(strfind(text, "е", true) != -1) return 1;
	if(strfind(text, "ё", true) != -1) return 1;
	if(strfind(text, "ж", true) != -1) return 1;
	if(strfind(text, "з", true) != -1) return 1;
	if(strfind(text, "и", true) != -1) return 1;
	if(strfind(text, "й", true) != -1) return 1;
	if(strfind(text, "к", true) != -1) return 1;
	if(strfind(text, "л", true) != -1) return 1;
	if(strfind(text, "м", true) != -1) return 1;
	if(strfind(text, "н", true) != -1) return 1;
	if(strfind(text, "о", true) != -1) return 1;
	if(strfind(text, "п", true) != -1) return 1;
	if(strfind(text, "р", true) != -1) return 1;
	if(strfind(text, "с", true) != -1) return 1;
	if(strfind(text, "т", true) != -1) return 1;
	if(strfind(text, "у", true) != -1) return 1;
	if(strfind(text, "ф", true) != -1) return 1;
	if(strfind(text, "х", true) != -1) return 1;
	if(strfind(text, "ц", true) != -1) return 1;
	if(strfind(text, "ч", true) != -1) return 1;
	if(strfind(text, "ш", true) != -1) return 1;
	if(strfind(text, "щ", true) != -1) return 1;
	if(strfind(text, "ъ", true) != -1) return 1;
	if(strfind(text, "ы", true) != -1) return 1;
	if(strfind(text, "ь", true) != -1) return 1;
	if(strfind(text, "э", true) != -1) return 1;
	if(strfind(text, "ю", true) != -1) return 1;
	if(strfind(text, "я", true) != -1) return 1;
	return 0;
}

stock GetVehicleType(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
	case 483,534,535,536,558,559,560,561,562,565,567,575,576: return 1;
	default: return 0;
	}
	return 0;
}

stock IsACop(playerid)
{
	switch(GetTeamID(playerid))
	{
	case TEAM_POLICIA,TEAM_POLICIA2,TEAM_SWAT,TEAM_FBI: return 1;
	default: return 0;
	}
	return 0;
}

stock IsADps(playerid)
{
	switch(GetTeamID(playerid))
	{
	case TEAM_POLICIA,TEAM_POLICIA2: return 1;
	default: return 0;
	}
	return 0;
}

stock IsAArmy(playerid)
{
	switch(GetTeamID(playerid))
	{
	case TEAM_ARMY: return 1;
	default: return 0;
	}
	return 0;
}

stock IsAMafia(playerid)
{
	switch(GetTeamID(playerid))
	{
	case TEAM_OPG1,TEAM_RSM,TEAM_YAKUZA,TEAM_CORONOS: return 1;
	default: return 0;
	}
	return 0;
}

stock IsANews(playerid)
{
	switch(GetTeamID(playerid))
	{
	case TEAM_SMI,TEAM_SFNEWS,TEAM_LVNEWS: return 1;
	default: return 0;
	}
	return 0;
}

stock IsAMedic(playerid)
{
	switch(GetTeamID(playerid))
	{
	case TEAM_BOLNICA,TEAM_LVHOSPITAL: return 1;
	default: return 0;
	}
	return 0;
}

stock IsAMayor(playerid)
{
	switch(GetTeamID(playerid))
	{
	case TEAM_MERIA,TEAM_MERIAYJ,TEAM_VDV,TEAM_PRAVO: return 1;
	default: return 0;
	}
	return 0;
}

stock SetPlayerCriminal(playerid, killerid[], reason[])
{
	p_info[playerid][pCrimes]++;
	MysqlUpdatePlayerInt(playerid, "crimes", p_info[playerid][pCrimes]);
	strmid(p_info[playerid][pWantedWho], killerid, 0, strlen(killerid), MAX_PLAYER_NAME);
	strmid(p_info[playerid][pWantedReason], reason, 0, strlen(reason), 32);
	SCMF(playerid, COLOR_RED, "Вы совершили преступление: %s. Сообщает: %s.", reason, killerid);
	SCMF(playerid, COLOR_RED, "Ваш уровень розыска: %i", p_info[playerid][pWanted]);
	MysqlUpdatePlayerInt(playerid, "wanted", p_info[playerid][pWanted]);
	MysqlUpdatePlayerStr(playerid, "wantedwho", p_info[playerid][pWantedWho]);
	MysqlUpdatePlayerStr(playerid, "wantedreason", p_info[playerid][pWantedReason]);
	foreach(new i: Player)
	{
		if(IsACop(i)) SCMF(i, 0x007FFFFF, "[РОЗЫСК]: %s[%i] совершил преступление: %s. Звезд: %i. Сообщает: %s", GetName(playerid), playerid, reason, p_info[playerid][pWanted], killerid);
	}
	p_info[playerid][pZakon]--;
	MysqlUpdatePlayerInt(playerid, "zakon", p_info[playerid][pZakon]);
	
	SetPlayerWantedLevel(playerid, p_info[playerid][pWanted]);
	return 1;
}

stock PlayerSpeed(playerid)
{
	new Float:X, Float:Y, Float:Z;
	if(!IsPlayerInAnyVehicle(playerid)) GetPlayerVelocity(playerid,X,Y,Z);
	return floatround( floatsqroot( X * X + Y * Y + Z * Z ) * 170.0 );
}

stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else GetPlayerVelocity(playerid,ST[0],ST[1],ST[2]);
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 213.3;
	return floatround(ST[3]);
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
    if(passenger_seat && GetPlayerVehicleID(playerid))
    {
	    new Float:pos_x, Float:pos_y, Float:pos_z;
		GetVehiclePos(vehicleid, pos_x, pos_y, pos_z);
		if((new_z - pos_z) > -5.0 && (floatabs(vel_x) >= floatabs(playerPassengerVelX[vehicleid]) > 0.3 || floatabs(vel_y) >= floatabs(playerPassengerVelY[vehicleid]) > 0.3))
		{
			if(++playerWarningCarShot{playerid} > 2) OnGuardWarningCheater(playerid, "Car Shot", 85);
			playerNullWarningTimer[playerid][1] = 10;
		}
		if(new_x > 3000.0 && new_y == 0.0 && new_z > 3000.0) { OnGuardWarningCheater(playerid, "Crash Pass Inv Pos", 85); return 0; }
   	}
   	playerPassengerVelX[vehicleid] = vel_x;
	playerPassengerVelY[vehicleid] = vel_y;
	playerPassengerVelZ[vehicleid] = vel_z;
	return 1;
}

stock CheatersUpdate(playerid)
{
    if(PlayerLogged[playerid] == true && PlayerSpawned[playerid] == true && p_info[playerid][pAFK] < 3)
	{
	    if(p_info[playerid][pAdmin] == 0)
	    {
			if(GetPlayerSkin(playerid) == 0) OnGuardWarningCheater(playerid, "Skin CJ", 85);

			if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK) OnGuardWarningCheater(playerid, "JetPack", 85);
			
		    for(new id = (AC_NULLWARN - 1); id >= 0; id--) if(playerNullWarningTimer[playerid][id]) { if(--playerNullWarningTimer[playerid][id] <= 0) switch(id)
		    {
		        case 0: if(--playerWarningSpeed{playerid} > 0) playerNullWarningTimer[playerid][id] = 10;
		        case 1: if(--playerWarningCarShot{playerid} > 0) playerNullWarningTimer[playerid][id] = 10;
		        case 2: if(--playerWarningSpeedFoot{playerid} > 0) playerNullWarningTimer[playerid][id] = 10;
		    }}
		    
		    if(GetPlayerPing(playerid) > 800) OnGuardWarningCheater(playerid, "PING (800+)", 85);
			
			new id_vehicle = GetPlayerVehicleID(playerid);
			if(id_vehicle)
			{
				if(id_vehicle != playerVehicleEnter[playerid]) OnGuardWarningCheater(playerid, "Car Hack (0)", 85);
			}
			else
			{
			    new animid = GetPlayerAnimationIndex(playerid);
			    switch(animid)
                {
					case 1058: OnGuardWarningCheater(playerid, "Fly Hack (4)", 85);
			    	case 157, 159, 161: OnGuardWarningCheater(playerid, "Fly Hack (1)", 85);
 				}
			    if((animid == 958 || animid == 959) && GetPlayerWeapon(playerid) != 46) { if(++playerWarningFly2{playerid} > 2) OnGuardWarningCheater(playerid, "Fly Hack (3)", 85); }
                else playerWarningFly2{playerid} = 0;
			}
			
			new Float:xw, Float:yw, Float:zw;
		 	GetPlayerVelocity(playerid,xw,yw,zw);
			if(xw > 1.8 || yw > 1.8)
			{
				OnGuardWarningCheater(playerid, "Fast Position", 85);
			}

			new Float:pos_x, Float:pos_y, Float:pos_z;
	    	GetPlayerPos(playerid, pos_x, pos_y, pos_z);
			new gstate = GetPlayerState ( playerid ) ;
			new speed = SpeedVehicle(playerid) / 2;
			if(playerCheckFly[playerid]) playerCheckFly[playerid]--;
			else
			{
				if((gstate == PLAYER_STATE_DRIVER || gstate == PLAYER_STATE_ONFOOT) && GetTickDiffAC(GetTickCount(), playerLagFly[playerid]) < 1500 && ac_playerPosZ[playerid] > -35.0)
				{
					new Float:dist = MyVectorSize(floatabs(ac_playerPosX[playerid] - pos_x), floatabs(ac_playerPosY[playerid] - pos_y), 0.0);
					if(gstate == PLAYER_STATE_DRIVER && dist > 200.0)
					{
						OnGuardWarningCheater(playerid, "Fly Hack (DRIVER)", 85);
					}
					if(gstate == PLAYER_STATE_ONFOOT && dist > 60.0 && GetPlayerSurfingVehicleID(playerid) == 0xFFFF)
					{
						OnGuardWarningCheater(playerid, "TP Hack", 85);
					}
					if(dist > 5.0 && speed < 2)
					{
						if(++playerWarningFly0{playerid} > 2)
						{
							OnGuardWarningCheater(playerid, "Fly Hack (ONFOOT)", 85);
						}
						else playerWarningFly0{playerid} = 0;
					}
				}
			}
			playerLagFly[playerid] = GetTickCount();
			ac_playerPosX[playerid] = pos_x;
			ac_playerPosY[playerid] = pos_y;
			ac_playerPosZ[playerid] = pos_z;

			new Float:health;
			if (AC_Armourtime[playerid] < unix)
			{
			    GetPlayerArmour(playerid, health);
				if (PlayerAP[playerid] < health)
				{
					OnGuardWarningCheater(playerid,  "Infinity Armour", 85);
				}
				else PlayerAP[playerid] = health;
			}
			if(AC_Healthtime[playerid] < unix)
			{
				GetPlayerHealth(playerid, health);
				if(PlayerHP[playerid] < health)
				{
		  			OnGuardWarningCheater(playerid,  "Infinity Health", 85);
				}
				else PlayerHP[playerid] = health;
			}
			
			if(GetPlayerWeapon(playerid) == 35 || GetPlayerWeapon(playerid) == 36 || GetPlayerWeapon(playerid) == 37 || GetPlayerWeapon(playerid) == 38 ||
			GetPlayerWeapon(playerid) == 44  || GetPlayerWeapon(playerid) == 45  || GetPlayerWeapon(playerid) == 39  || GetPlayerWeapon(playerid) == 40)
			{
				SendClientMessage(playerid, COLOR_RED, "Это оружие входит в список запрещенных на сервере");
				RemovePlayerWeapon(playerid, GetPlayerWeapon(playerid));
			}

			for (new i = 0; i < 11; i++)
			{
		 		if(AC_GunCheattime[playerid] < unix)
			    {
				    new weaponid, ammo;
				    GetPlayerWeaponData(playerid, i, weaponid, ammo);

				    if (GunPlayer[playerid][i][0] != weaponid && weaponid != 0)
					{
						OnGuardWarningCheater(playerid, "Gun Cheat", 85);
				 		break;
					}
				    if (GunPlayer[playerid][i][1] < ammo && GunPlayer[playerid][i][1] != 0)
					{
						OnGuardWarningCheater(playerid, "Ammo Cheat", 85);
						break;
					}
				    GunPlayer[playerid][i][1] = ammo;
				    GunPlayer[playerid][i][0] = weaponid;
				}
			}
		}
	}
}

stock PlayerTimer()
{
    new temp[128];
    new hour, minute, second;
	gettime(hour, minute, second);
	foreach(new i: Player)
	{
	    CheatersUpdate(i);
		if(PlayerLogged[i] == false)
		{
		    if(SpeedVehicle(i) / 2 > 5 && GetPVarInt(i, "AntiSpawn") < gettime())
			{
				OnGuardWarningCheater(i, "NO SPAWN", 85);
			}
			SetPVarInt(i, "avttimer", GetPVarInt(i, "avttimer") - 1);
			if(GetPVarInt(i, "avttimer") == 0)
			{
				SendErr(i, "Время на авторизацию истекло! Для выхода из игры введите: /q(uit)");
				Kick(i);
				return 1;
			}
  		}
  		
  		if(PlayerLogged[i] == true)
		{
	  		if(konf_time > 1)
			{
		        if(IsAArmy(i) || IsAMafia(i))
		        {
		            format(temp, sizeof temp, "~r~%i", konf_time);
					TextDrawSetString(txdw2, temp);
		        }
			}
			if(konf_time == 2)
			{
			    if(konf_pay >= 30000)
			    {
			        if(IsAArmy(i))
			        {
			            p_info[i][pPayCheck] += WorkSalary[22];
				    	MysqlUpdatePlayerInt(i, "paycheck", p_info[i][pPayCheck]);

						SendInf(i, "Вам была выписана премия за конфискацию");
			        }
			    }
			    if(IsAArmy(i) || IsAMafia(i))
		        {
			    	TextDrawHideForPlayer(i, txdw2);
				}
			}

	  		if(GetPVarInt(i, "TaxiStart") == 1 && GetPlayerDistanceFromPoint(i, GetPVarFloat(i, "TaxiX"), GetPVarFloat(i, "TaxiY"), GetPVarFloat(i, "TaxiZ")) >= 100)
			{
			    new Float:Pos[3];
			    new TMoney = 3*floatround(GetPlayerDistanceFromPoint(i, GetPVarFloat(i, "TaxiX"), GetPVarFloat(i, "TaxiY"), GetPVarFloat(i, "TaxiZ")))/100*WorkSalary[8];
				GiveMoney(i, -TMoney, "Заплатил таксисту");
				GivePVarInt(GetPVarInt(i, "TaxiDriver"), "TaxiMoney", TMoney);

				GetPlayerPos(i, Pos[0], Pos[1], Pos[2]);
				SetPVarFloat(i, "TaxiX", Pos[0]);
				SetPVarFloat(i, "TaxiY", Pos[1]);
				SetPVarFloat(i, "TaxiZ", Pos[2]);
			}

			if(p_info[i][pJob] == JOB_TAXI && GetPlayerState(i) == 2)
			{
				new VehicleID = GetPlayerVehicleID(i);
				if(TaxiVehicleDriver[VehicleID] == i)
				{
				    if(p_info[i][pAFK] < 3)
				    {
					    new taxi_text[32];
						format(taxi_text, sizeof taxi_text, "%s", ConvertTime(p_info[i][pTaxiTime]));
						PlayerTextDrawSetString(i, taxi_td_player[i][10], taxi_text);

						new taxi_text1[64];
						format(taxi_text1, sizeof taxi_text1, "ЗАРАБОТАНО: ~g~%d РУБ", p_info[i][pTaxiCash]);
						PlayerTextDrawSetString(i, taxi_td_player[i][11], taxi_text1);

						new taxi_text2[64];
						format(taxi_text2, sizeof taxi_text2, "~y~%d", zakaz_player[i]);
						PlayerTextDrawSetString(i, taxi_td_player[i][8], taxi_text2);

						new taxi_text3[64];
						format(taxi_text3, sizeof taxi_text3, "~y~%d", zakaz_taxi);
						PlayerTextDrawSetString(i, taxi_td_player[i][9], taxi_text3);

						p_info[i][pTaxiTime]++;

					    if(TaxiTime[i] > 60)
						{
						    TaxiTime[i] = 0;
						    p_info[i][pTaxiCash] += 500;
						}
						else
						{
						    TaxiTime[i]++;
						}
					}
				}
			}

			if(DrugEffect[i] >= 1)
			{
				new Float: health;
				GetPlayerHealth(i, health);
				new h = floatround(health);
				if(PlayerHP[i] < 100.0)
				{
					new assalam[128];
					SetHealth(i, health + 2.0);
					format(assalam, 128, "~n~~n~~n~~n~~n~~n~~g~%dhp", h+2);
					GameTextForPlayer(i, assalam, 1000, 6);
					if(PlayerHP[i] >= 100.0) DrugEffect[i] = 1;
				}
				if(DrugEffect[i] <= 1)
				{
					new time[3];
					gettime(time[0], time[1], time[2]);
					SetPlayerTime(i, time[0], time[1]);
					SetPlayerDrunkLevel(i, 0);
					DrugEffect[i] = 0;
					GameTextForPlayer(i, "~p~Drug effect~n~~w~Gone", 4500, 6);
				}
				DrugEffect[i] -= 1;
			}

			if(GetPVarInt(i, "pHospitals") && p_info[i][pAFK] < 3)
			{
			    if(PlayerToPoint(20.0, i, 2466.0825, -2140.7622, 634.2466))
			    {
					new Float:health;
					GetPlayerHealth(i, health);
					new h = floatround(health);

					SetHealth(i, health+1.0);

					new td_string[32];
					format ( td_string, sizeof ( td_string ), "ЗДОРОВЬЕ:_%d", h ) ;
					PlayerTextDrawSetString ( i, ptd_hp [ i ] [ 3 ], td_string ) ;

					new td_string1[50];
					format ( td_string1, sizeof ( td_string1 ), "ДО ВЫПИСКИ ПРИМЕРНО ~G~%d~W~ СЕК", 100-h ) ;
					PlayerTextDrawSetString ( i, ptd_hp [ i ] [ 8 ], td_string1 ) ;

					new td_string2[32];
					format ( td_string2, sizeof ( td_string2 ), "%d%", h ) ;
					PlayerTextDrawSetString ( i, ptd_hp [ i ] [ 7 ], td_string2 ) ;

					new Float:td_x = h * 1.13976577 ;
					PlayerTextDrawTextSize(i, ptd_hp [ i ] [ 6 ], td_x, 303.666717 ) ;
					PlayerTextDrawHide(i, ptd_hp [ i ] [ 6 ]);
					PlayerTextDrawShow(i, ptd_hp [ i ] [ 6 ]);

					if(health >= 100)
					{
					    SendInf(i, "Вы успешно закончили лечение");
						SetHealth(i, 100);
						DeletePVar(i, "pHospitals");

						p_info[i][pCity] = 0;
						PlayerDied[i] = false;
						MysqlUpdatePlayerInt(i, "city", p_info[i][pCity]);

						hospital_td_status(i, false);
					}
				}
				else
				{
				    SendInf(i, "Вы закончили лечение");
					DeletePVar(i, "pHospitals");

					p_info[i][pCity] = 0;
					PlayerDied[i] = false;
					MysqlUpdatePlayerInt(i, "city", p_info[i][pCity]);

					hospital_td_status(i, false);
				}
			}

			if(GetPVarInt(i, "GYM_Bike") == 1)
			{
				if(GetPVarInt(i, "GYM_Simulator_Time") <= gettime())
				{
					SetPVarInt(i, "GYM_Bike", 0);
					ApplyAnimation(i, "GYMNASIUM", "gym_bike_getoff", 4, 0, 0, 0, 0, 0);
					SimulatorUse[4] = false;
					SimulatorUse[8] = false;
					SimulatorUse[0] = false;
				}
			}
			if(GetPVarInt(i, "GYM_Thread") == 1)
			{
				if(GetPVarInt(i, "GYM_Simulator_Time") <= gettime())
				{
					SetPVarInt(i, "GYM_Thread", 0);
					ApplyAnimation(i, "GYMNASIUM", "gym_jog_falloff", 4, 0, 0, 0, 0, 0);
					SimulatorUse[5] = false;
					SimulatorUse[9] = false;
					SimulatorUse[1] = false;
				}
			}
			if(GetPVarInt(i, "GYM_Bar") == 1)
			{
				if(GetPVarInt(i, "GYM_Simulator_Time") <= gettime())
				{
					SetPVarInt(i, "GYM_Bar", 0);
					ApplyAnimation(i, "benchpress", "gym_bp_getoff", 4, 0, 0, 0, 0, 0);
					RemovePlayerAttachedObject(i, 7);
					SimulatorUse[6] = false;
					SimulatorUse[10] = false;
					SimulatorUse[2] = false;
				}
			}
			if(GetPVarInt(i, "GYM_Dumbbells") == 1)
			{
				if(GetPVarInt(i, "GYM_Simulator_Time") <= gettime())
				{
					SetPVarInt(i, "GYM_Dumbbells", 0);
					ApplyAnimation(i, "Freeweights", "gym_free_putdown", 4, 0, 0, 0, 0, 0);
					RemovePlayerAttachedObject(i, 7);
					SimulatorUse[7] = false;
					SimulatorUse[11] = false;
					SimulatorUse[3] = false;
				}
			}

			if(hour == 0 && minute == 0 && second == 0)
			{
			    gOnlinePlayer[i][1] = gOnlinePlayer[i][0];
				gOnlinePlayerAFK[i][1] = gOnlinePlayerAFK[i][0];
				gOnlinePlayer[i][0] = 0;
				gOnlinePlayerAFK[i][0] = 0;
			}

			if(p_info[i][pJail])
			{
				p_info[i][pJailTime]--;
				if(p_info[i][pJailTime] <= 0)
				{
					if(p_info[i][pJail] == 1)
					{
					    if(p_info[i][pArrestSpawn] == 1)
					    {
							SendInf(i, "Время заключения в тюрьме истекло, теперь Вы свободны");
							SetPlayerPos(i, 896.2441,2084.9253,2721.8101);
							SetPlayerFacingAngle(i, 358.4341);
						}
						if(p_info[i][pArrestSpawn] == 2)
					    {
							SendInf(i, "Время заключения в тюрьме истекло, теперь Вы свободны");
							SetPlayerPos(i, 2550.7563,-2430.6584,2999.5273);
							SetPlayerFacingAngle(i, 2.2702);
						}
						if(p_info[i][pArrestSpawn] == 3)
					    {
							SendInf(i, "Время заключения в тюрьме истекло, теперь Вы свободны");
							AC_SpawnPlayer(i);
						}
					}
					
					SetPlayerColorEx(i, TeamColors[GetTeamID(i)]);
					GameTextForPlayer(i, "~g~freedom", 5000, 6);
					p_info[i][pArrestSpawn] = p_info[i][pJail] = p_info[i][pJailTime] = 0;
					MysqlUpdatePlayerInt(i, "jail", p_info[i][pJail]);
					MysqlUpdatePlayerInt(i, "jailtime", p_info[i][pJailTime]);
					MysqlUpdatePlayerInt(i, "arrestspawn", p_info[i][pArrestSpawn]);
					SetPlayerInterior(i, 0);
					SetPlayerVirtualWorld(i, 0);
					box_td_status(i, false);
					DeletePVar(i, "JailTD");
				}
				else
				{
				    if(!GetPVarInt(i, "JailTD"))
					{
					    SetPVarInt(i, "JailTD", 1);
						box_td_status(i, true);
					}
				    
					new string[80], h = 1;
					format(string, sizeof string, "JAIL TIME: %d SEC", p_info[i][pJailTime]);
					PlayerTextDrawSetString ( i, BoxPlayer [ i ] [ 3 ], string ) ;

                    new timeto = p_info[i][pJailTime] / 60;
                    if(timeto >= 1)
                    {
						new Float:td_x = h * (119 / timeto);
						PlayerTextDrawTextSize(i, BoxPlayer [ i ] [ 2 ], td_x, 10.500000 ) ;
						PlayerTextDrawHide(i, BoxPlayer [ i ] [ 2 ]);
						PlayerTextDrawShow(i, BoxPlayer [ i ] [ 2 ]);
					}
				}
			}
			if(p_info[i][pMuted] > 0)
			{
				p_info[i][pMuted] -= 1;
				MysqlUpdatePlayerInt(i, "mute", p_info[i][pMuted]);
				if(p_info[i][pMuted] == 0)
				{
					SendClientMessage(i, COLOR_GREEN, "Время мута закончилось, теперь вы можете говорить");
					SendInf(i, "Соблюдайте правила сервера, чтобы избежать наказаний");
					p_info[i][pMuted] = 0;
					MysqlUpdatePlayerInt(i, "mute", p_info[i][pMuted]);
				}
			}

            p_info[i][pTimeHour]++;
			gOnlinePlayer[i][0]++;
			p_info[i][pAFK]++;
			if(p_info[i][pAFK] >= 3)
			{
				new temps[100];
				format(temps, sizeof(temps), "[AFK: {ffffff}%i {FF6347}секунд]", p_info[i][pAFK]);
				SetPlayerChatBubble(i, temps, 0xFF6347FF, 10.0, 1600);

				gOnlinePlayerAFK[i][0]++;

				if(p_info[i][pAFK] == 1800 && !p_info[i][pAdmin])
				{
					SendClientMessage(i, COLOR_RED, "Вы были кикнуты т.к были долгое время в АФК");
					Kick(i);
				}
			}
			else
			{
	            if(p_info[i][pFamily] > 0)
			    {
					new famka[128];
					format(famka,sizeof(famka), "{%s}%s{FFFFFF} Family", family_chat_color [family_info [p_info[i][pFamily]] [f_chat_color]], family_info [p_info[i][pFamily]] [f_name]);
					SetPlayerChatBubble(i, famka, -1, 20.0, 1100);
				}
			}

			if(p_info[i][Spectating][1] != INVALID_PLAYER_ID)
			{
				new td_str [ 98 ],
					targetid = p_info[i][Spectating][0] ;
				
				format ( td_str, sizeof ( td_str ), "%d~n~%d~n~%.2f~n~%.2f~n~%d~n~%d~n~%s~n~%d~n~%d$",
				p_info [ targetid ] [ pLevel ],
				GetPlayerPing ( targetid ),
				PlayerHP [ targetid ],
				PlayerAP [ targetid ],
				GetPlayerAmmo ( targetid ),
				SpeedVehicle ( targetid ),
				p_info [ targetid ] [ pIP ],
				p_info [ targetid ] [ pWarn ],
				p_info [ targetid ] [ pCash ] ) ;
				PlayerTextDrawSetString ( p_info[i][Spectating][1], sp_ptd[p_info[i][Spectating][1]][2], td_str ) ;
			}

			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				new vehicleid = GetPlayerVehicleID(i);
				if(PlayerToPoint(5.0, i, 1173.8953, -360.5784, 4.2531))
				{
					if(GetVehicleModel(GetPlayerVehicleID(i)) == 433 && IsAArmy(i))
					{
						GetPatron(i);
					}
				}
				if(!IsAMoped(vehicleid) && !IsAVel(vehicleid) && !IsABoat(vehicleid) && !IsAPlane(vehicleid))
				{
					fuelcheck++;
					if(fuelcheck == 70)
					{
						fuelcheck = 0;
						if(Engine[vehicleid] == true && Fuel[vehicleid] > 0)
						{
							Fuel[vehicleid]--;
							if(Fuel[vehicleid] < 1)
							{
								Engine[vehicleid] = false;
								PlayerFuelMes[vehicleid] = true;
								GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
								SetVehicleParamsEx(vehicleid,false,lights,alarm,doors,bonnet,boot,objective);
								Fuel[vehicleid] = 0;
							}
						}
					}
				}
				if(Fuel[vehicleid] < 1 && PlayerFuelMes[vehicleid] == true && GetVehicleModel(vehicleid) != 462)
				{
					SendErr(i, "В транспорте закончился бензин, необходима заправка");
					Engine[vehicleid] = false;
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,false,lights,alarm,doors,bonnet,boot,objective);
					PlayerFuelMes[vehicleid] = false;
				}
			}
			if(Ether[i] == true) SetPVarInt(i, "InEther", GetPVarInt(i, "InEther") + 1);

			if(IsPlayerInRangeOfPoint(i,1.0,278.8305,2868.6860,1.7934))
			{
				if(IsAArmy(i) || IsAMafia(i))
				{
					StealMats(i);
				}
			}
			if(IsPlayerInRangeOfPoint(i, 1.0, 744.4578, 480.1804, 1036.7900) || IsPlayerInRangeOfPoint(i, 1.0, 748.6232, 480.0585, 1036.7900))
			{
				if(robbery_players[i] != -1)
				{
					StealMoney(i);
				}
			}
			if(!p_info[i][pAdmin])
			{
				new speed = PlayerSpeed(i);
				if(!speed) SetPVarInt(i, "HungerTime", GetPVarInt(i, "HungerTime") + 1);
				else SetPVarInt(i, "HungerTime", GetPVarInt(i, "HungerTime") + speed/4);
				if(GetPVarInt(i, "HungerTime") == 250)
				{
					SetPVarInt(i, "HungerTime", 0);
					if(p_info[i][pVip]) p_info[i][pHunger] -= 2;
					else p_info[i][pHunger]--;
					SetHunger(i, p_info[i][pHunger]);
					if(p_info[i][pHunger] == 1 || p_info[i][pHunger] == 5 || p_info[i][pHunger] == 10 || p_info[i][pHunger] == 15)
					SendClientMessage(i, COLOR_YELLOW, "Вы проголодались! Посетите закусочную");

					MysqlUpdatePlayerInt(i, "hunger", p_info[i][pHunger]);
				}
				if(p_info[i][pHunger] <= 0)
				{
					SetPVarInt(i, "HealthTime", GetPVarInt(i, "HealthTime") + 1);
					if(GetPVarInt(i, "HealthTime") == 60)
					{
						SetPVarInt(i, "HealthTime", 0);
						new Float:shealth;
						GetPlayerHealth(i, shealth);
						SetHealth(i, (p_info[i][pImprove][0] == 1) ? (shealth-1.0) : (shealth-2.0));
					}
				}
			}
			if(GetPlayerDrunkLevel(i) > 0)
			{
				SetPVarInt(i, "DrunkTime", GetPVarInt(i, "DrunkTime") + 1);
				if(GetPVarInt(i, "DrunkTime") >= 100)
				{
					SetPlayerDrunkLevel(i, GetPlayerDrunkLevel(i) - 1000);
					SetPVarInt(i, "DrunkTime", 0);
				}
			}
			if(GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID)
			{
				new cid = GetPlayerSurfingVehicleID(i);
				new cm = GetVehicleModel(cid);
				switch(cm)
				{
					case 430,446,452,453,454,472,473,484,493,595,444: { return 1; }
					default: { }
				}
				new Float:x, Float:y, Float:z;
				GetPlayerPos(i, x, y, z);
				x -= 1.5;
				SetPlayerPos(i, x, y, z);
			}
			static targetid;
			targetid = Bl_Info[i][Bl_Observe];
			if(targetid != INVALID_PLAYER_ID)
			{
				if(IsPlayerStreamedIn(targetid, i))
				{
					switch(GetPlayerState(targetid))
					{
						case PLAYER_STATE_ONFOOT:
						{
							GetPlayerPos(targetid, posx1, posy1, posz1);
							Streamer_SetFloatData(STREAMER_TYPE_CP, Bl_Info[i][Bl_Marker], E_STREAMER_X, posx1);
							Streamer_SetFloatData(STREAMER_TYPE_CP, Bl_Info[i][Bl_Marker], E_STREAMER_Y, posy1);
							Streamer_SetFloatData(STREAMER_TYPE_CP, Bl_Info[i][Bl_Marker], E_STREAMER_Z, posz1);
						}
					}
				}
				else
				{
					Bl_Info[i][Bl_Observe] = INVALID_PLAYER_ID;
					if(Bl_Info[targetid][Bl_Finder] == i)
					{
						Bl_Info[targetid][Bl_Finder] = INVALID_PLAYER_ID;
					}
					switch(GetPlayerState(targetid))
					{
						case PLAYER_STATE_ONFOOT:
						{
							DestroyDynamicCP(Bl_Info[i][Bl_Marker]);
						}

						case PLAYER_STATE_DRIVER, PLAYER_STATE_PASSENGER:
						{
							new vehid = GetPlayerVehicleID(targetid);
							new engine1, light1, alarm1, doors1, bonnet1, boot1, objective1;
							GetVehicleParamsEx(vehid, engine1, light1, alarm1, doors1, bonnet1, boot1, objective1);
							if(objective1 > 0)
							{
								new count;
								foreach(new passenger: vehiclePassengers[vehid])
								{
									if(Bl_Info[passenger][Bl_Finder] != INVALID_PLAYER_ID)
									{
										count ++;
									}
								}
								if(!count)
								{
									SetVehicleParamsEx(vehid, engine1, light1, alarm1, doors1, bonnet1, boot1, false);
								}
							}
						}
					}
				}
			}
			new vehmod = GetVehicleModel(i);
			if vehmod >= 400 *then
			if SpeedLimit[vehmod-400] == 200 *then
			{
				GunPlayer[i][11][0] = 46;
				GunPlayer[i][11][1] = 1;
				AC_GunCheattime[i] = unix + 3;
			}
			if(GetPVarInt(i, "id_find"))
			{
				if(GetPlayerInterior(GetPVarInt(i, "id_find")-1))
				{
					SendErr(i, "Игрок зашел в здание, метка отключена");
					DeletePVar(i, "id_find");

					box_td_status(i, false);

					Find[i][FindTime] = 0;
				    TextDrawHideForPlayer(i, Find[i][FindTD]);
				    TextDrawDestroy(Find[i][FindTD]);
					DisablePlayerCheckpoint(i);
					KillTimer(Find[i][FindTimer]);
				}
			}
		}
	}
	return 1;
}

stock GiveBankMoney(playerid, money, action[])
{
	p_info[playerid][pBank] += money;
    MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
    TransferMoneys(playerid, p_info[playerid][pBank]+money, money, action);
	return 1;
}

stock GetMoney(playerid)
{
	if(GeneralCard[playerid] == 1)
	{
	    return p_info[playerid][pBank];
	}
	else
	{
	    return p_info[playerid][pCash];
	}
}

stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return 0;
}

stock BankList(playerid)
{
	ShowPlayerDialogEx(playerid, 6550, DIALOG_STYLE_LIST, "{ebec86}>> Банковские услуги", "{f0e86b}Дом{ffffff}\n- Оплатить дом\n{FF6347}Недвижимость{ffffff}\n- Оплатить бизнес\n- Снять со счета бизнеса\n- Оплатить гараж\n{FFCC00}Прочее{ffffff}\n- Баланс счета\n- Пополнить счет\n- Снять со счета\n- Перевод на другой счет\n- Кредит\n- Выкупиться из ЧС\n- Призовой фонд", "Выбрать", "Отмена");
	return 1;
}

stock ATMList(playerid)
{
	ShowPlayerDialogEx(playerid, 6550, DIALOG_STYLE_LIST, "{ebec86}>> Банкомат", "{f0e86b}Дом{ffffff}\n- Оплатить дом\n{FF6347}Недвижимость{ffffff}\n- Оплатить бизнес\n- Снять со счета бизнеса\n- Оплатить гараж\n{FFCC00}Прочее{ffffff}\n- Баланс счета\n- Пополнить счет\n- Снять со счета", "Выбрать", "Отмена");
	return 1;
}

stock CreateAccount(playerid, password[])
{
	if(PlayerRegistered[playerid] == 0) return Kick(playerid);
	if(IsTextInvalid(password))
	{
		SendClientMessage(playerid, COLOR_RED, "В пароле должны быть только буквы и цифры");
		return Kick(playerid);
	}
	new data[15];
	format(data, sizeof(data), "%s", date("%dd.%mm.%yyyy",gettime()));
	new Info[300];
	
	new ds_email[32], ds_password[24], ds_referal [ MAX_PLAYER_NAME ];
	GetPVarString(playerid, "reg_password", ds_password, 24);
	GetPVarString(playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME );
	GetPVarString(playerid, "reg_email", ds_email, 32);

	STRING_GLOBAL[0] = EOS;
	strcat(STRING_GLOBAL, "INSERT INTO "T_ACCOUNTS" ");
	strcat(STRING_GLOBAL, "(`name`, `password`, `regip`, `datareg`, `sex`, `age`, `Skin`, `mail`, `referal`) ");
	strcat(STRING_GLOBAL, "VALUES ");
	format(Info, sizeof(Info), "('%s', '%s', '%s', '%s', '%i', '%i', '%i', '%s', '%s')",
	GetName(playerid), ds_password, p_info[playerid][pIP], data, GetPVarInt(playerid, "reg_gender") + 1, 21, ClosetSkins[playerid][0], ds_email, ds_referal);
	strcat(STRING_GLOBAL, Info);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	PlayerLogged[playerid] = true;
	PlayerRegistered[playerid] = 0;
	GiveMoney(playerid, START_MONEY, "Регистрация");
	p_info[playerid][pBank] = 0;
	p_info[playerid][pLevel] = START_LEVEL;
	p_info[playerid][pSprunk] = 7000;
	p_info[playerid][pAge] = 21;
	p_info[playerid][pLic][0] = 1;
	p_info[playerid][pSex] = GetPVarInt(playerid, "reg_gender") + 1;
	SetHunger(playerid, 100);
	Conday[2]++;
	new strinv[128];
	format(strinv, sizeof(strinv),"SELECT * FROM "T_INVENT" WHERE `Name` = '%s' LIMIT 1", GetName(playerid));
	mysql_tquery(dbHandle, strinv, "LoadPlayerItem","d", playerid);
	
	new rows;
	new fmt_query[90];
	new Cache:result;
	mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT `id` FROM "T_ACCOUNTS" WHERE `name` = '%s' LIMIT 1", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);

	rows = cache_num_rows();

	if(rows)
	{
	    p_info [ playerid ] [ pID ] = cache_get_row_int(0, 0, dbHandle);
	}
	cache_delete(result);
	
/*	PlayerTextDrawShow(playerid, cash_td_player[playerid]);
	new cash_text[64];
	format(cash_text, sizeof cash_text, "%d РУБ.", p_info[playerid][pCash]);
	PlayerTextDrawSetString(playerid, cash_td_player[playerid], cash_text);

	for(new i; i < 7; i ++)
	{
	    TextDrawShowForPlayer(playerid, cash_td[i]);
	}*/

	format(strinv, sizeof(strinv),"[{ebec86}A{828282}] Приветствуем нового игрока - {ebec86}%s", GetName(playerid));
	SendAdminMessage(COLOR_ADMIN, strinv);

	for(new i; i < 100; i++) SendClientMessage(playerid, COLOR_WHITE, "");
	SendClientMessage(playerid, COLOR_WHITE, "Вы успешно зарегистрировались на "SERVER_NAME"!");
	SendClientMessage(playerid, COLOR_YELLOW, "Появился вопрос? Задавайте его администраторам сервера (/menu > Задать вопрос)");
	SendClientMessage(playerid, COLOR_YELLOW, "Теперь твои вещи будут хранятся в инвентаре открыть его 'NUM 6' или (/inv).");
	AC_SpawnPlayer(playerid);
	return 1;
}

forward OnPlayerLogin(playerid, tmp[]);
public OnPlayerLogin(playerid, tmp[])
{
	if(!GetPVarInt(playerid, "Logged")) return 1;
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		PlayerLogTries[playerid]++;
		if(PlayerLogTries[playerid] == 4)
		{
			SendClientMessage(playerid,COLOR_RED, "Вы несколько раз ввели неверный пароль! Для выхода из игры введите: {ffffff}/q(uit)");
			return Kick(playerid);
		}
		format(STRING_GLOBAL, 400, "{FFFFFF}Добро пожаловать на {f0e86b}"SERVER_NAME"{FFFFFF}\n\nИмя персонажа: {ebec86}%s\n{FFFFFF}Введите пароль:\n\n{AFAFAF}* Вы ввели неверный пароль", GetName(playerid));
		ShowPlayerDialogEx(playerid, D_LOGIN, DIALOG_STYLE_INPUT, "{ebec86}>> Авторизация", STRING_GLOBAL, "Вход", "Выход");
		return 1;
	}
	p_info[playerid][pID] = cache_get_row_int(0, 0, dbHandle); // id
	//cache_get_row(0, 2, p_info[playerid][pPassword], dbHandle, 32); // password
	cache_get_row(0, 3, p_info[playerid][pLastIP], dbHandle, 16); // ip
	p_info[playerid][pAdmin] = cache_get_row_int(0, 6, dbHandle); // admin
	p_info[playerid][pSecurityCode] = cache_get_row_int(0, 7, dbHandle); // securitycode
	p_info[playerid][pCheckCode] = cache_get_row_int(0, 8, dbHandle); // checkcode
	cache_get_row(0, 9, p_info[playerid][pMail], dbHandle, 64); // mail
	p_info[playerid][pLevel] = cache_get_row_int(0, 10, dbHandle); // level
	p_info[playerid][pCash] = cache_get_row_int(0, 11, dbHandle); // cash
	p_info[playerid][pBank] = cache_get_row_int(0, 12, dbHandle); // bank
	p_info[playerid][pExp] = cache_get_row_int(0, 13, dbHandle); // exp
	cache_get_row(0, 14, p_info[playerid][pRegIP], dbHandle, 16); // regip
	cache_get_row(0, 15, p_info[playerid][pRegData], dbHandle, 15); // datareg
	p_info[playerid][pLeader] = cache_get_row_int(0, 16, dbHandle); // leader
	p_info[playerid][pTempLeader] = cache_get_row_int(0, 17, dbHandle); // templeader
	p_info[playerid][pMember] = cache_get_row_int(0, 18, dbHandle); // member
	p_info[playerid][pRank] = cache_get_row_int(0, 19, dbHandle); // rank
	p_info[playerid][pWarn] = cache_get_row_int(0, 20, dbHandle); // warn
	p_info[playerid][pSex] = cache_get_row_int(0, 21, dbHandle); // sex
	p_info[playerid][pAge] = cache_get_row_int(0, 22, dbHandle); // age
	ClosetSkins[playerid][0] = cache_get_row_int(0, 23, dbHandle); // model
	p_info[playerid][pMemberSkin] = cache_get_row_int(0, 24, dbHandle); // memberskin
	cache_get_row(0, 25, p_info[playerid][pLics], dbHandle, 16); // lic
	p_info[playerid][pMuted] = cache_get_row_int(0, 28, dbHandle); // mute
	p_info[playerid][pRobbery] = cache_get_row_int(0, 30, dbHandle); //checktime
	p_info[playerid][pLeaderPosition] = cache_get_row_int(0, 31, dbHandle); // news
	cache_get_row(0, 32, p_info[playerid][pPhones], dbHandle, 16); // phone
	p_info[playerid][pPhoneNumber] = cache_get_row_int(0, 33, dbHandle); // phonenumber
	cache_get_row(0, 34, p_info[playerid][pTexts], dbHandle, 40); // text
	p_info[playerid][pJail] = cache_get_row_int(0, 35, dbHandle); // jail
	p_info[playerid][pJailTime] = cache_get_row_int(0, 36, dbHandle); // jailtime
	p_info[playerid][pWanted] = cache_get_row_int(0, 37, dbHandle); // wanted
	p_info[playerid][pWantedTime] = cache_get_row_int(0, 38, dbHandle); // wantedtime
	cache_get_row(0, 39, p_info[playerid][pWantedWho], dbHandle, MAX_PLAYER_NAME); // wantedwho
	cache_get_row(0, 40, p_info[playerid][pWantedReason], dbHandle, 32); // wantedreason
	PlayerHP[playerid] = cache_get_row_float(0, 41, dbHandle); // heal
	p_info[playerid][pDrugs] = cache_get_row_int(0, 42, dbHandle); // drugs
	p_info[playerid][pPatron] = cache_get_row_int(0, 43, dbHandle); // patron
	p_info[playerid][pGunAmount] = cache_get_row_int(0, 44, dbHandle); // gunamount
	p_info[playerid][pCrimes] = cache_get_row_int(0, 45, dbHandle); // crimes
	p_info[playerid][pJob] = cache_get_row_int(0, 46, dbHandle); // job
	p_info[playerid][pMarried] = cache_get_row_int(0, 47, dbHandle); // married
	cache_get_row(0, 48, p_info[playerid][pWhoMarried], dbHandle, MAX_PLAYER_NAME); // whomarried
	cache_get_row(0, 49, p_info[playerid][pReferal], dbHandle, MAX_PLAYER_NAME); // referal
	p_info[playerid][pRefMoney] = cache_get_row_int(0, 50, dbHandle); // refmoney
	p_info[playerid][pPayCheck] = cache_get_row_int(0, 51, dbHandle); // paycheck
	p_info[playerid][pCharity] = cache_get_row_int(0, 52, dbHandle); // charity
	p_info[playerid][pVip] = cache_get_row_int(0, 53, dbHandle); // vip
	p_info[playerid][pVipTime] = cache_get_row_int(0, 54, dbHandle); // viptime
	p_info[playerid][pTime] = cache_get_row_int(0, 55, dbHandle); // time
	p_info[playerid][pJackCar] = cache_get_row_int(0, 56, dbHandle); // jackcar
	p_info[playerid][pCredits] = cache_get_row_int(0, 57, dbHandle); // credits
	p_info[playerid][pTotalCredits] = cache_get_row_int(0, 58, dbHandle); // totalcredits
	p_info[playerid][pSkin][0] = cache_get_row_int(0, 59, dbHandle); // skin1
	p_info[playerid][pSkin][1] = cache_get_row_int(0, 60, dbHandle); // skin2
	p_info[playerid][pSkin][2] = cache_get_row_int(0, 61, dbHandle); // skin3
	p_info[playerid][pSpawnChange] = cache_get_row_int(0, 62, dbHandle); // spawnchange
	
	p_info[playerid][pGunSkill][0] = cache_get_row_int(0, 63, dbHandle); // sdpistol
	p_info[playerid][pGunSkill][1] = cache_get_row_int(0, 64, dbHandle); // deserteagle
	p_info[playerid][pGunSkill][2] = cache_get_row_int(0, 65, dbHandle); // shotgun
	p_info[playerid][pGunSkill][3] = cache_get_row_int(0, 66, dbHandle); // mp5
	p_info[playerid][pGunSkill][4] = cache_get_row_int(0, 67, dbHandle); // ak47
	p_info[playerid][pGunSkill][5] = cache_get_row_int(0, 68, dbHandle); // m4
	p_info[playerid][pGunSkill][6] = cache_get_row_int(0, 69, dbHandle); // pistol
	p_info[playerid][pGunSkill][7] = cache_get_row_int(0, 70, dbHandle); // microuzi
	SetPlayerSkills(playerid);
	
	p_info[playerid][pHunger] = cache_get_row_int(0, 71, dbHandle); // hunger
	p_info[playerid][pArrestSpawn] = cache_get_row_int(0, 72, dbHandle); // arrespawn
	p_info[playerid][pRAZ] = cache_get_row_int(0, 73, dbHandle); // sportexp
	p_info[playerid][pOnline] = cache_get_row_int(0, 74, dbHandle); // online
	p_info[playerid][pZakon] = cache_get_row_int(0, 75, dbHandle); // zakon
	p_info[playerid][pCity] = cache_get_row_int(0, 76, dbHandle); // city
	p_info[playerid][pWarnTime] = cache_get_row_int(0, 78, dbHandle); // warntime
	//p_info[playerid][pWatch] = cache_get_row_int(0, 79, dbHandle); // watch
	p_info[playerid][pSprunk] = cache_get_row_int(0, 81, dbHandle); // sprunk
	p_info[playerid][pPhoneBalance] = cache_get_row_int(0, 83, dbHandle); // phonebalance
	p_info[playerid][pTruckSkill] = cache_get_row_int(0, 84, dbHandle); // truckskill
	
	p_info[playerid][Disease][0] = cache_get_row_int(0, 85, dbHandle); // Disease
	p_info[playerid][Disease][1] = cache_get_row_int(0, 86, dbHandle); // Disease
	p_info[playerid][Disease][2] = cache_get_row_int(0, 87, dbHandle); // Disease
	p_info[playerid][pRentHouse] = cache_get_row_int(0, 88, dbHandle); // pRentHouse
	ClosetSkins[playerid][1] = cache_get_row_int(0, 89, dbHandle); // cColor2
	ClosetSkins[playerid][2] = cache_get_row_int(0, 90, dbHandle); // cLock
	ClosetSkins[playerid][3] = cache_get_row_int(0, 91, dbHandle); // cCost
	ClosetSkins[playerid][4] = cache_get_row_int(0, 92, dbHandle); // cCost
	
	p_info[playerid][pTimeHour] = cache_get_row_int(0, 93, dbHandle); // cPaintjob
	p_info[playerid][pAptechka] = cache_get_row_int(0, 94, dbHandle); // aptechka
	p_info[playerid][pVoennik] = cache_get_row_int(0, 95, dbHandle); // Voennik
	cache_get_row(0, 97, p_info[playerid][pImproves], dbHandle, 32); // improves
	//p_info[playerid][pSettings] = cache_get_row_int(0, 99, dbHandle); // settings
	//PhoneNumbers[playerid][0] = cache_get_row_int(0, 100, dbHandle); // phnumber1
	p_info[playerid][data_PASS] = cache_get_row_int(0, 101, dbHandle); // pass
	PhoneNumbers[playerid][2] = cache_get_row_int(0, 102, dbHandle); // phnumber3
	PhoneNumbers[playerid][3] = cache_get_row_int(0, 103, dbHandle); // phnumber4
	PhoneNumbers[playerid][4] = cache_get_row_int(0, 104, dbHandle); // phnumber5
	PhoneNumbers[playerid][5] = cache_get_row_int(0, 105, dbHandle); // phnumber6
	PhoneNumbers[playerid][6] = cache_get_row_int(0, 106, dbHandle); // phnumber7 - кол-во штрафов
	PhoneNumbers[playerid][7] = cache_get_row_int(0, 107, dbHandle); // phnumber8 - цена оплаты штрафа
	p_info[playerid][pMailConfirmed] = cache_get_row_int(0, 110, dbHandle); // mailconf

	p_info[playerid][data_NONLINE][1] = cache_get_row_int(0, 112, dbHandle);
	p_info[playerid][data_NONLINE][2] = cache_get_row_int(0, 113, dbHandle);
	p_info[playerid][data_NONLINE][3] = cache_get_row_int(0, 114, dbHandle);
	p_info[playerid][data_NONLINE][4] = cache_get_row_int(0, 115, dbHandle);
	p_info[playerid][data_NONLINE][5] = cache_get_row_int(0, 116, dbHandle);
	p_info[playerid][data_NONLINE][6] = cache_get_row_int(0, 117, dbHandle);
	p_info[playerid][data_NONLINE][7] = cache_get_row_int(0, 118, dbHandle);
	/*p_info[playerid][cA][1] = cache_get_row_float(0, 119, dbHandle);
	p_info[playerid][cModel][1] = cache_get_row_int(0, 120, dbHandle); // cModel
	p_info[playerid][cClass][1] = cache_get_row_int(0, 121, dbHandle); // cClass
	p_info[playerid][cFuel][1] = cache_get_row_int(0, 122, dbHandle); // cFuel
	p_info[playerid][cColor1][0] = cache_get_row_int(0, 123, dbHandle); // cColor1
	p_info[playerid][cColor1][1] = cache_get_row_int(0, 124, dbHandle); // cColor2
	p_info[playerid][cLock][1] = cache_get_row_int(0, 125, dbHandle); // cLock
	p_info[playerid][cCost][1] = cache_get_row_int(0, 126, dbHandle); // cCost
	cache_get_row(0, 127, p_info[playerid][cVehcom][1], dbHandle, 64); // cVehcom
	p_info[playerid][cPaintjob][1] = cache_get_row_int(0, 128, dbHandle); // cPaintjob
	cache_get_row(0, 129, p_info[playerid][pNumberVehicle1], dbHandle, 64); // veh_number*/

	p_info[playerid][pFamily] = cache_get_row_int(0, 132, dbHandle); // fama
	p_info[playerid][pFamilySozd] = cache_get_row_int(0, 133, dbHandle); // sozd
	p_info[playerid][pFamilyZam] = cache_get_row_int(0, 134, dbHandle); //zam

	/*Settings[playerid][0] = cache_get_row_int(0, 148, dbHandle); // set1
	Settings[playerid][1] = cache_get_row_int(0, 149, dbHandle); // set2
	Settings[playerid][2] = cache_get_row_int(0, 150, dbHandle); // set3
	Settings[playerid][3] = cache_get_row_int(0, 151, dbHandle); // set4
	Settings[playerid][4] = cache_get_row_int(0, 152, dbHandle); // set5
	Settings[playerid][5] = cache_get_row_int(0, 153, dbHandle); // set6
	Settings[playerid][6] = cache_get_row_int(0, 153, dbHandle); // set7*/
	p_info[playerid][pLWarn] = cache_get_row_int(0, 159, dbHandle); // lwarn
	p_info[playerid][pAWarn] = cache_get_row_int(0, 160, dbHandle); // awarn
	p_info[playerid][pDeActivate] = cache_get_row_int(0, 161, dbHandle); // deactivate
	admin_ban_time[playerid] = cache_get_row_int(0, 162, dbHandle);
	p_info[playerid][pDonateCar] = cache_get_row_int(0, 163, dbHandle);

	p_info[playerid][pDonateH][0] = cache_get_row_int(0, 164, dbHandle);
	p_info[playerid][pDonateH][1] = cache_get_row_int(0, 165, dbHandle);
	p_info[playerid][pDonateH][2] = cache_get_row_int(0, 166, dbHandle);
	
	cache_get_row(0, 167, player_binder[playerid][0], dbHandle, 128);
	cache_get_row(0, 168, player_binder[playerid][1], dbHandle, 128);
	cache_get_row(0, 169, player_binder[playerid][2], dbHandle, 128);
	cache_get_row(0, 170, player_binder[playerid][3], dbHandle, 128);
	cache_get_row(0, 171, player_binder[playerid][4], dbHandle, 128);

	p_info[playerid][pSetAnim] = cache_get_row_int(0, 172, dbHandle);
	p_info[playerid][pSetWalk] = cache_get_row_int(0, 173, dbHandle);
	/*p_info[playerid][cCost][2] = cache_get_row_int(0, 174, dbHandle); // cCost
	cache_get_row(0, 175, p_info[playerid][cVehcom][2], dbHandle, 64); // cVehcom
	p_info[playerid][cPaintjob][2] = cache_get_row_int(0, 176, dbHandle); // cPaintjob
	cache_get_row(0, 177, p_info[playerid][pNumberVehicle2], dbHandle, 64); // veh_number*/

	p_info[playerid][pCredit] = cache_get_row_int(0, 178, dbHandle);
	p_info[playerid][pCreditMoney] = cache_get_row_int(0, 179, dbHandle);

	p_info[playerid][pCopter] = cache_get_row_int(0, 180, dbHandle);
	p_info[playerid][pCopterColor][0] = cache_get_row_int(0, 181, dbHandle);
	p_info[playerid][pCopterColor][1] = cache_get_row_int(0, 182, dbHandle);
	
	p_info[playerid][pModelPhone] = cache_get_row_int(0, 184, dbHandle);
	p_info[playerid][SoundSMS] = cache_get_row_int(0, 185, dbHandle);
	p_info[playerid][SoundCall] = cache_get_row_int(0, 186, dbHandle);
	
	new str1[128];
	cache_get_row(0, 187, str1, dbHandle, 128);
	
	new Float:e_X, Float:e_Y, Float:e_Z, e_Virt, e_Int, e_time;
	sscanf(str1,"p<,>fffiii",e_X, e_Y, e_Z, e_Int, e_Virt, e_time);
	SetPVarFloat(playerid, "e_X", e_X);
	SetPVarFloat(playerid, "e_Y", e_Y);
	SetPVarFloat(playerid, "e_Z", e_Z);
	SetPVarInt(playerid, "e_Int", e_Int);
	SetPVarInt(playerid, "e_Virt", e_Virt);
	SetPVarInt(playerid, "e_time", e_time);
	
	p_info[playerid][P_Style][0] = cache_get_row_int(0, 188, dbHandle);
	p_info[playerid][P_Style][1] = cache_get_row_int(0, 189, dbHandle);
	p_info[playerid][pStats][1] = cache_get_row_int(0, 190, dbHandle);
	p_info[playerid][pStats][2] = cache_get_row_int(0, 191, dbHandle);
	
	p_info[playerid][data_GARAGE] = cache_get_row_int(0, 192, dbHandle);
	
	p_info[playerid][data_PASS_S] = cache_get_row_int(0, 193, dbHandle);
	p_info[playerid][data_PASS_N] = cache_get_row_int(0, 194, dbHandle);
	cache_get_row(0, 195, p_info[playerid][data_PASS_DATE], dbHandle, 32);
	
	new str2[128];
	cache_get_row(0, 196, str2, dbHandle, 128);
	sscanf(str2,"p<,>ifff", acc_player[playerid][acc_object_id][0],acc_player[playerid][acc_object_x][0],acc_player[playerid][acc_object_y][0],acc_player[playerid][acc_object_z][0]);
	
	new str3[128];
	cache_get_row(0, 197, str3, dbHandle, 128);
	sscanf(str3,"p<,>ifff", acc_player[playerid][acc_object_id][1],acc_player[playerid][acc_object_x][1],acc_player[playerid][acc_object_y][1],acc_player[playerid][acc_object_z][1]);
	
	new str4[128];
	cache_get_row(0, 198, str4, dbHandle, 128);
	sscanf(str4,"p<,>ifff", acc_player[playerid][acc_object_id][2],acc_player[playerid][acc_object_x][2],acc_player[playerid][acc_object_y][2],acc_player[playerid][acc_object_z][2]);
	
	new str5[128];
	cache_get_row(0, 199, str5, dbHandle, 128);
	sscanf(str5,"p<,>ifff", acc_player[playerid][acc_object_id][3],acc_player[playerid][acc_object_x][3],acc_player[playerid][acc_object_y][3],acc_player[playerid][acc_object_z][3]);

	new str6[128];
	cache_get_row(0, 200, str6, dbHandle, 128);
	sscanf(str6,"p<,>ifff", acc_player[playerid][acc_object_id][4],acc_player[playerid][acc_object_x][4],acc_player[playerid][acc_object_y][4],acc_player[playerid][acc_object_z][4]);

	new present[64];

	cache_get_row(0, 183, present, dbHandle, 64);

	/*new l_present[14];

	sscanf(present, "p<,>a<i>[14]", l_present);
	for(new i; i < 14; i++) p_info[playerid][pPresent][i] = l_present[i];*/

	/*new l_guns[56], l_ammo[56];

	cache_get_row(0, 26, l_guns, dbHandle, 64); // guns
	cache_get_row(0, 27, l_ammo, dbHandle, 64); // ammos

	new g_data[13], a_data[13];
	sscanf(l_guns, "p<,>a<i>[13]", g_data);
	sscanf(l_ammo, "p<,>a<i>[13]", a_data);
	for(new i; i < 13; i++)
	{
		p_info[playerid][pGun][i] = g_data[i];
		p_info[playerid][pAmmo][i] = a_data[i];
	}*/
	SetPVarInt(playerid, "Connected", 1);

	sscanf(p_info[playerid][pTexts], "p<,>a<i>[6]", p_info[playerid][pText]);
	sscanf(p_info[playerid][pPhones], "p<,>a<i>[2]", p_info[playerid][pPhone]);
	sscanf(p_info[playerid][pImproves], "p<,>a<i>[4]", p_info[playerid][pImprove]);
	sscanf(p_info[playerid][pLics], "p<,>a<i>[4]",p_info[playerid][pLic]);

	DeletePVar(playerid, "Logged");
	DeletePVar(playerid, "avttimer");
	p_info[playerid][pOnline] = 1;
	MysqlUpdatePlayerInt(playerid, "online", p_info[playerid][pOnline]);
	format(MdPanel, sizeof(MdPanel),"%i, %i, %i, %i, %i, %i", MD[0], MD[1], MD[2], MD[3], MD[4], MD[5]);
	MysqlUpdateOtherStr("mdpanel", MdPanel);

	for(new i = 25; i >= 0; i --) SendClientMessage(playerid, COLOR_WHITE, "");
 	SendClientMessage(playerid, COLOR_DIALOG, "Добро пожаловать на "SERVER_NAME". Желаем приятной игры!");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"SELECT * FROM "T_INVENT" WHERE `Name` = '%s'", GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "LoadPlayerItem","d", playerid);

	GetPlayerIp(playerid, p_info[playerid][pIP], 16);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 128, "UPDATE "T_ACCOUNTS" SET ip = '%s', online = '1' WHERE id = '%i' LIMIT 1", p_info[playerid][pIP], p_info[playerid][pID]);

	SetPlayerInterior(playerid, 0);
	
	STRING_GLOBAL = "";
	format(STRING_GLOBAL, 128, "SELECT * FROM `contacts` WHERE `NickName` = '%s' LIMIT 1", p_info[playerid][pName]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "LoadContacts", "d", STRING_GLOBAL);
	
	STRING_GLOBAL = "";
	format(STRING_GLOBAL, 512, "SELECT * FROM "T_ONLINE_PLAYER" WHERE date >= CURDATE() AND accountid = %d LIMIT 1", p_info[playerid][pID]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "@load_online_today" , "i", playerid);

	STRING_GLOBAL = "";
	format(STRING_GLOBAL, 512, "SELECT * FROM "T_ONLINE_PLAYER" WHERE (date >= (CURDATE()-1) AND date < CURDATE()) AND accountid = %d LIMIT 1", p_info[playerid][pID]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "@load_online_yesterday" , "i", playerid);
	
	STRING_GLOBAL = "";
	new data2[64], day, month, year;
	getdate(day, month, year);
	format(data2, 64, "%d-%d-%d", day, month, year);
	format(STRING_GLOBAL, 600, "INSERT INTO `captchalog` (`clName`, `clIP`, `clDate`) VALUES ('%s', '%s', '%s')", p_info[playerid][pName], p_info[playerid][pIP], data2);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

	new fmt_query[256];
	new Cache: result;
	new buffer[128];

	GetPVarString(playerid, "gpci", buffer, sizeof buffer);

	format(fmt_query, sizeof fmt_query, "SELECT * FROM gpci WHERE name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, fmt_query);
	rows = cache_num_rows();
	if(!rows)
	{
		format(fmt_query, sizeof fmt_query, "INSERT INTO gpci (`key`, `name`) VALUES ('%s', '%s')", buffer, GetName(playerid));
		mysql_query(dbHandle, fmt_query);

		cache_delete(result);
	}
	else cache_delete(result);

	if(p_info[playerid][pCheckCode] == 1)
	{
		new texter_pas[5];
		new digitsd[9] = {1,2,3,4,5,6,7,8,9};
		for(new i, rand, old_digit; i < 9; i++)
		{
			while((rand = random(9)) == i) {}
			old_digit = digitsd[i];
			digitsd[i] = digitsd[rand];
			digitsd[rand] = old_digit;
		}
		for(new f = 0; f < 10; f++)
		{
			if(f < 9)
			{
				mass_pass[playerid][f] = digitsd[f];
				format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
				PlayerTextDrawSetString(playerid,SecurityCode[playerid][f],texter_pas);
			}
			PlayerTextDrawShow(playerid,SecurityCode[playerid][f]);
		}
		SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
		p_info[playerid][pInputCode] = 0;
		Ujahhs[playerid] = 1;
		SelectTextDraw(playerid, -264092161);
	}
	else if(p_info[playerid][pCheckCode] == 2)
	{
		if(!strcmp(p_info[playerid][pLastIP],p_info[playerid][pIP],true))
		{
			if(p_info[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, COLOR_RED, "Вы вошли как администратор. Для авторизации введите{FFCC00}(/alogin)");
			PlayerLogged[playerid] = true;
			Hunger(playerid);
			if(GetPVarInt(playerid,"e_time") > gettime() && GetPVarFloat(playerid,"e_X") != 0.0 && GetPVarFloat(playerid,"e_Y") != 0.0 && GetPVarFloat(playerid,"e_Z") != 0.0 && p_info[playerid][pJail] == 0)
			{
				ShowPlayerDialogEx(playerid, dEPLAYER, DIALOG_STYLE_MSGBOX, "{ebec86}>> Вернуться", "{FFFFFF}Вы вышли из игры менее 5-ти минут назад.\nВы можете вернуться на предыдущую позицию.\n\nВернуться?", "Да", "Нет");
			}
			else
			{
				AC_SpawnPlayer(playerid);
			}
		}
		else
		{
			new texter_pas[5];
			new digitsd[9] = {1,2,3,4,5,6,7,8,9};
			for(new i, rand, old_digit; i < 9; i++)
			{
				while((rand = random(9)) == i) {}
				old_digit = digitsd[i];
				digitsd[i] = digitsd[rand];
				digitsd[rand] = old_digit;
			}
			for(new f = 0; f < 10; f++)
			{
				if(f < 9)
				{
					mass_pass[playerid][f] = digitsd[f];
					format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
					PlayerTextDrawSetString(playerid,SecurityCode[playerid][f],texter_pas);
				}
				PlayerTextDrawShow(playerid,SecurityCode[playerid][f]);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
			p_info[playerid][pInputCode] = 0;
			Ujahhs[playerid] = 1;
			SelectTextDraw(playerid,-264092161);
		}
	}
	else if(p_info[playerid][pCheckCode] == 3)
	{
		new strv[26], strvv[26], splitt[4][4], spli[4][4];
		split(p_info[playerid][pLastIP], splitt, '.');
		format(strv, sizeof(strv), "%s.%s", splitt[0], splitt[1]);
		split(p_info[playerid][pIP], spli, '.');
		format(strvv, sizeof(strvv), "%s.%s", spli[0], spli[1]);
		if(strcmp(strv,strvv,true))
		{
			new texter_pas[5];
			new digitsd[9] = {1,2,3,4,5,6,7,8,9};
			for(new i, rand, old_digit; i < 9; i++)
			{
				while((rand = random(9)) == i) {}
				old_digit = digitsd[i];
				digitsd[i] = digitsd[rand];
				digitsd[rand] = old_digit;
			}
			for(new f = 0; f < 10; f++)
			{
				if(f < 9)
				{
					mass_pass[playerid][f] = digitsd[f];
					format(texter_pas,sizeof(texter_pas),"%i",mass_pass[playerid][f]);
					PlayerTextDrawSetString(playerid,SecurityCode[playerid][f],texter_pas);
				}
				PlayerTextDrawShow(playerid,SecurityCode[playerid][f]);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Система безопасности запрашивает ввод Вашего графического пароля");
			p_info[playerid][pInputCode] = 0;
			Ujahhs[playerid] = 1;
			SelectTextDraw(playerid,-264092161);
		}
		else
		{
			PlayerLogged[playerid] = true;
			Hunger(playerid);
			if(GetPVarInt(playerid,"e_time") > gettime() && GetPVarFloat(playerid,"e_X") != 0.0 && GetPVarFloat(playerid,"e_Y") != 0.0 && GetPVarFloat(playerid,"e_Z") != 0.0 && p_info[playerid][pJail] == 0)
			{
				ShowPlayerDialogEx(playerid, dEPLAYER, DIALOG_STYLE_MSGBOX, "{ebec86}>> Вернуться в игру", "{FFFFFF}Вы вышли из игры менее 5-ти минут назад.\nВы можете вернуться на предыдущую позицию.\n\nВернуться?", "Да", "Нет");
			}
			else
			{
				AC_SpawnPlayer(playerid);
			}
		}
	}
	else
	{
		if(p_info[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, COLOR_RED, "Вы вошли как администратор. Для авторизации введите {FFCC00}(/alogin)");
		if(p_info[playerid][pLevel] < 3) SendClientMessage(playerid, COLOR_YELLOW, "Если вы хотите полностью обезопасить свой аккаунт (/menu - Безопасность)");
		PlayerLogged[playerid] = true;
		Hunger(playerid);
		
		if(GetPVarInt(playerid,"e_time") > gettime() && GetPVarFloat(playerid,"e_X") != 0.0 && GetPVarFloat(playerid,"e_Y") != 0.0 && GetPVarFloat(playerid,"e_Z") != 0.0 && p_info[playerid][pJail] == 0)
		{
			ShowPlayerDialogEx(playerid, dEPLAYER, DIALOG_STYLE_MSGBOX, "{ebec86}>> Вернуться", "{FFFFFF}Вы вышли из игры менее 5-ти минут назад.\nВы можете вернуться на предыдущую позицию.\n\nВернуться?", "Да", "Нет");
		}
		else
		{
			AC_SpawnPlayer(playerid);
		}
	}

	if(Pick == 1)
	{
		SendClientMessageToAll(COLOR_WHITE, "Сегодня проходят выборы Мэра!");
		SendClientMessageToAll(COLOR_WHITE, "Голосование проходит в Мэрии Лос-Сантоса на первом этаже. Сделайте свой выбор.");
	}

	if(doubling_exp && !doubling_donate)
	SendClientMessage(playerid, C_OSNOV, "* Сегодня действует двойной опыт каждый час!");
	else if(doubling_donate && !doubling_exp)
	SendClientMessage(playerid, C_OSNOV, "* Сегодня действует удвоенный курс обмена донат-валюты в игровую!");
	else if(doubling_donate && doubling_exp)
	SendClientMessage(playerid, C_OSNOV, "* Сегодня действует двойной опыт каждый час и удвоенный курс обмена донат-валюты в игровую!");
	
	Iter_Add(TeamPlayers[GetFracID(playerid)], playerid);

	new rows1;
	new fmt_query1[90];
	new Cache:result1;

	mysql_format(dbHandle, fmt_query1, sizeof fmt_query1, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
	result1 = mysql_query(dbHandle, fmt_query1);

	rows1 = cache_num_rows();
	if(rows1) SendClientMessage(playerid, COLOR_BLUE, "Загрузить автомобиль можно с помощью команды: /fixcar");
	cache_delete(result1);

	if(p_info[playerid][pCredit] > 0)
	{
		if(p_info[playerid][pCredit] <= gettime())
		{
			new fmt_msg[128];
			if(p_info[playerid][pBank] >= p_info[playerid][pCreditMoney])
			{
				p_info[playerid][pBank] -= p_info[playerid][pCreditMoney];
				MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);

				format(fmt_msg, sizeof fmt_msg, "Срок кредита подошёл. С Вашего банковского счёта было списано: %d рублей", p_info[playerid][pCreditMoney]);
				SendClientMessage(playerid, C_YELLOW, fmt_msg);

				p_info[playerid][pCredit] =
				p_info[playerid][pCreditMoney] = 0;

				MysqlUpdatePlayerInt(playerid, "credit", p_info[playerid][pCredit]);
				MysqlUpdatePlayerInt(playerid, "creditmoney", p_info[playerid][pCreditMoney]);
			}
			else
			{
				SendClientMessage(playerid, C_YELLOW, "Срок кредита подошёл. Но на Вашем банковском счету недостаточно денег.");
				SendClientMessage(playerid, C_YELLOW, "На Вашем аккаунте было продано всё имущество.");
				
				if(GetPlayerHouse(playerid))
				{
					new i = GetPVarInt(playerid, "PlayerHouse");
					strmid(HouseInfo[i][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
					p_info[playerid][pSpawnChange] = 0;
					MysqlUpdatePlayerInt(playerid, "spawnchange", p_info[playerid][pSpawnChange]);
					MysqlUpdateHouseStr(i, "hOwner", "None");
					HouseInfo[i][hLock] = 1;
					HouseInfo[i][hOplata] = HouseInfo[i][hGarage] = HouseInfo[i][hUpdate] = 0;
					UpdateHouse(i);

					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HOUSE" SET  hOwner = '%s', buyprice = 0, hLock = %d, hOplata = 0, hGarage = 0, hUpdate = 0 WHERE id = '%d' LIMIT 1", HouseInfo[i][hOwner], HouseInfo[i][hLock], i);
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					if(GetPlayerVirtualWorld(playerid) == HouseInfo[i][hVirtual])
					{
						SetPlayerInterior(playerid, 0);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerPos(playerid, HouseInfo[i][hEntrx], HouseInfo[i][hEntry], HouseInfo[i][hEntrz]);
						DeletePVar(playerid, "PlayerHouse");
					}
				}

				if(GetPlayerBizz(playerid))
				{
					new i = GetPVarInt(playerid, "PlayerBizz");
					strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
					BizzInfo[i][bLock] = BizzInfo[i][bMoney] = BizzInfo[i][bLic] = BizzInfo[i][bEnter] = BizzInfo[i][bMafia] = 0;
					BizzInfo[i][bTill] = 50;
					switch(BizzInfo[i][bType])
					{
						case 1: BizzInfo[i][bProduct] = 5000;
						case 2: BizzInfo[i][bProduct] = 20000;
						case 3: BizzInfo[i][bProduct] = 3000;
						case 4: BizzInfo[i][bProduct] = 7000;
						case 5: BizzInfo[i][bProduct] = 7000;
						case 6: BizzInfo[i][bProduct] = 20000;
						case 7: BizzInfo[i][bProduct] = 100000;
						case 8: BizzInfo[i][bProduct] = 50000;
						case 9: BizzInfo[i][bProduct] = 50000;
					}
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET owner = '%s', block = %d, money = %d, lic = %d, penter = %d, till = %d, product = %d WHERE id = %d LIMIT 1",
					BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill], BizzInfo[i][bProduct],i);
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
					UpdateBizz(i);
				}

				p_info[playerid][pCredit] =
				p_info[playerid][pCreditMoney] = 0;

				MysqlUpdatePlayerInt(playerid, "credit", p_info[playerid][pCredit]);
				MysqlUpdatePlayerInt(playerid, "creditmoney", p_info[playerid][pCreditMoney]);
			}
		}
		else
		{
			new fmt_msg[128];
			format(fmt_msg, sizeof fmt_msg, "* У Вас есть кредит на сумму %d рублей. Срок оплаты: %d дней", p_info[playerid][pCreditMoney], ((p_info[playerid][pCredit] - gettime()) / 86400) + 1);
			SendClientMessage(playerid, COLOR_YELLOW, fmt_msg);
		}
	}

	if(p_info[playerid][pCheckCode] == 0) CancelSelectTextDraw(playerid);

	new string[128];
    mysql_format(dbHandle, string, sizeof(string), "SELECT * FROM "T_HELPER" WHERE `name` = '%s' LIMIT 1", GetName(playerid));
	mysql_tquery(dbHandle, string, "HelperAuth", "i", playerid);

	if(p_info[playerid][pText][0] == 1)
	{
		new i = p_info[playerid][pText][0];
		p_info[playerid][pBank] += HouseInfo[i][hPrice];
		SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: За неуплату электроэнергии Ваш дом был продан");
		SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: На Ваш банковский счет была возвращена стоимость дома");
		format(p_info[playerid][pTexts], 40,  "0, %i, %i, %i, %i, %i", p_info[playerid][pText][1], p_info[playerid][pText][2], p_info[playerid][pText][3], p_info[playerid][pText][4], p_info[playerid][pText][5]);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 256, "UPDATE "T_ACCOUNTS" SET text = '%s', bank=%d WHERE name = '%s' LIMIT 1", p_info[playerid][pTexts], p_info[playerid][pBank], GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[playerid][pText][1] == 1)
	{
		SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: Ваш бизнес закрыли в связи с нехваткой ресурсов");
		SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: Бюджет бизнеса зачислен на ваш банковский счет");
		format(p_info[playerid][pTexts], 40, "%i, 0, %i, %i, %i, %i", p_info[playerid][pText][0], p_info[playerid][pText][2], p_info[playerid][pText][3], p_info[playerid][pText][4], p_info[playerid][pText][5]);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 256, "UPDATE "T_ACCOUNTS" SET text = '%s', bank=%d WHERE name = '%s' LIMIT 1", p_info[playerid][pTexts], p_info[playerid][pBank], GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[playerid][pText][2] == 1)
	{
		GiveMoney(playerid, 100000, "За пригл. игрока");
		SendClientMessage(playerid, COLOR_YELLOW, "* Вы получили 100000 рублей за приглашенного игрока");
		p_info[playerid][pRefMoney] = 0;
		format(p_info[playerid][pTexts], 40, "%i, %i, 0, %i, %i, %i", p_info[playerid][pText][0], p_info[playerid][pText][1], p_info[playerid][pText][3], p_info[playerid][pText][4], p_info[playerid][pText][5]);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 256, "UPDATE "T_ACCOUNTS" SET text = '%s', refmoney = %d WHERE name = '%s' LIMIT 1", p_info[playerid][pTexts], p_info[playerid][pRefMoney], GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[playerid][pText][3] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "* На ваш счёт поступил донат платёж (/donate - Проверить зачисления)");
		format(p_info[playerid][pTexts], 40, "%i, %i, %i, 0, %i, %i", p_info[playerid][pText][0], p_info[playerid][pText][1], p_info[playerid][pText][2], p_info[playerid][pText][4], p_info[playerid][pText][5]);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 256, "UPDATE "T_ACCOUNTS" SET text = '%s' WHERE name = '%s' LIMIT 1", p_info[playerid][pTexts], GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[playerid][pText][4] == 1)
	{
		SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: За неуплату электроэнергии Ваш гараж был продан");
		SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: На Ваш банковский счет была возвращена стоимость гаража");
		format(p_info[playerid][pTexts], 40, "%i, %i, %i, %i, 0, %i", p_info[playerid][pText][0], p_info[playerid][pText][1], p_info[playerid][pText][2], p_info[playerid][pText][3], p_info[playerid][pText][5]);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 256, "UPDATE "T_ACCOUNTS" SET text = '%s' WHERE name = '%s' LIMIT 1", p_info[playerid][pTexts], GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[playerid][pText][5] == 1)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "* На ваш счёт поступил донат платёж (/donate - Проверить зачисления)");
		format(p_info[playerid][pTexts], 40, "%i, %i, %i, %i, %i, 0", p_info[playerid][pText][0], p_info[playerid][pText][1], p_info[playerid][pText][2], p_info[playerid][pText][3], p_info[playerid][pText][4]);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, 256, "UPDATE "T_ACCOUNTS" SET text = '%s' WHERE name = '%s' LIMIT 1", p_info[playerid][pTexts], GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[playerid][pVipTime] > 0)
	{
		new current_date = getdate(year, month, day);
		new time_left = p_info[playerid][pVipTime] - current_date;
		if(time_left <= 0)
		{
			p_info[playerid][pVip] = p_info[playerid][pVipTime] = 0;
			MysqlUpdatePlayerInt(playerid, "vip", p_info[playerid][pVip]);
			MysqlUpdatePlayerInt(playerid, "viptime", p_info[playerid][pVipTime]);
		}
		else
		{
		    format(STRING_GLOBAL, 128, "* Активирован VIP статус. (Дней до окончания: %d)", time_left);
		    SendClientMessage(playerid, COLOR_YELLOW, STRING_GLOBAL);
		}
	}
	if(PhoneNumbers[playerid][6] > 0)
	{
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "* У Вас есть неоплаченные штрафы (%d шт). Оплатите их в участке ДПС или ППС. (/gps - государственные организации)", PhoneNumbers[playerid][6]);
		SendClientMessage(playerid, 0x5c62ffFF, STRING_GLOBAL);
		if(PhoneNumbers[playerid][6] > 4)
		{
		    if(p_info[playerid][pWanted] < 6 && !IsACop(playerid))
		    {
				SendClientMessage(playerid, 0x5c62ffFF, "* Вы были объявлены в розыск за неуплату штрафов");
			    p_info[playerid][pWanted]++;
				if(p_info[playerid][pWanted] > 0) p_info[playerid][pWantedTime] = 1800 + random(300);
			    SetPlayerCriminal(playerid, "Неизвестный", "Штрафы");
			}
		}
	}
	if(p_info[playerid][pWarn] > 0)
	{
	    new strings[128];
	    format(strings, sizeof strings, "* У Вас имеются предупреждения (%d шт). Играйте и они снимутся. (Осталось часов до снятия: %d)", p_info[playerid][pWarn], p_info[playerid][pWarnTime]);
	    SendClientMessage(playerid, COLOR_RED, strings);
	}
	if(p_info[playerid][pDonateH][0] > 0 || p_info[playerid][pDonateH][1] > 0 || p_info[playerid][pDonateH][2] > 0)
	{
		SendAdminMessage(COLOR_YELLOW, "* Есть игроки, которым нужно установить привелегии для дома. (/hdonate)");
	}
	if(konf_time > 0 && IsAMafia(playerid) || konf_time > 0 && IsAArmy(playerid))
	{
	    TextDrawShowForPlayer(playerid, txdw2);
	    GangZoneShowForPlayer(playerid, KonfiskatZoneID, 0xFF453099);
	}
	if(MafiaBattle[0][3] != 0)
	{
	    new String[128];
		if(MafiaBattle[0][0] == p_info[playerid][pMember] || MafiaBattle[1][0] == p_info[playerid][pMember])
		{
		    GangZoneShowForPlayer(playerid, MafiaBattleZoneID, GetGangZoneColor(MafiaBattle[0][0]));
	  	    GangZoneFlashForPlayer(playerid, MafiaBattleZoneID, GetGangZoneColor(MafiaBattle[1][0]));
			
			TextDrawShowForPlayer(playerid, txdw2);
			PlayerTextDrawShow ( playerid, capture_td [ playerid ] ) ;
			new td_string [ 80 ] ;
			format ( td_string, sizeof ( td_string ), "~r~(%d) %s vs %s (%d)", MafiaBattle[0][1], GetMafiaName(MafiaBattle[0][0], 1), GetMafiaName(MafiaBattle[1][0], 1), MafiaBattle[1][1] ) ;
			PlayerTextDrawSetString(playerid, capture_td [ playerid ], td_string ) ;
			
		    if(MafiaBattle[1][0] == p_info[playerid][pMember])
	 		{
	 			format(String, sizeof(String), "'%s' спровоцировала битву за '%s' с вашей организацией", GetMafiaName(MafiaBattle[0][0]), BizzInfo[MafiaBattle[0][2]][bName]);
				SendInf(playerid, String);
				format(String, sizeof(String), "У вас осталось %d секунд на защиту", MafiaBattle[0][3]);
				SendInf(playerid, String);
		 	}
		 	if(MafiaBattle[0][0] == p_info[playerid][pMember])
		 	{
			    format(String, sizeof(String), "Ваша организация спровоцировала битву за '%s' с '%s'. У вас осталось %d секунд на захват", BizzInfo[MafiaBattle[0][2]][bName], GetMafiaName(BizzInfo[MafiaBattle[0][2]][bMafia]), MafiaBattle[0][3]);
				SendInf(playerid, String);
				format(String, sizeof(String), "У вас осталось %d секунд на захват", MafiaBattle[0][3]);
				SendInf(playerid, String);
			}
		}
	}
	if ( p_info[playerid][pMember] != 0 )
	{
		if (strcmp(f_info [ p_info[playerid][pMember] ] [ f_message ], "None", true) )
		{
		    format(STRING_GLOBAL,144,"[ОРГАНИЗАЦИЯ]: %s", f_info [ p_info[playerid][pMember] ] [ f_message ]);
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, STRING_GLOBAL);
		}
	}
	
	GetPlayerBizz(playerid);
	
/*	PlayerTextDrawShow(playerid, cash_td_player[playerid]);
	new cash_text[64];
	format(cash_text, sizeof cash_text, "%d РУБ.", p_info[playerid][pCash]);
	PlayerTextDrawSetString(playerid, cash_td_player[playerid], cash_text);
	
	for(new i; i < 7; i ++)
	{
	    TextDrawShowForPlayer(playerid, cash_td[i]);
	}*/
	
	new query[256];
	format(query, sizeof query, "SELECT `f_id`,`mink` FROM `blacklist` WHERE `accused`='%i' LIMIT 1", p_info[playerid][pID]);
	mysql_tquery(dbHandle, query, "Bl_Check", "i", playerid);
	return 1;
}

forward LoadPlayerItem(playerid);
public LoadPlayerItem(playerid)
{
	new rows, fields, maximum[11];
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new f=1,st[16],st2[16],st3[40];f<MAX_SLOT;f++)
		{
			new Value[32];
			format(st,sizeof(st),"Slot%i",f);
			format(st2,sizeof(st2),"Amt%i",f);
			format(st3,sizeof(st3),"Value%i",f);
			cache_get_field_content(0, st, maximum), PlayerItem1[playerid][f] = strval(maximum);
			cache_get_field_content(0, st2, maximum), PlayerItem2[playerid][f] = strval(maximum);
			cache_get_field_content(0, st3, Value); format(PlayerItem3[playerid][f],32,"%s",Value);
		}
	}
	else if(!rows)
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO "T_INVENT" (`Name`) VALUES ('%s')", GetName(playerid));
		mysql_query(dbHandle, STRING_GLOBAL,false);
		ResetItem(playerid);
	}
	return 1;
}
forward SaveItem(p,i);
public SaveItem(p,i)
{
	if(PlayerItem1[p][i]<0){PlayerItem1[p][i]=0;}
	if(PlayerItem2[p][i]<=0)
	{
		PlayerItem1[p][i]=0;
		PlayerItem2[p][i]=0;
		format(PlayerItem3[p][i],1,"");
	}

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"UPDATE "T_INVENT" SET `Slot%i`='%i', `Amt%i`='%i', `Value%i`='%s' WHERE `Name` = '%s' LIMIT 1",i,PlayerItem1[p][i],i,PlayerItem2[p][i],i,PlayerItem3[p][i],GetName(p));

	mysql_query(dbHandle ,STRING_GLOBAL);
	return 1;
}


stock ResetItem(playerid)
{
	for(new f = 16; f > 0; f --)
	{
		PlayerItem1[playerid][f]=0;
		PlayerItem2[playerid][f]=0;
		format(PlayerItem3[playerid][f],1,"");
	}
}

stock MysqlUpdatePlayerStr(playerid, field[], data[])
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET %s = '%s' WHERE name = '%s' LIMIT 1", field, data, GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock MysqlUpdatePlayerInt(playerid, field[], data[])
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET %s = '%i' WHERE name = '%s' LIMIT 1", field, data, GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock MysqlUpdateHouseStr(idx, field[], data[])
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HOUSE" SET %s = '%s' WHERE id = '%d' LIMIT 1", field, data, idx);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock MysqlUpdateHouseInt(idx, field[], data)
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HOUSE" SET %s = '%d' WHERE id = '%d' LIMIT 1", field, data, idx);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock MysqlUpdateBizzStr(idx, field[], data[])
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET %s = '%s' WHERE id = '%d' LIMIT 1", field, data, idx);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock MysqlUpdateBizzInt(idx, field[], data)
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET %s = '%d' WHERE id = '%d' LIMIT 1", field, data, idx);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock MysqlUpdateOtherStr(field[], data[])
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_OTHER" SET %s = '%s' LIMIT 1", field, data);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock MysqlUpdateOtherInt(field[], data)
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_OTHER" SET %s = '%d' LIMIT 1", field, data);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

forward LoadVeh();
public LoadVeh()
{
	new time = GetTickCount();
	new rows, fields;
	cache_get_data(rows, fields);
	for(new idx = 1; idx <= rows; idx++)
	{
		VehInfo[idx][vID] = cache_get_row_int(idx-1, 0, dbHandle); // id
		VehInfo[idx][vModel] = cache_get_row_int(idx-1, 1, dbHandle); // model
		VehInfo[idx][vPos_X] = cache_get_row_float(idx-1, 2, dbHandle); // x
		VehInfo[idx][vPos_Y] = cache_get_row_float(idx-1, 3, dbHandle); // y
		VehInfo[idx][vPos_Z] = cache_get_row_float(idx-1, 4, dbHandle); // z
		VehInfo[idx][vPos_FA] = cache_get_row_float(idx-1, 5, dbHandle); // fa
		VehInfo[idx][vInt] = cache_get_row_int(idx-1, 6, dbHandle); // vint
		VehInfo[idx][vWorld] = cache_get_row_int(idx-1, 7, dbHandle); // world
		cache_get_row(idx-1, 8, VehInfo[idx][vColors], dbHandle, 32); // colors
		VehInfo[idx][vFraction] = cache_get_row_int(idx-1, 9, dbHandle); // fraction
		VehInfo[idx][vStatus] = cache_get_row_int(idx-1, 10, dbHandle); // status
		VehInfo[idx][vCost] = cache_get_row_int(idx-1, 11, dbHandle); // cost
		sscanf(VehInfo[idx][vColors], "p<,>a<i>[2]", VehInfo[idx][vColor]);
		VehInfo[idx][vFamily] = cache_get_row_int(idx-1, 12, dbHandle); // family
		VehInfo[idx][vRank] = cache_get_row_int(idx-1, 13, dbHandle); // rank
		
		new trunk_guns[200];
		cache_get_row(idx-1, 14, trunk_guns, dbHandle, 200); // guns
		
		sscanf(trunk_guns,"p<,>iiiiiiiiiiiiiiiiii",
		TrunkInfo[idx][tGun][0], TrunkInfo[idx][tAmmo][0], TrunkInfo[idx][tGun][1], TrunkInfo[idx][tAmmo][1],
		TrunkInfo[idx][tGun][2], TrunkInfo[idx][tAmmo][2], TrunkInfo[idx][tGun][3], TrunkInfo[idx][tAmmo][3],
		TrunkInfo[idx][tGun][4], TrunkInfo[idx][tAmmo][4], TrunkInfo[idx][tGun][5], TrunkInfo[idx][tAmmo][5],
		TrunkInfo[idx][tGun][6], TrunkInfo[idx][tAmmo][6], TrunkInfo[idx][tGun][7], TrunkInfo[idx][tAmmo][7],
		TrunkInfo[idx][tGun][8], TrunkInfo[idx][tAmmo][8]);

		TrunkInfo[idx][tMoney] = cache_get_row_int (idx-1, 15, dbHandle);
		TrunkInfo[idx][tDrugs] = cache_get_row_int (idx-1, 16, dbHandle);
		TrunkInfo[idx][tMats] = cache_get_row_int (idx-1, 17, dbHandle);
		TrunkInfo[idx][tArmours] = cache_get_row_int (idx-1, 18, dbHandle);
		TrunkInfo[idx][tKanistra] = cache_get_row_int (idx-1, 19, dbHandle);
		TrunkInfo[idx][tDee] = cache_get_row_int (idx-1, 20, dbHandle);
		TrunkInfo[idx][tOpen] = true;

		if(VehInfo[idx][vStatus] == 0 || VehInfo[idx][vStatus] == 2)
		{
			VehInfo[idx][vVehicle] = CreateVehicle(VehInfo[idx][vModel], VehInfo[idx][vPos_X], VehInfo[idx][vPos_Y], VehInfo[idx][vPos_Z], VehInfo[idx][vPos_FA], VehInfo[idx][vColor][0], VehInfo[idx][vColor][1], 600);
			LinkVehicleToInterior(VehInfo[idx][vVehicle], VehInfo[idx][vInt]);
			SetVehicleVirtualWorld(VehInfo[idx][vVehicle], VehInfo[idx][vWorld]);
		}
		if(VehInfo[idx][vFraction] == 6)
		{
		    CreateDynamic3DTextLabel("Учебный", 0xFF0000FF, 0.0, 0.0, 1.2, 16.0, INVALID_PLAYER_ID, VehInfo[idx][vVehicle]);
		}
		if(VehInfo[idx][vPos_X] == 0 && VehInfo[idx][vPos_Y] == 0 && VehInfo[idx][vPos_Z] == 0)
		{
			SetVehicleVirtualWorld(VehInfo[idx][vVehicle], 1);
		}
		TOTALVEH++;
	}
	printf("[Загружено орг/раб. автомобилей]: <%i>. Потрачено: <%i ms>.", TOTALVEH, GetTickCount() - time);
	return 1;
}

forward LoadATM();
public LoadATM()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			ATMInfo[idx][aID] = cache_get_row_int(idx-1, 0, dbHandle); // ID
			ATMInfo[idx][aX] = cache_get_row_float(idx-1, 1, dbHandle); // aX
			ATMInfo[idx][aY] = cache_get_row_float(idx-1, 2, dbHandle); // aY
			ATMInfo[idx][aZ] = cache_get_row_float(idx-1, 3, dbHandle); // aZ
			ATMInfo[idx][arX] = cache_get_row_float(idx-1, 4, dbHandle); // arX
			ATMInfo[idx][arY] = cache_get_row_float(idx-1, 5, dbHandle); // arY
			ATMInfo[idx][arZ] = cache_get_row_float(idx-1, 6, dbHandle); // arZ
			TOTALATM++;
			ATM[idx] = CreateDynamicObject(2942, ATMInfo[idx][aX], ATMInfo[idx][aY], ATMInfo[idx][aZ], ATMInfo[idx][arX], ATMInfo[idx][arY], ATMInfo[idx][arZ]);
			LABELATM[idx] = CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите ALT", 0xFFFFFFFF, ATMInfo[idx][aX],ATMInfo[idx][aY],ATMInfo[idx][aZ]+1.1,10.0);
		}
	}
	printf("[Загружено банкоматов]: <%i>. Потрачено: <%i ms>.", TOTALATM, GetTickCount() - time);
	return 1;
}

forward LoadSPRUNK();
public LoadSPRUNK()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			SPRInfo[idx][aID] = cache_get_row_int(idx-1, 0, dbHandle); // ID
			SPRInfo[idx][aX] = cache_get_row_float(idx-1, 1, dbHandle); // aX
			SPRInfo[idx][aY] = cache_get_row_float(idx-1, 2, dbHandle); // aY
			SPRInfo[idx][aZ] = cache_get_row_float(idx-1, 3, dbHandle); // aZ
			SPRInfo[idx][arX] = cache_get_row_float(idx-1, 4, dbHandle); // arX
			SPRInfo[idx][arY] = cache_get_row_float(idx-1, 5, dbHandle); // arY
			SPRInfo[idx][arZ] = cache_get_row_float(idx-1, 6, dbHandle); // arZ
			TOTALSPRUNK++;
			SPR[idx] = CreateDynamicObject(10012, SPRInfo[idx][aX], SPRInfo[idx][aY], SPRInfo[idx][aZ], SPRInfo[idx][arX], SPRInfo[idx][arY], SPRInfo[idx][arZ]);
			LABELSPR[idx] = CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите ALT", 0xFFFFFFFF, SPRInfo[idx][aX], SPRInfo[idx][aY], SPRInfo[idx][aZ]+2.0,10.0);
		}
	}
	printf("[Загружено автоматов с газировкой]: <%i>. Потрачено: <%i ms>.", TOTALSPRUNK, GetTickCount() - time);
	return 1;
}

forward LoadRadar();
public LoadRadar()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			RI[idx][r_id] = cache_get_row_int(idx-1, 0, dbHandle);
			cache_get_row(idx-1, 1, RI[idx][r_name], dbHandle, 24);
			RI[idx][r_type] = cache_get_row_int(idx-1, 2, dbHandle);
			RI[idx][r_speed] = cache_get_row_int(idx-1, 3, dbHandle);
			RI[idx][r_x] = cache_get_row_float(idx-1, 4, dbHandle);
			RI[idx][r_y] = cache_get_row_float(idx-1, 5, dbHandle);
			RI[idx][r_z] = cache_get_row_float(idx-1, 6, dbHandle);
			RI[idx][r_a] = cache_get_row_float(idx-1, 7, dbHandle);
			format(STRING_GLOBAL, 512, "Радар {ebec86}№%d{FFFFFF}\n\n{FFFFFF}Макс. разрешенная скорость: {ebec86}%d{FFFFFF} КМ/Ч", TOTALRADAR, RI[idx][r_speed]);
			RI[idx][r_object] = CreateDynamicObject(18880, RI[idx][r_x], RI[idx][r_y], RI[idx][r_z], 0.0, 0.0, RI[idx][r_a]);
			RI[idx][r_label] = CreateDynamic3DTextLabel(STRING_GLOBAL, 0xFFFFFFFF, RI[idx][r_x], RI[idx][r_y], RI[idx][r_z]+4.0,10.0);
			TOTALRADAR++;

			RI[idx][r_area] = CreateDynamicSphere(RI[idx][r_x], RI[idx][r_y], RI[idx][r_z], 30.0);
		}
	}
	return printf("[Загружено радаров]: <%i>. Потрачено: <%i ms>.", TOTALRADAR, GetTickCount() - time);
}

forward LoadBizz();
public LoadBizz()
{
	new time = GetTickCount(), rows, fields, str[512];
	cache_get_data(rows, fields);
	for(new i = TOTALBIZZ; i > 0; i --) strmid(BizzInfo[i][bOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			BizzInfo[idx][bID] = cache_get_row_int(idx-1, 0, dbHandle); // id
			cache_get_row(idx-1, 1, BizzInfo[idx][bOwner], dbHandle, MAX_PLAYER_NAME); // owner
			BizzInfo[idx][bType] = cache_get_row_int(idx-1, 2, dbHandle); // type
			BizzInfo[idx][bPrice] = cache_get_row_int(idx-1, 3, dbHandle); // price
			BizzInfo[idx][bBuyPrice] = cache_get_row_int(idx-1, 4, dbHandle); // buyprice
			BizzInfo[idx][bMoney] = cache_get_row_int(idx-1, 5, dbHandle); // money
			BizzInfo[idx][bLic] = cache_get_row_int(idx-1, 6, dbHandle); // lic
			BizzInfo[idx][bEntrx] = cache_get_row_float(idx-1, 7, dbHandle); // x
			BizzInfo[idx][bEntry] = cache_get_row_float(idx-1, 8, dbHandle); // y
			BizzInfo[idx][bEntrz] = cache_get_row_float(idx-1, 9, dbHandle); // z
			BizzInfo[idx][bExitx] = cache_get_row_float(idx-1, 10, dbHandle); // xt
			BizzInfo[idx][bExity] = cache_get_row_float(idx-1, 11, dbHandle); // yt
			BizzInfo[idx][bExitz] = cache_get_row_float(idx-1, 12, dbHandle); // zt
			BizzInfo[idx][bMenux] = cache_get_row_float(idx-1, 13, dbHandle); // menux
			BizzInfo[idx][bMenuy] = cache_get_row_float(idx-1, 14, dbHandle); // menuy
			BizzInfo[idx][bMenuz] = cache_get_row_float(idx-1, 15, dbHandle); // menuz
			BizzInfo[idx][bInt] = cache_get_row_int(idx-1, 16, dbHandle); // vint
			BizzInfo[idx][bVirtual] = cache_get_row_int(idx-1, 17, dbHandle); // virt
			BizzInfo[idx][bMIcon] = cache_get_row_int(idx-1, 18, dbHandle); // icon
			cache_get_row(idx-1, 19, BizzInfo[idx][bName], dbHandle, 32); // name
			BizzInfo[idx][bEnter] = cache_get_row_int(idx-1, 20, dbHandle); // penter
			BizzInfo[idx][bLock] = cache_get_row_int(idx-1, 21, dbHandle); // block
			BizzInfo[idx][bProduct] = cache_get_row_int(idx-1, 22, dbHandle); // product
			BizzInfo[idx][bTill] = cache_get_row_int(idx-1, 23, dbHandle); // till
			BizzInfo[idx][bLockTime] = cache_get_row_int(idx-1, 24, dbHandle); // locktime
			BizzInfo[idx][bMafia] = cache_get_row_int(idx-1, 25, dbHandle); // mafia
			BizzInfo[idx][bAvtoProd] = cache_get_row_int(idx-1, 27, dbHandle);
			BizzInfo[idx][bActor] = cache_get_row_int(idx-1, 28, dbHandle);
			BizzInfo[idx][bHeal] = cache_get_row_int(idx-1, 29, dbHandle);
			BizzInfo[idx][bProdMax] = cache_get_row_int(idx-1, 30, dbHandle);
			BizzInfo[idx][bHourProd] = cache_get_row_int(idx-1, 31, dbHandle);
			BizzPay[idx] = cache_get_row_int(idx-1, 32, dbHandle);
			
			cache_get_row(idx-1, 34, str, dbHandle, 256);

			sscanf(str, "p<|>dddddddddd",
			BizStats[idx][0], BizStats[idx][1], BizStats[idx][2], BizStats[idx][3], BizStats[idx][4],
			BizStats[idx][5], BizStats[idx][6], BizStats[idx][7], BizStats[idx][8], BizStats[idx][9]);

			cache_get_row(idx-1, 35, str, dbHandle, 512);

			sscanf(str, "p<|>s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]s[24]",
			BizStatsDate[idx][0], BizStatsDate[idx][1], BizStatsDate[idx][2], BizStatsDate[idx][3], BizStatsDate[idx][4],
			BizStatsDate[idx][5], BizStatsDate[idx][6], BizStatsDate[idx][7], BizStatsDate[idx][8], BizStatsDate[idx][9]);
			
			BizzInfo[idx][bProdJob] += random(500)+100;

			MafiaTotalBizz[BizzInfo[idx][bMafia]]++;
			
			BizzInfo[idx][bIcon] = CreateDynamicMapIcon(BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz], BizzInfo[idx][bMIcon], 0, -1, -1, -1, 200.0);
			new string[200];
			if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7)
			{
			    BizzInfo[idx][AreaX] = CreateDynamicSphere(BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz], 1.0, BizzInfo[idx][bVirtual], -1);
			    BizzInfo[idx][bArea] = CreateDynamicSphere(BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz], 1.3, BizzInfo[idx][bVirtual], -1);
				BizzInfo[idx][bPickup] = CreateDynamicPickup(19132,1, BizzInfo[idx][bEntrx],BizzInfo[idx][bEntry],BizzInfo[idx][bEntrz], 0);
				BizzInfo[idx][bPickupExit] = CreateDynamicPickup(19132,1,BizzInfo[idx][bExitx], BizzInfo[idx][bExity], BizzInfo[idx][bExitz],BizzInfo[idx][bVirtual]);
				BizzInfo[idx][bMenu] = CreateDynamicSphere(BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],1.0,BizzInfo[idx][bVirtual],BizzInfo[idx][bInt]);
				if(BizzInfo[idx][bType] == 8) CreateDynamicPickup(1275,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual]);
				else CreateDynamicPickup(1274,1,BizzInfo[idx][bMenux],BizzInfo[idx][bMenuy],BizzInfo[idx][bMenuz],BizzInfo[idx][bVirtual]);

				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[idx][bName]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
				else
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}ALT{FFFFFF} - войти в бизнес", BizzInfo[idx][bName]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				}
			}
			else if(BizzInfo[idx][bType] == 2)
			{
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[idx][bName]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
					CreateDynamicPickup(1650,1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7);
				}
				else
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}H{FFFFFF} - Меню АЗС\n{FFFFFF}Цена за 1 литр бензина: {f0e86b}%i{FFFFFF} рублей", BizzInfo[idx][bName], BizzInfo[idx][bTill]*WorkSalary[15]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
					CreateDynamicPickup(1650,1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7);
				}
			}
			else
			{
				if(!strcmp(BizzInfo[idx][bOwner],"None",true))
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[idx][bName]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
					CreateDynamicPickup(1085,1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7);
				}
				else
				{
					format(string, sizeof(string), ">> %s <<\n\n{f0e86b}H{FFFFFF} - Заехать в СТО", BizzInfo[idx][bName]);
					LABELBIZZ[idx] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
					CreateDynamicPickup(1085,1,BizzInfo[idx][bEntrx], BizzInfo[idx][bEntry], BizzInfo[idx][bEntrz]+0.7);
				}
			}
			BizzInfo[idx][bMoneyHour] = 0;
			BizzInfo[idx][bMoneyDay] = 0;
			TOTALBIZZ++;
		}
	}
	printf("[Загружено бизнесов]: <%i>. Потрачено: <%i ms>.", TOTALBIZZ,GetTickCount() - time);
	return 1;
}

forward LoadHouse();
public LoadHouse()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	for(new i = TOTALHOUSE; i > 0; i --) strmid(HouseInfo[i][hOwner],"None",0,strlen("None"),MAX_PLAYER_NAME);
	if(rows)
	{
		for(new idx = 1; idx <= rows; idx++)
		{
			HouseInfo[idx][hID] = cache_get_row_int(idx-1, 0, dbHandle); // id
			HouseInfo[idx][hEntrx] = cache_get_row_float(idx-1, 1, dbHandle); // hEntrx
			HouseInfo[idx][hEntry] = cache_get_row_float(idx-1, 2, dbHandle); // hEntry
			HouseInfo[idx][hEntrz] = cache_get_row_float(idx-1, 3, dbHandle); // hEntrz
			HouseInfo[idx][hExitx] = cache_get_row_float(idx-1, 4, dbHandle); // hExitx
			HouseInfo[idx][hExity] = cache_get_row_float(idx-1, 5, dbHandle); // hExity
			HouseInfo[idx][hExitz] = cache_get_row_float(idx-1, 6, dbHandle); // hExitz
			HouseInfo[idx][hCarx] = cache_get_row_float(idx-1, 7, dbHandle); // carx
			HouseInfo[idx][hCary] = cache_get_row_float(idx-1, 8, dbHandle); // cary
			HouseInfo[idx][hCarz] = cache_get_row_float(idx-1, 9, dbHandle); // carz
			HouseInfo[idx][hCarfa] = cache_get_row_float(idx-1, 10, dbHandle); // carfa
			cache_get_row(idx-1, 11, HouseInfo[idx][hOwner], dbHandle, MAX_PLAYER_NAME); // hOwner
			HouseInfo[idx][hDiscript] = cache_get_row_int(idx-1, 12, dbHandle); // hDiscript
			HouseInfo[idx][hPrice] = cache_get_row_int(idx-1, 13, dbHandle); // hPrice
			HouseInfo[idx][hBuyPrice] = cache_get_row_int(idx-1, 14, dbHandle); // buyprice
			HouseInfo[idx][hInt] = cache_get_row_int(idx-1, 15, dbHandle); // hInt
			HouseInfo[idx][hVirtual] = cache_get_row_int(idx-1, 16, dbHandle); // hVirtual
			HouseInfo[idx][hLock] = cache_get_row_int(idx-1, 17, dbHandle); // hLock
			HouseInfo[idx][hOplata] = cache_get_row_int(idx-1, 18, dbHandle); // hOplata
			HouseInfo[idx][hHeal] = cache_get_row_int(idx-1, 19, dbHandle); // hHeal
			HouseInfo[idx][hGarage] = cache_get_row_int(idx-1, 20, dbHandle); // hGarage
			HouseInfo[idx][hUpdate] = cache_get_row_int(idx-1, 21, dbHandle); // hUpdate
			HouseInfo[idx][hMetall] = cache_get_row_int(idx-1, 22, dbHandle); // hAutoDoors
			HouseInfo[idx][hMoney] = cache_get_row_int(idx-1, 23, dbHandle); // hAutoDoors
			HouseInfo[idx][hPatrons] = cache_get_row_int(idx-1, 24, dbHandle); // hAutoDoors
			HouseInfo[idx][hDrugs] = cache_get_row_int(idx-1, 25, dbHandle); // hAutoDoors
			HouseInfo[idx][gRentStatus] = cache_get_row_int(idx-1, 26, dbHandle); // hAutoDoors
			HouseInfo[idx][RentAllPlata] = cache_get_row_int(idx-1, 27, dbHandle); // hAutoDoors
			
			HouseInfo[idx][hSafeGun][0] = cache_get_row_int(idx-1, 28, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeGun][1] = cache_get_row_int(idx-1, 29, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeGun][2] = cache_get_row_int(idx-1, 30, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeGun][3] = cache_get_row_int(idx-1, 31, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeGun][4] = cache_get_row_int(idx-1, 32, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeGun][5] = cache_get_row_int(idx-1, 33, dbHandle); // hAutoDoors
			
			HouseInfo[idx][hSafeAmmos][0] = cache_get_row_int(idx-1, 34, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeAmmos][1] = cache_get_row_int(idx-1, 35, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeAmmos][2] = cache_get_row_int(idx-1, 36, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeAmmos][3] = cache_get_row_int(idx-1, 37, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeAmmos][4] = cache_get_row_int(idx-1, 38, dbHandle); // hAutoDoors
			HouseInfo[idx][hSafeAmmos][5] = cache_get_row_int(idx-1, 39, dbHandle); // hAutoDoors
			
			if(!strcmp(HouseInfo[idx][hOwner],"None",true))
			{
				HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 31, 0,-1,-1,-1,150.0);
				HouseInfo[idx][hPickup] = CreateDynamicPickup(1273, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 0);
			}
			else
			{
				HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 32, 0,-1,-1,-1,150.0);
				HouseInfo[idx][hPickup] = CreateDynamicPickup(1272, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 0);
			}
			if(!HouseInfo[idx][hUpdate])
			{
				HouseInfo[idx][hPickupExit] = CreateDynamic3DTextLabel("{FFFFFF}Для выхода введите:\n{FFCC00}/exit\n{FFFFFF}Управление домом: \n{0099FF}/hmenu",COLOR_WHITE,HouseInfo[idx][hExitx], HouseInfo[idx][hExity], HouseInfo[idx][hExitz],2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,HouseInfo[idx][hVirtual],HouseInfo[idx][hInt]);
			}
			else
			{
				HouseInfo[idx][hPickupExit] = CreateDynamic3DTextLabel("{FFFFFF}Для выхода используйте:\n {FFCC00}L.ALT\n{FFFFFF}Управление домом: \n{0099FF}/hmenu",COLOR_WHITE,HouseInfo[idx][hExitx], HouseInfo[idx][hExity], HouseInfo[idx][hExitz],2.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,HouseInfo[idx][hVirtual],HouseInfo[idx][hInt]);
			}
			HouseInfo[idx][hArea] = CreateDynamicSphere(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 1.3, HouseInfo[idx][hVirtual], -1);

			TOTALHOUSE++;
		}
	}
	printf("[Загружено домов]: <%i>. Потрачено: <%i ms>.", TOTALHOUSE, GetTickCount() - time);
	return 1;
}

forward LoadOther();
public LoadOther()
{
	new time = GetTickCount(), rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		FracBank[8] = cache_get_row_int(0, 0, dbHandle); // lsnbank
		FracBank[9] = cache_get_row_int(0, 1, dbHandle); // sfnbank
		FracBank[10] = cache_get_row_int(0, 2, dbHandle); // lvnbank
		cache_get_row(0, 3, NewsPrice, dbHandle, 40); // newsprice
		sscanf(NewsPrice, "p<,>iiiiii", SmsPrice[0], SmsPrice[1], CallPrice[0], CallPrice[1], AdvertPrice[0], AdvertPrice[1]);
		cache_get_row(0, 4, JobPrice, dbHandle, 40); // jobprice
		sscanf(JobPrice, "p<,>iiiiii", ShPrice[0], ShPrice[1], LesPrice[0], LesPrice[1], OzPrice[0], OzPrice[1]);
		cache_get_row(0, 6, MdPanel, dbHandle, 40); // MdPanel
		sscanf(MdPanel, "p<,>iiiiii", MD[0], MD[1], MD[2], MD[3], MD[4], MD[5]);
		//Mineral = cache_get_row_int(0, 7, dbHandle); // mineral
		//gGunWorkWH[0] = cache_get_row_int(0, 8, dbHandle); // guncoal
		//gGunWorkWH[1] = cache_get_row_int(0, 9, dbHandle); // gunwood
		//gGunWorkWH[2] = cache_get_row_int(0, 10, dbHandle); // gun
		//Lessdrov = cache_get_row_int(0, 11, dbHandle); // drova
		gArmyWarehouse[0] = cache_get_row_int(0, 12, dbHandle); // armygun
		gArmyWarehouse[1] = cache_get_row_int(0, 13, dbHandle); // armyammo
		doubling_exp = cache_get_row_int(0, 14, dbHandle); // d_exp
		doubling_donate = cache_get_row_int(0, 15, dbHandle); // d_donate
		doubling_job = cache_get_row_int(0, 16, dbHandle); // d_jobik
		pickplayers[0] = cache_get_row_int(0, 17, dbHandle); // pickplayers

		if(!doubling_donate && !doubling_exp) SendRconCommand("hostname "SERVER_NAME_NOXD"");
		else if(doubling_donate && doubling_exp) SendRconCommand("hostname "SERVER_NAME_X2DE"");
	}
	printf("[Загружено остальное]: Потрачено: <%i ms>.",GetTickCount() - time);
	return 1;
}

forward LoadFamily();
public LoadFamily()
{
	new time = GetTickCount(), rows, fields, temp [88];
	cache_get_data(rows,fields);
	if(rows)
	{
		for(new f = 1; f <= rows; f++)
		{
			cache_get_field_content(f-1, "fam_name", temp) ,sscanf(temp, "s[64]", family_info[f][f_name]);
			cache_get_field_content(f-1, "fam_creator", temp) , sscanf(temp, "s[64]", family_info[f][f_creator]) ;
			cache_get_field_content(f-1, "fam_zamcreator", temp) , sscanf(temp, "s[64]", family_info[f][f_creator_zam]) ;
			cache_get_field_content(f-1, "fam_data", temp ) , sscanf(temp, "s[32]", family_info[f][f_creating_data]);
			family_info[f][f_chat_color] = cache_get_field_content_int(f-1, "fam_chat_color");
			family_info[f][f_members_amount] = cache_get_field_content_int(f-1, "fam_members_amount");
			
			cache_get_field_content ( f-1, "f_spawn", temp ), sscanf ( temp, "p<,>ffffdd",
			family_info [ f ] [ f_spawn ] [ 0 ], family_info [ f ] [ f_spawn ] [ 1 ], family_info [ f ] [ f_spawn ] [ 2 ], family_info [ f ] [ f_spawn ] [ 3 ],
			family_info [ f ] [ f_spawn_int ], family_info [ f ] [ f_spawn_virt ] ) ;
			
			family_info [ f ] [ f_patron ] = cache_get_field_content_int(f-1, "frac_patron");
			family_info [ f ] [ f_metall ] = cache_get_field_content_int(f-1, "frac_metall");
			family_info [ f ] [ f_money ] = cache_get_field_content_int(f-1, "frac_money");
			family_info [ f ] [ f_drugs ] = cache_get_field_content_int(f-1, "frac_drugs");

			family_count++;
		}
		printf("[Загружено семей]: <%d>. Потрачено: <%i ms>.", family_count, GetTickCount() - time);
	}
	else return print("[Загружено семей]: <0>. Потрачено: <->.");
	return 1;
}

forward LoadPodezd();
public LoadPodezd()
{
	new time = GetTickCount();
	new rows, fields;
	cache_get_data(rows, fields);
	for(new idx = 1; idx <= rows; idx++)
	{
		PodezdInfo[idx][idpodezd] = cache_get_row_int(idx-1, 0, dbHandle);
		PodezdInfo[idx][poX] = cache_get_row_float(idx-1, 1, dbHandle);
		PodezdInfo[idx][poY] = cache_get_row_float(idx-1, 2, dbHandle);
		PodezdInfo[idx][poZ] = cache_get_row_float(idx-1, 3, dbHandle);
		PodezdInfo[idx][poExitX] = cache_get_row_float(idx-1, 4, dbHandle);
		PodezdInfo[idx][poExitY] = cache_get_row_float(idx-1, 5, dbHandle);
		PodezdInfo[idx][poExitZ] = cache_get_row_float(idx-1, 6, dbHandle);
		PodezdInfo[idx][poI] = cache_get_row_int(idx-1, 7, dbHandle);
		PodezdInfo[idx][poV] = cache_get_row_int(idx-1, 8, dbHandle);
		PodezdInfo[idx][poType] = cache_get_row_int(idx-1, 9, dbHandle);
		CreateDynamicMapIcon(PodezdInfo[idx][poX], PodezdInfo[idx][poY], PodezdInfo[idx][poZ], 31, 0,-1,-1,-1,120.0);
		PodezdInfo[idx][poSphereEnter] = CreateDynamicSphere(PodezdInfo[idx][poX], PodezdInfo[idx][poY], PodezdInfo[idx][poZ], 1.2, 0, 0);
		PodezdInfo[idx][poSphereExit] = CreateDynamicSphere(PodezdInfo[idx][poExitX], PodezdInfo[idx][poExitY], PodezdInfo[idx][poExitZ], 1.2, PodezdInfo[idx][poV], PodezdInfo[idx][poI]);
		PodezdInfo[idx][poPickup] = CreateDynamicPickup(19133, 1, PodezdInfo[idx][poX], PodezdInfo[idx][poY], PodezdInfo[idx][poZ], 0);
		PodezdInfo[idx][poPickupExit] = CreateDynamicPickup(19133, 1, PodezdInfo[idx][poExitX], PodezdInfo[idx][poExitY], PodezdInfo[idx][poExitZ], PodezdInfo[idx][poV]);
		TOTALPODEZD++;
	}
	printf("[Загружено подъездов]: <%d>. Потрачено: <%i ms>.", TOTALPODEZD,GetTickCount() - time);
	return 1;
}

forward LoadRooms();
public LoadRooms()
{
	new time = GetTickCount();
	for(new i = TOTALROOMS; i > 0; i--)
	{
		strmid(RoomsInfo[i][rOwner],"None_Nones",0,strlen("None_Nones"),32);
	}
	new rows, fields;
	cache_get_data(rows, fields);
	for(new idx = 1; idx <= rows; idx++)
	{
		RoomsInfo[idx][idkv] = cache_get_row_int(idx-1, 0, dbHandle);
		RoomsInfo[idx][rX] = cache_get_row_float(idx-1, 1, dbHandle);
		RoomsInfo[idx][rY] = cache_get_row_float(idx-1, 2, dbHandle);
		RoomsInfo[idx][rZ] = cache_get_row_float(idx-1, 3, dbHandle);
		RoomsInfo[idx][rV] = cache_get_row_int(idx-1, 4, dbHandle);
		RoomsInfo[idx][rI] = cache_get_row_int(idx-1, 5, dbHandle);
		RoomsInfo[idx][rExitX] = cache_get_row_float(idx-1, 6, dbHandle);
		RoomsInfo[idx][rExitY] = cache_get_row_float(idx-1, 7, dbHandle);
		RoomsInfo[idx][rExitZ] = cache_get_row_float(idx-1, 8, dbHandle);
		RoomsInfo[idx][rExitV] = cache_get_row_int(idx-1, 9, dbHandle);
		RoomsInfo[idx][rExitI] = cache_get_row_int(idx-1, 10, dbHandle);
		RoomsInfo[idx][rType] = cache_get_row_int(idx-1, 11, dbHandle);
		RoomsInfo[idx][rCost] = cache_get_row_int(idx-1, 12, dbHandle);
		cache_get_row(idx-1, 13, RoomsInfo[idx][rOwner], dbHandle, MAX_PLAYER_NAME);
		RoomsInfo[idx][rOplata] = cache_get_row_int(idx-1, 14, dbHandle);
		RoomsInfo[idx][rLock] = cache_get_row_int(idx-1, 15, dbHandle);
		RoomsInfo[idx][rSphereEnter] = CreateDynamicSphere(RoomsInfo[idx][rX], RoomsInfo[idx][rY], RoomsInfo[idx][rZ], 1.2, RoomsInfo[idx][rV], RoomsInfo[idx][rI]);
		RoomsInfo[idx][rSphereExit] = CreateDynamicSphere(RoomsInfo[idx][rExitX], RoomsInfo[idx][rExitY], RoomsInfo[idx][rExitZ], 1.2, RoomsInfo[idx][rExitV], RoomsInfo[idx][rExitI]);
		RoomsInfo[idx][rPickupEnter] = CreateDynamicPickup(1239, 1, RoomsInfo[idx][rX], RoomsInfo[idx][rY], RoomsInfo[idx][rZ], RoomsInfo[idx][rV]);
		RoomsInfo[idx][rPickupExit] = CreateDynamicPickup(1239, 1, RoomsInfo[idx][rExitX], RoomsInfo[idx][rExitY], RoomsInfo[idx][rExitZ], RoomsInfo[idx][rExitV]);
		RoomsInfo[idx][rPickupText] = CreateDynamic3DTextLabel("Управление квартирой: \n{FFCC00}/rpanel",0xFFFFFFAA,RoomsInfo[idx][rExitX], RoomsInfo[idx][rExitY], RoomsInfo[idx][rExitZ],20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, RoomsInfo[idx][rExitV], RoomsInfo[idx][rExitI]);
		TOTALROOMS++;
	}
	printf("[Загружено квартир]: <%d>. Потрачено: <%i ms>.", TOTALROOMS,GetTickCount() - time);
	return 1;
}

stock SaveWarehouse()
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_OTHER" SET armygun = %d, armyammo = %d ", gArmyWarehouse[0], gArmyWarehouse[1]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

stock LoadTextDrawsMainMenu()
{
    sp_td[0] = TextDrawCreate(22.916669, 168.481506, "LD_SPAC:white");
	TextDrawLetterSize(sp_td[0], 0.000000, 0.000000);
	TextDrawTextSize(sp_td[0], 126.666679, 135.629806);
	TextDrawAlignment(sp_td[0], 1);
	TextDrawColor(sp_td[0], 269488383);
	TextDrawSetShadow(sp_td[0], 0);
	TextDrawSetOutline(sp_td[0], 0);
	TextDrawBackgroundColor(sp_td[0], 255);
	TextDrawFont(sp_td[0], 4);
	TextDrawSetProportional(sp_td[0], 0);
	TextDrawSetShadow(sp_td[0], 0);

	sp_td[1] = TextDrawCreate(25.000011, 160.703613, "LD_SPAC:white");
	TextDrawLetterSize(sp_td[1], 0.000000, 0.000000);
	TextDrawTextSize(sp_td[1], 122.083358, 19.481578);
	TextDrawAlignment(sp_td[1], 1);
	TextDrawColor(sp_td[1], 522133503);
	TextDrawSetShadow(sp_td[1], 0);
	TextDrawSetOutline(sp_td[1], 0);
	TextDrawBackgroundColor(sp_td[1], 255);
	TextDrawFont(sp_td[1], 4);
	TextDrawSetProportional(sp_td[1], 0);
	TextDrawSetShadow(sp_td[1], 0);

	sp_td[2] = TextDrawCreate(25.000022, 184.555526, "LD_SPAC:white");
	TextDrawLetterSize(sp_td[2], 0.000000, 0.000000);
	TextDrawTextSize(sp_td[2], 2.500037, 111.259346);
	TextDrawAlignment(sp_td[2], 1);
	TextDrawColor(sp_td[2], 0xf4d442ff);//927687935
	TextDrawSetShadow(sp_td[2], 0);
	TextDrawSetOutline(sp_td[2], 0);
	TextDrawBackgroundColor(sp_td[2], 255);
	TextDrawFont(sp_td[2], 4);
	TextDrawSetProportional(sp_td[2], 0);
	TextDrawSetShadow(sp_td[2], 0);

	sp_td[3] = TextDrawCreate(144.583374, 184.555526, "LD_SPAC:white");
	TextDrawLetterSize(sp_td[3], 0.000000, 0.000000);
	TextDrawTextSize(sp_td[3], 2.500037, 111.259346);
	TextDrawAlignment(sp_td[3], 1);
	TextDrawColor(sp_td[3], 0xf4d442ff);
	TextDrawSetShadow(sp_td[3], 0);
	TextDrawSetOutline(sp_td[3], 0);
	TextDrawBackgroundColor(sp_td[3], 255);
	TextDrawFont(sp_td[3], 4);
	TextDrawSetProportional(sp_td[3], 0);
	TextDrawSetShadow(sp_td[3], 0);

	sp_td[4] = TextDrawCreate(25.000017, 292.407379, "LD_SPAC:white");
	TextDrawLetterSize(sp_td[4], 0.000000, 0.000000);
	TextDrawTextSize(sp_td[4], 122.083358, 3.407505);
	TextDrawAlignment(sp_td[4], 1);
	TextDrawColor(sp_td[4], 0xf4d442ff);
	TextDrawSetShadow(sp_td[4], 0);
	TextDrawSetOutline(sp_td[4], 0);
	TextDrawBackgroundColor(sp_td[4], 255);
	TextDrawFont(sp_td[4], 4);
	TextDrawSetProportional(sp_td[4], 0);
	TextDrawSetShadow(sp_td[4], 0);

	sp_td[5] = TextDrawCreate(25.000015, 297.592651, "LD_SPAC:white");
	TextDrawLetterSize(sp_td[5], 0.000000, 0.000000);
	TextDrawTextSize(sp_td[5], 122.083358, 3.407505);
	TextDrawAlignment(sp_td[5], 1);
	TextDrawColor(sp_td[5], 522133503);
	TextDrawSetShadow(sp_td[5], 0);
	TextDrawSetOutline(sp_td[5], 0);
	TextDrawBackgroundColor(sp_td[5], 255);
	TextDrawFont(sp_td[5], 4);
	TextDrawSetProportional(sp_td[5], 0);
	TextDrawSetShadow(sp_td[5], 0);

	sp_td[6] = TextDrawCreate(25.000022, 181.962951, "LD_SPAC:white");
	TextDrawLetterSize(sp_td[6], 0.000000, 0.000000);
	TextDrawTextSize(sp_td[6], 122.083358, 3.407505);
	TextDrawAlignment(sp_td[6], 1);
	TextDrawColor(sp_td[6], 0xf4d442ff);
	TextDrawSetShadow(sp_td[6], 0);
	TextDrawSetOutline(sp_td[6], 0);
	TextDrawBackgroundColor(sp_td[6], 255);
	TextDrawFont(sp_td[6], 4);
	TextDrawSetProportional(sp_td[6], 0);
	TextDrawSetShadow(sp_td[6], 0);

/*    cash_td[0] = TextDrawCreate(491.947357, 77.750000, "LD_SPAC:white");
	TextDrawLetterSize(cash_td[0], 0.000000, 0.000000);
	TextDrawTextSize(cash_td[0], 122.284057, 19.083328);
	TextDrawAlignment(cash_td[0], 1);
	TextDrawColor(cash_td[0], 0xa24646FF);
	TextDrawSetShadow(cash_td[0], 0);
	TextDrawSetOutline(cash_td[0], 0);
	TextDrawFont(cash_td[0], 4);

	cash_td[1] = TextDrawCreate(472.737915, 70.583328, "ld_beat:chit");
	TextDrawLetterSize(cash_td[1], 0.000000, 0.000000);
	TextDrawTextSize(cash_td[1], 29.516830, 34.416660);
	TextDrawAlignment(cash_td[1], 1);
	TextDrawColor(cash_td[1], 0xa24646FF);
	TextDrawSetShadow(cash_td[1], 0);
	TextDrawSetOutline(cash_td[1], 0);
	TextDrawFont(cash_td[1], 4);

	cash_td[2] = TextDrawCreate(493.415832, 79.750007, "LD_SPAC:white");
	TextDrawLetterSize(cash_td[2], 0.000000, 0.000000);
	TextDrawTextSize(cash_td[2], 119.472930, 15.749995);
	TextDrawAlignment(cash_td[2], 1);
	TextDrawColor(cash_td[2], 151587327);//
	TextDrawSetShadow(cash_td[2], 0);
	TextDrawSetOutline(cash_td[2], 0);
	TextDrawBackgroundColor(cash_td[2], -1);
	TextDrawFont(cash_td[2], 4);

	cash_td[3] = TextDrawCreate(490.136138, 80.333343, "LD_SPAC:white");
	TextDrawLetterSize(cash_td[3], 0.000000, 0.000000);
	TextDrawTextSize(cash_td[3], 122.284057, 14.583326);
	TextDrawAlignment(cash_td[3], 1);
	TextDrawColor(cash_td[3], 0xa24646FF);
	TextDrawSetShadow(cash_td[3], 0);
	TextDrawSetOutline(cash_td[3], 0);
	TextDrawFont(cash_td[3], 4);

	cash_td[4] = TextDrawCreate(473.737915, 72.166664, "ld_beat:chit");
	TextDrawLetterSize(cash_td[4], 0.000000, 0.000000);
	TextDrawTextSize(cash_td[4], 27.174224, 30.916660);
	TextDrawAlignment(cash_td[4], 1);
	TextDrawColor(cash_td[4], 151587327);//
	TextDrawSetShadow(cash_td[4], 0);
	TextDrawSetOutline(cash_td[4], 0);
	TextDrawFont(cash_td[4], 4);

	cash_td[5] = TextDrawCreate(474.674987, 73.333335, "ld_beat:chit");
	TextDrawLetterSize(cash_td[5], 0.000000, 0.000000);
	TextDrawTextSize(cash_td[5], 25.300140, 28.583324);
	TextDrawAlignment(cash_td[5], 1);
	TextDrawColor(cash_td[5], 0xa24646FF);
	TextDrawSetShadow(cash_td[5], 0);
	TextDrawSetOutline(cash_td[5], 0);
	TextDrawFont(cash_td[5], 4);

	cash_td[6] = TextDrawCreate(483.045410, 78.750007, "$");
	TextDrawLetterSize(cash_td[6], 0.526837, 1.786666);
	TextDrawAlignment(cash_td[6], 1);
	TextDrawColor(cash_td[6], 151587327);
	TextDrawSetShadow(cash_td[6], 0);
	TextDrawSetOutline(cash_td[6], 0);
	TextDrawBackgroundColor(cash_td[6], 51);
	TextDrawFont(cash_td[6], 1);
	TextDrawSetProportional(cash_td[6], 1);*/
	
	new Float:pos = 436.0693;
    for(new id; id < AC_WARNLINE; id++)
    {
        new Text:text = warningPanelTD[id] = TextDrawCreate(635.5764, pos, "_"); pos -= 7.0;
        TextDrawLetterSize(text, 0.1804, 0.8024);
		TextDrawAlignment(text, 3);
		TextDrawColor(text, -1);
		TextDrawSetOutline(text, 0);
		TextDrawBackgroundColor(text, 255);
		TextDrawFont(text, 1);
		TextDrawSetProportional(text, 1);
		TextDrawSetShadow(text, 1);
		warningPanelText[id] = "_";
	}
	
	new Float:DrawPos = 175.000000;
	Cheat = 0, Cheat1 = 0;
	for(new i; i < 10; i++)
	{
		if(i > 0) DrawPos += 30;
	    CheatShow[0][i] = TextDrawCreate(DrawPos,423.000000,"-1");
    	CheatShow[1][i] = TextDrawCreate(DrawPos,434.000000,"-1");
    	TextDrawColor(CheatShow[0][i], 0xffffffFF); TextDrawColor(CheatShow[1][i], 0xa24646FF);
		TextDrawFont(CheatShow[0][i], 3), TextDrawFont(CheatShow[1][i], 3);
		TextDrawSetOutline(CheatShow[0][i], 1), TextDrawSetOutline(CheatShow[1][i], 1);
		TextDrawLetterSize(CheatShow[0][i], 0.2500,0.870), TextDrawLetterSize(CheatShow[1][i], 0.2500,0.870);
	}
	
	trunk_ball[7] = TextDrawCreate(420.732116, 74.666664, "");
	TextDrawTextSize(trunk_ball[7], 57.628128, 109.083366);
	TextDrawColor(trunk_ball[7], -1);
	TextDrawBackgroundColor(trunk_ball[7], 0x00000000);
	TextDrawFont(trunk_ball[7], 5);

	trunk_ball[8] = TextDrawCreate(481.703155, 134.000045, "");
	TextDrawTextSize(trunk_ball[8], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[8], -1);
	TextDrawBackgroundColor(trunk_ball[8], 0x00000000);
	TextDrawFont(trunk_ball[8], 5);

	trunk_ball[9] = TextDrawCreate(533.772094, 168.833404, "");
	TextDrawTextSize(trunk_ball[9], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[9], -1);
	TextDrawBackgroundColor(trunk_ball[9], 0x00000000);
	TextDrawFont(trunk_ball[9], 5);

	trunk_ball[10] = TextDrawCreate(560.072387, 229.333374, "");
	TextDrawTextSize(trunk_ball[10], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[10], -1);
	TextDrawBackgroundColor(trunk_ball[10], 0x00000000);
	TextDrawFont(trunk_ball[10], 5);

	trunk_ball[11] = TextDrawCreate(538.114746, 294.500030, "");
	TextDrawTextSize(trunk_ball[11], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[11], -1);
	TextDrawBackgroundColor(trunk_ball[11], 0x00000000);
	TextDrawFont(trunk_ball[11], 5);

	trunk_ball[12] = TextDrawCreate(492.731079, 332.833312, "");
	TextDrawTextSize(trunk_ball[12], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[12], -1);
	TextDrawBackgroundColor(trunk_ball[12], 0x00000000);
	TextDrawFont(trunk_ball[12], 5);

	trunk_ball[13] = TextDrawCreate(439.382629, 361.250030, "");
	TextDrawTextSize(trunk_ball[13], 53.879959, 46.666690);
	TextDrawColor(trunk_ball[13], -1);
	TextDrawBackgroundColor(trunk_ball[13], 0x00000000);
	TextDrawFont(trunk_ball[13], 5);

 	trunk_ball[0] = TextDrawCreate(418.857635, 92.749984,  "ld_beat:chit");
	trunk_ball[1] = TextDrawCreate(472.332214, 119.416664, "ld_beat:chit");
	trunk_ball[2] = TextDrawCreate(522.995361, 158.916610, "ld_beat:chit");
	trunk_ball[3] = TextDrawCreate(548.827453, 218.833312, "ld_beat:chit");
	trunk_ball[4] = TextDrawCreate(527.806823, 279.333282, "ld_beat:chit");
	trunk_ball[5] = TextDrawCreate(481.017517, 318.250000, "ld_beat:chit");
	trunk_ball[6] = TextDrawCreate(428.137451, 348.416656, "ld_beat:chit");

	for(new trb = 0; trb < 7; trb++)
	{
		TextDrawTextSize(trunk_ball[trb], 70.000000, 70.000000);
		TextDrawColor(trunk_ball[trb], -176);
		TextDrawBackgroundColor(trunk_ball[trb], 0x00000000);
		TextDrawFont(trunk_ball[trb], 4);
	}

 	trunk_ball[14] = TextDrawCreate(456.339752, 147.000030, "ОРУЖИЕ");
	TextDrawTextSize(trunk_ball[14], 20.614929, 37.916660);
	trunk_ball[15] = TextDrawCreate(509.345733, 178.333358, "ДЕНЬГИ");
	TextDrawTextSize(trunk_ball[15], 17.803802, 32.666660);
	trunk_ball[16] = TextDrawCreate(560.477478, 217.833343, "НАРКО");
	TextDrawTextSize(trunk_ball[16], 17.803802, 32.666660);
	trunk_ball[17] = TextDrawCreate(585.840881, 277.166625, "ПАТР");
	TextDrawTextSize(trunk_ball[17], 17.803802, 32.666660);
	trunk_ball[18] = TextDrawCreate(565.757568, 336.499908, "БРОНЬ");
	TextDrawTextSize(trunk_ball[18], 43.572463, 36.166652);
	trunk_ball[19] = TextDrawCreate(518.499694, 378.333129, "КАНИС.");
	TextDrawTextSize(trunk_ball[19], 36.076126, 29.166648);
	trunk_ball[20] = TextDrawCreate(465.619628, 408.499694, "ИНСТР.");
	TextDrawTextSize(trunk_ball[20], 36.076126, 29.166648);

	for(new trn = 14; trn <= 20; trn++)
	{
		TextDrawLetterSize(trunk_ball[trn], 0.219018, 0.894166);
		TextDrawTextSize(trunk_ball[trn], 20.614929, 37.916660);
		TextDrawAlignment(trunk_ball[trn], 2);
		TextDrawColor(trunk_ball[trn], -1);
		TextDrawUseBox(trunk_ball[trn], true);
		TextDrawBoxColor(trunk_ball[trn], 0xa24646FF);
		TextDrawSetShadow(trunk_ball[trn], 0);
		TextDrawSetOutline(trunk_ball[trn], 1);
		TextDrawBackgroundColor(trunk_ball[trn], 255);
		TextDrawFont(trunk_ball[trn], 2);
		TextDrawSetProportional(trunk_ball[trn], 1);
		TextDrawSetSelectable(trunk_ball[trn], true);
	}

	trunk_ball[21] = TextDrawCreate(590.805480, 134.750076,"ОТКРЫТЬ БАГАЖНИК~n~ДЛЯ ИГРОКОВ");
	TextDrawLetterSize(trunk_ball[21], 0.213864, 1.063333);
	TextDrawTextSize(trunk_ball[21], 20.543182, 75.250000);
	TextDrawAlignment(trunk_ball[21], 2);
	TextDrawColor(trunk_ball[21], -35);
	TextDrawUseBox(trunk_ball[21], true);
	TextDrawBoxColor(trunk_ball[21], 0xf0e86b90);
	TextDrawSetOutline(trunk_ball[21], 1);
	TextDrawBackgroundColor(trunk_ball[21], 144);
	TextDrawFont(trunk_ball[21], 1);
	TextDrawSetProportional(trunk_ball[21], 1);
	TextDrawSetSelectable(trunk_ball[21], true);

    ScoreCS[0] = TextDrawCreate(189.282501, 387.916595, "[ИНФОРМАЦИЯ]");
	TextDrawLetterSize(ScoreCS[0], 0.184348, 1.337500);
	TextDrawAlignment(ScoreCS[0], 1);
	TextDrawColor(ScoreCS[0], 0xa24646FF);
	TextDrawSetShadow(ScoreCS[0], 0);
	TextDrawSetOutline(ScoreCS[0], 1);
	TextDrawBackgroundColor(ScoreCS[0], 51);
	TextDrawFont(ScoreCS[0], 1);
	TextDrawSetProportional(ScoreCS[0], 1);

	ScoreCS[1] = TextDrawCreate(240.666091, 387.333343, "ДЛЯ ПОКУПКИ ОРУЖИЯ НАЖМИТЕ - H");
	TextDrawLetterSize(ScoreCS[1], 0.208711, 1.395833);
	TextDrawAlignment(ScoreCS[1], 1);
	TextDrawColor(ScoreCS[1], -1);
	TextDrawSetShadow(ScoreCS[1], 0);
	TextDrawSetOutline(ScoreCS[1], 1);
	TextDrawBackgroundColor(ScoreCS[1], 51);
	TextDrawFont(ScoreCS[1], 1);
	TextDrawSetProportional(ScoreCS[1], 1);

    HungerBackground[0] = TextDrawCreate(547.500000, 58.000000, "_");
	TextDrawBackgroundColor(HungerBackground[0], 255);
	TextDrawFont(HungerBackground[0], 1);
	TextDrawLetterSize(HungerBackground[0], 0.500000, 0.399999);
	TextDrawColor(HungerBackground[0], -1);
	TextDrawSetOutline(HungerBackground[0], 0);
	TextDrawSetProportional(HungerBackground[0], 1);
	TextDrawSetShadow(HungerBackground[0], 1);
	TextDrawUseBox(HungerBackground[0], 1);
	TextDrawBoxColor(HungerBackground[0], 255);
	TextDrawTextSize(HungerBackground[0], 606.000000, 40.000000);
	TextDrawSetSelectable(HungerBackground[0], 0);

	HungerBackground[1] = TextDrawCreate(549.500000, 60.000000, "_");
	TextDrawBackgroundColor(HungerBackground[1], 255);
	TextDrawFont(HungerBackground[1], 1);
	TextDrawLetterSize(HungerBackground[1], 0.490000, -0.000000);
	TextDrawColor(HungerBackground[1], -1);
	TextDrawSetOutline(HungerBackground[1], 0);
	TextDrawSetProportional(HungerBackground[1], 1);
	TextDrawSetShadow(HungerBackground[1], 1);
	TextDrawUseBox(HungerBackground[1], 1);
	TextDrawBoxColor(HungerBackground[1], 1787344480);
	TextDrawTextSize(HungerBackground[1], 604.000000, 40.000000);
	TextDrawSetSelectable(HungerBackground[1], 0);
	
	MpDraw[0] = TextDrawCreate(189.282501, 387.916595, "[…HЃOPMA‰…•]");
	TextDrawLetterSize(MpDraw[0], 0.184348, 1.337500);
	TextDrawAlignment(MpDraw[0], 1);
	TextDrawColor(MpDraw[0], 0xa24646FF);
	TextDrawSetShadow(MpDraw[0], 0);
	TextDrawSetOutline(MpDraw[0], 1);
	TextDrawBackgroundColor(MpDraw[0], 51);
	TextDrawFont(MpDraw[0], 1);
	TextDrawSetProportional(MpDraw[0], 1);

	MpDraw[1] = TextDrawCreate(235.666091, 387.333343, "ЌЏO—‘ YЌACЏ‹O‹AЏ’ ‹ MEPOЊP…•Џ……, ‹‹Eѓ…ЏE:");
	TextDrawLetterSize(MpDraw[1], 0.208711, 1.395833);
	TextDrawAlignment(MpDraw[1], 1);
	TextDrawColor(MpDraw[1], -1);
	TextDrawSetShadow(MpDraw[1], 0);
	TextDrawSetOutline(MpDraw[1], 1);
	TextDrawBackgroundColor(MpDraw[1], 51);
	TextDrawFont(MpDraw[1], 1);
	TextDrawSetProportional(MpDraw[1], 1);

	MpDraw[2] = TextDrawCreate(407.144927, 387.333221, "/gotomp");
	TextDrawLetterSize(MpDraw[2], 0.225109, 1.261666);
	TextDrawAlignment(MpDraw[2], 1);
	TextDrawColor(MpDraw[2], 0xa24646FF);
	TextDrawSetShadow(MpDraw[2], 0);
	TextDrawSetOutline(MpDraw[2], 1);
	TextDrawBackgroundColor(MpDraw[2], 51);
	TextDrawFont(MpDraw[2], 1);
	TextDrawSetProportional(MpDraw[2], 1);
	
	txdw2 = TextDrawCreate(320.000000, 90.000000, "~r~600");
	TextDrawAlignment(txdw2, 2);
	TextDrawBackgroundColor(txdw2, 255);
	TextDrawFont(txdw2, 3);
	TextDrawLetterSize(txdw2, 0.889998, 3.299998);
	TextDrawColor(txdw2, -1);
	TextDrawSetOutline(txdw2, 1);
	TextDrawSetProportional(txdw2, 0);

    zz_td[0] = TextDrawCreate(14.999973, 222.926330, "LD_SPAC:white");
	TextDrawLetterSize(zz_td[0], 0.000000, 0.000000);
	TextDrawTextSize(zz_td[0], 112.499969, 17.925924);
	TextDrawAlignment(zz_td[0], 1);
	TextDrawColor(zz_td[0], 269488383);
	TextDrawSetShadow(zz_td[0], 0);
	TextDrawSetOutline(zz_td[0], 0);
	TextDrawBackgroundColor(zz_td[0], 255);
	TextDrawFont(zz_td[0], 4);
	TextDrawSetProportional(zz_td[0], 0);
	TextDrawSetShadow(zz_td[0], 0);

	zz_td[1] = TextDrawCreate(19.166648, 227.074386, "LD_SPAC:WHITE");
	TextDrawLetterSize(zz_td[1], 0.000000, 0.000000);
	TextDrawTextSize(zz_td[1], 2.083297, 10.148147);
	TextDrawAlignment(zz_td[1], 1);
	TextDrawColor(zz_td[1], 8388863);
	TextDrawSetShadow(zz_td[1], 0);
	TextDrawSetOutline(zz_td[1], 0);
	TextDrawBackgroundColor(zz_td[1], 255);
	TextDrawFont(zz_td[1], 4);
	TextDrawSetProportional(zz_td[1], 0);
	TextDrawSetShadow(zz_td[1], 0);

	zz_td[2] = TextDrawCreate(24.583339, 227.851913, "~w~ВЫ_НАХОДИТЕСЬ_В_~gr~GREEN~w~_ЗОНЕ");
	TextDrawLetterSize(zz_td[2], 0.198332, 0.884443);
	TextDrawAlignment(zz_td[2], 1);
	TextDrawColor(zz_td[2], -1);
	TextDrawSetShadow(zz_td[2], 0);
	TextDrawSetOutline(zz_td[2], 0);
	TextDrawBackgroundColor(zz_td[2], 255);
	TextDrawFont(zz_td[2], 1);
	TextDrawSetProportional(zz_td[2], 1);
	TextDrawSetShadow(zz_td[2], 0);

	np_td[0] = TextDrawCreate(14.999973, 242.630050, "LD_SPAC:white");
	TextDrawLetterSize(np_td[0], 0.000000, 0.000000);
	TextDrawTextSize(np_td[0], 112.499969, 17.925924);
	TextDrawAlignment(np_td[0], 1);
	TextDrawColor(np_td[0], 269488383);
	TextDrawSetShadow(np_td[0], 0);
	TextDrawSetOutline(np_td[0], 0);
	TextDrawBackgroundColor(np_td[0], 255);
	TextDrawFont(np_td[0], 4);
	TextDrawSetProportional(np_td[0], 0);
	TextDrawSetShadow(np_td[0], 0);

	np_td[1] = TextDrawCreate(24.583339, 247.555801, "~w~ВЫ_НАХОДИТЕСЬ_В_~rd~NOPARK~w~_ЗОНЕ");
	TextDrawLetterSize(np_td[1], 0.198332, 0.884443);
	TextDrawAlignment(np_td[1], 1);
	TextDrawColor(np_td[1], -1);
	TextDrawSetShadow(np_td[1], 0);
	TextDrawSetOutline(np_td[1], 0);
	TextDrawBackgroundColor(np_td[1], 255);
	TextDrawFont(np_td[1], 1);
	TextDrawSetProportional(np_td[1], 1);
	TextDrawSetShadow(np_td[1], 0);

	np_td[2] = TextDrawCreate(19.166648, 246.778305, "LD_SPAC:WHITE");
	TextDrawLetterSize(np_td[2], 0.000000, 0.000000);
	TextDrawTextSize(np_td[2], 2.083297, 10.148147);
	TextDrawAlignment(np_td[2], 1);
	TextDrawColor(np_td[2], -1523963137);
	TextDrawSetShadow(np_td[2], 0);
	TextDrawSetOutline(np_td[2], 0);
	TextDrawBackgroundColor(np_td[2], 255);
	TextDrawFont(np_td[2], 4);
	TextDrawSetProportional(np_td[2], 0);
	TextDrawSetShadow(np_td[2], 0) ;

 /*   fstd[3] = TextDrawCreate(425.000000, 158.125000, "usebox");
    TextDrawLetterSize(fstd[3], 0.000000, 1.141666);
    TextDrawTextSize(fstd[3], 223.500000, 0.000000);
    TextDrawAlignment(fstd[3], 1);
    TextDrawColor(fstd[3], 0x00000000);
    TextDrawUseBox(fstd[3], 1);
    TextDrawBoxColor(fstd[3], 0x00000090);
    TextDrawSetShadow(fstd[3], 0);
    TextDrawSetOutline(fstd[3], 0);
    TextDrawBackgroundColor(fstd[3], 0x000000FF);
    TextDrawFont(fstd[3], 0);
    TextDrawSetProportional(fstd[3], 1);
    TextDrawSetSelectable(fstd[3], 0);*/

    fstd[0] = TextDrawCreate(248.000000, 237.562500, "Загрузка объектов, 5 сек!");
    TextDrawLetterSize(fstd[0], 0.361499, 1.193125);
    TextDrawTextSize(fstd[0], 1280.000000, 1280.000000);
    TextDrawAlignment(fstd[0], 1);
    TextDrawColor(fstd[0], 0xFFFFFFFFFFFFFFFF);
    TextDrawUseBox(fstd[0], 1);
    TextDrawBoxColor(fstd[0], 0x00000000);
    TextDrawSetShadow(fstd[0], 0);
    TextDrawSetOutline(fstd[0], 1);
    TextDrawBackgroundColor(fstd[0], 0xa24646FF);
    TextDrawFont(fstd[0], 1);
    TextDrawSetProportional(fstd[0], 1);
    TextDrawSetSelectable(fstd[0], 0);

    fstd[1] = TextDrawCreate(293.500000, 220.937500, "Загрузка...");
    TextDrawLetterSize(fstd[1], 0.449999, 1.600000);
    TextDrawTextSize(fstd[1], 1280.000000, 1280.000000);
    TextDrawAlignment(fstd[1], 1);
    TextDrawColor(fstd[1], 0xFFFFFFFFFFFFFFFF);
    TextDrawUseBox(fstd[1], 1);
    TextDrawBoxColor(fstd[1], 0x00000000);
    TextDrawSetShadow(fstd[1], 0);
    TextDrawSetOutline(fstd[1], 1);
    TextDrawBackgroundColor(fstd[1], 0xa24646FF);
    TextDrawFont(fstd[1], 3);
    TextDrawSetProportional(fstd[1], 1);
    TextDrawSetSelectable(fstd[1], 0);

/*    fstd[0] = TextDrawCreate(424.500000, 158.125000, "LD_SPAC:white");
    TextDrawLetterSize(fstd[0], 0.000000, 11.170826);
    TextDrawTextSize(fstd[0], 223.000000, 0.000000);
    TextDrawAlignment(fstd[0], 1);
    TextDrawColor(fstd[0], 0xffcf23FF);
    TextDrawUseBox(fstd[0], 1);
    TextDrawBoxColor(fstd[0], 0x24252199);
    TextDrawSetShadow(fstd[0], 0);
    TextDrawSetOutline(fstd[0], 0);
    TextDrawBackgroundColor(fstd[0], 0xffcf23FF);
    TextDrawFont(fstd[0], 3);
    TextDrawSetProportional(fstd[0], 1);
    TextDrawSetSelectable(fstd[0], 0);*/

	INFO[0] = TextDrawCreate(429.500000, 117.875000, "usebox");
	TextDrawLetterSize(INFO[0], 0.000000, 19.111127);
	TextDrawTextSize(INFO[0], 202.000000, 0.000000);
	TextDrawAlignment(INFO[0], 1);
	TextDrawColor(INFO[0], 0);
	TextDrawUseBox(INFO[0], true);
	TextDrawBoxColor(INFO[0], 102);
	TextDrawSetShadow(INFO[0], 0);
	TextDrawSetOutline(INFO[0], 0);
	TextDrawFont(INFO[0], 0);

	INFO[1] = TextDrawCreate(429.500000, 117.875000, "usebox");
	TextDrawLetterSize(INFO[1], 0.000000, -0.170833);
	TextDrawTextSize(INFO[1], 202.000000, 0.000000);
	TextDrawAlignment(INFO[1], 1);
	TextDrawColor(INFO[1], 0);
	TextDrawUseBox(INFO[1], true);
	TextDrawBoxColor(INFO[1], 0xaf2209ff);
	TextDrawSetShadow(INFO[1], 0);
	TextDrawSetOutline(INFO[1], 0);
	TextDrawFont(INFO[1], 0);

	INFO[2] = TextDrawCreate(429.500000, 291.562500, "usebox");
	TextDrawLetterSize(INFO[2], 0.000000, -0.170833);
	TextDrawTextSize(INFO[2], 202.000000, 0.000000);
	TextDrawAlignment(INFO[2], 1);
	TextDrawColor(INFO[2], 0);
	TextDrawUseBox(INFO[2], true);
	TextDrawBoxColor(INFO[2], 0xaf2209ff);
	TextDrawSetShadow(INFO[2], 0);
	TextDrawSetOutline(INFO[2], 0);
	TextDrawFont(INFO[2], 0);

	INFO[3] = TextDrawCreate(360.000000, 120.500000, "usebox");
	TextDrawLetterSize(INFO[3], 0.000000, 1.773610);
	TextDrawTextSize(INFO[3], 264.500000, 0.000000);
	TextDrawAlignment(INFO[3], 1);
	TextDrawColor(INFO[3], 0);
	TextDrawUseBox(INFO[3], true);
	TextDrawBoxColor(INFO[3], 0xaf2209ff);
	TextDrawSetShadow(INFO[3], 0);
	TextDrawSetOutline(INFO[3], 0);
	TextDrawFont(INFO[3], 0);

	INFO[4] = TextDrawCreate(312.000000, 122.937500, ""SERVER_NAME"");
	TextDrawLetterSize(INFO[4], 0.356000, 1.263124);
	TextDrawAlignment(INFO[4], 2);
	TextDrawColor(INFO[4], -1);
	TextDrawSetShadow(INFO[4], 0);
	TextDrawSetOutline(INFO[4], 0);
	TextDrawBackgroundColor(INFO[4], 51);
	TextDrawFont(INFO[4], 3);

	INFO[5] = TextDrawCreate(262.666656, 235.199981, "LD_SPAC:white");
	TextDrawLetterSize(INFO[5], 0.067666, 0.070518);
	TextDrawTextSize(INFO[5], 90.666656, 16.177795);
	TextDrawAlignment(INFO[5], 1);
	TextDrawColor(INFO[5], 0xaf2209ff);
	TextDrawUseBox(INFO[5], true);
	TextDrawBoxColor(INFO[5], 255);
	TextDrawSetShadow(INFO[5], 0);
	TextDrawSetOutline(INFO[5], 0);
	TextDrawFont(INFO[5], 4);
	TextDrawSetSelectable(INFO[5], true);

	INFO[6] = TextDrawCreate(263.333343, 263.407409, "LD_SPAC:white");
	TextDrawLetterSize(INFO[6], 0.079666, 0.103703);
	TextDrawTextSize(INFO[6], 89.333312, 17.422210);
	TextDrawAlignment(INFO[6], 1);
	TextDrawColor(INFO[6], 0xaf2209ff);
	TextDrawUseBox(INFO[6], true);
	TextDrawBoxColor(INFO[6], 255);
	TextDrawSetShadow(INFO[6], 0);
	TextDrawSetOutline(INFO[6], 0);
	TextDrawFont(INFO[6], 4);
	TextDrawSetSelectable(INFO[6], true);

	INFO[7] = TextDrawCreate(317.500000, 266.875000, "Информация");
	TextDrawLetterSize(INFO[7], 0.243499, 1.079373);
	TextDrawTextSize(INFO[7], 617.000000, -75.250000);
	TextDrawAlignment(INFO[7], 2);
	TextDrawColor(INFO[7], -1);
	TextDrawUseBox(INFO[7], true);
	TextDrawBoxColor(INFO[7], 0);
	TextDrawSetShadow(INFO[7], 0);
	TextDrawSetOutline(INFO[7], 0);
	TextDrawBackgroundColor(INFO[7], 51);
	TextDrawFont(INFO[7], 2);
	TextDrawSetProportional(INFO[7], 1);

	INFO[8] = TextDrawCreate(284.500000, 238.125000, "Начать игру");
	TextDrawLetterSize(INFO[8], 0.223000, 1.044373);
	TextDrawTextSize(INFO[8], 346.000000, -122.500000);
	TextDrawAlignment(INFO[8], 1);
	TextDrawColor(INFO[8], -1);
	TextDrawUseBox(INFO[8], true);
	TextDrawBoxColor(INFO[8], 0);
	TextDrawSetShadow(INFO[8], 0);
	TextDrawSetOutline(INFO[8], 0);
	TextDrawBackgroundColor(INFO[8], 51);
	TextDrawFont(INFO[8], 2);
	TextDrawSetProportional(INFO[8], 1);

	INFO[9] = TextDrawCreate(268.500000, 238.437500, "hud:radar_Flag");
	TextDrawLetterSize(INFO[9], 0.000000, 0.000000);
	TextDrawTextSize(INFO[9], 10.500000, 9.625000);
	TextDrawAlignment(INFO[9], 1);
	TextDrawColor(INFO[9], -1);
	TextDrawSetShadow(INFO[9], 0);
	TextDrawSetOutline(INFO[9], 0);
	TextDrawFont(INFO[9], 4);

	INFO[10] = TextDrawCreate(268.000000, 267.437500, "hud:radar_saveGame");
	TextDrawLetterSize(INFO[10], 0.000000, 0.000000);
	TextDrawTextSize(INFO[10], 10.500000, 9.625000);
	TextDrawAlignment(INFO[10], 1);
	TextDrawColor(INFO[10], -1);
	TextDrawSetShadow(INFO[10], 0);
	TextDrawSetOutline(INFO[10], 0);
	TextDrawFont(INFO[10], 4);

	INFO[11] = TextDrawCreate(312.500000, 139.125000, "Добро пожаловать!");
	TextDrawLetterSize(INFO[11], 0.188500, 0.913124);
	TextDrawAlignment(INFO[11], 2);
	TextDrawColor(INFO[11], -1);
	TextDrawSetShadow(INFO[11], 0);
	TextDrawSetOutline(INFO[11], 0);
	TextDrawBackgroundColor(INFO[11], 51);
	TextDrawFont(INFO[11], 2);
	TextDrawSetProportional(INFO[11], 1);

	INFO[12] = TextDrawCreate(315.500000, 148.437500, "Вас привествует игровый сервер Hebee RP!");
	TextDrawLetterSize(INFO[12], 0.188500, 0.913124);
	TextDrawAlignment(INFO[12], 2);
	TextDrawColor(INFO[12], -1);
	TextDrawSetShadow(INFO[12], 0);
	TextDrawSetOutline(INFO[12], 0);
	TextDrawBackgroundColor(INFO[12], 51);
	TextDrawFont(INFO[12], 2);
	TextDrawSetProportional(INFO[12], 1);

	INFO[13] = TextDrawCreate(311.000000, 157.750000, "Чтобы начать играть на сервере");
	TextDrawLetterSize(INFO[13], 0.188500, 0.913124);
	TextDrawAlignment(INFO[13], 2);
	TextDrawColor(INFO[13], -1);
	TextDrawSetShadow(INFO[13], 0);
	TextDrawSetOutline(INFO[13], 0);
	TextDrawBackgroundColor(INFO[13], 51);
	TextDrawFont(INFO[13], 2);
	TextDrawSetProportional(INFO[13], 1);

	INFO[14] = TextDrawCreate(316.000000, 167.062500, "Нажмите играть");
	TextDrawLetterSize(INFO[14], 0.188500, 0.913124);
	TextDrawAlignment(INFO[14], 2);
	TextDrawColor(INFO[14], -1);
	TextDrawSetShadow(INFO[14], 0);
	TextDrawSetOutline(INFO[14], 0);
	TextDrawBackgroundColor(INFO[14], 51);
	TextDrawFont(INFO[14], 2);
	TextDrawSetProportional(INFO[14], 1);

	INFO[15] = TextDrawCreate(310.500000, 175.937500, "Если вы новичек на нашем сервере");
	TextDrawLetterSize(INFO[15], 0.188500, 0.913124);
	TextDrawAlignment(INFO[15], 2);
	TextDrawColor(INFO[15], -1);
	TextDrawSetShadow(INFO[15], 0);
	TextDrawSetOutline(INFO[15], 0);
	TextDrawBackgroundColor(INFO[15], 51);
	TextDrawFont(INFO[15], 2);
	TextDrawSetProportional(INFO[15], 1);

	INFO[16] = TextDrawCreate(316.000000, 185.250000, "То вам надо прочитать информацию");
	TextDrawLetterSize (INFO[16], 0.188500, 0.913124);
	TextDrawAlignment(INFO[16], 2);
	TextDrawColor(INFO[16], -1);
	TextDrawSetShadow(INFO[16], 0);
	TextDrawSetOutline(INFO[16], 0);
	TextDrawBackgroundColor(INFO[16], 51);
	TextDrawFont(INFO[16], 2);
	TextDrawSetProportional(INFO[16], 1);

	INFO[17] = TextDrawCreate(270.000000, 214.250000, "Выберите действие!");
	TextDrawLetterSize(INFO[17], 0.188500, 0.913124);
	TextDrawAlignment(INFO[17], 1);
	TextDrawColor(INFO[17], -1);
	TextDrawSetShadow(INFO[17], 0);
	TextDrawSetOutline(INFO[17], 0);
	TextDrawBackgroundColor(INFO[17], 51);
	TextDrawFont(INFO[17], 2);
	TextDrawSetProportional(INFO[17], 1);

    td_performance [ 0 ] = TextDrawCreate(29.000000, 141.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 0 ], 0 ) ;
	TextDrawFont(td_performance [ 0 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 0 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 0 ], 269488383 ) ;
	TextDrawSetOutline(td_performance [ 0 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 0 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 0 ], 1 ) ;
	TextDrawUseBox(td_performance [ 0 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 0 ], 255 ) ;
	TextDrawTextSize(td_performance [ 0 ], 120.000000, 156.000000 ) ;
	TextDrawSetSelectable(td_performance [ 0 ], 0 ) ;

	td_performance [ 1 ] = TextDrawCreate(32.000000, 145.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 1 ], 0 ) ;
	TextDrawFont(td_performance [ 1 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 1 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 1 ], 606348543 ) ;
	TextDrawSetOutline(td_performance [ 1 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 1 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 1 ], 1 ) ;
	TextDrawUseBox(td_performance [ 1 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 1 ], 255 ) ;
	TextDrawTextSize(td_performance [ 1 ], 113.000000, 133.000000 ) ;
	TextDrawSetSelectable(td_performance [ 1 ], 0 ) ;

	td_performance [ 2 ] = TextDrawCreate(32.000000, 145.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 2 ], 0 ) ;
	TextDrawFont(td_performance [ 2 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 2 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 2 ], 0xf7d738ff ) ;
	TextDrawSetOutline(td_performance [ 2 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 2 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 2 ], 1 ) ;
	TextDrawUseBox(td_performance [ 2 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 2 ], 255 ) ;
	TextDrawTextSize(td_performance [ 2 ], 2.000000, 133.000000 ) ;
	TextDrawSetSelectable(td_performance [ 2 ], 0 ) ;

	td_performance [ 3 ] = TextDrawCreate(32.000000, 276.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 3 ], 0 ) ;
	TextDrawFont(td_performance [ 3 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 3 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 3 ], 0xf7d738ff ) ;
	TextDrawSetOutline(td_performance [ 3 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 3 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 3 ], 1 ) ;
	TextDrawUseBox(td_performance [ 3 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 3 ], 255 ) ;
	TextDrawTextSize(td_performance [ 3 ], 113.000000, 2.000000 ) ;
	TextDrawSetSelectable(td_performance [ 3 ], 0 ) ;

	td_performance [ 4 ] = TextDrawCreate(40.000000, 280.000000, "power" ) ;
	TextDrawBackgroundColor(td_performance [ 4 ], 0 ) ;
	TextDrawFont(td_performance [ 4 ], 2 ) ;
	TextDrawLetterSize(td_performance [ 4 ], 0.150000, 1.399999 ) ;
	TextDrawColor(td_performance [ 4 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 4 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 4 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 4 ], 1 ) ;
	TextDrawSetSelectable(td_performance [ 4 ], 0 ) ;

	td_performance [ 5 ] = TextDrawCreate(81.000000, 280.000000, "brake" ) ;
	TextDrawBackgroundColor(td_performance [ 5 ], 0 ) ;
	TextDrawFont(td_performance [ 5 ], 2 ) ;
	TextDrawLetterSize(td_performance [ 5 ], 0.150000, 1.399999 ) ;
	TextDrawColor(td_performance [ 5 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 5 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 5 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 5 ], 1 ) ;
	TextDrawSetSelectable(td_performance [ 5 ], 0 ) ;

	td_performance [ 6 ] = TextDrawCreate(115.000000, 280.000000, "stability" ) ;
	TextDrawBackgroundColor(td_performance [ 6 ], 0 ) ;
	TextDrawFont(td_performance [ 6 ], 2 ) ;
	TextDrawLetterSize(td_performance [ 6 ], 0.150000, 1.399999 ) ;
	TextDrawColor(td_performance [ 6 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 6 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 6 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 6 ], 1 ) ;
	TextDrawSetSelectable(td_performance [ 6 ], 0 ) ;

	td_performance [ 7 ] = TextDrawCreate(59.000000, 144.000000, "Performance data" ) ;
	TextDrawBackgroundColor(td_performance [ 7 ], 0 ) ;
	TextDrawFont(td_performance [ 7 ], 2 ) ;
	TextDrawLetterSize(td_performance [ 7 ], 0.150000, 1.399999 ) ;
	TextDrawColor(td_performance [ 7 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 7 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 7 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 7 ], 1 ) ;
	TextDrawSetSelectable(td_performance [ 7 ], 0 ) ;

	td_performance [ 8 ] = TextDrawCreate(526.000000, 141.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 8 ], 0 ) ;
	TextDrawFont(td_performance [ 8 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 8 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 8 ], 269488383 ) ;
	TextDrawSetOutline(td_performance [ 8 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 8 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 8 ], 1 ) ;
	TextDrawUseBox(td_performance [ 8 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 8 ], 255 ) ;
	TextDrawTextSize(td_performance [ 8 ], 84.000000, 246.000000 ) ;
	TextDrawSetSelectable(td_performance [ 8 ], 0 ) ;

	td_performance [ 9 ] = TextDrawCreate(535.000000, 149.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 9 ], 0 ) ;
	TextDrawFont(td_performance [ 9 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 9 ], 1.299999, 5.699999 ) ;
	TextDrawColor(td_performance [ 9 ], 606348543 ) ;
	TextDrawSetOutline(td_performance [ 9 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 9 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 9 ], 1 ) ;
	TextDrawUseBox(td_performance [ 9 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 9 ], 606348543 ) ;
	TextDrawTextSize(td_performance [ 9 ], 65.000000, 50.000000 ) ;
	TextDrawSetSelectable(td_performance [ 9 ], 0 ) ;

	td_performance [ 10 ] = TextDrawCreate(535.000000, 203.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 10 ], 0 ) ;
	TextDrawFont(td_performance [ 10 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 10 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 10 ], 606348543 ) ;
	TextDrawSetOutline(td_performance [ 10 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 10 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 10 ], 1 ) ;
	TextDrawUseBox(td_performance [ 10 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 10 ], 255 ) ;
	TextDrawTextSize(td_performance [ 10 ], 65.000000, 17.000000 ) ;
	TextDrawSetSelectable(td_performance [ 10 ], 1 ) ;

	td_performance [ 11 ] = TextDrawCreate(540.000000, 139.000000, "img_eng" ) ;
	TextDrawBackgroundColor(td_performance [ 11 ], 0 ) ;
	TextDrawFont(td_performance [ 11 ], 5 ) ;
	TextDrawLetterSize(td_performance [ 11 ], 1.299999, 5.699999 ) ;
	TextDrawColor(td_performance [ 11 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 11 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 11 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 11 ], 1 ) ;
	TextDrawUseBox(td_performance [ 11 ], 0 ) ;
	TextDrawBoxColor(td_performance [ 11 ], 606348543 ) ;
	TextDrawTextSize(td_performance [ 11 ], 53.000000, 63.000000 ) ;
	TextDrawSetSelectable(td_performance [ 11 ], 0 ) ;

	td_performance [ 12 ] = TextDrawCreate(535.000000, 203.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 12 ], 0 ) ;
	TextDrawFont(td_performance [ 12 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 12 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 12 ], 0xf7d738ff ) ;
	TextDrawSetOutline(td_performance [ 12 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 12 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 12 ], 1 ) ;
	TextDrawUseBox(td_performance [ 12 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 12 ], 255 ) ;
	TextDrawTextSize(td_performance [ 12 ], 65.000000, 2.000000 ) ;
	TextDrawSetSelectable(td_performance [ 12 ], 1 ) ;

	td_performance [ 13 ] = TextDrawCreate(548.000000, 205.000000, "engine" ) ;
	TextDrawBackgroundColor(td_performance [ 13 ], 0 ) ;
	TextDrawFont(td_performance [ 13 ], 2 ) ;
	TextDrawLetterSize(td_performance [ 13 ], 0.289999, 1.499999 ) ;
	TextDrawColor(td_performance [ 13 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 13 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 13 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 13 ], 1 ) ;
	TextDrawSetSelectable(td_performance [ 13 ], 0 ) ;

	td_performance [ 14 ] = TextDrawCreate(535.000000, 228.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 14 ], 0 ) ;
	TextDrawFont(td_performance [ 14 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 14 ], 1.299999, 5.699999 ) ;
	TextDrawColor(td_performance [ 14 ], 606348543 ) ;
	TextDrawSetOutline(td_performance [ 14 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 14 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 14 ], 1 ) ;
	TextDrawUseBox(td_performance [ 14 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 14 ], 606348543 ) ;
	TextDrawTextSize(td_performance [ 14 ], 65.000000, 50.000000 ) ;
	TextDrawSetSelectable(td_performance [ 14 ], 0 ) ;

	td_performance [ 15 ] = TextDrawCreate(535.000000, 282.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 15 ], 0 ) ;
	TextDrawFont(td_performance [ 15 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 15 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 15 ], 606348543 ) ;
	TextDrawSetOutline(td_performance [ 15 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 15 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 15 ], 1 ) ;
	TextDrawUseBox(td_performance [ 15 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 15 ], 255 ) ;
	TextDrawTextSize(td_performance [ 15 ], 65.000000, 17.000000 ) ;
	TextDrawSetSelectable(td_performance [ 15 ], 1 ) ;

	td_performance [ 16 ] = TextDrawCreate(535.000000, 282.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 16 ], 0 ) ;
	TextDrawFont(td_performance [ 16 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 16 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 16 ], 0xf7d738ff ) ;
	TextDrawSetOutline(td_performance [ 16 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 16 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 16 ], 1 ) ;
	TextDrawUseBox(td_performance [ 16 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 16 ], 255 ) ;
	TextDrawTextSize(td_performance [ 16 ], 65.000000, 2.000000 ) ;
	TextDrawSetSelectable(td_performance [ 16 ], 1 ) ;

	td_performance [ 17 ] = TextDrawCreate(540.000000, 220.000000, "emg_brake" ) ;
	TextDrawBackgroundColor(td_performance [ 17 ], 0 ) ;
	TextDrawFont(td_performance [ 17 ], 5 ) ;
	TextDrawLetterSize(td_performance [ 17 ], 1.299999, 5.699999 ) ;
	TextDrawColor(td_performance [ 17 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 17 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 17 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 17 ], 1 ) ;
	TextDrawUseBox(td_performance [ 17 ], 0 ) ;
	TextDrawBoxColor(td_performance [ 17 ], 606348543 ) ;
	TextDrawTextSize(td_performance [ 17 ], 53.000000, 63.000000 ) ;
	TextDrawSetSelectable(td_performance [ 17 ], 0 ) ;

	td_performance [ 18 ] = TextDrawCreate(549.000000, 284.000000, "BRAKE" ) ;
	TextDrawBackgroundColor(td_performance [ 18 ], 0 ) ;
	TextDrawFont(td_performance [ 18 ], 2 ) ;
	TextDrawLetterSize(td_performance [ 18 ], 0.289999, 1.499999 ) ;
	TextDrawColor(td_performance [ 18 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 18 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 18 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 18 ], 1 ) ;
	TextDrawSetSelectable(td_performance [ 18 ], 0 ) ;

	td_performance [ 19 ] = TextDrawCreate(535.000000, 307.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 19 ], 0 ) ;
	TextDrawFont(td_performance [ 19 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 19 ], 1.299998, 5.699998 ) ;
	TextDrawColor(td_performance [ 19 ], 606348543 ) ;
	TextDrawSetOutline(td_performance [ 19 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 19 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 19 ], 1 ) ;
	TextDrawUseBox(td_performance [ 19 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 19 ], 606348543 ) ;
	TextDrawTextSize(td_performance [ 19 ], 65.000000, 50.000000 ) ;
	TextDrawSetSelectable(td_performance [ 19 ], 0 ) ;

	td_performance [ 20 ] = TextDrawCreate(535.000000, 361.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 20 ], 0 ) ;
	TextDrawFont(td_performance [ 20 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 20 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 20 ], 606348543 ) ;
	TextDrawSetOutline(td_performance [ 20 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 20 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 20 ], 1 ) ;
	TextDrawUseBox(td_performance [ 20 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 20 ], 255 ) ;
	TextDrawTextSize(td_performance [ 20 ], 65.000000, 17.000000 ) ;
	TextDrawSetSelectable(td_performance [ 20 ], 1 ) ;

	td_performance [ 21 ] = TextDrawCreate(535.000000, 361.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 21 ], 0 ) ;
	TextDrawFont(td_performance [ 21 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 21 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 21 ], 0xf7d738ff ) ;
	TextDrawSetOutline(td_performance [ 21 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 21 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 21 ], 1 ) ;
	TextDrawUseBox(td_performance [ 21 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 21 ], 255 ) ;
	TextDrawTextSize(td_performance [ 21 ], 65.000000, 2.000000 ) ;
	TextDrawSetSelectable(td_performance [ 21 ], 1 ) ;

	td_performance [ 22 ] = TextDrawCreate(545.000000, 307.000000, "img_stability" ) ;
	TextDrawBackgroundColor(td_performance [ 22 ], 0 ) ;
	TextDrawFont(td_performance [ 22 ], 5 ) ;
	TextDrawLetterSize(td_performance [ 22 ], 1.299998, 5.699998 ) ;
	TextDrawColor(td_performance [ 22 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 22 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 22 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 22 ], 1 ) ;
	TextDrawUseBox(td_performance [ 22 ], 0 ) ;
	TextDrawBoxColor(td_performance [ 22 ], 606348543 ) ;
	TextDrawTextSize(td_performance [ 22 ], 46.000000, 50.000000 ) ;
	TextDrawSetSelectable(td_performance [ 22 ], 0 ) ;

	td_performance [ 23 ] = TextDrawCreate(539.000000, 363.000000, "Stability" ) ;
	TextDrawBackgroundColor(td_performance [ 23 ], 0 ) ;
	TextDrawFont(td_performance [ 23 ], 2 ) ;
	TextDrawLetterSize(td_performance [ 23 ], 0.289999, 1.499999 ) ;
	TextDrawColor(td_performance [ 23 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 23 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 23 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 23 ], 1 ) ;
	TextDrawSetSelectable(td_performance [ 23 ], 0 ) ;

	td_performance [ 24 ] = TextDrawCreate(535.000000, 382.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 24 ], 0 ) ;
	TextDrawFont(td_performance [ 24 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 24 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 24 ], 606348543 ) ;
	TextDrawSetOutline(td_performance [ 24 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 24 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 24 ], 1 ) ;
	TextDrawUseBox(td_performance [ 24 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 24 ], 255 ) ;
	TextDrawTextSize(td_performance [ 24 ], 65.000000, 17.000000 ) ;
	TextDrawSetSelectable(td_performance [ 24 ], 1 ) ;

	td_performance [ 25 ] = TextDrawCreate(535.000000, 382.000000, "LD_SPAC:white" ) ;
	TextDrawBackgroundColor(td_performance [ 25 ], 0 ) ;
	TextDrawFont(td_performance [ 25 ], 4 ) ;
	TextDrawLetterSize(td_performance [ 25 ], 0.500000, 1.000000 ) ;
	TextDrawColor(td_performance [ 25 ], 0xf7d738ff ) ;
	TextDrawSetOutline(td_performance [ 25 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 25 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 25 ], 1 ) ;
	TextDrawUseBox(td_performance [ 25 ], 1 ) ;
	TextDrawBoxColor(td_performance [ 25 ], 255 ) ;
	TextDrawTextSize(td_performance [ 25 ], 65.000000, 2.000000 ) ;
	TextDrawSetSelectable(td_performance [ 25 ], 1 ) ;

	td_performance [ 26 ] = TextDrawCreate(556.000000, 383.000000, "EXIT" ) ;
	TextDrawBackgroundColor(td_performance [ 26 ], 0 ) ;
	TextDrawFont(td_performance [ 26 ], 2 ) ;
	TextDrawLetterSize(td_performance [ 26 ], 0.289999, 1.499999 ) ;
	TextDrawColor(td_performance [ 26 ], -1 ) ;
	TextDrawSetOutline(td_performance [ 26 ], 0 ) ;
	TextDrawSetProportional(td_performance [ 26 ], 1 ) ;
	TextDrawSetShadow(td_performance [ 26 ], 1 ) ;
	TextDrawSetSelectable(td_performance [ 26 ], 0 ) ;

    /*TD_BRAKE[0] = TextDrawCreate(364.167144, 152.583389, "usebox");
	TextDrawLetterSize(TD_BRAKE[0], 0.000000, 20.216304);
	TextDrawTextSize(TD_BRAKE[0], 112.787704, 0.000000);
	TextDrawAlignment(TD_BRAKE[0], 1);
	TextDrawColor(TD_BRAKE[0], 0);
	TextDrawUseBox(TD_BRAKE[0], true);
	TextDrawBoxColor(TD_BRAKE[0], 0x84CCC199);
	TextDrawSetShadow(TD_BRAKE[0], 0);
	TextDrawSetOutline(TD_BRAKE[0], 0);
	TextDrawBackgroundColor(TD_BRAKE[0], 0x00000000);
	TextDrawFont(TD_BRAKE[0], 0);

 	TD_BRAKE[11] = TextDrawCreate(352.796630, 134.5, "x");
	TextDrawLetterSize(TD_BRAKE[11], 0.390497, 1.436666);
	TextDrawTextSize(TD_BRAKE[11], 10.0, 15.0);
	TextDrawAlignment(TD_BRAKE[11], 2);
	TextDrawColor(TD_BRAKE[11], -1);
	TextDrawUseBox(TD_BRAKE[11], true);
	TextDrawBoxColor(TD_BRAKE[11], 0x84CCC199);
	TextDrawSetShadow(TD_BRAKE[11], 0);
	TextDrawSetOutline(TD_BRAKE[11], 1);
	TextDrawBackgroundColor(TD_BRAKE[11], 0x00000000);
	TextDrawFont(TD_BRAKE[11], 2);
	TextDrawSetProportional(TD_BRAKE[11], 1);
	TextDrawSetSelectable(TD_BRAKE[11], true);

	TD_BRAKE[1] = TextDrawCreate(140.087844, 160.416702, "ld_pool:ball");
	TD_BRAKE[2] = TextDrawCreate(140.619323, 259.416809, "ld_pool:ball");
	TD_BRAKE[3] = TextDrawCreate(282.644348, 160.666870, "ld_pool:ball");
	TD_BRAKE[4] = TextDrawCreate(281.301788, 259.666839, "ld_pool:ball");
	TD_BRAKE[5] = TextDrawCreate(211.086563, 211.666809, "ld_pool:ball");

	for ( new i = 1 ; i <= 5 ; i++ )
	{
		TextDrawLetterSize(TD_BRAKE[i], 0.000000, 0.000000);
		TextDrawTextSize(TD_BRAKE[i], 58.0, 58.0);
		TextDrawAlignment(TD_BRAKE[i], 1);
		TextDrawColor(TD_BRAKE[i], 0x0EC4C499);
		TextDrawSetShadow(TD_BRAKE[i], 0);
		TextDrawSetOutline(TD_BRAKE[i], 0);
		TextDrawBackgroundColor(TD_BRAKE[i], 0x00000000);
		TextDrawFont(TD_BRAKE[i], 4);
		TextDrawSetSelectable(TD_BRAKE[i], true);
	}

	TD_BRAKE[6] = TextDrawCreate(215.0, 218.0, "PreviewModel");
	TD_BRAKE[7] = TextDrawCreate(142.0, 164.0, "PreviewModel");
    TD_BRAKE[8] = TextDrawCreate(142.0, 262.0, "PreviewModel");
	TD_BRAKE[9] = TextDrawCreate(285.0, 164.0, "PreviewModel");
	TD_BRAKE[10] = TextDrawCreate(285.0, 262.0, "PreviewModel");

	for ( new i = 6 ; i <= 10 ; i++ )
	{
		TextDrawLetterSize(TD_BRAKE[i], 0.000000, 0.000000);
		TextDrawTextSize(TD_BRAKE[i], 51.068817, 48.999984);
		TextDrawAlignment(TD_BRAKE[i], 1);
		TextDrawColor(TD_BRAKE[i], -1);
		TextDrawSetShadow(TD_BRAKE[i], 0);
		TextDrawSetOutline(TD_BRAKE[i], 0);
		TextDrawBackgroundColor(TD_BRAKE[i], 0x00000000);
		TextDrawFont(TD_BRAKE[i], 5);
	}

    Succes_BTD[0] = TextDrawCreate(341.677795 + 60.0, 217.916625, "usebox");
	TextDrawLetterSize(Succes_BTD[0], 0.000000, 4.567699);
	TextDrawTextSize(Succes_BTD[0], 126.374816, 0.000000);
	TextDrawAlignment(Succes_BTD[0], 1);
	TextDrawColor(Succes_BTD[0], 0);
	TextDrawUseBox(Succes_BTD[0], true);
	TextDrawBoxColor(Succes_BTD[0], 0x84CCC199);
	TextDrawSetShadow(Succes_BTD[0], 0);
	TextDrawSetOutline(Succes_BTD[0], 0);
	TextDrawBackgroundColor(Succes_BTD[0], 0x00000000);
	TextDrawFont(Succes_BTD[0], 0);

	Succes_BTD[1] = TextDrawCreate(141.961929 + 60.0, 220.500045, "ВЫ ХОТИТЕ УСТАНОВИТЬ ОГРАЖДЕНИЕ?");
	TextDrawLetterSize(Succes_BTD[1], 0.250409, 1.314166);
	TextDrawAlignment(Succes_BTD[1], 1);
	TextDrawColor(Succes_BTD[1], -1);
	TextDrawSetShadow(Succes_BTD[1], 0);
	TextDrawSetOutline(Succes_BTD[1], 1);
	TextDrawBackgroundColor(Succes_BTD[1], 0x000000FF);
	TextDrawFont(Succes_BTD[1], 2);
	TextDrawSetProportional(Succes_BTD[1], 1);

	Succes_BTD[2] = TextDrawCreate(186.939956, 242.0, "ДА");
	Succes_BTD[3] = TextDrawCreate(283.987030 + 60.0, 242.0, "НЕТ");

	for ( new i = 2; i <= 3; i++)
	{
	 	TextDrawLetterSize(Succes_BTD[i], 0.38, 1.35);
		TextDrawTextSize(Succes_BTD[i], 10.0, 50.0);
		TextDrawAlignment(Succes_BTD[i], 2);
		TextDrawColor(Succes_BTD[i], -1);
		TextDrawUseBox(Succes_BTD[i], true);
		TextDrawBoxColor(Succes_BTD[i], 0x0EC4C499);
		TextDrawSetShadow(Succes_BTD[i], 0);
		TextDrawSetOutline(Succes_BTD[i], 1);
		TextDrawBackgroundColor(Succes_BTD[i], 0x00000000);
		TextDrawFont(Succes_BTD[i], 2);
		TextDrawSetProportional(Succes_BTD[i], 1);
		TextDrawSetSelectable(Succes_BTD[i], true);
	}*/

    show_speed[1] = TextDrawCreate(567.500000, 154.625000, "LD_BEAT:chit");
	TextDrawLetterSize(show_speed[1], 0.000000, 0.000000);
	TextDrawTextSize(show_speed[1], 61.000000, 49.437500);
	TextDrawAlignment(show_speed[1], 1);
	TextDrawColor(show_speed[1], -16776961);
	TextDrawSetShadow(show_speed[1], 0);
	TextDrawSetOutline(show_speed[1], 0);
	TextDrawFont(show_speed[1], 4);

	show_speed[2] = TextDrawCreate(572.500000, 159.000000, "LD_BEAT:chit");
	TextDrawLetterSize(show_speed[2], 0.000000, 0.000000);
	TextDrawTextSize(show_speed[2], 51.000000, 40.687500);
	TextDrawAlignment(show_speed[2], 1);
	TextDrawColor(show_speed[2], -1);
	TextDrawSetShadow(show_speed[2], 0);
	TextDrawSetOutline(show_speed[2], 0);
	TextDrawFont(show_speed[2], 4);

    passport_text[0] = TextDrawCreate(406.000000, 136.250000, "usebox");
	TextDrawLetterSize(passport_text[0], 0.000000, 24.912500);
	TextDrawTextSize(passport_text[0], 233.000000, 0.000000);
	TextDrawAlignment(passport_text[0], 1);
	TextDrawColor(passport_text[0], -2139062017);
	TextDrawUseBox(passport_text[0], true);
	TextDrawBoxColor(passport_text[0], -1768581718);
	TextDrawSetShadow(passport_text[0], 0);
	TextDrawSetOutline(passport_text[0], 0);
	TextDrawFont(passport_text[0], 0);

	passport_text[1] = TextDrawCreate(236.500000, 136.062500, "LD_SPAC:white");
	TextDrawLetterSize(passport_text[1], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[1], 67.500000, 69.562500);
	TextDrawAlignment(passport_text[1], 1);
	TextDrawColor(passport_text[1], 255);
	TextDrawSetShadow(passport_text[1], 0);
	TextDrawSetOutline(passport_text[1], 0);
	TextDrawFont(passport_text[1], 4);

	passport_text[2] = TextDrawCreate(237.500000, 136.937500, "LD_SPAC:white");
	TextDrawLetterSize(passport_text[2], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[2], 65.500000, 67.812500);
	TextDrawAlignment(passport_text[2], 1);
	TextDrawColor(passport_text[2], -1);
	TextDrawSetShadow(passport_text[2], 0);
	TextDrawSetOutline(passport_text[2], 0);
	TextDrawFont(passport_text[2], 4);

	passport_text[3] = TextDrawCreate(236.000000, 149.187500, "hud:radar_gangN");
	TextDrawLetterSize(passport_text[3], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[3], 62.500000, 52.062500);
	TextDrawAlignment(passport_text[3], 1);
	TextDrawColor(passport_text[3], -1);
	TextDrawSetShadow(passport_text[3], 0);
	TextDrawSetOutline(passport_text[3], 0);
	TextDrawFont(passport_text[3], 4);

	passport_text[4] = TextDrawCreate(238.000000, 137.812500, "LD_SPAC:white");
	TextDrawLetterSize(passport_text[4], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[4], 21.000000, 12.687500);
	TextDrawAlignment(passport_text[4], 1);
	TextDrawColor(passport_text[4], 255);
	TextDrawSetShadow(passport_text[4], 0);
	TextDrawSetOutline(passport_text[4], 0);
	TextDrawFont(passport_text[4], 4);

	passport_text[5] = TextDrawCreate(238.500000, 138.250000, "LD_SPAC:white");
	TextDrawLetterSize(passport_text[5], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[5], 20.000000, 3.937500);
	TextDrawAlignment(passport_text[5], 1);
	TextDrawColor(passport_text[5], -1);
	TextDrawSetShadow(passport_text[5], 0);
	TextDrawSetOutline(passport_text[5], 0);
	TextDrawFont(passport_text[5], 4);

	passport_text[6] = TextDrawCreate(238.000000, 142.187500, "LD_SPAC:white");
	TextDrawLetterSize(passport_text[6], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[6], 20.500000, 3.937500);
	TextDrawAlignment(passport_text[6], 1);
	TextDrawColor(passport_text[6], 65535);
	TextDrawSetShadow(passport_text[6], 0);
	TextDrawSetOutline(passport_text[6], 0);
	TextDrawFont(passport_text[6], 4);

	passport_text[7] = TextDrawCreate(238.500000, 146.125000, "LD_SPAC:white");
	TextDrawLetterSize(passport_text[7], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[7], 20.000000, 3.937500);
	TextDrawAlignment(passport_text[7], 1);
	TextDrawColor(passport_text[7], -16776961);
	TextDrawSetShadow(passport_text[7], 0);
	TextDrawSetOutline(passport_text[7], 0);
	TextDrawFont(passport_text[7], 4);

	passport_text[8] = TextDrawCreate(236.500000, 149.187500, "hud:radar_gangP");
	TextDrawLetterSize(passport_text[8], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[8], 62.000000, 52.062500);
	TextDrawAlignment(passport_text[8], 1);
	TextDrawColor(passport_text[8], -1);
	TextDrawSetShadow(passport_text[8], 0);
	TextDrawSetOutline(passport_text[8], 0);
	TextDrawFont(passport_text[8], 4);

	passport_text[9] = TextDrawCreate(355.500000, 133.437500, "~w~ЊACЊOP¦ ~n~~b~‚PA„ѓA®…®A ~n~~r~POCC……");
	TextDrawLetterSize(passport_text[9], 0.335498, 1.722498);
	TextDrawAlignment(passport_text[9], 2);
	TextDrawColor(passport_text[9], -1);
	TextDrawSetShadow(passport_text[9], 0);
	TextDrawSetOutline(passport_text[9], 0);
	TextDrawBackgroundColor(passport_text[9], 51);
	TextDrawFont(passport_text[9], 2);
	TextDrawSetProportional(passport_text[9], 1);

	passport_text[10] = TextDrawCreate(236.000000, 279.125000, "~w~‹‘ѓA®:~y~~n~O¦ѓE‡E®…EM YЃMC ЊO~n~®…„E‚OPOѓCKO† O—‡. Њ‚¦. ЂA¦‘PE‹O");
	TextDrawLetterSize(passport_text[10], 0.219499, 1.809997);
	TextDrawAlignment(passport_text[10], 1);
	TextDrawColor(passport_text[10], -1);
	TextDrawSetShadow(passport_text[10], 0);
	TextDrawSetOutline(passport_text[10], 0);
	TextDrawBackgroundColor(passport_text[10], 51);
	TextDrawFont(passport_text[10], 2);
	TextDrawSetProportional(passport_text[10], 1);

	passport_text[11] = TextDrawCreate(406.000000, 115.687500, "usebox");
	TextDrawLetterSize(passport_text[11], 0.000000, 1.822221);
	TextDrawTextSize(passport_text[11], 233.000000, 0.000000);
	TextDrawAlignment(passport_text[11], 1);
	TextDrawColor(passport_text[11], 0);
	TextDrawUseBox(passport_text[11], true);
	TextDrawBoxColor(passport_text[11], -1768581718);
	TextDrawSetShadow(passport_text[11], 0);
	TextDrawSetOutline(passport_text[11], 0);
	TextDrawFont(passport_text[11], 0);

	passport_text[12] = TextDrawCreate(273.000000, 342.562500, "LD_SPAC:white");
	TextDrawLetterSize(passport_text[12], 0.000000, 0.000000);
	TextDrawTextSize(passport_text[12], 92.500000, 18.812500);
	TextDrawAlignment(passport_text[12], 1);
	TextDrawColor(passport_text[12], -16777046);
	TextDrawSetShadow(passport_text[12], 0);
	TextDrawSetOutline(passport_text[12], 0);
	TextDrawFont(passport_text[12], 4);
	TextDrawSetSelectable(passport_text[12], true);

	passport_text[13] = TextDrawCreate(283.000000, 346.500000, "€AKP‘¦’");
	TextDrawLetterSize(passport_text[13], 0.393999, 1.070623);
	TextDrawAlignment(passport_text[13], 1);
	TextDrawColor(passport_text[13], -1);
	TextDrawSetShadow(passport_text[13], 0);
	TextDrawSetOutline(passport_text[13], 0);
	TextDrawBackgroundColor(passport_text[13], 51);
	TextDrawFont(passport_text[13], 2);
	TextDrawSetProportional(passport_text[13], 1);

	promocode_td[0] = TextDrawCreate(215.000000, 202.137359, "box");
	TextDrawLetterSize(promocode_td[0], 0.000000, 10.272990);
	TextDrawTextSize(promocode_td[0], 413.000000, 0.000000);
	TextDrawAlignment(promocode_td[0], 1);
	TextDrawColor(promocode_td[0], -1);
	TextDrawUseBox(promocode_td[0], 1);
	TextDrawBoxColor(promocode_td[0], 0xa24646FF);
	TextDrawSetShadow(promocode_td[0], 0);
	TextDrawSetOutline(promocode_td[0], 0);
	TextDrawBackgroundColor(promocode_td[0], 255);
	TextDrawFont(promocode_td[0], 1);
	TextDrawSetProportional(promocode_td[0], 1);
	TextDrawSetShadow(promocode_td[0], 0);

	promocode_td[1] = TextDrawCreate(214.200042, 217.100158, "box");
	TextDrawLetterSize(promocode_td[1], 0.000000, 8.853103);
	TextDrawTextSize(promocode_td[1], 413.000000, 0.000000);
	TextDrawAlignment(promocode_td[1], 1);
	TextDrawColor(promocode_td[1], -1);
	TextDrawUseBox(promocode_td[1], 1);
	TextDrawBoxColor(promocode_td[1], 656879615);
	TextDrawSetShadow(promocode_td[1], 0);
	TextDrawSetOutline(promocode_td[1], 0);
	TextDrawBackgroundColor(promocode_td[1], 255);
	TextDrawFont(promocode_td[1], 1);
	TextDrawSetProportional(promocode_td[1], 1);
	TextDrawSetShadow(promocode_td[1], 0);

	promocode_td[2] = TextDrawCreate(219.000000, 219.750000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[2], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[2], 82.000000, 73.000000);
	TextDrawAlignment(promocode_td[2], 1);
	TextDrawColor(promocode_td[2], 0xa24646FF);
	TextDrawSetShadow(promocode_td[2], 0);
	TextDrawSetOutline(promocode_td[2], 0);
	TextDrawBackgroundColor(promocode_td[2], 255);
	TextDrawFont(promocode_td[2], 4);
	TextDrawSetProportional(promocode_td[2], 0);
	TextDrawSetShadow(promocode_td[2], 0);

	promocode_td[3] = TextDrawCreate(221.700012, 222.125091, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[3], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[3], 76.609703, 68.399871);
	TextDrawAlignment(promocode_td[3], 1);
	TextDrawColor(promocode_td[3], 656879615);
	TextDrawSetShadow(promocode_td[3], 0);
	TextDrawSetOutline(promocode_td[3], 0);
	TextDrawBackgroundColor(promocode_td[3], 255);
	TextDrawFont(promocode_td[3], 4);
	TextDrawSetProportional(promocode_td[3], 0);
	TextDrawSetShadow(promocode_td[3], 0);

	promocode_td[4] = TextDrawCreate(273.500000, 221.500000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[4], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[4], 28.000000, 24.000000);
	TextDrawAlignment(promocode_td[4], 1);
	TextDrawColor(promocode_td[4], 0xa24646FF);
	TextDrawSetShadow(promocode_td[4], 0);
	TextDrawSetOutline(promocode_td[4], 0);
	TextDrawBackgroundColor(promocode_td[4], 255);
	TextDrawFont(promocode_td[4], 4);
	TextDrawSetProportional(promocode_td[4], 0);
	TextDrawSetShadow(promocode_td[4], 0);

	promocode_td[5] = TextDrawCreate(379.006439, 221.500000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[5], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[5], 28.000000, 24.000000);
	TextDrawAlignment(promocode_td[5], 1);
	TextDrawColor(promocode_td[5], 0xa24646FF);
	TextDrawSetShadow(promocode_td[5], 0);
	TextDrawSetOutline(promocode_td[5], 0);
	TextDrawBackgroundColor(promocode_td[5], 255);
	TextDrawFont(promocode_td[5], 4);
	TextDrawSetProportional(promocode_td[5], 0);
	TextDrawSetShadow(promocode_td[5], 0);

	promocode_td[6] = TextDrawCreate(290.500000, 223.737609, "box");
	TextDrawLetterSize(promocode_td[6], 0.000000, 2.150002);
	TextDrawTextSize(promocode_td[6], 392.000000, 0.000000);
	TextDrawAlignment(promocode_td[6], 1);
	TextDrawColor(promocode_td[6], -1);
	TextDrawUseBox(promocode_td[6], 1);
	TextDrawBoxColor(promocode_td[6], 0xa24646FF);
	TextDrawSetShadow(promocode_td[6], 0);
	TextDrawSetOutline(promocode_td[6], 0);
	TextDrawBackgroundColor(promocode_td[6], 255);
	TextDrawFont(promocode_td[6], 1);
	TextDrawSetProportional(promocode_td[6], 1);
	TextDrawSetShadow(promocode_td[6], 0);

	promocode_td[7] = TextDrawCreate(275.299865, 222.762603, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[7], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[7], 25.669992, 21.279983);
	TextDrawAlignment(promocode_td[7], 1);
	TextDrawColor(promocode_td[7], 656879615);
	TextDrawSetShadow(promocode_td[7], 0);
	TextDrawSetOutline(promocode_td[7], 0);
	TextDrawBackgroundColor(promocode_td[7], 255);
	TextDrawFont(promocode_td[7], 4);
	TextDrawSetProportional(promocode_td[7], 0);
	TextDrawSetShadow(promocode_td[7], 0);

	promocode_td[8] = TextDrawCreate(379.500274, 222.875244, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[8], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[8], 25.669992, 21.279983);
	TextDrawAlignment(promocode_td[8], 1);
	TextDrawColor(promocode_td[8], 656879615);
	TextDrawSetShadow(promocode_td[8], 0);
	TextDrawSetOutline(promocode_td[8], 0);
	TextDrawBackgroundColor(promocode_td[8], 255);
	TextDrawFont(promocode_td[8], 4);
	TextDrawSetProportional(promocode_td[8], 0);
	TextDrawSetShadow(promocode_td[8], 0);

	promocode_td[9] = TextDrawCreate(291.099822, 224.499969, "box");
	TextDrawLetterSize(promocode_td[9], 0.000000, 1.954988);
	TextDrawTextSize(promocode_td[9], 388.871429, 0.000000);
	TextDrawAlignment(promocode_td[9], 1);
	TextDrawColor(promocode_td[9], -1);
	TextDrawUseBox(promocode_td[9], 1);
	TextDrawBoxColor(promocode_td[9], 656879615);
	TextDrawSetShadow(promocode_td[9], 0);
	TextDrawSetOutline(promocode_td[9], 0);
	TextDrawBackgroundColor(promocode_td[9], 255);
	TextDrawFont(promocode_td[9], 1);
	TextDrawSetProportional(promocode_td[9], 1);
	TextDrawSetShadow(promocode_td[9], 0);

	promocode_td[10] = TextDrawCreate(260.899902, 248.725112, "код_активации:");
	TextDrawLetterSize(promocode_td[10], 0.165500, 1.219375);
	TextDrawAlignment(promocode_td[10], 2);
	TextDrawColor(promocode_td[10], -1);
	TextDrawSetShadow(promocode_td[10], 0);
	TextDrawSetOutline(promocode_td[10], 0);
	TextDrawBackgroundColor(promocode_td[10], 255);
	TextDrawFont(promocode_td[10], 2);
	TextDrawSetProportional(promocode_td[10], 1);
	TextDrawSetShadow(promocode_td[10], 0);

	promocode_td[11] = TextDrawCreate(260.399902, 259.975585, "~y~upArena");
	TextDrawLetterSize(promocode_td[11], 0.170500, 1.153750);
	TextDrawAlignment(promocode_td[11], 2);
	TextDrawColor(promocode_td[11], -1);
	TextDrawSetShadow(promocode_td[11], 0);
	TextDrawSetOutline(promocode_td[11], 0);
	TextDrawBackgroundColor(promocode_td[11], 255);
	TextDrawFont(promocode_td[11], 2);
	TextDrawSetProportional(promocode_td[11], 1);
	TextDrawSetShadow(promocode_td[11], 0);

	promocode_td[12] = TextDrawCreate(278.099975, 227.524993, "АКТИВИРОВАТЬ:_~y~/mn>ПРОМОКОД");
	TextDrawLetterSize(promocode_td[12], 0.153499, 1.172501);
	TextDrawAlignment(promocode_td[12], 1);
	TextDrawColor(promocode_td[12], -1);
	TextDrawSetShadow(promocode_td[12], 0);
	TextDrawSetOutline(promocode_td[12], 0);
	TextDrawBackgroundColor(promocode_td[12], 255);
	TextDrawFont(promocode_td[12], 2);
	TextDrawSetProportional(promocode_td[12], 1);
	TextDrawSetShadow(promocode_td[12], 0);

	promocode_td[13] = TextDrawCreate(380.800079, 224.050048, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[13], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[13], 23.000000, 19.000000);
	TextDrawAlignment(promocode_td[13], 1);
	TextDrawColor(promocode_td[13], 0xa24646FF);
	TextDrawSetShadow(promocode_td[13], 0);
	TextDrawSetOutline(promocode_td[13], 0);
	TextDrawBackgroundColor(promocode_td[13], 255);
	TextDrawFont(promocode_td[13], 4);
	TextDrawSetProportional(promocode_td[13], 0);
	TextDrawSetShadow(promocode_td[13], 0);

	promocode_td[14] = TextDrawCreate(382.399902, 225.137695, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[14], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[14], 19.859996, 16.520011);
	TextDrawAlignment(promocode_td[14], 1);
	TextDrawColor(promocode_td[14], 656879615);
	TextDrawSetShadow(promocode_td[14], 0);
	TextDrawSetOutline(promocode_td[14], 0);
	TextDrawBackgroundColor(promocode_td[14], 255);
	TextDrawFont(promocode_td[14], 4);
	TextDrawSetProportional(promocode_td[14], 0);
	TextDrawSetShadow(promocode_td[14], 0);

	promocode_td[15] = TextDrawCreate(386.806610, 227.524993, "300");
	TextDrawLetterSize(promocode_td[15], 0.153499, 1.172501);
	TextDrawAlignment(promocode_td[15], 1);
	TextDrawColor(promocode_td[15], -1);
	TextDrawSetShadow(promocode_td[15], 0);
	TextDrawSetOutline(promocode_td[15], 0);
	TextDrawBackgroundColor(promocode_td[15], 255);
	TextDrawFont(promocode_td[15], 2);
	TextDrawSetProportional(promocode_td[15], 1);
	TextDrawSetShadow(promocode_td[15], 0);

	promocode_td[16] = TextDrawCreate(349.399902, 250.812500, "промокод_содержит:");
	TextDrawLetterSize(promocode_td[16], 0.181500, 1.271876);
	TextDrawAlignment(promocode_td[16], 2);
	TextDrawColor(promocode_td[16], -1);
	TextDrawSetShadow(promocode_td[16], 0);
	TextDrawSetOutline(promocode_td[16], 0);
	TextDrawBackgroundColor(promocode_td[16], 255);
	TextDrawFont(promocode_td[16], 2);
	TextDrawSetProportional(promocode_td[16], 1);
	TextDrawSetShadow(promocode_td[16], 0);

	promocode_td[17] = TextDrawCreate(349.399902, 265.660461, "~y~999999999_КРЕДИТОВ");
	TextDrawLetterSize(promocode_td[17], 0.174000, 1.149377);
	TextDrawAlignment(promocode_td[17], 2);
	TextDrawColor(promocode_td[17], -1);
	TextDrawSetShadow(promocode_td[17], 0);
	TextDrawSetOutline(promocode_td[17], 0);
	TextDrawBackgroundColor(promocode_td[17], 255);
	TextDrawFont(promocode_td[17], 2);
	TextDrawSetProportional(promocode_td[17], 1);
	TextDrawSetShadow(promocode_td[17], 0);

	promocode_td[18] = TextDrawCreate(302.800292, 280.125000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[18], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[18], 93.000000, 1.000000);
	TextDrawAlignment(promocode_td[18], 1);
	TextDrawColor(promocode_td[18], 0xa24646FF);
	TextDrawSetShadow(promocode_td[18], 0);
	TextDrawSetOutline(promocode_td[18], 0);
	TextDrawBackgroundColor(promocode_td[18], 255);
	TextDrawFont(promocode_td[18], 4);
	TextDrawSetProportional(promocode_td[18], 0);
	TextDrawSetShadow(promocode_td[18], 0);

	promocode_td[19] = TextDrawCreate(214.650070, 209.400009, "box");
	TextDrawLetterSize(promocode_td[19], 0.000000, 0.473999);
	TextDrawTextSize(promocode_td[19], 412.828857, 0.000000);
	TextDrawAlignment(promocode_td[19], 1);
	TextDrawColor(promocode_td[19], -1);
	TextDrawUseBox(promocode_td[19], 1);
	TextDrawBoxColor(promocode_td[19], 80);
	TextDrawSetShadow(promocode_td[19], 0);
	TextDrawSetOutline(promocode_td[19], 0);
	TextDrawBackgroundColor(promocode_td[19], 255);
	TextDrawFont(promocode_td[19], 1);
	TextDrawSetProportional(promocode_td[19], 1);
	TextDrawSetShadow(promocode_td[19], 0);

	promocode_td[20] = TextDrawCreate(287.600708, 201.825027, "ПРОМОКОД");
	TextDrawLetterSize(promocode_td[20], 0.236000, 1.149375);
	TextDrawAlignment(promocode_td[20], 1);
	TextDrawColor(promocode_td[20], -1);
	TextDrawSetShadow(promocode_td[20], 0);
	TextDrawSetOutline(promocode_td[20], 0);
	TextDrawBackgroundColor(promocode_td[20], 255);
	TextDrawFont(promocode_td[20], 2);
	TextDrawSetProportional(promocode_td[20], 1);
	TextDrawSetShadow(promocode_td[20], 0);

	promocode_td[21] = TextDrawCreate(348.601196, 283.425170, "ЗАКРЫТЬ_ПАНЕЛЬ");
	TextDrawLetterSize(promocode_td[21], 0.195000, 1.009375);
	TextDrawTextSize(promocode_td[21], 14.000000, 70.000000);
	TextDrawAlignment(promocode_td[21], 2);
	TextDrawColor(promocode_td[21], -1523963137);
	TextDrawUseBox(promocode_td[21], 1);
	TextDrawBoxColor(promocode_td[21], 268435456);
	TextDrawSetShadow(promocode_td[21], 0);
	TextDrawSetOutline(promocode_td[21], 0);
	TextDrawBackgroundColor(promocode_td[21], 255);
	TextDrawFont(promocode_td[21], 2);
	TextDrawSetProportional(promocode_td[21], 1);
	TextDrawSetShadow(promocode_td[21], 0);
	TextDrawSetSelectable(promocode_td[21], true);

	promocode_td[22] = TextDrawCreate(219.000000, 219.750000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[22], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[22], 1.670001, 1.520000);
	TextDrawAlignment(promocode_td[22], 1);
	TextDrawColor(promocode_td[22], 0xa24646FF);
	TextDrawSetShadow(promocode_td[22], 0);
	TextDrawSetOutline(promocode_td[22], 0);
	TextDrawBackgroundColor(promocode_td[22], 255);
	TextDrawFont(promocode_td[22], 4);
	TextDrawSetProportional(promocode_td[22], 0);
	TextDrawSetShadow(promocode_td[22], 0);

	promocode_td[23] = TextDrawCreate(220.000000, 282.312500, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[23], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[23], 1.670001, 1.520000);
	TextDrawAlignment(promocode_td[23], 1);
	TextDrawColor(promocode_td[23], 0xa24646FF);
	TextDrawSetShadow(promocode_td[23], 0);
	TextDrawSetOutline(promocode_td[23], 0);
	TextDrawBackgroundColor(promocode_td[23], 255);
	TextDrawFont(promocode_td[23], 4);
	TextDrawSetProportional(promocode_td[23], 0);
	TextDrawSetShadow(promocode_td[23], 0);

	promocode_td[24] = TextDrawCreate(305.500000, 250.375000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[24], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[24], 1.670001, 1.520000);
	TextDrawAlignment(promocode_td[24], 1);
	TextDrawColor(promocode_td[24], 0xa24646FF);
	TextDrawSetShadow(promocode_td[24], 0);
	TextDrawSetOutline(promocode_td[24], 0);
	TextDrawBackgroundColor(promocode_td[24], 255);
	TextDrawFont(promocode_td[24], 4);
	TextDrawSetProportional(promocode_td[24], 0);
	TextDrawSetShadow(promocode_td[24], 0);

	promocode_td[25] = TextDrawCreate(265.500000, 234.187500, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[25], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[25], 1.670001, 1.520000);
	TextDrawAlignment(promocode_td[25], 1);
	TextDrawColor(promocode_td[25], 0xa24646FF);
	TextDrawSetShadow(promocode_td[25], 0);
	TextDrawSetOutline(promocode_td[25], 0);
	TextDrawBackgroundColor(promocode_td[25], 255);
	TextDrawFont(promocode_td[25], 4);
	TextDrawSetProportional(promocode_td[25], 0);
	TextDrawSetShadow(promocode_td[25], 0);

	promocode_td[26] = TextDrawCreate(278.000000, 270.500000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[26], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[26], 1.670001, 1.520000);
	TextDrawAlignment(promocode_td[26], 1);
	TextDrawColor(promocode_td[26], 0xa24646FF);
	TextDrawSetShadow(promocode_td[26], 0);
	TextDrawSetOutline(promocode_td[26], 0);
	TextDrawBackgroundColor(promocode_td[26], 255);
	TextDrawFont(promocode_td[26], 4);
	TextDrawSetProportional(promocode_td[26], 0);
	TextDrawSetShadow(promocode_td[26], 0);

	promocode_td[27] = TextDrawCreate(250.000000, 246.000000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[27], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[27], 1.330001, 0.800001);
	TextDrawAlignment(promocode_td[27], 1);
	TextDrawColor(promocode_td[27], 0xa24646FF);
	TextDrawSetShadow(promocode_td[27], 0);
	TextDrawSetOutline(promocode_td[27], 0);
	TextDrawBackgroundColor(promocode_td[27], 255);
	TextDrawFont(promocode_td[27], 4);
	TextDrawSetProportional(promocode_td[27], 0);
	TextDrawSetShadow(promocode_td[27], 0);

	promocode_td[28] = TextDrawCreate(273.500000, 219.750000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[28], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[28], 1.330001, 0.800001);
	TextDrawAlignment(promocode_td[28], 1);
	TextDrawColor(promocode_td[28], 0xa24646FF);
	TextDrawSetShadow(promocode_td[28], 0);
	TextDrawSetOutline(promocode_td[28], 0);
	TextDrawBackgroundColor(promocode_td[28], 255);
	TextDrawFont(promocode_td[28], 4);
	TextDrawSetProportional(promocode_td[28], 0);
	TextDrawSetShadow(promocode_td[28], 0);

	promocode_td[29] = TextDrawCreate(264.500000, 291.937500, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[29], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[29], 1.330001, 0.800001);
	TextDrawAlignment(promocode_td[29], 1);
	TextDrawColor(promocode_td[29], 0xa24646FF);
	TextDrawSetShadow(promocode_td[29], 0);
	TextDrawSetOutline(promocode_td[29], 0);
	TextDrawBackgroundColor(promocode_td[29], 255);
	TextDrawFont(promocode_td[29], 4);
	TextDrawSetProportional(promocode_td[29], 0);
	TextDrawSetShadow(promocode_td[29], 0);

	promocode_td[30] = TextDrawCreate(288.500000, 289.312500, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[30], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[30], 1.330001, 0.800001);
	TextDrawAlignment(promocode_td[30], 1);
	TextDrawColor(promocode_td[30], 0xa24646FF);
	TextDrawSetShadow(promocode_td[30], 0);
	TextDrawSetOutline(promocode_td[30], 0);
	TextDrawBackgroundColor(promocode_td[30], 255);
	TextDrawFont(promocode_td[30], 4);
	TextDrawSetProportional(promocode_td[30], 0);
	TextDrawSetShadow(promocode_td[30], 0);

	promocode_td[31] = TextDrawCreate(397.000000, 268.750000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[31], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[31], 1.330001, 0.800001);
	TextDrawAlignment(promocode_td[31], 1);
	TextDrawColor(promocode_td[31], 0xa24646FF);
	TextDrawSetShadow(promocode_td[31], 0);
	TextDrawSetOutline(promocode_td[31], 0);
	TextDrawBackgroundColor(promocode_td[31], 255);
	TextDrawFont(promocode_td[31], 4);
	TextDrawSetProportional(promocode_td[31], 0);
	TextDrawSetShadow(promocode_td[31], 0);

	promocode_td[32] = TextDrawCreate(408.000000, 235.937500, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[32], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[32], 1.330001, 0.800001);
	TextDrawAlignment(promocode_td[32], 1);
	TextDrawColor(promocode_td[32], 0xa24646FF);
	TextDrawSetShadow(promocode_td[32], 0);
	TextDrawSetOutline(promocode_td[32], 0);
	TextDrawBackgroundColor(promocode_td[32], 255);
	TextDrawFont(promocode_td[32], 4);
	TextDrawSetProportional(promocode_td[32], 0);
	TextDrawSetShadow(promocode_td[32], 0);

	promocode_td[33] = TextDrawCreate(367.500000, 219.750000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[33], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[33], 1.330001, 0.800001);
	TextDrawAlignment(promocode_td[33], 1);
	TextDrawColor(promocode_td[33], 0xa24646FF);
	TextDrawSetShadow(promocode_td[33], 0);
	TextDrawSetOutline(promocode_td[33], 0);
	TextDrawBackgroundColor(promocode_td[33], 255);
	TextDrawFont(promocode_td[33], 4);
	TextDrawSetProportional(promocode_td[33], 0);
	TextDrawSetShadow(promocode_td[33], 0);

	promocode_td[34] = TextDrawCreate(356.500000, 262.187500, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[34], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[34], 1.330001, 0.800001);
	TextDrawAlignment(promocode_td[34], 1);
	TextDrawColor(promocode_td[34], 0xa24646FF);
	TextDrawSetShadow(promocode_td[34], 0);
	TextDrawSetOutline(promocode_td[34], 0);
	TextDrawBackgroundColor(promocode_td[34], 255);
	TextDrawFont(promocode_td[34], 4);
	TextDrawSetProportional(promocode_td[34], 0);
	TextDrawSetShadow(promocode_td[34], 0);

	promocode_td[35] = TextDrawCreate(351.500000, 293.250000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[35], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[35], 2.000000, 1.770000);
	TextDrawAlignment(promocode_td[35], 1);
	TextDrawColor(promocode_td[35], 0xa24646FF);
	TextDrawSetShadow(promocode_td[35], 0);
	TextDrawSetOutline(promocode_td[35], 0);
	TextDrawBackgroundColor(promocode_td[35], 255);
	TextDrawFont(promocode_td[35], 4);
	TextDrawSetProportional(promocode_td[35], 0);
	TextDrawSetShadow(promocode_td[35], 0);

	promocode_td[36] = TextDrawCreate(384.500000, 286.250000, "LD_Pool:ball");
	TextDrawLetterSize(promocode_td[36], 0.000000, 0.000000);
	TextDrawTextSize(promocode_td[36], 1.450000, -1.000000);
	TextDrawAlignment(promocode_td[36], 1);
	TextDrawColor(promocode_td[36], 0xa24646FF);
	TextDrawSetShadow(promocode_td[36], 0);
	TextDrawSetOutline(promocode_td[36], 0);
	TextDrawBackgroundColor(promocode_td[36], 255);
	TextDrawFont(promocode_td[36], 4);
	TextDrawSetProportional(promocode_td[36], 0);
	TextDrawSetShadow(promocode_td[36], 0);
}

stock LoadTextDraws()
{
    buy_numbers_car[0] = TextDrawCreate(463.500000, 192.250000, "usebox");
	TextDrawLetterSize(buy_numbers_car[0], 0.000000, 14.461111);
	TextDrawTextSize(buy_numbers_car[0], 191.000000, 0.000000);
	TextDrawAlignment(buy_numbers_car[0], 1);
	TextDrawColor(buy_numbers_car[0], 0);
	TextDrawUseBox(buy_numbers_car[0], true);
	TextDrawBoxColor(buy_numbers_car[0], 102);
	TextDrawSetShadow(buy_numbers_car[0], 0);
	TextDrawSetOutline(buy_numbers_car[0], 0);
	TextDrawFont(buy_numbers_car[0], 0);

	buy_numbers_car[1] = TextDrawCreate(242.000000, 196.000000, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[1], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[1], 175.000000, 17.500000);
	TextDrawAlignment(buy_numbers_car[1], 1);
	TextDrawColor(buy_numbers_car[1], 291413674);
	TextDrawSetShadow(buy_numbers_car[1], 0);
	TextDrawSetOutline(buy_numbers_car[1], 0);
	TextDrawFont(buy_numbers_car[1], 4);

	buy_numbers_car[2] = TextDrawCreate(243.000000, 196.875000, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[2], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[2], 173.000000, 15.750000);
	TextDrawAlignment(buy_numbers_car[2], 1);
	TextDrawColor(buy_numbers_car[2], 580120746);
	TextDrawSetShadow(buy_numbers_car[2], 0);
	TextDrawSetOutline(buy_numbers_car[2], 0);
	TextDrawFont(buy_numbers_car[2], 4);

	buy_numbers_car[3] = TextDrawCreate(255.000000, 198.625000, "ЊOKYЊKA HOMEPHO‚O €HAKA");
	TextDrawLetterSize(buy_numbers_car[3], 0.241000, 1.092500);
	TextDrawAlignment(buy_numbers_car[3], 1);
	TextDrawColor(buy_numbers_car[3], -1);
	TextDrawSetShadow(buy_numbers_car[3], 0);
	TextDrawSetOutline(buy_numbers_car[3], 0);
	TextDrawBackgroundColor(buy_numbers_car[3], 51);
	TextDrawFont(buy_numbers_car[3], 2);
	TextDrawSetProportional(buy_numbers_car[3], 1);

	buy_numbers_car[4] = TextDrawCreate(223.500000, 226.187500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[4], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[4], 208.000000, 38.500000);
	TextDrawAlignment(buy_numbers_car[4], 1);
	TextDrawColor(buy_numbers_car[4], 255);
	TextDrawSetShadow(buy_numbers_car[4], 0);
	TextDrawSetOutline(buy_numbers_car[4], 0);
	TextDrawFont(buy_numbers_car[4], 4);

	buy_numbers_car[5] = TextDrawCreate(224.500000, 227.062500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[5], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[5], 205.500000, 36.312500);
	TextDrawAlignment(buy_numbers_car[5], 1);
	TextDrawColor(buy_numbers_car[5], -1);
	TextDrawSetShadow(buy_numbers_car[5], 0);
	TextDrawSetOutline(buy_numbers_car[5], 0);
	TextDrawFont(buy_numbers_car[5], 4);

	buy_numbers_car[6] = TextDrawCreate(381.000000, 227.062500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[6], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[6], 1.500000, 37.625000);
	TextDrawAlignment(buy_numbers_car[6], 1);
	TextDrawColor(buy_numbers_car[6], 255);
	TextDrawSetShadow(buy_numbers_car[6], 0);
	TextDrawSetOutline(buy_numbers_car[6], 0);
	TextDrawFont(buy_numbers_car[6], 4);

	/*buy_numbers_car[7] = TextDrawCreate(240.500000, 224.437500, "x007xx");
	TextDrawLetterSize(buy_numbers_car[7], 1.064500, 3.905624);
	TextDrawAlignment(buy_numbers_car[7], 1);
	TextDrawColor(buy_numbers_car[7], 255);
	TextDrawSetShadow(buy_numbers_car[7], 0);
	TextDrawSetOutline(buy_numbers_car[7], 0);
	TextDrawBackgroundColor(buy_numbers_car[7], 51);
	TextDrawFont(buy_numbers_car[7], 1);*/

	buy_numbers_car[7] = TextDrawCreate(406.000000, 226.625000, "152");
	TextDrawLetterSize(buy_numbers_car[7], 0.783499, 2.216875);
	TextDrawAlignment(buy_numbers_car[7], 2);
	TextDrawColor(buy_numbers_car[7], 255);
	TextDrawSetShadow(buy_numbers_car[7], 0);
	TextDrawSetOutline(buy_numbers_car[7], 0);
	TextDrawBackgroundColor(buy_numbers_car[7], 51);
	TextDrawFont(buy_numbers_car[7], 1);
	TextDrawSetProportional(buy_numbers_car[7], 1);

	buy_numbers_car[8] = TextDrawCreate(384.500000, 248.937500, "RUS");
	TextDrawLetterSize(buy_numbers_car[8], 0.324499, 1.285000);
	TextDrawAlignment(buy_numbers_car[8], 1);
	TextDrawColor(buy_numbers_car[8], 255);
	TextDrawSetShadow(buy_numbers_car[8], 0);
	TextDrawSetOutline(buy_numbers_car[8], 0);
	TextDrawBackgroundColor(buy_numbers_car[8], 51);
	TextDrawFont(buy_numbers_car[8], 1);
	TextDrawSetProportional(buy_numbers_car[8], 1);

	buy_numbers_car[9] = TextDrawCreate(405.500000, 249.812500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[9], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[9], 22.000000, 10.500000);
	TextDrawAlignment(buy_numbers_car[9], 1);
	TextDrawColor(buy_numbers_car[9], 255);
	TextDrawSetShadow(buy_numbers_car[9], 0);
	TextDrawSetOutline(buy_numbers_car[9], 0);
	TextDrawFont(buy_numbers_car[9], 4);

	buy_numbers_car[10] = TextDrawCreate(406.500000, 250.687500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[10], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[10], 20.000000, 8.750000);
	TextDrawAlignment(buy_numbers_car[10], 1);
	TextDrawColor(buy_numbers_car[10], -1);
	TextDrawSetShadow(buy_numbers_car[10], 0);
	TextDrawSetOutline(buy_numbers_car[10], 0);
	TextDrawFont(buy_numbers_car[10], 4);

	buy_numbers_car[11] = TextDrawCreate(406.500000, 253.312500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[11], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[11], 20.000000, 3.062500);
	TextDrawAlignment(buy_numbers_car[11], 1);
	TextDrawColor(buy_numbers_car[11], 65535);
	TextDrawSetShadow(buy_numbers_car[11], 0);
	TextDrawSetOutline(buy_numbers_car[11], 0);
	TextDrawFont(buy_numbers_car[11], 4);

	buy_numbers_car[12] = TextDrawCreate(406.500000, 256.375000, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[12], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[12], 20.000000, 3.062500);
	TextDrawAlignment(buy_numbers_car[12], 1);
	TextDrawColor(buy_numbers_car[12], -16776961);
	TextDrawSetShadow(buy_numbers_car[12], 0);
	TextDrawSetOutline(buy_numbers_car[12], 0);
	TextDrawFont(buy_numbers_car[12], 4);

	buy_numbers_car[13] = TextDrawCreate(327.000000, 271.687500, "„E‡AE¦E ‡… ЊP…O—PEC¦…~n~ ѓA®®‘† ®OMEP®O† €®AK?");
	TextDrawLetterSize(buy_numbers_car[13], 0.355499, 1.114374);
	TextDrawAlignment(buy_numbers_car[13], 2);
	TextDrawColor(buy_numbers_car[13], -1);
	TextDrawSetShadow(buy_numbers_car[13], 0);
	TextDrawSetOutline(buy_numbers_car[13], 0);
	TextDrawBackgroundColor(buy_numbers_car[13], 51);
	TextDrawFont(buy_numbers_car[13], 2);
	TextDrawSetProportional(buy_numbers_car[13], 1);

	buy_numbers_car[14] = TextDrawCreate(210.000000, 304.937500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[14], 0.000000, 1.723611);
	TextDrawTextSize(buy_numbers_car[14], 90.000000, 18.812500);
	TextDrawAlignment(buy_numbers_car[14], 1);
	TextDrawColor(buy_numbers_car[14], 0x44BA2CAA);
	TextDrawSetShadow(buy_numbers_car[14], 0);
	TextDrawSetOutline(buy_numbers_car[14], 0);
	TextDrawFont(buy_numbers_car[14], 4);
	TextDrawSetSelectable(buy_numbers_car[14], true);

	buy_numbers_car[15] = TextDrawCreate(215.500000, 308.000000, "ЊP…OЂPECT…");
	TextDrawLetterSize(buy_numbers_car[15], 0.314500, 1.201875);
	TextDrawAlignment(buy_numbers_car[15], 1);
	TextDrawColor(buy_numbers_car[15], -1);
	TextDrawSetShadow(buy_numbers_car[15], 0);
	TextDrawSetOutline(buy_numbers_car[15], 0);
	TextDrawBackgroundColor(buy_numbers_car[15], 51);
	TextDrawFont(buy_numbers_car[15], 2);
	TextDrawSetProportional(buy_numbers_car[15], 1);

	buy_numbers_car[16] = TextDrawCreate(355.000000, 304.937500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[16], 0.000000, 1.673611);
	TextDrawTextSize(buy_numbers_car[16], 90.000000, 18.812500);
	TextDrawAlignment(buy_numbers_car[16], 1);
	TextDrawColor(buy_numbers_car[16], 0xF50808AA);
	TextDrawSetShadow(buy_numbers_car[16], 0);
	TextDrawSetOutline(buy_numbers_car[16], 0);
	TextDrawFont(buy_numbers_car[16], 4);
	TextDrawSetSelectable(buy_numbers_car[16], true);

	buy_numbers_car[17] = TextDrawCreate(376.000000, 307.562500, "OTMEHA");
	TextDrawLetterSize(buy_numbers_car[17], 0.301499, 1.206250);
	TextDrawAlignment(buy_numbers_car[17], 1);
	TextDrawColor(buy_numbers_car[17], -1);
	TextDrawSetShadow(buy_numbers_car[17], 0);
	TextDrawSetOutline(buy_numbers_car[17], 0);
	TextDrawBackgroundColor(buy_numbers_car[17], 51);
	TextDrawFont(buy_numbers_car[17], 2);
	TextDrawSetProportional(buy_numbers_car[17], 1);

	buy_numbers_car[18] = TextDrawCreate(40.500000, 192.250000, "usebox");
	TextDrawLetterSize(buy_numbers_car[18], 0.000000, 8.238889);
	TextDrawTextSize(buy_numbers_car[18], 189.500000, 0.000000);
	TextDrawAlignment(buy_numbers_car[18], 1);
	TextDrawColor(buy_numbers_car[18], 0);
	TextDrawUseBox(buy_numbers_car[18], true);
	TextDrawBoxColor(buy_numbers_car[18], 102);
	TextDrawSetShadow(buy_numbers_car[18], 0);
	TextDrawSetOutline(buy_numbers_car[18], 0);
	TextDrawFont(buy_numbers_car[18], 0);

	buy_numbers_car[19] = TextDrawCreate(51.000000, 192.062500, "ГОС._УЧЕРЕЖДЕНИЯ:");
	TextDrawLetterSize(buy_numbers_car[19], 0.268500, 1.166876);
	TextDrawAlignment(buy_numbers_car[19], 1);
	TextDrawColor(buy_numbers_car[19], -1);
	TextDrawSetShadow(buy_numbers_car[19], 0);
	TextDrawSetOutline(buy_numbers_car[19], 0);
	TextDrawBackgroundColor(buy_numbers_car[19], 51);
	TextDrawFont(buy_numbers_car[19], 2);
	TextDrawSetProportional(buy_numbers_car[19], 1);

	buy_numbers_car[20] = TextDrawCreate(40.500000, 206.937500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[20], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[20], 148.500000, 11.375000);
	TextDrawAlignment(buy_numbers_car[20], 1);
	TextDrawColor(buy_numbers_car[20], 255);
	TextDrawSetShadow(buy_numbers_car[20], 0);
	TextDrawSetOutline(buy_numbers_car[20], 0);
	TextDrawFont(buy_numbers_car[20], 4);
	TextDrawSetSelectable(buy_numbers_car[20], true);

	buy_numbers_car[21] = TextDrawCreate(40.500000, 192.062500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[21], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[21], 148.500000, 13.125000);
	TextDrawAlignment(buy_numbers_car[21], 1);
	TextDrawColor(buy_numbers_car[21], 651141034);
	TextDrawSetShadow(buy_numbers_car[21], 0);
	TextDrawSetOutline(buy_numbers_car[21], 0);
	TextDrawFont(buy_numbers_car[21], 4);

	buy_numbers_car[22] = TextDrawCreate(111.500000, 206.500000, "ППС Г. БАТЫРЕВО");
	TextDrawLetterSize(buy_numbers_car[22], 0.305999, 1.053125);
	TextDrawAlignment(buy_numbers_car[22], 2);
	TextDrawColor(buy_numbers_car[22], -1);
	TextDrawSetShadow(buy_numbers_car[22], 0);
	TextDrawSetOutline(buy_numbers_car[22], 0);
	TextDrawBackgroundColor(buy_numbers_car[22], 51);
	TextDrawFont(buy_numbers_car[22], 2);
	TextDrawSetProportional(buy_numbers_car[22], 1);

	buy_numbers_car[23] = TextDrawCreate(113.000000, 218.312500, "ДПС Г. АРЗАМАС");
	TextDrawLetterSize(buy_numbers_car[23], 0.305999, 1.053125);
	TextDrawAlignment(buy_numbers_car[23], 2);
	TextDrawColor(buy_numbers_car[23], -1);
	TextDrawSetShadow(buy_numbers_car[23], 0);
	TextDrawSetOutline(buy_numbers_car[23], 0);
	TextDrawBackgroundColor(buy_numbers_car[23], 51);
	TextDrawFont(buy_numbers_car[23], 2);
	TextDrawSetProportional(buy_numbers_car[23], 1);

	buy_numbers_car[24] = TextDrawCreate(40.500000, 219.187500, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[24], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[24], 148.500000, 10.937500);
	TextDrawAlignment(buy_numbers_car[24], 1);
	TextDrawColor(buy_numbers_car[24], 255);
	TextDrawSetShadow(buy_numbers_car[24], 0);
	TextDrawSetOutline(buy_numbers_car[24], 0);
	TextDrawFont(buy_numbers_car[24], 4);
	TextDrawSetSelectable(buy_numbers_car[24], true);

	buy_numbers_car[25] = TextDrawCreate(40.500000, 231.000000, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[25], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[25], 148.500000, 10.937500);
	TextDrawAlignment(buy_numbers_car[25], 1);
	TextDrawColor(buy_numbers_car[25], 255);
	TextDrawSetShadow(buy_numbers_car[25], 0);
	TextDrawSetOutline(buy_numbers_car[25], 0);
	TextDrawFont(buy_numbers_car[25], 4);
	TextDrawSetSelectable(buy_numbers_car[25], true);

	buy_numbers_car[26] = TextDrawCreate(113.000000, 230.562500, "ФСБ Г. ЭДОВО");
	TextDrawLetterSize(buy_numbers_car[26], 0.305999, 1.053125);
	TextDrawAlignment(buy_numbers_car[26], 2);
	TextDrawColor(buy_numbers_car[26], -1);
	TextDrawSetShadow(buy_numbers_car[26], 0);
	TextDrawSetOutline(buy_numbers_car[26], 0);
	TextDrawBackgroundColor(buy_numbers_car[26], 51);
	TextDrawFont(buy_numbers_car[26], 2);
	TextDrawSetProportional(buy_numbers_car[26], 1);

	buy_numbers_car[27] = TextDrawCreate(47.500000, 251.125000, "‰EHA: ~b~~h~~h~5000 PY—‡E†");
	TextDrawLetterSize(buy_numbers_car[27], 0.369000, 1.254376);
	TextDrawAlignment(buy_numbers_car[27], 1);
	TextDrawColor(buy_numbers_car[27], -1);
	TextDrawSetShadow(buy_numbers_car[27], 0);
	TextDrawSetOutline(buy_numbers_car[27], 0);
	TextDrawBackgroundColor(buy_numbers_car[27], 51);
	TextDrawFont(buy_numbers_car[27], 2);
	TextDrawSetProportional(buy_numbers_car[27], 1);

	buy_numbers_car[28] = TextDrawCreate(40.500000, 243.000000, "LD_SPAC:white");
	TextDrawLetterSize(buy_numbers_car[28], 0.000000, 0.000000);
	TextDrawTextSize(buy_numbers_car[28], 148.500000, 10.937500);
	TextDrawAlignment(buy_numbers_car[28], 1);
	TextDrawColor(buy_numbers_car[28], 255);
	TextDrawSetShadow(buy_numbers_car[28], 0);
	TextDrawSetOutline(buy_numbers_car[28], 0);
	TextDrawFont(buy_numbers_car[28], 4);
	TextDrawSetSelectable(buy_numbers_car[28], true);

	buy_numbers_car[29] = TextDrawCreate(113.000000, 242.312500, "СПЕЦНАЗ");
	TextDrawLetterSize(buy_numbers_car[29], 0.305999, 1.053125);
	TextDrawAlignment(buy_numbers_car[29], 2);
	TextDrawColor(buy_numbers_car[29], -1);
	TextDrawSetShadow(buy_numbers_car[29], 0);
	TextDrawSetOutline(buy_numbers_car[29], 0);
	TextDrawBackgroundColor(buy_numbers_car[29], 51);
	TextDrawFont(buy_numbers_car[29], 2);
	TextDrawSetProportional(buy_numbers_car[29], 1);
	
	TD_Fuel[0] = TextDrawCreate(318.594299, 173.250030, "_");
	TextDrawLetterSize(TD_Fuel[0], 0.449999, 1.600000);
	TextDrawTextSize(TD_Fuel[0], -54.348457, -241.500015);
	TextDrawAlignment(TD_Fuel[0], 2);
	TextDrawColor(TD_Fuel[0], -1);
	TextDrawUseBox(TD_Fuel[0], true);
	TextDrawBoxColor(TD_Fuel[0], 269488383);
	TextDrawSetShadow(TD_Fuel[0], 0);
	TextDrawSetOutline(TD_Fuel[0], 1);
	TextDrawBackgroundColor(TD_Fuel[0], 51);
	TextDrawFont(TD_Fuel[0], 2);
	TextDrawSetProportional(TD_Fuel[0], 1);

	TD_Fuel[1] = TextDrawCreate(318.657257, 192.333358, "_");
	TextDrawLetterSize(TD_Fuel[1], 0.449999, 1.600000);
	TextDrawTextSize(TD_Fuel[1], -54.348457, -241.500015);
	TextDrawAlignment(TD_Fuel[1], 2);
	TextDrawColor(TD_Fuel[1], -1);
	TextDrawUseBox(TD_Fuel[1], true);
	TextDrawBoxColor(TD_Fuel[1], 269488383);
	TextDrawSetShadow(TD_Fuel[1], 0);
	TextDrawSetOutline(TD_Fuel[1], 1);
	TextDrawBackgroundColor(TD_Fuel[1], 51);
	TextDrawFont(TD_Fuel[1], 2);
	TextDrawSetProportional(TD_Fuel[1], 1);

	TD_Fuel[2] = TextDrawCreate(179.785934, 174.999969, "_~n~-~n~_");
	TextDrawLetterSize(TD_Fuel[2], 0.442035, 1.127499);
	TextDrawTextSize(TD_Fuel[2], 20.901899, 32.666690);
	TextDrawAlignment(TD_Fuel[2], 2);
	TextDrawColor(TD_Fuel[2], -1);
	TextDrawUseBox(TD_Fuel[2], true);
	TextDrawBoxColor(TD_Fuel[2], 522133503);
	TextDrawSetShadow(TD_Fuel[2], 0);
	TextDrawSetOutline(TD_Fuel[2], 1);
	TextDrawBackgroundColor(TD_Fuel[2], 0x00000000);
	TextDrawFont(TD_Fuel[2], 1);
	TextDrawSetProportional(TD_Fuel[2], 1);
	TextDrawSetSelectable(TD_Fuel[2], true);

	TD_Fuel[3] = TextDrawCreate(457.339263, 174.833328, "_~n~+~n~_");
	TextDrawLetterSize(TD_Fuel[3], 0.442035, 1.127499);
	TextDrawTextSize(TD_Fuel[3], 20.901899, 32.666690);
	TextDrawAlignment(TD_Fuel[3], 2);
	TextDrawColor(TD_Fuel[3], -1);
	TextDrawUseBox(TD_Fuel[3], true);
	TextDrawBoxColor(TD_Fuel[3], 522133503);
	TextDrawSetShadow(TD_Fuel[3], 0);
	TextDrawSetOutline(TD_Fuel[3], 1);
	TextDrawBackgroundColor(TD_Fuel[3], 0x00000000);
	TextDrawFont(TD_Fuel[3], 1);
	TextDrawSetProportional(TD_Fuel[3], 1);
	TextDrawSetSelectable(TD_Fuel[3], true);

	TD_Fuel[4] = TextDrawCreate(430.228363, 183.500015, "usebox");
	TextDrawLetterSize(TD_Fuel[4], 0.000000, 1.498149);
	TextDrawTextSize(TD_Fuel[4], 206.960479, 0.000000);
	TextDrawAlignment(TD_Fuel[4], 1);
	TextDrawColor(TD_Fuel[4], 0);
	TextDrawUseBox(TD_Fuel[4], true);
	TextDrawBoxColor(TD_Fuel[4], 522133503);
	TextDrawSetShadow(TD_Fuel[4], 0);
	TextDrawSetOutline(TD_Fuel[4], 0);
	TextDrawBackgroundColor(TD_Fuel[4], 0x00000000);
	TextDrawFont(TD_Fuel[4], 0);

	TD_Fuel[5] = TextDrawCreate(428.417114, 185.083374, "usebox");
	TextDrawLetterSize(TD_Fuel[5], 0.000000, 1.170184);
	TextDrawTextSize(TD_Fuel[5], 209.771606, 0.000000);
	TextDrawAlignment(TD_Fuel[5], 1);
	TextDrawColor(TD_Fuel[5], 0);
	TextDrawUseBox(TD_Fuel[5], true);
	TextDrawBoxColor(TD_Fuel[5], 522133503);
	TextDrawSetShadow(TD_Fuel[5], 0);
	TextDrawSetOutline(TD_Fuel[5], 0);
	TextDrawBackgroundColor(TD_Fuel[5], 0x00000000);
	TextDrawFont(TD_Fuel[5], 0);

	TD_Fuel[6] = TextDrawCreate(320.468719, 213.500061, "FILLING");
	TextDrawLetterSize(TD_Fuel[6], 0.308037, 1.162498);
	TextDrawTextSize(TD_Fuel[6], 10.713029, 55.416667);
	TextDrawAlignment(TD_Fuel[6], 2);
	TextDrawColor(TD_Fuel[6], -1);
	TextDrawUseBox(TD_Fuel[6], true);
	TextDrawBoxColor(TD_Fuel[6], 522133503);
	TextDrawSetShadow(TD_Fuel[6], 0);
	TextDrawSetOutline(TD_Fuel[6], 1);
	TextDrawBackgroundColor(TD_Fuel[6], 0x00000000);
	TextDrawFont(TD_Fuel[6], 2);
	TextDrawSetProportional(TD_Fuel[6], 1);
	TextDrawSetSelectable(TD_Fuel[6], true);

	TD_Fuel[7] = TextDrawCreate(427.571594, 155.000106, "X");
	TextDrawLetterSize(TD_Fuel[7], 0.230263, 1.139166);
	TextDrawTextSize(TD_Fuel[7], 10.418735, 15.166658);
	TextDrawAlignment(TD_Fuel[7], 2);
	TextDrawColor(TD_Fuel[7], -1);
	TextDrawUseBox(TD_Fuel[7], true);
	TextDrawBoxColor(TD_Fuel[7], 522133503);
	TextDrawSetShadow(TD_Fuel[7], 0);
	TextDrawSetOutline(TD_Fuel[7], 1);
	TextDrawBackgroundColor(TD_Fuel[7], 0x00000000);
	TextDrawFont(TD_Fuel[7], 2);
	TextDrawSetProportional(TD_Fuel[7], 1);
	TextDrawSetSelectable(TD_Fuel[7], true);
	
	TDn[0] = TextDrawCreate(381.500000, 386.062500, "usebox");
    TextDrawLetterSize(TDn[0], 0.000000, 4.058333);
    TextDrawTextSize(TDn[0], 250.500000, 0.000000);
    TextDrawAlignment(TDn[0], 1);
    TextDrawColor(TDn[0], 0);
    TextDrawUseBox(TDn[0], true);
    TextDrawBoxColor(TDn[0], 741092607);
    TextDrawSetShadow(TDn[0], 0);
    TextDrawSetOutline(TDn[0], 0);
    TextDrawFont(TDn[0], 0);

    TDn[1] = TextDrawCreate(379.000000, 388.250000, "usebox");
    TextDrawLetterSize(TDn[1], 0.000000, 3.570833);
    TextDrawTextSize(TDn[1], 253.000000, 0.000000);
    TextDrawAlignment(TDn[1], 1);
    TextDrawColor(TDn[1], 0);
    TextDrawUseBox(TDn[1], true);
    TextDrawBoxColor(TDn[1], 102);
    TextDrawSetShadow(TDn[1], 0);
    TextDrawSetOutline(TDn[1], 0);
    TextDrawFont(TDn[1], 0);

    TDn[2] = TextDrawCreate(278.500000, 396.375000, "љAћ©ҐE");
    TextDrawLetterSize(TDn[2], 0.449999, 1.600000);
    TextDrawTextSize(TDn[2], 357.500000, 15.750000);
    TextDrawAlignment(TDn[2], 1);
    TextDrawColor(TDn[2], -1);
    TextDrawUseBox(TDn[2], true);
    TextDrawBoxColor(TDn[2], 520093696);
    TextDrawSetShadow(TDn[2], 0);
    TextDrawSetOutline(TDn[2], 1);
    TextDrawBackgroundColor(TDn[2], 520093696);
    TextDrawFont(TDn[2], 2);
    TextDrawSetProportional(TDn[2], 1);
    TextDrawSetSelectable(TDn[2], true);
	
	village_TD[0] = TextDrawCreate(587.5109, 12.6666, "GTA3"); // ?????
	TextDrawLetterSize(village_TD[0], 0.2551, 1.1683);
	TextDrawAlignment(village_TD[0], 1);
	TextDrawColor(village_TD[0], 895929599);
	TextDrawBackgroundColor(village_TD[0], 255);
	TextDrawFont(village_TD[0], 1);
	TextDrawSetProportional(village_TD[0], 1);
	TextDrawSetShadow(village_TD[0], 0);

	village_TD[1] = TextDrawCreate(583.7626, 20.8332, ""); // ?????
	TextDrawLetterSize(village_TD[1], 0.1877, 1.0575);
	TextDrawAlignment(village_TD[1], 1);
	TextDrawColor(village_TD[1], -1);
	TextDrawBackgroundColor(village_TD[1], 255);
	TextDrawFont(village_TD[1], 2);
	TextDrawSetProportional(village_TD[1], 1);
	TextDrawSetShadow(village_TD[1], 0);

	village_TD[2] = TextDrawCreate(552.6720, 5.0833, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[2], 34.0000, 35.0000);
	TextDrawAlignment(village_TD[2], 1);
	TextDrawColor(village_TD[2], 625512191);
	TextDrawBackgroundColor(village_TD[2], 255);
	TextDrawFont(village_TD[2], 4);
	TextDrawSetProportional(village_TD[2], 0);
	TextDrawSetShadow(village_TD[2], 0);

	village_TD[3] = TextDrawCreate(558.2943, 9.7497, "ld_beat:chit"); // ?????
	TextDrawTextSize(village_TD[3], 23.0000, 25.0000);
	TextDrawAlignment(village_TD[3], 1);
	TextDrawColor(village_TD[3], 894608127);
	TextDrawBackgroundColor(village_TD[3], 255);
	TextDrawFont(village_TD[3], 4);
	TextDrawSetProportional(village_TD[3], 0);
	TextDrawSetShadow(village_TD[3], 0);

	village_TD[4] = TextDrawCreate(561.5740, 13.2501, "ld_beat:chit"); // ?????
	TextDrawTextSize(village_TD[4], 16.0000, 18.0000);
	TextDrawAlignment(village_TD[4], 1);
	TextDrawColor(village_TD[4], 895929343);
	TextDrawBackgroundColor(village_TD[4], 255);
	TextDrawFont(village_TD[4], 4);
	TextDrawSetProportional(village_TD[4], 0);
	TextDrawSetShadow(village_TD[4], 0);

	village_TD[5] = TextDrawCreate(566.4274, 16.1665, "V"); // ?????
	TextDrawLetterSize(village_TD[5], 0.3122, 1.2675);
	TextDrawAlignment(village_TD[5], 1);
	TextDrawColor(village_TD[5], -1);
	TextDrawBackgroundColor(village_TD[5], 255);
	TextDrawFont(village_TD[5], 1);
	TextDrawSetProportional(village_TD[5], 1);
	TextDrawSetShadow(village_TD[5], 0);

	village_TD[6] = TextDrawCreate(555.4830, 24.3332, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[6], 2.8700, 3.4200);
	TextDrawAlignment(village_TD[6], 1);
	TextDrawColor(village_TD[6], 625512191);
	TextDrawBackgroundColor(village_TD[6], 255);
	TextDrawFont(village_TD[6], 4);
	TextDrawSetProportional(village_TD[6], 0);
	TextDrawSetShadow(village_TD[6], 0);

	village_TD[7] = TextDrawCreate(554.0776, 20.8332, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[7], 3.2499, 4.0600);
	TextDrawAlignment(village_TD[7], 1);
	TextDrawColor(village_TD[7], 625512191);
	TextDrawBackgroundColor(village_TD[7], 255);
	TextDrawFont(village_TD[7], 4);
	TextDrawSetProportional(village_TD[7], 0);
	TextDrawSetShadow(village_TD[7], 0);

	village_TD[8] = TextDrawCreate(554.0776, 16.1666, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[8], 3.4899, 4.5500);
	TextDrawAlignment(village_TD[8], 1);
	TextDrawColor(village_TD[8], 625512191);
	TextDrawBackgroundColor(village_TD[8], 255);
	TextDrawFont(village_TD[8], 4);
	TextDrawSetProportional(village_TD[8], 0);
	TextDrawSetShadow(village_TD[8], 0);

	village_TD[9] = TextDrawCreate(555.0145, 12.0832, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[9], 4.2400, 4.8400);
	TextDrawAlignment(village_TD[9], 1);
	TextDrawColor(village_TD[9], 625512191);
	TextDrawBackgroundColor(village_TD[9], 255);
	TextDrawFont(village_TD[9], 4);
	TextDrawSetProportional(village_TD[9], 0);
	TextDrawSetShadow(village_TD[9], 0);

	village_TD[10] = TextDrawCreate(557.8255, 8.5832, "LD_BEAT:chit"); // ?????
	TextDrawTextSize(village_TD[10], 4.5300, 5.6500);
	TextDrawAlignment(village_TD[10], 1);
	TextDrawColor(village_TD[10], 625512191);
	TextDrawBackgroundColor(village_TD[10], 255);
	TextDrawFont(village_TD[10], 4);
	TextDrawSetProportional(village_TD[10], 0);
	TextDrawSetShadow(village_TD[10], 0);

	info_server[0] = TextDrawCreate(594.500000, 25.812500, "16:48");//2018 time
	TextDrawLetterSize(info_server[0], 0.372000, 1.324375);
	TextDrawAlignment(info_server[0], 1);
	TextDrawColor(info_server[0], -1);
	TextDrawSetShadow(info_server[0], 1);
	TextDrawSetOutline(info_server[0], 0);
	TextDrawBackgroundColor(info_server[0], 51);
	TextDrawFont(info_server[0], 3);
	TextDrawSetProportional(info_server[0], 1);

	info_server[1] = TextDrawCreate(567.000000, 35.437500, "12.05.2018");
	TextDrawLetterSize(info_server[1], 0.279499, 1.236875);
	TextDrawAlignment(info_server[1], 1);
	TextDrawColor(info_server[1], -1);
	TextDrawSetShadow(info_server[1], 1);
	TextDrawSetOutline(info_server[1], 0);
	TextDrawBackgroundColor(info_server[1], 51);
	TextDrawFont(info_server[1], 1);
	TextDrawSetProportional(info_server[1], 1);
	//
	AnimDraw = TextDrawCreate(444.000000, 428.586578, "~w~PLEASE ~g~~k~~PED_SPRINT~ ~w~TO STOP ANIMATION");
	TextDrawLetterSize(AnimDraw, 0.261599, 1.047466);
	TextDrawAlignment(AnimDraw, 1);
	TextDrawColor(AnimDraw, -1);
	TextDrawSetShadow(AnimDraw, 0);
	TextDrawSetOutline(AnimDraw, 1);
	TextDrawBackgroundColor(AnimDraw, 51);
	TextDrawFont(AnimDraw, 3);
	TextDrawSetProportional(AnimDraw, 1);
	//
	AutoSalon_Button[0] = TextDrawCreate(266.000000, 399.840026, "LD_SPAC:white");
	TextDrawLetterSize(AutoSalon_Button[0], 0.000000, 0.000000);
	TextDrawTextSize(AutoSalon_Button[0], 98.000000, 33.599979);
	TextDrawAlignment(AutoSalon_Button[0], 1);
	TextDrawColor(AutoSalon_Button[0], 0x0797b7FF);
	TextDrawSetShadow(AutoSalon_Button[0], 0);
	TextDrawSetOutline(AutoSalon_Button[0], 0);
	TextDrawFont(AutoSalon_Button[0], 4);
	TextDrawSetSelectable(AutoSalon_Button[0], true);

	AutoSalon_Button[1] = TextDrawCreate(223.000000, 399.720031, "LD_SPAC:white");
	TextDrawLetterSize(AutoSalon_Button[1], 0.000000, 0.000000);
	TextDrawTextSize(AutoSalon_Button[1], 41.000000, 33.599983);
	TextDrawAlignment(AutoSalon_Button[1], 1);
	TextDrawColor(AutoSalon_Button[1], 0x0797b7FF);
	TextDrawSetShadow(AutoSalon_Button[1], 0);
	TextDrawSetOutline(AutoSalon_Button[1], 0);
	TextDrawFont(AutoSalon_Button[1], 4);
	TextDrawSetSelectable(AutoSalon_Button[1], true);

	AutoSalon_Button[2] = TextDrawCreate(366.000000, 399.600036, "LD_SPAC:white");
	TextDrawLetterSize(AutoSalon_Button[2], 0.000000, 0.000000);
	TextDrawTextSize(AutoSalon_Button[2], 41.000000, 33.599983);
	TextDrawAlignment(AutoSalon_Button[2], 1);
	TextDrawColor(AutoSalon_Button[2], 0x0797b7FF);
	TextDrawSetShadow(AutoSalon_Button[2], 0);
	TextDrawSetOutline(AutoSalon_Button[2], 0);
	TextDrawFont(AutoSalon_Button[2], 4);
	TextDrawSetSelectable(AutoSalon_Button[2], true);

	AutoSalon_Fon[0] = TextDrawCreate(376.500000, 403.760162, ">");
	TextDrawLetterSize(AutoSalon_Fon[0], 0.792499, 2.495996);
	TextDrawAlignment(AutoSalon_Fon[0], 1);
	TextDrawColor(AutoSalon_Fon[0], -1);
	TextDrawSetShadow(AutoSalon_Fon[0], 0);
	TextDrawSetOutline(AutoSalon_Fon[0], 0);
	TextDrawBackgroundColor(AutoSalon_Fon[0], 51);
	TextDrawFont(AutoSalon_Fon[0], 2);
	TextDrawSetProportional(AutoSalon_Fon[0], 1);

	AutoSalon_Fon[1] = TextDrawCreate(231.700012, 403.304168, "<");
	TextDrawLetterSize(AutoSalon_Fon[1], 0.792499, 2.495996);
	TextDrawAlignment(AutoSalon_Fon[1], 1);
	TextDrawColor(AutoSalon_Fon[1], -1);
	TextDrawSetShadow(AutoSalon_Fon[1], 0);
	TextDrawSetOutline(AutoSalon_Fon[1], 0);
	TextDrawBackgroundColor(AutoSalon_Fon[1], 51);
	TextDrawFont(AutoSalon_Fon[1], 2);
	TextDrawSetProportional(AutoSalon_Fon[1], 1);

	AutoSalon_Fon[2] = TextDrawCreate(296.700012, 404.864227, "BUY");
	TextDrawLetterSize(AutoSalon_Fon[2], 0.526998, 2.143198);
	TextDrawAlignment(AutoSalon_Fon[2], 1);
	TextDrawColor(AutoSalon_Fon[2], -1);
	TextDrawSetShadow(AutoSalon_Fon[2], 0);
	TextDrawSetOutline(AutoSalon_Fon[2], 0);
	TextDrawBackgroundColor(AutoSalon_Fon[2], 51);
	TextDrawFont(AutoSalon_Fon[2], 2);
	TextDrawSetProportional(AutoSalon_Fon[2], 1);

	AutoSalon_Fon[3] = TextDrawCreate(153.500000, 87.180000, "usebox");
	TextDrawLetterSize(AutoSalon_Fon[3], 0.000000, 25.623331);
	TextDrawTextSize(AutoSalon_Fon[3], 7.000000, 0.000000);
	TextDrawAlignment(AutoSalon_Fon[3], 1);
	TextDrawColor(AutoSalon_Fon[3], 0);
	TextDrawUseBox(AutoSalon_Fon[3], true);
	TextDrawBoxColor(AutoSalon_Fon[3], 0x0797b7FF);
	TextDrawSetShadow(AutoSalon_Fon[3], 0);
	TextDrawSetOutline(AutoSalon_Fon[3], 0);
	TextDrawFont(AutoSalon_Fon[3], 0);

	AutoSalon_Color[0] = TextDrawCreate(12.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[1] = TextDrawCreate(35.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[2] = TextDrawCreate(58.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[3] = TextDrawCreate(81.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[4] = TextDrawCreate(104.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[5] = TextDrawCreate(127.000000, 89.320007, "LD_SPAC:white");
	AutoSalon_Color[6] = TextDrawCreate(12.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[7] = TextDrawCreate(35.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[8] = TextDrawCreate(58.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[9] = TextDrawCreate(81.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[10] = TextDrawCreate(104.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[11] = TextDrawCreate(127.000000, 118.000007, "LD_SPAC:white");
	AutoSalon_Color[12] = TextDrawCreate(12.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[13] = TextDrawCreate(35.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[14] = TextDrawCreate(58.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[15] = TextDrawCreate(81.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[16] = TextDrawCreate(104.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[17] = TextDrawCreate(127.000000, 146.399963, "LD_SPAC:white");
	AutoSalon_Color[18] = TextDrawCreate(12.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[19] = TextDrawCreate(35.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[20] = TextDrawCreate(58.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[21] = TextDrawCreate(81.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[22] = TextDrawCreate(104.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[23] = TextDrawCreate(127.000000, 174.799942, "LD_SPAC:white");
	AutoSalon_Color[24] = TextDrawCreate(12.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[25] = TextDrawCreate(35.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[26] = TextDrawCreate(58.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[27] = TextDrawCreate(81.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[28] = TextDrawCreate(104.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[29] = TextDrawCreate(127.000000, 203.759994, "LD_SPAC:white");
	AutoSalon_Color[30] = TextDrawCreate(12.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[31] = TextDrawCreate(35.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[32] = TextDrawCreate(58.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[33] = TextDrawCreate(81.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[34] = TextDrawCreate(104.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[35] = TextDrawCreate(127.000000, 232.160003, "LD_SPAC:white");
	AutoSalon_Color[36] = TextDrawCreate(12.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[37] = TextDrawCreate(35.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[38] = TextDrawCreate(58.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[39] = TextDrawCreate(81.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[40] = TextDrawCreate(104.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[41] = TextDrawCreate(127.000000, 260.559997, "LD_SPAC:white");
	AutoSalon_Color[42] = TextDrawCreate(12.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[43] = TextDrawCreate(35.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[44] = TextDrawCreate(58.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[45] = TextDrawCreate(81.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[46] = TextDrawCreate(104.000000, 289.519958, "LD_SPAC:white");
	AutoSalon_Color[47] = TextDrawCreate(127.000000, 289.519958, "LD_SPAC:white");

	for(new i = 0; i < 48; i++)
	{
		TextDrawLetterSize(AutoSalon_Color[i], 0.000000, 0.000000);
		TextDrawTextSize(AutoSalon_Color[i], 21.500000, 26.879997);
		TextDrawAlignment(AutoSalon_Color[i], 1);
		TextDrawColor(AutoSalon_Color[i], color_veh[i][ciTD]);
		TextDrawSetShadow(AutoSalon_Color[i], 0);
		TextDrawSetOutline(AutoSalon_Color[i], 0);
		TextDrawFont(AutoSalon_Color[i], 4);
		TextDrawSetSelectable(AutoSalon_Color[i], true);
	}

	AutoSalon_ButtonColor[0] = TextDrawCreate(9.000000, 321.999938, "LD_SPAC:white");
	TextDrawLetterSize(AutoSalon_ButtonColor[0], 0.000000, 0.000000);
	TextDrawTextSize(AutoSalon_ButtonColor[0], 69.500000, 25.200023);
	TextDrawAlignment(AutoSalon_ButtonColor[0], 1);
	TextDrawColor(AutoSalon_ButtonColor[0], 0x0797b7FF);
	TextDrawSetShadow(AutoSalon_ButtonColor[0], 0);
	TextDrawSetOutline(AutoSalon_ButtonColor[0], 0);
	TextDrawFont(AutoSalon_ButtonColor[0], 4);
	TextDrawSetSelectable(AutoSalon_ButtonColor[0], true);

	AutoSalon_ButtonColor[1] = TextDrawCreate(82.000000, 321.879943, "LD_SPAC:white");
	TextDrawLetterSize(AutoSalon_ButtonColor[1], 0.000000, 0.000000);
	TextDrawTextSize(AutoSalon_ButtonColor[1], 69.500000, 25.200023);
	TextDrawAlignment(AutoSalon_ButtonColor[1], 1);
	TextDrawColor(AutoSalon_ButtonColor[1], 0x0797b7FF);
	TextDrawSetShadow(AutoSalon_ButtonColor[1], 0);
	TextDrawSetOutline(AutoSalon_ButtonColor[1], 0);
	TextDrawFont(AutoSalon_ButtonColor[1], 4);
	TextDrawSetSelectable(AutoSalon_ButtonColor[1], true);

	AutoSalon_Fon[4] = TextDrawCreate(23.500000, 327.040008, " BEЏ");
	TextDrawLetterSize(AutoSalon_Fon[4], 0.190498, 1.420799);
	TextDrawAlignment(AutoSalon_Fon[4], 1);
	TextDrawColor(AutoSalon_Fon[4], -1);
	TextDrawSetShadow(AutoSalon_Fon[4], 0);
	TextDrawSetOutline(AutoSalon_Fon[4], 0);
	TextDrawBackgroundColor(AutoSalon_Fon[4], 51);
	TextDrawFont(AutoSalon_Fon[4], 2);
	TextDrawSetProportional(AutoSalon_Fon[4], 1);

	AutoSalon_Fon[5] = TextDrawCreate(93.500000, 326.920013, "љOЊ  BEЏ");
	TextDrawLetterSize(AutoSalon_Fon[5], 0.190498, 1.420799);
	TextDrawAlignment(AutoSalon_Fon[5], 1);
	TextDrawColor(AutoSalon_Fon[5], -1);
	TextDrawSetShadow(AutoSalon_Fon[5], 0);
	TextDrawSetOutline(AutoSalon_Fon[5], 0);
	TextDrawBackgroundColor(AutoSalon_Fon[5], 51);
	TextDrawFont(AutoSalon_Fon[5], 2);
	TextDrawSetProportional(AutoSalon_Fon[5], 1);
	//
	TD_Clothes[4] = TextDrawCreate(183.177154, 396.499816, "box");
	TextDrawLetterSize(TD_Clothes[4], 0.000000, 1.519767);
	TextDrawTextSize(TD_Clothes[4], 197.000000, 0.000000);
	TextDrawAlignment(TD_Clothes[4], 1);
	TextDrawColor(TD_Clothes[4], -1);
	TextDrawUseBox(TD_Clothes[4], 1);
	TextDrawBoxColor(TD_Clothes[4], 505290330);
	TextDrawSetShadow(TD_Clothes[4], 0);
	TextDrawSetOutline(TD_Clothes[4], 0);
	TextDrawBackgroundColor(TD_Clothes[4], 255);
	TextDrawFont(TD_Clothes[4], 1);
	TextDrawSetProportional(TD_Clothes[4], 1);
	TextDrawSetShadow(TD_Clothes[4], 0);

	TD_Clothes[5] = TextDrawCreate(444.143585, 396.499816, "box");
	TextDrawLetterSize(TD_Clothes[5], 0.000000, 1.519767);
	TextDrawTextSize(TD_Clothes[5], 459.000000, 0.000000);
	TextDrawAlignment(TD_Clothes[5], 1);
	TextDrawColor(TD_Clothes[5], -1);
	TextDrawUseBox(TD_Clothes[5], 1);
	TextDrawBoxColor(TD_Clothes[5], 505290330);
	TextDrawSetShadow(TD_Clothes[5], 0);
	TextDrawSetOutline(TD_Clothes[5], 0);
	TextDrawBackgroundColor(TD_Clothes[5], 255);
	TextDrawFont(TD_Clothes[5], 1);
	TextDrawSetProportional(TD_Clothes[5], 1);
	TextDrawSetShadow(TD_Clothes[5], 0);

	TD_Clothes[6] = TextDrawCreate(209.414413, 396.499816, "box");
	TextDrawLetterSize(TD_Clothes[6], 0.000000, 1.519767);
	TextDrawTextSize(TD_Clothes[6], 278.000000, 0.000000);
	TextDrawAlignment(TD_Clothes[6], 1);
	TextDrawColor(TD_Clothes[6], -1);
	TextDrawUseBox(TD_Clothes[6], 1);
	TextDrawBoxColor(TD_Clothes[6], 505290330);
	TextDrawSetShadow(TD_Clothes[6], 0);
	TextDrawSetOutline(TD_Clothes[6], 0);
	TextDrawBackgroundColor(TD_Clothes[6], 255);
	TextDrawFont(TD_Clothes[6], 1);
	TextDrawSetProportional(TD_Clothes[6], 1);
	TextDrawSetShadow(TD_Clothes[6], 0);

	TD_Clothes[7] = TextDrawCreate(363.089477, 396.499816, "box");
	TextDrawLetterSize(TD_Clothes[7], 0.000000, 1.519767);
	TextDrawTextSize(TD_Clothes[7], 431.000000, 0.000000);
	TextDrawAlignment(TD_Clothes[7], 1);
	TextDrawColor(TD_Clothes[7], -1);
	TextDrawUseBox(TD_Clothes[7], 1);
	TextDrawBoxColor(TD_Clothes[7], 505290330);
	TextDrawSetShadow(TD_Clothes[7], 0);
	TextDrawSetOutline(TD_Clothes[7], 0);
	TextDrawBackgroundColor(TD_Clothes[7], 255);
	TextDrawFont(TD_Clothes[7], 1);
	TextDrawSetProportional(TD_Clothes[7], 1);
	TextDrawSetShadow(TD_Clothes[7], 0);

	TD_Clothes[8] = TextDrawCreate(290.468566, 395.916381, "box");
	TextDrawLetterSize(TD_Clothes[8], 0.000000, 1.566619);
	TextDrawTextSize(TD_Clothes[8], 349.000000, 0.000000);
	TextDrawAlignment(TD_Clothes[8], 1);
	TextDrawColor(TD_Clothes[8], -1);
	TextDrawUseBox(TD_Clothes[8], 1);
	TextDrawBoxColor(TD_Clothes[8], 505290330);
	TextDrawSetShadow(TD_Clothes[8], 0);
	TextDrawSetOutline(TD_Clothes[8], 0);
	TextDrawBackgroundColor(TD_Clothes[8], 255);
	TextDrawFont(TD_Clothes[8], 1);
	TextDrawSetProportional(TD_Clothes[8], 1);
	TextDrawSetShadow(TD_Clothes[8], 0);

	TD_Clothes[0] = TextDrawCreate(245.021820, 397.083343, "ВЫБРАТЬ");
	TextDrawLetterSize(TD_Clothes[0], 0.239763, 1.249998);
	TextDrawTextSize(TD_Clothes[0], 18.000000, 15.000000);
	TextDrawAlignment(TD_Clothes[0], 2);
	TextDrawColor(TD_Clothes[0], -1);
	TextDrawSetShadow(TD_Clothes[0], 0);
	TextDrawSetOutline(TD_Clothes[0], 0);
	TextDrawBackgroundColor(TD_Clothes[0], 255);
	TextDrawFont(TD_Clothes[0], 2);
	TextDrawSetProportional(TD_Clothes[0], 1);
	TextDrawSetShadow(TD_Clothes[0], 0);
	TextDrawSetSelectable(TD_Clothes[0], true);

	TD_Clothes[1] = TextDrawCreate(398.697052, 397.083374, "ОТМЕНИТЬ");
	TextDrawLetterSize(TD_Clothes[1], 0.239763, 1.249998);
	TextDrawTextSize(TD_Clothes[1], 18.000000, 15.000000);
	TextDrawAlignment(TD_Clothes[1], 2);
	TextDrawColor(TD_Clothes[1], -1);
	TextDrawSetShadow(TD_Clothes[1], 0);
	TextDrawSetOutline(TD_Clothes[1], 0);
	TextDrawBackgroundColor(TD_Clothes[1], 255);
	TextDrawFont(TD_Clothes[1], 2);
	TextDrawSetProportional(TD_Clothes[1], 1);
	TextDrawSetShadow(TD_Clothes[1], 0);
	TextDrawSetSelectable(TD_Clothes[1], true);

	TD_Clothes[2] = TextDrawCreate(190.673339, 397.666809, "<");
	TextDrawLetterSize(TD_Clothes[2], 0.239763, 1.249998);
	TextDrawTextSize(TD_Clothes[2], 10.000000, 15.000000);
	TextDrawAlignment(TD_Clothes[2], 2);
	TextDrawColor(TD_Clothes[2], -1);
	TextDrawSetShadow(TD_Clothes[2], 0);
	TextDrawSetOutline(TD_Clothes[2], 0);
	TextDrawBackgroundColor(TD_Clothes[2], 255);
	TextDrawFont(TD_Clothes[2], 2);
	TextDrawSetProportional(TD_Clothes[2], 1);
	TextDrawSetShadow(TD_Clothes[2], 0);
	TextDrawSetSelectable(TD_Clothes[2], true);

	TD_Clothes[3] = TextDrawCreate(453.045471, 397.666870, ">");
	TextDrawLetterSize(TD_Clothes[3], 0.239763, 1.249998);
	TextDrawTextSize(TD_Clothes[3], 10.000000, 15.000000);
	TextDrawAlignment(TD_Clothes[3], 2);
	TextDrawColor(TD_Clothes[3], -1);
	TextDrawSetShadow(TD_Clothes[3], 0);
	TextDrawSetOutline(TD_Clothes[3], 0);
	TextDrawBackgroundColor(TD_Clothes[3], 255);
	TextDrawFont(TD_Clothes[3], 2);
	TextDrawSetProportional(TD_Clothes[3], 1);
	TextDrawSetShadow(TD_Clothes[3], 0);
	TextDrawSetSelectable(TD_Clothes[3], true);

	TDEditor_INTERACTION_GLOBAL[0] = TextDrawCreate(268.916229, 145.349792, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[0], 0.000000, 22.696556);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[0], 385.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[0], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[0], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[0], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[0], 538845183);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[0], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[0], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[0], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[0], 1);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[0], true);

	TDEditor_INTERACTION_GLOBAL[1] = TextDrawCreate(268.916107, 145.749740, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[1], 0.000000, 1.004394);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[1], 385.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[1], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[1], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[1], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[1], 8125951);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[1], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[1], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[1], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[1], 1);

	TDEditor_INTERACTION_GLOBAL[2] = TextDrawCreate(268.553100, 152.598632, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[2], 0.000000, 0.348463);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[2], 385.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[2], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[2], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[2], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[2], 90439679);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[2], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[2], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[2], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[2], 1);

	TDEditor_INTERACTION_GLOBAL[3] = TextDrawCreate(165.441543, 146.283172, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[3], 0.000000, 19.493110);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[3], 257.959075, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[3], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[3], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[3], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[3], 538845183);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[3], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[3], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[3], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[3], 1);

	TDEditor_INTERACTION_GLOBAL[4] = TextDrawCreate(398.428009, 147.116775, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[4], 0.000000, 19.305702);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[4], 490.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[4], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[4], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[4], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[4], 538845183);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[4], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[4], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[4], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[4], 1);

	TDEditor_INTERACTION_GLOBAL[5] = TextDrawCreate(165.699005, 145.083267, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[5], 0.000000, 0.863837);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[5], 258.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[5], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[5], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[5], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[5], -654309633);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[5], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[5], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[5], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[5], 1);

	TDEditor_INTERACTION_GLOBAL[6] = TextDrawCreate(398.311401, 146.749954, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[6], 0.000000, 0.957542);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[6], 490.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[6], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[6], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[6], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[6], -28507905);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[6], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[6], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[6], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[6], 1);

	TDEditor_INTERACTION_GLOBAL[7] = TextDrawCreate(165.341445, 150.616973, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[7], 0.000000, 0.306758);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[7], 257.950927, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[7], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[7], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[7], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[7], -1593573121);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[7], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[7], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[7], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[7], 1);

	TDEditor_INTERACTION_GLOBAL[8] = TextDrawCreate(398.664855, 152.950332, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[8], 0.000000, 0.306758);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[8], 490.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[8], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[8], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[8], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[8], -733937409);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[8], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[8], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[8], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[8], 1);

	TDEditor_INTERACTION_GLOBAL[9] = TextDrawCreate(286.645080, 145.348449, "ВЫБЕРИТЕ ДЕЙСТВИЕ");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[9], 0.189162, 1.028331);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[9], 546.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[9], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[9], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[9], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[9], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[9], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[9], 1);

	TDEditor_INTERACTION_GLOBAL[10] = TextDrawCreate(269.685241, 176.616180, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[10], 114.170036, 12.370008);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[10], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[10], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[10], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[10], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[10], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[10], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[10], true);

	TDEditor_INTERACTION_GLOBAL[11] = TextDrawCreate(269.216705, 191.200363, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[11], 114.819961, 11.330007);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[11], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[11], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[11], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[11], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[11], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[11], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[11], true);

	TDEditor_INTERACTION_GLOBAL[12] = TextDrawCreate(269.185211, 205.017913, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[12], 114.660140, 12.680015);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[12], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[12], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[12], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[12], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[12], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[12], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[12], true);

	TDEditor_INTERACTION_GLOBAL[13] = TextDrawCreate(269.385223, 220.335556, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[13], 114.420089, 12.520011);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[13], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[13], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[13], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[13], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[13], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[13], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[13], true);

	TDEditor_INTERACTION_GLOBAL[14] = TextDrawCreate(269.216705, 235.219757, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[14], 114.610130, 12.800015);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[14], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[14], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[14], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[14], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[14], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[14], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[14], true);

	TDEditor_INTERACTION_GLOBAL[15] = TextDrawCreate(269.379699, 250.820709, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[15], 114.430091, 13.350008);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[15], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[15], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[15], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[15], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[15], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[15], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[15], true);

	TDEditor_INTERACTION_GLOBAL[16] = TextDrawCreate(269.511230, 266.704956, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[16], 114.290061, 13.350008);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[16], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[16], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[16], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[16], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[16], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[16], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[16], true);

	TDEditor_INTERACTION_GLOBAL[17] = TextDrawCreate(269.579711, 283.489288, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[17], 114.290061, 13.350008);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[17], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[17], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[17], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[17], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[17], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[17], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[17], true);

	TDEditor_INTERACTION_GLOBAL[18] = TextDrawCreate(269.548217, 298.922607, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[18], 114.340072, 15.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[18], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[18], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[18], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[18], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[18], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[18], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[18], true);

	TDEditor_INTERACTION_GLOBAL[19] = TextDrawCreate(288.125885, 177.649307, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[19], 0.000000, 14.591506);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[19], 286.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[19], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[19], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[19], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[19], 505356799);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[19], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[19], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[19], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[19], 1);

	TDEditor_INTERACTION_GLOBAL[20] = TextDrawCreate(272.827911, 177.849380, "hud:radar_girlfriend");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[20], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[20], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[20], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[20], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[20], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[20], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[20], 0);

	TDEditor_INTERACTION_GLOBAL[21] = TextDrawCreate(272.327880, 192.350265, "hud:radar_gangG");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[21], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[21], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[21], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[21], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[21], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[21], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[21], 0);

	TDEditor_INTERACTION_GLOBAL[22] = TextDrawCreate(272.290893, 207.017761, "hud:radar_gangY");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[22], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[22], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[22], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[22], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[22], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[22], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[22], 0);

	TDEditor_INTERACTION_GLOBAL[23] = TextDrawCreate(272.727905, 221.152023, "hud:radar_impound");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[23], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[23], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[23], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[23], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[23], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[23], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[23], 0);

	TDEditor_INTERACTION_GLOBAL[24] = TextDrawCreate(272.827911, 237.169708, "hud:radar_propertyG");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[24], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[24], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[24], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[24], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[24], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[24], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[24], 0);

	TDEditor_INTERACTION_GLOBAL[25] = TextDrawCreate(272.811462, 252.487335, "hud:radar_diner");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[25], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[25], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[25], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[25], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[25], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[25], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[25], 0);

	TDEditor_INTERACTION_GLOBAL[26] = TextDrawCreate(272.359375, 268.854919, "hud:radar_truck");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[26], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[26], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[26], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[26], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[26], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[26], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[26], 0);

	TDEditor_INTERACTION_GLOBAL[27] = TextDrawCreate(272.827911, 285.772644, "hud:radar_tshirt");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[27], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[27], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[27], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[27], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[27], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[27], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[27], 0);

	TDEditor_INTERACTION_GLOBAL[28] = TextDrawCreate(272.827911, 302.156951, "hud:radar_propertyR");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[28], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[28], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[28], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[28], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[28], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[28], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[28], 0);

	TDEditor_INTERACTION_GLOBAL[29] = TextDrawCreate(291.599853, 178.082824, "поцеловать");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[29], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[29], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[29], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[29], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[29], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[29], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[29], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[29], 1);

	TDEditor_INTERACTION_GLOBAL[30] = TextDrawCreate(291.131317, 192.583709, "пожать_руку");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[30], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[30], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[30], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[30], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[30], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[30], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[30], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[30], 1);

	TDEditor_INTERACTION_GLOBAL[31] = TextDrawCreate(291.599853, 206.784576, "обнять");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[31], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[31], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[31], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[31], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[31], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[31], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[31], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[31], 1);

	TDEditor_INTERACTION_GLOBAL[32] = TextDrawCreate(291.599853, 222.285522, "продать_транспорт");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[32], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[32], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[32], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[32], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[32], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[32], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[32], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[32], 1);

	TDEditor_INTERACTION_GLOBAL[33] = TextDrawCreate(291.599853, 237.586456, "продать_дом");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[33], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[33], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[33], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[33], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[33], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[33], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[33], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[33], 1);

	TDEditor_INTERACTION_GLOBAL[34] = TextDrawCreate(291.599853, 252.687377, "продать_бизнес");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[34], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[34], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[34], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[34], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[34], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[34], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[34], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[34], 1);

	TDEditor_INTERACTION_GLOBAL[35] = TextDrawCreate(291.599853, 269.088378, "показать_лицензии");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[35], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[35], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[35], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[35], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[35], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[35], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[35], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[35], 1);

	TDEditor_INTERACTION_GLOBAL[36] = TextDrawCreate(291.599853, 285.789398, "показать_паспорт");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[36], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[36], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[36], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[36], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[36], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[36], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[36], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[36], 1);

	TDEditor_INTERACTION_GLOBAL[37] = TextDrawCreate(291.599853, 301.990386, "обменяться_домами");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[37], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[37], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[37], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[37], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[37], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[37], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[37], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[37], 1);

	TDEditor_INTERACTION_GLOBAL[38] = TextDrawCreate(179.664764, 202.733535, "hud:radar_gangP");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[38], 58.000000, 55.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[38], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[38], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[38], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[38], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[38], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[38], 0);

	TDEditor_INTERACTION_GLOBAL[39] = TextDrawCreate(413.595581, 202.733520, "hud:radar_gangY");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[39], 58.000000, 55.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[39], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[39], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[39], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[39], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[39], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[39], 0);

	TDEditor_INTERACTION_GLOBAL[40] = TextDrawCreate(173.338180, 276.916656, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[40], 0.000000, 1.098098);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[40], 250.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[40], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[40], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[40], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[40], 255);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[40], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[40], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[40], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[40], 1);

	TDEditor_INTERACTION_GLOBAL[41] = TextDrawCreate(173.838211, 277.816711, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[41], 0.000000, 0.878094);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[41], 249.170761, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[41], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[41], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[41], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[41], 1043214079);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[41], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[41], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[41], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[41], 1);

	TDEditor_INTERACTION_GLOBAL[42] = TextDrawCreate(173.338180, 296.217834, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[42], 0.000000, 1.098098);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[42], 250.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[42], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[42], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[42], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[42], 255);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[42], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[42], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[42], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[42], 1);

	TDEditor_INTERACTION_GLOBAL[43] = TextDrawCreate(173.838211, 297.017883, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[43], 0.000000, 0.878094);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[43], 249.170761, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[43], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[43], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[43], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[43], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[43], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[43], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[43], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[43], 1);

	TDEditor_INTERACTION_GLOBAL[44] = TextDrawCreate(406.052368, 276.916656, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[44], 0.000000, 1.098098);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[44], 482.714202, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[44], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[44], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[44], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[44], 255);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[44], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[44], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[44], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[44], 1);

	TDEditor_INTERACTION_GLOBAL[45] = TextDrawCreate(406.852416, 277.916717, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[45], 0.000000, 0.868094);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[45], 481.982757, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[45], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[45], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[45], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[45], 1076768511);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[45], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[45], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[45], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[45], 1);

	TDEditor_INTERACTION_GLOBAL[46] = TextDrawCreate(406.052368, 296.317840, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[46], 0.000000, 1.098098);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[46], 482.714202, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[46], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[46], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[46], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[46], 255);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[46], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[46], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[46], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[46], 1);

	TDEditor_INTERACTION_GLOBAL[47] = TextDrawCreate(406.752410, 296.917877, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[47], 0.000000, 0.895094);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[47], 481.982849, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[47], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[47], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[47], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[47], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[47], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[47], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[47], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[47], 1);

	TDEditor_INTERACTION_GLOBAL[48] = TextDrawCreate(269.579711, 316.791320, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[48], 114.290061, 13.350008);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[48], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[48], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[48], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[48], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[48], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[48], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[48], true);

	TDEditor_INTERACTION_GLOBAL[49] = TextDrawCreate(269.579711, 333.192321, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[49], 114.489891, 15.270006);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[49], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[49], 1076768511);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[49], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[49], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[49], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[49], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[49], true);

	TDEditor_INTERACTION_GLOBAL[50] = TextDrawCreate(288.125885, 217.551742, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[50], 0.000000, 14.591506);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[50], 286.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[50], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[50], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[50], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[50], 505356799);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[50], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[50], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[50], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[50], 1);

	TDEditor_INTERACTION_GLOBAL[51] = TextDrawCreate(273.027923, 319.057983, "hud:radar_school");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[51], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[51], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[51], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[51], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[51], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[51], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[51], 0);

	TDEditor_INTERACTION_GLOBAL[52] = TextDrawCreate(291.599853, 319.191436, "обменяться_бизнесами");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[52], 0.134816, 0.853332);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[52], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[52], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[52], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[52], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[52], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[52], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[52], 1);

	TDEditor_INTERACTION_GLOBAL[53] = TextDrawCreate(291.599853, 337.092529, "закрыть_панель");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[53], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[53], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[53], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[53], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[53], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[53], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[53], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[53], 1);

	TDEditor_INTERACTION_GLOBAL[54] = TextDrawCreate(274.398803, 335.692443, "x");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[54], 0.250540, 0.999165);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[54], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[54], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[54], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[54], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[54], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[54], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[54], 1);

	TDEditor_INTERACTION_GLOBAL[55] = TextDrawCreate(269.648162, 161.089096, "LD_SPAC:white");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[55], 114.340072, 12.609945);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[55], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[55], 757935615);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[55], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[55], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[55], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[55], 0);
	TextDrawSetSelectable(TDEditor_INTERACTION_GLOBAL[55], true);

	TDEditor_INTERACTION_GLOBAL[56] = TextDrawCreate(272.759399, 162.724685, "hud:radar_cash");
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[56], 10.000000, 9.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[56], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[56], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[56], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[56], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[56], 4);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[56], 0);

	TDEditor_INTERACTION_GLOBAL[57] = TextDrawCreate(288.125823, 163.885070, "box");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[57], 0.000000, 14.450949);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[57], 286.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[57], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[57], -1);
	TextDrawUseBox(TDEditor_INTERACTION_GLOBAL[57], 1);
	TextDrawBoxColor(TDEditor_INTERACTION_GLOBAL[57], 505356799);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[57], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[57], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[57], 1);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[57], 1);

	TDEditor_INTERACTION_GLOBAL[58] = TextDrawCreate(291.599945, 163.258377, "передать_деньги");
	TextDrawLetterSize(TDEditor_INTERACTION_GLOBAL[58], 0.148872, 0.829999);
	TextDrawTextSize(TDEditor_INTERACTION_GLOBAL[58], 731.000000, 0.000000);
	TextDrawAlignment(TDEditor_INTERACTION_GLOBAL[58], 1);
	TextDrawColor(TDEditor_INTERACTION_GLOBAL[58], -1);
	TextDrawSetShadow(TDEditor_INTERACTION_GLOBAL[58], 0);
	TextDrawBackgroundColor(TDEditor_INTERACTION_GLOBAL[58], 255);
	TextDrawFont(TDEditor_INTERACTION_GLOBAL[58], 2);
	TextDrawSetProportional(TDEditor_INTERACTION_GLOBAL[58], 1);
}

stock LoadPickups()
{
    new fmt_msg[64];

	for(new idx; idx < sizeof g_area; idx ++)
	{
		g_area_total[idx] = CreateDynamicSphere(g_area[idx][g_pos_area_x], g_area[idx][g_pos_area_y], g_area[idx][g_pos_area_z], 1.0);
		CreateDynamicPickup(19133, 23, g_area[idx][g_set_area_pickup_x], g_area[idx][g_set_area_pickup_y], g_area[idx][g_set_area_pickup_z], g_area[idx][g_area_pickup_word]);

		if(g_area[idx][g_text] != EOS)
		{
			format(fmt_msg, sizeof fmt_msg, "[ "cBLUE"%s{FFFFFF} ]", g_area[idx][g_text]);
			CreateDynamic3DTextLabel(fmt_msg, COLOR_WHITE, g_area[idx][g_set_area_pickup_x], g_area[idx][g_set_area_pickup_y], g_area[idx][g_set_area_pickup_z]+1.0, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
		}
	}
	
	//Сейф в домах
	HouseSafeCP[0] = CreateDynamicCP(438.6623,1322.2294,1615.5300, 1.0, -1, -1, -1, 50.0);
	CreateDynamicCP(-376.1974,1029.0566,1712.9200, 1.0, -1, -1, -1, 50.0);
	HouseSafeCP[1] = CreateDynamicCP(338.8047,692.1420,2997.6062, 1.0, -1, -1, -1, 50.0);
	
	CreateDynamicPickup(1559, 23, 438.6623,1322.2294,1615.5300, -1);
	CreateDynamicPickup(1559, 23, -376.1974,1029.0566,1712.9200, -1);
	CreateDynamicPickup(1559, 23, 338.8047,692.1420,2997.6062, -1);

	// пикапы для бизнесов
	CreateDynamicPickup(1275, 1,-913.6543,1211.7676,1002.0200, -1);
	CreateDynamicPickup(1274, 1, 449.2993,2508.3315,3018.4202, -1);
	CreateDynamicPickup(1274, 1, -724.6412, 206.7564, 2022.7360, -1);
	CreateDynamicPickup(1274, 1, 377.3217,-67.8903,1001.5151, -1);
	CreateDynamicPickup(1274, 1, 369.6516,-6.3217,1001.8589, -1);
	CreateDynamicPickup(1274, 1, 499.2758,-20.7244,1000.6797, -1);
	CreateDynamicPickup(1274, 1, -2659.1587,1416.9315,906.2734, -1);
	CreateDynamicPickup(1274, 1, 1214.1865,-12.9937,1000.9219, -1);
	CreateDynamicPickup(1274, 1, -1498.5411, -300.3899, 1762.5275, -1);
	CreateDynamicPickup(1274, 1, 541.7650,-851.2516,1002.0000, -1);
	CreateDynamicPickup(1274, 1, -186.4855, 856.6979, 2612.4531, -1);
	CreateDynamicPickup(1274, 1, 1613.3817,997.2397,1819.0200, -1);

	AreaInfo[arServerHelp] = CreateDynamicSphere(-97.3676,300.0037,12.1859,1.0);
	CreateDynamicPickup(1239,1,-97.3676,300.0037,12.1859, -1);

	CreateDynamic3DTextLabel("{EF5C06}Выйти с гаража\n{FFFFFF}ALT\n\n{EF5C06}Выехать с гаража\n{FFFFFF}H",0xBBBBBBFF,-1621.5767,1578.9402,2005.7100,10.0);

	AreaInfo[arAdminsZoneHP] = CreateDynamicSphere(2332.6069,-1143.9352,1054.3047,1.0,55);
	CreateDynamicPickup(1240,1,2332.6069,-1143.9352,1054.3047,55);

	AreaInfo[arHotdogHP] = CreateDynamicSphere(153.1767,439.5061,1002.0000,1.0);
	CreateDynamicPickup(1582,1,153.1767,439.5061,1002.0000, -1);

	AreaInfo[arGettingPassport][0] = CreateDynamicSphere(178.5551,1165.1176,542.4528,1.0,0,0);
	AreaInfo[arGettingPassport][1] = CreateDynamicSphere(359.1528,184.3584,1008.3828,1.0,2,3);
	AreaInfo[arGettingPassport][2] = CreateDynamicSphere(359.1528,184.3584,1008.3828,1.0,3,3);
	AreaInfo[arGettingPassport][3] = CreateDynamicSphere(1576.0363,-773.4832,1114.7100,1.0,0,0);
	AreaInfo[arGettingPassport][4] = CreateDynamicSphere(2463.2488,-2134.2664,634.2466,1.0,5,0);
	CreateDynamicPickup(1239,1,1576.0363,-773.4832,1114.7100,0);//meria2 ofomi pas
	CreateDynamicPickup(1239,1,178.5551,1165.1176,542.4528,0);
	CreateDynamicPickup(1239,1,359.1528,184.3584,1008.3828,2);
	CreateDynamicPickup(1239,1,359.1528,184.3584,1008.3828,3);
	CreateDynamicPickup(1239,1,2463.2488,-2134.2664,634.2466,4);
	CreateDynamic3DTextLabel("Справочная\n{AFAFAF}Встаньте на пикап", COLOR_GREEN,2463.2488,-2134.2664,634.2466,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("МУЗЫКА\n\nНажмите - {f0e86b}H", 0xFFFFFFFF, -201.2533,856.0426,2613.6101, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);

    AreaInfo[arGreenZone][0] = CreateDynamicSphere(2746.8787,-2442.6240,21.6890,100.0,-1,-1); // ЖД Вокзал 1
	AreaInfo[arGreenZone][1] = CreateDynamicSphere(2303.2498,-1930.3442,2022.9600,30.0,-1,-1); // Автошкола (интерьер)
	AreaInfo[arGreenZone][2] = CreateDynamicSphere(2466.0825,-2140.7622,634.2466,50.0,-1,-1); // Болька
	AreaInfo[arGreenZone][3] = CreateDynamicSphere(167.2170,441.0569,1002.0000,40.0,-1,-1); // ЖД Вокзал 2
	AreaInfo[arGreenZone][4] = CreateDynamicSphere(896.7316,2089.0632,2721.8101,60.0,-1,-1); // Полиция
	AreaInfo[arGreenZone][5] = CreateDynamicSphere(5.7693,-29.6105,1085.9291,50.0,-1,-1); // Автосалон
	AreaInfo[arGreenZone][6] = CreateDynamicSphere(-80.3032,461.1355,3013.1499,60.0,-1,-1); // RECORD FM
	AreaInfo[arGreenZone][7] = CreateDynamicSphere(-442.6215,1817.1798,1501.5959,60.0,-1,-1); // Университет
	AreaInfo[arGreenZone][8] = CreateDynamicSphere(838.8856,1314.8070,517.7500,100.0,-1,-1); // Деморган
	AreaInfo[arGreenZone][9] = CreateDynamicSphere(178.5551,1165.1176,542.4528,30.0,-1,-1); // Мэрия
	AreaInfo[arGreenZone][10] = CreateDynamicSphere(2475.4453,-693.3636,28.2961,100.0,-1,-1); // Анашан улица
	AreaInfo[arGreenZone][11] = CreateDynamicSphere(-317.6928,725.8645,12.0010,60.0,-1,-1); // Мэрия улица
	AreaInfo[arGreenZone][12] = CreateDynamicSphere(-286.7289,586.8283,12.1589,60.0,-1,-1); // Больница улица
	AreaInfo[arGreenZone][13] = CreateDynamicSphere(2551.3662,-2426.4395,2999.5625,60.0,-1,-1); // ГУВД
    AreaInfo[arGreenZone][14] = CreateDynamicSphere(2815.9072,-2572.8025,10.5200,60.0,-1,-1); // Спецназ улица
    AreaInfo[arGreenZone][15] = CreateDynamicSphere(206.5966,1473.0104,12.0304,60.0,-1,-1); // ГИБДД Улица
    AreaInfo[arGreenZone][16] = CreateDynamicSphere(2562.3689,-2429.0220,22.0044,60.0,-1,-1); // ГУВД Улица
    AreaInfo[arGreenZone][17] = CreateDynamicSphere(1576.0363,-773.4832,1114.7100,60.0,-1,-1); // Meria2 vhutri
    AreaInfo[arGreenZone][18] = CreateDynamicSphere(2412.6838,-1844.3541,21.8545,60.0,-1,-1); // Meria2

	AreaInfo[arLoadPatr] = CreateDynamicSphere(-1094.0214,2208.5522,37.9235,2.0);
	CreateDynamicPickup(19134,1,-1094.0214,2208.5522,37.9235, -1);//2358

	AreaInfo[arArmyAmmo] = CreateDynamicSphere(783.8571,-131.2940,1014.2467,1.0);
	CreateDynamicPickup(19134,1,783.8571,-131.2940,1014.2467,0);
	
	AreaInfo[arArhTest] = CreateDynamicSphere(131.9515,1368.7344,1002.9600,1.0);
	CreateDynamicPickup(1239,1,131.9515,1368.7344,1002.9600, -1);
	CreateDynamic3DTextLabel("Сдача экзамена\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,131.9515,1368.7344,1002.9600,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);

	CreateDynamicPickup(1275,1,2282.4890,1660.0847,-39.7646, -1);
	CreateDynamic3DTextLabel("Шахта\n{FFFFFF}Нажмите: ALT",0xBBBBBBFF,2282.4890,1660.0847,-39.7646,2.0);

	AreaInfo[arPoliciaA] = CreateDynamicSphere(895.2465,2090.3547,2721.8101,1.0);
	CreateDynamicPickup(1239,1,895.2465,2090.3547,2721.8101, -1);
	AreaInfo[arPoliciaB] = CreateDynamicSphere(2551.3662,-2426.4395,2999.5625,1.0);//99
	CreateDynamicPickup(1239,1,2551.3662,-2426.4395,2999.5625, -1);
	AreaInfo[arPoliciaB1] = CreateDynamicSphere(2548.8335,-2424.6204,2996.5625,1.0);
	CreateDynamicPickup(1239,1,2548.8335,-2424.6204,2996.5625, -1);

	CreateDynamic3DTextLabel("Полёт на воздушном шаре",COLOR_BLUE,487.6667,1754.8655,12.0100+1.0,15.0);

	AreaInfo[arBuyCopter] = CreateDynamicSphere(-42.4148,925.9332,12.3321,1.0);
	CreateDynamicPickup(19134,1,-42.4148,925.9332,12.3321, -1);

	CreateDynamic3DTextLabel("Покупка вертолета	",COLOR_BLUE,-42.4148,925.9332,12.3321+1.0,15.0);
	
	AreaInfo[arRieltor] = CreateDynamicSphere(176.0282,1156.7330,542.4528, 1.0, -1);
	CreateDynamicPickup(1239, 23, 176.0282,1156.7330,542.4528, -1);
	
	AreaInfo[arRobbery] = CreateDynamicSphere(-182.4943,851.5858,2612.6616, 1.0, -1);
	CreateDynamicPickup(1550, 23, -182.4943,851.5858,2612.6616, -1);
	
	AreaInfo[arRobbery1] = CreateDynamicSphere(-1500.8864,-307.8572,1762.7900, 1.0, -1);
	CreateDynamicPickup(1550, 23, -1500.8864,-307.8572,1762.7900, -1);
	
	AreaInfo[arMapRobbery] = CreateDynamicSphere(169.1534, 1173.0890, 542.4528, 1.0, -1);
	CreateDynamicPickup(1277, 23, 169.1534, 1173.0890, 542.4528, -1);
	
	AreaInfo[arBank] = CreateDynamicSphere(749.3806, 488.1982, 1036.7900, 1.0, -1);
	CreateDynamicPickup(1239, 23, 749.3806, 488.1982, 1036.7900, -1);
	
	AreaInfo[arBank1] = CreateDynamicSphere(749.3806, 491.4237, 1036.7900, 1.0, -1);
	CreateDynamicPickup(1239, 23, 749.3806, 491.4237, 1036.7900, -1);
	
	AreaInfo[arClothes] = CreateDynamicSphere(336.1958,691.3486,2997.3462, 1.0, -1);
	CreateDynamicPickup(1275, 23, 336.1958,691.3486,2997.3462, -1);

    AreaInfo[arClothes1] = CreateDynamicSphere(-381.3186,1025.7296,1712.9200, 1.0, -1);
	CreateDynamicPickup(1275, 23, -381.3186,1025.7296,1712.9200, -1);
	
	AreaInfo[arClothes2] = CreateDynamicSphere(434.2919,1330.2930,1615.5300, 1.0, -1);
	CreateDynamicPickup(1275, 23, 434.2919,1330.2930,1615.5300, -1);
	
	AreaInfo[arClothes3] = CreateDynamicSphere(-216.1347,418.9392,1003.5000, 1.0, -1);
	CreateDynamicPickup(1275, 23, -216.1347,418.9392,1003.5000, -1);

	CreateDynamic3DTextLabel("Устройство на работу\n{AFAFAF}Встаньте на маркер",COLOR_GREEN,359.4072,165.7762,1008.3828,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,3);

	CreateDynamic3DTextLabel("{FF6347}ЗАГС\n{FFFFFF}/wedding - пожениться\n/divorce - развестись",0xFFFFFFFF,105.0641,2895.8247,1010.6396,5.0);//Загс
	//CreateDynamic3DTextLabel("{FFFFFF}С Праздником{FF6347} 8 МАРТА\n{FFFFFF}наших девушек сервера",0xFFFFFFFF,-686.0518,943.7344,12.1600,10.0);//праздник

	CreateDynamic3DTextLabel("Посадить преступника\nВведите: '/arrest'", 0xFFFFFFFF, 896.2441,2084.9253,2721.8101+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);
	CreateDynamic3DTextLabel("Посадить преступника\nВведите: '/arrest'", 0xFFFFFFFF, 2550.7563,-2430.6584,2999.5273+0.6,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,-1,-1);

	//cPickup[1] = CreateDynamicPickup(19134, 23, 1120.5834,1562.6920,2316.2300, 1); // Высший кл
	//cPickup[2] = CreateDynamicPickup(19134, 23, 1120.5834,1562.6920,2316.2300, 3); // АС Вело мото
	//Prazdnik = CreateDynamicPickup(19134, 23, -686.0518,943.7344,12.1600, 0); // праздник
	//обзор сервера
 	pichelp = CreateDynamicPickup(2894, 3, -2098.5017,2203.0081,1002.2880);
	Pickup[0] = CreateDynamicPickup(19134, 23, 5.7693,-29.6105,1085.9291, -1); // АС Эконом
	Pickup[1] = CreateDynamicPickup(19134, 23, -235.6227,700.6357,1002.0000, -1);
	Pickup[2] = CreateDynamicPickup(19134, 23, 878.3483, 2093.4907, 2721.8486, 0);
	Pickup[3] = CreateDynamicPickup(19134, 23, 2549.7209,-2421.7185,2999.2275, 0);
	Pickup[4] = CreateDynamicPickup(353,23,2082.4304,-2200.7085,1002.0000,0);
	Pickup[5] = CreateDynamicPickup(353,23,1188.3813,2664.3438,-17.5041,0);
	Pickup[6] = CreateDynamicPickup(2894, 23, 130.6217,1362.7142,1002.9600, 0); // ПДД
	Pickup[7] = CreateDynamicPickup(1275, 23, -234.2828,703.7170,1002.0000, -1); // Раздевалка swat
	Pickup[8] = CreateDynamicPickup(1275, 23, 875.6313,2097.4504,2721.8101, 0); // Раздевалка dps
	Pickup[9] = CreateDynamicPickup(1275, 23, 2550.6946, -2418.9238, 2999.2229, 0); // Раздевалка pps
	Pickup[11] = CreateDynamicPickup(19134, 23, 510.1440,-86.3119,997.9609, -1);
	Pickup[12] = CreateDynamicPickup(19134, 23, 506.5644,-86.3119,997.9609, -1);
	Pickup[13] = CreateDynamicPickup(19134, 23, 489.7846,-81.6869,997.9578, -1);
	Pickup[14] = CreateDynamicPickup(19134, 23, 509.0951,-84.4070,997.9609, -1);
	Pickup[15] = CreateDynamicPickup(19134, 23, 509.0951,-85.4056,997.9609, -1);
	Pickup[16] = CreateDynamicPickup(19134, 23, 511.1303,-84.3520,997.9609, -1);
	Pickup[17] = CreateDynamicPickup(19134, 23, 511.1303,-85.2946,997.9609, -1);
	Pickup[18] = CreateDynamicPickup(19134, 23, 510.1202,-83.3744,997.9609, -1);
	Pickup[19] = CreateDynamicPickup(19134, 23, -942.1187,840.6721,2512.9500, -1);
	Pickup[28] = CreateDynamicPickup(19134, 23, 1562.5013,-762.0260,1114.7100, -1);
	Pickup[21] = CreateDynamicPickup(19134, 23, 278.3518,1666.6427,12.4625, 0);
	Pickup[22] = CreateDynamicPickup(1275, 23, 174.6389,1153.8253,542.4528, -1); // Раздевалка pravo
	Pickup[29] = CreateDynamicPickup(1275, 23, 1564.5417,-793.4450,1114.7100, -1); // Раздевалка pravo2
	Pickup[23] = CreateDynamicPickup(1275, 23, 2469.6638,-2120.4407,634.2466, -1); // Раздевалка medic
	Pickup[24] = CreateDynamicPickup(1275, 23, 140.0285,1381.5061,1002.9600, -1); // Раздевалка ASH
	Pickup[25] = CreateDynamicPickup(1275, 23, -98.5779,455.1613,3013.1499, 0); // Раздевалка SMI
	//Pickup[26] = CreateDynamicPickup(19134, 23, -431.9794,1851.9164,1501.5959, 0); // Универ
	Pickup[27] = CreateDynamicPickup(2044, 23, -329.0747,328.0183,2213.0000, -1);
	bankpalomino[0] = CreateDynamicPickup(1318,23,2303.3384,-16.1465,2600.4844, -1);//необочий +00
	bankpalomino[1] = CreateDynamicPickup(1318,23,1458.5571,-1010.9435,3400.4459,4);//необочий +00
	meriapick[0] = CreateDynamicPickup(1318,23,-317.6901,736.1766,13.7643,0);// на улице
	meriapick[1] = CreateDynamicPickup(1318,23,168.3763,1166.5923,542.4528,-1);// внутри
	meriapick[2] = CreateDynamicPickup(1318,23,2412.7732,-1841.9850,22.9476,0);// 2на улице
	meriapick[3] = CreateDynamicPickup(1318,23,1583.3243,-774.1385,1114.5062,-1);// внутри
	CreateDynamicPickup(1314,23,171.2966,1172.3143,542.4528,-1); // - пикап, на  месте создания семьи (для красоты)
	CreateDynamic3DTextLabel("Создание семьи\nНажмите {FFCC00}L.ALT",0xFFFFFFFF,171.2966,1172.3143,542.4528,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
	fbipic[0] = CreateDynamicPickup(1318,23,2096.0793,-2148.8745,1002.0000,-1);// на улице ФСБ
	fbipic[1] = CreateDynamicPickup(1318,23,-402.6632,927.1679,12.5063,0);// внутри фСБ
	fbipic[2] = CreateDynamicPickup(1242,23,1188.3763,2660.7231,-17.5041,0); // Бронник
	fbipic[3] = CreateDynamicPickup(1275,23,2090.6167,-2201.7522,1002.0000,0); // FBI гардероб
	Pickupfly[0] = CreateDynamicPickup(371, 23, 2142.4043,-1967.7343,20.2422, 0);//FLY
	CreateDynamic3DTextLabel("Прыжок с парашютом 10000р.", 0xD9F6F6FF, 2142.4043,-1967.7343,20.2422, 15.0);

	medpick[0] = CreateDynamicPickup(1241, 23, 2482.5667,-2146.3633,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2482.5667,-2146.3633,634.2537, 15.0);	
	medpick[1] = CreateDynamicPickup(1241, 23, 2479.4973,-2146.2002,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2479.4973,-2146.2002,634.2537, 15.0);
	medpick[2] = CreateDynamicPickup(1241, 23, 2476.5479,-2146.2246,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2476.5479,-2146.2246,634.2537, 15.0);
	medpick[3] = CreateDynamicPickup(1241, 23, 2473.7085,-2146.1279,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2473.7085,-2146.1279,634.2537, 15.0);	
	medpick[4] = CreateDynamicPickup(1241, 23, 2473.6870,-2155.1685,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2473.6870,-2155.1685,634.2537, 15.0);	
	medpick[5] = CreateDynamicPickup(1241, 23, 2476.5068,-2155.1750,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2476.5068,-2155.1750,634.2537, 15.0);	
	medpick[6] = CreateDynamicPickup(1241, 23, 2479.5278,-2155.2771,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2479.5278,-2155.2771,634.2537, 15.0);
	medpick[7] = CreateDynamicPickup(1241, 23, 2482.5349,-2155.2192,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2482.5349,-2155.2192,634.2537, 15.0);	
	medpick[8] = CreateDynamicPickup(1241, 23, 2462.4626,-2155.1707,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2462.4626,-2155.1707,634.2537, 15.0);	
	medpick[9] = CreateDynamicPickup(1241, 23, 2461.4824,-2155.2576,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2461.4824,-2155.2576,634.2537, 15.0);
	medpick[10] = CreateDynamicPickup(1241, 23, 2458.6914,-2155.2358,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2458.6914,-2155.2358,634.2537, 15.0);	
	medpick[11] = CreateDynamicPickup(1241, 23, 2458.7493,-2146.3999,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2458.7493,-2146.3999,634.2537, 15.0);
	medpick[12] = CreateDynamicPickup(1241, 23, 2461.4897,-2146.3352,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2461.4897,-2146.3352,634.2537, 15.0);
	medpick[13] = CreateDynamicPickup(1241, 23, 2462.4885,-2146.1650,634.2537, -1);
	CreateDynamic3DTextLabel("Лечение 600р.", 0xD9F6F6FF, 2462.4885,-2146.1650,634.2537, 15.0);
	
	//Пикапы устройств
	armyammo = CreateDynamicCP(783.8571,-131.2940,1014.2467,1.0,-1,-1); // ammo
	
	robbery_moneys[0] = CreateDynamicCP(744.4578, 480.1804, 1036.7900, 1.0, -1, -1);
	robbery_moneys[1] = CreateDynamicCP(748.6232,480.0585,1036.7900, 1.0, -1, -1);

	gArmyWarehouseText = CreateDynamic3DTextLabel("_", 0xFFFFFFFF, 783.8571,-131.2940,1014.2467,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0,0);

    armyyashik = CreateDynamicPickup(3013, 23, 791.5548,-131.3610,1014.2467, -1); // yashik

	armygun = CreateDynamicPickup(1242, 23, 1612.9740,1983.7871,1281.8171, -1); // gun
	armystol = CreateDynamicPickup(1582, 23, 316.7520,2964.7900,1.9159, 0); // Еда
	armskin = CreateDynamicPickup(1275, 23, 1612.9740,1985.8998,1281.8171, -1); // гардероб
	
	armysklad[0] = CreateDynamicPickup(1318, 23, 792.1251, -124.4529, 1014.2467, -1);
	armysklad[1] = CreateDynamicPickup(1318, 23, 1163.9622, -443.4464, 4.2487, -1);
	
	zavod[0] = CreateDynamicPickup(1318, 23, 318.0378, -204.4543, 1006.5694, -1);
	zavod[1] = CreateDynamicPickup(1318, 23, -1060.9598, 2208.5654, 38.0987, -1);
	
	wahta[0] = CreateDynamicPickup(1318, 23, -2558.7898, 316.3336, -15.7640, -1);
	wahta[1] = CreateDynamicPickup(1318, 23, 2377.1399, 1725.7489, -2.1648, -1);
	
	salon[0] = CreateDynamicPickup(1318, 23, 5.5328, -23.1894, 1080.9968, -1);
	salon[1] = CreateDynamicPickup(1318, 23, 5.9105, -25.5258, 1085.9291, -1);

	GetMedicines[0] = CreateDynamicPickup(1239,23,2458.4663,-2120.6362,634.2466,4);
	GetMedicines[1] = CreateDynamicPickup(1239,23,327.1456,1536.4348,1084.1450,5);
	GetMedicines[2] = CreateDynamicPickup(1239,23,327.1456,1536.4348,1084.1450,6);
	CreateDynamic3DTextLabel("Склад медикаментов\n{AFAFAF}Встаньте на пикап",COLOR_GREEN,2458.4663,-2120.6362,634.2466,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
	//=========================== Спортзалы ====================================
	sportpickup[1] = CreateDynamicPickup(1275, 23, -339.6125, 445.4721, 2513.6201, -1);
	CreateDynamic3DTextLabel("ТРЕНИРОВКА СТИЛЕЙ\nОтрабатывайте удары - {f0e86b}ПКМ + F{FFFFFF} (по умолчанию)\n\n{AFAFAF}Выйти - /exit", 0xFFFFFFFF, -332.8407,425.5874,2513.6201, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
    sportpickup[0] = CreateDynamicPickup(1275, 23, -341.2305, 428.8335, 2513.6201, -1);
    CreateDynamic3DTextLabel("ТРЕНИРОВКА СТИЛЕЙ", 0xFFFFFFFF, -341.2305, 428.8335, 2513.6201+0.5, 40.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
    
    CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите H", 0xD9F6F6FF, -341.0041,438.7238,2513.6538, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите H", 0xD9F6F6FF, -340.2961,434.3454,2513.7161, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите H", 0xD9F6F6FF, -333.4198,433.5190,2514.8804, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите H", 0xD9F6F6FF, -333.2217,437.8282,2514.8804, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите H", 0xD9F6F6FF, -333.1357,443.4457,2514.0784, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите H", 0xD9F6F6FF, -333.3658,447.2063,2513.6538, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	//==========================================================================
	
	//Полиция г.АРй
	policiapick[0] = CreateDynamicPickup(19133, 23, 210.2518,1472.4816,12.6686,0); //+
	policiapick[1] = CreateDynamicPickup(19133, 23, 906.3895, 2088.8567, 2721.7402,0);
	//СПАВН г.Арзамас
	spawn[2] = CreateDynamicPickup(19133, 23, -128.5512,981.7614,12.1494,0); //+
	spawn[3] = CreateDynamicPickup(19133, 23, -119.9935,1012.0076,40.8763,0);
	spawn[0] = CreateDynamicPickup(19133, 23, -2093.6465,2199.7295,1001.8552,0); //+
	spawn[1] = CreateDynamicPickup(19133, 23, 2717.8174,-2423.4609,21.8921,0);
	//Полиция г.ЮЖ
	policiapick[2] = CreateDynamicPickup(19133, 23, 2554.3960,-2418.9900,22.1591,0); //+
	policiapick[3] = CreateDynamicPickup(19133, 23, 2543.9858,-2427.8657,2999.1033,0);
	policiapick[4] = CreateDynamicPickup(19133, 23, 2561.0251,-2435.5872,2999.2024,0); //+
	policiapick[5] = CreateDynamicPickup(19133, 23, 2538.8049,-2420.6880,28.5828,0);
 	policiapick[6] = CreateDynamicPickup(19133, 23, 2538.5078,-2410.1770,22.0741,0); //+
	policiapick[7] = CreateDynamicPickup(19133, 23, 2559.0615,-2448.2522,2999.5625,0);
	//Больница
	bolnicapick[0] = CreateDynamicPickup(19133, 23, -286.8934,577.3545,12.8447,0); //+
	bolnicapick[1] = CreateDynamicPickup(19133, 23, 2457.3279,-2139.2571,634.2537,4);
	//RECORD FM
	smipick[0] = CreateDynamicPickup(19133, 23, -2068.1030,-201.9349,26.0033,0); //+
	smipick[1] = CreateDynamicPickup(19133, 23, -68.6583,461.0241,3013.1499,0);
	// Армия
	kazarmapick[0] = CreateDynamicPickup(19133, 23, 1232.2498,-357.6472,5.4437,0); //+
	kazarmapick[1] = CreateDynamicPickup(19133, 23, 1620.1547,1997.3835,1281.8177,0);
	// Столовая Армия
	stolovkapick[0] = CreateDynamicPickup(19133, 23, 209.5224,-469.7224,1006.3422,0); //+
	stolovkapick[1] = CreateDynamicPickup(19133, 23, 1227.9073,-383.0074,4.0082,0);
	//сперма
	spermap[0] = CreateDynamicPickup(19133, 23, 2021.7706,-1467.7096,14.3608,0); //+
	spermap[1] = CreateDynamicPickup(19133, 23, 2308.1692,-1716.5100,22.5579,0);
	// ОПГ 1
	opg1pick[0] = CreateDynamicPickup(19133, 23, 1937.3898,2160.8118,15.6621,0); //+
	opg1pick[1] = CreateDynamicPickup(19133, 23, 2557.4219,-1854.0977,2522.8401,6);
	opg2pick[0] = CreateDynamicPickup(19133, 23, -2367.6021,198.8481,21.4455,0); //+
	opg2pick[1] = CreateDynamicPickup(19133, 23, -2614.3374,2907.3696,2738.6201,5);
	opg3pick[0] = CreateDynamicPickup(19133, 23, 431.7900,1085.7075,12.0000,0); //+
	opg3pick[1] = CreateDynamicPickup(19133, 23, 2410.0483,-1827.2902,1140.9890,9);
	opg4pick[0] = CreateDynamicPickup(19133, 23, 256.5957,680.0298,12.0000,0); //+
	opg4pick[1] = CreateDynamicPickup(19133, 23, 2557.4219,-1854.0977,2522.8401,14);
 	opg5pick[0] = CreateDynamicPickup(19133, 23, 1742.1511,-2277.3877,11.5994,0); //+
	opg5pick[1] = CreateDynamicPickup(19133, 23, 2557.4219,-1854.0977,2522.8401,10);
	// банк
	bankpick[0] = CreateDynamicPickup(19133,23,-139.2623,596.9268,12.1346, -1);
	bankpick[1] = CreateDynamicPickup(19133,23,742.3605,486.2092,1036.7900, 2);
	
	bankpick[2] = CreateDynamicPickup(19133,23,742.3605,486.2092,1036.7900, 1);
	bankpick[3] = CreateDynamicPickup(19133,23,2376.6719,-2139.2800,22.0776, -1);
	
	bankpick[4] = CreateDynamicPickup(19133,23,742.3605,486.2092,1036.7900, 3);
	bankpick[5] = CreateDynamicPickup(19133,23,1853.5229,2035.0099,16.9742, -1);
	
	CreateDynamic3DTextLabel("КАССА", 0xD9F6F6FF, 749.3806, 488.1982, 1036.7900+1.0, 10.0);
	CreateDynamic3DTextLabel("КАССА", 0xD9F6F6FF, 749.3806, 491.4237, 1036.7900+1.0, 10.0);
	// Военкомат
	voenkomatpick[0] = CreateDynamicPickup(19133,23,1919.2096,2303.8525,15.5697, -1);
	voenkomatpick[1] = CreateDynamicPickup(19133,23,-572.3914,-193.5459,2552.0200, -1);
	// Устройство на работу
	merpicls[0] = CreateDynamicPickup(19134,23,170.1435,1156.9962,542.4528,-1);
	/**************************************************************************/
	//for(new i; i < sizeof(PodarokInfo); i++) PodarokInfo[i][porCreat] = CreateDynamicPickup(19056,1,PodarokInfo[i][porPos][0], PodarokInfo[i][porPos][1], PodarokInfo[i][porPos][2],-1);
	return 1;
}

stock UpdateBizz(idx)
{
	new string[200];
	if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[idx][bName]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],0x18BA28FF,string);
		}
		else
		{
			format(string, sizeof(string), ">> %s <<\n\n{f0e86b}ALT{FFFFFF} - войти в бизнес", BizzInfo[idx][bName]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],0x18BA28FF,string);
		}
	}
	else if(BizzInfo[idx][bType] == 2)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[idx][bName]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],0x18BA28FF,string);
		}
		else
		{
			format(string, sizeof(string), ">> %s <<\n\n{f0e86b}H{FFFFFF} - Меню АЗС\n{FFFFFF}Цена за 1 литр бензина: {f0e86b}%i{FFFFFF} рублей", BizzInfo[idx][bName], BizzInfo[idx][bTill]*WorkSalary[15]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],0x18BA28FF,string);
		}
	}
	else if(BizzInfo[idx][bType] == 7)
	{
		if(!strcmp(BizzInfo[idx][bOwner],"None",true))
		{
			format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[idx][bName]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],0x18BA28FF,string);
		}
		else
		{
			format(string, sizeof(string), ">> %s <<\n\n{f0e86b}H{FFFFFF} - Заехать в СТО",  BizzInfo[idx][bName]);
			UpdateDynamic3DTextLabelText(LABELBIZZ[idx],0x18BA28FF,string);
		}
	}
	return 1;
}

stock UpdateHouse(idx)
{
	DestroyDynamicMapIcon(HouseInfo[idx][hMIcon]);
	DestroyDynamicPickup(HouseInfo[idx][hPickup]);
	if(!strcmp(HouseInfo[idx][hOwner],"None",true))
	{
		HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 31, 0,-1,-1,-1,150.0);
		HouseInfo[idx][hPickup] = CreateDynamicPickup(1273, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 0);
	}
	else
	{
		HouseInfo[idx][hMIcon] = CreateDynamicMapIcon(HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 32, 0,-1,-1,-1,150.0);
		HouseInfo[idx][hPickup] = CreateDynamicPickup(1272, 1, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz], 0);
	}
	return 1;
}

stock BuyCar(playerid)
{
	ShowPlayerDialogEx(playerid,16000,DIALOG_STYLE_LIST, "{ebec86}>> Выберите действие","\
	{ffffff}1. Заменить автомобиль в слоте #1\n\
	{ffffff}2. Заменить автомобиль в слоте #2\n\
	{ffffff}3. Заменить автомобиль в слоте #3\n\
	{ffffff}3. Заменить автомобиль в слоте #4\n\
	{FA516B}5. Выйти из меню покупки автомобиля","Выбрать","Отмена");
	return 1;
}

stock BuyCloseCar(playerid)
{
	new Float:x, Float:y, Float:z, Float:fa;
	switch(InShop[playerid])
	{
		case 1: x = -4.2735, y = -27.2061, z = 1080.9968, fa = 236.2707;
		case 2: x = -4.2735, y = -27.2061, z = 1080.9968, fa = 236.2707;
		case 3: x = -4.2735, y = -27.2061, z = 1080.9968, fa = 236.2707;
		case 4: x = -4.2735, y = -27.2061, z = 1080.9968, fa = 236.2707;
	}
	DestroyVehicle(p_info[playerid][SalonCarID]);
	p_info[playerid][SalonCarID] = INVALID_VEHICLE_ID;
	InShop[playerid] = 0;
	TogglePlayerControllable(playerid,true);
	HideAutoSalonMenu(playerid);
	SetPlayerPos(playerid,x,y,z);
	SetPlayerFacingAngle(playerid,fa);
	SetPlayerInterior(playerid,0);
	SetPlayerVirtualWorld(playerid,0);
	SetCameraBehindPlayer(playerid);
	pPressed[playerid] = 0;
	return 1;
}

stock family_message(family, color, string[])
{
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i))
		{
			if(p_info[i][pFamily] == family)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
}

stock SendAdminMessage(color, str[], alogs = -1)
{
	foreach(new playerid: Admins)
	{
		if(alogs == -1)
		{
			if(PlayerLogged[playerid]) if(p_info[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, color, str);
		}
		else
		{
			if(AdminInfo[playerid][admAlog] == 1)
			{
				if(p_info[playerid][pAdmin] > ADM_NONE) SendClientMessage(playerid, color, str);
			}
			else continue;
		}
	}
	return 1;
}

stock SendHelperMessage(color, str[], alogs = -1)
{
	foreach(new playerid: Helpers)
	{
		if(alogs == -1)
		{
			if(PlayerLogged[playerid]) if(p_info[playerid][pHelper] > 0) SendClientMessage(playerid, color, str);
		}
		else
		{
			if(AdminInfo[playerid][admAlog] == 1)
			{
				if(p_info[playerid][pHelper] > 0) SendClientMessage(playerid, color, str);
			}
			else continue;
		}
	}
	return 1;
}

stock SendFMes(family, color, str[])
{
	foreach(new i: Player)
	{
		if(PlayerLogged[i])
		{
			if(p_info[i][pMember] == family || GetPVarInt(i, "spy_member") == family) SendClientMessage(i, color, str);
		}
	}
	return 1;
}

stock SendDMes(color, str[])
{
	foreach(new i: Player)
	{
		if(PlayerLogged[i])
		{
			if(p_info[i][pMember] == TEAM_ARMY || IsAMedic(i) || IsAMayor(i) || IsACop(i) || p_info[i][pMember] == TEAM_AUTOSCHOOL || IsANews(i)) SendClientMessage(i, color, str);
		}
	}
	return 1;
}

stock ProxDetector(Float:radi, playerid, str[],col1,col2,col3,col4,col5)
{
	new Float:posx, Float:posy, Float:posz, Float:oldposx, Float:oldposy,
	Float:oldposz, Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	foreach(new i: Player)
	{
		if(PlayerLogged[i] == true)
		{
			GetPlayerPos(i, posx, posy, posz);
			tempposx = (oldposx -posx);
			tempposy = (oldposy -posy);
			tempposz = (oldposz -posz);
			if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16))) SendClientMessage(i, col1, str);
			else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8))) SendClientMessage(i, col2, str);
			else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4))) SendClientMessage(i, col3, str);
			else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2))) SendClientMessage(i, col4, str);
			else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) SendClientMessage(i, col5, str);
		}
	}
	return 1;
}

stock IsPlayerInRangeOfPlayer(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid) && !IsPlayerNPC(playerid) && !IsPlayerNPC(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(targetid, posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, radi, posx, posy, posz)) return 1;
	}
	return 0;
}

stock IsVehicleInRangeOfPoint(vehicleid, Float:distance, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx - x);
	tempposy = (oldposy - y);
	tempposz = (oldposz - z);
	if (((tempposx < distance) && (tempposx > -distance)) && ((tempposy < distance) && (tempposy > -distance)) && ((tempposz < distance) && (tempposz > -distance)))return 1;
	return 0;
}

stock CreateTextDrawSkill(playerid)
{
    PTD_Clothes[playerid] = CreatePlayerTextDraw(playerid, 319.985229, 397.083435, "РУБ");
	PlayerTextDrawLetterSize(playerid, PTD_Clothes[playerid], 0.239763, 1.249998);
	PlayerTextDrawAlignment(playerid, PTD_Clothes[playerid], 2);
	PlayerTextDrawColor(playerid, PTD_Clothes[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_Clothes[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_Clothes[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_Clothes[playerid], 255);
	PlayerTextDrawFont(playerid, PTD_Clothes[playerid], 2);
	PlayerTextDrawSetProportional(playerid, PTD_Clothes[playerid], 1);
	PlayerTextDrawSetShadow(playerid, PTD_Clothes[playerid], 0);
}

stock CreateTextDraws(playerid)
{
	TDEditor_INTERACTION_PLAYER[playerid][0] = CreatePlayerTextDraw(playerid, 181.055114, 144.533447, "yannis thompson");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], 0.160115, 0.864997);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], 546.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][0], 1);

	TDEditor_INTERACTION_PLAYER[playerid][1] = CreatePlayerTextDraw(playerid, 415.315734, 146.283447, "yannis thompson");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], 0.160115, 0.864997);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], 546.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][1], 1);

	TDEditor_INTERACTION_PLAYER[playerid][2] = CreatePlayerTextDraw(playerid, 173.838211, 277.816711, "box");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], 0.000000, 0.878094);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], 249.170761, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], -601546753);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][2], 1);

	TDEditor_INTERACTION_PLAYER[playerid][3] = CreatePlayerTextDraw(playerid, 173.838211, 297.017883, "box");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], 0.000000, 0.878094);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], 249.170761, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], -1431655681);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][3], 1);

	TDEditor_INTERACTION_PLAYER[playerid][4] = CreatePlayerTextDraw(playerid, 186.923965, 277.250213, "ЗДОРОВЬЕ: 100%");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], 0.160115, 0.864997);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], 546.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], -1);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], 2);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][4], 1);

	TDEditor_INTERACTION_PLAYER[playerid][5] = CreatePlayerTextDraw(playerid, 192.724319, 296.551391, "БРОНЯ: 100%");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], 0.160115, 0.864997);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], 546.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], -1);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][5], 1);

	TDEditor_INTERACTION_PLAYER[playerid][6] = CreatePlayerTextDraw(playerid, 406.852416, 277.916717, "box");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], 0.000000, 0.868094);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], 481.982757, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], -1);
	PlayerTextDrawUseBox(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], -601546753);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][6], 1);

	TDEditor_INTERACTION_PLAYER[playerid][7] = CreatePlayerTextDraw(playerid, 406.752410, 296.917877, "box");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], 0.000000, 0.895094);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], 481.982849, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], -1431655681);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][7], 1);

	TDEditor_INTERACTION_PLAYER[playerid][8] = CreatePlayerTextDraw(playerid, 420.147491, 277.250183, "ЗДОРОВЬЕ: 100%");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], 0.160115, 0.864997);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], 546.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], -1);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], 2);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][8], 1);

	TDEditor_INTERACTION_PLAYER[playerid][9] = CreatePlayerTextDraw(playerid, 426.547882, 296.451354, "БРОНЯ: 100%");
	PlayerTextDrawLetterSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], 0.160115, 0.864997);
	PlayerTextDrawTextSize(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], 546.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], 1);
	PlayerTextDrawColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], -1);
	PlayerTextDrawSetShadow(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], 255);
	PlayerTextDrawFont(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, TDEditor_INTERACTION_PLAYER[playerid][9], 1);

	copter_speed[0][playerid] = CreatePlayerTextDraw(playerid, 478.799987, 406.193328, "usebox");
	PlayerTextDrawLetterSize(playerid, copter_speed[0][playerid], 0.000000, 2.835924);
	PlayerTextDrawTextSize(playerid, copter_speed[0][playerid], 618.400024, 0.000000);
	PlayerTextDrawAlignment(playerid, copter_speed[0][playerid], 1);
	PlayerTextDrawColor(playerid, copter_speed[0][playerid], 0);
	PlayerTextDrawUseBox(playerid, copter_speed[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, copter_speed[0][playerid], 102);
	PlayerTextDrawSetShadow(playerid, copter_speed[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, copter_speed[0][playerid], 0);
	PlayerTextDrawFont(playerid, copter_speed[0][playerid], 0);

	copter_speed[1][playerid] = CreatePlayerTextDraw(playerid, 479.960052, 403.808471, "usebox");
	PlayerTextDrawLetterSize(playerid, copter_speed[1][playerid], 0.022799, -0.170653);
	PlayerTextDrawTextSize(playerid, copter_speed[1][playerid], 617.680053, 0.000000);
	PlayerTextDrawAlignment(playerid, copter_speed[1][playerid], 1);
	PlayerTextDrawColor(playerid, copter_speed[1][playerid], 0);
	PlayerTextDrawUseBox(playerid, copter_speed[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, copter_speed[1][playerid], 865730559);
	PlayerTextDrawSetShadow(playerid, copter_speed[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, copter_speed[1][playerid], 0);
	PlayerTextDrawFont(playerid, copter_speed[1][playerid], 0);

	copter_speed[2][playerid] = CreatePlayerTextDraw(playerid, 531.640380, 404.643493, "");
	PlayerTextDrawLetterSize(playerid, copter_speed[2][playerid], 0.187599, 0.768710);
	PlayerTextDrawAlignment(playerid, copter_speed[2][playerid], 1);
	PlayerTextDrawColor(playerid, copter_speed[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid, copter_speed[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, copter_speed[2][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, copter_speed[2][playerid], 51);
	PlayerTextDrawFont(playerid, copter_speed[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid, copter_speed[2][playerid], 1);

	copter_speed[3][playerid] = CreatePlayerTextDraw(playerid, 479.600250, 412.910919, "скорость: 228 ei/?~n~высота: 1000.1 м");
	PlayerTextDrawLetterSize(playerid, copter_speed[3][playerid], 0.144799, 0.813510);
	PlayerTextDrawAlignment(playerid, copter_speed[3][playerid], 1);
	PlayerTextDrawColor(playerid, copter_speed[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid, copter_speed[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, copter_speed[3][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, copter_speed[3][playerid], 51);
	PlayerTextDrawFont(playerid, copter_speed[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid, copter_speed[3][playerid], 1);

	copter_speed[4][playerid] = CreatePlayerTextDraw(playerid, 575.399658, 412.322296, "двигатель~n~двери");
	PlayerTextDrawLetterSize(playerid, copter_speed[4][playerid], 0.144798, 0.813510);
	PlayerTextDrawAlignment(playerid, copter_speed[4][playerid], 1);
	PlayerTextDrawColor(playerid, copter_speed[4][playerid], -1);
	PlayerTextDrawSetShadow(playerid, copter_speed[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, copter_speed[4][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, copter_speed[4][playerid], 51);
	PlayerTextDrawFont(playerid, copter_speed[4][playerid], 2);
	PlayerTextDrawSetProportional(playerid, copter_speed[4][playerid], 1);

	copter_speed[5][playerid] = CreatePlayerTextDraw(playerid, 610.600097, 412.110229, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, copter_speed[5][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, copter_speed[5][playerid], 8.000000, 8.462219);
	PlayerTextDrawAlignment(playerid, copter_speed[5][playerid], 1);
	PlayerTextDrawColor(playerid, copter_speed[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, copter_speed[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, copter_speed[5][playerid], 0);
	PlayerTextDrawFont(playerid, copter_speed[5][playerid], 4);

	copter_speed[6][playerid] = CreatePlayerTextDraw(playerid, 610.960266, 420.278259, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, copter_speed[6][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, copter_speed[6][playerid], 8.000000, 8.462219);
	PlayerTextDrawAlignment(playerid, copter_speed[6][playerid], 1);
	PlayerTextDrawColor(playerid, copter_speed[6][playerid], -1);
	PlayerTextDrawSetShadow(playerid, copter_speed[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, copter_speed[6][playerid], 0);
	PlayerTextDrawFont(playerid, copter_speed[6][playerid], 4);

	SecurityCode[playerid][9] = CreatePlayerTextDraw(playerid, 510.666870, 282.088989, "box");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][9], 0.000000, 10.890344);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][9], 571.493652, 0.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][9], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][9], 269488383);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][9], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][9], 269488383);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][9], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][9], 0);

	SecurityCode[playerid][0] = CreatePlayerTextDraw(playerid, 513.333374, 287.066650, "1");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][0], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][0], 528.666748, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][0], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][0], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][0], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][0], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][0], true);

	SecurityCode[playerid][5] = CreatePlayerTextDraw(playerid, 533.228515, 287.066650, "6");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][5], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][5], 548.561889, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][5], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][5], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][5], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][5], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][5], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][5], true);

	SecurityCode[playerid][2] = CreatePlayerTextDraw(playerid, 553.523559, 287.066650, "3");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][2], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][2], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][2], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][2], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][2], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][2], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][2], true);

	SecurityCode[playerid][4] = CreatePlayerTextDraw(playerid, 553.523559, 318.868591, "5");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][4], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][4], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][4], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][4], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][4], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][4], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][4], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][4], true);

	SecurityCode[playerid][7] = CreatePlayerTextDraw(playerid, 533.228515, 318.868591, "8");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][7], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][7], 548.561889, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][7], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][7], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][7], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][7], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][7], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][7], true);

	SecurityCode[playerid][6] = CreatePlayerTextDraw(playerid, 513.233398, 318.868591, "7");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][6], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][6], 528.566772, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][6], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][6], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][6], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][6], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][6], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][6], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][6], true);

	SecurityCode[playerid][1] = CreatePlayerTextDraw(playerid, 513.233398, 350.770538, "2");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][1], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][1], 528.566772, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][1], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][1], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][1], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][1], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][1], true);

	SecurityCode[playerid][3] = CreatePlayerTextDraw(playerid, 533.328491, 350.770538, "4");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][3], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][3], 548.661865, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][3], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][3], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][3], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][3], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][3], true);

	SecurityCode[playerid][8] = CreatePlayerTextDraw(playerid, 553.523559, 350.770538, "9");
	PlayerTextDrawLetterSize(playerid, SecurityCode[playerid][8], 0.760999, 2.894222);
	PlayerTextDrawTextSize(playerid, SecurityCode[playerid][8], 568.856933, 18.000000);
	PlayerTextDrawAlignment(playerid, SecurityCode[playerid][8], 1);
	PlayerTextDrawColor(playerid, SecurityCode[playerid][8], -1);
	PlayerTextDrawUseBox(playerid, SecurityCode[playerid][8], 1);
	PlayerTextDrawBoxColor(playerid, SecurityCode[playerid][8], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, SecurityCode[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, SecurityCode[playerid][8], 255);
	PlayerTextDrawFont(playerid, SecurityCode[playerid][8], 3);
	PlayerTextDrawSetProportional(playerid, SecurityCode[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, SecurityCode[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid, SecurityCode[playerid][8], true);
	
	buy_numbers_player_car[playerid] = CreatePlayerTextDraw(playerid, 240.500000, 224.437500, "x007xx");
	PlayerTextDrawLetterSize(playerid, buy_numbers_player_car[playerid], 1.064500, 3.905624);
	PlayerTextDrawAlignment(playerid, buy_numbers_player_car[playerid], 1);
	PlayerTextDrawColor(playerid, buy_numbers_player_car[playerid], 255);
	PlayerTextDrawSetShadow(playerid, buy_numbers_player_car[playerid], 0);
	PlayerTextDrawSetOutline(playerid, buy_numbers_player_car[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, buy_numbers_player_car[playerid], 51);
	PlayerTextDrawFont(playerid, buy_numbers_player_car[playerid], 1);

	AutoSalon_Stats[playerid][0] = CreatePlayerTextDraw(playerid, 514.899902, 137.00, "ЦЕНА: 3000000 РУБЛЕЙ");
	PlayerTextDrawLetterSize(playerid, AutoSalon_Stats[playerid][0], 0.274499, 1.762400);
	PlayerTextDrawAlignment(playerid, AutoSalon_Stats[playerid][0], 1);
	PlayerTextDrawColor(playerid, AutoSalon_Stats[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, AutoSalon_Stats[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, AutoSalon_Stats[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, AutoSalon_Stats[playerid][0], 51);
	PlayerTextDrawFont(playerid, AutoSalon_Stats[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, AutoSalon_Stats[playerid][0], 1);

	AutoSalon_Stats[playerid][1] = CreatePlayerTextDraw(playerid, 514.899902, 154.00, "НАЗВАНИЕ:");
	PlayerTextDrawLetterSize(playerid, AutoSalon_Stats[playerid][1], 0.274499, 1.762400);
	PlayerTextDrawAlignment(playerid, AutoSalon_Stats[playerid][1], 1);
	PlayerTextDrawColor(playerid, AutoSalon_Stats[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, AutoSalon_Stats[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, AutoSalon_Stats[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, AutoSalon_Stats[playerid][1], 51);
	PlayerTextDrawFont(playerid, AutoSalon_Stats[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, AutoSalon_Stats[playerid][1], 1);
}

stock RemoveBuild(playerid)
{
//green
//
    RemoveBuildingForPlayer(playerid, 4738, 561.9509, 341.9607, 21.4381, 0.25);
	RemoveBuildingForPlayer(playerid, 4738, 755.9938, 320.8848, 21.4381, 0.25);
	RemoveBuildingForPlayer(playerid, 4738, 696.4468, 343.3422, 21.4381, 0.25);
	RemoveBuildingForPlayer(playerid, 4738, 636.2061, 365.8285, 21.4381, 0.25);
	RemoveBuildingForPlayer(playerid, 4738, 574.4709, 386.8001, 21.4381, 0.25);
    RemoveBuildingForPlayer(playerid, 982, 874.3317, 781.4736, 11.6592, 0.25);
	RemoveBuildingForPlayer(playerid, 982, 865.4208, 757.4754, 11.6592, 0.25);
	RemoveBuildingForPlayer(playerid, 983, 860.6879, 744.7088, 11.6592, 0.25);
	RemoveBuildingForPlayer(playerid, 4395, 782.0545, 753.5389, 17.8017, 0.25);
	RemoveBuildingForPlayer(playerid, 4395, 751.6116, 668.3273, 17.8017, 0.25);
	RemoveBuildingForPlayer(playerid, 4395, 786.1699, 783.4773, 17.7817, 0.25);
	RemoveBuildingForPlayer(playerid, 4395, 846.9500, 762.5805, 17.7817, 0.25);
	RemoveBuildingForPlayer(playerid, 11877, 2373.1599, -653.1580, 10.8753, 0.25);
	RemoveBuildingForPlayer(playerid, 11878, 2248.5601, -425.7990, 5.6715, 0.25);
	RemoveBuildingForPlayer(playerid, 11892, 2383.4900, -686.6980, 12.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 11899, 2149.2600, -339.3030, 9.7128, 0.25);
	RemoveBuildingForPlayer(playerid, 11900, 2312.2300, -513.1550, 12.1746, 0.25);
	RemoveBuildingForPlayer(playerid, 4738, 2412.4221, -677.5511, 21.9397, 0.25);
	RemoveBuildingForPlayer(playerid, 4738, 2402.0291, -617.7360, 21.9397, 0.25);
	RemoveBuildingForPlayer(playerid, 4738, 2354.3418, -621.1071, 21.9397, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2325.2971, -542.2568, 21.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2294.0586, -499.4856, 21.4997, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2258.7053, -457.7701, 20.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2224.6814, -418.1689, 19.7597, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2187.7651, -377.3580, 18.6197, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2147.2668, -339.1951, 18.3197, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2363.1643, -541.4539, 21.9197, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2331.5415, -496.3611, 21.1997, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2294.1360, -452.9751, 20.7397, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2260.2043, -413.4660, 20.6397, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2226.0354, -372.6461, 19.7797, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2190.6028, -339.2369, 19.5197, 0.25);
	RemoveBuildingForPlayer(playerid, 11947, 2156.9536, -327.0400, 12.5035, 0.25);
	RemoveBuildingForPlayer(playerid, 11947, 2389.7219, -704.2233, 15.2435, 0.25);
	RemoveBuildingForPlayer(playerid, 11947, 2391.8193, -760.8015, 15.0835, 0.25);
	RemoveBuildingForPlayer(playerid, 11938, 2490.6201, -520.8560, 5.5261, 0.25);
	RemoveBuildingForPlayer(playerid, 11939, 2452.0300, -698.8090, 8.8978, 0.25);
	RemoveBuildingForPlayer(playerid, 4717, 2387.2808, -585.7868, 21.9197, 0.25);
	RemoveBuildingForPlayer(playerid, 4302, 783.2450, 703.1030, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4307, 783.2450, 703.1030, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4386, 778.2490, 775.6970, 17.3760, 0.25);
	RemoveBuildingForPlayer(playerid, 4387, 778.2490, 775.6970, 17.3760, 0.25);
	RemoveBuildingForPlayer(playerid, 1790, 460.3240, 2098.9700, 15.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 11575, 2554.5901, -791.5210, 17.3170, 0.25);
	RemoveBuildingForPlayer(playerid, 11603, 2301.2600, 2250.1101, 14.1665, 0.25);
	RemoveBuildingForPlayer(playerid, 11604, 2355.6899, 1950.0200, 13.9832, 0.25);
	RemoveBuildingForPlayer(playerid, 11605, 2391.6499, 1649.9301, 11.8660, 0.25);
	RemoveBuildingForPlayer(playerid, 11613, 2567.5300, -750.0000, 19.4334, 0.25);
	RemoveBuildingForPlayer(playerid, 11614, 2511.5801, -953.7830, 23.1927, 0.25);
	RemoveBuildingForPlayer(playerid, 11638, 2302.7900, 2250.0901, 2.3733, 0.25);
	RemoveBuildingForPlayer(playerid, 11680, 2302.7900, 2250.0901, 2.3733, 0.25);
	RemoveBuildingForPlayer(playerid, 11639, 2359.1299, 1950.0900, 2.3111, 0.25);
	RemoveBuildingForPlayer(playerid, 11681, 2359.1299, 1950.0900, 2.3111, 0.25);
	RemoveBuildingForPlayer(playerid, 11640, 2396.3999, 1650.0900, 0.1897, 0.25);
	RemoveBuildingForPlayer(playerid, 11682, 2396.3999, 1650.0900, 0.1897, 0.25);
	RemoveBuildingForPlayer(playerid, 11648, 2567.2300, -750.0000, 5.8572, 0.25);
	RemoveBuildingForPlayer(playerid, 11690, 2567.2300, -750.0000, 5.8572, 0.25);
	RemoveBuildingForPlayer(playerid, 11649, 2515.6299, -977.1760, -9.4404, 0.25);
	RemoveBuildingForPlayer(playerid, 11691, 2515.6299, -977.1760, -9.4404, 0.25);
	RemoveBuildingForPlayer(playerid, 11654, 2363.8999, 1915.7600, 14.4731, 0.25);
	RemoveBuildingForPlayer(playerid, 1312, 2416.4185, -771.6384, 14.9755, 0.25);
	RemoveBuildingForPlayer(playerid, 1312, 2381.7297, -789.6110, 15.0300, 0.25);
	RemoveBuildingForPlayer(playerid, 11100, 2358.8201, -600.7900, 10.2200, 0.25);
	RemoveBuildingForPlayer(playerid, 11100, 2383.1499, -654.3300, 10.2200, 0.25);
	RemoveBuildingForPlayer(playerid, 11100, 2402.6201, -709.5700, 10.2200, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 2371.7517, -625.4394, 17.5740, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 440.5977, 385.8506, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 491.9883, 365.4460, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 577.1907, 386.1396, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 2391.6509, -750.6083, 8.3441, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 2370.9438, -690.8444, 8.3441, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 2343.8040, -633.9402, 8.3441, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 2317.5664, -575.4513, 8.3441, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 2358.5471, -550.3864, 8.1841, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 2389.7122, -601.6237, 8.1841, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 2407.0415, -649.3508, 8.1841, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2360.3665, -599.7800, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2384.6423, -653.2941, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2404.1943, -708.7881, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2415.6526, -746.2372, 11.7495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2413.2642, -747.0252, 11.7295, 0.25);
	RemoveBuildingForPlayer(playerid, 11441, 2422.5647, -777.3449, 11.5495, 0.25);
	RemoveBuildingForPlayer(playerid, 11441, 2424.9011, -776.4805, 11.5495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2401.6543, -709.5374, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2381.6965, -653.1394, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2358.0281, -600.9639, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11550, -349.7881, 362.1945, 10.8781, 0.25);
	RemoveBuildingForPlayer(playerid, 11550, -355.5325, 315.4898, 10.8781, 0.25);
	RemoveBuildingForPlayer(playerid, 11550, -285.1602, 255.6119, 10.8781, 0.25);
	RemoveBuildingForPlayer(playerid, 11550, -96.1430, 301.9388, 10.8581, 0.25);
	RemoveBuildingForPlayer(playerid, 11551, -342.3415, 268.3587, 10.8781, 0.25);
	RemoveBuildingForPlayer(playerid, 11551, -108.1754, 252.9403, 10.8781, 0.25);
	RemoveBuildingForPlayer(playerid, 11550, -238.4450, 249.8902, 10.8781, 0.25);
	RemoveBuildingForPlayer(playerid, 11550, -191.7550, 244.1652, 10.8781, 0.25);
	RemoveBuildingForPlayer(playerid, 11550, -155.2164, 239.6846, 10.8581, 0.25);
	RemoveBuildingForPlayer(playerid, 11549, -353.3542, 387.9080, 10.4290, 0.25);
	RemoveBuildingForPlayer(playerid, 11549, -348.3900, 387.3058, 10.4290, 0.25);
	RemoveBuildingForPlayer(playerid, 11549, -343.4518, 386.7025, 10.4290, 0.25);
	RemoveBuildingForPlayer(playerid, 11549, -339.7001, 386.2523, 10.4290, 0.25);
	RemoveBuildingForPlayer(playerid, 11551, -476.4370, 952.2954, 10.3305, 0.25);
	RemoveBuildingForPlayer(playerid, 11486, -430.7061, 917.2955, 30.4471, 0.25);
	RemoveBuildingForPlayer(playerid, 641, -502.9026, 939.4713, 10.9717, 0.25);
	RemoveBuildingForPlayer(playerid, 641, -488.4774, 976.9290, 10.9717, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2373.6409, 1923.9192, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2377.1653, 1924.5150, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2380.8730, 1924.7992, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2385.4148, 1924.0598, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2390.2595, 1921.9869, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2395.1113, 1918.4591, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2398.7170, 1914.6536, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2401.7549, 1911.0710, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2404.5913, 1907.7531, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2407.7915, 1904.7821, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2411.5583, 1902.7240, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2414.7688, 1901.7882, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2419.0242, 1901.1608, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2417.9944, 1892.4884, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2413.8938, 1893.1044, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2409.7458, 1894.1472, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2405.5352, 1895.8276, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2400.9790, 1899.0543, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2397.5823, 1902.2740, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2393.9827, 1906.5447, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2391.3506, 1910.0104, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2388.1057, 1911.9261, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2384.7891, 1912.5718, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2381.9949, 1912.2389, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2379.3582, 1911.6312, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2375.8162, 1910.4988, 15.4879, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2353.1575, 1907.0939, 15.1275, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2349.7813, 1907.2335, 15.1275, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2346.7554, 1906.7300, 15.1275, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2345.1069, 1917.6676, 15.1275, 0.25);
	RemoveBuildingForPlayer(playerid, 11709, 2347.7991, 1918.1356, 15.1275, 0.25);
	RemoveBuildingForPlayer(playerid, 1373, 2372.7991, 1922.8927, 17.2056, 0.25);
	RemoveBuildingForPlayer(playerid, 1374, 2371.9138, 1924.3702, 16.2456, 0.25);
	RemoveBuildingForPlayer(playerid, 1373, 2354.5723, 1908.1976, 17.3456, 0.25);
	RemoveBuildingForPlayer(playerid, 1374, 2355.4136, 1906.7848, 16.3056, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 11100, 2298.6499, -500.4900, 10.2200, 0.25);
	RemoveBuildingForPlayer(playerid, 11100, 2330.5701, -549.6500, 10.2200, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 2323.2249, -536.4606, 17.5740, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 2274.7083, -531.8406, -20.6321, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 2340.9861, -494.8296, -20.5721, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 2389.7122, -601.6237, 8.1841, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 2327.0566, -514.8570, 10.7791, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 2307.6230, -487.2146, 10.7791, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 2285.8135, -457.4024, 10.7791, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 2260.8306, -426.6935, 10.7791, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 2295.8567, -522.1239, 10.7791, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 2271.2322, -487.3153, 10.7791, 0.25);
	RemoveBuildingForPlayer(playerid, 636, 2248.3665, -458.1181, 10.7791, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2299.9912, -499.1609, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2332.0671, -548.5526, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2329.8772, -550.0745, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 11439, 2297.7971, -500.7058, 11.9495, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 889.8358, -190.1762, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 627.7122, -125.8141, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 649.5656, -65.9569, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 641.4835, -166.3612, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 677.5757, -178.3332, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 4338, -311.4510, 1219.2800, 14.3200, 0.25);
	RemoveBuildingForPlayer(playerid, 4352, -311.4510, 1219.2800, 14.3200, 0.25);
	RemoveBuildingForPlayer(playerid, 1796, 2210.5100, -1771.3199, 25.7430, 0.25);
	RemoveBuildingForPlayer(playerid, 1793, 2585.0300, -2494.9700, 25.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 3626, 2459.1001, -774.2690, 16.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2205, 2560.4700, -2428.7600, 20.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 2316, 2529.9500, -2395.3000, 20.9690, 0.25);
	RemoveBuildingForPlayer(playerid, 4443, 2267.0901, -1737.3300, 22.9640, 0.25);
	RemoveBuildingForPlayer(playerid, 1892, 2322.7500, -1956.5100, -6.0592, 0.25);
	RemoveBuildingForPlayer(playerid, 1893, 2322.7500, -1956.5100, -6.0592, 0.25);
	RemoveBuildingForPlayer(playerid, 1905, 2435.7700, -1719.5900, 24.2553, 0.25);
	RemoveBuildingForPlayer(playerid, 1913, 2434.5701, -1719.5900, 24.2553, 0.25);
	RemoveBuildingForPlayer(playerid, 1916, 2307.8899, -1817.4399, -3.9992, 0.25);
	RemoveBuildingForPlayer(playerid, 1919, 2307.8899, -1817.4399, -3.9992, 0.25);
	RemoveBuildingForPlayer(playerid, 1949, 2155.7300, -1847.2400, 20.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1951, 2155.7300, -1847.2400, 20.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1964, 2190.3000, -1837.9900, 17.7990, 0.25);
	RemoveBuildingForPlayer(playerid, 1966, 2190.3000, -1837.9900, 17.7990, 0.25);
	RemoveBuildingForPlayer(playerid, 1986, 2351.1399, -2128.6599, 20.9760, 0.25);
	RemoveBuildingForPlayer(playerid, 1988, 2351.1399, -2128.6599, 20.9760, 0.25);
	RemoveBuildingForPlayer(playerid, 2006, 2435.7600, -2386.6799, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 2006, 2435.7600, -2216.6699, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 2006, 2366.6599, -2184.3701, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 2006, 2295.0500, -2233.3701, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 2006, 2295.0500, -2393.2000, 21.0023, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 2417.5701, -1712.5900, 20.3126, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 2416.3701, -1718.1200, 17.6153, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 2440.6599, -1711.1700, 20.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2439.3601, -1711.1600, 19.5023, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 2434.6699, -1711.2000, 20.7237, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 2436.9399, -1711.7500, 19.5023, 0.25);
	RemoveBuildingForPlayer(playerid, 626, 2422.6299, -1710.7000, 20.3102, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2418.6399, -1724.1200, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2428.0601, -1711.6300, 20.9676, 0.25);
	RemoveBuildingForPlayer(playerid, 1763, 2428.0400, -1710.6000, 20.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1930, 2329.3000, -1776.6700, 24.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1930, 2329.3000, -1786.6500, 24.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1930, 2329.3000, -1796.6600, 24.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1930, 2329.3000, -1811.6500, 24.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1930, 2329.3000, -1821.6600, 24.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1930, 2329.3000, -1831.6600, 24.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1930, 2329.3000, -1841.6200, 24.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1929, 2329.1201, -1776.6400, 29.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 1929, 2329.1201, -1786.6600, 29.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 1929, 2329.1201, -1796.6500, 29.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 1929, 2329.1201, -1811.6700, 29.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 1929, 2329.1201, -1821.6500, 29.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 1929, 2329.1201, -1831.6500, 29.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 1929, 2329.1201, -1841.6600, 29.3500, 0.25);
	RemoveBuildingForPlayer(playerid, 1931, 2329.1201, -1804.1899, 29.3400, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2326.6499, -1770.7100, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2321.4600, -1770.7500, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2316.2400, -1770.7500, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2311.0400, -1770.7700, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2305.8601, -1770.7800, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2366.1599, -1770.7600, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2368.8401, -1773.3600, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2368.8601, -1778.5800, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2368.8201, -1783.8199, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 2368.8799, -1789.0699, 23.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1351, 2295.1399, -1768.7400, 21.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1351, 2299.9299, -1743.2800, 21.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1351, 2274.7400, -1738.6100, 21.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1351, 2269.9700, -1763.9200, 21.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2155.5500, -1843.0500, 24.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2164.0200, -1842.8101, 24.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2147.3000, -1843.3600, 24.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2147.3101, -1851.0400, 24.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2155.8101, -1851.0400, 24.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1731, 2164.0100, -1851.0400, 24.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, 2415.8201, -1723.8500, 21.7100, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2366.8000, -1860.0200, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2362.6899, -1860.0200, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.8601, -1857.9399, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.8501, -1853.8199, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.8601, -1849.6801, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.8501, -1845.5300, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.8101, -1841.4500, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.7900, -1837.3000, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.8000, -1833.2100, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.7900, -1829.0500, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2368.7900, -1824.9399, 27.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2439.6899, -1709.9500, 21.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2435.5500, -1709.9600, 21.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2426.8999, -1709.9600, 21.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2422.7500, -1709.9600, 21.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2418.6499, -1709.9600, 21.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2414.5000, -1709.9600, 21.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 2436.0701, -1710.5100, 20.9552, 0.25);
	RemoveBuildingForPlayer(playerid, 2198, 2569.7300, -2416.0400, 23.9326, 0.25);
	RemoveBuildingForPlayer(playerid, 2199, 2569.7300, -2416.0400, 23.9326, 0.25);
	RemoveBuildingForPlayer(playerid, 2437, 2167.8201, -2399.4399, 36.7222, 0.25);
	RemoveBuildingForPlayer(playerid, 2442, 2167.8201, -2399.4399, 36.7222, 0.25);
	RemoveBuildingForPlayer(playerid, 2441, 2103.4199, -2417.5000, 20.9399, 0.25);
	RemoveBuildingForPlayer(playerid, 2446, 2103.4199, -2417.5000, 20.9399, 0.25);
	RemoveBuildingForPlayer(playerid, 2605, 1913.0100, -2220.2100, 29.8855, 0.25);
	RemoveBuildingForPlayer(playerid, 2612, 1913.0100, -2220.2100, 29.8855, 0.25);
	RemoveBuildingForPlayer(playerid, 1894, 2322.7500, -1956.5100, -6.0592, 0.25);
	RemoveBuildingForPlayer(playerid, 1906, 2435.7700, -1719.5900, 24.2553, 0.25);
	RemoveBuildingForPlayer(playerid, 1904, 2435.7700, -1719.5900, 24.2553, 0.25);
	RemoveBuildingForPlayer(playerid, 1927, 2307.8899, -1817.4399, -3.9992, 0.25);
	RemoveBuildingForPlayer(playerid, 1950, 2155.7300, -1847.2400, 20.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1965, 2185.5300, -1837.9900, 19.8160, 0.25);
	RemoveBuildingForPlayer(playerid, 1710, 2778.9600, -2420.4700, 20.5960, 0.25);
	RemoveBuildingForPlayer(playerid, 2200, 2569.7300, -2416.0400, 23.9326, 0.25);
	RemoveBuildingForPlayer(playerid, 2201, 2569.7300, -2416.0400, 23.9326, 0.25);
	RemoveBuildingForPlayer(playerid, 2203, 2569.7300, -2416.0400, 23.9326, 0.25);
	RemoveBuildingForPlayer(playerid, 2202, 2572.9399, -2408.1899, 22.5250, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2567.9399, -2416.0100, 24.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1709, 2568.0601, -2419.0801, 24.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2568.7600, -2418.1799, 21.8800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2568.5801, -2416.9399, 21.8800, 0.25);
	RemoveBuildingForPlayer(playerid, 1742, 2568.6699, -2415.8301, 21.8800, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 2569.6101, -2418.1799, 22.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1744, 2569.5500, -2415.3899, 22.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1753, 2569.6399, -2417.4700, 22.3200, 0.25);
	RemoveBuildingForPlayer(playerid, 1753, 2569.6001, -2416.8401, 22.3200, 0.25);
	RemoveBuildingForPlayer(playerid, 1753, 2569.5801, -2416.1899, 22.3200, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 2569.5801, -2416.1899, 22.3400, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 2569.5901, -2416.8501, 22.3400, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 2569.6001, -2417.4700, 22.3400, 0.25);
	RemoveBuildingForPlayer(playerid, 1750, 2567.3101, -2415.3799, 22.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1750, 2566.3401, -2416.7000, 22.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1738, 2569.3799, -2415.6799, 22.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1738, 2569.3401, -2418.0400, 22.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 2028, 2572.5801, -2420.6599, 22.8600, 0.25);
	RemoveBuildingForPlayer(playerid, 1739, 2568.8201, -2414.9900, 23.3122, 0.25);
	RemoveBuildingForPlayer(playerid, 1792, 2481.2300, -2012.9100, 25.8898, 0.25);
	RemoveBuildingForPlayer(playerid, 1794, 2550.4399, -2345.6201, 25.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 2582, 2446.1499, -1718.4800, 23.0263, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2446.1599, -1715.8800, 23.0265, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2446.1599, -1714.4700, 26.3164, 0.25);
	RemoveBuildingForPlayer(playerid, 2582, 2430.8899, -1718.9399, 29.6303, 0.25);
	RemoveBuildingForPlayer(playerid, 2582, 2446.1599, -1714.4800, 29.6303, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2425.0801, -1714.5699, 23.0265, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2424.9600, -1715.9700, 26.3163, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2424.9600, -1715.9700, 29.6303, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2434.9600, -1717.6700, 26.3163, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2430.8701, -1719.0800, 26.3163, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2434.9600, -1717.6700, 29.6303, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2433.5601, -1717.6700, 23.0263, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2429.4600, -1719.0699, 23.0263, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2446.1599, -1718.4800, 26.3164, 0.25);
	RemoveBuildingForPlayer(playerid, 2583, 2446.1599, -1718.4800, 29.6303, 0.25);
	RemoveBuildingForPlayer(playerid, 2584, 2432.5100, -1713.2500, 23.0265, 0.25);
	RemoveBuildingForPlayer(playerid, 2585, 2429.8899, -1713.2500, 23.0265, 0.25);
	// Aiecae ??iue
	RemoveBuildingForPlayer(playerid, 2020, 2559.679, -2012.380, 20.964, 0.250);
	RemoveBuildingForPlayer(playerid, 2024, 2509.360, -2126.989, 20.260, 0.250);
	RemoveBuildingForPlayer(playerid, 2025, 2509.360, -2126.989, 20.260, 0.250);
	RemoveBuildingForPlayer(playerid, 2058, 2510.689, -1992.910, 22.329, 0.250);
	RemoveBuildingForPlayer(playerid, 2059, 2510.689, -1992.910, 22.329, 0.250);
	RemoveBuildingForPlayer(playerid, 626, 2520.379, -2087.370, 20.423, 0.250);
	RemoveBuildingForPlayer(playerid, 2026, 2514.300, -2130.209, 24.500, 0.250);
	RemoveBuildingForPlayer(playerid, 2026, 2514.310, -2122.989, 24.500, 0.250);
	RemoveBuildingForPlayer(playerid, 2026, 2514.310, -2120.159, 24.500, 0.250);
	RemoveBuildingForPlayer(playerid, 2026, 2504.350, -2120.199, 24.500, 0.250);
	RemoveBuildingForPlayer(playerid, 2026, 2504.350, -2123.000, 24.500, 0.250);
	RemoveBuildingForPlayer(playerid, 2026, 2504.350, -2130.189, 24.500, 0.250);
	RemoveBuildingForPlayer(playerid, 2026, 2509.409, -2117.820, 24.500, 0.250);
	RemoveBuildingForPlayer(playerid, 2028, 2505.139, -2123.429, 22.860, 0.250);
	RemoveBuildingForPlayer(playerid, 2028, 2505.129, -2119.979, 22.860, 0.250);
	RemoveBuildingForPlayer(playerid, 2028, 2509.540, -2123.550, 22.860, 0.250);
	RemoveBuildingForPlayer(playerid, 2028, 2508.840, -2123.560, 22.860, 0.250);
	RemoveBuildingForPlayer(playerid, 2028, 2507.300, -2118.679, 22.860, 0.250);
	RemoveBuildingForPlayer(playerid, 2028, 2511.310, -2118.780, 22.860, 0.250);
	RemoveBuildingForPlayer(playerid, 2028, 2513.429, -2120.129, 22.860, 0.250);
	RemoveBuildingForPlayer(playerid, 2028, 2513.540, -2123.510, 22.860, 0.250);
	RemoveBuildingForPlayer(playerid, 2029, 2509.360, -2126.989, 20.260, 0.250);
	RemoveBuildingForPlayer(playerid, 2030, 2514.550, -2128.080, 23.700, 0.250);
	RemoveBuildingForPlayer(playerid, 2031, 2514.540, -2125.270, 23.700, 0.250);
	RemoveBuildingForPlayer(playerid, 2030, 2504.139, -2125.239, 23.700, 0.250);
	RemoveBuildingForPlayer(playerid, 2031, 2504.149, -2128.050, 23.700, 0.250);
	RemoveBuildingForPlayer(playerid, 2027, 2504.149, -2125.909, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2027, 2504.179, -2127.379, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2027, 2504.469, -2127.350, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2027, 2504.459, -2125.899, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2027, 2514.110, -2125.879, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2027, 2514.110, -2127.350, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2027, 2514.419, -2127.370, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2027, 2514.419, -2125.909, 25.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2032, 2493.989, -2036.589, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 1776, 2513.350, -2092.500, 24.299, 0.250);
	RemoveBuildingForPlayer(playerid, 1776, 2513.350, -2066.800, 24.299, 0.250);
	RemoveBuildingForPlayer(playerid, 1776, 2513.350, -2041.050, 24.299, 0.250);
	//iai?ioea iy?ee ?? AO
	RemoveBuildingForPlayer(playerid, 8580, 1947.7700, -2278.8899, 9.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1894.7400, -2272.1101, 9.7345, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1876.7100, -2269.2800, 9.7345, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 2008.2600, -2291.9500, 9.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1996.7100, -2269.2800, 11.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1948.5200, -2284.1399, 9.4220, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1907.2700, -2286.5701, 10.3595, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1896.3300, -2295.7700, 10.1720, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1857.7000, -2285.4500, 8.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1965.7700, -2269.9199, 10.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 2024.5300, -2314.1799, 12.1720, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1973.8600, -2289.7000, 9.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 2011.4100, -2319.7600, 7.9220, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1938.0500, -2306.5200, 8.2345, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1906.7100, -2313.2800, 8.6095, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1877.0500, -2310.9399, 8.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1992.7500, -2341.4700, 7.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1951.7100, -2335.2800, 7.8595, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1921.7100, -2335.2800, 7.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1883.2300, -2337.9099, 8.7345, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1854.4000, -2329.6699, 8.4220, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1996.7100, -2357.2800, 8.0470, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1894.2500, -2348.0601, 10.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 1883.8101, -2347.6101, 10.3595, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 2004.7100, -2324.4600, 6.6095, 0.25);
	RemoveBuildingForPlayer(playerid, 8580, 2025.0300, -2277.5500, 12.8595, 0.25);
	RemoveBuildingForPlayer(playerid, 8581, 1905.8700, -2315.2700, 8.2345, 0.25);
	RemoveBuildingForPlayer(playerid, 8581, 1916.8199, -2344.7000, 9.8595, 0.25);
	RemoveBuildingForPlayer(playerid, 8581, 1945.5000, -2357.8401, 10.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8581, 2029.0100, -2296.5200, 15.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8581, 2007.5200, -2279.8799, 9.9220, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1861.4301, -2351.1899, 9.7345, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1899.2600, -2349.8301, 10.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1919.9100, -2345.6201, 10.1720, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1930.2200, -2347.8401, 10.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1965.4900, -2348.7300, 9.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1964.9800, -2349.9199, 9.6095, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1997.6500, -2357.5300, 7.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1877.0800, -2342.0200, 9.2970, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1886.7100, -2337.2800, 8.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1906.7100, -2337.2800, 7.7345, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1958.1400, -2360.4900, 10.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1946.3500, -2345.0100, 9.1095, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1976.2100, -2337.8701, 9.2970, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1985.6100, -2335.1599, 7.7345, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2015.2300, -2336.0100, 7.9220, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2006.7800, -2325.7800, 6.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2039.3000, -2325.2700, 20.3595, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1866.7100, -2307.2800, 8.3595, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1897.9600, -2314.1201, 7.9220, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1912.9900, -2311.0300, 8.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1930.4500, -2310.5601, 8.2345, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1947.4700, -2308.7800, 7.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1966.7100, -2307.2800, 7.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1993.4500, -2315.0200, 6.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1998.5500, -2299.4500, 9.3595, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2018.1100, -2310.3101, 8.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1866.3500, -2290.4500, 9.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1869.2500, -2297.3000, 9.4220, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1899.8400, -2299.6699, 10.0470, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1908.5000, -2285.4199, 10.2970, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1946.2800, -2297.7400, 9.2970, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1947.8900, -2292.7500, 9.2345, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1972.3300, -2290.3101, 9.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2000.9100, -2300.1799, 9.1720, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2023.5300, -2286.2700, 12.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2036.5500, -2291.3501, 19.8595, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1857.6700, -2283.5400, 8.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1889.2300, -2277.2400, 9.9220, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1900.4500, -2284.8101, 10.2345, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1935.9301, -2269.3000, 9.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1952.2800, -2279.2600, 9.7345, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1960.8700, -2275.6699, 9.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1994.2500, -2279.7700, 10.0470, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2007.0300, -2270.8701, 11.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 2017.3300, -2271.1299, 12.1095, 0.25);
	RemoveBuildingForPlayer(playerid, 8582, 1916.4800, -2334.5000, 7.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8583, 1894.1200, -2283.4199, 10.1720, 0.25);
	RemoveBuildingForPlayer(playerid, 8583, 1969.4200, -2346.4399, 9.6095, 0.25);
	RemoveBuildingForPlayer(playerid, 8583, 1994.9200, -2269.2300, 11.4220, 0.25);
	RemoveBuildingForPlayer(playerid, 8583, 1946.7300, -2272.3601, 9.9220, 0.25);
	RemoveBuildingForPlayer(playerid, 8583, 2037.4301, -2326.4199, 19.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 2039.2100, -2307.2800, 20.3595, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1879.0400, -2295.3999, 9.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1916.7100, -2277.2800, 9.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1973.0300, -2283.6499, 10.1720, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 2007.2000, -2293.1101, 9.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1996.2900, -2297.5300, 9.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1905.1300, -2354.1599, 10.9845, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1972.1700, -2294.9299, 9.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1896.6500, -2351.3501, 10.6720, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1916.7100, -2337.2800, 8.3595, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1951.7100, -2337.2800, 8.1720, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 2003.2700, -2319.2000, 7.0470, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1997.0601, -2346.9700, 7.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1877.9200, -2293.9399, 9.7970, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1905.8700, -2295.2500, 10.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 1956.1000, -2290.9600, 9.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 8584, 2020.2700, -2283.6499, 11.1720, 0.25);
	RemoveBuildingForPlayer(playerid, 3654, 1923.8700, -2352.6001, 11.4845, 0.25);
	RemoveBuildingForPlayer(playerid, 3654, 1926.1600, -2292.7200, 9.8595, 0.25);
	RemoveBuildingForPlayer(playerid, 3654, 1996.3199, -2286.8401, 10.1095, 0.25);
	RemoveBuildingForPlayer(playerid, 2625, 1849.1700, -2290.6899, 6.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 2625, 1860.3900, -2319.2800, 6.5091, 0.25);
	RemoveBuildingForPlayer(playerid, 2625, 1940.3101, -2320.9700, 6.5091, 0.25);
	RemoveBuildingForPlayer(playerid, 2625, 2008.2800, -2351.0801, 4.7267, 0.25);
	//iieeoey
	//??ea
	RemoveBuildingForPlayer(playerid, 1852, 2379.120, -1783.680, 0.001, 0.250);
	RemoveBuildingForPlayer(playerid, 1854, 2379.120, -1783.680, 0.001, 0.250);
	RemoveBuildingForPlayer(playerid, 1853, 2363.010, -2019.060, 0.001, 0.250);
	RemoveBuildingForPlayer(playerid, 1855, 2363.010, -2019.060, 0.001, 0.250);
	RemoveBuildingForPlayer(playerid, 1876, 2350.070, -2014.119, 20.930, 0.250);
	RemoveBuildingForPlayer(playerid, 1877, 2350.070, -2014.119, 20.930, 0.250);
	RemoveBuildingForPlayer(playerid, 1973, 2193.300, -1807.849, 0.001, 0.250);
	RemoveBuildingForPlayer(playerid, 1974, 2193.300, -1807.849, 0.001, 0.250);
	RemoveBuildingForPlayer(playerid, 2104, 2141.399, -1975.569, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2105, 2141.399, -1975.569, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2127, 2600.030, -2154.929, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2128, 2600.030, -2154.929, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2178, 2638.189, -2312.860, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2180, 2638.189, -2312.860, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2186, 2599.639, -2309.310, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2187, 2599.639, -2309.310, 20.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2270, 2615.979, -2581.560, 20.964, 0.250);
	RemoveBuildingForPlayer(playerid, 2274, 2615.979, -2581.560, 20.964, 0.250);
	RemoveBuildingForPlayer(playerid, 2271, 2660.389, -2669.889, 24.009, 0.250);
	RemoveBuildingForPlayer(playerid, 2275, 2660.389, -2669.889, 24.009, 0.250);
	RemoveBuildingForPlayer(playerid, 2329, 2599.669, -2465.860, 20.129, 0.250);
	RemoveBuildingForPlayer(playerid, 2330, 2599.669, -2465.860, 20.129, 0.250);
	RemoveBuildingForPlayer(playerid, 2337, 2527.100, -2559.669, 23.965, 0.250);
	RemoveBuildingForPlayer(playerid, 2338, 2527.100, -2559.669, 23.965, 0.250);
	RemoveBuildingForPlayer(playerid, 2063, 2749.379, -2263.810, 17.822, 0.250);
	RemoveBuildingForPlayer(playerid, 2064, 2749.379, -2263.810, 17.822, 0.250);
	RemoveBuildingForPlayer(playerid, 2070, 2811.659, -2317.439, 9.768, 0.250);
	RemoveBuildingForPlayer(playerid, 2071, 2811.659, -2317.439, 9.768, 0.250);
	RemoveBuildingForPlayer(playerid, 2072, 2759.239, -2582.169, 10.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2073, 2759.239, -2582.169, 10.250, 0.250);
	RemoveBuildingForPlayer(playerid, 2074, 2776.360, -2567.570, 11.074, 0.250);
	RemoveBuildingForPlayer(playerid, 2075, 2776.360, -2567.570, 11.074, 0.250);
	RemoveBuildingForPlayer(playerid, 2078, 2769.250, -2582.719, -16.454, 0.250);
	RemoveBuildingForPlayer(playerid, 2079, 2769.250, -2582.719, -16.454, 0.250);
	RemoveBuildingForPlayer(playerid, 2206, 2560.469, -2428.760, 20.020, 0.250);
	RemoveBuildingForPlayer(playerid, 2207, 2560.469, -2428.760, 20.020, 0.250);
	RemoveBuildingForPlayer(playerid, 2268, 2692.280, -2500.000, 20.964, 0.250);
	RemoveBuildingForPlayer(playerid, 2272, 2692.280, -2500.000, 20.964, 0.250);
	RemoveBuildingForPlayer(playerid, 2269, 2709.159, -2575.889, 20.964, 0.250);
	RemoveBuildingForPlayer(playerid, 2273, 2709.159, -2575.889, 20.964, 0.250);
	RemoveBuildingForPlayer(playerid, 2313, 2570.860, -2377.659, 20.976, 0.250);
	RemoveBuildingForPlayer(playerid, 2314, 2570.860, -2377.659, 20.976, 0.250);
	RemoveBuildingForPlayer(playerid, 2321, 2549.770, -2255.669, 20.951, 0.250);
	RemoveBuildingForPlayer(playerid, 2322, 2549.770, -2255.669, 20.951, 0.250);
	RemoveBuildingForPlayer(playerid, 1916, 2307.889, -1817.439, -3.999, 0.250);
	RemoveBuildingForPlayer(playerid, 1919, 2307.889, -1817.439, -3.999, 0.250);
	RemoveBuildingForPlayer(playerid, 1917, 2438.550, -1820.449, -6.036, 0.250);
	RemoveBuildingForPlayer(playerid, 1920, 2438.550, -1820.449, -6.036, 0.250);
	RemoveBuildingForPlayer(playerid, 1926, 2344.250, -1809.150, 28.969, 0.250);
	RemoveBuildingForPlayer(playerid, 1928, 2344.250, -1809.150, 28.969, 0.250);
	RemoveBuildingForPlayer(playerid, 2060, 2721.659, -2285.439, 63.872, 0.250);
	RemoveBuildingForPlayer(playerid, 2061, 2721.659, -2285.439, 63.872, 0.250);
	RemoveBuildingForPlayer(playerid, 2065, 2737.820, -2448.800, 20.688, 0.250);
	RemoveBuildingForPlayer(playerid, 2066, 2737.820, -2448.800, 20.688, 0.250);
	RemoveBuildingForPlayer(playerid, 2067, 2716.750, -2454.020, 21.263, 0.250);
	RemoveBuildingForPlayer(playerid, 2068, 2716.750, -2454.020, 21.263, 0.250);
	RemoveBuildingForPlayer(playerid, 2297, 2130.110, -1970.650, 24.455, 0.250);
	RemoveBuildingForPlayer(playerid, 2305, 2130.110, -1970.650, 24.455, 0.250);
	RemoveBuildingForPlayer(playerid, 2298, 2130.169, -1970.510, 43.536, 0.250);
	RemoveBuildingForPlayer(playerid, 2306, 2130.169, -1970.510, 43.536, 0.250);
	RemoveBuildingForPlayer(playerid, 2299, 2130.110, -1970.650, 73.764, 0.250);
	RemoveBuildingForPlayer(playerid, 2307, 2130.110, -1970.650, 73.764, 0.250);
	RemoveBuildingForPlayer(playerid, 2300, 2130.110, -1970.650, 125.968, 0.250);
	RemoveBuildingForPlayer(playerid, 2308, 2130.110, -1970.650, 125.968, 0.250);
	RemoveBuildingForPlayer(playerid, 2301, 2130.149, -1970.640, 187.259, 0.250);
	RemoveBuildingForPlayer(playerid, 2309, 2130.149, -1970.640, 187.259, 0.250);
	RemoveBuildingForPlayer(playerid, 2302, 2130.110, -1970.650, 219.494, 0.250);
	RemoveBuildingForPlayer(playerid, 2310, 2130.110, -1970.650, 219.494, 0.250);
	RemoveBuildingForPlayer(playerid, 2304, 2130.110, -1970.650, 186.382, 0.250);
	RemoveBuildingForPlayer(playerid, 2312, 2130.110, -1970.650, 186.382, 0.250);
	RemoveBuildingForPlayer(playerid, 2069, 2716.750, -2454.020, 21.263, 0.250);
	//yjStepic
	RemoveBuildingForPlayer(playerid, 1228, 1863.5000, -2008.4200, 31.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, 1872.7600, -2007.9100, 31.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, 1870.6801, -2008.1801, 31.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, 1868.1100, -2008.2400, 31.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, 1865.3300, -2007.9700, 31.1700, 0.25);
	RemoveBuildingForPlayer(playerid, 1282, 1869.3300, -2008.0000, 31.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1282, 1866.7300, -2007.9700, 31.6000, 0.25);

	//yj2019
	RemoveBuildingForPlayer(playerid, 1982, 2380.5000, -1679.7400, 21.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1302, 2389.0100, -1839.2800, 20.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 1209, 2388.8601, -1836.5000, 20.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 10009, 2388.8701, -1833.7100, 20.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 10010, 2388.7000, -1830.9399, 21.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 10011, 2388.7200, -1828.1400, 21.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 10012, 2388.9600, -1826.0699, 21.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 10013, 2388.9299, -1823.3300, 21.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 10016, 2388.0100, -1842.9000, 20.8400, 0.25);
	RemoveBuildingForPlayer(playerid, 10018, 2388.0901, -1848.5900, 20.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 10019, 2388.7600, -1854.5900, 20.8700, 0.25);
	//svetofor
	//Yj2019
	RemoveBuildingForPlayer(playerid, 2317, 2529.9500, -2395.3000, 20.9690, 0.25);
	RemoveBuildingForPlayer(playerid, 2318, 2529.9500, -2395.3000, 20.9690, 0.25);
	//yj 2019 der2 zabori
	RemoveBuildingForPlayer(playerid, 1867, 1815.2000, -2441.5200, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 1871, 1815.2000, -2441.5200, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2552.8401, -2067.6299, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2561.1201, -2080.3401, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2568.7800, -2080.2000, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2577.5901, -2080.6001, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 2576.5200, -2063.9099, 26.9083, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1845.0300, -2392.4800, 15.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1838.5200, -2378.8101, 15.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1833.8500, -2366.6499, 15.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1829.1801, -2354.8601, 15.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1823.5800, -2341.3201, 15.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1818.3000, -2328.0601, 15.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1711, 1812.6200, -2314.1899, 15.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1761, 2556.0000, -2064.5601, 20.9200, 0.25);
	RemoveBuildingForPlayer(playerid, 1761, 2567.8701, -2078.5601, 20.9200, 0.25);
	RemoveBuildingForPlayer(playerid, 1761, 2558.0801, -2064.1399, 20.9200, 0.25);
	RemoveBuildingForPlayer(playerid, 1761, 2559.8101, -2064.2400, 20.9200, 0.25);
	RemoveBuildingForPlayer(playerid, 1761, 2576.1899, -2081.7400, 20.9200, 0.25);
	RemoveBuildingForPlayer(playerid, 1761, 2569.5701, -2081.8401, 20.9200, 0.25);
	RemoveBuildingForPlayer(playerid, 627, 2569.0601, -2065.5701, 20.7377, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2566.5200, -2080.9099, 21.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 970, 2564.7700, -2080.9099, 21.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 803, 2555.9099, -2083.6101, 21.5571, 0.25);
	RemoveBuildingForPlayer(playerid, 2386, 2415.9600, -2516.3999, 21.2022, 0.25);
	RemoveBuildingForPlayer(playerid, 2390, 2523.0701, -2552.7700, 21.2022, 0.25);
	RemoveBuildingForPlayer(playerid, 644, 2618.1499, -2244.1001, 20.2318, 0.25);
	RemoveBuildingForPlayer(playerid, 644, 2617.9800, -2264.4500, 20.2318, 0.25);
	RemoveBuildingForPlayer(playerid, 644, 2618.0901, -2308.0300, 20.2318, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2617.6299, -2286.0300, 19.6931, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2617.3101, -2325.2600, 19.6931, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2617.8301, -2356.0801, 19.6931, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2616.5200, -2413.7600, 19.6931, 0.25);
	RemoveBuildingForPlayer(playerid, 644, 2617.8701, -2339.8301, 20.2318, 0.25);
	RemoveBuildingForPlayer(playerid, 644, 2618.6499, -2373.5701, 20.2318, 0.25);
	RemoveBuildingForPlayer(playerid, 644, 2618.2700, -2392.7700, 20.2318, 0.25);
	RemoveBuildingForPlayer(playerid, 644, 2617.8201, -2228.0801, 20.2318, 0.25);
	RemoveBuildingForPlayer(playerid, 645, 2617.4199, -2212.9399, 19.6931, 0.25);
	//yj derevo 2019
	RemoveBuildingForPlayer(playerid, 2387, 2316.5601, -2527.5300, 21.2022, 0.25);
	RemoveBuildingForPlayer(playerid, 2388, 2269.7700, -2602.4500, 21.2022, 0.25);
	RemoveBuildingForPlayer(playerid, 2389, 2419.2900, -2601.6201, 21.2022, 0.25);
	//YJ
	RemoveBuildingForPlayer(playerid, 2617, 2311.1101, -1925.3101, 21.9500, 0.25);
	RemoveBuildingForPlayer(playerid, 1923, 2353.0000, -1719.9399, 24.1812, 0.25);
	RemoveBuildingForPlayer(playerid, 1925, 2349.3000, -1719.9399, 24.1812, 0.25);
	RemoveBuildingForPlayer(playerid, 1762, 2598.5901, -1551.0900, 22.3400, 0.25);
	RemoveBuildingForPlayer(playerid, 1762, 2598.5200, -1532.1100, 22.3400, 0.25);
	RemoveBuildingForPlayer(playerid, 1762, 2597.6001, -1535.4100, 21.3400, 0.25);
	RemoveBuildingForPlayer(playerid, 2139, 2604.2500, -1542.2900, 22.9463, 0.25);
	RemoveBuildingForPlayer(playerid, 2613, 2321.7400, -1923.1100, 20.9550, 0.25);
	RemoveBuildingForPlayer(playerid, 2614, 2321.7400, -1923.1100, 20.9550, 0.25);
	RemoveBuildingForPlayer(playerid, 2618, 2280.9399, -2102.7500, 21.2630, 0.25);
	RemoveBuildingForPlayer(playerid, 2619, 2280.9399, -2102.7500, 21.2630, 0.25);
	RemoveBuildingForPlayer(playerid, 2624, 2261.4800, -2099.5300, 22.0130, 0.25);
	RemoveBuildingForPlayer(playerid, 2622, 2280.9399, -2102.7500, 21.2630, 0.25);
	RemoveBuildingForPlayer(playerid, 2623, 2280.9399, -2102.7500, 21.2630, 0.25);
	//Aaeuiiaieueee
	RemoveBuildingForPlayer(playerid, 1228, 2771.989, -2363.179, 21.298, 0.250);
	RemoveBuildingForPlayer(playerid, 1228, 2768.750, -2363.189, 21.298, 0.250);
	RemoveBuildingForPlayer(playerid, 1228, 2765.620, -2363.300, 21.298, 0.250);
	RemoveBuildingForPlayer(playerid, 1228, 2762.300, -2363.340, 21.298, 0.250);
	//Aiia eiieo?n
	RemoveBuildingForPlayer(playerid, 9212, 2276.187, 1463.693, 10.844, 0.250);
	RemoveBuildingForPlayer(playerid, 9212, 2245.347, 1431.221, 10.844, 0.250);
	RemoveBuildingForPlayer(playerid, 9212, 2199.764, 1419.127, 10.844, 0.250);
	RemoveBuildingForPlayer(playerid, 9212, 2219.604, 1473.741, 10.844, 0.250);
	//Aiia A?iey
	RemoveBuildingForPlayer(playerid, 9212, 2276.1873, 1463.6937, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2245.3472, 1431.2218, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2199.7642, 1419.1273, 10.8443, 0.25);
	RemoveBuildingForPlayer(playerid, 9212, 2219.6040, 1473.7412, 10.8443, 0.25);
	// O??uia
	RemoveBuildingForPlayer(playerid, 1785, -1700.4301, -2833.6399, 14.7100, 0.25);
	RemoveBuildingForPlayer(playerid, 1227, -1700.6200, -2834.1399, 13.9000, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, -1701.8900, -2809.0901, 13.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, -1703.8600, -2808.1399, 13.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, -1700.0900, -2797.4299, 12.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, -1701.6801, -2796.3999, 12.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, -1691.4500, -2792.0601, 11.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1228, -1692.9500, -2791.0500, 11.6000, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1701.1400, -2808.0901, 13.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1702.9000, -2806.9800, 13.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1699.2000, -2796.0000, 12.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1700.3000, -2794.7000, 12.5500, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1690.8000, -2790.6699, 11.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1692.2400, -2789.7100, 11.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1717.2900, -2868.2700, 13.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1718.4100, -2867.1699, 13.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1716.4000, -2866.7700, 13.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1717.7300, -2865.6299, 13.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1719.9900, -2866.9600, 13.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1717.0800, -2867.7600, 15.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1717.0800, -2865.9500, 15.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1718.7400, -2866.9900, 15.1500, 0.25);
	RemoveBuildingForPlayer(playerid, 1224, -1717.5400, -2867.2000, 16.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1722.9900, -2863.9199, 13.7350, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1722.6500, -2863.0500, 13.7350, 0.25);
	RemoveBuildingForPlayer(playerid, 1225, -1723.5900, -2863.0500, 13.7350, 0.25);
	RemoveBuildingForPlayer(playerid, 3169, -1794.5699, -2869.5400, 14.1200, 0.25);
	RemoveBuildingForPlayer(playerid, 3169, -1772.2500, -2858.3301, 14.1200, 0.25);
	RemoveBuildingForPlayer(playerid, 3169, -1750.1400, -2846.0200, 14.1200, 0.25);
	RemoveBuildingForPlayer(playerid, 3169, -1749.8300, -2857.5200, 14.1200, 0.25);
	RemoveBuildingForPlayer(playerid, 3169, -1725.3199, -2849.5100, 14.2700, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -1783.4600, -2861.7300, 14.1400, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -1777.0000, -2867.7200, 14.1400, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -1773.3500, -2868.3501, 14.1400, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -1749.0100, -2840.8301, 14.1400, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -1733.1600, -2857.5000, 14.4400, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -1730.3600, -2859.0500, 14.4400, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -1735.1000, -2859.0701, 14.4400, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -1912.6000, -2782.1399, 4.6610, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -1862.8500, -2749.6299, 4.6610, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -1657.6801, -2799.6799, 9.6610, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -1912.6000, -2782.1399, 4.6610, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -1862.8500, -2749.6299, 4.6610, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -1657.6801, -2799.6799, 9.6610, 0.25);
	// iiaa?ee
	RemoveBuildingForPlayer(playerid, 2053, 2723.5400, -1593.3199, 17.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 2055, 2723.5400, -1593.3199, 17.4700, 0.25);
	RemoveBuildingForPlayer(playerid, 2054, 2723.6201, -1593.3700, 16.9900, 0.25);
	//MAP
	RemoveBuildingForPlayer(playerid, 4030, -86.0283, 960.4030, 25.7900, 0.25);
	RemoveBuildingForPlayer(playerid, 4031, -86.0283, 960.4030, 25.7900, 0.25);
	RemoveBuildingForPlayer(playerid, 4030, -141.4970, 987.1750, 25.7900, 0.25);
	RemoveBuildingForPlayer(playerid, 4031, -141.4970, 987.1750, 25.7900, 0.25);
	RemoveBuildingForPlayer(playerid, 4100, -318.0140, 815.8190, 20.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 474.3970, 757.1430, 10.8000, 0.25);
	RemoveBuildingForPlayer(playerid, 4384, -317.8350, 798.0310, 17.4423, 0.25);
	RemoveBuildingForPlayer(playerid, 4385, -317.8350, 798.0310, 17.4423, 0.25);
	RemoveBuildingForPlayer(playerid, 4595, 160.2700, 350.4070, 9.5400, 0.25);
	RemoveBuildingForPlayer(playerid, 4593, 174.3860, 475.2590, 10.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 4585, 80.7600, 412.5160, 8.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 4586, 215.6800, 419.5790, 12.0600, 0.25);
	RemoveBuildingForPlayer(playerid, 4596, 177.6010, 437.0190, 10.1300, 0.25);
	RemoveBuildingForPlayer(playerid, 4590, 164.0910, 399.0950, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4591, 212.2400, 427.0510, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4592, 202.8200, 392.6640, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4587, 157.9500, 426.1000, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4598, 160.2700, 350.4070, 9.5400, 0.25);
	RemoveBuildingForPlayer(playerid, 4599, 174.3860, 475.2590, 10.0200, 0.25);
	RemoveBuildingForPlayer(playerid, 4600, 80.7600, 412.5160, 8.9700, 0.25);
	RemoveBuildingForPlayer(playerid, 4601, 215.6800, 419.5790, 12.0600, 0.25);
	RemoveBuildingForPlayer(playerid, 4602, 177.6010, 437.0190, 10.1300, 0.25);
	RemoveBuildingForPlayer(playerid, 4603, 164.0910, 399.0950, 10.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4604, 212.2400, 427.0510, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4605, 202.8200, 392.6640, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4606, 157.9500, 426.1000, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4589, 157.9500, 426.1000, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4597, 177.6000, 437.0160, 10.1300, 0.25);
	RemoveBuildingForPlayer(playerid, 4594, 98.9300, 373.9400, 9.4500, 0.25);
	RemoveBuildingForPlayer(playerid, 4588, 157.9500, 426.1000, 11.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 4107, 476.4520, 754.0520, 11.1300, 0.25);
	RemoveBuildingForPlayer(playerid, 4301, -110.8870, 993.8100, 16.6600, 0.25);
	RemoveBuildingForPlayer(playerid, 4300, -110.8870, 993.8100, 16.6600, 0.25);
	RemoveBuildingForPlayer(playerid, 4633, 123.4830, 485.5470, 9.8669, 0.25);
	RemoveBuildingForPlayer(playerid, 4634, 123.4830, 485.5470, 9.8669, 0.25);
	RemoveBuildingForPlayer(playerid, 4635, 132.0850, 449.5060, 9.8570, 0.25);
	RemoveBuildingForPlayer(playerid, 4636, 133.6660, 452.0860, 9.8570, 0.25);
	RemoveBuildingForPlayer(playerid, 5258, 2493.7000, -2.0000, 31.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5259, 2500.5000, -186.0000, 3.3000, 0.25);
	RemoveBuildingForPlayer(playerid, 5308, 2494.1499, -1175.0300, 0.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5312, 2494.1499, -1175.0300, 0.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 5307, 2496.6101, -1182.1300, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 5311, 2496.6101, -1182.1300, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 5307, 2490.6299, -1182.1300, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 5311, 2490.6299, -1182.1300, 0.0010, 0.25);
	RemoveBuildingForPlayer(playerid, 5310, 2490.6299, -1182.1300, 23.1655, 0.25);
	RemoveBuildingForPlayer(playerid, 5310, 2496.6101, -1182.1300, 23.1655, 0.25);
	RemoveBuildingForPlayer(playerid, 5309, 2493.8101, -1182.1300, 23.1655, 0.25);
	RemoveBuildingForPlayer(playerid, 3631, 1032.6100, -1975.7800, 37.9572, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 182.7810, 403.1050, 26.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 166.4060, 409.4370, 26.2000, 0.25);
	RemoveBuildingForPlayer(playerid, 1503, 143.2740, 401.8980, 9.8500, 0.25);
	RemoveBuildingForPlayer(playerid, 8701, -2343.9700, 64.7576, 21.9156, 0.25);
	RemoveBuildingForPlayer(playerid, 3604, -2054.2700, -70.1949, 30.7000, 0.25);
	RemoveBuildingForPlayer(playerid, 9149, 2284.8149, 1396.0011, 12.3876, 0.25);
	RemoveBuildingForPlayer(playerid, 9178, 2284.8149, 1396.0011, 12.3876, 0.25);
	RemoveBuildingForPlayer(playerid, 9199, 2281.7400, 1367.1500, 11.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 9200, 2289.2800, 1367.1600, 11.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 9207, 2226.9299, 1359.9900, 11.4267, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 2281.7405, 1365.9478, 10.3491, 0.25);
	RemoveBuildingForPlayer(playerid, 11102, 860.2158, 1.1323, 12.7689, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 797.0530, -231.5886, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 767.6901, -220.1202, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 712.3256, -198.9319, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 682.5731, -187.5672, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 834.5443, -246.1188, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 717.5416, -141.4387, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 729.0078, -111.8763, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 740.2495, -82.5770, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 683.4283, -127.9228, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 694.8917, -98.6083, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 706.1500, -69.4475, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 725.9269, -19.0621, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 737.2827, 10.7874, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 748.4619, 39.9554, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 759.8057, -31.9969, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 771.0947, -2.4011, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 782.3214, 26.9499, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 802.9233, -174.1147, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 814.1903, -144.5048, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 825.5109, -115.2982, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 770.6974, -161.6378, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 781.9082, -132.0103, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 793.1629, -102.7961, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 812.6694, -52.2020, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 823.8727, -22.8442, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 834.9678, 6.6639, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 845.0190, -64.4148, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 856.2837, -35.0464, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 867.5449, -5.8232, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 897.6749, -84.7153, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 909.0295, -55.4090, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 920.3257, -26.2709, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 878.4620, -135.2326, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 867.1016, -164.8400, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 855.8439, -194.2224, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 938.0684, 25.8959, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 888.4863, 44.8628, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11103, 858.9236, 56.4223, 15.6605, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 849.5472, -224.7169, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 878.2258, -150.1279, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 906.7283, -75.9205, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 935.7023, -0.8685, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 964.9340, 75.3062, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 866.1331, 25.7889, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 798.1181, 52.0191, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 731.3254, 77.6587, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 703.3102, 4.6651, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 675.2588, -68.4214, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 645.3513, -146.4137, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 780.7320, -198.3090, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 711.6873, -171.8860, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 735.8809, -97.9064, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 750.4540, -5.9162, 11.5065, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 843.3190, -19.9868, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 820.6578, -79.9695, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 795.7581, -147.4074, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 896.0292, 95.1668, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 830.6588, 123.0228, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 763.6789, 148.8484, 11.5165, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 1061.8950, 120.2193, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 1032.7435, 44.1018, 11.5265, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 1001.8014, -30.7608, 11.5390, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 834.6801, -263.3945, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 764.6735, -236.5108, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 696.9841, -210.6322, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 630.5070, -185.1269, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 608.5908, -135.9996, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 635.2809, -66.1247, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 648.3093, -138.4953, 11.5065, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 883.7263, -241.5860, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 910.5254, -171.7835, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 937.1852, -102.3387, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 962.1610, -37.2084, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 986.9395, -69.4522, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 11101, 1035.9609, -47.6300, -29.8965, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 1048.2954, 72.0703, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 1010.6616, 13.5105, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 989.1190, -31.8195, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 970.1533, -43.1597, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 933.3990, -78.4883, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 910.5197, -135.5436, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 889.8358, -190.1762, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 627.7122, -125.8141, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 649.5656, -65.9569, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 672.7869, -5.3927, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 697.5796, 54.6137, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 724.4567, 116.3784, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 775.9423, 126.3706, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 824.1891, 93.7783, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 883.6245, 81.6161, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 956.2979, 54.8293, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 974.2432, 46.0130, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 1008.4921, 102.4151, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 1032.1528, 138.2639, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 916.7050, 48.9255, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 835.3588, 79.3618, 8.1893, 0.25);
	RemoveBuildingForPlayer(playerid, 4898, 641.4835, -166.3612, 8.0893, 0.25);
	RemoveBuildingForPlayer(playerid, 726, 744.8056, -198.3825, 11.4693, 0.25);
	RemoveBuildingForPlayer(playerid, 726, 861.7106, -249.3215, 11.4693, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 947.6669, 17.3058, 11.3771, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 924.0349, 18.7776, 11.3771, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 896.1154, 33.3836, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 875.8215, 38.9529, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 866.8494, 48.1626, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 845.5693, 51.1940, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 827.0717, 20.6329, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 828.9861, -1.4869, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 817.7782, -7.8464, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 816.6193, -29.2408, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 807.4125, -39.1146, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 806.0695, -59.0899, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 849.0332, -57.0185, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 851.9496, -77.9161, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 862.7747, -48.6451, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 864.1124, -27.3052, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 875.7065, -18.7342, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 874.9749, 1.8914, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 912.2347, -9.9634, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 911.4244, -34.2100, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 900.9847, -41.2255, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 901.1097, -62.7385, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 890.5394, -71.0798, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 890.1225, -91.8554, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 869.7836, -120.9806, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 871.2889, -140.5953, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 861.1055, -148.2015, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 857.8188, -170.4784, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 846.6802, -180.2952, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 847.8330, -202.7388, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 847.8038, -236.1373, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 827.5356, -236.2478, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 813.7372, -242.7168, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 812.0433, -222.4159, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 791.9191, -221.8407, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 783.4182, -209.2818, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 760.4237, -211.9756, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 744.3149, -218.0106, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 729.5976, -210.5288, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 727.2659, -188.9043, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 705.1076, -188.7034, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 696.4026, -178.2118, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 677.5757, -178.3332, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 676.1691, -135.2915, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 676.1154, -113.3954, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 686.9116, -104.9291, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 687.2903, -83.4873, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 698.0798, -76.1834, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 698.1378, -55.2866, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 717.3446, -27.4845, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 717.2156, -5.9253, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 728.1431, 2.8634, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 729.1834, 24.1201, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 739.9028, 32.9250, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 739.8356, 53.2592, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 789.5317, 34.6065, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 789.6714, 13.6115, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 779.9377, 6.0061, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 780.4332, -15.1715, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 767.7791, -23.7041, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 767.4626, -45.1262, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 749.2138, -73.2692, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 748.0422, -95.2846, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 738.2656, -103.8411, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 736.7396, -124.6350, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 726.7016, -132.1878, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 725.8644, -153.9193, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 761.8826, -169.2020, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 763.2875, -148.2512, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 774.9844, -138.3714, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 775.1011, -117.7889, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 786.0977, -109.2263, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 785.8672, -88.1780, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 834.6952, -104.7283, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 833.2900, -126.9410, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 823.1532, -135.5876, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 820.2635, -157.6229, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 811.1831, -166.3179, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 635, 809.5859, -186.6654, 11.5171, 0.25);
	RemoveBuildingForPlayer(playerid, 4851, 752.3961, 88.7940, 14.0814, 0.25);
	//Южный
	RemoveBuildingForPlayer(playerid, 2204, 2560.47, -2428.76, 20.02, 0.25);
	RemoveBuildingForPlayer(playerid, 2315, 2529.95, -2395.30, 20.97, 0.25);
	RemoveBuildingForPlayer(playerid, 1996, 2435.76, -2216.65, 21.00, 0.25);
	RemoveBuildingForPlayer(playerid, 1996, 2366.66, -2184.37, 21.00, 0.25);
	RemoveBuildingForPlayer(playerid, 1996, 2295.05, -2233.37, 21.00, 0.25);
	RemoveBuildingForPlayer(playerid, 1996, 2435.76, -2386.68, 21.00, 0.25);
    //Вырезанный
/*	RemoveBuildingForPlayer(playerid, 689, 394.3780, -2639.3501, 23.3970, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 490.2220, -2618.7500, 25.4117, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 550.5870, -2616.5100, 30.5508, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 641.2680, -2533.1799, 29.7390, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 681.6220, -2609.0200, 30.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 7.5356, -2271.9600, 34.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -89.8464, -2531.2000, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 26.9702, -2535.3701, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 65.4017, -2435.8899, 39.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 98.3637, -2533.0901, 34.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 186.2460, -2461.3899, 34.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 327.6920, -2504.5400, 34.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 468.6450, -2539.7200, 31.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 544.1320, -2523.6201, 33.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 603.0770, -2522.8601, 34.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 728.1290, -2543.6799, 31.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 779.2870, -2520.9500, 37.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 37.8039, -2223.2400, 37.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -19.6362, -2240.7000, 36.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -36.2942, -2529.0000, 33.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 85.8395, -2479.0100, 37.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 156.6820, -2506.7000, 39.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -45.5740, -2474.2000, 33.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 14.9455, -2479.1599, 35.1240, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 343.6120, -2446.0701, 34.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 672.6890, -2481.8201, 38.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 703.4710, -2437.0701, 36.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 763.3490, -2460.8701, 37.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -84.6241, -2377.9900, 34.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 32.9259, -2388.4700, 34.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 81.3997, -2366.7000, 35.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -5.7254, -2427.0701, 33.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 279.9840, -2334.3501, 38.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 303.5590, -2381.0601, 36.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 356.8680, -2363.3501, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 613.1720, -2393.0300, 36.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 785.3490, -2352.1699, 37.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 800.3440, -2430.2900, 36.6240, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 168.9740, -2270.0801, 40.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 220.0920, -2276.3101, 46.0615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 268.2760, -2300.3601, 42.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 340.0370, -2315.5901, 35.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 375.1070, -2287.0300, 35.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 550.3540, -2288.7400, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 597.4790, -2262.1899, 34.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 642.2640, -2305.7500, 36.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 813.6350, -2277.6799, 35.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 159.6350, -2210.0500, 33.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 263.4810, -2228.8401, 38.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 320.8730, -2249.4800, 43.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 421.2560, -2267.4099, 34.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 532.9190, -2226.5000, 35.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 480.5160, -2268.9299, 35.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 576.3320, -2205.4900, 34.6240, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 673.9780, -2199.0400, 37.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 771.7140, -2231.3899, 36.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 816.1280, -2192.5000, 37.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 231.1940, -2192.2100, 34.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 420.4290, -2209.4800, 45.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 470.6180, -2204.6699, 43.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 434.4090, -2155.4099, 38.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 620.5730, -2184.3201, 36.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 642.5960, -2112.8899, 36.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 698.4020, -2141.5000, 37.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 782.1920, -2110.7600, 37.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 850.8500, -2131.4500, 34.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 433.3400, -2015.8300, 35.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 462.6360, -2084.6399, 33.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 484.0150, -2129.9800, 36.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 596.5500, -2071.1001, 33.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 728.4490, -2068.9099, 35.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 781.5730, -2167.1101, 38.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 835.0930, -2076.8799, 37.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 887.0970, -2064.8501, 36.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 483.9740, -1992.0699, 34.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 543.7960, -1989.6700, 34.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 675.6500, -1970.1801, 36.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 960.0370, -1983.3101, 35.6240, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 613.2860, -1977.7100, 35.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -62.7652, -2332.6201, 34.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -127.3160, -2417.8301, 37.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -155.9180, -2464.4299, 35.1240, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -209.2820, -2497.9299, 37.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -215.0260, -2444.7100, 39.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 237.8370, -2505.5200, 32.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 282.6180, -2460.7400, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 440.0990, -2621.6299, 30.1240, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 124.3450, -2456.8601, 33.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 611.7390, -2611.5100, 35.6240, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 605.4400, -2474.3401, 35.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 659.4690, -2415.3899, 38.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 640.7200, -2360.5601, 36.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 587.9480, -2326.2900, 33.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 637.8980, -2235.4500, 35.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 373.8850, -2493.4600, 33.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 408.7900, -2534.1599, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 229.9230, -2406.9900, 39.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 187.0280, -2323.0500, 39.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 224.4260, -2357.5601, 38.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 111.6720, -2266.8101, 34.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 83.7165, -2309.3601, 33.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 134.0620, -2327.8101, 36.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 908.5400, -2012.6500, 35.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 837.6800, -2028.5000, 35.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 775.1200, -2049.2500, 34.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 661.4380, -2074.7300, 36.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 587.8890, -2136.7800, 35.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 536.1950, -2165.3401, 38.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 535.9870, -2111.7700, 35.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 532.0850, -2075.6499, 33.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 761.3140, -2400.6599, 37.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 361.3720, -2231.1299, 44.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 283.8780, -2162.1399, 34.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 341.2130, -2152.5901, 35.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 326.0990, -2193.6201, 37.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 383.0000, -2170.3701, 39.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 399.4060, -2114.0500, 34.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 689, 920.0360, -1665.9600, 41.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 394.3780, -2639.3501, 23.3970, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 490.2220, -2618.7500, 25.4117, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 550.5870, -2616.5100, 30.5508, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 641.2680, -2533.1799, 29.7390, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 681.6220, -2609.0200, 30.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 7.5356, -2271.9600, 34.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -89.8464, -2531.2000, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 26.9702, -2535.3701, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 65.4017, -2435.8899, 39.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 98.3637, -2533.0901, 34.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 186.2460, -2461.3899, 34.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 327.6920, -2504.5400, 34.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 357.7830, -2558.6001, 31.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 468.6450, -2539.7200, 31.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 544.1320, -2523.6201, 33.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 603.0770, -2522.8601, 34.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 728.1290, -2543.6799, 31.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 779.2870, -2520.9500, 37.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 37.8039, -2223.2400, 37.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -19.6362, -2240.7000, 36.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -36.2942, -2529.0000, 33.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 85.8395, -2479.0100, 37.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 156.6820, -2506.7000, 39.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -45.5740, -2474.2000, 33.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 14.9455, -2479.1599, 35.1240, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 343.6120, -2446.0701, 34.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 672.6890, -2481.8201, 38.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 703.4710, -2437.0701, 36.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 763.3490, -2460.8701, 37.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 30.3488, -2178.1599, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -84.6241, -2377.9900, 34.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 32.9259, -2388.4700, 34.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 81.3997, -2366.7000, 35.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -5.7254, -2427.0701, 33.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 279.9840, -2334.3501, 38.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 303.5590, -2381.0601, 36.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 356.8680, -2363.3501, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 613.1720, -2393.0300, 36.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 785.3490, -2352.1699, 37.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 800.3440, -2430.2900, 36.6240, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 168.9740, -2270.0801, 40.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 220.0920, -2276.3101, 46.0615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 268.2760, -2300.3601, 42.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 340.0370, -2315.5901, 35.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 375.1070, -2287.0300, 35.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 550.3540, -2288.7400, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 597.4790, -2262.1899, 34.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 642.2640, -2305.7500, 36.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 813.6350, -2277.6799, 35.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 159.6350, -2210.0500, 33.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 263.4810, -2228.8401, 38.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 320.8730, -2249.4800, 43.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 421.2560, -2267.4099, 34.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 532.9190, -2226.5000, 35.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 480.5160, -2268.9299, 35.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 576.3320, -2205.4900, 34.6240, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 673.9780, -2199.0400, 37.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 771.7140, -2231.3899, 36.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 816.1280, -2192.5000, 37.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 231.1940, -2192.2100, 34.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 420.4290, -2209.4800, 45.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 470.6180, -2204.6699, 43.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 434.4090, -2155.4099, 38.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 620.5730, -2184.3201, 36.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 642.5960, -2112.8899, 36.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 698.4020, -2141.5000, 37.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 782.1920, -2110.7600, 37.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 850.8500, -2131.4500, 34.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 433.3400, -2015.8300, 35.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 462.6360, -2084.6399, 33.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 484.0150, -2129.9800, 36.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 596.5500, -2071.1001, 33.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 728.4490, -2068.9099, 35.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 781.5730, -2167.1101, 38.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 835.0930, -2076.8799, 37.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 887.0970, -2064.8501, 36.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 483.9740, -1992.0699, 34.7490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 543.7960, -1989.6700, 34.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 675.6500, -1970.1801, 36.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 960.0370, -1983.3101, 35.6240, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 613.2860, -1977.7100, 35.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -68.5246, -2281.8101, 35.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -62.7652, -2332.6201, 34.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -127.3160, -2417.8301, 37.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -155.9180, -2464.4299, 35.1240, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -209.2820, -2497.9299, 37.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -215.0260, -2444.7100, 39.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 237.8370, -2505.5200, 32.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 282.6180, -2460.7400, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 440.0990, -2621.6299, 30.1240, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 124.3450, -2456.8601, 33.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 611.7390, -2611.5100, 35.6240, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 605.4400, -2474.3401, 35.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 659.4690, -2415.3899, 38.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 640.7200, -2360.5601, 36.3115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 587.9480, -2326.2900, 33.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 637.8980, -2235.4500, 35.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 373.8850, -2493.4600, 33.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 408.7900, -2534.1599, 33.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 229.9230, -2406.9900, 39.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 187.0280, -2323.0500, 39.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 224.4260, -2357.5601, 38.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 111.6720, -2266.8101, 34.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 83.7165, -2309.3601, 33.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 134.0620, -2327.8101, 36.8740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 908.5400, -2012.6500, 35.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 837.6800, -2028.5000, 35.9990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 775.1200, -2049.2500, 34.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 661.4380, -2074.7300, 36.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 587.8890, -2136.7800, 35.5615, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 536.1950, -2165.3401, 38.1865, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 535.9870, -2111.7700, 35.3740, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 532.0850, -2075.6499, 33.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 761.3140, -2400.6599, 37.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 361.3720, -2231.1299, 44.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 283.8780, -2162.1399, 34.8115, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 341.2130, -2152.5901, 35.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 326.0990, -2193.6201, 37.4365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 383.0000, -2170.3701, 39.4990, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 399.4060, -2114.0500, 34.2490, 0.25);
	RemoveBuildingForPlayer(playerid, 785, 920.0360, -1665.9600, 41.6865, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -121.5940, -2578.3701, 31.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -184.8060, -2594.9299, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -259.4990, -2537.5000, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -263.5860, -2486.6499, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -283.9980, -2444.5400, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -313.7880, -2515.9399, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -337.0930, -2481.6699, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -336.8920, -2444.2300, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -389.5260, -2455.8701, 32.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -442.2460, -2468.1001, 30.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -377.3310, -2531.3101, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -401.7240, -2500.9700, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -439.0990, -2546.5100, 31.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 689, -455.4110, -2500.7200, 28.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -121.5940, -2578.3701, 31.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -184.8060, -2594.9299, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -259.4990, -2537.5000, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -263.5860, -2486.6499, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -283.9980, -2444.5400, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -313.7880, -2515.9399, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -337.0930, -2481.6699, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -336.8920, -2444.2300, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -389.5260, -2455.8701, 32.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -442.2460, -2468.1001, 30.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -377.3310, -2531.3101, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -401.7240, -2500.9700, 33.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -439.0990, -2546.5100, 31.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 785, -455.4110, -2500.7200, 28.9365, 0.25);
	RemoveBuildingForPlayer(playerid, 5463, 674.1920, -2306.1799, 38.0819, 0.25);
	RemoveBuildingForPlayer(playerid, 5464, 674.1920, -2306.1799, 38.0819, 0.25);
	RemoveBuildingForPlayer(playerid, 5465, 674.1920, -2306.1799, 38.0819, 0.25);
	RemoveBuildingForPlayer(playerid, 5466, 674.1920, -2306.1799, 38.0819, 0.25);
	RemoveBuildingForPlayer(playerid, 5467, 674.1920, -2306.1799, 38.0819, 0.25);
	RemoveBuildingForPlayer(playerid, 5468, 674.1920, -2306.1799, 38.0819, 0.25);
	RemoveBuildingForPlayer(playerid, 5472, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5473, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5474, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5475, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5476, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5477, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5478, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5479, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5480, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5482, 671.8260, -2305.9700, 40.9575, 0.25);
	RemoveBuildingForPlayer(playerid, 5469, 730.1370, -2295.6101, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5469, 739.9130, -2319.2700, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5469, 678.9930, -2319.8701, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5469, 688.3190, -2294.6299, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5470, 714.3270, -2287.7500, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5470, 687.5110, -2319.7000, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5470, 728.5260, -2314.6699, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5470, 692.0450, -2281.0500, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5470, 736.3590, -2279.6499, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5470, 679.2620, -2284.4800, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5470, 708.0810, -2264.5000, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5471, 699.9060, -2271.8101, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5471, 714.4550, -2257.5500, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5471, 722.9180, -2274.0901, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5471, 730.9730, -2258.9600, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5471, 724.5060, -2240.4199, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5471, 698.6900, -2250.7400, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5471, 690.0290, -2263.0500, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 5471, 692.5650, -2320.1899, 35.5470, 0.25);
	RemoveBuildingForPlayer(playerid, 10185, 677.6090, -2306.0701, 42.8437, 0.25);*/
	return 1;
}

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[16];
	new ip_count = 0;
	foreach(new i: Player)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerIp(i,against_ip,16);
			if(!strcmp(against_ip,test_ip)) ip_count++;
		}
	}
	return ip_count;
}

forward check_banlist(playerid);
public check_banlist(playerid)
{
	new rows, fields;
	new unbandate, ban_type, vas[32], bool:ban, Dialog[600], str[200];
	cache_get_data(rows, fields);
	if(rows)
	{
		cache_get_field_content(0, "unbandate", vas); unbandate = strval(vas);
		if(unbandate - gettime() > 0) ban = true;
		ban_type = cache_get_field_content_int(0, "ban_type");
	}
	if(ban == true)
	{
		new data[15], whobanned[MAX_PLAYER_NAME], reason[32], timeban;
		cache_get_field_content(0, "bandate", data);
		cache_get_field_content(0, "unbandate", vas); unbandate = strval(vas);
		cache_get_field_content(0, "whobanned", whobanned);
		cache_get_field_content(0, "reason", reason);
		timeban = cache_get_field_content_int(0, "time");

		if(ban_type == 0)
		{
			strcat(Dialog, "{FFFFFF}");
			format(str, sizeof(str), "Ваш игровой ник: %s\n", GetName(playerid));
			strcat(Dialog, str);
			format(str, sizeof(str), "Заблокировал: %s\n", whobanned);
			strcat(Dialog, str);
			format(str, sizeof(str), "Дата блокировки: %s\n", data);
			strcat(Dialog, str);
			format(str, sizeof(str), "Срок блокировки: %d дней\n", timeban);
			strcat(Dialog, str);
			format(str, sizeof(str), "Аккаунт будет разблокирован: %s\n", date("%dd.%mm.%yyyy в %hh:%ii:%ss",unbandate));
			strcat(Dialog, str);
			format(str, sizeof(str), "Причина блокировки: %s", reason);
			strcat(Dialog, str);

			ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Блокировка аккаунта", Dialog, "Закрыть", "");
			Kick(playerid);
		}
		if(ban_type == 1)
		{
			strcat(Dialog, "{FFFFFF}");
			strcat(Dialog, "К сожалению, Вы получили бессрочную блокировку на сервере\n");
			strcat(Dialog, "Это значит, что Вы больше никогда не будете иметь доступа к серверу\n");
			strcat(Dialog, "Если Вы считаете, что Ваш аккаунт был заблокирован по ошибке, \n");
			strcat(Dialog, "То Вы можете обжаловать это на форуме "SERVER_FORUM"\n\n");
			
			format(str, sizeof(str), "Ваш игровой ник: %s\n", GetName(playerid));
			strcat(Dialog, str);
			format(str, sizeof(str), "Заблокировал: %s\n", whobanned);
			strcat(Dialog, str);
			format(str, sizeof(str), "Дата блокировки: %s\n", data);
			strcat(Dialog, str);
			format(str, sizeof(str), "Причина блокировки: %s", reason);
			strcat(Dialog, str);

			ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Блокировка аккаунта", Dialog, "Закрыть", "");
			Kick(playerid);
		}
	}

	return 1;
}

stock SetPlayerDataToDefault(playerid)
{
	SetPVarInt(playerid, "USEDIALOGID", -1);
	SetPVarInt(playerid, "arendkey", -1);
	
	SetPVarInt(playerid, "AdminTeleport", 0);
	
	SetPVarInt(playerid, "reg_gender", 2);
	
	SetPVarInt(playerid, "dSelectAccesories_index", 0);
	SetPVarInt(playerid, "dSelectAccesories_g", 0);
	
	DrugEffect[playerid] = 0;
	drieltorka[playerid] = 1;
	
	Damage[playerid] 				= 0;
	DamageInfo[playerid] 			= 1;
	Kolokol[playerid] 				= 1;
	GeneralCard[playerid]           = 0;
	
	p_info[playerid][pSetWalk] = 0;
	p_info[playerid][pSetAnim] = 0;
	
	zakaz_player[playerid] = 0;
	
	g_player_driving_exam[playerid] = g_driving_exam_default_values;
	
	SetPlayerJobLoadItems(playerid, 0);
	SetPlayerTempJob(playerid, TEMP_JOB_NONE);
	SetPlayerTempJobState(playerid, TEMP_JOB_STATE_NONE);
	
	p_info[playerid][P_JOB_WAGE] = 0;
	p_info[playerid][P_JOB_CAR] = INVALID_VEHICLE_ID;
	p_info[playerid][P_END_JOB_TIMER] = -1;
	p_info[playerid][P_FACTORY_USE_DESK] = -1;
	
	SetPVarInt(playerid, "TrailerInfo", -1);
	SetPVarInt(playerid, "biz_id", -1);
	
	SetPVarInt(playerid, "CTOColors", 0);
	
	SetPVarInt(playerid, "boomBox", 0);
	
	p_info[playerid][pModelPhone] = 0;
	p_info[playerid][SoundSMS] = 0;
	p_info[playerid][SoundCall] = 0;
	
	AntiOnFootCrash{playerid} = 0;
	
	X_ar[playerid] = Y_ar[playerid] = Z_ar[playerid] = Virt_ar[playerid] = Int_ar[playerid] = 0;
	
	strmid(player_binder[playerid][0], "None", 0, strlen("None"), 128);
	strmid(player_binder[playerid][1], "None", 0, strlen("None"), 128);
	strmid(player_binder[playerid][2], "None", 0, strlen("None"), 128);
	strmid(player_binder[playerid][3], "None", 0, strlen("None"), 128);
	strmid(player_binder[playerid][4], "None", 0, strlen("None"), 128);
	
	for(new ac = 0; ac < 5; ac++)
	{
		acc_player[playerid][acc_object_id][ac] = -1;
		acc_player[playerid][acc_object_x][ac] 	= 0.0;
		acc_player[playerid][acc_object_y][ac] 	= 0.0;
		acc_player[playerid][acc_object_z][ac] 	= 0.0;
	}
	step_show_acc_box[playerid] = -1;
	count_acc_show[playerid] = 0;
	
	SetPVarInt(playerid, "slimit", 0);
	
	SetPVarInt(playerid, "MechanicPlayerID", -1);
	
	SetPVarInt(playerid, "BusRouteCheckpoint", 0);
   	SetPVarInt(playerid, "BusRouteMoney", 0);
	SetPVarInt(playerid, "BusRouteID", -1);
	SetPVarInt(playerid, "StartBusRoute", -1);
	
	SetPVarInt(playerid, "ChooseSkinNext", -1);
   	SetPVarInt(playerid, "ClosetWorkSkinNext", -1);
   	SetPVarInt(playerid, "MaxSkins", -1);
   	
   	SetPVarInt(playerid, "EnterChooseSkin", -1);
   	
   	p_info[playerid][pTaxiCash] = 0;
   	p_info[playerid][pTaxiTime] = 0;
   	TaxiTime[playerid] = 0;
	
	p_info[playerid][pRentHouse] = -1;
	
	p_info[playerid][Disease][0] = 0;
	p_info[playerid][Disease][1] = 0;
	p_info[playerid][Disease][2] = 0;
	
	playerVehicleEnter[playerid] = 0;
	playerVehicleEnterTime[playerid] = 0;
	
	playerSpawnTimer[playerid] = 0;
	playerSpawn{playerid} = 0;
	playerWarningCarShot{playerid} = 0;
	
	gLoadTime{playerid} = 0;
	
	playerWarningFly0{playerid} = 0;
	playerWarningFly2{playerid} = 0;
	
	playerWarningSpeed{playerid} = 0;
	playerWarningSpeedFoot{playerid} = 0;
	
	playerCheckFly[playerid] = 255;
	
	robbery_role[playerid] = 0;
	robbery_players[playerid] = -1;
	
	SetPVarInt(playerid, "RobberyPlayer", 0);

	for(new i = 0; i < 4; i++) robbery_name[playerid][i] = 0;
	
	for(new id = (AC_NULLWARN - 1); id >= 0; id--) playerNullWarningTimer[playerid][id] = 0;
	
	p_info[playerid][pRAZ] = 0;
	
	p_info[playerid][pRobbery] = 0;
	
	roulette_bet [ playerid ] = 0 ;
	roulette_number [ playerid ] = -1 ;
	SetPVarInt ( playerid, "cm_used", 0 ) ;
	SetPVarInt ( playerid, "krup", 0 );
	SetPVarInt ( playerid, "InGame", 0 ) ;
	
	SetPVarInt(playerid, "advert_count", 1);
	
	for ( new i = 0 ; i < 64 ; i ++ )
	{
		cm_ptd [ playerid ] [ i ] = PlayerText:-1 ;
	}
	
	for ( new j = 0 ; j < 54 ; j ++ )
	{
		ptd_sp [ playerid ] [ j ] = PlayerText:-1 ;
	}
	
	for ( new q = 0 ; q < 5 ; q ++ )
	{
	    action_ptd [ playerid ] [ q ] = PlayerText:-1;
	}
	
	for ( new z = 0 ; z < 4 ; z ++ )
	{
	    BoxPlayer [ playerid ] [ z ] = PlayerText:-1;
	}
	
	for ( new m = 0 ; m < 5 ; m ++ )
	{
	    BinderPlayer [ playerid ] [ m ] = PlayerText:-1;
	}
	
	for ( new x = 0 ; x < 39 ; x ++ )
	{
		LicPlayer [ playerid ] [ x ] = PlayerText:-1;
	}
	
	for ( new c = 0 ; c < 13 ; c ++ )
	{
	    taxi_td_player [ playerid ] [ c ] = PlayerText:-1;
	}
	
	for ( new b = 0 ; b < 43 ; b ++ )
	{
	    acc_td_player [ playerid ] [ b ] = PlayerText:-1;
	}
	
	action_types { playerid } = 0 ;
	action_step { playerid } = 0 ;
	action_key [ playerid ] = 0 ;
	
	FindStep { playerid } = 0 ;
	
	for(new i = 0; i < 12; i++)
	{
		GunPlayer[playerid][i][0] = 0;
		GunPlayer[playerid][i][1] = 0;
	}
	
	/*br_player[playerid][br_flag]	|= 1 << 0;
    br_player[playerid][br_flag]	|= 1 << 1;
    br_player[playerid][br_flag]	|= 1 << 2;
    br_player[playerid][br_flag]	|= 1 << 3;

    br_player[playerid][br_object_text][0] = INVALID_OBJECT;
   	br_player[playerid][br_object_text][1] = INVALID_OBJECT;

   	for(new bs = 0; bs < 25; bs++) br_player[playerid][br_objects][bs] = INVALID_OBJECT;

   	br_player[playerid][br_temp_pickup] = INVALID_OBJECT;*/
	
	SetPVarInt(playerid, "AnswerPlayerID", -1);
 	SetPVarInt(playerid, "AnswerPlayerTime", 0);
	
	p_info[playerid][pStats][0] = 0;
	p_info[playerid][pStats][1] = 0;
	p_info[playerid][pStats][2] = 0;
	p_info[playerid][pStats][4] = 0;
	p_info[playerid][pStats][5] = 0;
	p_info[playerid][pStats][6] = 0;
	p_info[playerid][pStats][7] = 0;
	p_info[playerid][pStats][8] = 0;
	p_info[playerid][pStats][9] = 0;
	p_info[playerid][P_Style][0] = 0;
	p_info[playerid][P_Style][1] = 0;
	p_info[playerid][P_Style][2] = 0;
	p_info[playerid][pJackCar] = 0;
	
	SetPVarInt(playerid, "ClickStyle", 0);
	SetPVarInt(playerid, "ClickWeight", 0);
	
	p_info[playerid][data_GARAGE] = INVALID_GARAGE_ID;
	
	SetPVarInt(playerid, "fuel_show", 1);
	SetPVarInt(playerid, "start_step", 1);
	SetPVarInt(playerid, "start_fuel", 1);
	SetPVarInt(playerid, "td_step", 1);
	SetPVarInt(playerid, "td_fuel", 1);
	
	SetPVarInt(playerid, "pHospitals", 0);
	
	SetPVarInt(playerid, "TryingVzlom", 0);
	SetPVarInt(playerid, "Procedure", 0);
	SetPVarInt(playerid, "NachaloCarJack", 0);
	SetPVarInt(playerid, "NormCar", 0);
	SetPVarInt(playerid, "SelectedSlotBuyingCar", 0);
	
	FuelVeh[playerid] = 0;
	
	p_info[playerid][data_CS_TEAM] = 0;
	p_info[playerid][data_CT_NUMBER] = 0;
	p_info[playerid][data_CT_VEH] = INVALID_VEHICLE_ID;
	
	walk_goto_me[playerid] = 0;
	
	PlayerAP[playerid] = 0.0;
	PlayerHP[playerid] = 0.0;
	AC_Healthtime[playerid] = unix+12+floatround(GetPlayerPing(playerid)/100);
	AC_Armourtime[playerid] = unix+12+floatround(GetPlayerPing(playerid)/100);
	
	SetPVarInt(playerid, "TaxiDriver", -1);
	SetPVarInt(playerid, "TaxiPassanger", -1);
	SetPVarInt(playerid, "TaxiStart", 0);
	SetPVarInt(playerid, "CallTaxi", 0);
	SetPVarInt(playerid, "CallMechanic", 0);
	SetPVarInt(playerid, "CallMedic", 0);
	SetPVarInt(playerid, "CallPolice", 0);
	SetPVarInt(playerid, "CallPlayerID", -1);
	
	SetPVarInt(playerid, "ChooseStyle", -1);
	SetPVarInt(playerid, "StartTraining", 0);
	SetPVarInt(playerid, "GYM_Bar", 0);
	SetPVarInt(playerid, "GYM_Dumbbells", 0);
	SetPVarInt(playerid, "GYM_Thread", 0);
	SetPVarInt(playerid, "GYM_Bike", 0);

	admin_attempt[playerid]                         =
	admin_ban_time[playerid]                        =
	admin_check_time[playerid]                      =
	p_info[playerid][pCity]                         =
	Shot[playerid]                                  =
	p_info[playerid][pWorkSalary]                   =
	p_info[playerid][pTimeHour]                     =
	p_info[playerid][pAFK]                          =
	gOnlinePlayer[playerid][0] 						=
	gOnlinePlayer[playerid][1] 						=
 	gOnlinePlayerAFK[playerid][0] 					=
	gOnlinePlayerAFK[playerid][1] 					=
	AdminInfo[playerid][admAlog]                    =
	AdminInfo[playerid][admGoto]                    =
	AdminInfo[playerid][admGethere]                 =
	AdminInfo[playerid][admSpectate]                =
	Ujahhs[playerid] 								=
	Medicines[playerid]								=
	pickupentered[playerid] 						=
	p_info[playerid][pTruckSkill] 						=
	p_info[playerid][pZakon] 							=
	p_info[playerid][pCheckCode] 						=
	p_info[playerid][pSprunk] 							=
	ChosenSkin[playerid] 							=
	SelectCharPlace[playerid] 						=
	p_info[playerid][pPhoneBalance] 					=
	PlayerLogTries[playerid] 						=
	PlayerStats[playerid] 							=
	ClothesRound[playerid]							=
	HousePrice[playerid] 							=
	InShop[playerid] 								=
	InShopSkin[playerid] 							=
	Oldskin2[playerid] 								=
	p_info[playerid][pAdmin] 							=
	p_info[playerid][pHelper] 							=
	p_info[playerid][pLeader] 							=
	p_info[playerid][pTempLeader]                       =
	p_info[playerid][pMember] 							=
	p_info[playerid][pRank] 							=
	ClosetSkins[playerid][0] 							=
	ClosetSkins[playerid][1] 							=
	ClosetSkins[playerid][2] 							=
	ClosetSkins[playerid][3] 							=
	ClosetSkins[playerid][4] 							=
	p_info[playerid][pMemberSkin] 						=
	p_info[playerid][pSex] 								=
	p_info[playerid][pID] 								=
	p_info[playerid][pWarn] 							=
	p_info[playerid][pCash] 							=
	p_info[playerid][pExp] 								=
	p_info[playerid][pMuted] 							=
	p_info[playerid][pAge] 								=
	p_info[playerid][pBank] 							=
	p_info[playerid][pArrestSpawn] 						=
	p_info[playerid][pJail] 							=
	p_info[playerid][pJailTime] 						=
	p_info[playerid][pWanted] 							=
	p_info[playerid][pWantedTime] 						=
	p_info[playerid][pDrugs] 							=
	p_info[playerid][pPatron] 							=
	p_info[playerid][pGunAmount] 						=
	p_info[playerid][pFamily] 							=
	p_info[playerid][pFamilySozd]                       =
	p_info[playerid][pFamilyZam]                        =
	p_info[playerid][pJob] 								=
	p_info[playerid][pMarried] 							=
	p_info[playerid][pPayCheck] 						=
	p_info[playerid][pCharity] 							=
	p_info[playerid][pVip] 								=
	p_info[playerid][pVipTime]							=
	p_info[playerid][pTime] 							=
	p_info[playerid][pCredits] 							=
	p_info[playerid][pTotalCredits] 					=
	p_info[playerid][pSkin][0] 							=
	p_info[playerid][pSkin][1] 							=
	p_info[playerid][pSkin][2] 							=
	p_info[playerid][pZakon] 							=
	p_info[playerid][pCheckCode] 						=
	p_info[playerid][pMailConfirmed]                    =
	p_info[playerid][pPhoneNumber]                      =
	p_info[playerid][pVoennik]                          =
	p_info[playerid][pCredit]							=
	p_info[playerid][pCreditMoney]						=
	p_info[playerid][pCopter]							=
	p_info[playerid][pCopterColor][0]					=
	p_info[playerid][pCopterColor][1]					=
	p_info[playerid][pCopter]							=
	p_info[playerid][pSpawnChange]						= 0;

	p_info[playerid][pInputCode]						=
	HouseOffer[playerid] 							=
	Mobile[playerid] 								=
	PlayerStats[playerid] 							= -1;

	StartGMTest[playerid]                           =
	PlayerDied[playerid]                    		=
	UseGPS[playerid] 								=
	FreezePlayer1[playerid]							=
	PlayerTied[playerid] 							=
	PlayerLogged[playerid] 							=
	AdminLogged[playerid] 							=
	TaxiON[playerid]                                =
	MedicON[playerid]                               =
	MechanicON[playerid]                            =
	PoliceON[playerid]                              =
	Ether[playerid] 								=
	EtherCall[0] 									=
	EtherCall[1] 									=
	EtherSms[0] 									=
	EtherSms[1] 									=
	EtherLive[playerid] 							=
	EtherCalled[playerid] 							= false;

	NameStats[playerid]                             =
	pCuff[playerid][pCuffer] 						=
	pCuff[playerid][pCuffee] 						=
	p_info[playerid][Spectating][0] 					=
	p_info[playerid][Spectating][1] 					=

	VehTest[playerid]                               =
	p_info[playerid][SalonCarID]                        =
	p_info[playerid][PlayerCopterID]					=
	p_info[playerid][pOwnableCar] 						= INVALID_VEHICLE_ID;

	p_info[playerid][pColor]							= NONE_COLOR;
	PlayerLastTick[playerid] 							= GetTickCount();
	p_info[playerid][pLevel] 							= 1;
	p_info[playerid][pHunger] 							= 50;

	p_info[playerid][pInteractionPlayer] 				= -1;

	p_info[playerid][pShowTD] 							= 0;
	
	SpRabotaySer[playerid] = false;

	proposition_info[playerid] = g_proposition_default_values;

	new i;
	/*for(i = 0; i < 14; i++) p_info[playerid][pPresent][i] = 0;*/

	for(i = 0; i < 4; i++)
	{
		p_info[playerid][pLic][i] = 0;
		p_info[playerid][pImprove][i] = 0;
	}
	for(i = 0; i < 6; i++)
	{
		p_info[playerid][pText][i] = 0;
	}
	for(i = 0; i < 8; i++)
	{
		p_info[playerid][pGunSkill][i] = 0;
		PhoneNumbers[playerid][i] = 0;
	}

	/* Конец */

	strmid(PlayerName[playerid], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	strmid(p_info[playerid][pPassword], "", 0, strlen(p_info[playerid][pPassword]), 32);
	strmid(p_info[playerid][pMail], "", 0, strlen(p_info[playerid][pMail]), 64);
	AC_ResetPlayerWeapons(playerid);
	
	KillTimer(STimer[playerid]);
	return 1;
}

stock CarDoors(vehicleid, status)
{
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
	GetVehicleParamsEx(vehicleid, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
	SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, status, ebonnet, eboot, eobjective);
	if(vehicleid < lastveh) SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, false, ebonnet, eboot, eobjective);
	return 1;
}

stock CarDoorsEx(vehicleid, status)
{
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
	GetVehicleParamsEx(vehicleid, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
	SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, status, ebonnet, eboot, eobjective);
	return 1;
}

stock GetPlayerRooms(playerid)
{
	new house = 0;
	for(new i = TOTALROOMS; i > 0; i--)
	{
		if(!strcmp(RoomsInfo[i][rOwner],p_info[playerid][pName],true)) house++, SetPVarInt(playerid, "PlayerRooms", i);
	}
	return house;
}

stock GetPlayerHouse(playerid)
{
	new house = 0;
	for(new i = TOTALHOUSE; i > 0; i --)
	{
		if(!strcmp(HouseInfo[i][hOwner], GetName(playerid), true)) house++, SetPVarInt(playerid, "PlayerHouse", i);
	}
	return house;
}

stock GetPlayerBizz(playerid)
{
	new bizz = 0;
	for(new i = TOTALBIZZ; i > 0; i --)
	{
		if(!strcmp(BizzInfo[i][bOwner], GetName(playerid), true))
		{
			bizz++, SetPVarInt(playerid, "PlayerBizz", i);
			
			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET lastvisit = '%i' WHERE id = %d", (gettime()+DAY*14), i);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
		}
	}
	return bizz;
}

stock IsTheMember(member)
{
	switch(member)
	{
	case TEAM_MERIA,TEAM_VDV,TEAM_PRAVO,TEAM_POLICIA,TEAM_POLICIA2,TEAM_FBI,TEAM_BOLNICA,TEAM_MERIAYJ,TEAM_LVHOSPITAL,TEAM_ARMY,TEAM_SWAT,TEAM_AUTOSCHOOL,TEAM_SFNEWS,TEAM_LVNEWS: return 1;
	default: return 0;
	}
	return 0;
}

stock Convert(seconds)
{
	new stringTo[11];
	new result[4];
	result[0] = floatround(seconds / (3600 * 24));
	result[1] = floatround(seconds / 3600);
	result[2] = floatround((seconds / 60) - (result[1] * 60));
	result[3] = floatround(seconds - ((result[1] * 3600) + (result[2] * 60)));
	switch(result[0])
	{
	case 0:
		{
			switch(result[1])
			{
			case 0: format(stringTo, 11, "%02d:%02d", result[2], result[3]);
			default: format(stringTo, 11, "%d:%02d:%02d", result[1], result[2], result[3]);
			}
		}
	}
	return stringTo;
}


stock Converts(number)
{
	new hours = 0, mins = 0, secs = 0, string[30];
	hours = floatround(number / 3600);
	mins = floatround((number / 60) - (hours * 60));
	secs = floatround(number - ((hours * 3600) + (mins * 60)));
	if(hours > 0) format(string, 30, "%d:%02d:%02d", hours, mins, secs);
	else format(string, 30, "%d:%02d", mins, secs);
	return string;
}

stock GetXYInBackOfPlayer(const playerid, &Float:x, &Float:y, const Float:distance)
{
	new Float:a; GetPlayerPos(playerid, x, y, a); GetPlayerFacingAngle(playerid, a);
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vid = GetPlayerVehicleID(playerid);
		if(vid > 0 && vid <= MAX_VEHICLES) GetVehicleZAngle(vid, a);
	}
	x -= (distance * floatsin(-a, degrees)); y -= (distance * floatcos(-a, degrees));
}

stock IsPlayerInInvalidNosVehicle(playerid)
{
	#define MAX_INVALID_NOS_VEHICLES 52
	static const InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
	{
		581,523,462,521,463,522,461,448,468,586,417,425,469,487,512,520,563,593,
		509,481,510,472,473,493,520,595,484,430,453,432,476,497,513,533,577,
		452,446,447,454,590,569,537,538,570,449,519,460,488,511,519,548,592
	};
	if(IsPlayerInAnyVehicle(playerid))
	{
		for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == InvalidNosVehicles[i]) return 1;
		}
	}
	return 0;
}

stock IsComponentidCompatible(modelid, componentid)
{
	if(componentid == 1025 || componentid == 1073 || componentid == 1074 || componentid == 1075 || componentid == 1076 ||
			componentid == 1077 || componentid == 1078 || componentid == 1079 || componentid == 1080 || componentid == 1081 ||
			componentid == 1082 || componentid == 1083 || componentid == 1084 || componentid == 1085 || componentid == 1096 ||
			componentid == 1097 || componentid == 1098 || componentid == 1087 || componentid == 1086)
	return 1;

	switch (modelid)
	{
	case 400: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 401: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 114 || componentid == 1020 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 402: return (componentid == 1009 || componentid == 1009 || componentid == 1010);
	case 404: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
	case 405: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1023 || componentid == 1000);
	case 409: return (componentid == 1009);
	case 410: return (componentid == 1019 || componentid == 1021 || componentid == 1020 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 411: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 412: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 415: return (componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 418: return (componentid == 1020 || componentid == 1021 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016);
	case 419: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 420: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1003);
	case 421: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1016 || componentid == 1000);
	case 422: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007);
	case 426: return (componentid == 1005 || componentid == 1004 || componentid == 1021 || componentid == 1019 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003);
	case 429: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 436: return (componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1019 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 438: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 439: return (componentid == 1003 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1017 || componentid == 1007 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1013);
	case 442: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 445: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 451: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 458: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 466: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 467: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 474: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 475: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 477: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
	case 478: return (componentid == 1005 || componentid == 1004 || componentid == 1012 || componentid == 1020 || componentid == 1021 || componentid == 1022 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 479: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 480: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 489: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1016 || componentid == 1000);
	case 491: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 492: return (componentid == 1005 || componentid == 1004 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1016 || componentid == 1000);
	case 496: return (componentid == 1006 || componentid == 1017 || componentid == 1007 || componentid == 1011 || componentid == 1019 || componentid == 1023 || componentid == 1001 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1003 || componentid == 1002 || componentid == 1142 || componentid == 1143 || componentid == 1020);
	case 500: return (componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1013 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 506: return (componentid == 1009);
	case 507: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 516: return (componentid == 1004 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1015 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
	case 517: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 518: return (componentid == 1005 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 526: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 527: return (componentid == 1021 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1014 || componentid == 1015 || componentid == 1017 || componentid == 1007);
	case 529: return (componentid == 1012 || componentid == 1011 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 533: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 534: return (componentid == 1126 || componentid == 1127 || componentid == 1179 || componentid == 1185 || componentid == 1100 || componentid == 1123 || componentid == 1125 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1180 || componentid == 1178 || componentid == 1101 || componentid == 1122 || componentid == 1124 || componentid == 1106);
	case 535: return (componentid == 1109 || componentid == 1110 || componentid == 1113 || componentid == 1114 || componentid == 1115 || componentid == 1116 || componentid == 1117 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1120 || componentid == 1118 || componentid == 1121 || componentid == 1119);
	case 536: return (componentid == 1104 || componentid == 1105 || componentid == 1182 || componentid == 1181 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1184 || componentid == 1183 || componentid == 1128 || componentid == 1103 || componentid == 1107 || componentid == 1108);
	case 540: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
	case 541: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 542: return (componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1014 || componentid == 1015);
	case 545: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 546: return (componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
	case 547: return (componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1016 || componentid == 1003 || componentid == 1000);
	case 549: return (componentid == 1012 || componentid == 1011 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 550: return (componentid == 1005 || componentid == 1004 || componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003);
	case 551: return (componentid == 1005 || componentid == 1020 || componentid == 1021 || componentid == 1019 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1002 || componentid == 1023 || componentid == 1016 || componentid == 1003);
	case 555: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 558: return (componentid == 1092 || componentid == 1089 || componentid == 1166 || componentid == 1165 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1168 || componentid == 1167 || componentid == 1088 || componentid == 1091 || componentid == 1164 || componentid == 1163 || componentid == 1094 || componentid == 1090 || componentid == 1095 || componentid == 1093);
	case 559: return (componentid == 1065 || componentid == 1066 || componentid == 1160 || componentid == 1173 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1159 || componentid == 1161 || componentid == 1162 || componentid == 1158 || componentid == 1067 || componentid == 1068 || componentid == 1071 || componentid == 1069 || componentid == 1072 || componentid == 1070 || componentid == 1009);
	case 560: return (componentid == 1028 || componentid == 1029 || componentid == 1169 || componentid == 1170 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1141 || componentid == 1140 || componentid == 1032 || componentid == 1033 || componentid == 1138 || componentid == 1139 || componentid == 1027 || componentid == 1026 || componentid == 1030 || componentid == 1031);
	case 561: return (componentid == 1064 || componentid == 1059 || componentid == 1155 || componentid == 1157 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1154 || componentid == 1156 || componentid == 1055 || componentid == 1061 || componentid == 1058 || componentid == 1060 || componentid == 1062 || componentid == 1056 || componentid == 1063 || componentid == 1057);
	case 562: return (componentid == 1034 || componentid == 1037 || componentid == 1171 || componentid == 1172 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1149 || componentid == 1148 || componentid == 1038 || componentid == 1035 || componentid == 1147 || componentid == 1146 || componentid == 1040 || componentid == 1036 || componentid == 1041 || componentid == 1039);
	case 565: return (componentid == 1046 || componentid == 1045 || componentid == 1153 || componentid == 1152 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1150 || componentid == 1151 || componentid == 1054 || componentid == 1053 || componentid == 1049 || componentid == 1050 || componentid == 1051 || componentid == 1047 || componentid == 1052 || componentid == 1048);
	case 566: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 567: return (componentid == 1129 || componentid == 1132 || componentid == 1189 || componentid == 1188 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1187 || componentid == 1186 || componentid == 1130 || componentid == 1131 || componentid == 1102 || componentid == 1133);
	case 575: return (componentid == 1044 || componentid == 1043 || componentid == 1174 || componentid == 1175 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1176 || componentid == 1177 || componentid == 1099 || componentid == 1042);
	case 576: return (componentid == 1136 || componentid == 1135 || componentid == 1191 || componentid == 1190 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1192 || componentid == 1193 || componentid == 1137 || componentid == 1134);
	case 579: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 580: return (componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
	case 585: return (componentid == 1142 || componentid == 1143 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1003 || componentid == 1017 || componentid == 1007);
	case 587: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 589: return (componentid == 1005 || componentid == 1004 || componentid == 1144 || componentid == 1145 || componentid == 1020 || componentid == 1018 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1024 || componentid == 1013 || componentid == 1006 || componentid == 1016 || componentid == 1000 || componentid == 1017 || componentid == 1007);
	case 600: return (componentid == 1005 || componentid == 1004 || componentid == 1020 || componentid == 1022 || componentid == 1018 || componentid == 1013 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1017 || componentid == 1007);
	case 602: return (componentid == 1008 || componentid == 1009 || componentid == 1010);
	case 603: return (componentid == 1144 || componentid == 1145 || componentid == 1142 || componentid == 1143 || componentid == 1020 || componentid == 1019 || componentid == 1018 || componentid == 1024 || componentid == 1008 || componentid == 1009 || componentid == 1010 || componentid == 1006 || componentid == 1001 || componentid == 1023 || componentid == 1017 || componentid == 1007);
	}
	return 0;
}

stock IsPlayerToSquare(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return 1;
	return 0;
}

stock GetGunSlotEx(weaponid)
{
	switch(weaponid)
	{
	case 0,1:			return 0;
	case 2..9:			return 1;
	case 22..24:		return 2;
	case 25..27:		return 3;
	case 28,29,32:		return 4;
	case 30,31:			return 5;
	case 33,34:			return 6;
	case 35..38:		return 7;
	case 16..18,39:		return 8;
	case 41..43:		return 9;
	case 10..15:		return 10;
	case 44..46:		return 11;
	case 40:			return 12;
	}
	return -1;
}

stock LeaveFractionPlayer(playerid)
{
	if(!IsAMafia(playerid)) SetWBook(playerid, true);
    Iter_Remove(TeamPlayers[GetFracID(playerid)], playerid);
	p_info[playerid][pMemberSkin] = p_info[playerid][pMember] = p_info[playerid][pRank] = 0;
	if(p_info[playerid][pLeader])
	{
		p_info[playerid][pLeader] = 0;
		MysqlUpdatePlayerInt(playerid, "leader", p_info[playerid][pLeader]);
	}
	AC_ResetPlayerWeapons(playerid);
	SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
	SetPlayerColorEx(playerid,TeamColors[0]);
	MysqlUpdatePlayerInt(playerid, "memberskin", p_info[playerid][pMemberSkin]);
	MysqlUpdatePlayerInt(playerid, "rank", p_info[playerid][pRank]);
	MysqlUpdatePlayerInt(playerid, "member", p_info[playerid][pMember]);

	p_info[playerid][pSpawnChange] = 0;
	MysqlUpdatePlayerInt(playerid, "spawnchange", p_info[playerid][pSpawnChange]);
	return 1;
}

stock NewsPanel(playerid)
{
	new full = 0;
	if(p_info[playerid][pAdmin] > 0) full = 0;
	else full = (p_info[playerid][pMember] == TEAM_SMI) ? (0) : (p_info[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
	new text[3][30];
	if(Ether[playerid] == true)
	{
		text[0] = "{FF6347}Выйти";
	}
	else
	{
	    text[0] = "{f0e86b}Войти";
	}
	if(EtherSms[0] == true)
	{
		text[1] = "{FF6347}Закончить";
	}
	else
	{
	    text[1] = "{f0e86b}Начать";
	}
	if(efir_player == true)
	{
		text[2] = "{FF6347}Есть гость";
	}
	else
	{
	    text[2] = "{f0e86b}Нет гостя";
	}

	STRING_GLOBAL = "";
	format(STRING_GLOBAL, 1024, "1. Прямой эфир [%s{FFFFFF}]\n2. Пригласить в эфир [%s{FFFFFF}]\n3. Приём звонков и СМС [%s{FFFFFF}]\n4. Баланс банка RECORD FM: {f0e86b}%d{FFFFFF} рублей\n5. Номер радиостанции: {f0e86b}333111{FFFFFF}\n6. Меню лидера\n7. Объявления [Новых: {f0e86b}%d{FFFFFF}]\n8. Меню мероприятий", text[0], text[2], text[1], FracBank[8], TOTALADVERT[full]);
	ShowPlayerDialogEx(playerid, D_NMENU, DIALOG_STYLE_LIST, "{ebec86}>> Панель управления новостей", STRING_GLOBAL, "Далее", "Отмена");
	return 1;
}

stock ClearBizz(i)
{
	new playerid = GetPlayerID(BizzInfo[i][bOwner]);
	if(playerid != INVALID_PLAYER_ID)
	{
		if(IsPlayerConnected(playerid) && PlayerLogged[playerid])
		{
			p_info[playerid][pBank] += BizzInfo[i][bPrice] / 2;
			p_info[playerid][pBank] += BizzInfo[i][bMoney];
			SendClientMessage(playerid, COLOR_RED,"[НАЛОГОВАЯ]: Ваш бизнес закрыли в связи с нехваткой ресурсов");
			SendClientMessage(playerid, COLOR_RED,"[НАЛОГОВАЯ]: Половина стоимости бизнеса и его бюджет зачислены на ваш банковский счет");
			MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
		}
	}
	else
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT `bank`,`text` FROM "T_ACCOUNTS" WHERE name = '%s'", BizzInfo[i][bOwner]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "OfflineClearBizz", "i", i);
	}
	BizzPay[i] = BizzInfo[i][bLock] = BizzInfo[i][bLockTime] = BizzInfo[i][bMafia] = BizzInfo[i][bMoney] = BizzInfo[i][bLic] = BizzInfo[i][bEnter] = BizzInfo[i][bAvtoProd] = BizzInfo[i][bActor] = 0;
	BizzInfo[i][bHeal] = BizzInfo[i][bHourProd] = 0;
	BizzInfo[i][bProdMax] = 1000;
	BizzInfo[i][bTill] = 50;
	switch(BizzInfo[i][bType])
	{
		case 1: BizzInfo[i][bProduct] = 5000;
		case 2: BizzInfo[i][bProduct] = 20000;
		case 3: BizzInfo[i][bProduct] = 3000;
		case 4: BizzInfo[i][bProduct] = 7000;
		case 5: BizzInfo[i][bProduct] = 7000;
		case 6: BizzInfo[i][bProduct] = 20000;
		case 7: BizzInfo[i][bProduct] = 100000;
		case 8: BizzInfo[i][bProduct] = 50000;
		case 9: BizzInfo[i][bProduct] = 50000;
	}
	strmid(BizzInfo[i][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET owner='%s', block=%d, locktime=%d, money=%d, lic=%d, penter=%d, till=%d,product=%d,mafia=%d,bAvtoProd=%d,bActor=%d,bHeal=%d,bProdMax=%d,bHourProd=%d WHERE id = %d",
	BizzInfo[i][bOwner], BizzInfo[i][bLock], BizzInfo[i][bLockTime], BizzInfo[i][bMoney], BizzInfo[i][bLic], BizzInfo[i][bEnter], BizzInfo[i][bTill],BizzInfo[i][bProduct],BizzInfo[i][bMafia],
	BizzInfo[i][bAvtoProd],BizzInfo[i][bActor],BizzInfo[i][bHeal],BizzInfo[i][bProdMax],BizzInfo[i][bHourProd],i);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	UpdateBizz(i);
	return 1;
}

forward OfflineClearBizz(bizzid);
public OfflineClearBizz(bizzid)
{
	new rows, fields, bank, texts[40], text[6];
	cache_get_data(rows, fields);
	if(rows)
	{
		bank = cache_get_row_int(0, 0, dbHandle); // bank
		cache_get_row(0, 1, texts, dbHandle); // text
	}
	sscanf(texts, "p<,>a<i>[6]", text);
	format(texts, sizeof(texts), "%i, 1, %i, %i, %i, %i", text[0], text[2], text[3], text[4], text[5]);
	bank += BizzInfo[bizzid][bPrice];
	bank += BizzInfo[bizzid][bMoneyHour];

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET text = '%s', bank = %i WHERE name = '%s' LIMIT 1", texts, bank, BizzInfo[bizzid][bOwner]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

stock GetHomeOplata(idx)
{
	new htax;
	switch(HouseInfo[idx][hDiscript])
	{
		case 1:
		{
			if(HouseInfo[idx][hUpdate] >= 3) htax = 250;
			else htax = 500;
		}
		case 2:
		{
			if(HouseInfo[idx][hUpdate] >= 3) htax = 500;
			else htax = 1000;
		}
		case 3:
		{
			if(HouseInfo[idx][hUpdate] >= 3) htax = 1500;
			else htax = 3000;
		}
	}
	return htax;
}

forward OfflineClearHouse(houseid);
public OfflineClearHouse(houseid)
{
	new rows, fields, texts[40], text[6];
	cache_get_data(rows, fields);
	if(rows) cache_get_field_content(0, "text", texts);
	sscanf(texts, "p<,>a<i>[6]", text);
	format(texts, sizeof(texts), "%i, %i, %i, %i, %i, %i", houseid, text[1], text[2], text[3], text[4], text[5]);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS"  SET text = '%s', spawnchange = 0 WHERE name = '%s' LIMIT 1", texts, HouseInfo[houseid][hOwner]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

forward OfflineClearGarage(garage);
public OfflineClearGarage(garage)
{
	new rows, fields, texts[40], text[6];
	cache_get_data(rows, fields);
	if(rows) cache_get_field_content(0, "text", texts);
	sscanf(texts, "p<,>a<i>[6]", text);
	format(texts, sizeof(texts), "%i, %i, %i, %i, %i, %i", text[1], text[1], text[2], text[3], garage, text[5]);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS"  SET text = '%s', bank = bank+%d, garage = -1 WHERE name = '%s' LIMIT 1", texts, GARAGE_DATA[garage][g_OWNER]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	
	strmid(GARAGE_DATA[garage][g_OWNER], "None", 0, strlen("None"), 24);
 	GARAGE_DATA[garage][g_OWNED] = 0;
 	GARAGE_DATA[garage][g_DAY] = 0;

	SaveGarageData(garage);
	UpdateGarageData(garage);
	return 1;
}

forward OfflineClearKvar(kvarid);
public OfflineClearKvar(kvarid)
{
	new rows, fields, texts[40], text[6];
	cache_get_data(rows, fields);
	if(rows) cache_get_field_content(0, "text", texts);
	sscanf(texts, "p<,>a<i>[6]", text);
	format(texts, sizeof(texts), "%i, %i, %i, %i, %i, %i", kvarid, text[1], text[2], text[3], text[4], text[5]);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS"  SET text = '%s', spawnchange = 0 WHERE name = '%s' LIMIT 1", texts, RoomsInfo[kvarid][rOwner]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

stock GunShopList(playerid, i)
{
	STRING_GLOBAL = "";
	if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для приобретения оружия нужно отыграть 3 часа");
	if(p_info[playerid][pLic][3] == 0) return SendErr(playerid, "У вас нет лицензии на оружие");
	
	if(robbery_role[playerid] == 3)
	{
	    robbery_gun[robbery_players[playerid]] = 1;
		SendInf(playerid, "Вы достали оружие, поделитесь им с соучастниками");
	}
	
	format(STRING_GLOBAL, 512, "- Холодное оружие\n- Огнестрельное оружие\n- Ящики с боеприпасами\n- Бронежилет [{f0e86b}%d{FFFFFF} рублей]\n- Парашют [{f0e86b}%d{FFFFFF} рублей]\n- Патроны [{f0e86b}%d за 1 патрон{FFFFFF} рублей]", 1000*BizzInfo[i][bTill], 500*BizzInfo[i][bTill], BizzInfo[i][bTill]);
	ShowPlayerDialogEx(playerid, D_AMMO, DIALOG_STYLE_LIST, "{ebec86}>> Оружейный магазин", STRING_GLOBAL, "Выбрать", "Выйти");
	return 1;
}

stock SkinShopList(playerid)
{
    for(new A; A != 5; A++)
	{
		if(!ClosetSkins[playerid][A]) break;
		if(A == 4) return SendErr(playerid, "В вашем гардеробе много одежды");
	}
	ShowPlayerDialogEx(playerid, D_JOB+31, DIALOG_STYLE_MSGBOX, "{ebec86}>> Покупка одежды", "{FFFFFF}Вы хотите перейти к выбору одежды?", "Да", "Нет");
	return 1;
}

stock MagazineList(playerid, idx)
{
    new str[128];
	STRING_GLOBAL[0] = EOS;
    for(new i; i < SHOP_OBJECTS; i++)
	{
		format(str, sizeof(str), "%s - ({f0e86b}%d{ffffff} рублей)\n", shop_name_sell[i], shop_price_sell[i]*BizzInfo[idx][bTill]);
		strcat(STRING_GLOBAL, str);
	}
	ShowPlayerDialogEx(playerid, D_HEAL+13, DIALOG_STYLE_LIST, "{ebec86}>> Витрина магазина 24/7", STRING_GLOBAL, "Купить", "Отмена");
	return 1;
}

stock EatList(playerid, idx)
{
	new str[128];
	STRING_GLOBAL[0] = EOS;
	for(new i; i < EAT_OBJECTS; i++)
	{
	    if(GetPlayerInterior(playerid) == 5)
	    {
			format(str, sizeof(str), "{FFFFFF}%s - ({f0e86b}%d{ffffff} рублей)\n", gEateryNames1[i], BizzInfo[idx][bTill] * gEateryCosts[i]);
			strcat(STRING_GLOBAL, str);
		}
	    else if(GetPlayerInterior(playerid) == 10)
	    {
			format(str, sizeof(str), "{FFFFFF}%s - ({f0e86b}%d{ffffff} рублей)\n", gEateryNames2[i], BizzInfo[idx][bTill] * gEateryCosts[i]);
			strcat(STRING_GLOBAL, str);
		}
	    else if(GetPlayerInterior(playerid) == 9)
	    {
			format(str, sizeof(str), "{FFFFFF}%s - ({f0e86b}%d{ffffff} рублей)\n", gEateryNames3[i], BizzInfo[idx][bTill] * gEateryCosts[i]);
			strcat(STRING_GLOBAL, str);
		}
	}
	ShowPlayerDialogEx(playerid, D_HEAL+14, DIALOG_STYLE_LIST, "{ebec86}>> Закусочная", STRING_GLOBAL, "Купить", "Отмена");
	return 1;
}

stock BarList(playerid, idx)
{
	new str[128];
	STRING_GLOBAL[0] = EOS;
	for(new i; i < BAR_OBJECTS; i++)
	{
		format(str, sizeof(str), "{FFFFFF}%s - ({f0e86b}%d{ffffff} рублей)\n", gBarNames[i], BizzInfo[idx][bTill] * gBarCost[i]);
		strcat(STRING_GLOBAL, str);
	}
	ShowPlayerDialogEx(playerid, D_HEAL+15, DIALOG_STYLE_LIST, "{ebec86}>> Барная стойка", STRING_GLOBAL, "Купить", "Отмена");
	return 1;
}

stock AdvertList(playerid)
{
	new full = 0;
	if(p_info[playerid][pAdmin] > 0) full = 0;
	else full = (p_info[playerid][pMember] == TEAM_SMI) ? (0) : (p_info[playerid][pMember] == TEAM_SFNEWS) ? (1) : (2);
	new str[42], str2[630];
	for(new i = 1; i <= TOTALADVERT[full]; i++)
	{
		format(str, sizeof(str), "№%i - Прислал: %s\n",i, AdvertInfo[i][full][aName]);
		strcat(str2, str);
	}
	if(TOTALADVERT[full] == 0) return ShowPlayerDialogEx(playerid, D_NULL, 0, "{ebec86}>> Объявления", "{FFFFFF}Новых объявлений нет", "Назад", "");
	ShowPlayerDialogEx(playerid, D_NMENU+5, 2, "{ebec86}>> Объявления", str2, "Принять", "Отмена");
	return 1;
}

stock SetPosInShop(playerid)
{
	SetPlayerPos(playerid,1105.7463, 1542.9768, 2316.1677);
	SetPlayerFacingAngle(playerid,101.9068);
	SetPlayerInterior(playerid,3);
	SetPlayerVirtualWorld(playerid,playerid);
	TogglePlayerControllable(playerid,false);
	pPressed[playerid] = 0;
	LinkVehicleToInterior(p_info[playerid][SalonCarID],3);
	SetVehicleVirtualWorld(p_info[playerid][SalonCarID],playerid);
	PutPlayerInVehicle(playerid,p_info[playerid][SalonCarID],0);
}

forward OfflineSetReferalMoney(playerid);
public OfflineSetReferalMoney(playerid)
{
	new rows, fields, texts[12], text[4];
	cache_get_data(rows, fields);
	if(rows) cache_get_field_content(0, "text", texts);
	sscanf(texts, "p<,>a<i>[4]", text);
	format(texts, sizeof(texts), "%i, %i, %i, %i", text[0], text[1], 1, text[3]);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS"  SET text = '%s' WHERE name = '%s'", texts, p_info[playerid][pReferal]);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

stock PayDay()
{
	new string[256];
	
	if(FracBank[8] > 1900000000)
	{
	    FracBank[8] = 1900000000;
	    MysqlUpdateOtherInt("lsnbank", FracBank[8]);
	}
	if(FracBank[9] > 1900000000)
	{
	    FracBank[9] = 1900000000;
	    MysqlUpdateOtherInt("sfnbank", FracBank[9]);
	}
	
	SaveRepository();
	
	new h, m, s;
    gettime(h, m, s);
	
	foreach(new i: Player)
	{
		if(PlayerLogged[i])
		{
		    p_info[i][pPayCheck] += 500;
		    
		    if(p_info[i][pMember] == 1) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[7];
			if(p_info[i][pMember] == 2) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[11];
			if(p_info[i][pMember] == 3) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[3];
			if(p_info[i][pMember] == 4) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[2];
			if(p_info[i][pMember] == 5) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[4];
			if(p_info[i][pMember] == 6) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[6];
			if(p_info[i][pMember] == 7) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank]);
			if(p_info[i][pMember] == 8) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank]);
			if(p_info[i][pMember] == 12) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[5];
			if(p_info[i][pMember] == 15) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank]);
			if(p_info[i][pMember] == 16) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank]);
			if(p_info[i][pMember] == 18)
			{
				p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[8]*GetPVarInt(i, "advert_count");
				SetPVarInt(i, "advert_count", 1);
			}
			if(p_info[i][pMember] == 21) p_info[i][pPayCheck] += (1100 + 350 * p_info[i][pRank])*SalaryStatus[1];
		    
		    if(f_info[p_info[i][pMember]][f_status_zp] == 0)
		    {
		        if(h == 20)
		        {
		            if(p_info[i][pMember] == 1) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					if(p_info[i][pMember] == 2) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					if(p_info[i][pMember] == 3) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					if(p_info[i][pMember] == 4) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					if(p_info[i][pMember] == 5) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					if(p_info[i][pMember] == 6) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					if(p_info[i][pMember] == 7)
					{
					    if(frac_money[p_info[i][pMember]] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
					    {
							p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];

							frac_money[p_info[i][pMember]] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
							UpdateFractionStore(p_info[i][pMember]);
							UpdateStoreGang(p_info[i][pMember]);
						}
						else SendErr(i, "У вашей организации закончились деньги в общаке");
					}
					if(p_info[i][pMember] == 8)
					{
					    if(frac_money[p_info[i][pMember]] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
					    {
							p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];

							frac_money[p_info[i][pMember]] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
							UpdateFractionStore(p_info[i][pMember]);
							UpdateStoreGang(p_info[i][pMember]);
						}
						else SendErr(i, "У вашей организации закончились деньги в общаке");
					}
					if(p_info[i][pMember] == 12) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					if(p_info[i][pMember] == 15)
					{
					    if(frac_money[p_info[i][pMember]] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
					    {
							p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];

							frac_money[p_info[i][pMember]] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
							UpdateFractionStore(p_info[i][pMember]);
							UpdateStoreGang(p_info[i][pMember]);
						}
						else SendErr(i, "У вашей организации закончились деньги в общаке");
					}
					if(p_info[i][pMember] == 16)
					{
					    if(frac_money[p_info[i][pMember]] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
					    {
							p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];

							frac_money[p_info[i][pMember]] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
							UpdateFractionStore(p_info[i][pMember]);
							UpdateStoreGang(p_info[i][pMember]);
						}
						else SendErr(i, "У вашей организации закончились деньги в общаке");
					}
					if(p_info[i][pMember] == 18) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					if(p_info[i][pMember] == 21) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
		        }
			}
			else
			{
			    if(p_info[i][pMember] == 1) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
				if(p_info[i][pMember] == 2) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
				if(p_info[i][pMember] == 3) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
				if(p_info[i][pMember] == 4) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
				if(p_info[i][pMember] == 5) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
				if(p_info[i][pMember] == 6) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
				if(p_info[i][pMember] == 7)
				{
				    if(frac_money[p_info[i][pMember]] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
				    {
						p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];

						frac_money[p_info[i][pMember]] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
						UpdateFractionStore(p_info[i][pMember]);
						UpdateStoreGang(p_info[i][pMember]);
					}
					else SendErr(i, "У вашей организации закончились деньги в общаке");
				}
				if(p_info[i][pMember] == 8)
				{
				    if(frac_money[p_info[i][pMember]] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
				    {
						p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];

						frac_money[p_info[i][pMember]] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
						UpdateFractionStore(p_info[i][pMember]);
						UpdateStoreGang(p_info[i][pMember]);
					}
					else SendErr(i, "У вашей организации закончились деньги в общаке");
				}
				if(p_info[i][pMember] == 12) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
				if(p_info[i][pMember] == 15)
				{
				    if(frac_money[p_info[i][pMember]] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
				    {
						p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];

						frac_money[p_info[i][pMember]] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
						UpdateFractionStore(p_info[i][pMember]);
						UpdateStoreGang(p_info[i][pMember]);
					}
					else SendErr(i, "У вашей организации закончились деньги в общаке");
				}
				if(p_info[i][pMember] == 16)
				{
				    if(frac_money[p_info[i][pMember]] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
				    {
						p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];

						frac_money[p_info[i][pMember]] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
						UpdateFractionStore(p_info[i][pMember]);
						UpdateStoreGang(p_info[i][pMember]);
					}
					else SendErr(i, "У вашей организации закончились деньги в общаке");
				}
				if(p_info[i][pMember] == 18) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
				if(p_info[i][pMember] == 21) p_info[i][pPayCheck] += f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
			}
			new tmpintrate, interest, houseoplata = 0, bizzoplata = 0, roomsoplata = 0;
			if(p_info[i][pVip] != 0)
			{
			    tmpintrate = 3;
				interest = (p_info[i][pBank]/1000)*(3);
				if(interest > 100000)
				{
				    interest = 100000;
				}
			}
			else
			{
			    tmpintrate = 1;
				interest = (p_info[i][pBank]/1000)*(1);
				if(interest > 50000)
				{
				    interest = 50000;
				}
			}

			if(GetPlayerRooms(i))
			{
				roomsoplata += 100;
			}
			if(GetPlayerHouse(i))
			{
				houseoplata += GetHomeOplata(GetPVarInt(i, "PlayerHouse"));
			}
			if(GetPlayerBizz(i))
			{
				bizzoplata += BizzInfo[GetPVarInt(i, "PlayerBizz")][bPrice] / 1000;
			}
			if(doubling_job)
			{
				p_info[i][pPayCheck] += p_info[i][pPayCheck]*2;
			}
			new nalog = WorkSalary[6]*(p_info[i][pLevel]*50);
			format(string, 256, "Банковский счёт {f0e86b}№%i", p_info[i][pID]);
			SendInf(i, string);
			format(string, 256, "Чек: {f0e86b}%i{FFFFFF} рублей. Налог: {f0e86b}-%i{FFFFFF} рублей", p_info[i][pPayCheck], nalog+houseoplata+bizzoplata+roomsoplata);
			SendInf(i, string);
			format(string, 256, "Баланс: {f0e86b}%i{FFFFFF} рублей", p_info[i][pBank]);
			SendInf(i, string);
			format(string, 256, "Вклад в банке под: {f0e86b}0.%i{FFFFFF} процентов", tmpintrate);
			SendInf(i, string);
			format(string, 256, "Полученные средства по банковскому вкладу: {f0e86b}%i{FFFFFF} рублей", interest);
			SendInf(i, string);
			
			if(p_info[i][pRentHouse] != 0)
			{
				for(new j = TOTALHOUSE; j > 0; j --)
				{
					if(p_info[i][pRentHouse] == j)
					{
					    if(p_info[i][pBank] >= HouseInfo[j][RentAllPlata])
					    {
                            HouseInfo[j][hMoney] += HouseInfo[j][RentAllPlata];
                            
                            new fmt_msg[70];
							mysql_format(dbHandle, fmt_msg, sizeof fmt_msg, "UPDATE `house` SET `hMoney` = '%d' WHERE `id` = '%d' LIMIT 1", HouseInfo[j][hMoney], HouseInfo[j][hID]);
							mysql_query(dbHandle, fmt_msg, false);
                            
						    format(string, 256, "Аренда жилого помещения: {f0e86b}%i{FFFFFF} рублей", HouseInfo[j][RentAllPlata]);
							SendInf(i, string);
						}
						else
						{
						    p_info[i][pSpawnChange] = 0;
						    MysqlUpdatePlayerInt(i, "spawnchange", p_info[i][pSpawnChange]);
						    p_info[i][pRentHouse] = 0;
						    MysqlUpdatePlayerInt(i, "renthouse", p_info[i][pRentHouse]);
							SendInf(i, "Вы были выселены из арендуемого жилого помещения");
						}
					}
				}
			}
			
			if(IsACop(i) || IsAMedic(i) || IsAMayor(i) || IsAArmy(i) || p_info[i][pMember] == TEAM_SMI)
			{
				if(FracBank[9] > f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]])
				{
				    FracBank[9] -= f_info[p_info[i][pMember]][f_rang_zp][p_info[i][pRank]];
					MysqlUpdateOtherInt("sfnbank", FracBank[9]);
				}
			}
			
			GiveBankMoney(i, p_info[i][pPayCheck]+interest, "PayDay (Б)");

			FracBank[9] += WorkSalary[6]+houseoplata+bizzoplata+roomsoplata;
			MysqlUpdateOtherInt("sfnbank", FracBank[9]);
			
			p_info[i][pPayCheck] = 0;
			p_info[i][pZakon]++;
			MysqlUpdatePlayerInt(i, "paycheck", p_info[i][pPayCheck]);
			MysqlUpdatePlayerInt(i, "zakon", p_info[i][pZakon]);

			p_info[i][pTime]++;
			MysqlUpdatePlayerInt(i, "time", p_info[i][pTime]);
			p_info[i][pExp]++;
			if(doubling_exp) p_info[i][pExp]++;
			if(p_info[i][pVip] && !(p_info[i][pTime] % 4)) p_info[i][pExp]++;
			MysqlUpdatePlayerInt(i, "exp", p_info[i][pExp]);
			if(p_info[i][pExp] >= (p_info[i][pLevel]+1)*4)
			{
				SendClientMessage(i, TEAM_BLUE_COLOR, "Ваш игровой возраст повысился!");
				p_info[i][pLevel]++;
				p_info[i][pAge]++;
				p_info[i][pExp] = 0;
				SetPlayerScore(i, p_info[i][pLevel]);
				MysqlUpdatePlayerInt(i, "level", p_info[i][pLevel]);
				MysqlUpdatePlayerInt(i, "age", p_info[i][pAge]);
				MysqlUpdatePlayerInt(i, "exp", p_info[i][pExp]);
			}
			if(p_info[i][pLevel] == 4 && p_info[i][pExp] == 0)
			{
				if(!strcmp(p_info[i][pReferal], "None", true)) { }
				else
				{
					new targetid = GetPlayerID(p_info[i][pReferal]);
					if(targetid != INVALID_PLAYER_ID)
					{
						GiveMoney(targetid, 100000, "За пригл. игрока");
						SendInf(targetid, "Вы получили {f0e86b}100000{FFFFFF} рублей за приглашенного игрока");
					}
					else
					{
						STRING_GLOBAL[0] = EOS;
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", p_info[i][pReferal]);
						mysql_tquery(dbHandle, STRING_GLOBAL, "OfflineSetReferalMoney", "i", i);
					}
				}
			}
			if(p_info[i][pRobbery] > 0)
			{
				p_info[i][pRobbery]--;
				MysqlUpdatePlayerInt(i, "robbery", p_info[i][pRobbery]);
			}
			p_info[i][pTimeHour] = 0;
			Conday[1] = 0;
			PlayerPlaySound(i,5203,0.0,0.0,0.0);
			
			if(p_info[i][pWarnTime] > 0)
			{
				p_info[i][pWarnTime] -= 1;
				MysqlUpdatePlayerInt(i, "warntime", p_info[i][pWarnTime]);
				if(p_info[i][pWarnTime] >= 1)
				{
					new assalam[128];
					format(assalam, sizeof assalam, "* Вам осталось отыграть %d часов до снятия предупреждения", p_info[i][pWarnTime]);
					SendClientMessage(i, COLOR_RED, assalam);
				}
			}
			if(p_info[i][pWarnTime] == 0 && p_info[i][pWarn] > 0)
			{
			    p_info[i][pWarn] -= 1;
				MysqlUpdatePlayerInt(i, "warn", p_info[i][pWarn]);
				SendClientMessage(i, COLOR_RED, "* Вы отыграли нужное количество времени, с Вас было снято 1 предупреждение");
				if(p_info[i][pWarn] > 0)
				{
				    p_info[i][pWarnTime] = 10;
					MysqlUpdatePlayerInt(i, "warntime", p_info[i][pWarnTime]);
				}
			}
			
			if(PhoneNumbers[i][6] > 0)
			{
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "* У вас есть неоплаченные штрафы (%d шт). Оплатите их в участке ДПС или ППС. (/gps - государственные организации)", PhoneNumbers[i][6]);
				SendClientMessage(i, 0x5c62ffFF, STRING_GLOBAL);
				if(PhoneNumbers[i][6] > 4)
				{
				    if(p_info[i][pWanted] < 6 && !IsACop(i))
				    {
						SendClientMessage(i, 0x5c62ffFF, "* Вы были объявлены в розыск за неуплату штрафов");
					    p_info[i][pWanted]++;
						if(p_info[i][pWanted] > 0) p_info[i][pWantedTime] = 1800 + random(300);
					    SetPlayerCriminal(i, "Неизвестный", "Штрафы");
					}
				}
			}
			
			p_info[i][data_NONLINE][day_weeks] ++;
		    if(day_weeks == 0) MysqlUpdatePlayerInt(i, "data_NONLINE", p_info[i][data_NONLINE][day_weeks]);
		   	else if(day_weeks == 1) MysqlUpdatePlayerInt(i, "data_NONLINE_1", p_info[i][data_NONLINE][day_weeks]);
			else if(day_weeks == 2) MysqlUpdatePlayerInt(i, "data_NONLINE_2", p_info[i][data_NONLINE][day_weeks]);
			else if(day_weeks == 3) MysqlUpdatePlayerInt(i, "data_NONLINE_3", p_info[i][data_NONLINE][day_weeks]);
			else if(day_weeks == 4) MysqlUpdatePlayerInt(i, "data_NONLINE_4", p_info[i][data_NONLINE][day_weeks]);
			else if(day_weeks == 5) MysqlUpdatePlayerInt(i, "data_NONLINE_5", p_info[i][data_NONLINE][day_weeks]);
			else if(day_weeks == 6) MysqlUpdatePlayerInt(i, "data_NONLINE_6", p_info[i][data_NONLINE][day_weeks]);
			
			if(p_info[i][pAdmin] > 0)
			{
				STRING_GLOBAL[0] = EOS;
				if(day_weeks == 0)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET data_NONLINE = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][0], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 1)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET data_NONLINE_1 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][1], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 2)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET data_NONLINE_2 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][2], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 3)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET data_NONLINE_3 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][3], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 4)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET data_NONLINE_4 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][4], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 5)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET data_NONLINE_5 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][5], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 6)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET data_NONLINE_6 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][6], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
			}
			if(p_info[i][pHelper] > 0)
			{
				STRING_GLOBAL[0] = EOS;
				if(day_weeks == 0)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_HELPER" SET data_NONLINE = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][0], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 1)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_HELPER" SET data_NONLINE_1 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][1], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 2)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_HELPER" SET data_NONLINE_2 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][2], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 3)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_HELPER" SET data_NONLINE_3 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][3], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 4)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_HELPER" SET data_NONLINE_4 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][4], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 5)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_HELPER" SET data_NONLINE_5 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][5], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
				if(day_weeks == 6)
				{
					format(STRING_GLOBAL, 128, "UPDATE "T_HELPER" SET data_NONLINE_6 = '%d' WHERE name='%s' LIMIT 1", p_info[i][data_NONLINE][6], GetName(i));
					mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				}
			}
		}
		else SendErr(i, "Вы не авторизированы для получения зарплаты");
	}
	for(new kvarid = TOTALROOMS; kvarid > 0; kvarid --)
	{
		if(!strcmp("None", RoomsInfo[kvarid][rOwner], true)) continue;
		if(RoomsInfo[kvarid][rOplata] < 100)
		{
			new targetid = GetPlayerID(RoomsInfo[kvarid][rOwner]);
			if(targetid != INVALID_PLAYER_ID)
			{

				new i = GetPVarInt(targetid, "PlayerRooms");
				strmid(RoomsInfo[i][rOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				RoomsInfo[i][rLock] = 0;
				SetRoomsStr(i, "rOwner", "None");
				RoomsInfo[i][rOplata] = 0;
				p_info[targetid][pSpawnChange] = 0;
				MysqlUpdatePlayerInt(targetid, "spawnchange", p_info[targetid][pSpawnChange]);
				SendClientMessage(targetid, COLOR_RED, "[НАЛОГОВАЯ]: За неуплату электроэнергии Ваша квартира была продана");
				SendClientMessage(targetid, COLOR_RED, "[НАЛОГОВАЯ]: На Ваш банковский счет была возвращена стоимость квартиры");
				p_info[targetid][pBank] += RoomsInfo[i][rCost];

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ROOMS" SET  rOwner = '%s', rLock = %d WHERE id = %d LIMIT 1", RoomsInfo[i][rOwner], RoomsInfo[i][rLock], i);
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				MysqlUpdatePlayerInt(targetid, "bank", p_info[targetid][pBank]);
			}
			else
			{
				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", RoomsInfo[kvarid][rOwner]);
				mysql_tquery(dbHandle, STRING_GLOBAL, "OfflineClearKvar", "i", kvarid);
			}
			strmid(RoomsInfo[kvarid][rOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			RoomsInfo[kvarid][rLock] = 0;

			STRING_GLOBAL[0] = EOS;
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ROOMS" SET  rOwner = '%s', rLock = %d WHERE id = %d LIMIT 1", RoomsInfo[kvarid][rOwner], RoomsInfo[kvarid][rLock], kvarid);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
		}
		else
		{
			RoomsInfo[kvarid][rOplata] -= 100;
			SetRoomsInt(kvarid, "rOplata", RoomsInfo[kvarid][rOplata]);
		}
	}
	new hour;
	gettime(hour, _, _);
	if(hour == 3)
	{
		for(new houseid = TOTALHOUSE; houseid > 0; houseid --)
		{
			if(!strcmp("None", HouseInfo[houseid][hOwner], true)) continue;
			if(HouseInfo[houseid][hOplata] < 1)
			{
				new targetid = GetPlayerID(HouseInfo[houseid][hOwner]);
				if(targetid != INVALID_PLAYER_ID)
				{
					p_info[targetid][pBank] += HouseInfo[houseid][hBuyPrice];
					p_info[targetid][pSpawnChange] = 0;
					MysqlUpdatePlayerInt(targetid, "spawnchange", p_info[targetid][pSpawnChange]);
					SendClientMessage(targetid, COLOR_RED, "[НАЛОГОВАЯ]: За неуплату электроэнергии Ваш дом был продан");
					SendClientMessage(targetid, COLOR_RED, "[НАЛОГОВАЯ]: На Ваш банковский счет была возвращена стоимость дома");
					MysqlUpdatePlayerInt(targetid, "bank", p_info[targetid][pBank]);
				}
				else
				{
					STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", HouseInfo[houseid][hOwner]);
					mysql_tquery(dbHandle, STRING_GLOBAL, "OfflineClearHouse", "i", houseid);
				}
				strmid(HouseInfo[houseid][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
				HouseInfo[houseid][hBuyPrice] = HouseInfo[houseid][hOplata] = HouseInfo[houseid][hGarage] = HouseInfo[houseid][hUpdate] = 0;
				HouseInfo[houseid][hLock] = 1;
				HouseInfo[houseid][hOplata] = 0;

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HOUSE" SET hOwner = '%s', hOplata = %d, buyprice = %d, hGarage = %d, hUpdate = %d, hLock = %d WHERE id = %d LIMIT 1",
				HouseInfo[houseid][hOwner],HouseInfo[houseid][hOplata],HouseInfo[houseid][hBuyPrice],HouseInfo[houseid][hGarage],HouseInfo[houseid][hUpdate],HouseInfo[houseid][hLock],houseid);
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
				UpdateHouse(houseid);
			}
			else
			{
			    if(HouseInfo[houseid][hOplata] > 10)
			    {
			        HouseInfo[houseid][hOplata] = 10;
			    }
				HouseInfo[houseid][hOplata] -= 1;
				MysqlUpdateHouseInt(houseid, "hOplata", HouseInfo[houseid][hOplata]);
			}
		}
		for(new garage = TotalGarages; garage > 0; garage --)
		{
		    if(!strcmp(GARAGE_DATA[garage][g_OWNER], "None", true)) continue;
		    if(GARAGE_DATA[garage][g_DAY] < 1)
		    {
		        new targetid = GetPlayerID(GARAGE_DATA[garage][g_OWNER]);
				if(targetid != INVALID_PLAYER_ID)
				{
				    strmid(GARAGE_DATA[garage][g_OWNER], "None", 0, strlen("None"), 24);
					GARAGE_DATA[garage][g_OWNED] = 0;
			    	GARAGE_DATA[garage][g_DAY] = 0;

			    	p_info[targetid][data_GARAGE] = INVALID_GARAGE_ID;
			    	MysqlUpdatePlayerInt(targetid, "garage", p_info[targetid][data_GARAGE]);

			    	SaveGarageData(garage);
			    	UpdateGarageData(garage);

					SendClientMessage(targetid, COLOR_RED, "[НАЛОГОВАЯ]: За неуплату электроэнергии Ваш гараж был продан");
					SendClientMessage(targetid, COLOR_RED, "[НАЛОГОВАЯ]: На Ваш банковский счет была возвращена стоимость гаража");
					p_info[targetid][pBank] += GARAGE_DATA[garage][g_PRICE];
					MysqlUpdatePlayerInt(targetid, "bank", p_info[targetid][pBank]);
		    	}
				else
				{
				    STRING_GLOBAL[0] = EOS;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT * FROM "T_ACCOUNTS" WHERE name = '%s'", GARAGE_DATA[garage][g_OWNER]);
					mysql_tquery(dbHandle, STRING_GLOBAL, "OfflineClearGarage", "i", garage);
				}
			}
			else
			{
			    if(GARAGE_DATA[garage][g_DAY] > 30)
			    {
			        GARAGE_DATA[garage][g_DAY] = 30;
			    }
			    GARAGE_DATA[garage][g_DAY] -= 1;
			    SaveGarageData(garage);
			}
		}
	}
	for(new bizzid = TOTALBIZZ; bizzid > 0; bizzid --)
	{
	    if ( hour == 3 )
	    {
		    new str[2][512];
		    new Year, Month, Day;
			getdate(Year, Month, Day);
		    BizStats[bizzid][9] = BizStats[bizzid][8];
		    BizStats[bizzid][8] = BizStats[bizzid][7];
		    BizStats[bizzid][7] = BizStats[bizzid][6];
		    BizStats[bizzid][6] = BizStats[bizzid][5];
		    BizStats[bizzid][5] = BizStats[bizzid][4];
		    BizStats[bizzid][4] = BizStats[bizzid][3];
			BizStats[bizzid][3] = BizStats[bizzid][2];
			BizStats[bizzid][2] = BizStats[bizzid][1];
			BizStats[bizzid][1] = BizStats[bizzid][0];
			BizStats[bizzid][0] = BizzInfo[bizzid][bMoneyDay];

            format(BizStatsDate[bizzid][9], 24, BizStatsDate[bizzid][8]);
            format(BizStatsDate[bizzid][8], 24, BizStatsDate[bizzid][7]);
            format(BizStatsDate[bizzid][7], 24, BizStatsDate[bizzid][6]);
            format(BizStatsDate[bizzid][6], 24, BizStatsDate[bizzid][5]);
            format(BizStatsDate[bizzid][5], 24, BizStatsDate[bizzid][4]);
			format(BizStatsDate[bizzid][4], 24, BizStatsDate[bizzid][3]);
			format(BizStatsDate[bizzid][3], 24, BizStatsDate[bizzid][2]);
			format(BizStatsDate[bizzid][2], 24, BizStatsDate[bizzid][1]);
			format(BizStatsDate[bizzid][1], 24, BizStatsDate[bizzid][0]);
			format(BizStatsDate[bizzid][0], 24, "%02d/%02d/%d", Day, Month, Year);

            STRING_GLOBAL = "";
			format(str[0], 256, "%d|%d|%d|%d|%d|%d|%d|%d|%d|%d",
			BizStats[bizzid][0], BizStats[bizzid][1], BizStats[bizzid][2], BizStats[bizzid][3], BizStats[bizzid][4],
			BizStats[bizzid][5], BizStats[bizzid][6], BizStats[bizzid][7], BizStats[bizzid][8], BizStats[bizzid][9]);
			format(str[1], 512, "%s|%s|%s|%s|%s|%s|%s|%s|%s|%s",
			BizStatsDate[bizzid][0], BizStatsDate[bizzid][1], BizStatsDate[bizzid][2], BizStatsDate[bizzid][3], BizStatsDate[bizzid][4],
			BizStatsDate[bizzid][5], BizStatsDate[bizzid][6], BizStatsDate[bizzid][7], BizStatsDate[bizzid][8], BizStatsDate[bizzid][9]);
			format(STRING_GLOBAL, 1524, "UPDATE "T_BIZZ" SET `BizStats` = '%s', `BizStatsDate` = '%s' WHERE `id` = '%d'", str[0], str[1], bizzid);
			mysql_tquery(dbHandle, STRING_GLOBAL);
	    }
	
	    if(BizzInfo[bizzid][bProdJob] < 10000) BizzInfo[bizzid][bProdJob] += random(500)+100;
	    
		if(!strcmp(BizzInfo[bizzid][bOwner], "None", true)) continue;
		if(BizzInfo[bizzid][bHourProd] >= 24 || BizzInfo[bizzid][bLock] == 1 && BizzInfo[bizzid][bLockTime] >= 12) ClearBizz(bizzid);
		else
		{
			BizzInfo[bizzid][bMoney] += BizzInfo[bizzid][bMoneyHour];
			BizzInfo[bizzid][bMoneyDay] += BizzInfo[bizzid][bMoneyHour];
			BizzInfo[bizzid][bMoneyHour] = 0;
			if(BizzPay[bizzid] > 1000000000)
			{
			    BizzPay[bizzid] = 1000000000;
			    MysqlUpdateBizzInt(bizzid, "bizzpay", BizzPay[bizzid]);
			}
			if(BizzPay[bizzid] < 0)
			{
			    BizzPay[bizzid] = 0;
			    MysqlUpdateBizzInt(bizzid, "bizzpay", BizzPay[bizzid]);
			}
			if(BizzInfo[bizzid][bMoney] > 1000000000)
			{
			    BizzInfo[bizzid][bMoney] = 1000000000;
			    MysqlUpdateBizzInt(bizzid, "money", BizzInfo[bizzid][bMoney]);
			}
			if(BizzInfo[bizzid][bMoney] < 0)
			{
			    BizzInfo[bizzid][bMoney] = 0;
			    MysqlUpdateBizzInt(bizzid, "money", BizzInfo[bizzid][bMoney]);
			}
			if(BizzInfo[bizzid][bProdOrder] != 0)
			{
			    BizzInfo[bizzid][bProduct] += BizzInfo[bizzid][bProdOrder];
			    BizzInfo[bizzid][bProdOrder] = 0;
			    MysqlUpdateBizzInt(bizzid, "product", BizzInfo[bizzid][bProduct]);
			    BizzInfo[bizzid][bHourProd] = 0;
				MysqlUpdateBizzInt(bizzid, "bHourProd", BizzInfo[bizzid][bHourProd]);
			}
			if(BizzInfo[bizzid][bAvtoProd] == 1)
			{
				BizzInfo[bizzid][bProduct] += 1000;
				BizzInfo[bizzid][bHourProd] = 0;
				MysqlUpdateBizzInt(bizzid, "product", BizzInfo[bizzid][bProduct]);
			}
			if(BizzInfo[bizzid][bActor] == 1)
			{
			    BizzInfo[bizzid][bMoney] += 10000;
			    BizzInfo[bizzid][bProduct] += 1000;
			    BizzInfo[bizzid][bHourProd] = 0;
			    MysqlUpdateBizzInt(bizzid, "product", BizzInfo[bizzid][bProduct]);
			}
			if(BizzInfo[bizzid][bProdMax] < BizzInfo[bizzid][bProduct])
			{
				BizzInfo[bizzid][bProduct] = BizzInfo[bizzid][bProdMax];
				MysqlUpdateBizzInt(bizzid, "product", BizzInfo[bizzid][bProduct]);
			}
			new playerid = GetPlayerID(BizzInfo[bizzid][bOwner]);
			if(BizzInfo[bizzid][bLic] == 0 || BizzInfo[bizzid][bMoney] <= 0)
			{
				if(BizzInfo[bizzid][bLockTime] == 0)
				{
				    if(playerid != INVALID_PLAYER_ID && IsPlayerConnected(playerid))
					{
						if(GetPlayerBizz(playerid))
						{
							SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: Ваш бизнес был закрыт по причине: отсутствие лицензии или неуплата электроэнергии");
							SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: Если по истечению 12 часов бизнес будет закрыт, он будет продан государству");
						}
					}
				}
				BizzInfo[bizzid][bLock] = 1;
				MysqlUpdateBizzInt(bizzid, "block", BizzInfo[bizzid][bLock]);
			}
			if(BizzInfo[bizzid][bProduct] <= 0)
			{
				if(BizzInfo[bizzid][bHourProd] == 0)
				{
				    if(playerid != INVALID_PLAYER_ID && IsPlayerConnected(playerid))
					{
						if(GetPlayerBizz(playerid))
						{
							SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: Ваш бизнес был закрыт по причине: отсутствие продуктов");
							SendClientMessage(playerid, COLOR_RED, "[НАЛОГОВАЯ]: Если по истечению 24 часов бизнес будет без продуктов, он будет продан государству");
						}
					}
				}
			}
			if(BizzInfo[bizzid][bProduct] <= 0)
			{
				BizzInfo[bizzid][bHourProd]++;
				BizzInfo[bizzid][bProduct] = 0;
				MysqlUpdateBizzInt(bizzid, "bHourProd", BizzInfo[bizzid][bHourProd]);
			}
			if(BizzInfo[bizzid][bLock] == 1)
			{
				BizzInfo[bizzid][bLockTime]++;
				MysqlUpdateBizzInt(bizzid, "locktime", BizzInfo[bizzid][bLockTime]);
			}
			if(BizzInfo[bizzid][bLockTime] > 1 && BizzInfo[bizzid][bLockTime] < 12)
			{
				if(IsPlayerConnected(playerid) && playerid != INVALID_PLAYER_ID)
				{
					if(GetPlayerBizz(playerid))
					{
						SCMF(playerid, COLOR_RED, "Ваш бизнес закрыт уже %i час(а)", BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bLockTime]);
						SendClientMessage(playerid, COLOR_RED, "Если по истечению 12 часов бизнес будет закрыт, он будет продан государству");
					}
				}
			}
			if(BizzInfo[bizzid][bHourProd] > 1 && BizzInfo[bizzid][bHourProd] < 24)
			{
				if(IsPlayerConnected(playerid) && playerid != INVALID_PLAYER_ID)
				{
					if(GetPlayerBizz(playerid))
					{
						SCMF(playerid, COLOR_RED, "Ваш бизнес без продуктов уже %i час(а)", BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bHourProd]);
						SendClientMessage(playerid, COLOR_RED, "Если по истечению 24 часов бизнес будет без продуктов, он будет продан государству");
					}
				}
			}
			BizzInfo[bizzid][bMoney] -= BizzInfo[bizzid][bPrice] / 1000;
			MysqlUpdateBizzInt(bizzid, "money", BizzInfo[bizzid][bMoney]);
		}
	}
	return 1;
}

stock Menu()
{
	specmenu = CreateMenu("_", 1, 450.0, 130.0, 100.0);
    AddMenuItem(specmenu, 0, "UPDATE");
    AddMenuItem(specmenu, 0, "NEXT >>");
    AddMenuItem(specmenu, 0, "BACK <<");
    AddMenuItem(specmenu, 0, "SLAP");
	AddMenuItem(specmenu, 0, "GM");
	AddMenuItem(specmenu, 0, "STATS");
	AddMenuItem(specmenu, 0, "EXIT");
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	if(GetPlayerMenu(playerid) == Menu:INVALID_MENU) return Kick(playerid);
	if(GetPlayerMenu(playerid) == specmenu)
	{
		switch(row)
		{
		case 0:
			{
				SetPlayerInterior(playerid,GetPlayerInterior(p_info[playerid][Spectating][0]));
				SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(p_info[playerid][Spectating][0]));
				AC_TogglePlayerSpectating(playerid, 1);
				SpRabotaySer[playerid] = true;
				if(IsPlayerInAnyVehicle(p_info[playerid][Spectating][0]))
				{
					new carid = GetPlayerVehicleID(p_info[playerid][Spectating][0]);
					PlayerSpectateVehicle(playerid, carid);
				}
				else PlayerSpectatePlayer(playerid, p_info[playerid][Spectating][0]);
				ShowMenuForPlayer(specmenu, playerid);
			}
		case 1:
			{
				new maxplayers = GetMaxPlayers();
				for(new id = p_info[playerid][Spectating][0]+1, bool:secondloop; id < maxplayers; id++)
				{
					if(id == maxplayers && !secondloop)
					{
						secondloop = true, id = 0;
						continue;
					}
					if(PlayerLogged[id] == false) continue;
					switch(GetPlayerState(id))
					{
						case 1..3: {}
						default: continue;
					}
					
					new td_str [ 98 ] ;
     				format ( td_str, 48, "%s(%d)", p_info [ id ] [ pName ], id ) ;
					PlayerTextDrawSetString ( playerid, sp_ptd [ playerid ] [ 0 ], td_str ) ;
					
					format ( td_str, sizeof ( td_str ), "%d~n~%d~n~%.2f~n~%.2f~n~%d~n~%d~n~%s~n~%d~n~%d$",
					p_info [ id ] [ pLevel ],
					GetPlayerPing ( id ),
					PlayerHP [ id ],
					PlayerAP [ id ],
					GetPlayerAmmo ( id ),
					SpeedVehicle ( id ),
					p_info [ id ] [ pIP ],
					p_info [ id ] [ pWarn ],
					p_info [ id ] [ pCash ] ) ;
					PlayerTextDrawSetString ( playerid, sp_ptd[playerid][2], td_str ) ;
					
					new param_str[4];
					format(param_str, sizeof param_str, "%i", id);
					callcmd::spec(playerid, param_str);
					break;
				}
				ShowMenuForPlayer(specmenu, playerid);
			}
		case 2:
			{
				new maxplayers = GetMaxPlayers();
				for(new id = p_info[playerid][Spectating][0]-1, bool:secondloop; id >= 0; id--)
				{
					if(id <= 0 && !secondloop)
					{
						secondloop = true, id = maxplayers;
						continue;
					}
					if(PlayerLogged[id] == false) continue;
					switch(GetPlayerState(id))
					{
						case 1..3: {}
						default: continue;
					}
					
				    new td_str [ 98 ] ;
     				format ( td_str, 48, "%s(%d)", p_info [ id ] [ pName ], id ) ;
					PlayerTextDrawSetString ( playerid, sp_ptd [ playerid ] [ 0 ], td_str ) ;

     				format ( td_str, sizeof ( td_str ), "%d~n~%d~n~%.2f~n~%.2f~n~%d~n~%d~n~%s~n~%d~n~%d$",
					p_info [ id ] [ pLevel ],
					GetPlayerPing ( id ),
					PlayerHP [ id ],
					PlayerAP [ id ],
					GetPlayerAmmo ( id ),
					SpeedVehicle ( id ),
					p_info [ id ] [ pIP ],
					p_info [ id ] [ pWarn ],
					p_info [ id ] [ pCash ] ) ;
					PlayerTextDrawSetString ( playerid, sp_ptd[playerid][2], td_str ) ;
					
					new param_str[4];
					format(param_str, sizeof param_str, "%i", id);
					callcmd::spec(playerid, param_str);
					break;
				}
				ShowMenuForPlayer(specmenu, playerid);
			}
		case 3:
			{
				new param_str[11];
				format(param_str, sizeof(param_str), "%i", p_info[playerid][Spectating][0]);
				callcmd::slap(playerid, param_str);
				ShowMenuForPlayer(specmenu, playerid);
			}
		case 4:
			{
				new param_str[11];
				format(param_str, sizeof(param_str), "%i", p_info[playerid][Spectating][0]);
				callcmd::gm(playerid, param_str);
				ShowMenuForPlayer(specmenu, playerid);
			}
		case 5:
			{
				ShowPlayerStatsDialog(playerid, p_info[playerid][Spectating][0]);
				ShowMenuForPlayer(specmenu, playerid);
			}
		case 6: callcmd::specoff(playerid, "");
		}
	}
	return 1;
}

stock SetHunger(playerid, amount)
{
	if(amount > 100) p_info[playerid][pHunger] = 100;
	else if(amount < 0) p_info[playerid][pHunger] = 0;
	else p_info[playerid][pHunger] = amount;
	Hunger(playerid);
	MysqlUpdatePlayerInt(playerid, "hunger", p_info[playerid][pHunger]);
	return 1;
}

stock GiveHunger(playerid, amount)
{
	SetHunger(playerid,p_info[playerid][pHunger] + amount);
	if(p_info[playerid][pHunger] + amount > 100) p_info[playerid][pHunger] = 100;
	Hunger(playerid);
	MysqlUpdatePlayerInt(playerid, "hunger", p_info[playerid][pHunger]);
}

stock Hunger(playerid)
{
	if(p_info[playerid][pHunger] > 100) p_info[playerid][pHunger] = 100;
	if(p_info[playerid][pHunger] < 0) p_info[playerid][pHunger] = 0;
	
	PlayerTextDrawHide(playerid, HungerProgress[playerid]);
	TextDrawHideForPlayer(playerid, HungerBackground[0]);
	TextDrawHideForPlayer(playerid, HungerBackground[1]);
	
	TextDrawShowForPlayer(playerid, HungerBackground[0]);
	TextDrawShowForPlayer(playerid, HungerBackground[1]);
	PlayerTextDrawTextSize(playerid, HungerProgress[playerid], 549.5 + p_info[playerid][pHunger] / 100.0 * 54.5, 40.000000);
	switch(p_info[playerid][pHunger])
	{
	    case 81..100: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0x63BD4EFF);
	    case 51..80: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0xCCFF00FF);
	    case 31..50: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0xFDE910FF);
	    case 16..30: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0xFF8800FF);
	    case 0..15: PlayerTextDrawBoxColor(playerid, HungerProgress[playerid], 0xFF0600FF);
	}
	PlayerTextDrawShow(playerid, HungerProgress[playerid]);
}

stock ShowSpeedometerCoptrer(playerid)
{
	for(new i = 0; i < 7; i ++) PlayerTextDrawShow(playerid, copter_speed[i][playerid]);
}

stock HideSpeedometerCoptrer(playerid)
{
	for(new i = 0; i < 7; i ++) PlayerTextDrawHide(playerid, copter_speed[i][playerid]);
}

stock isNumeric(const string[])
{
	if(strlen(string) <= 0) return 0;
	for(new i = 0; i < strlen(string); i++)
	{
		if((string[i] > '9' || string[i] < '0' && string[i] != '-' && string[i] != '+')
				|| (string[i] == '-' && i != 0) || (string[i] == '+' && i != 0)) return 0;
	}
	if(strlen(string) == 1 && (string[0] == '-' || string[0] == '+')) return 0;
	return 1;
}

stock IsNumeric(const str[], pos = 0)
{
	do
	{
		if('0' <= str[pos] <= '9') continue;
		return 0;
	}
	while(str[++pos]);

	return 1;
}

forward OnPlayerChangeName(playerid, nickname[]);
public OnPlayerChangeName(playerid, nickname[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		SendErr(playerid, "Этот никнейм уже используется");
		return ShowPlayerDialogEx(playerid, D_JOB+20, 1, "{ebec86}>> Смена нонРП ника", "{FFFFFF}Введите будущий ник\n\n{FF6347}Возможно сменить только если у Вас нонРП ник!", "Принять", "Назад");
	}
	new full = 0;
	foreach(new i: Admins)
	{
		if(PlayerLogged[i] == false) continue;
		if(p_info[i][pAdmin] > 4) full++;
	}
	if(full == 0) return SendErr(playerid, "Модераторы игровых логинов сейчас находятся оффлайн!");
	set_name = playerid;
	strmid(PlayerName[playerid], nickname, 0, strlen(nickname), MAX_PLAYER_NAME);
	SendClientMessage(playerid, COLOR_YELLOW, "Вы успешно отправили заявку на смену игрового ника");
	new string[128];
	format(string, sizeof(string), "[Смена Nick_Name]: %s[%i] просит сменить нонРП имя на %s", GetName(playerid), playerid, nickname);
	SendAdminMessage(COLOR_LIME, string);
	foreach(new i: Admins)
	{
		if(PlayerLogged[i] == false) continue;
		if(p_info[i][pAdmin] > 4)
		{
			SendClientMessage(i, COLOR_YELLOW, "Введите /setname, чтобы принять заявку");
		}
	}
	return 1;
}

forward OnPlayerChangeDonateName(playerid, nickname[]);
public OnPlayerChangeDonateName(playerid, nickname[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		SendErr(playerid, "Этот никнейм уже используется");
		return ShowPlayerDialogEx(playerid, D_JOB+179, 1, "{ebec86}>> Смена ника", "{FFFFFF}Введите будущий ник:", "Принять", "Назад");
	}
	if(GetPlayerHouse(playerid) > 0)
	{
		new i = GetPVarInt(playerid, "PlayerHouse");
		format(HouseInfo[i][hOwner], MAX_PLAYER_NAME, nickname);
		MysqlUpdateHouseStr(i, "hOwner", nickname);
	}
	if(GetPlayerBizz(playerid) > 0)
	{
		new i = GetPVarInt(playerid, "PlayerBizz");
		format(BizzInfo[i][bOwner], MAX_PLAYER_NAME, nickname);
		MysqlUpdateBizzStr(i, "owner", nickname);
		UpdateBizz(i);
	}

	new rowss;
	new string[128];
	new Cache: result;

	format(string, sizeof string, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(playerid));
	result = mysql_query(dbHandle, string);
	rowss = cache_num_rows();

	if(rowss)
	{
		format(string, sizeof string, "UPDATE ownable_cars SET owner_name='%s' WHERE owner_name='%s'", nickname, GetName(playerid));
		mysql_query(dbHandle, string);
		cache_delete(result);
	}

	cache_delete(result);

	format(string, sizeof(string), "%s сменил(а) ник на %s", GetName(playerid), nickname);
	SendClientMessageToAll(COLOR_ORANGE, string);
	p_info[playerid][pCredits] -= 150;
	
	new query[128];
	format(query, sizeof(query), "SELECT `referal` FROM `accounts` WHERE `name`='%s'", p_info[playerid][pName]);
	mysql_tquery(dbHandle, query, "MysqlPayAZCheck", "dd", playerid, 15);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET name='%s',credits=%i WHERE name='%s' LIMIT 1", nickname, p_info[playerid][pCredits], GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	if(p_info[playerid][pAdmin])
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ADMIN" SET name='%s' WHERE name='%s' LIMIT 1", nickname, GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[playerid][pHelper])
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HELPER" SET name='%s' WHERE name='%s' LIMIT 1", nickname, GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	
	if(p_info[playerid][pFamilySozd] > 0)
	{
	    STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_FAMILY" SET fam_creator='%s' WHERE fam_id='%d' LIMIT 1", nickname, p_info[playerid][pFamily]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[playerid][pFamilyZam] > 0)
	{
	    STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_FAMILY" SET fam_zamcreator='%s' WHERE fam_id='%d' LIMIT 1", nickname, p_info[playerid][pFamily]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET referal='%s' WHERE referal='%s' LIMIT 1", nickname, GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO `historyname` (`idacca`, `Name`, `lastname`) VALUE ('%d', '%s', '%s')", p_info[playerid][pID], nickname, GetName(playerid));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	format(GetName(playerid), MAX_PLAYER_NAME, nickname);
	SetPlayerName(playerid, nickname);
	SCMF(playerid, COLOR_GREEN, "Ваше новое имя: {ffffff}%s", nickname);
	SendClientMessage(playerid, COLOR_GREEN, "Обязательно нужно сделать скриншот. Клавиша: {ffffff}F8");
	SendClientMessage(playerid, COLOR_GREEN, "Пропишите свой новый ник в окне {ffffff}CR:MP");
	Kick(playerid);
	return 1;
}

forward OnPlayerSetName(playerid, nickname[]);
public OnPlayerSetName(playerid, nickname[])
{
	new string[128];
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		format(string, sizeof(string), "{FFFFFF}Введите будущий ник для игрока: %s", GetName(NameStats[playerid]));
		ShowPlayerDialogEx(playerid, D_UCPADMIN2, DIALOG_STYLE_INPUT, "{ebec86}>> Имя игрока", string, "Принять", "Отмена");
		return SendErr(playerid, "Этот никнейм уже используется");
	}
	if(GetPlayerHouse(NameStats[playerid]))
	{
		new i = GetPVarInt(NameStats[playerid], "PlayerHouse");
		strmid(HouseInfo[i][hOwner], nickname, 0, strlen(nickname), MAX_PLAYER_NAME);
		MysqlUpdateHouseStr(i, "hOwner", nickname);
	}
	if(GetPlayerBizz(NameStats[playerid]))
	{
		new i = GetPVarInt(NameStats[playerid], "PlayerBizz");
		strmid(BizzInfo[i][bOwner], nickname, 0, strlen(nickname), MAX_PLAYER_NAME);
		MysqlUpdateBizzStr(i, "owner", nickname);
		UpdateBizz(i);
	}
	format(string, sizeof(string), "Вы сменили имя игрока %s на %s", GetName(NameStats[playerid]), nickname);
	SendClientMessage(playerid, COLOR_LIME, string);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET name = '%s' WHERE name = '%s' LIMIT 1", nickname, GetName(NameStats[playerid]));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	if(p_info[NameStats[playerid]][pAdmin])
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ADMIN" SET name='%s' WHERE name='%s' LIMIT 1", nickname, GetName(NameStats[playerid]));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(p_info[NameStats[playerid]][pHelper])
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_HELPER" SET name='%s' WHERE name='%s' LIMIT 1", nickname, GetName(NameStats[playerid]));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET referal='%s' WHERE referal='%s' LIMIT 1", nickname, GetName(NameStats[playerid]));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO `historyname` (`idacca`, `Name`, `lastname`) VALUE ('%d', '%s', '%s')", p_info[NameStats[playerid]][pID], nickname, GetName(NameStats[playerid]));
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	format(GetName(NameStats[playerid]), MAX_PLAYER_NAME, nickname);
	SetPlayerName(NameStats[playerid], nickname);
	format(string, sizeof(string), "Администратор %s сменил Вам никнейм", GetName(playerid));
	SendClientMessage(NameStats[playerid], COLOR_WHITE, string);
	format(string, sizeof(string), "Ваш новый никнейм: {ffffff}%s", nickname);
	SendClientMessage(NameStats[playerid], COLOR_GREEN, string);
	SendClientMessage(NameStats[playerid], COLOR_GREEN, "Обязательно нужно сделать скриншот. Клавиша: {ffffff}F8");
	SendClientMessage(NameStats[playerid], COLOR_GREEN, "Пропишите свой новый ник в окне {ffffff}SA:MP");
	Kick(NameStats[playerid]);
	return 1;
}

forward OnPlayerSetPhoneNumber(playerid);
public OnPlayerSetPhoneNumber(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(GetMoney(playerid) < 3000) return SendErr(playerid, "У вас не хватает денег!");
	if(rows)
	{
		new sim_card = RandomEx(100000, 999999);
		new str[60];
		format(str, sizeof(str), "SELECT * FROM "T_ACCOUNTS" WHERE phonenumber = '%i'", sim_card);
		mysql_tquery(dbHandle, str, "OnPlayerSetPhoneNumber", "i", playerid);
		SetPVarInt(playerid, "CheckNumber", sim_card);
		return 1;
	}
	p_info[playerid][pPhoneNumber] = GetPVarInt(playerid, "CheckNumber");
	new string[96];
	format(string, sizeof(string), "Вы купили SIM-карту. Ваш номер: {FFFFFF}%i", p_info[playerid][pPhoneNumber]);
	SendClientMessage(playerid, COLOR_BLUE, string);
	MysqlUpdatePlayerInt(playerid, "phonenumber", p_info[playerid][pPhoneNumber]);
	DeletePVar(playerid, "CheckNumber");
	ShowPlayerDialogEx(playerid, dialog_BUY_PHONE, DIALOG_STYLE_LIST, "{ebec86}>> Цвет телефона", "{FFFFFF}- Синий\n- Оранжевый\n- Черный\n- Розовый\n- Красный\n- Зелёный\n- Чёрно-синий\n- Жёлтый\n- Белый", "Выбрать", "Выйти");
	return 1;
}

forward MysqlCheckPhoneNumber(playerid, telephone);
public MysqlCheckPhoneNumber(playerid, telephone)
{
	if(cache_get_row_count(dbHandle) > 0) return SendErr(playerid, "Произошла ошибка при покупке SIM-карты, попробуйте еще раз!");
	new num;
	foreach(new i: Player)
	{
		if((p_info[i][pPhoneNumber] == telephone) && (i != playerid))
		{
			SendErr(playerid, "Произошла ошибка при покупке SIM-карты, попробуйте еще раз!");
			num++;
			break;
		}
	}
	if(num == 0)
	{
		p_info[playerid][pPhoneNumber] = telephone;
		SCMF(playerid, COLOR_BLUE, "Вы купили мобильный телефон. Ваш номер: {FFFFFF}%i", telephone);
		MysqlUpdatePlayerInt(playerid, "phonenumber", p_info[playerid][pPhoneNumber]);
	}
	return 1;
}

CMD:offmembers(playerid)
{
	if(p_info[playerid][pLeader] < 1) return 1;
	ShowPlayerDialogEx ( playerid, d_offmembers_selection, DIALOG_STYLE_LIST, "{ebec86}>> Члены организации оффлайн", "{FFFFFF}1. Все члены организации оффлайн\n2. Фильтр по рангу", "Выбрать", "Назад" ) ;
	return 1;
}

forward GiveHelperZP(playerid);
public GiveHelperZP(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    new aans;
	    aans = cache_get_field_content_int(0, "ans", dbHandle);
	    if(aans > 99)
	    {
		    SendInf(playerid, "Вы получили хелпер-зарплату в размере 100 кредитов");
			p_info[playerid][pCredits] += 100;
			MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
		}
	}
	return 1;
}

forward AllHelpers(playerid);
public AllHelpers(playerid)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new string[72], aname[MAX_PLAYER_NAME], alevel, alastcon[15], adata[15], admin_name[32], aans;
	strcat(STRING_GLOBAL, "{ebec86}Посл. вход\tПоставлен\tНик(Уровень)\t\tОтветов\n");
	if(rows)
	{
		for(new i = 0; i < rows; i++)
		{
			cache_get_field_content(i, "name", aname, dbHandle, MAX_PLAYER_NAME);
			alevel = cache_get_field_content_int(i, "level", dbHandle);
			cache_get_field_content(i, "last_connect", alastcon, dbHandle, 15);
			cache_get_field_content(i, "data", adata, dbHandle, 15);
			aans = cache_get_field_content_int(i, "ans", dbHandle);
			format(admin_name, sizeof admin_name, "leader_name_id_%d", i+1);
			SetPVarString(playerid, admin_name, aname);
			format(string, sizeof(string), "{FFFFFF}%s\t%s\t%s(HLVL: %d)\t%d\n", alastcon, adata, aname, alevel, aans);
			strcat(STRING_GLOBAL, string);
		}
	}
	ShowPlayerDialogEx(playerid, D_REMOVEHELPER, DIALOG_STYLE_LIST, "{ebec86}>> Весь список хелперов", STRING_GLOBAL, "Снять", "");
	return 1;
}

forward AllAdmins(playerid);
public AllAdmins(playerid)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new string[72], aname[MAX_PLAYER_NAME], alevel, alastcon[15], adata[15], admin_name[32];
	strcat(STRING_GLOBAL, "{ebec86}Посл. вход\tПоставлен\tНик(Уровень | Выговоры)\n");
	if(rows)
	{
		for(new i = 0; i < rows; i++)
		{
			cache_get_field_content(i, "name", aname, dbHandle, MAX_PLAYER_NAME);
			alevel = cache_get_field_content_int(i, "level", dbHandle);
			cache_get_field_content(i, "last_connect", alastcon, dbHandle, 15);
			cache_get_field_content(i, "data", adata, dbHandle, 15);
			format(admin_name, sizeof admin_name, "admin_name_id_%d", i+1);
			SetPVarString(playerid, admin_name, aname);
			format(string, sizeof(string), "{FFFFFF}%s\t%s\t%s(ALVL: %d)\n", alastcon, adata, aname, alevel);
			strcat(STRING_GLOBAL, string);
		}
	}
	ShowPlayerDialogEx(playerid, D_REMOVEADMIN, DIALOG_STYLE_LIST, "{ebec86}>> Весь список администрации", STRING_GLOBAL, "Снять", "");
	return 1;
}

forward Allleaders(playerid);
public Allleaders(playerid)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new warn_count, string[72], aname[MAX_PLAYER_NAME], aaleader[16], aleader, alastcon[15], leader_name[32];
	strcat(STRING_GLOBAL, "{ebec86}Посл. вход\tФракция\tНик(Выговоры)\n");
	if(rows)
	{
		for(new i = 0; i < rows; i++)
		{
			cache_get_field_content(i, "name", aname, dbHandle, MAX_PLAYER_NAME);
			aleader = cache_get_field_content_int(i, "leader", dbHandle);
			warn_count = cache_get_row_int(i, 159, dbHandle);
			cache_get_field_content(i, "datavhod", alastcon, dbHandle, 15);
			switch(aleader)
			{
				case 1: aaleader = "Пра-во";
				case 2: aaleader = "ДПС";
				case 3: aaleader = "УВД";
				case 4: aaleader = "ФСБ";
				case 5: aaleader = "ЦРБ";
				case 6: aaleader = "АШ";
				case 7: aaleader = "Ю. ОПГ";
				case 8: aaleader = "А. ОПГ";
				case 9: aaleader = "Рифа";
				case 10: aaleader = "Ацтек";
				case 11: aaleader = "Вагос";
				case 12: aaleader = "Армия";
				case 15: aaleader = "Л. ОПГ";
				case 16: aaleader = "Б. ОПГ";
				case 18: aaleader = "RECORD FM";
				case 21: aaleader = "ОМОН";
				default: aaleader = "null";
			}
			format(leader_name, sizeof leader_name, "leader_name_id_%d", i+1);
			SetPVarString(playerid, leader_name, aname);
			format(string, sizeof(string), "{FFFFFF}%s\t%s\t\t%s(%d/3)\n", alastcon, aaleader, aname, warn_count);
			strcat(STRING_GLOBAL, string);
		}
	}
	ShowPlayerDialogEx(playerid, D_REMOVELEADER, DIALOG_STYLE_LIST, "{ebec86}>> Список лидеров", STRING_GLOBAL, "Снять", "");
	return 1;
}

forward OnPlayerReferal(playerid);
public OnPlayerReferal(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendErr(playerid, "Такого игрока нет");
		DeletePVar(playerid, "reg_referal");
        new dialog_string [ 300 ] ;

		new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
		GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
		GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
		GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
		ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
		ds_race = GetPVarInt ( playerid, "reg_race" ) ;
		ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

		format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
		format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
		format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
		format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
		format ( dialog_string, sizeof ( dialog_string ),"%sСтрана: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
		format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
		if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
		else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
		ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
		return 1;
	}
	new name[MAX_PLAYER_NAME];
	GetPVarString(playerid, "reg_referal", name, sizeof(name));
	strmid(p_info[playerid][pReferal], name, 0, strlen(name), MAX_PLAYER_NAME);

  	new dialog_string [ 300 ] ;
	new ds_password [ 24 ], ds_email [ 32 ], ds_referal [ MAX_PLAYER_NAME ], ds_gender, ds_race, ds_skin ;
	GetPVarString ( playerid, "reg_referal", ds_referal, MAX_PLAYER_NAME ) ;
	GetPVarString ( playerid, "reg_password", ds_password, 24 ) ;
	GetPVarString ( playerid, "reg_email", ds_email, 32 ) ;
	ds_gender = GetPVarInt ( playerid, "reg_gender" ) ;
	ds_race = GetPVarInt ( playerid, "reg_race" ) ;
	ds_skin = GetPVarInt ( playerid, "reg_skin" ) ;

	format ( dialog_string, sizeof ( dialog_string ),"{FFFFFF}Пароль: %s%s\n{FFFFFF}", ( strlen ( ds_password ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_password ) > 1 ) ? ( ds_password ) : ( "Не задан" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sПочта: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_email ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_email ) > 1 ) ? ( ds_email ) : ( "Не задана" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sРеферал: %s%s\n{FFFFFF}", dialog_string, ( strlen ( ds_referal ) > 1 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( strlen ( ds_referal ) > 1 ) ? ( ds_referal ) : ( "Не задан" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sПол: %s%s\n{FFFFFF}", dialog_string, ( ds_gender < 2 ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_gender == 2 ) ? ( "Не задан" ) : ( ds_gender == 0 ) ? ( "Мужской" ) : ( "Женский" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sРаса: %s%s\n{FFFFFF}", dialog_string, ( ds_race ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_race ) ? ( race_name_str [ ds_race - 1 ] ) : ( "Не задана" ) ) ;
	format ( dialog_string, sizeof ( dialog_string ),"%sВнешность: %s%s\n{FFFFFF}", dialog_string, ( ds_skin ) ? ( "{f0e86b}" ) : ( "{FF6347}" ), ( ds_skin ) ? ( "Выбрана" ) : ( "Не выбрана" ) ) ;
	if ( ds_gender && ds_race && ds_skin && strlen ( ds_email ) > 1 && strlen ( ds_password ) > 1 )format ( dialog_string, sizeof ( dialog_string ),"%s{f0e86b}Продолжить регистрацию", dialog_string ) ;
	else format ( dialog_string, sizeof ( dialog_string ),"%s{FF6347}Продолжить регистрацию", dialog_string ) ;
	ShowPlayerDialogEx ( playerid, d_reg_main, DIALOG_STYLE_LIST, "{ebec86}>> Регистрация", dialog_string, "Далее", "Отмена" ) ;
	return 1;
}

stock Float: _GetAngleToPoint(Float:x1, Float:y1, Float:x2, Float:y2)
{
	return atan2(y1-y2, x1-x2)-90.0;
}

stock PlayerSecurity(playerid)
{
	STRING_GLOBAL = "";
	new pohodka[50], anim[50];
	switch(p_info[playerid][pSetWalk])
	{
 		case 0: pohodka = "{f0e86b}Стандартная{FFFFFF}";
 		case 1: pohodka = "{f0e86b}Походка 1{FFFFFF}";
 		case 2: pohodka = "{f0e86b}Походка 2{FFFFFF}";
 		case 3: pohodka = "{f0e86b}Походка 3{FFFFFF}";
 		case 4: pohodka = "{f0e86b}Походка 4{FFFFFF}";
 		case 5: pohodka = "{f0e86b}Походка 5{FFFFFF}";
 		case 6: pohodka = "{f0e86b}Походка 6{FFFFFF}";
 		case 7: pohodka = "{f0e86b}Походка 7{FFFFFF}";
 		case 8: pohodka = "{f0e86b}Походка 8{FFFFFF}";
 		case 9: pohodka = "{f0e86b}Походка 9{FFFFFF}";
 		case 10: pohodka = "{f0e86b}Походка 10{FFFFFF}";
 		case 11: pohodka = "{f0e86b}Походка 11{FFFFFF}";
	}

	switch(p_info[playerid][pSetAnim])
	{
	    case 0: anim = "{f0e86b}Стандартный{FFFFFF}";
		case 1: anim = "{f0e86b}Стиль 1{FFFFFF}";
		case 2: anim = "{f0e86b}Стиль 2{FFFFFF}";
 		case 3: anim = "{f0e86b}Стиль 3{FFFFFF}";
		case 4: anim = "{f0e86b}Стиль 4{FFFFFF}";
		case 5: anim = "{f0e86b}Стиль 5{FFFFFF}";
		case 6: anim = "{f0e86b}Стиль 6{FFFFFF}";
	}
	format(STRING_GLOBAL, 512, "1. Способ оплаты [{f0e86b}%s{FFFFFF}]\n2. Стиль походки [%s{FFFFFF}]\n3. Стиль разговора [%s{FFFFFF}]\n4. Damage Informer [%s{FFFFFF}]\n5. Колокольчик [%s{FFFFFF}]\n6. Смена NickName\n7. Смена пароля\n8. Потверждение почты\n9. Информация об авторизации\n10. Графический пароль [%s]\n{ebec86}- Настройки графического пароля",
	(GeneralCard[playerid] == 1) ? ("Банковская Карта") : ("Наличные"), pohodka, anim,
	(DamageInfo[playerid] == 0) ? ("{f0e86b}Включено") : ("{FF6347}Выключено"), (Kolokol[playerid] == 0) ? ("{f0e86b}Включено") : ("{FF6347}Выключено"), (!p_info[playerid][pCheckCode]) ? ("{FF6347}Отключено{FFFFFF}") : ("{f0e86b}Включено{FFFFFF}"));
	ShowPlayerDialogEx(playerid, D_JOB+201, 2, "{ebec86}>> Безопасность", STRING_GLOBAL, "Выбрать", "Назад");
	return 1;
}

stock GPSPlayer_(playerid, Float:X, Float:Y, Float:Z, locname[])
{
	if(X == 0.0) return SendErr(playerid, "Критическая ошибка! Обратитесь к администрации!");
	if(GetPVarInt(playerid, "AdminTeleport") == 1)
	{
	    SetPlayerPos(playerid, X, Y, Z);
	    DeletePVar(playerid, "AdminTeleport");
	    return 1;
	}
	UseGPS[playerid] = true;
	DisablePlayerRaceCheckpoint(playerid);
	SetPlayerRaceCheckpoint(playerid, 1, X, Y, Z, 0, 0, 0, 5.0);
	new string[128];
	format(string, sizeof(string), "Вы отметили на карте: {ebec86}%s. {ffffff}Расстояние: {ebec86}%.1f м", locname, GetPlayerDistanceFromPoint(playerid, X, Y, Z));
	SendClientMessage(playerid, COLOR_WHITE, string);
	SetGPSMarker(playerid, locname, X, Y, Z);
	return 1;
}

stock SetGPSMarker(playerid, const text[], Float:x, Float:y, Float:z)
{
    if(markDist[playerid] != 0.0) KillTimer(markTimer[playerid]);

    markX[playerid] = x;
    markY[playerid] = y;
    markZ[playerid] = z;

    markDist[playerid] = GetPlayerDistanceFromPoint(playerid, x, y, z);
    markTimer[playerid] = SetTimerEx("UpdateDist", 100, true, "i", playerid);

    format(STRING_GLOBAL, 50, "GPS~n~~y~%s", text);
    PlayerTextDrawSetString(playerid, TD_GPS[playerid][1], STRING_GLOBAL);
    ShowGPSTextDraws(playerid);
}

forward UpdateDist(playerid);
public UpdateDist(playerid)
{
    new Float:dist = GetPlayerDistanceFromPoint(playerid, markX[playerid], markY[playerid], markZ[playerid]);
    new Float:distProc = (dist * 100) / markDist[playerid];
    new Float:newWidth = 76 + (distProc * 0.515);

    if(newWidth > 127.5000000) newWidth = 127.5000000;

    PlayerTextDrawTextSize(playerid,TD_GPS[playerid][4], newWidth, 0.000000);
    PlayerTextDrawShow(playerid, TD_GPS[playerid][4]);

    format(STRING_GLOBAL, 15, "%.0f м.", dist);
    PlayerTextDrawSetString(playerid, TD_GPS[playerid][5], STRING_GLOBAL);
}

stock ShowGPSTextDraws(playerid)
{
    PlayerTextDrawShow(playerid, TD_GPS[playerid][0]);
    PlayerTextDrawShow(playerid, TD_GPS[playerid][1]);
    PlayerTextDrawShow(playerid, TD_GPS[playerid][2]);
    PlayerTextDrawShow(playerid, TD_GPS[playerid][3]);
    PlayerTextDrawShow(playerid, TD_GPS[playerid][4]);
    PlayerTextDrawShow(playerid, TD_GPS[playerid][5]);
}

stock HideGPSTextDraws(playerid)
{
    PlayerTextDrawHide(playerid, TD_GPS[playerid][0]);
    PlayerTextDrawHide(playerid, TD_GPS[playerid][1]);
    PlayerTextDrawHide(playerid, TD_GPS[playerid][2]);
    PlayerTextDrawHide(playerid, TD_GPS[playerid][3]);
    PlayerTextDrawHide(playerid, TD_GPS[playerid][4]);
    PlayerTextDrawHide(playerid, TD_GPS[playerid][5]);
}

stock SendMessageInLocal(playerid, message[], color, Float: radius = 30.0)
{
	new virtual_world = GetPlayerVirtualWorld(playerid);
	new Float: x, Float: y, Float: z;
	GetPlayerPos(playerid, x, y, z);

	foreach(new idx : Player)
	{
		if(!PlayerLogged[idx]) continue;
		if(GetPlayerVirtualWorld(idx) != virtual_world) continue;
		if(!IsPlayerInRangeOfPoint(idx, radius, x, y, z)) continue;

		SendClientMessage(idx, color, message);
	}
	return 1;
}

stock MeAction(playerid, message[], Float:radius = 25.0, bool:bubble = true)
{
	if(bubble)
		SetPlayerChatBubble(playerid, message, COLOR_PURPLE, radius, 7000);

	new fmt_str[128];
	format(fmt_str, sizeof fmt_str, "%s %s", GetName(playerid), message);
	SendMessageInLocal(playerid, fmt_str, COLOR_PURPLE, radius);
	return 1;
}

stock DoAction(playerid, action[])
{
	new string[128];
	SetPlayerChatBubble(playerid, action, COLOR_PURPLE, 5.0, 7500);
	format(string, sizeof(string), "%s | %s", action, GetName(playerid));
	SendClientMessage(playerid, COLOR_PURPLE, string);
	return 1;
}

stock TryAction(playerid, action[])
{
	new string[128];
	if(random(2) == 1) format(string, sizeof(string), "%s %s - {f0e86b}удачно", GetName(playerid), action);
	else format(string, sizeof(string), "%s %s - {FF6347}неудачно", GetName(playerid), action);
	SendClientMessage(playerid, COLOR_PURPLE, string);
	return 1;
}

forward OnPlayerOffban(playerid, name[], day, reason[]);
public OnPlayerOffban(playerid, name[], day, reason[])
{
	if(cache_get_row_count(dbHandle) > 0)
	{
		new string[144];
		format(string, sizeof(string), "Администратор %s заблокировал аккаунт %s в Offline на %i дней. Причина: %s", GetName(playerid), name, day, reason);
		SendClientMessageToAll(COLOR_RED, string);

		getdate(years, months, days);
		new unbandate = gettime() + day*86400;
		new data[15];
		format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', '%d', '%d', '%s')", name, GetName(playerid), cache_get_row_int(0, 3, dbHandle), data, day, unbandate, reason);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET warn = 0,member = 0,leader = 0,templeader = 0,rank = 0,job = 0,spawnchange = 0 WHERE name = '%s'", name);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

		STRING_GLOBAL[0] = EOS;
		mysql_format(dbHandle, STRING_GLOBAL, 128, "UPDATE "T_ADMIN" SET `bans` = bans+1 WHERE `name` = '%s'", GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	else SendErr(playerid, "Игрок не найден");

	admin_attempt[playerid] ++ ;
	if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
	if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
	{
		admin_ban_time[playerid] = 600;
		MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
		admin_attempt[playerid] = 0;
		admin_check_time[playerid] = 0;
		SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
		return 1;
	}

	return 1;
}

forward OnPlayerOffwarn(playerid, name[], reason[]);
public OnPlayerOffwarn(playerid, name[], reason[])
{
	if(cache_get_row_count(dbHandle) > 0)
	{
		new string[250];
		if(cache_get_row_int(0, 20, dbHandle) < 3)
		{
			format(string, sizeof(string), "Игрок %s получил оффлайн предупреждение от администратора %s. Причина: %s", name, GetName(playerid), reason);
			SendClientMessageToAll(COLOR_RED, string);
			format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET warn=warn+1,member=0,leader=0,templeader=0,rank=0,job=0,spawnchange=0 WHERE name='%s'", name);
			mysql_tquery(dbHandle, string, "", "");
		}
		else
		{
			new data[15], unbandate;
			format(string, sizeof(string), "Игрок %s получил оффлайн бан на 7 дней от администратора %s. Причина: %s", name, GetName(playerid), reason);
			SendClientMessageToAll(COLOR_RED, string);
			getdate(years, months, days);
			unbandate = gettime() + 7*86400;
			format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
			format(string, sizeof(string), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', '%s', '%s', '%s', 7, %d, '%s')", name, GetName(playerid), cache_get_row_int(0, 3, dbHandle), data, unbandate, reason);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET warn=0,member=0,leader=0,templeader=0,rank=0,job=0,spawnchange=0 WHERE name='%s'", name);
			mysql_tquery(dbHandle, string, "", "");
		}
	}
	else SendErr(playerid, "Игрок не найден!");

	admin_attempt[playerid] ++ ;
	if(!GetPVarInt(playerid, "CHECKTIME")) admin_check_time[playerid] = gettime() + 20, SetPVarInt(playerid, "CHECKTIME", 1);
	if(admin_attempt[playerid] >= 3 && admin_check_time[playerid] > gettime())
	{
		admin_ban_time[playerid] = 600;
		MysqlUpdatePlayerInt(playerid, "ban_time", admin_ban_time[playerid]);
		admin_attempt[playerid] = 0;
		admin_check_time[playerid] = 0;
		SendClientMessage(playerid, COLOR_RED, "Ваши действия были заблокированы по подозрению в сливе, администрация оповещена");
		return 1;
	}
	return 1;
}

forward OnPlayerUnban(playerid, name[]);
public OnPlayerUnban(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendErr(playerid, "Данный игрок не забанен!");
	else
	{
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "DELETE FROM bans WHERE name = '%s'", name);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[{ebec86}A{828282}] %s[%d] разбанил игрока %s", GetName(playerid), playerid, name);
		SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
		
		format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] %s разбанил %s", GetName(playerid), name);
		WriteLog(TYPE_LOG_UNBAN,STRING_GLOBAL);
	}
	return 1;
}

forward OnPlayerOffgeta(playerid, name[]);
public OnPlayerOffgeta(playerid, name[])
{
	if(cache_get_row_count(dbHandle) > 0)
	{
		new string[64], cash, bank, level, regip[16], lastip[16], datareg[15], datavhod[15], donate, online[7];
		cash = cache_get_row_int(0, 11, dbHandle);
		bank = cache_get_row_int(0, 12, dbHandle);
		level = cache_get_row_int(0, 10, dbHandle);
		cache_get_row(0, 14, regip, dbHandle, 16);
		cache_get_row(0, 3, lastip, dbHandle, 16);
		cache_get_row(0, 15, datareg, dbHandle, 15);
		cache_get_field_content(0, "datavhod", datavhod, dbHandle, 15);
		donate = cache_get_row_int(0, 58, dbHandle);
		
		online[0] = cache_get_row_int(0, 112, dbHandle);
		online[1] = cache_get_row_int(0, 113, dbHandle);
		online[2] = cache_get_row_int(0, 114, dbHandle);
		online[3] = cache_get_row_int(0, 115, dbHandle);
		online[4] = cache_get_row_int(0, 116, dbHandle);
		online[5] = cache_get_row_int(0, 117, dbHandle);
		online[6] = cache_get_row_int(0, 118, dbHandle);

		STRING_GLOBAL[0] = EOS;
		format(string, sizeof(string), "Наличные: %i\n", cash);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Банковский счёт: %i\n", bank);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Уровень: %i\n", level);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "IP адрес (регис.): %s\n", regip);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "IP адрес (последн.): %s\n", lastip);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Дата регистрации: %s\n", datareg);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Посл. вход: %s\n", datavhod);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Донат: %i\n", donate);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Суббота: %d ч.\n", online[0]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Воскресенье: %d ч.\n", online[1]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Понедельник: %d ч.\n", online[2]);
		strcat(STRING_GLOBAL, string);
        format(string, sizeof string, "Вторник: %d ч.\n", online[3]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Среда: %d ч.\n", online[4]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Четверг: %d ч.\n", online[5]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Пятница: %d ч.\n", online[6]);
		strcat(STRING_GLOBAL, string);
		ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, name, STRING_GLOBAL, "Закрыть", "");
	}
	else SendErr(playerid, "Игрок не найден");
	return 1;
}

forward OnPlayerOffget(playerid, name[]);
public OnPlayerOffget(playerid, name[])
{
	if(cache_get_row_count(dbHandle) > 0)
	{
		new string[64], cash, bank, level, regip[16], lastip[16], datareg[15], datavhod[15], donate, online[7];
		cash = cache_get_row_int(0, 11, dbHandle);
		bank = cache_get_row_int(0, 12, dbHandle);
		level = cache_get_row_int(0, 10, dbHandle);
		cache_get_row(0, 14, regip, dbHandle, 16);
		cache_get_row(0, 3, lastip, dbHandle, 16);
		cache_get_row(0, 15, datareg, dbHandle, 15);
		cache_get_field_content(0, "datavhod", datavhod, dbHandle, 15);
		donate = cache_get_row_int(0, 58, dbHandle);

		online[0] = cache_get_row_int(0, 112, dbHandle);
		online[1] = cache_get_row_int(0, 113, dbHandle);
		online[2] = cache_get_row_int(0, 114, dbHandle);
		online[3] = cache_get_row_int(0, 115, dbHandle);
		online[4] = cache_get_row_int(0, 116, dbHandle);
		online[5] = cache_get_row_int(0, 117, dbHandle);
		online[6] = cache_get_row_int(0, 118, dbHandle);

		STRING_GLOBAL[0] = EOS;
		format(string, sizeof(string), "Наличные: %i\n", cash);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Банковский счёт: %i\n", bank);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Уровень: %i\n", level);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "IP адрес (регис.): %s\n", regip);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "IP адрес (последн.): %s\n", lastip);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Дата регистрации: %s\n", datareg);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Посл. вход: %s\n", datavhod);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof(string), "Донат: %i\n", donate);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Суббота: %d ч.\n", online[0]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Воскресенье: %d ч.\n", online[1]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Понедельник: %d ч.\n", online[2]);
		strcat(STRING_GLOBAL, string);
        format(string, sizeof string, "Вторник: %d ч.\n", online[3]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Среда: %d ч.\n", online[4]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Четверг: %d ч.\n", online[5]);
		strcat(STRING_GLOBAL, string);
		format(string, sizeof string, "Пятница: %d ч.\n", online[6]);
		strcat(STRING_GLOBAL, string);
		ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, name, STRING_GLOBAL, "Закрыть", "");
	}
	else SendErr(playerid, "Игрок не найден");
	return 1;
}

stock SetString(param_1[], param_2[], size = 300)
{
	return strmid(param_1, param_2, 0, strlen(param_2), size);
}

stock GetString(param1[],param2[])
{
	return !strcmp(param1, param2, false);
}

forward GmTest(playerid, targetid, Float:oldhealth);
public GmTest(playerid, targetid, Float:oldhealth)
{
	new Float: newhealth;
	GetPlayerHealth(targetid, newhealth);
	new mes[256], string[60];
	if(oldhealth == newhealth) string = "{FF6347}Возможно игрок использует God Mode(GM)";
	if(oldhealth != newhealth) string = "{05E900}Вероятно игрок чист, показатель его HP уменьшился";
	format(mes, sizeof(mes), "{FFFFFF}Было: %.0f.0 (HP)\n{FFFFFF}Стало: %.0f.0 (HP)\n{FFFFFF}Уменьшилось на: %.0f.0 (HP)\n\n%s", oldhealth, newhealth, oldhealth-newhealth, string);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, GetName(targetid), mes, "Закрыть", "");
	SetHealth(targetid, oldhealth);
	StartGMTest[playerid] = false;
	return 1;
}

forward StealMats(playerid);
public StealMats(playerid)
{
	new string[128], newslot;
	
	new ammo;
	new gunammo;
	
	switch(random(2))
	{
	    case 0: ammo = random(5) + 1;
	    case 1: gunammo = random(5) + 1;
	}

	if(gArmyWarehouse[1] < ammo) return SendErr(playerid, "На складе армии нет патронов");
	if(gArmyWarehouse[0] < gunammo) return SendErr(playerid, "На складе армии нет металла");
	
	if(CheckMaxVes(playerid, 42, ammo, newslot) == 1 || CheckMaxVes(playerid, 69, ammo, newslot) == 1) return SendErr(playerid, "Ваш инвентарь полон");

	if(ammo > 0)
	{
	    new ok;
		for(new s = 16; s > 0; s --)
		{
			if(PlayerItem1[playerid][s] == 42)
			{
				ok = s;
				break;
			}
			else if(PlayerItem1[playerid][s] != 42 && PlayerItem1[playerid][s] == 0)
			{
			    PlayerItem1[playerid][s] = 42;
			    PlayerItem2[playerid][s] += 1;
			    break;
			}
		}
		
		if(PlayerItem2[playerid][ok] == 0)
		{
			PlayerItem1[playerid][ok] = 0;
		}
		
		PlayerItem2[playerid][ok] += ammo;
		
		format(string, sizeof(string), "~b~ПАТРОНОВ: +%d", ammo);
		GameTextForPlayer(playerid, string, 1500, 6);
		
		gArmyWarehouse[1] -= ammo;
	}
	if(gunammo > 0)
	{
	    new ok;
		for(new s = 16; s > 0; s --)
		{
			if(PlayerItem1[playerid][s] == 69)
			{
				ok = s;
				break;
			}
			else if(PlayerItem1[playerid][s] != 69 && PlayerItem1[playerid][s] == 0)
			{
			    PlayerItem1[playerid][s] = 69;
			    PlayerItem2[playerid][s] += 1;
			    break;
			}
		}
		
		if(PlayerItem1[playerid][ok] == 0)
		{
			PlayerItem1[playerid][ok] = 0;
		}
		
		PlayerItem2[playerid][ok] += gunammo;
		
		format(string, sizeof(string), "~b~МЕТАЛЛА: +%d", gunammo);
		GameTextForPlayer(playerid, string, 1500, 6);
		
		gArmyWarehouse[0] -= gunammo;
	}

	format(string,sizeof(string),"{FFFFFF}Патронов: {f0e86b}%d\n{FFFFFF}Металла: {f0e86b}%d", gArmyWarehouse[1], gArmyWarehouse[0]);
	UpdateDynamic3DTextLabelText(gArmyWarehouseText,0xFFFFFFFF,string);
	return 1;
}

forward StealMoney(playerid);
public StealMoney(playerid)
{
	new string[128];
	new money;
	
 	if(robbery_players[playerid] == robbery_bank[0] && GetPlayerVirtualWorld(playerid) == 1)
 	{
 	    if(doubling_job) money = random(500) + 100;
		else money = random(500) + 1;

		robbery_money[0] += money;
		format(string, sizeof(string), "~b~~g~+%d~w~ рублей", money);
		GameTextForPlayer(playerid, string, 1500, 6);

		if(GetPVarInt(playerid,"StealMoneyAnim") < gettime()) ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0,1);
		SetPVarInt(playerid, "StealMoneyAnim", gettime() + 5);
 	}
 	
  	if(robbery_players[playerid] == robbery_bank[1] && GetPlayerVirtualWorld(playerid) == 2)
  	{
 	    if(doubling_job) money = random(500) + 100;
		else money = random(500) + 1;

		robbery_money[0] += money;
		format(string, sizeof(string), "~b~~g~+%d~w~ рублей", money);
		GameTextForPlayer(playerid, string, 1500, 6);

		if(GetPVarInt(playerid,"StealMoneyAnim") < gettime()) ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0,1);
		SetPVarInt(playerid, "StealMoneyAnim", gettime() + 5);
 	}
 	
   	if(robbery_players[playerid] == robbery_bank[2] && GetPlayerVirtualWorld(playerid) == 3)
   	{
 	    if(doubling_job) money = random(500) + 100;
		else money = random(500) + 1;

		robbery_money[0] += money;
		format(string, sizeof(string), "~b~~g~+%d~w~ рублей", money);
		GameTextForPlayer(playerid, string, 1500, 6);

		if(GetPVarInt(playerid,"StealMoneyAnim") < gettime()) ApplyAnimation(playerid,"GANGS","hndshkba",4.1,0,0,0,0,0,1);
		SetPVarInt(playerid, "StealMoneyAnim", gettime() + 5);
 	}
	return 1;
}

stock BadFloat(Float:x)
{
	if(x >= 10.0 || x <= -10.0) return 1;
	return 0;
}

stock IsIpFound(text[])
{
	new strlen_tt = strlen(text);
	for(new i = 0; i < strlen_tt; i++)
	{
		new a[2],c=0;
		for(new j = 0; j < strlen_tt; j++) //5
		{
			strmid(a,text,i+j,i+j+1,2);
			if('0' <= a[0] <= '9')
			{
				c++;
			}
		}
		if(c == 9) return 1;
	}
	return 0;
}

stock CheckString(string[])
{
	static const WebSites[][] = {
		".ws",".ru",".tk",".rp","www.",".org",".net",".cc",".рф",".by",".biz",".su",".info",
		".ru",".ru","Переезд","Новый сервер","NEW IP",".ru",".ru","vk . com",
		".ws",".ws","дам админку","vk f.com","cheat-master",".ws","Чит Мастер",
		"Bathory","youtube.com","мамк","mq","МАМК","mamke привет",
		"MQ","CM_","CHEAT-MASTER","cheat master","CHEAT MASTER","positiv","POSITIV","Positiv",
		"нубо мод","дно сервер","нубо сервер","нубомод","дносервер","нубосервер","сервер гавно","217.106",
		"106.106"
	};
	for(new i = 0; i < sizeof(WebSites); i++)
	{
		if(strfind(string, WebSites[i], true) != -1) return 1;
	}
	return 0;
}

stock CheckExceptionName(string[])
{
	if(strfind(string, "Aurelius_Harrison", true) != -1)
	return 1;

	return 0;
}

stock PlayerGetsChatBan(playerid, text[])
{
	new string[90];
	format(string, sizeof(string), "* %s[%i] подозревается в рекламе", GetName(playerid), playerid);
	SendAdminMessage(COLOR_ORANGE, string);
	format(string, sizeof(string), "* Текст: %s", text);
	SendAdminMessage(COLOR_ORANGE, string);
	p_info[playerid][pMuted] = 20*60;
	MysqlUpdatePlayerInt(playerid, "mute", p_info[playerid][pMuted]);
	SendClientMessage(playerid, COLOR_RED, "Вы получили бан чата по подозрению в отправке рекламного сообщения");
	SendClientMessage(playerid, COLOR_RED, "Если вы считаете, что получили его ошибочно, свяжитесь с администрацией");
	return 1;
}

stock AdminAntisliv(playerid, text[])
{
	RemoveAdmin(playerid, GetName(playerid));
	new string[88];
	format(string, sizeof(string), "* %s[%i] подозревается во взломе", GetName(playerid), playerid);
	SendAdminMessage(COLOR_REDD, string);
	format(string, sizeof(string), "* Текст: %s", text);
	SendAdminMessage(COLOR_REDD, string);
	new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + 30*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', 'System', '%s', '%s', '30', '%d', 'Слив админки')", GetName(playerid), p_info[playerid][pIP], data, unbandate);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	Kick(playerid);
	return 1;
}

stock AttemptRemoveChiefAdmin(playerid)
{
	RemoveAdmin(playerid, GetName(playerid));
	new data[15], unbandate;
	getdate(years, months, days);
	unbandate = gettime() + 30*86400;
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "INSERT INTO bans (name, whobanned, ip, bandate, time, unbandate, reason) VALUES ('%s', 'System', '%s', '%s', '30', '%d', 'Слив админки')", GetName(playerid), p_info[playerid][pIP], data, unbandate);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[{ebec86}A{828282}] %s был снят за попытку выдать наказание главному администратору", GetName(playerid));
	SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
	Kick(playerid);
	return 1;
}

stock AttemptRemoveAdmin(playerid)
{
	SendErr(playerid, "Администратор выше вас рангом, или равен вам");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "[{ebec86}A{828282}] %s попытался выдать наказание администратору выше его по рангу", GetName(playerid));
	SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
	return 1;
}

stock RemoveAdmin(targetid, name[])
{
	p_info[targetid][pAdmin] = ADM_NONE;
	AdminLogged[targetid] = false;
	new string[128];
	mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_ADMIN" WHERE `name`='%s'", name);
	mysql_tquery(dbHandle, string, "", "");
	MysqlUpdatePlayerInt(targetid, "admin", p_info[targetid][pAdmin]);
	return 1;
}

stock SetSpawnInfoEx(playerid, skin, Float:x, Float:y, Float:z, Float:a)
return SetSpawnInfo(playerid, 255, skin, x, y, z-0.2, a, 0, 0, 0, 0, 0, 0);

stock HaveWeapon(playerid, weaponid)
{
	new weapons[13][2];
	for(new i = 0; i <= 12; i++)
	{
		GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);
		if((weapons[i][0] == weaponid) && weapons[i][1]) return 1;
	}
	return 0;
}

stock split(const strsrc[], strdest[][], delimiter)
{
	new i, li, aNum, len;
	while(i <= strlen(strsrc))
	{
		if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

forward SetAdmin(playerid, name[], level);
public SetAdmin(playerid, name[], level)
{
	new rows, fields, string[256];
	cache_get_data(rows, fields);
	if(rows)
	{
		if(!level)
		{
			if(GetPlayerID(name) != INVALID_PLAYER_ID) p_info[GetPlayerID(name)][pAdmin] = 0;
			mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_ADMIN" WHERE `name`='%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ACCOUNTS" SET `admin` = '0' WHERE `name` = '%s'", name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "Вы сняли %s с должности администратора", name);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
			if(GetPlayerID(name) != INVALID_PLAYER_ID) p_info[GetPlayerID(name)][pAdmin] = level;
			mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET `level` = '%d' WHERE `name` = '%s' LIMIT 1", level, name);
			mysql_tquery(dbHandle, string, "", "");
			format(string, sizeof(string), "Вы установили уровень администратора %s на %i", name, level);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			
			format(STRING_GLOBAL, 128, "%s выдал ADMLVL %s (%d)", GetName(playerid), name, level);
			WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);
		}
	}
	else
	{
		if(!level) return SendErr(playerid, "Игрок не администратор");
		new data[15];
		getdate(years, months, days);
		format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
		mysql_format(dbHandle, string, sizeof(string), "INSERT INTO "T_ADMIN" (`name`, `level`, `last_connect`, `put_admin`, `data`) VALUES ('%s', %d, '%s', '%s', '%s')", name, level, data, GetName(playerid), data);
		mysql_tquery(dbHandle, string, "", "");
		format(string, sizeof(string), "%s добавлен в список администрации. Уровень полномочий %i", name, level);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		if(GetPlayerID(name) != INVALID_PLAYER_ID)
		{
			format(string, sizeof(string), "%s назначил Вас администратором", GetName(playerid));
			SendClientMessage(GetPlayerID(name), COLOR_YELLOW, string);
		}
		
		format(STRING_GLOBAL, 128, "%s выдал ADMLVL %s (%d)", GetName(playerid), name, level);
		WriteLog(TYPE_LOG_ADMIN, STRING_GLOBAL);
	}
	return 1;
}

forward Alogin(playerid, name[]);
public Alogin(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		if(p_info[playerid][pAdmin] > ADM_NONE) p_info[playerid][pAdmin] = ADM_NONE;
		return 1;
	}
	new Password[16];
	cache_get_field_content(0, "password", Password, dbHandle);
	if(!strcmp(Password, "qwerty", true))
	{
		SetPVarInt(playerid, "aLogin", 1);
		ShowPlayerDialogEx(playerid, D_ALOGIN, DIALOG_STYLE_INPUT, "{ebec86}>> Регистрация администратора", "\
		{FFFFFF}Введите пароль, который будет от панели администратора\n\n\
		{f0e86b}Примечание:\n\
		\t- Пароль должен состоять из латинских букв и цифр\n\
		\t- Размер пароля от 6 до 15 символов", "Принять", "Отмена");
	}
	else
	{
		SetPVarInt(playerid, "aLogin", 0);
		ShowPlayerDialogEx(playerid, D_ALOGIN, DIALOG_STYLE_INPUT, "{ebec86}>> Доступ администратора", "\
		{FFFFFF}Введите Ваш пароль от панели администратора", "Принять", "Отмена");
	}
	return 1;
}

forward AloginReg(playerid, name[]);
public AloginReg(playerid, name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return 1;
	new inputtext[16], string[144];
	GetPVarString(playerid, "inputtext", inputtext, sizeof(inputtext));
	mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET `password` = '%s' WHERE `name` = '%s' LIMIT 1", inputtext, GetName(playerid));
	mysql_tquery(dbHandle, string, "", "");
	p_info[playerid][pAdmin] = cache_get_row_int(0, 1, dbHandle);
	MysqlUpdatePlayerInt(playerid, "admin", p_info[playerid][pAdmin]);

	if(p_info[playerid][pAdmin] != 9)
	{
		if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "%s[%i] авторизовался.", GetName(playerid), playerid);
		else format(string, sizeof(string), "%s[%i] авторизовалась.", GetName(playerid), playerid);
		SendAdminMessage(COLOR_BLUE, string);
	}
	
	ShowWarningPanelAC(playerid);
	for(new i; i < 10; i++) TextDrawShowForPlayer(playerid, CheatShow[0][i]), TextDrawShowForPlayer(playerid, CheatShow[1][i]);

	Iter_Add(Admins, playerid);

	AdminLogged[playerid] = true;
	new day, month, year;
	getdate(year, month, day);
	mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ADMIN" SET `last_connect` = '%d.%d.%d' WHERE `name` = '%s' LIMIT 1", day, month, year, GetName(playerid));
	mysql_tquery(dbHandle, string, "", "");
	return 1;
}

forward AloginAuth(playerid, inputtext[]);
public AloginAuth(playerid, inputtext[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendErr(playerid, "Неверный пароль");
		SetPVarInt(playerid, "attempt_pass", GetPVarInt(playerid, "attempt_pass") + 1);
		if(GetPVarInt(playerid, "attempt_pass") > 3)
		{
			DeletePVar(playerid, "attempt_pass");
            Kick(playerid);
		}
	}
	else
	{
		new string[144];
		AdminLogged[playerid] = true;
		p_info[playerid][pAdmin] = cache_get_row_int(0, 1, dbHandle);
		AdminInfo[playerid][admGoto] = cache_get_row_int(0, 6, dbHandle);
		AdminInfo[playerid][admGethere] = cache_get_row_int(0, 7, dbHandle);
		AdminInfo[playerid][admSpectate] = cache_get_row_int(0, 8, dbHandle);
		AdminInfo[playerid][admTimeMin] = cache_get_row_int(0, 9, dbHandle);
		AdminInfo[playerid][admAlog] = cache_get_row_int(0, 10, dbHandle);

		if(p_info[playerid][pAdmin] != 9)
		{
			if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "%s[%i] авторизовался.", GetName(playerid), playerid);
			else format(string, sizeof(string), "%s[%i] авторизовалась.", GetName(playerid), playerid);
			SendAdminMessage(COLOR_BLUE, string);
		}
		
		ShowWarningPanelAC(playerid);
		for(new i; i < 10; i++) TextDrawShowForPlayer(playerid, CheatShow[0][i]), TextDrawShowForPlayer(playerid, CheatShow[1][i]);

		Iter_Add(Admins, playerid);

		new day, month, year;
		getdate(year, month, day);
		mysql_format(dbHandle, string, 144, "UPDATE "T_ADMIN" SET `last_connect` = '%d.%d.%d' WHERE `name` = '%s' LIMIT 1", day, month, year, GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
	}
	return 1;
}

forward HelperAuth(playerid);
public HelperAuth(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		return 1;
	}
	else
	{
		new string[144];
		AdminLogged[playerid] = true;
		p_info[playerid][pHelper] = cache_get_row_int(0, 1, dbHandle);
		HelperInfo[playerid][admTimeMin] = cache_get_row_int(0, 9, dbHandle);

		if(p_info[playerid][pSex] == 1) format(string, sizeof(string), "Хелпер %s[%i] авторизовался.", GetName(playerid), playerid);
		else format(string, sizeof(string), "Хелпер %s[%i] авторизовалась.", GetName(playerid), playerid);
		SendAdminMessage(COLOR_BLUE, string);

		Itter_Add(Helpers, playerid);

		new day, month, year;
		getdate(year, month, day);
		mysql_format(dbHandle, string, 144, "UPDATE "T_HELPER" SET `last_connect` = '%d.%d.%d' WHERE `name` = '%s' LIMIT 1", day, month, year, GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
	}
	return 1;
}

stock GetArendCarID(vehicleid, &arend_id = INVALID_PLAYER_ID)
{
	arend_id = INVALID_PLAYER_ID;
	for(new i = 0; i < sizeof(ArendInfo); i++)
	{
		if(vehicleid == ArendInfo[i][aID])
		{
			if(IsPlayerConnected(ArendInfo[i][aPlayerID])) arend_id = ArendInfo[i][aPlayerID];
			return i;
		}
	}
	return -1;
}

stock GetVehicleArendID(vehicleid)
{
	new playerid = INVALID_PLAYER_ID, get_rent = GetArendCarID(vehicleid, playerid);
	if(get_rent != (-1))
	{
		if(playerid == INVALID_PLAYER_ID || !IsPlayerConnected(playerid))
		{
			ArendInfo[get_rent][aPlayerID] = INVALID_PLAYER_ID;
			return INVALID_PLAYER_ID;
		}
		return ArendInfo[get_rent][aPlayerID];
	}
	return INVALID_PLAYER_ID;
}

stock CheckPlayerDistanceToVehicle(Float:radi, playerid, vehicleid)
{
	if(!IsPlayerConnected(playerid)) return 0;
	new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,PX,PY,PZ);
	GetVehiclePos(vehicleid, X,Y,Z);
	new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	if(Distance <= radi*radi) return 1;
	return 0;
}

stock GetMaxSeat(modelid)
{
	switch(modelid)
	{
		case 596..598, 427, 490: return 4;
		case 599, 497, 528: return 2;
	}
	return -1;
}

forward Unfreez2(playerid);
public Unfreez2(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
}

forward TazerOff(playerid);
public TazerOff(playerid)
{
	SetPVarInt(playerid, "Tazer", 0);
	ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 0);
	TogglePlayerControllable(playerid, 1);
	return 1;
}

forward ClearAnimText(playerid);
public ClearAnimText(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0);

forward ClearAnimationsDelay(playerid);
public ClearAnimationsDelay(playerid) ApplyAnimation(playerid, "PED", "IDLE_chat", 4.1, 1, 0, 0, 0, 1, 1);

forward OnPlayerHistoryName(playerid);
public OnPlayerHistoryName(playerid)
{
	if(cache_get_row_count(dbHandle) > 0)
	{
		new string[128];
		new idacca = cache_get_row_int(0, 0, dbHandle);
		format(string, sizeof(string), "SELECT * FROM `historyname` WHERE `idacca` = '%d' ORDER BY `id` DESC LIMIT 10", idacca);
		mysql_tquery(dbHandle, string, "OnPlayerHistoryName2", "d", playerid);
	}
	else SendErr(playerid, "Игрок с таким именем не найден");
	return 1;
}

forward OnPlayerHistoryName2(playerid);
public OnPlayerHistoryName2(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new nickname[MAX_PLAYER_NAME], nickname2[MAX_PLAYER_NAME], string[350], str[35];
		for(new i = 0; i < rows; i++)
		{
			cache_get_row(i, 2, nickname, dbHandle);
			cache_get_row(i, 3, nickname2, dbHandle);
			format(str, sizeof(str), "{FFFFFF}%s > %s\n", nickname2, nickname);
			strcat(string, str);
		}
		ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, "{ebec86}>> История ников", string, "Закрыть", "");
	}
	else SendErr(playerid, "Данный игрок ещё не менял имя");
	return 1;
}

stock GiveMoney(playerid, amount, action[])
{
	if(amount > 0)
	{
	    if(p_info[playerid][pCash]+amount >= MONEY_LIMIT)
	    {
			p_info[playerid][pCash] = MONEY_LIMIT;
			GivePlayerMoney(playerid, MONEY_LIMIT);
			MysqlUpdatePlayerInt(playerid, "cash", p_info[playerid][pCash]);
		}
		else
		{
		    p_info[playerid][pCash] += amount;
			GivePlayerMoney(playerid, amount);
			MysqlUpdatePlayerInt(playerid, "cash", p_info[playerid][pCash]);
		}

/*		new cash_text[64];
		format(cash_text, sizeof cash_text, "%d РУБ.", p_info[playerid][pCash]);
		PlayerTextDrawSetString(playerid, cash_td_player[playerid], cash_text);*/

		TransferMoneys(playerid, p_info[playerid][pCash]+amount, amount, action);
		return 1;
	}
   	if(GeneralCard[playerid] == 0)
	{
	    if(p_info[playerid][pCash]+amount >= MONEY_LIMIT)
	    {
			p_info[playerid][pCash] = MONEY_LIMIT;
			GivePlayerMoney(playerid, MONEY_LIMIT);
			MysqlUpdatePlayerInt(playerid, "cash", p_info[playerid][pCash]);
		}
		else
		{
		    p_info[playerid][pCash] += amount;
			GivePlayerMoney(playerid, amount);
			MysqlUpdatePlayerInt(playerid, "cash", p_info[playerid][pCash]);
		}

/*		new cash_text[64];
		format(cash_text, sizeof cash_text, "%d РУБ.", p_info[playerid][pCash]);
		PlayerTextDrawSetString(playerid, cash_td_player[playerid], cash_text);*/

		TransferMoneys(playerid, p_info[playerid][pCash]+amount, amount, action);
	}
	else
	{
		p_info[playerid][pBank] += amount;
    	MysqlUpdatePlayerInt(playerid, "bank", p_info[playerid][pBank]);
    	
    	TransferMoneys(playerid, p_info[playerid][pBank]+amount, amount, action);
	}
	return 1;
}

stock TransferMoneys(playerid,remain,money,action[])
{
    new datatime[6];
	getdate(datatime[0], datatime[1], datatime[2]);
	gettime(datatime[3], datatime[4], datatime[5]);
	STRING_GLOBAL="";
	format(STRING_GLOBAL, 1000, "INSERT INTO `log_transfer`(`Name`, `Cash`, `Remain`, `Money`, `Action`, `Date`) VALUES ('%s','%d','%d','%d','%s','%02d/%02d/%d в %02d:%02d:%02d')",
	GetName(playerid),p_info[playerid][pCash],remain,money,action,datatime[0],datatime[1],datatime[2],datatime[3],datatime[4],datatime[5]);
	mysql_tquery(dbHandle,STRING_GLOBAL,"","");
	return 1;
}

forward gdonate_callback(playerid);
public gdonate_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendErr(playerid, "На Ваш счёт не поступало пополнений");
	new sum = cache_get_row_int(0, 0, dbHandle);
	new status = cache_get_row_int(0, 1, dbHandle);
	new did = cache_get_row_int(0, 2, dbHandle);
	new string[128];
	if(status == 1)
	{
		p_info[playerid][pTotalCredits] += sum;
		format(string, sizeof(string), "На Ваш счёт зачислено %i кредитов. Спасибо за помощь серверу", sum);
		SendClientMessage(playerid, COLOR_GREEN, string);
		format(string, sizeof(string), "UPDATE "T_ACCOUNTS" SET totalcredits=%d WHERE name='%s'", p_info[playerid][pTotalCredits], GetName(playerid));
		mysql_tquery(dbHandle, string, "", "");
		format(string, sizeof(string), "DELETE FROM `gdonate_payments` WHERE `id` = '%d'", did);
		mysql_tquery(dbHandle, string, "", "");
	}
	return 1;
}

stock IsPlayerUseForbiddenSoftware(playerid)
{
	static const forbidden_soft_keys[][43 + 1] =
	{
		"5E1C1837D2C54B24EAAED18C3F96D9EA51A2A481003", // RakSAMP v0.5-0.3c
		"381356A6B4349449E8F818B06B405A4FBBE9F8DDDAB", // RakSAMP v0.5-0.3d
		"354A1F8D95B8384F9C365E2D7418C7EC06CD6EE2928", // RakSAMP v0.5-0.3eR2
		"38E4952825700FE3B8476C3F72D976E7447905BA45D", // BabaShura 2.6/2.7 (0.3e)
		"45525544533450414336385A4E335637584B4F49", // ALEXDRIFT
		"4D374F3753315753544D4E5450354A59414F4746", // SERGEENKO
		"9ED058AA448CD9C4EACD949800A0DC8CFDA4DF99" // MAKAREVICH
	};

	new player_key[64 + 1];

	gpci(playerid, player_key, sizeof(player_key));

	for(new i = 0; i < sizeof(forbidden_soft_keys); i++)
	{
		if(strcmp(player_key, forbidden_soft_keys[i]) == 0)
		{
			return BanEx(playerid,"Cheat");
		}
	}

	return 0;
}

forward ShowDPromo(playerid);
public ShowDPromo(playerid)
{
	new rows,fields;
	cache_get_data(rows, fields);
	if(!rows) return SendErr(playerid, "Действующих промокодов не обнаружено");
	new code[24],priztext[24],string[100],typepriz,amountpriz,activate;

	STRING_GLOBAL[0] = EOS;
	strcat(STRING_GLOBAL, "{F44607}№:\t{F49E07}Промокод:\t{F4E807}Тип приза:\t{99F407}Количество:\t{4BE8B6}Число активаций:\n");
	for(new i = 0; i < rows; i++)
	{
		cache_get_row(i, 0, code, dbHandle, 24);
		typepriz = cache_get_row_int(i, 5, dbHandle);
		amountpriz = cache_get_row_int(i, 6, dbHandle);
		activate = cache_get_row_int(i, 3, dbHandle);
		switch(typepriz)
		{
			case 1: priztext = "VIP аккаунт", format(string,sizeof string, "%d дней",amountpriz);
			case 2: priztext = "Игр. валюта", format(string,sizeof string, "%d руб.",amountpriz);
			case 3: priztext = "Кредиты", format(string,sizeof string, "%d кред.",amountpriz);
		}
		format(string,sizeof(string),"{F44607}%d  \t{F49E07}%s  \t{F4E807}%s  \t{99F407}%s  \t{4BE8B6}%d\n", i+1, code, priztext,string, activate);
		strcat(STRING_GLOBAL, string);
	}
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, "{ebec86}>> Список действующих промокодов", STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward ShowAPromo(playerid);
public ShowAPromo(playerid)
{
	new rows,fields;
	cache_get_data(rows, fields);
	if(!rows) return SendErr(playerid, "Активированных промокодов не обнаружено");
	new code[24],priztext[24],data[32],string[128],typepriz,amountpriz;

	STRING_GLOBAL[0] = EOS;
	strcat(STRING_GLOBAL, "{F44607}№:\t{F49E07}Промокод:\t{F4E807}Тип приза:\t{99F407}Количество:\t{4BE8B6}Активирован:\n");
	for(new i; i < rows; i++)
	{
		cache_get_row(i, 0, code, dbHandle, 24);
		typepriz = cache_get_row_int(i, 5, dbHandle);
		amountpriz = cache_get_row_int(i, 6, dbHandle);
		cache_get_row(i, 4, data, dbHandle, 32);
		switch(typepriz)
		{
			case 1: priztext = "VIP аккаунт", format(string,sizeof string, "%d дней",amountpriz);
			case 2: priztext = "Игр. валюта", format(string,sizeof string, "%d руб.",amountpriz);
			case 3: priztext = "Кредиты", format(string,sizeof string, "%d кред.",amountpriz);
		}
		format(string,sizeof(string),"{F44607}%d  \t{F49E07}%s  \t{F4E807}%s  \t{99F407}%s  \t{4BE8B6}%s\n", i+1, code, priztext,string, data);
		strcat(STRING_GLOBAL, string);
	}
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, "{ebec86}>> Список активированных промокодов", STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward ShowBPromo(playerid);
public ShowBPromo(playerid)
{
	new rows,fields;
	cache_get_data(rows, fields);
	if(!rows) return SendErr(playerid, "Заблокированных промокодов не обнаружено");
	new code[24],priztext[24],data[32],string[100],typepriz,amountpriz;

	STRING_GLOBAL[0] = EOS;
	strcat(STRING_GLOBAL, "{F44607}№:\t{F49E07}Промокод:\t{F4E807}Тип приза:\t{99F407}Количество:\t{4BE8B6}Заблокирован:\n");
	for(new i; i < rows; i++)
	{
		cache_get_row(i, 0, code, dbHandle, 24);
		typepriz = cache_get_row_int(i, 5, dbHandle);
		amountpriz = cache_get_row_int(i, 6, dbHandle);
		cache_get_row(i, 4, data, dbHandle, 32);
		switch(typepriz)
		{
			case 1: priztext = "VIP аккаунт", format(string,sizeof string, "%d дней",amountpriz);
			case 2: priztext = "Игр. валюта", format(string,sizeof string, "%d руб.",amountpriz);
			case 3: priztext = "Кредиты", format(string,sizeof string, "%d кред.",amountpriz);
		}
		format(string,sizeof(string),"{F44607}%d  \t{F49E07}%s  \t{F4E807}%s  \t{99F407}%s  \t{4BE8B6}%s\n", i+1, code, priztext,string, data);
		strcat(STRING_GLOBAL, string);
	}
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, "{ebec86}>> Список заблокированных промокодов", STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward CreatePromo(playerid,code[]);
public CreatePromo(playerid,code[])
{
	new rows,fields,string[256],typetext[34], typetext1[10];
	cache_get_data(rows, fields);
	if(rows) return SendErr(playerid, "Промокод уже имеется в базе данных. Придумайте другой");
	new type = GetPVarInt(playerid,"TYPEPROMO");
	switch(type)
	{
		case 1: typetext = "VIP аккаунт, на", typetext1 = " дней";
		case 2: typetext = "валюту, в размере:", typetext1 = "руб.";
		case 3: typetext = "кредиты, в размере:", typetext1 = "кр.";
	}
	new amount = GetPVarInt(playerid,"AMOUNTPROMO");
	new totalactivate = GetPVarInt(playerid,"ACTIVATEPROMO");
	format(string,sizeof(string),"INSERT INTO `promo` (`name`,`typepriz`,`amountpriz`,`nactivations`) VALUES ('%s','%d','%d','%d')",code,type,amount,totalactivate);
	mysql_function_query(dbHandle, string, false, "", "");

 	for(new i; i < sizeof promocode_td; i ++) TextDrawShowForPlayer(playerid, promocode_td[i]);

	format(string, sizeof string, "~y~%s", code);
	TextDrawSetString(promocode_td[11], string);

	if(totalactivate < 10)
	{
		format(string, sizeof string, "    %d", totalactivate);
		TextDrawSetString(promocode_td[15], string);
	}
	if(totalactivate < 100)
	{
		format(string, sizeof string, "  %d", totalactivate);
		TextDrawSetString(promocode_td[15], string);
	}
	if(totalactivate > 99)
	{
		format(string, sizeof string, "%d", totalactivate);
		TextDrawSetString(promocode_td[15], string);
	}

	format(string, sizeof string, "~y~%s_%d_%s", type == 1 ? ("VIP аккаунт, на") : (""), amount, typetext1);
	TextDrawSetString(promocode_td[17], string);

	SelectTextDraw(playerid, 0x009900FF);

	SetPVarInt(playerid, "send_promo", 1);

	return DeletePVar(playerid,"TYPEPROMO"),DeletePVar(playerid,"AMOUNTPROMO"),DeletePVar(playerid,"ACTIVATEPROMO"),DeletePVar(playerid,"PROMO");
}

forward DeletePromo(playerid,code[]);
public DeletePromo(playerid,code[])
{
	new rows,fields;
	cache_get_data(rows, fields);
	if(!rows) return SendErr(playerid, "Промокода не существует");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "DELETE FROM promo WHERE name = '%s'", code);
	mysql_function_query(dbHandle, STRING_GLOBAL, false, "", "");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"Промокод {65A0D0}'%s' {FFFFFF}успешно удалён",code);
	SendInf(playerid, STRING_GLOBAL);
	return 1;
}

forward BlockPromo(playerid,code[]);
public BlockPromo(playerid,code[])
{
	new rows,fields;
	cache_get_data(rows, fields);
	if(!rows) return SendErr(playerid, "Промокода не существует");
	new string[256];
	new hourss,minn,secc;
	gettime(hourss,minn,secc);
	format(string,100,"%s / %02d:%02d:%02d",date("%dd.%mm.%yyyy",gettime()),hourss,minn,secc);
	format(string, sizeof(string), "UPDATE promo SET `block`='1',`date`='%s' WHERE name='%s'", code, string);
	mysql_function_query(dbHandle, string, false, "", "");
	format(string,sizeof(string),"Промокод {65A0D0}'%s' {FFFFFF}успешно заблокирован",code);
	SendInf(playerid, string);
	return 1;
}

forward CheckPromo(playerid);
public CheckPromo(playerid)
{
	new rows,fields;
	cache_get_data(rows, fields);
	if(rows) return SendErr(playerid, "Вы уже активировали промокод, и не можете сделать это повторно");
	new qstring[128],code[16];
	GetPVarString(playerid,"CODE",code,sizeof(code));
	mysql_format(dbHandle, qstring, sizeof(qstring), "SELECT * FROM `promo` WHERE `name`='%s'", code);
	mysql_tquery(dbHandle, qstring, "ActivatePromo", "is", playerid, code);
	return 1;
}

forward ActivatePromo(playerid,code[]);
public ActivatePromo(playerid,code[])
{
	new rows,fields;
	cache_get_data(rows, fields);
	if(!rows) return SendErr(playerid, "Промокода не существует");
	new typepriz,amountpriz,nactivations,string[512],activate,block,data[24],typetext[34],typetext1[24];
	new year, month, day;
	new current_date = getdate(year, month, day);
	for(new i; i < rows; i++)
	{
		typepriz = cache_get_row_int(i, 5, dbHandle);
		amountpriz = cache_get_row_int(i, 6, dbHandle);
		nactivations = cache_get_row_int(i, 3, dbHandle);
		activate = cache_get_row_int(i, 1, dbHandle);
		block = cache_get_row_int(i, 2, dbHandle);
		cache_get_row(i, 4, data, dbHandle, 24);
		switch(typepriz)
		{
		case 1: typetext = "VIP аккаунт на",typetext1 = "дней";
		case 2: typetext = "Игровая валюта в количестве",typetext1 = "руб";
		case 3: typetext = "Кредиты в количестве",typetext1 = "кр.";
		}
	}
	if(block > 0) return SendErr(playerid, "Промокод заблокирован");
	if(activate != 0)
	{
		format(string,sizeof(string),"{FFFFFF}Промокод '%s' {FFFFFF}уже активирован {ebec86}%s\n{FFFFFF}К сожалению, Вы опоздали. Но ничего, получится в другой раз..",code,data);
		ShowPlayerDialogEx(playerid,D_NULL,DIALOG_STYLE_MSGBOX, "{ebec86}>> Ошибка",string,"Закрыть","");
		return 1;
	}
	format(string,sizeof(string),"INSERT INTO `promo_activations` (`account_id`,`name_promo`) VALUES ('%d','%s')",p_info[playerid][pID],code);
	mysql_function_query(dbHandle, string, false, "", "");
	SendInf(playerid, "Поздравляем! Вы активировали промокод!");
	switch(typepriz)
	{
	case 1: p_info[playerid][pVip] = 1,p_info[playerid][pVipTime] = current_date + amountpriz, MysqlUpdatePlayerInt(playerid, "vip", p_info[playerid][pVip]), MysqlUpdatePlayerInt(playerid, "viptime", p_info[playerid][pVipTime]);
	case 2: GiveMoney(playerid, amountpriz, "Промокод");
	case 3: p_info[playerid][pCredits] += amountpriz, MysqlUpdatePlayerInt(playerid, "credits", p_info[playerid][pCredits]);
	}
	format(string,sizeof(string),"Промокод содержал: %s %d%s",typetext,amountpriz,typetext1),SendClientMessage(playerid,COLOR_ORANGE,string);
	nactivations--;
	format(string, sizeof(string), "UPDATE promo SET `nactivations`='%d' WHERE name='%s'", nactivations, code);
	mysql_function_query(dbHandle, string, false, "", "");
	if(nactivations == 0)
	{
		new hourss,minn,secc;
		gettime(hourss,minn,secc);
		format(string,100,"%s / %02d:%02d:%02d",date("%dd.%mm.%yyyy",gettime()),hourss,minn,secc);
		format(string, sizeof(string), "UPDATE promo SET `activate`='1',`date`='%s' WHERE name='%s'", string,code);
		mysql_function_query(dbHandle, string, false, "", "");
		return 1;
	}
	DeletePVar(playerid,"CODE");
	return 1;
}

stock VehNumber()
{
	new rand; rand = random(11);
	new chr[20];
	switch(rand)
	{
		case 0: format(chr,20,"%s","A");
		case 1: format(chr,20,"%s","B");
		case 2: format(chr,20,"%s","C");
		case 3: format(chr,20,"%s","T");
		case 4: format(chr,20,"%s","X");
		case 5: format(chr,20,"%s","E");
		case 6: format(chr,20,"%s","K");
		case 7: format(chr,20,"%s","M");
		case 8: format(chr,20,"%s","H");
		case 9: format(chr,20,"%s","P");
		case 10: format(chr,20,"%s","O");
	}
	return chr;
}

forward OnMySQL_Query(playerid,id,params[]);
public OnMySQL_Query(playerid,id,params[])
{
	new rows,fields;
	cache_get_data(rows,fields,dbHandle);
	switch(id)
	{
	case 100:
		{
			new plid = DialogSlot[playerid][GetPVarInt(playerid,"UsePlayer")], String[128];
			if(p_info[playerid][pFamilySozd] == 0) return SendErr(playerid, "Вам недоступна эта функция");
			if(rows) return SendErr(playerid, "Возможно иметь только одного заместителя, у Вас уже есть заместитель");
			else
			{
				if(p_info[playerid][pFamilySozd] == 0) return SendErr(playerid, "Назначать игрока заместителем может только создатель семьи");
				if(plid == playerid) return SendErr(playerid, "Вы не можете назначить заместителем самого себя");
				p_info[plid][pFamilyZam] = 1;
				MysqlUpdatePlayerInt(plid, "familyzam", p_info[plid][pFamilyZam]);
				format(family_info[p_info[playerid][pFamily]][f_creator_zam],MAX_PLAYER_NAME,p_info[plid][pName]);
				format(String,sizeof(String),"{%s}[%s]{FFFFFF} %s назначил игрока %s заместителем семьи",family_chat_color [family_info[p_info[playerid][pFamily]] [f_chat_color ]],family_info [p_info[playerid][pFamily]] [f_name],GetName(playerid),GetName(plid),String);
				family_message(p_info[playerid][pFamily],-1, String);
				//
				format ( String, sizeof String, "UPDATE `family_system` SET `fam_zamcreator` = '%s' WHERE `fam_id` = '%d'",GetName(plid), p_info[playerid][pFamily]);
				mysql_function_query ( dbHandle, String, false, "", "");
				return 1;
			}
		}
	}
	return 1;
}

public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	return 1;
}

stock GetAdminsOnline()
{
	new Online;
	foreach(new i : Admins)
	{
		if(PlayerLogged[i]) if(p_info[i][pAdmin] && p_info[i][pAdmin] != ADM_NONE) Online ++;
	}
	return Online;
}

stock GetHelpersOnline()
{
	new Online;
	foreach(new i : Helpers)
	{
		if(PlayerLogged[i]) if(p_info[i][pHelper] && p_info[i][pHelper] != 0) Online ++;
	}
	return Online;
}

stock SetRoomsStr(idx, stolb[], znach[])
{

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ROOMS" SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock SetRoomsInt(idx, stolb[], znach)
{
	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ROOMS" SET %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
}

stock IsTextNumeric(text[])
{
	if(strfind(text, "0", true) != -1) return 1;
	if(strfind(text, "1", true) != -1) return 1;
	if(strfind(text, "2", true) != -1) return 1;
	if(strfind(text, "3", true) != -1) return 1;
	if(strfind(text, "4", true) != -1) return 1;
	if(strfind(text, "5", true) != -1) return 1;
	if(strfind(text, "6", true) != -1) return 1;
	if(strfind(text, "7", true) != -1) return 1;
	if(strfind(text, "8", true) != -1) return 1;
	if(strfind(text, "9", true) != -1) return 1;
	return 0;
}

forward ActivateAccount(playerid, name[]);
public ActivateAccount(playerid, name[])
{
	new r, f;
	cache_get_data(r, f);
	if(!r) return SendErr(playerid, "Аккаунт этого игрока не деактивирован или его нет в базе данных");

	STRING_GLOBAL[0] = EOS;
	mysql_format(dbHandle, STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_ACCOUNTS" SET `deactivate` = '0' WHERE `name` = '%s'", name);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");

	STRING_GLOBAL[0] = EOS;
	format(STRING_GLOBAL, 128, "[{ebec86}A{828282}] Администратор %s активировал аккаунт игрока %s", GetName(playerid), name);
	SendAdminMessage(COLOR_ADMIN, STRING_GLOBAL);
	return 1;
}

forward OffWarnLeader(playerid, name[]);
public OffWarnLeader(playerid, name[])
{
	new player_lvl, strings[128], string1[128], string[128], warn_count;
	new r, f;
	cache_get_data(r, f);
	if(!r) return SendErr(playerid, "Аккаунта этого игрока нет в базе");

	warn_count = cache_get_row_int(0, 159, dbHandle);
	player_lvl = cache_get_row_int(0, 16, dbHandle);

	if(player_lvl == 0) return SendErr(playerid, "Этот игрок не лидер");

	warn_count ++;

	if(warn_count < 3) format(string, sizeof(string), "Администратор %s выдал OFFLINE выговор лидеру %s [%i/3]", GetName(playerid), name, warn_count);
	else
	{

		mysql_format(dbHandle, string1, sizeof(string1), "UPDATE "T_ACCOUNTS" SET `leader` = '0', `member` = '0', `rank` = '0', `lwarn` = '0' WHERE `name` = '%s'", name);
		mysql_tquery(dbHandle, string1, "", "");

		format(string, sizeof string, "[{ebec86}A{828282}] Лидер %s получил 3 выговора от администратора %s и был снят с поста", name, GetName(playerid));
	}

	SendAdminMessage(COLOR_RED, string);

	mysql_format(dbHandle, strings, sizeof(strings), "UPDATE "T_ACCOUNTS" SET `lwarn` = '%d' WHERE `name` = '%s'", warn_count, name);
	mysql_tquery(dbHandle, strings, "", "");

	return 1;
}

forward OffWarnAdmin(playerid, name[]);
public OffWarnAdmin(playerid, name[])
{
	new player_lvl, strings[128], string[128], string1[128], admin_count;
	new r, f;
	cache_get_data(r, f);
	if(!r) return SendErr(playerid, "Аккаунта этого игрока нет в базе");


	admin_count = cache_get_row_int(0, 160, dbHandle);
	player_lvl = cache_get_row_int(0, 6, dbHandle);

	if(player_lvl == 0) return SendErr(playerid, "Этот игрок не администратор");

	admin_count ++;

	if(admin_count < 3) format(string1, sizeof(string1), "[{ebec86}A{828282}] %s выдал OFFLINE выговор администратору %s [%i/3]", GetName(playerid), name, admin_count);
	else
	{

		if(GetPlayerID(name) != INVALID_PLAYER_ID) p_info[GetPlayerID(name)][pAdmin] = 0;
		mysql_format(dbHandle, string, sizeof(string), "DELETE FROM "T_ADMIN" WHERE `name`='%s'", name);
		mysql_tquery(dbHandle, string, "", "");
		mysql_format(dbHandle, string, sizeof(string), "UPDATE "T_ACCOUNTS" SET `admin` = '0', `awarn` = '0' WHERE `name` = '%s'", name);
		mysql_tquery(dbHandle, string, "", "");

		format(string1, sizeof string1, "[{ebec86}A{828282}] Администратор %s получил 3 выговора от руководителя %s и был снят с поста", name, GetName(playerid));
	}
	SendAdminMessage(COLOR_ADMIN, string1);

	mysql_format(dbHandle, strings, sizeof(strings), "UPDATE "T_ACCOUNTS" SET `awarn` = '%d' WHERE `name` = '%s'", admin_count,  name);
	mysql_tquery(dbHandle, strings, "", "");
	return 1;
}

forward OffUNWarnLeader(playerid, name[]);
public OffUNWarnLeader(playerid, name[])
{
	new string1[128], string[128], warn_count, r, f;
	cache_get_data(r, f);
	if(!r) return SendErr(playerid, "Аккаунта этого игрока нет в базе, либо он не лидер");

	warn_count = cache_get_row_int(0, 159, dbHandle);

	warn_count --;

	if(warn_count == 0) SendErr(playerid, "У данного лидера нет ни одного выговора");
	else
	{

		mysql_format(dbHandle, string1, sizeof(string1), "UPDATE "T_ACCOUNTS" SET `lwarn` = '%d' WHERE `name` = '%s'", warn_count, name);
		mysql_tquery(dbHandle, string1, "", "");

		format(string, sizeof string, "[{ebec86}A{828282}] Администратор %s OFFLINE снял выговор с лидера %s", GetName(playerid), name);
	}
	return 1;
}

forward OffUNWarnAdmin(playerid, name[]);
public OffUNWarnAdmin(playerid, name[])
{
	new string1[128], string[128], warn_count, r, f;
	cache_get_data(r, f);
	if(!r) return SendErr(playerid, "Аккаунта этого игрока нет в базе, либо он не администратор");

	warn_count = cache_get_row_int(0, 160, dbHandle);

	warn_count --;

	if(warn_count == 0) SendErr(playerid, "У данного администратора нет ни одного выговора");
	else
	{

		mysql_format(dbHandle, string1, sizeof(string1), "UPDATE "T_ACCOUNTS" SET `awarn` = '%d' WHERE `name` = '%s'", warn_count, name);
		mysql_tquery(dbHandle, string1, "", "");

		format(string, sizeof string, "[{ebec86}A{828282}] %s OFFLINE снял выговор с администратора %s", GetName(playerid), name);
		SendAdminMessage(COLOR_ADMIN, string);
	}
	return 1;
}

stock ShowPlayerBuyVipNumberCar(playerid)
{
	return
	ShowPlayerDialogEx
	(
	playerid, DIALOG_BUY_VIP_NUMBER, DIALOG_STYLE_INPUT,
	"{ebec86}>> Покупка VIP номеров",
	"{ffffff}- Номера должны быть в формате: {ffcc00}XYYYXX\n"\
	"{ffffff}(X - буква, Y - цифра, Y - цифра, Y - цифра, X - буква, X - буква)\n"\
	"{ffffff}В поле ниже введите желаемые номера:",
	"Купить", "Отмена"
	);
}

stock IsACarNumber(text[])
{
	new length = strlen(text);

	if(length != 6)
	{
		return 0;
	}

	for(new i; i < length; i ++)
	{
		switch(i)
		{
		case 0, 4, 5:
			{
				switch(text[i])
				{
				case 'A', 'B', 'C', 'E', 'H', 'K', 'M', 'O', 'P', 'T', 'X': continue;
				default: return 0;
				}
			}
		case 1..3:
			{
				switch(text[i])
				{
				case '0'..'9': continue;
				default: return 0;
				}
			}
		}
	}

	if(text[1] == text[2] && text[2] == text[3] && text[3] == '0')
	{
		return 0;
	}

	return 1;
}

forward OnGuardWarningCheater(targetid, const cheat_name[], cheat_code);
public OnGuardWarningCheater(targetid, const cheat_name[], cheat_code)
{
	if(GetPVarInt(targetid, "FIX_FLOOD") > gettime()) return 1;

	new fmt_msg[144], PLAYER_NAME[MAX_PLAYER_NAME];
	GetPlayerName(targetid, PLAYER_NAME, sizeof(PLAYER_NAME));

	if(cheat_code == 82 || cheat_code == 83 || cheat_code == 84 || cheat_code == 85 || cheat_code == 86)
	{
		//format(fmt_msg, sizeof fmt_msg, "[{ebec86}Guard System{FFFFFF}] %s (ID: %d) кикнут <#%d> [%s]", PLAYER_NAME, targetid, cheat_code, cheat_name);
		//SendAdminMessage(0xFFFFFFFF, fmt_msg);
		
		format(fmt_msg, sizeof fmt_msg, "%s", cheat_name);
		AddToWarningPanel(targetid, fmt_msg, 1);
		
		AddCheater(targetid, 1);

		format(fmt_msg, sizeof fmt_msg, "Вы были кикнуты по подозрению в читерстве! (Код: %s)", cheat_name);
		SendClientMessage(targetid, COLOR_RED, fmt_msg);

		SetTimerEx("DisconnectPlayer",500,0,"i", targetid);
	}
	else
	{
		format(fmt_msg, sizeof fmt_msg, "[{ebec86}Guard System{FFFFFF}] %s (ID: %d) возможно использует %s <#%d>", PLAYER_NAME, targetid, cheat_name, cheat_code);
		SendAdminMessage(0xFFFFFFFF, fmt_msg);
		
		format(fmt_msg, sizeof fmt_msg, "%s", cheat_name);
		AddToWarningPanel(targetid, fmt_msg, 0);
		
		AddCheater(targetid, 0);
	}

	SetPVarInt(targetid, "FIX_FLOOD", gettime() + 5);
	return 1;
}

public OnDynamicObjectMoved(objectid)
{
	new type = Streamer_GetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID);
	switch(type)
	{
		case OBJECT_TYPE_FACTORY:
		{
			DestroyDynamicObject(objectid);
			type = GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_PROD, R_AMOUNT);

			SetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_PROD, R_AMOUNT, type + 1);
			UpdateRepository(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_PROD);
		}
		case OBJECT_TYPE_CARRIAGE:
		{
			miner_carriage[0][MC_IN_MOVE] = false;

			MinerCarriageSetState(0);
		}
		case OBJECT_TYPE_WOOD:
		{
			new Float: object_x,
				Float: object_y,
				Float: object_z,
				index;

			GetDynamicObjectPos(objectid, object_x, object_y, object_z);
			DestroyDynamicObject(objectid);

			index = object_x == 2399.2898 ? 0 : 1;

   			if(index)
			{
				new object = CreateDynamicObject(1448, object_x, object_y, object_z, 0.0, 0.0, 0.0);
				MoveDynamicObject(object, 2399.2898, object_y, object_z, 2.0, 0.0, 0.0, 0.0);
				
				Streamer_SetIntData(STREAMER_TYPE_OBJECT, object, E_STREAMER_EXTRA_ID, OBJECT_TYPE_WOOD);
			}
   			else
			{
				type = GetRepositoryData(REPOSITORY_TYPE_SAWMILL, REPOSITORY_ACTION_SAWMILL_WOOD, R_AMOUNT);

				SetRepositoryData(REPOSITORY_TYPE_SAWMILL, REPOSITORY_ACTION_SAWMILL_WOOD, R_AMOUNT, type + 1);
				UpdateRepository(REPOSITORY_TYPE_SAWMILL, REPOSITORY_ACTION_SAWMILL_WOOD);
			}
		}
		case OBJECT_TYPE_TRAIN:
		{
			if(train_objects_status)
			{
				for(new idx; idx < sizeof train_objects; idx ++)
					MoveDynamicObject(train_objects[idx][T_OBJECT_ID], train_objects[idx][T_POS_X], train_objects[idx][T_POS_Y], train_objects[idx][T_POS_Z], TRAIN_MOVE_SPEED);
			}
			else
			{
				for(new idx; idx < sizeof train_objects; idx ++)
					MoveDynamicObject(train_objects[idx][T_OBJECT_ID], train_objects[idx][T_POS_X] - 13.6841, train_objects[idx][T_POS_Y] - 184.81617, train_objects[idx][T_POS_Z], TRAIN_MOVE_SPEED);
			}

			train_objects_status = train_objects_status ^ true;
		}
	}
	return 1;
}

stock RemovePlayerWeapon(playerid, weaponid)
{
	if(!IsPlayerConnected(playerid) || weaponid < 0 || weaponid > 50)
	return;

	new saveweapon[13], saveammo[13];

	for(new slot = 0; slot < 13; slot++)
	GetPlayerWeaponData(playerid, slot, saveweapon[slot], saveammo[slot]);

	AC_ResetPlayerWeapons(playerid);

	for(new slot; slot < 13; slot++)
	{
		if(saveweapon[slot] == weaponid || saveammo[slot] == 0)
		continue;
		AC_GivePlayerWeapon(playerid, saveweapon[slot], saveammo[slot]);
	}

	AC_GivePlayerWeapon(playerid, 0, 0);
}

stock SaveVehicleTuning(playerid)
{
	ownable_car[playerid][v_veh_coms][0] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_SPOILER);
	ownable_car[playerid][v_veh_coms][1] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_HOOD);
	ownable_car[playerid][v_veh_coms][2] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_ROOF);
	ownable_car[playerid][v_veh_coms][3] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_SIDESKIRT);
	ownable_car[playerid][v_veh_coms][4] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_LAMPS);
	ownable_car[playerid][v_veh_coms][5] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_NITRO);
	ownable_car[playerid][v_veh_coms][6] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_EXHAUST);
	ownable_car[playerid][v_veh_coms][7] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_WHEELS);
	ownable_car[playerid][v_veh_coms][8] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_STEREO);
	ownable_car[playerid][v_veh_coms][9] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_HYDRAULICS);
	ownable_car[playerid][v_veh_coms][10] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_FRONT_BUMPER);
	ownable_car[playerid][v_veh_coms][11] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_REAR_BUMPER);
	ownable_car[playerid][v_veh_coms][12] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_VENT_RIGHT);
	ownable_car[playerid][v_veh_coms][13] = GetVehicleComponentInSlot(p_info[playerid][pOwnableCar], CARMODTYPE_VENT_LEFT);
	format(ownable_car[playerid][v_veh_com], 64, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	ownable_car[playerid][v_veh_coms][0], ownable_car[playerid][v_veh_coms][1], ownable_car[playerid][v_veh_coms][2],
	ownable_car[playerid][v_veh_coms][3], ownable_car[playerid][v_veh_coms][4], ownable_car[playerid][v_veh_coms][5],
	ownable_car[playerid][v_veh_coms][6], ownable_car[playerid][v_veh_coms][7], ownable_car[playerid][v_veh_coms][8],
	ownable_car[playerid][v_veh_coms][9], ownable_car[playerid][v_veh_coms][10], ownable_car[playerid][v_veh_coms][11],
	ownable_car[playerid][v_veh_coms][12], ownable_car[playerid][v_veh_coms][13]);

	new fmt_query[160];

	format(fmt_query, sizeof fmt_query, "UPDATE ownable_cars SET veh_com='%s', paintjob=%d WHERE id=%d", ownable_car[playerid][v_veh_com], ownable_car[playerid][v_paintjob], ownable_car[playerid][v_sql]);
	mysql_query(dbHandle, fmt_query);

	return 1;
}

stock ShowPlayerDialogExPayHouse(playerid, houseid)
{
	if(houseid == -1)
	return 1;

	new fmt_dialog[170];

	format
	(
	fmt_dialog, sizeof fmt_dialog,
	"{ffffff}Дом:\t\t\t\t\t№%d\n"\
	"Оплаченных дней арендны:\t\t\t%d из 10\n"\
	"Ежедневная плата:\t\t%d руб\n"\
	"На сколько дней Вы хотите оплатить дом?",
	houseid,
	HouseInfo[houseid][hOplata],
	GetHomeOplata(houseid)
	);

	return ShowPlayerDialogEx(playerid, D_LIC+5, DIALOG_STYLE_INPUT, "{ebec86}>> Оплата проживания в доме", fmt_dialog, "Оплатить", "Назад");
}

stock SendPlayerProposition(playerid, to_player, type, value_1 = 0, value_2 = 0)
{
	if(to_player == -1) return SendErr(playerid, "Вы не выбрали игрока");
	if(proposition_info[playerid][P_OUT_ID] == INVALID_PLAYER_ID)
	{
		new fmt_str[144];
		switch(type)
		{
		case PROPOSITION_TYPE_KISS:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет Вас поцеловать", GetName(playerid));
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s поцеловать Вас", GetName(to_player));
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);

				HidePlayerInteractionTextDraw(playerid);
			}
		case PROPOSITION_TYPE_HUG:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет Вас обнять", GetName(playerid));
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
				
				format(fmt_str, sizeof fmt_str, "Вы предложили %s обнять Вас", GetName(to_player));
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
		case PROPOSITION_TYPE_HI:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет пожать Вам руку", GetName(playerid));
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s пожать Вам руку", GetName(to_player));
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
		case PROPOSITION_TYPE_SELL_CAR:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет продать Вам свой транспорт %s (%d) для %d слота за %d рублей", GetName(playerid), VehicleNames[GetVehicleModel(p_info[playerid][pOwnableCar])-400], GetVehicleModel(p_info[playerid][pOwnableCar]), ownable_car[playerid][v_slot], value_1);
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s купить свой транспорт %s (%d)", GetName(to_player), VehicleNames[GetVehicleModel(p_info[playerid][pOwnableCar])-400], GetVehicleModel(p_info[playerid][pOwnableCar]));
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
		case PROPOSITION_TYPE_SELL_HOUSE:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет продать Вам свой дом №%d за %d рублей", GetName(playerid), GetPlayerHouse(playerid));
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s купить свой дом №%d за %d рублей", GetName(to_player), GetPlayerHouse(playerid), value_1);
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
		case PROPOSITION_TYPE_SELL_BUSINESS:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет продать Вам свой бизнес №%d (%s) за %d рублей", GetName(playerid), GetPlayerBizz(playerid), BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bName], value_1);
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s купить свой бизнес №%d (%s) за %d рублей", GetName(to_player), GetPlayerBizz(playerid), BizzInfo[GetPVarInt(playerid, "PlayerBizz")][bName], value_1);
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
		case PROPOSITION_TYPE_SHOW_LIC:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет показать Вам свои лицензии", GetName(playerid));
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s просмотреть свои лицензии", GetName(to_player));
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
		case PROPOSITION_TYPE_SHOW_PASS:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет показать Вам свой паспорт", GetName(playerid));
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s посмотреть свой паспорт", GetName(to_player));
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
        case PROPOSITION_TYPE_CHANGE:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет обменяться с Вами гаражами. Его гараж: №%d, доплата: %d рублей", GetName(playerid), p_info[playerid][data_GARAGE], value_1);
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s обменяться гаражами. Ваш гараж: №%d, доплата: %d рублей", GetName(to_player), p_info[playerid][data_GARAGE], value_1);
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
        case PROPOSITION_TYPE_SELL_GARAGE:
			{
				format(fmt_str, sizeof fmt_str, "Игрок %s хочет продать Вам гараж. Его гараж: №%d, цена: %d рублей", GetName(playerid), p_info[playerid][data_GARAGE], value_1);
				SendClientMessage(to_player, 0x3399FFFF, fmt_str);

				SendInf(to_player, "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

				format(fmt_str, sizeof fmt_str, "Вы предложили %s купить гараж. Ваш гараж: №%d, цена: %d рублей", GetName(to_player), p_info[playerid][data_GARAGE], value_1);
				SendClientMessage(playerid, 0x3399FFFF, fmt_str);
			}
		default: return 1;
		}

		proposition_info[playerid][P_OUT_ID] = to_player;

		proposition_info[to_player][P_ING_ID] = playerid;
		proposition_info[to_player][P_INCOMING_TYPE] = type;

		proposition_info[to_player][P_INCOMING_VALUE][0] = value_1;
		proposition_info[to_player][P_INCOMING_VALUE][1] = value_2;

	}
	else SendClientMessage(playerid, 0xFFFFFFFF, "Используйте {ebec86}/cancel {FFFFFF}чтобы отозвать предыдущее предложение");

	HidePlayerInteractionTextDraw(playerid);

	return 1;
}

CMD:yes(playerid)
{
    if(GetPVarInt(playerid, "Procedure") >= 1) return 1;
    if(GetPVarInt(playerid, "CallPlayerID") != -1) return 1;
	new proposition_id = proposition_info[playerid][P_ING_ID];
	new offer_type = proposition_info[playerid][P_INCOMING_TYPE];

	new value_1 = proposition_info[playerid][P_INCOMING_VALUE][0];
	//new value_2 = proposition_info[playerid][P_INCOMING_VALUE][1];
	
	if(proposition_id != INVALID_PLAYER_ID && (offer_type == PROPOSITION_TYPE_KISS || offer_type == PROPOSITION_TYPE_HUG || offer_type == PROPOSITION_TYPE_SELL_CAR ||
		offer_type == PROPOSITION_TYPE_SELL_HOUSE || offer_type == PROPOSITION_TYPE_SELL_BUSINESS || offer_type == PROPOSITION_TYPE_SHOW_LIC || offer_type == PROPOSITION_TYPE_SHOW_PASS ||
		offer_type == PROPOSITION_TYPE_CHANGE || offer_type == PROPOSITION_TYPE_SELL_GARAGE))
	{
		if(IsPlayerConnected(proposition_id))
		{
			if(proposition_info[proposition_id][P_OUT_ID] == playerid)
			{
				proposition_info[proposition_id] = g_proposition_default_values;
			}
			else offer_type = -1;

			new Float: x, Float: y, Float: z;
			new Float: dist;

			GetPlayerPos(proposition_id, x, y, z);
			dist = GetPlayerDistanceFromPoint(playerid, x, y, z);

			if(dist <= 10.0)
			{
				new fmt_str[144];

				switch(offer_type)
				{
				case PROPOSITION_TYPE_KISS:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 1.5)
							{
								new Float: to_x, Float: to_y;
								new Float: angle;

								GetPlayerPos(playerid, to_x, to_y, z);
								angle = _GetAngleToPoint(x, y, to_x, to_y);

								SetPlayerFacingAngle(playerid, angle);
								SetPlayerFacingAngle(proposition_id, angle + 180.0);

								format(fmt_str, sizeof fmt_str, "поцеловал(а) %s", GetName(proposition_id));

								MeAction(playerid, fmt_str);

								ApplyAnimation(proposition_id, "BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
								ApplyAnimation(playerid, "BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0,1);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
				case PROPOSITION_TYPE_HUG:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 1.5)
							{
								new Float: to_x, Float: to_y;
								new Float: angle;

								GetPlayerPos(playerid, to_x, to_y, z);
								angle = _GetAngleToPoint(x, y, to_x, to_y);

								SetPlayerFacingAngle(playerid, angle);
								SetPlayerFacingAngle(proposition_id, angle + 180.0);

								format(fmt_str, sizeof fmt_str, "обнял(а) %s", GetName(proposition_id));

								MeAction(playerid, fmt_str);

								ApplyAnimation(proposition_id, "BD_FIRE","GRLFRD_KISS_03",4.0,0,0,0,0,0,1);
								ApplyAnimation(playerid, "BD_FIRE","PLAYA_KISS_03",4.0,0,0,0,0,0,1);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
				case PROPOSITION_TYPE_HI:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 1.5)
							{
								new Float: to_x, Float: to_y;
								new Float: angle;

								GetPlayerPos(playerid, to_x, to_y, z);
								angle = _GetAngleToPoint(x, y, to_x, to_y);

								SetPlayerFacingAngle(playerid, angle);
								SetPlayerFacingAngle(proposition_id, angle + 180.0);

								format(fmt_str, sizeof fmt_str, "пожал(а) руку %s", GetName(proposition_id));

								MeAction(playerid, fmt_str);

								ApplyAnimation(proposition_id,"GANGS","hndshkfa",4.0,0,0,0,0,0);
								ApplyAnimation(playerid,"GANGS","hndshkfa",4.0,0,0,0,0,0);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
				case PROPOSITION_TYPE_SELL_CAR:
					{
						if(0.5 <= dist <= 1.5)
						{
							new fmt_query[70+MAX_PLAYER_NAME],
							rows;

							format(fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s' AND slot=%d", GetName(playerid), ownable_car[playerid][v_slot]);
							mysql_query(dbHandle, fmt_query);

							if(rows)
							return SendErr(proposition_id, "У игрока уже есть автомобиль в этом слоте");

							new  Float: car_x, Float: car_y, Float: car_z;
							GetVehiclePos(p_info[proposition_id][pOwnableCar], car_x, car_y, car_z);

							if(!(IsPlayerInRangeOfPoint(playerid, 10.0, car_x, car_y, car_z) && IsPlayerInRangeOfPoint(proposition_id, 10.0, car_x, car_y, car_z)))
							return SendErr(proposition_id, "Вы и продавец должны находиться около ТС");

							if(GetMoney(playerid) < value_1)
							return SendErr(playerid, "У Вас недостаточно денег");

							GiveMoney(proposition_id, value_1, "Продажа т/с с рук");
							GiveMoney(playerid, -value_1, "Покупка т/с с рук");
							
             				if(ownable_car_label[p_info[proposition_id][pOwnableCar]] != Text3D:INVALID_3DTEXT_ID)
							{
								DestroyDynamic3DTextLabel(ownable_car_label[p_info[proposition_id][pOwnableCar]]);
								ownable_car_label[p_info[proposition_id][pOwnableCar]] = Text3D:INVALID_3DTEXT_ID;
							}

							format(fmt_query, sizeof fmt_query, "%s успешно продал(а) Вам %s (%d) за %d рублей", GetName(proposition_id), VehicleNames[GetVehicleModel(p_info[proposition_id][pOwnableCar])-400], GetVehicleModel(p_info[proposition_id][pOwnableCar]), value_1);
							SendClientMessage(playerid, 0x66CC00FF, fmt_query);

							format(fmt_query, sizeof fmt_query, "UPDATE ownable_cars SET owner_name='%s' WHERE `id` = '%d' LIMIT 1", GetName(playerid), ownable_car[proposition_id][v_sql]);
							mysql_query(dbHandle, fmt_query);

							DestroyVehicle(p_info[proposition_id][pOwnableCar]);
							p_info[proposition_id][pOwnableCar] = INVALID_VEHICLE_ID;
							
							ownable_car[proposition_id][v_lock] =
							ownable_car[proposition_id][v_virtual] =
							ownable_car[proposition_id][v_sql] = 0;
							format(ownable_car[proposition_id][v_owner], 32, "None");
							ownable_car[proposition_id][v_model] =
							ownable_car[proposition_id][v_color_1] =
							ownable_car[proposition_id][v_color_2] =
							ownable_car[proposition_id][v_fuel] =
							ownable_car[proposition_id][v_slot] = -1;
							ownable_car[proposition_id][v_pos_x] =
							ownable_car[proposition_id][v_pos_y] =
							ownable_car[proposition_id][v_pos_z] =
							ownable_car[proposition_id][v_pos_r] = 0.0;

							format(fmt_query, sizeof fmt_query, "Вы продали свой транспорт игроку %s за %d руб", GetName(playerid), value_1);
							SendClientMessage(proposition_id, 0x66CC00FF, fmt_query);

						}
						else SendErr(playerid, "Вы слишком далеко от игрока");
					}
				case PROPOSITION_TYPE_SELL_HOUSE:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 5.0)
							{
								if(GetMoney(playerid) < value_1)
								return SendErr(playerid, "У Вас недостаточно денег");
								
								if(GetPlayerHouse(playerid) > 0)
								return SendErr(playerid, "У Вас уже есть дом");

								GiveMoney(playerid, -value_1, "Покупка дома с рук");
								GiveMoney(proposition_id, value_1, "Продажа дома с рук");

								new fmt_query[60+MAX_PLAYER_NAME];

								format(fmt_query, sizeof fmt_query, "UPDATE house SET hOwner='%s' WHERE hOwner='%s' LIMIT 1", GetName(playerid), GetName(proposition_id));
								mysql_query(dbHandle, fmt_query);

								strmid(HouseInfo[GetPVarInt(proposition_id, "PlayerHouse")][hOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
								HouseInfo[GetPVarInt(proposition_id, "PlayerHouse")][hLock] = 1;
								SetPVarInt(playerid, "PlayerHouse", GetPVarInt(proposition_id, "PlayerHouse"));
								DeletePVar(proposition_id, "PlayerHouse");

								format(fmt_query, sizeof fmt_query, "%s успешно продал(а) Вам свой дом за %d рублей", GetName(proposition_id), value_1);
								SendClientMessage(playerid, 0x66CC00FF, fmt_query);

								format(fmt_query, sizeof fmt_query, "Вы успешно продали свой дом %s за %d рублей", GetName(playerid), value_1);
								SendClientMessage(proposition_id, 0x66CC00FF, fmt_query);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
				case PROPOSITION_TYPE_SELL_BUSINESS:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 5.0)
							{
								if(GetMoney(playerid) < value_1)
								return SendErr(playerid, "У Вас недостаточно денег");
								
								if(GetPlayerBizz(playerid) > 0)
								return SendErr(playerid, "У Вас уже есть бизнес");

								GiveMoney(playerid, -value_1, "Покупка биз с рук");
								GiveMoney(proposition_id, value_1, "Продажа биз с рук");

								new fmt_query[60+MAX_PLAYER_NAME];

								format(fmt_query, sizeof fmt_query, "UPDATE bizz SET owner='%s' WHERE owner='%s' LIMIT 1", GetName(playerid), GetName(proposition_id));
								mysql_query(dbHandle, fmt_query);

								strmid(BizzInfo[GetPVarInt(proposition_id, "PlayerBizz")][bOwner], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);

								UpdateBizz(GetPVarInt(proposition_id, "PlayerBizz"));

								SetPVarInt(playerid, "PlayerBizz", GetPVarInt(proposition_id, "PlayerBizz"));

								format(fmt_query, sizeof fmt_query, "%s успешно продал(а) Вам свой бизнес за %d рублей", GetName(proposition_id), value_1);
								SendClientMessage(playerid, 0x66CC00FF, fmt_query);

								format(fmt_query, sizeof fmt_query, "Вы успешно продали свой бизнес %s за %d рублей", GetName(playerid), value_1);
								SendClientMessage(proposition_id, 0x66CC00FF, fmt_query);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
				case PROPOSITION_TYPE_SHOW_LIC:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 5.0)
							{
							
							    if(GetPVarInt(playerid, "LicPlayer") == 1) return SendErr(playerid, "Вы уже просматриваете документы");
							    
								MeAction(proposition_id, "показал(а) свои лицензии");
								
								lic_td_status ( playerid, true );

								new text[32];
								format(text, sizeof text, "%s", GetName(proposition_id));
								PlayerTextDrawSetString(playerid, LicPlayer[playerid][26], text);

								new text1[32];
								format(text1, sizeof text1, "%d", p_info[proposition_id][pPhoneNumber]);
								PlayerTextDrawSetString(playerid, LicPlayer[playerid][27], text1);

								new day, month, year, hour, minuite, second;
							 	getdate(year, month, day);
							 	gettime(hour, minuite, second);

								new text2[32];
								format(text2, sizeof text2, "%d.%d.%d", day, month, year);
								PlayerTextDrawSetString(playerid, LicPlayer[playerid][30], text2);

								new rows;
								new fmt_query[90];
								new Cache: result;
								new car_text[11];
								mysql_format(dbHandle, fmt_query, sizeof fmt_query, "SELECT * FROM ownable_cars WHERE owner_name='%s'", GetName(proposition_id));
								result = mysql_query(dbHandle, fmt_query);

								rows = cache_num_rows();

								if(!rows)
								{
								    car_text = "Нету";
								}
								else
								{
								    car_text = "Есть";
								}

								new text4[32];
								format(text4, sizeof text4, "%s", car_text);
								PlayerTextDrawSetString(playerid, LicPlayer[playerid][31], text4);

								cache_delete(result);

								new text5[32];
								format(text5, sizeof text5, "%s %s %s %s", (!p_info[proposition_id][pLic][0]) ? ("-"):("A"), (!p_info[proposition_id][pLic][2]) ? ("-"):("C"), (!p_info[proposition_id][pLic][3]) ? ("-"):("О"), (!p_info[proposition_id][pLic][1]) ? ("-"):("К"));
								PlayerTextDrawSetString(playerid, LicPlayer[playerid][32], text5);

								new text6[32];
								format(text6, sizeof text6, "%s", GetName(proposition_id));
								PlayerTextDrawSetString(playerid, LicPlayer[playerid][33], text6);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
				case PROPOSITION_TYPE_SHOW_PASS:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 5.0)
							{
								new id[3];

								format(id, sizeof id, "%d", playerid);

								callcmd::pass(proposition_id, id);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
                case PROPOSITION_TYPE_CHANGE:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 5.0)
							{
								if(GetMoney(playerid) < value_1)
								return SendErr(playerid, "У Вас недостаточно денег");

								GiveMoney(playerid, -value_1, "Обмен гаражами");
								GiveMoney(proposition_id, value_1, "Обмен гаражами");
								
								new param[2];
								
								param[0] = p_info[playerid][data_GARAGE];
								param[1] = p_info[proposition_id][data_GARAGE];
								
								p_info[playerid][data_GARAGE] = param[1];
								MysqlUpdatePlayerInt(playerid, "garage", p_info[playerid][data_GARAGE]);
								p_info[proposition_id][data_GARAGE] = param[0];
								MysqlUpdatePlayerInt(proposition_id, "garage", p_info[proposition_id][data_GARAGE]);
								
								strmid(GARAGE_DATA[param[1]][g_OWNER], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
		    					strmid(GARAGE_DATA[param[0]][g_OWNER], GetName(proposition_id), 0, strlen(GetName(proposition_id)), MAX_PLAYER_NAME);
		    					UpdateGarageData(param[1]);
		    					UpdateGarageData(param[0]);
		    					
		    					new String[256];
								format(String, 256, "UPDATE `garages` SET `owner` = '%s' WHERE `id` = '%d' LIMIT 1", GARAGE_DATA[param[0]][g_OWNER], GARAGE_DATA[param[0]][g_ID]);
								mysql_tquery(dbHandle, String, "", "");
								
								new Strings[256];
								format(Strings, 256, "UPDATE `garages` SET `owner` = '%s' WHERE `id` = '%d' LIMIT 1", GARAGE_DATA[param[1]][g_OWNER], GARAGE_DATA[param[1]][g_ID]);
								mysql_tquery(dbHandle, Strings, "", "");

                                new fmt_query[60+MAX_PLAYER_NAME];
								format(fmt_query, sizeof fmt_query, "%s успешно обменялся с Вами гаражем", GetName(proposition_id));
								SendClientMessage(playerid, 0x66CC00FF, fmt_query);

								format(fmt_query, sizeof fmt_query, "Вы успешно обменялись гаражем с %s", GetName(playerid));
								SendClientMessage(proposition_id, 0x66CC00FF, fmt_query);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
                case PROPOSITION_TYPE_SELL_GARAGE:
					{
						if(!(IsPlayerInAnyVehicle(playerid) && IsPlayerInAnyVehicle(proposition_id)))
						{
							if(0.5 <= dist <= 5.0)
							{
								if(GetMoney(playerid) < value_1)
								return SendErr(playerid, "У Вас недостаточно денег");
								if(p_info[playerid][data_GARAGE] != INVALID_GARAGE_ID)
								return SendErr(playerid, "У Вас уже есть гараж");

								GiveMoney(playerid, -value_1, "покупка гаража");
								GiveMoney(proposition_id, value_1, "продажа гаража");

								p_info[playerid][data_GARAGE] = p_info[proposition_id][data_GARAGE];
								MysqlUpdatePlayerInt(playerid, "garage", p_info[playerid][data_GARAGE]);
								p_info[proposition_id][data_GARAGE] = INVALID_GARAGE_ID;
								MysqlUpdatePlayerInt(proposition_id, "garage", p_info[proposition_id][data_GARAGE]);

								new g = p_info[playerid][data_GARAGE];
        						strmid(GARAGE_DATA[g][g_OWNER], GetName(playerid), 0, strlen(GetName(playerid)), MAX_PLAYER_NAME);
        						UpdateGarageData(g);

		    					new String[256];
								format(String, 256, "UPDATE `garages` SET `owner` = '%s' WHERE `id` = '%d' LIMIT 1", GARAGE_DATA[g][g_OWNER], GARAGE_DATA[g][g_ID]);
								mysql_tquery(dbHandle, String, "", "");

                                new fmt_query[60+MAX_PLAYER_NAME];
								format(fmt_query, sizeof fmt_query, "%s успешно купил(а) у Вас гараж за %d рублей", GetName(playerid), value_1);
								SendClientMessage(proposition_id, 0x66CC00FF, fmt_query);

								format(fmt_query, sizeof fmt_query, "Вы успешно купили гараж у %s за %d рублей", GetName(proposition_id), value_1);
								SendClientMessage(playerid, 0x66CC00FF, fmt_query);
							}
							else SendErr(playerid, "Вы слишком далеко от игрока");
						}
						else SendErr(playerid, "Вы либо игрок не должны находиться в транспорте");
					}
				default:
					SendErr(playerid, "В данный момент Вам ничего не предлагают");
				}
			}
			else SendErr(playerid, "Игрок слишком далеко");
		}
		else SendErr(playerid, "Игрок вышел из игры");

		proposition_info[playerid] = g_proposition_default_values;

		p_info[proposition_id][pInteractionPlayer] = -1;
		p_info[playerid][pInteractionPlayer] = -1;
	}
	else SendErr(playerid, "В данный момент Вам ничего не предлагают");

	return 1;
}

CMD:no(playerid)
{
	//if(!(br_player[playerid][br_flag] & (1 << 2))) return 1;
	//if(!(br_player[playerid][br_flag] & (1 << 3))) return 1;
    if(GetPVarInt(playerid, "Procedure") >= 1) return 1;
    if(GetPVarInt(playerid, "CallPlayerID") != -1) return 1;
	new proposition_id = proposition_info[playerid][P_ING_ID];

	if(proposition_id != INVALID_PLAYER_ID)
	{
		if(proposition_info[proposition_id][P_OUT_ID] == playerid)
		{
			proposition_info[proposition_id] = g_proposition_default_values;

			new fmt_str[64];
			format(fmt_str, sizeof fmt_str, "%s отказался от Вашего предложения", GetName(playerid));
			SendClientMessage(proposition_id, 0xa24646FF, fmt_str);

			format(fmt_str, sizeof fmt_str, "Вы отказались от предложения игрока %s", GetName(proposition_id));
			SendErr(playerid, fmt_str);

			GameTextForPlayer(proposition_id, "~r~no", 5000, 6);
		}
		else SendErr(playerid, "Вы отказались от предложения игрока");
		
		p_info[proposition_id][pInteractionPlayer] = -1;
		p_info[playerid][pInteractionPlayer] = -1;

		proposition_info[playerid] = g_proposition_default_values;
	}
	else SendErr(playerid, "В данный момент Вам ничего не предлагают");
	return 1;
}

CMD:cancel(playerid)
{
	new proposition_id = proposition_info[playerid][P_OUT_ID];

	if(proposition_id != INVALID_PLAYER_ID)
	{
		if(proposition_info[proposition_id][P_ING_ID] == playerid)
		{
			proposition_info[proposition_id] = g_proposition_default_values;

			new fmt_str[64];
			format(fmt_str, sizeof fmt_str, "%s отозвал свое предложение", GetName(playerid));
			SendClientMessage(proposition_id, 0xa24646FF, fmt_str);

			format(fmt_str, sizeof fmt_str, "Вы отозвали свое предложение для %s", GetName(proposition_id));
			SendErr(playerid, fmt_str);
		}
		else SendErr(playerid, "Вы отозвали свое последнее предложение");

		proposition_info[playerid] = g_proposition_default_values;

		p_info[proposition_id][pInteractionPlayer] = -1;
		p_info[playerid][pInteractionPlayer] = -1;
	}
	else SendErr(playerid, "У Вас нет активных предложений");

	return 1;
}

stock HidePlayerInteractionTextDraw(playerid)
{
	CancelSelectTextDraw(playerid);

	for(new i = 0; i < 59; i ++) TextDrawHideForPlayer(playerid, TDEditor_INTERACTION_GLOBAL[i]);
	for(new i = 0; i < 10; i ++) PlayerTextDrawHide(playerid, TDEditor_INTERACTION_PLAYER[playerid][i]);

	CancelSelectTextDraw(playerid);

	SetPVarInt(playerid, "show_interaction", 0);
}

stock IsPlayerDriver(playerid) // сидит ли игрок за рулем ТС
{
	return (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER);
}

CMD:call(playerid,params[])
{
	if(!p_info[playerid][pPhoneNumber]) return SendErr(playerid, "У вас нет SIM-карты, приобретите её в 24/7");
	if(PlayerTied[playerid] == true) return SendErr(playerid, "Ваши руки связаны");
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата");
	if(sscanf(params,"i",params[0])) return SendInf(playerid,"/call [номер]");
	if(!params[0]) return 1;
	if(params[0] == p_info[playerid][pPhoneNumber]) return SendErr(playerid,"Вы указали свой номер");
	foreach(new i: Player)
	{
 		if(p_info[i][pPhoneNumber] == params[0])
		{
		    new Float:X, Float:Y, Float:Z;
			if(!IsPlayerConnected(i)) return SendErr(playerid, "Вы ошиблись номером");
			if(GetPVarInt(i, "OnlinePhone")) return SendErr(playerid, "Абонент недоступен");
			if(GetPVarInt(i, "CallPlayerStart")) return SendErr(playerid, "Абонент занят");
			new PlayerNumber = p_info[playerid][pPhoneNumber];
			new GivePlayerNumber = p_info[i][pPhoneNumber];
			for(new c; c != MAX_CONTACTS; c++)
			{
				if(ContactsNumber[i][c] == PlayerNumber)
				{
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вам звонит %s. Нажмите '{f0e86b}Y{FAEBD7}' чтобы ответить или '{FF6347}N{FAEBD7}' чтобы сбросить", ContactsName[i][c]);
					SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
					break;
				}
				else if(c == 49)
				{
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вам звонит %d. Нажмите '{f0e86b}Y{FAEBD7}' чтобы ответить или '{FF6347}N{FAEBD7}' чтобы сбросить", PlayerNumber);
					SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
				}
			}
			for(new c; c != MAX_CONTACTS; c++)
			{
				if(ContactsNumber[playerid][c] == GivePlayerNumber)
				{
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы позвонили игроку %s. Нажмите '{FF6347}N{FAEBD7}' чтобы сбросить", ContactsName[playerid][c]);
					SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
					break;
				}
				else if(c == 49)
				{
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы позвонили по номеру %d. Нажмите '{FF6347}N{FAEBD7}' чтобы сбросить", GivePlayerNumber);
					SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
				}
			}
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid, 1, p_info[playerid][pModelPhone], 6, 0.059000, 0.014000, -0.008999, 95.100051, -179.800033, 46.500030, 1.000000, 1.000000, 1.000000);
			GetPlayerPos(i, X, Y, Z);
			PlayerPlaySound(i, p_info[i][SoundCall], 0, 0, 0);
			SetPVarInt(playerid, "CallPlayerStart", 1);
			SetPVarInt(playerid, "CallPlayerID", i);
			SetPVarInt(i, "CallPlayerID", playerid);
			foreach(new in: Player)
			{
				if(IsPlayerInRangeOfPoint(in, 5.0, X, Y, Z))
				{
					if(i == in) continue;
					format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "У %s звонит телефон", p_info[i][pName]);
					SendClientMessage(in, COLOR_PURPLE, STRING_GLOBAL);
				}
			}
			return 1;
		}
	}
	return 1;
}

CMD:number(playerid,params[])
{
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "/number [id_игрока или номер_игрока]");
	foreach(new i: Player)
	{
		if(i == params[0] || p_info[i][pPhoneNumber] == params[0])
		{
			format(STRING_GLOBAL, 100, "Номер игрока %s - {f0e86b}%d", p_info[i][pName], p_info[i][pPhoneNumber]);
			SendInf(playerid, STRING_GLOBAL);
			SetPlayerChatBubble(playerid, "посмотрел(а) телефонную книгу", COLOR_PURPLE, 5, 7500);
			return 1;
		}
	}
	return 1;
}

CMD:phone(playerid)
{
	if(!p_info[playerid][pPhoneNumber]) return SendErr(playerid, "У вас нет SIM-карты, приобретите её в 24/7");
	if(!GetPVarInt(playerid, "OnlinePhone")) ShowPlayerDialogEx(playerid, dialog_PHONE_1, DIALOG_STYLE_LIST, "{ebec86}>> Телефон", "- Список контактов\n- Добавить контакт\n- Заказать услуги\n- Звук СМС\n- Мелодия звонка\n- Выключить телефон", "Выбрать", "Назад");
	else ShowPlayerDialogEx(playerid, dialog_PHONE_1, DIALOG_STYLE_LIST, "{ebec86}>> Телефон", "- Звук СМС\n- Мелодия звонка\n- Включить телефон", "Выбрать", "Назад");
	return 1;
}

CMD:sms(playerid, params[])
{
	if(!p_info[playerid][pPhoneNumber]) return SendErr(playerid, "У вас нет SIM-карты, приобретите её в 24/7");
	else if(PlayerTied[playerid] == true) return SendErr(playerid, "Ваши руки связаны");
	else if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата");
	else if(sscanf(params,"ds[128]",params[0],params[1])) return SendInf(playerid, "/sms [номер телефона] [текст]");
	else if(strlen(params[1]) > 100) return SendErr(playerid, "Слишком много символов");
	if(IsIpFound(params[1]) || CheckString(params[1]))
	{
		PlayerGetsChatBan(playerid, params[1]);
		return 1;
	}
	if(params[0] == 333111)
	{
	    if(EtherSms[0] == false) return SendErr(playerid, "RECORD FM не готовы принимать SMS сообщения");
	    format(STRING_GLOBAL, 144, "[СООБЩЕНИЕ]: %s. Отправитель: %s", params[1], p_info[playerid][pName]);
	    SendFMes(TEAM_SMI, COLOR_LIGHTBLUE, STRING_GLOBAL);
	    MysqlUpdateOtherInt("lsnbank", FracBank[8]),FracBank[8]+=300;
		MysqlUpdateOtherInt("sfnbank", FracBank[9]),FracBank[9]+=300;
		MysqlUpdateOtherInt("lvnbank", FracBank[10]),FracBank[10]+=300;
	    return 1;
	}
	foreach(new i: Player)
	{
		if(p_info[i][pPhoneNumber] == params[0])
		{
			if(!IsPlayerConnected(i)) return SendErr(playerid, "Вы ошиблись номером");
			if(GetPVarInt(i, "OnlinePhone")) return SendErr(playerid, "Абонент недоступен");
			if(params[1] >= 60)
			{
				new PlayerNumber = p_info[playerid][pPhoneNumber];
				new GivePlayerNumber = p_info[i][pPhoneNumber];
				for(new c; c != MAX_CONTACTS; c++)
				{
					if(ContactsNumber[i][c] == PlayerNumber)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS от %s: {FFFFFF}%s", ContactsName[i][c], params[1]);
						SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
						break;
					}
					else if(c == 49)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS от %d: {FFFFFF}%s", PlayerNumber, params[1]);
						SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
					}
				}
				for(new c; c != MAX_CONTACTS; c++)
				{
					if(ContactsNumber[playerid][c] == GivePlayerNumber)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS к %s: {FFFFFF}%s", ContactsName[playerid][c], params[1]);
						SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
						break;
					}
					else if(c == 49)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS к %d: {FFFFFF}%s", GivePlayerNumber, params[1]);
						SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
					}
				}
				PlayerPlaySound(i, p_info[i][SoundSMS], 0, 0, 0);
			}
			else
			{
   				new PlayerNumber = p_info[playerid][pPhoneNumber];
				new GivePlayerNumber = p_info[i][pPhoneNumber];
				for(new c; c != MAX_CONTACTS; c++)
				{
					if(ContactsNumber[i][c] == PlayerNumber)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS от %s: {FFFFFF}%s", ContactsName[i][c], params[1]);
						SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
						break;
					}
					else if(c == 49)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS от %d: {FFFFFF}%s", PlayerNumber, params[1]);
						SendClientMessage(i, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
					}
				}
				for(new c; c != MAX_CONTACTS; c++)
				{
					if(ContactsNumber[playerid][c] == GivePlayerNumber)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS к %s: {FFFFFF}%s", ContactsName[playerid][c], params[1]);
						SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
						break;
					}
					else if(c == 49)
					{
						format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SMS к %d: {FFFFFF}%s", GivePlayerNumber, params[1]);
						SendClientMessage(playerid, COLOR_ANTIQUEWHITE, STRING_GLOBAL);
					}
				}
				PlayerPlaySound(i, p_info[i][SoundSMS], 0, 0, 0);
			}
			SetPlayerChatBubble(playerid, "написал(а) СМС", COLOR_PURPLE, 5.0, 10000);
			return 1;
		}
	}
	return 1;
}

stock ShowPlayerContacts(playerid)
{
	new Contact;
	new String[150];
	strdel(STRING_GLOBAL, 0, 10000);
	for(new c; c != MAX_CONTACTS; c++)
	{
		if(strlen(ContactsName[playerid][c]) < 1)
		{
			if(c == MAX_CONTACTS-1 && Contact == 0) return SendErr(playerid, "Список контактов пуст");
			continue;
		}
		else Contact++;
		format(String, sizeof(String), "- Контакт '%s'\n", ContactsName[playerid][c]);
		strcat(STRING_GLOBAL, String);
	}
	ShowPlayerDialogEx(playerid, dialog_PHONE_4, DIALOG_STYLE_LIST, "{ebec86}>> Контакты", STRING_GLOBAL, "Выбрать", "Назад");
	return 1;
}

stock SaveContacts(playerid, contact)
{
	new sql_string[256];
	mysql_format(dbHandle, sql_string, 200, "UPDATE `contacts` SET `Contact_%d_Name` = '%e', `Contact_%d_Number` = '%d' WHERE `NickName` = '%s' LIMIT 1",
	contact, ContactsName[playerid][contact], contact, ContactsNumber[playerid][contact], p_info[playerid][pName]);
	mysql_query(dbHandle, sql_string);
	return 1;
}

forward LoadContacts(playerid);
public LoadContacts(playerid)
{
    new Rows, Fields; new sql_string[256];
    cache_get_data(Rows, Fields);
	if(!Rows)
 	{
  		format(sql_string, 256, "INSERT INTO `contacts` (`NickName`) VALUES ('%s')", p_info[playerid][pName]);
		mysql_tquery(dbHandle, sql_string, "", "");
		format(sql_string, 256, "SELECT * FROM `contacts` WHERE `NickName` = '%s' LIMIT 1", p_info[playerid][pName]);
		mysql_tquery(dbHandle, sql_string, "", "");
  	}
   	else
   	{
		for(new c; c != MAX_CONTACTS; c++)
		{
  			new String[25];
			format(String, sizeof(String), "Contact_%d_Name", c);
			cache_get_field_content(0, String, ContactsName[playerid][c]);
			if(!strcmp(ContactsName[playerid][c], "NULL")) strdel(ContactsName[playerid][c], 0, 100);
			format(String, sizeof(String), "Contact_%d_Number", c);
			ContactsNumber[playerid][c] = cache_get_field_content_int(0, String);
		}
	}
}

LSNews(color, string[])
{
	foreach(new i:Player)
	{
		if(IsPlayerConnected(i)) { if(!GetPVarInt(i,"lNews")) SCM(i, color, string); }
	}
}

CMD:accmedic(playerid, params[])
{
	if(!IsAMedic(playerid)) return SendErr(playerid, "Вы не работаете в больнице");
    new Float:Pos[3], GivePlayerID;
	if(sscanf(params, "i", GivePlayerID)) return SendInf(playerid, "/accmedic [ID игрока]");
	if(!GetPVarInt(GivePlayerID, "CallMedic")) return SendErr(playerid, "Игрок не вызывал медиков / Вызов уже приняли");
	GetPlayerPos(GivePlayerID, Pos[0], Pos[1], Pos[2]);
	SendInf(playerid, "Вы приняли вызов. Езжайте на чекпоинт");
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Медик %s принял(а) ваш вызов. Ждите на месте вызова", p_info[playerid][pName]);
	SendInf(GivePlayerID, STRING_GLOBAL);
	SetPVarInt(GivePlayerID, "CallMedic", 0);
	SetPlayerRaceCheckpoint(playerid, 1, Pos[0], Pos[1], Pos[2], 0, 0, 0, 5);
    return 1;
}

CMD:accpolice(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вы не работаете в полиции");
    new Float:Pos[3], GivePlayerID;
	if(sscanf(params, "i", GivePlayerID)) return SendInf(playerid, "/accpolice [ID игрока]");
	if(!GetPVarInt(GivePlayerID, "CallPolice")) return SendErr(playerid, "Игрок не вызывал полицию / Вызов уже приняли");
	GetPlayerPos(GivePlayerID, Pos[0], Pos[1], Pos[2]);
	SendInf(playerid, "Вы приняли вызов. Езжайте на чекпоинт");
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Полицейский %s принял(а) ваш вызов. Ждите на месте вызова", p_info[playerid][pName]);
	SendInf(GivePlayerID, STRING_GLOBAL);
	SetPVarInt(GivePlayerID, "CallPolice", 0);
	SetPlayerRaceCheckpoint(playerid, 1, Pos[0], Pos[1], Pos[2], 0, 0, 0, 5);
    return 1;
}

CMD:staxi(playerid)
{
	STRING_GLOBAL = "";
	new VehicleID = GetPlayerVehicleID(playerid);
	if(VehicleID >= TaxiVehicle[0] && VehicleID <= TaxiVehicle[1] && p_info[playerid][pJob] == JOB_TAXI)
	{
		if(TaxiVehicleDriver[VehicleID] != -1)
		{
		    DestroyDynamic3DTextLabel(TaxiTariffText[VehicleID]);
		    TaxiVehicleDriver[VehicleID] = -1;
		    SendInf(playerid, "Вы закончили работу. Заработанные деньги вы получите во время зарплаты");
		}
		else
		{
		    if(VehicleID >= TaxiVehicle[0] && VehicleID <= TaxiVehicle[1]) format(STRING_GLOBAL, 128, "Тариф\n{f0e86b}%d рублей - 100 метров", 3*WorkSalary[5]);
		 	TaxiTariffText[VehicleID] = CreateDynamic3DTextLabel(STRING_GLOBAL, COLOR_WHITE, 0, 0, 1.2, 50, INVALID_PLAYER_ID, VehicleID, 1);
			TaxiVehicleDriver[VehicleID] = playerid;
			SendInf(playerid, "Вы начали работу. Ищите пассажиров");
		}
	}
	else SendErr(playerid, "Вы не в рабочем транспорте");
	return 1;
}

CMD:acctaxi(playerid, params[])
{
	new VehicleID = GetPlayerVehicleID(playerid);
	if(p_info[playerid][pJob] != JOB_TAXI) return SendErr(playerid, "Вы не работаете таксистом");
    if(VehicleID >= TaxiVehicle[0] && VehicleID <= TaxiVehicle[1])
	{
		if(TaxiVehicleDriver[VehicleID] != playerid) return SendErr(playerid, "Транспорт не арендован");
	    new Float:Pos[3], GivePlayerID;
		if(sscanf(params, "i", GivePlayerID)) return SendInf(playerid, "/acctaxi [ID игрока]");
		if(!GetPVarInt(GivePlayerID, "CallTaxi")) return SendErr(playerid, "Игрок не вызывал такси / Вызов уже приняли");
		GetPlayerPos(GivePlayerID, Pos[0], Pos[1], Pos[2]);
		SendInf(playerid, "Вы приняли вызов. Езжайте на чекпоинт");
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Таксист %s принял(а) ваш вызов. Ждите на месте вызова", GetName(playerid));
		SendInf(GivePlayerID, STRING_GLOBAL);
		SetPVarInt(GivePlayerID, "CallTaxi", 0);
		
		zakaz_player[playerid]++;
		zakaz_taxi--;
		
		SetPlayerRaceCheckpoint(playerid, 1, Pos[0], Pos[1], Pos[2], 0, 0, 0, 5);
	}
	else SendErr(playerid, "Вы не в рабочем транспорте");
    return 1;
}

CMD:loadfuel(playerid)
{
    new VehicleID = GetPlayerVehicleID(playerid);
	if(p_info[playerid][pJob] != JOB_MECHANIC) return SendErr(playerid, "Вы не работаете механиком");
    if(VehicleID >= MechanicVehicle[0] && VehicleID <= MechanicVehicle[1])
	{
		for(new i = TOTALBIZZ; i > 0; i --)
		{
			if(PlayerToPoint(5.0, playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]))
			{
			    if(BizzInfo[i][bLock]) return SendErr(playerid, "Заправка не работает");
		 		ShowPlayerDialogEx(playerid, 2228, DIALOG_STYLE_INPUT, "{ebec86}>> Загрузка бензина", "{FFFFFF}Введите нужное количество бензина в литрах:\n- Бензин оплачивает ваш работодатель", "Принять", "Выйти");
		 		return 1;
			}
		}
		SendErr(playerid, "Вы не на заправке");
	}
	else SendErr(playerid, "Вы не в рабочем транспорте");
    return 1;
}

CMD:mrepair(playerid, params[])
{
    new VehicleID = GetPlayerVehicleID(playerid);
    new Float:Pos[3], Float:VHealth, GivePlayerID;
	if(sscanf(params, "i", GivePlayerID)) return SendInf(playerid, "/mrepair [ID игрока]");
	new GiveVehicleID = GetPlayerVehicleID(GivePlayerID);
	if(p_info[playerid][pJob] != JOB_MECHANIC) return SendErr(playerid, "Вы не работаете механиком");
	if(GetPVarInt(GivePlayerID, "MechanicPlayerID") != -1) return SendErr(playerid, "Игроку уже предложили ремонт или заправку");
    if(VehicleID >= MechanicVehicle[0] && VehicleID <= MechanicVehicle[1])
	{
		if(MechanicVehicleDriver[VehicleID] == -1) return SendErr(playerid, "Транспорт не арендован");
		GetVehicleHealth(GiveVehicleID, VHealth);
		SetPVarInt(playerid, "MechanicRepairCost", (1000-floatround(VHealth))*2*75/100);
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Хотите отремонтировать свой транспорт?\nСтоимость ремонта: %d рублей", GetPVarInt(playerid, "MechanicRepairCost"));
		if(GiveVehicleID == VehicleID)
		{
		    if(VHealth == 1000) return SendErr(playerid, "Ваш транспорт не нуждается в ремонте");
			ShowPlayerDialogEx(playerid, 129, DIALOG_STYLE_MSGBOX, "{ebec86}>> Ремонт", STRING_GLOBAL, "Принять", "Выйти");
			return 1;
		}
		GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		if(!IsPlayerInRangeOfPoint(GivePlayerID, 5, Pos[0], Pos[1], Pos[2])) return SendErr(playerid, "Вы слишком далеко");
		if(!IsPlayerInAnyVehicle(GivePlayerID) || IsVehicleBikes(GiveVehicleID)) return SendErr(playerid, "Игрок не в транспорте");
		if(VHealth == 1000) return SendErr(playerid, "Транспорт не нуждается в ремонте");
		SetPVarInt(GivePlayerID, "MechanicPlayerID", playerid);
		SetPVarInt(playerid, "MechanicRepair", GivePlayerID);
		SetPVarInt(GivePlayerID, "MechanicRepairCost", (1000-floatround(VHealth))*2);
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы предложили игроку %s отремонтировать его транспорт за {f0e86b}%d {FFFFFF}рублей", GetName(GivePlayerID), (1000-floatround(VHealth))*2);
		SendInf(playerid, STRING_GLOBAL);
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Механик %s [%d] предлагает отремонтировать ваш транспорт за {f0e86b}%d {FFFFFF}рублей", GetName(playerid), playerid, (1000-floatround(VHealth))*2);
		SendInf(GivePlayerID, STRING_GLOBAL);
		SendClientMessage(GivePlayerID, -1, "Нажмите {63BD4E}Y{FFFFFF} (чтобы согласиться) или {F04245}N{FFFFFF} (чтобы отказаться)");
	}
	else SendErr(playerid, "Вы не в рабочем транспорте");
  	return 1;
}

CMD:mfill(playerid, params[])
{
    new VehicleID = GetPlayerVehicleID(playerid);
    new Float:Pos[3], GivePlayerID, MFuel;
	if(sscanf(params, "ii", GivePlayerID, MFuel)) return SendInf(playerid, "/mfill [ID игрока] [Кол-во бензина]");
	new GiveVehicleID = GetPlayerVehicleID(GivePlayerID);
	if(p_info[playerid][pJob] != JOB_MECHANIC) return SendErr(playerid, "Вы не работаете механиком");
	if(GetPVarInt(GivePlayerID, "MechanicPlayerID") != -1) return SendErr(playerid, "Игроку уже предложили ремонт или заправку");
    if(VehicleID >= MechanicVehicle[0] && VehicleID <= MechanicVehicle[1])
	{
		if(MechanicVehicleDriver[VehicleID] == -1) return SendErr(playerid, "Транспорт не арендован");
		if(MechanicFuel[VehicleID] < MFuel) return SendErr(playerid, "У вас недостаточно бензина");
		SetPVarInt(playerid, "MechanicFillCost", MechanicFuelCost[VehicleID]*MFuel);
		SetPVarFloat(playerid, "MechanicFillFuel", MFuel);
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{FFFFFF}Хотите заправить свой транспорт на %d литров?\nСтоимость заправки: %d рублей", MFuel, GetPVarInt(playerid, "MechanicRepairCost"));
		if(GiveVehicleID == VehicleID)
		{
		    if(Fuel[GiveVehicleID]+MFuel > 100) return SendErr(playerid, "Ваш транспорт не нуждается в заправке");
			ShowPlayerDialogEx(playerid, 130, DIALOG_STYLE_MSGBOX, "{ebec86}>> Заправка", STRING_GLOBAL, "Принять", "Выйти");
			return 1;
		}
		GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
		if(!IsPlayerInRangeOfPoint(GivePlayerID, 5, Pos[0], Pos[1], Pos[2])) return SendErr(playerid, "Вы слишком далеко");
		if(!IsPlayerInAnyVehicle(GivePlayerID) || IsVehicleBikes(GiveVehicleID)) return SendErr(playerid, "Игрок не в транспорте");
		if(Fuel[GiveVehicleID]+MFuel > 100) return SendErr(playerid, "Транспорт не нуждается в заправке");
		SetPVarInt(GivePlayerID, "MechanicPlayerID", playerid);
		SetPVarInt(playerid, "MechanicFill", GivePlayerID);
		SetPVarInt(GivePlayerID, "MechanicFillCost", MechanicFuelCost[VehicleID]*MFuel);
		SetPVarFloat(GivePlayerID, "MechanicFillFuel", MFuel);
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Вы предложили игроку %s заправить его транспорт на {f0e86b}%d {FFFFFF}литров за {f0e86b}%d {FFFFFF}рублей", GetName(GivePlayerID), MFuel, MechanicFuelCost[VehicleID]*MFuel);
		SendInf(playerid, STRING_GLOBAL);
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Механик %s [%d] предлагает заправить ваш транспорт на {f0e86b}%d {FFFFFF}литров за {f0e86b}%d {FFFFFF}рублей", GetName(playerid), playerid, MFuel, MechanicFuelCost[VehicleID]*MFuel);
		SendInf(GivePlayerID, STRING_GLOBAL);
		SendClientMessage(GivePlayerID, -1, "Нажмите {63BD4E}Y{FFFFFF} (чтобы согласиться) или {F04245}N{FFFFFF} (чтобы отказаться)");
	}
	else SendErr(playerid, "Вы не в рабочем транспорте");
 	return 1;
}

CMD:accmechanic(playerid, params[])
{
	new VehicleID = GetPlayerVehicleID(playerid);
    if(p_info[playerid][pJob] != JOB_MECHANIC) return SendErr(playerid, "Вы не работаете механиком");
	if(VehicleID >= MechanicVehicle[0] && VehicleID <= MechanicVehicle[1])
	{
		if(MechanicVehicleDriver[VehicleID] == -1) return SendErr(playerid, "Транспорт не арендован");
	    new Float:Pos[3], GivePlayerID;
		if(sscanf(params, "i", GivePlayerID)) return SendInf(playerid, "/accmechanic [ID игрока]");
		if(!GetPVarInt(GivePlayerID, "CallMechanic")) return SendErr(playerid, "Игрок не вызывал механика / Вызов уже приняли");
		GetPlayerPos(GivePlayerID, Pos[0], Pos[1], Pos[2]);
		SendInf(playerid, "Вы приняли вызов. Езжайте на чекпоинт");
		format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Механик %s принял(а) ваш вызов. Ждите на месте вызова", GetName(playerid));
		SendInf(GivePlayerID, STRING_GLOBAL);
		SetPVarInt(GivePlayerID, "CallMechanic", 0);
		SetPlayerRaceCheckpoint(playerid, 1, Pos[0], Pos[1], Pos[2], 0, 0, 0, 5);
	}
	else SendErr(playerid, "Вы не в рабочем транспорте");
    return 1;
}

forward OnAntiChasherDetect(playerid, code);
public OnAntiChasherDetect(playerid, code)
{
	Kick(playerid);
	return 1;
}

stock ReportDialog(playerid)
{
    STRING_GLOBAL = "";
	strcat(STRING_GLOBAL, "{ffffff}[!] Вы собираетесь написать в сообщение Администрации.");
	strcat(STRING_GLOBAL, "\n[!] Перед тем как отправить сообщение убедитесь,");
	strcat(STRING_GLOBAL, "\n[!] что не один из пунктов помощи не дал Вам ответа на Ваш вопрос.");
	strcat(STRING_GLOBAL, "\n\n{FF6347}[!] Запрещено:");
	strcat(STRING_GLOBAL, "\n[!] 1. Флуд, оскорбление, оффтоп.");
	strcat(STRING_GLOBAL, "\n[!] 2. Просьбы (Дайте денег, дайте лидерку , дайте дайте..)");
	strcat(STRING_GLOBAL, "\n[!] 3. Ложные сообщения.");
	strcat(STRING_GLOBAL, "\n\n{cd5c5c}[!] За нарушения правил администрация может:");
	strcat(STRING_GLOBAL, "\n[!] 1. Предупредить (Warn)");
	strcat(STRING_GLOBAL, "\n[!] 2. Выкинуть из сервера (Kick)");
	strcat(STRING_GLOBAL, "\n[!] 3. Заблокировать аккаунт (Ban)");
	strcat(STRING_GLOBAL, "\n[!] 4. Удалить аккаунт (Dell)");
	strcat(STRING_GLOBAL, "\n\n{50c878}[!] Помните.");
	strcat(STRING_GLOBAL, "\n[!] Мы всегда готовы помочь если вы соблюдаете правила.");
	strcat(STRING_GLOBAL, "\n[!] Данные правила установлены для всех игроков проекта.");
	strcat(STRING_GLOBAL, "\n\n{ffffff}[!] Если Вам долго не отвечают, подождите пару минут, вы не один на сервере.");
	strcat(STRING_GLOBAL, "\n[!] Спасибо за понимание, c уважением администрация сервера.");
	ShowPlayerDialogEx(playerid, 13212, DIALOG_STYLE_INPUT, "{ebec86}>> Репорт", STRING_GLOBAL, "Отправить", "Назад");
	return 1;
}

stock ShowAutoSalonMenu(playerid)
{
    for(new i = 0; i < 6; i++) TextDrawShowForPlayer(playerid, AutoSalon_Fon[i]);
	for(new i = 0; i < 3; i++) TextDrawShowForPlayer(playerid, AutoSalon_Button[i]);
    for(new i = 0; i < 2; i++) TextDrawShowForPlayer(playerid, AutoSalon_ButtonColor[i]);
    for(new i = 0; i < 48; i++) TextDrawShowForPlayer(playerid, AutoSalon_Color[i]);
	for(new i = 0; i < 3; i++) PlayerTextDrawShow(playerid,AutoSalon_Stats[playerid][i]);
	SelectTextDraw(playerid,0xddddddff);
	return 1;
}

stock HideAutoSalonMenu(playerid)
{
    for(new i = 0; i < 6; i++) TextDrawHideForPlayer(playerid, AutoSalon_Fon[i]);
	for(new i = 0; i < 3; i++) TextDrawHideForPlayer(playerid, AutoSalon_Button[i]);
    for(new i = 0; i < 2; i++) TextDrawHideForPlayer(playerid, AutoSalon_ButtonColor[i]);
    for(new i = 0; i < 48; i++) TextDrawHideForPlayer(playerid, AutoSalon_Color[i]);
	for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid,AutoSalon_Stats[playerid][i]);
	CancelSelectTextDraw(playerid);
	return 1;
}

stock Bl_Add(playerid, accuser, reason[])
{
	new escstring[36], query[256], src[256];
	new currtime = gettime(), fracid = p_info[accuser][pMember];
	mysql_escape_string(reason, escstring);
	Bl_Info[playerid][Bl_onFrac][fracid] = 1;
	Bl_Info[playerid][Bl_Kills][fracid] = 0;
	format(query, sizeof query, "INSERT INTO `blacklist` (`f_id`,`accused`,`date`,`accuser`,`reason`,`lastvisit`) VALUES (");
	scf(query, src, "'%i','%i','%i',", fracid, p_info[playerid][pID], currtime);
	scf(query, src, "'%i','%s','%i')", p_info[accuser][pID], escstring, currtime+DAY*15);
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

stock Bl_Remove(playerid, fracid)
{
	new name[24], query[256];
	GetPlayerName(playerid, name, 24);
	format(query, sizeof query, "DELETE FROM `blacklist` WHERE `f_id`='%i' AND `accused`='%i'", fracid, p_info[playerid][pID]);
	Bl_Info[playerid][Bl_onFrac][fracid] = 0;
	Bl_Info[playerid][Bl_Kills][fracid] = 0;
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

stock Bl_Update(playerid, fracid)
{
	new query[256];
	format(query, sizeof query, "UPDATE `blacklist` SET `mink`='%i' WHERE `accused`='%i' AND `f_id`='%i'",
	Bl_Info[playerid][Bl_Kills][fracid], p_info[playerid][pID], fracid);
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

forward Bl_Check(playerid);
public Bl_Check(playerid)
{
	new rows = cache_get_row_count();
	if(rows)
	{
		new name[24], temp[128], query[256], src[256];
		GetPlayerName(playerid, name, 24);
		format(temp, sizeof temp, "[BLACK LIST]: Вы находитесь в черном списке ");

		for(new i, fracid, kills; i < rows; i++)
		{
			sscanf(query, "p<|>ii", fracid, kills);
		   cache_get_int(i, 0, fracid);
		   cache_get_int(i, 1, kills);
			Bl_Info[playerid][Bl_onFrac][fracid] = 1;
			Bl_Info[playerid][Bl_Kills][fracid] = kills;
			format(query, sizeof query, "[BLACK LIST]: Запахло дичью, в штате был(а) замечен(а) %s", name);
			SendFMes(fracid, COLOR_LIGHTBLUE, query);
			scf(temp, src, "%s, ", Fractions[fracid][fractionName]);
		}

		temp[strlen(temp)-2] = '\0';
		SCM(playerid, COLOR_LIGHTBLUE, temp);

		format(query, sizeof query, "UPDATE `blacklist` SET `lastvisit` = '%i' WHERE `accused` = '%i'", (gettime()+DAY*14), p_info[playerid][pID]);
		mysql_tquery(dbHandle, query, "", "");
	}
}

stock Bl_Clear()
{
	new query[256];
	format(query, sizeof query, "DELETE FROM `blacklist` WHERE `lastvisit` <= '%i'", gettime());
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

forward Bl_Show(playerid, fracid);
public Bl_Show(playerid, fracid)
{
	SCM(playerid, COLOR_WHITE, "______________ Черный Список ______________");

	new accuser[24], _date[24], reason[36], temp[256], query[256], plname[32];
	new rows = cache_get_row_count();
	if(rows)
	{
		for(new i; i < rows; i++)
		{
			cache_get_str(i, 0, "u", query[0]);
		   cache_get_int(i, 1, query[1]);
			cache_get_row(i, 2, _date);
			cache_get_row(i, 3, accuser);
			cache_get_row(i, 4, reason);

			if(IsPlayerConnected(query[0]))
			{
				GetPlayerName(query[0], plname, 24);
				format(temp, sizeof temp, "%s[ID: %i] | Статус: %i - %i | Дата: %s | Занес: %s | Причина: %s", plname, query[0], query[1], f_info [ fracid ] [ f_bl_config ] [ 2 ], _date, accuser, reason);
				SCM(playerid, COLOR_LIGHTBLUE, temp);
			}
		}
	}
	return 1;
}

stock ValidState(playerid)
{
	switch(GetPlayerState(playerid))
	{
		case 1..3, 7, 8: return 1;
	}
	return 0;
}

stock IsValidState(playerid)
{
	return (1 <= GetPlayerState(playerid) <= 3);
}

stock Bl_Init(playerid)
{
	for(new i; i < 26; i++)
	{
		Bl_Info[playerid][Bl_onFrac][i] = 0;
		Bl_Info[playerid][Bl_Kills][i] = 0;
	}
	Bl_Info[playerid][Bl_isKilled] = false;
	Bl_Info[playerid][Bl_Observe] = INVALID_PLAYER_ID;
	Bl_Info[playerid][Bl_Finder] = INVALID_PLAYER_ID;
}

forward onFind(playerid);
public onFind(playerid)
{
	new temp[10];
    if(Find[playerid][FindTime] > 0)
	{
	    FindStep { playerid }++;
	    Find[playerid][FindTime] -= 1;
		format(temp, sizeof temp, "~r~%i", Find[playerid][FindTime]);
		TextDrawSetString(Find[playerid][FindTD], temp), TextDrawShowForPlayer(playerid, Find[playerid][FindTD]);
		
		new Float:td_x = FindStep { playerid } * 11.9;
		PlayerTextDrawTextSize(playerid, BoxPlayer [ playerid ] [ 2 ], td_x, 10.500000 ) ;
	   	PlayerTextDrawHide(playerid, BoxPlayer [ playerid ] [ 2 ]);
	   	PlayerTextDrawShow(playerid, BoxPlayer [ playerid ] [ 2 ]);
	}
	else
	{
	    DeletePVar(playerid, "id_find");
	    TextDrawHideForPlayer(playerid, Find[playerid][FindTD]);
	    TextDrawDestroy(Find[playerid][FindTD]);
		DisablePlayerCheckpoint(playerid);
		KillTimer(Find[playerid][FindTimer]);
		
		box_td_status(playerid, false);
	}
	return 1;
}

stock CreateZahvatTD(&Text:txdw)
{
	txdw = TextDrawCreate(320.000000, 100.000000, "~r~10");
	TextDrawAlignment(txdw, 2);
	TextDrawBackgroundColor(txdw, 255);
	TextDrawFont(txdw, 3);
	TextDrawLetterSize(txdw, 0.889998, 3.299998);
	TextDrawColor(txdw, -1);
	TextDrawSetOutline(txdw, 1);
	TextDrawSetProportional(txdw, 0);
	return 1;
}

CMD:gotome(playerid,params[])
{
	if(IsAMafia(playerid))
	{
	    if(GetPVarInt(playerid,"walk_goto_me_player1"))
		{
			walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player1") - 1] = 0;
			ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player1") - 1);
			DeletePVar(playerid,"walk_goto_me_player1");
			SendInf(playerid, "Вы отключили ходьбу игрока за вами");
			return 1;
		}
		if(sscanf(params,"i",params[0])) return SendInf(playerid, "/gotome [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Данного игрока нету в игре");
		if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0])) return SendErr(playerid, "Игрок должен находится на улице, и вы тоже");
		if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");
		if(!PlayerTied[params[0]]) return SendErr(playerid, "Игрок не связан");

		SetPVarInt(playerid,"walk_goto_me_player1",params[0] + 1);
		walk_goto_me[params[0]]=playerid+1;

		SendInf(playerid, "Вы повели игрока за собой");
		SendInf(playerid, "Используйте /gotome еще раз чтобы отключить ходьбу игрока за Вами");

		MeAction(playerid,"взял(а) человека за руку");
		MeAction(playerid,"повёл(а) человека за собой");
	}
	if(IsACop(playerid))
	{
		if(GetPVarInt(playerid,"walk_goto_me_player"))
		{
			walk_goto_me[GetPVarInt(playerid,"walk_goto_me_player") - 1] = 0;
			ClearAnimations(GetPVarInt(playerid,"walk_goto_me_player") - 1);
			DeletePVar(playerid,"walk_goto_me_player");
			SendInf(playerid, "Вы отключили ходьбу игрока за вами");
			return 1;
		}
		if(sscanf(params,"i",params[0])) return SendInf(playerid, "/gotome [id игрока]");
		if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Данного игрока нету в игре");
		if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0])) return SendErr(playerid, "Игрок должен находится на улице, и вы тоже");
		if(!IsPlayerStream(10.0, playerid, params[0])) return SendErr(playerid, "Игрок не рядом с вами");
		if(IsACop(params[0])) return SendErr(playerid, "Игрок полицейский");
		if(!pCuff[params[0]][pCuffee]) return SendErr(playerid, "Игрок не в наручниках");

		SetPVarInt(playerid,"walk_goto_me_player",params[0] + 1);
		walk_goto_me[params[0]]=playerid+1;

		SendInf(playerid, "Вы повели игрока за собой");
		SendInf(playerid, "Используйте /gotome еще раз чтобы отключить ходьбу игрока за Вами");

		MeAction(playerid,"взял(а) преступника за руку");
		MeAction(playerid,"повёл(а) преступника за собой");
	}
	return 1;
}

stock Float:GetAngleToPoint(Float:X, Float:Y, Float:A, Float:x, Float:y)
{
	new Float:angle = 185.0 - atan2(X-x, Y-y);
	A -= (angle - 5.0);
	return A;
}

forward GetPlayerAngleToPoint(playerid, Float:x, Float:y);
stock GetPlayerAngleToPoint(playerid, Float:x, Float:y)
{
	new Float:ix, Float:iy, Float:iz, Float:a;
	GetPlayerFacingAngle(playerid, a);
	GetPlayerPos(playerid, ix, iy, iz);
	return floatround(GetAngleToPoint(ix, iy, a, x, y));
}

stock Float:GetPlayerAngleToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	return float(GetPlayerAngleToPoint(playerid, x, y));
}

stock GetPlayerFaceToPlayer(playerid, targetid, Float:facing)
{
	new Float:radius = GetPlayerAngleToPlayer(playerid, targetid);
	return (radius > -facing && radius < facing);
}

stock TurnPlayerFaceToPlayer(playerid, facingtoid)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(facingtoid, x, y, z);
	SetPlayerFaceToPoint(playerid, x, y);
	return 1;
}

stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y)
{
	new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
	return 1;
}

stock ShiftCords(&Float:x, &Float:y,Float:a, Float:distance)
{
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return 1;
}

stock GoPlayerAnimation(playerid, Float:X, Float:Y, Float:Z)
{
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z))
	{
		ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
		return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z))
	{
		ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
		return 2;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z))
	{
		ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
		return 3;
	}
	ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);
	return 4;
}

IsPlayerStream(Float:radi, playerid, targetid)
{
	if(!IsPlayerConnected(targetid)) return 0;
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(targetid,X,Y,Z);
	return PlayerToPoint(radi,playerid,X,Y,Z);
}

IsVehicleAir(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 498, 563, 447, 469: return 1;
	}
	return 0;
}

IsVehicleMoto(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 498, 563, 447, 469: return 1;
	}
	return 0;
}

IsVehicleBoats(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 498, 563, 447, 469: return 1;
	}
	return 0;
}

IsVehicleBikes(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 498, 563, 447, 469: return 1;
	}
	return 0;
}

cmd:healup(playerid, params[])
{
 	for(new i = TOTALBIZZ; i > 0; i --)
	{
		if(PlayerToPoint(15.0, playerid, BizzInfo[i][bExitx],BizzInfo[i][bExity],BizzInfo[i][bExitz]) && GetPlayerVirtualWorld(playerid) == BizzInfo[i][bVirtual])
		{
			if(BizzInfo[i][bHeal] == 0) return SendErr(playerid, "В бизнесе нету аптечек");
	
			GiveMoney(playerid, -150, "/healup");
			if(BizzInfo[i][bProduct] > 0)
			{
				BizzInfo[i][bMoneyHour] += 150;
				BizzPay[i] += 150;
				MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
			}

			new Float:health;
			GetPlayerHealth(playerid, health);
			SetHealth(playerid, health+20);
			if(health > 100) SetHealth(playerid, 100.0);
			SetPlayerChatBubble(playerid,"перебинтовал рану",COLOR_YELLOW,20.0,10000);
			ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
		}
	}
	for(new i = TOTALHOUSE; i > 0; i --)
	{
		if(PlayerToPoint(15.0, playerid, HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]) && GetPlayerVirtualWorld(playerid) == HouseInfo[i][hVirtual])
		{
		    if(HouseInfo[i][hUpdate] < 2) return SendErr(playerid, "В доме не установлена аптечка");
			if(HouseInfo[i][hHeal] == 0) return SendErr(playerid, "В доме закончились аптечки");

			new Float:health;
			GetPlayerHealth(playerid, health);
			SetHealth(playerid, health+20);
			if(health > 100) SetHealth(playerid, 100.0);
			SetPlayerChatBubble(playerid, "перебинтовал рану", COLOR_YELLOW, 20.0, 10000);
			ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);
		}
	}
	return 1;
}

cmd:getbizstats(playerid, params[])
{
	new full = 0;
	for(new i = TOTALBIZZ; i > 0; i --)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, BizzInfo[i][bEntrx],BizzInfo[i][bEntry],BizzInfo[i][bEntrz]))
		{
			BizzStats(playerid, i);
			full++;
		}
	}
	if(full == 0) SendErr(playerid, "Вы должны находиться рядом с бизнесом");
	return 1;
}

stock BizzStats(playerid, idx)
{
	new string[128];
	if(!strcmp(BizzInfo[idx][bOwner],"None",true))
	{
		SetPVarInt(playerid, "PlayerBizz", idx);
		format(string,sizeof(string),"{FFFFFF}Название: {f0e86b}%s{FFFFFF} (ID: %d)\n\nЦена бизнеса: {f0e86b}%i{FFFFFF} рублей", BizzInfo[idx][bName], idx, BizzInfo[idx][bPrice]);
		if(BizzInfo[idx][bType] != 2 && BizzInfo[idx][bType] != 7) return ShowPlayerDialogEx(playerid, D_NULL, 0, "Информация о бизнесе", string, "Закрыть", "");
	}
	else
	{
		SetPVarInt(playerid, "PlayerBizz", idx);
		new status_bizz_owner[15 + 1] = "{AA3333}Оффлайн";
		new status_bizz_work[19 + 1] = "{AA3333}Не работает";
		new status_bizz_legacy[32 + 1] = "{AA3333}Бизнес не имеет лицензию";

		if(!BizzInfo[idx][bLock]) status_bizz_work = "{f0e86b}Работает";
		if(BizzInfo[idx][bLic]) status_bizz_legacy = "{f0e86b}Бизнес работает легально";

		foreach(new i:Player)
		{
			if(!strcmp(BizzInfo[idx][bOwner], p_info[i][pName], true))
			{
				status_bizz_owner = "{f0e86b}Онлайн";
				break;
			}
		}
		STRING_GLOBAL = "";
		format(STRING_GLOBAL, 2000, "{fcfcfc}Название: %s (ID: %d)\nВладелец: %s %s{fcfcfc}\n\nВсего заработано: %d рублей\nВ этом часу заработано: %d рублей\nПосетителей сегодня: %d\n\nПродуктов: %d из %d\nПродуктов заказано: %d\n\nСостояние: %s{fcfcfc}\nЛицензия: %s{fcfcfc}\nПод контролем: %s\nБаланс счёта для оплаты электроэнергии: %d рублей\nНалог за электроэнергию: %d рублей в час\n\nЧасов закрыт: %d из 12\nЧасов без продуктов: %d из 24",
		BizzInfo[idx][bName],idx,BizzInfo[idx][bOwner],status_bizz_owner,BizzInfo[idx][bMoney],BizzInfo[idx][bMoneyHour],BizzInfo[idx][bVisitors],BizzInfo[idx][bProduct],BizzInfo[idx][bProdMax],BizzInfo[idx][bProdOrder],status_bizz_work,status_bizz_legacy,
		(BizzInfo[idx][bMafia] == 7) ? ("Южная ОПГ") : (BizzInfo[idx][bMafia] == 8) ? ("Арзамасская ОПГ") : (BizzInfo[idx][bMafia] == 15) ? ("Лыткаринская ОПГ") : (BizzInfo[idx][bMafia] == 16) ? ("Батыревская ОПГ") : ("Государство"),BizzInfo[idx][bMoney],BizzInfo[idx][bPrice] / 1000,BizzInfo[idx][bLockTime],BizzInfo[idx][bHourProd]);
		ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация о бизнесе", STRING_GLOBAL, "Закрыть", "");
	}
	return 1;
}

CMD:lmenu(playerid)
{
	if(p_info[playerid][pAdmin] > 7)
	{
	    new Member = p_info[playerid][pMember] - 1;
	    STRING_GLOBAL = "{FFFFFF}Респавн транспорта\n";
		format(STRING_GLOBAL,1500,"%sМожет принимать: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionInvite]),gFractionRank[Member][fractionInvite]);
		format(STRING_GLOBAL,1500,"%sМожет увольнять: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionUnInvite]),gFractionRank[Member][fractionUnInvite]);
		format(STRING_GLOBAL,1500,"%sМожет повышать: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionGiverank]),gFractionRank[Member][fractionGiverank]);
		if(IsAMafia(playerid))
		{
			format(STRING_GLOBAL,1500,"%sДоступ к общаку: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionObwyak]),gFractionRank[Member][fractionObwyak]);
			format(STRING_GLOBAL,1500,"%sДоступ к захвату: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionCapture]),gFractionRank[Member][fractionCapture]);
		}
        else
        {
            format(STRING_GLOBAL,1500,"%sПодача новостей: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionObwyak]),gFractionRank[Member][fractionObwyak]);
        }
		strcat(STRING_GLOBAL, "Управление рангами\n");
		strcat(STRING_GLOBAL, "Управление лидерами\n");
		strcat(STRING_GLOBAL, "Управление автомобилем\n");
		strcat(STRING_GLOBAL, "Изменить место спавна\n");
		strcat(STRING_GLOBAL, "Изменить место склада\n");
		strcat(STRING_GLOBAL, "Изменить место разгрузки\n");
		strcat(STRING_GLOBAL, "Управление чёрным списком\n");
		strcat(STRING_GLOBAL, "Установить сообщение фракции\n");
		strcat(STRING_GLOBAL, "Управление заработной платой\n");
		ShowPlayerDialogEx(playerid,dLeaderMenu,DIALOG_STYLE_LIST, "{ebec86}>> Панель лидера", STRING_GLOBAL, "Выбрать", "Закрыть");
		return 1;
	}
	else if(p_info[playerid][pLeader] > 0)
	{
	    if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionGiverank])
		{
			format(STRING_GLOBAL,128,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionGiverank]);
			SendErr(playerid,STRING_GLOBAL);
			return 1;
		}

		new Member = p_info[playerid][pMember] - 1;

		STRING_GLOBAL = "{FFFFFF}Респавн транспорта\n";
		format(STRING_GLOBAL,1500,"%sМожет принимать: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionInvite]),gFractionRank[Member][fractionInvite]);
		format(STRING_GLOBAL,1500,"%sМожет увольнять: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionUnInvite]),gFractionRank[Member][fractionUnInvite]);
		format(STRING_GLOBAL,1500,"%sМожет повышать: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionGiverank]),gFractionRank[Member][fractionGiverank]);
        if(IsAMafia(playerid))
		{
			format(STRING_GLOBAL,1500,"%sДоступ к общаку: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionObwyak]),gFractionRank[Member][fractionObwyak]);
			format(STRING_GLOBAL,1500,"%sДоступ к захвату: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionCapture]),gFractionRank[Member][fractionCapture]);
		}
        else
        {
            format(STRING_GLOBAL,1500,"%sПодача новостей: {ebec86}%s (%i){FFFFFF}\n",STRING_GLOBAL, GetRank(p_info[playerid][pMember],gFractionRank[Member][fractionObwyak]),gFractionRank[Member][fractionObwyak]);
        }
		strcat(STRING_GLOBAL, "Управление рангами\n");
		strcat(STRING_GLOBAL, "Управление лидерами\n");
		if(IsAMafia(playerid))
		{
			strcat(STRING_GLOBAL, "Управление автомобилем\n");
			strcat(STRING_GLOBAL, "Изменить место спавна\n");
			strcat(STRING_GLOBAL, "Изменить место склада\n");
			strcat(STRING_GLOBAL, "Изменить место разгрузки\n");
			strcat(STRING_GLOBAL, "Управление чёрным списком\n");
			strcat(STRING_GLOBAL, "Установить сообщение фракции\n");
			strcat(STRING_GLOBAL, "Управление заработной платой\n");
		}
		ShowPlayerDialogEx(playerid,dLeaderMenu,DIALOG_STYLE_LIST, "{ebec86}>> Панель лидера", STRING_GLOBAL, "Выбрать", "Закрыть");
		return 1;
	}
	else
	{
	    if(p_info[playerid][pMember] > 0)
		{
		    if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionGiverank])
			{
				format(STRING_GLOBAL,128,"Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionGiverank]);
				SendErr(playerid,STRING_GLOBAL);
				return 1;
			}

			STRING_GLOBAL = "{FFFFFF}Респавн транспорта\n";
			ShowPlayerDialogEx(playerid,dLeaderMenu,DIALOG_STYLE_LIST, "{ebec86}>> Панель лидера", STRING_GLOBAL, "Выбрать", "Закрыть");
			return 1;
		}
	}
	return 1;
}

forward OnFracLoad();
public OnFracLoad()
{
    new time = GetTickCount();
	for(new i=0; i < 26;i++)
	{
		new load_data[20];
		cache_get_row(0,i,load_data,dbHandle,20);
		sscanf(load_data,"p<,>iiiii",gFractionRank[i][0],gFractionRank[i][1],gFractionRank[i][2],gFractionRank[i][3],gFractionRank[i][4]);
		UpdateStoreGang(i);
	}
	printf("[Фракционные настройки]: Потрачено: <%i ms>.", GetTickCount() - time);
	return 1;
}

forward OnFracRankLoad();
public OnFracRankLoad()
{
	new rows, fields, time = GetTickCount();
	cache_get_data(rows, fields, dbHandle);

	if(!rows) return print("Ранги не загружены");
	for(new r = 0; r < rows; r++)
	{
		new fraction = cache_get_row_int(r,0);
		new rang = cache_get_row_int(r,1);
		cache_get_row(r,2,fRankName[fraction][rang],dbHandle,40);
	}
	printf("[Фракционные ранги]: <%i>. Потрачено: <%i ms>.", rows, GetTickCount() - time);
	return 1;
}

forward fraction_loading ( );
public fraction_loading ( )
{
	new rows, fields, sql_string [ 128 ], time = GetTickCount();
	cache_get_data ( rows, fields ) ;
	{
		for ( new i = 0; i < rows; i++ )
		{
			f_info [ i ] [ f_id ] = cache_get_field_content_int ( i, "f_id", dbHandle ) ;
			cache_get_field_content ( i, "f_name", f_info [ i ] [ f_name ], dbHandle, 50 );
			cache_get_field_content ( i, "f_message", f_info [ i ] [ f_message ], dbHandle, 32 );

			cache_get_field_content ( i, "f_spawn", sql_string ), sscanf ( sql_string, "p<,>ffffdd",
			f_info [ i ] [ f_spawn ] [ 0 ], f_info [ i ] [ f_spawn ] [ 1 ], f_info [ i ] [ f_spawn ] [ 2 ], f_info [ i ] [ f_spawn ] [ 3 ],
			f_info [ i ] [ f_spawn_int ], f_info [ i ] [ f_spawn_virt ] ) ;

			cache_get_field_content ( i, "f_put", sql_string ), sscanf ( sql_string, "p<,>fff",
			frac_place_put [ i ] [ 0 ], frac_place_put [ i ] [ 1 ], frac_place_put [ i ] [ 2 ] ) ;

			cache_get_field_content ( i, "f_bank", sql_string ), sscanf ( sql_string, "p<,>fffdd",
			f_info [ i ] [ f_bank ] [ 0 ], f_info [ i ] [ f_bank ] [ 1 ], f_info [ i ] [ f_bank ] [ 2 ],
			f_info [ i ] [ f_bank_int ], f_info [ i ] [ f_bank_virt ] ) ;

			cache_get_field_content ( i, "f_bl_config", sql_string ), sscanf ( sql_string, "p<,>ddd",
			f_info [ i ] [ f_bl_config ] [ 0 ], f_info [ i ] [ f_bl_config ] [ 1 ], f_info [ i ] [ f_bl_config ] [ 2 ] ) ;
			
			cache_get_field_content ( i , "f_dip", sql_string ), sscanf ( sql_string, "p<|>a<i>[28]", dip_status [ i ]  ) ;

			cache_get_field_content ( i, "f_l_config", sql_string ), sscanf ( sql_string, "p<,>ddddd",
			f_info [ i ] [ f_l_config ] [ 0 ], f_info [ i ] [ f_l_config ] [ 1 ], f_info [ i ] [ f_l_config ] [ 2 ], f_info [ i ] [ f_l_config ] [ 3 ], f_info [ i ] [ f_l_config ] [ 4 ] ) ;

			f_info [ i ] [ f_respect ] = cache_get_field_content_int ( i, "f_respect", dbHandle ) ;
			
			cache_get_field_content ( i, "f_rang_zp", sql_string ), sscanf ( sql_string, "p<,>ddddddddddd",
			f_info [ i ] [ f_rang_zp ] [ 0 ], f_info [ i ] [ f_rang_zp ] [ 1 ], f_info [ i ] [ f_rang_zp ] [ 2 ], f_info [ i ] [ f_rang_zp ] [ 3 ], f_info [ i ] [ f_rang_zp ] [ 4 ],
			f_info [ i ] [ f_rang_zp ] [ 5 ], f_info [ i ] [ f_rang_zp ] [ 6 ], f_info [ i ] [ f_rang_zp ] [ 7 ], f_info [ i ] [ f_rang_zp ] [ 8 ], f_info [ i ] [ f_rang_zp ] [ 9 ],
			f_info [ i ] [ f_rang_zp ] [ 10 ] ) ;
			
			f_info [ i ] [ f_status_zp ] = cache_get_field_content_int ( i, "f_status_zp", dbHandle ) ;

			fraction_amount ++ ;
			
			frac_place_put_areaid_text [ i ] = CreateDynamic3DTextLabel("{f0f0f0}Место для разгрузки\n[ "cBLUE"металла и патронов{FFFFFF} ]", -1, frac_place_put[ i ][0],frac_place_put[ i ][1],frac_place_put[ i ][2]+0.8, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
			frac_place_put_areaid_cp [ i ] = CreateDynamicCP(frac_place_put[ i ] [ 0 ],frac_place_put[ i ] [ 1 ],frac_place_put[ i ] [ 2 ], 1.5, -1, -1, -1, 30.0);
			frac_place_put_areaid[ i ] = CreateDynamicSphere ( frac_place_put[ i ] [ 0 ], frac_place_put[ i ] [ 1 ], frac_place_put[ i ] [ 2 ], 1.0,-1,-1,-1);

			if (  i == 7 || i == 8 || i == 15 || i == 16 )
			{
				frac_areaid [ i ] = CreateDynamicSphere ( f_info [ i ] [ f_bank ] [ 0 ], f_info [ i ] [ f_bank ] [ 1 ], f_info [ i ] [ f_bank ] [ 2 ],1.0, f_info [ i ] [ f_bank_virt ] ) ;
				frac_areaid_cp [ i ] = CreateDynamicCP ( f_info [ i ] [ f_bank ] [ 0 ], f_info [ i ] [ f_bank ] [ 1 ], f_info [ i ] [ f_bank ] [ 2 ],1.0, f_info [ i ] [ f_bank_virt ] ) ;
				frac_text [ i ] = CreateDynamic3DTextLabel("___",-1, f_info [ i ] [ f_bank ] [ 0 ], f_info [ i ] [ f_bank ] [ 1 ], f_info [ i ] [ f_bank ] [ 2 ] + 1.5, 7.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, f_info [ i ] [ f_bank_virt ] ) ;
				UpdateStoreGang (i) ;
			}
		}
	}

	printf("[Организации]: <%i>. Потрачено: <%i ms>.", fraction_amount, GetTickCount() - time);
	return 1;
}

stock UpdateStoreGang(fracid)
{
	if(fracid != 7 && fracid != 8 && fracid != 15 && fracid != 16) return 1;
	if(fracid == 7)
	{
		if(IsValidDynamic3DTextLabel(frac_text[fracid]))
		{
			STRING_GLOBAL="";
			format(STRING_GLOBAL,500,""nwhite"Количество бизнесов: "newgreen"%d\n\n\n\n{%06x}Склад \n%s\n\n\n"nwhite"Наркотики: "neworange"%d из 20000 г\n"nwhite"Патроны: "neworange"%d из 25000 шт\n"nwhite"Металл: "neworange"%d из 30000 кг\n"nwhite"Деньги: "neworange"%d рублей",
			MafiaTotalBizz[fracid],Fractions[fracid][fractionColor] >>> 8, Fractions[fracid][fractionName],frac_drugs[fracid],frac_patron[fracid],frac_metall[fracid],frac_money[fracid]);
			UpdateDynamic3DTextLabelText(frac_text[fracid], -1, STRING_GLOBAL);
		}
	}
	if(fracid == 8)
	{
		if(IsValidDynamic3DTextLabel(frac_text[fracid]))
		{
			STRING_GLOBAL="";
			format(STRING_GLOBAL,500,""nwhite"Количество бизнесов: "newgreen"%d\n\n\n\n{%06x}Склад \n%s\n\n\n"nwhite"Наркотики: "neworange"%d из 20000 г\n"nwhite"Патроны: "neworange"%d из 25000 шт\n"nwhite"Металл: "neworange"%d из 30000 кг\n"nwhite"Деньги: "neworange"%d рублей",
			MafiaTotalBizz[fracid],Fractions[fracid][fractionColor] >>> 8, Fractions[fracid][fractionName],frac_drugs[fracid],frac_patron[fracid],frac_metall[fracid],frac_money[fracid]);
			UpdateDynamic3DTextLabelText(frac_text[fracid], -1, STRING_GLOBAL);
		}
	}
	if(fracid == 15)
	{
	    if(IsValidDynamic3DTextLabel(frac_text[fracid]))
		{
			STRING_GLOBAL="";
			format(STRING_GLOBAL,600,""nwhite"Количество бизнесов: "newgreen"%d\n\n\n\n{%06x}Склад \n%s\n\n\n"nwhite"Наркотики: "neworange"%d из 20000 г\n"nwhite"Патроны: "neworange"%d из 25000 шт\n"nwhite"Металл: "neworange"%d из 30000 кг\n"nwhite"Деньги: "neworange"%d рублей",
			MafiaTotalBizz[fracid], Fractions[fracid][fractionColor] >>> 8, Fractions[fracid][fractionName], frac_drugs[fracid], frac_patron[fracid], frac_metall[fracid], frac_money[fracid], frac_blanks[fracid]);
			UpdateDynamic3DTextLabelText(frac_text[fracid], -1, STRING_GLOBAL);
		}
	}
	if(fracid == 16)
	{
	    if(IsValidDynamic3DTextLabel(frac_text[fracid]))
		{
			STRING_GLOBAL="";
			format(STRING_GLOBAL,600,""nwhite"Количество бизнесов: "newgreen"%d\n\n\n\n{%06x}Склад \n%s\n\n\n"nwhite"Наркотики: "neworange"%d из 20000 г\n"nwhite"Патроны: "neworange"%d из 25000 шт\n"nwhite"Металл: "neworange"%d из 30000 кг\n"nwhite"Деньги: "neworange"%d рублей",
			MafiaTotalBizz[fracid], Fractions[fracid][fractionColor] >>> 8, Fractions[fracid][fractionName], frac_drugs[fracid], frac_patron[fracid], frac_metall[fracid], frac_money[fracid], frac_blanks[fracid]);
			UpdateDynamic3DTextLabelText(frac_text[fracid], -1, STRING_GLOBAL);
		}
	}
	return 1;
}

GangMenu(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
	if(p_info[playerid][pRank] < gFractionRank[p_info[playerid][pMember]-1][fractionObwyak])
	{
		format(STRING_GLOBAL, 128, "Доступно с %i ранга", gFractionRank[p_info[playerid][pMember]-1][fractionObwyak]);
		SendErr(playerid, STRING_GLOBAL);
		return 1;
	}
	ShowPlayerDialogEx(playerid,7171,DIALOG_STYLE_LIST,GANG_TEXT,"Далее","Закрыть");
	return 1;
}

stock UpdateFractionStore(fracid)
{
	new scat[512];
	format(scat, 512, "UPDATE `fractions_store` SET `frac_patron` = '%d', `frac_metall` = '%d', `frac_money` = '%d', `frac_drugs` = '%d' WHERE `id` = '%d'  LIMIT 1", frac_patron[fracid],frac_metall[fracid],frac_money[fracid],frac_drugs[fracid],fracid);
	mysql_tquery(dbHandle,scat,"","");
	return 1;
}

SaveFrac(playerid)
{
	STRING_GLOBAL="";
	format(STRING_GLOBAL,512,"UPDATE `fraction_settings` SET `FractionRank%i` = '%i,%i,%i,%i,%i'",p_info[playerid][pMember],gFractionRank[p_info[playerid][pMember]-1][0],gFractionRank[p_info[playerid][pMember]-1][1],gFractionRank[p_info[playerid][pMember]-1][2],gFractionRank[p_info[playerid][pMember]-1][3],gFractionRank[p_info[playerid][pMember]-1][4]);
	mysql_tquery(dbHandle,STRING_GLOBAL,"","");
}

forward OnLoadFractionsStore();
public OnLoadFractionsStore()
{
	new rows, fields, time = GetTickCount();
	cache_get_data(rows, fields);

	for(new f = 0; f < rows; f++)
	{
		frac_patron[f]=cache_get_field_content_int(f,"frac_patron",dbHandle);
		frac_metall[f]=cache_get_field_content_int(f,"frac_metall",dbHandle);
		frac_money[f]=cache_get_field_content_int(f,"frac_money",dbHandle);
		frac_drugs[f]=cache_get_field_content_int(f,"frac_drugs",dbHandle);
	}

	printf("[Фракционные склады]: <%i>. Потрачено: <%i ms>.", rows, GetTickCount() - time);
	return 1;
}

CMD:setarmy(playerid)
{
	if(p_info[playerid][pAdmin] > 7)
	{
		SendInf(playerid, "Вы пополнили склад армии");
	    gArmyWarehouse[0] += 300000;
	    gArmyWarehouse[1] += 300000;
	    SaveWarehouse();
	}
	return 1;
}

@load_online_today(playerid);
@load_online_today(playerid)
{
	new rows, fields;
    cache_get_data(rows, fields);
    if(!rows)
	{
		gOnlinePlayer[playerid][0] = 0;
		gOnlinePlayerAFK[playerid][0] = 0;
	}
	else
	{
		gOnlinePlayer[playerid][0] = cache_get_row_int(0,3);
		gOnlinePlayerAFK[playerid][0] = cache_get_row_int(0,4);
	}
    return 1;
}

@load_online_yesterday(playerid);
@load_online_yesterday(playerid)
{
	new rows, fields;
    cache_get_data(rows, fields);
	if(!rows)
	{
		gOnlinePlayer[playerid][1] = 0;
		gOnlinePlayerAFK[playerid][1] = 0;
	}
	else
	{
  		gOnlinePlayer[playerid][1] = cache_get_row_int(0,3);
		gOnlinePlayerAFK[playerid][1] = cache_get_row_int(0,4);
	}
    return 1;
}

stock ConvertsCmdTime(number)
{
	new hours = 0, mins = 0, string[30];
	hours = number / 3600;
	mins = (number - hours * 3600) / 60;
	format(string, 30, "%d ч %d мин", hours, mins);
	return string;
}

forward DrumMove(drumid);
public DrumMove(drumid)
{
	new Value = random(35)+1;
	new PlayerID, BusinessMoney;
	new CroupierID = CasinoGamesInfo[drumid][CG_CroupierID];

	if(DrumRotation[drumid] <= 1000)
	{
		DrumRotation[drumid]++;

		for(new A; A != 5; A++)
		{
		    PlayerID = CasinoGamesInfo[drumid][CG_PlayerID][A];
			if(PlayerID == -1) continue;
			if(!PlayerToPoint(5.0, PlayerID, 1601.9708, 983.9113, 1820.0557) && !PlayerToPoint(5.0, PlayerID, 1597.6998, 983.8762, 1820.0557) &&
				!PlayerToPoint(5.0, PlayerID, 1134.71582, -4.39510, 1000.57813) && !PlayerToPoint(5.0, PlayerID, 1125.13574, -4.39509, 1000.57813)) continue;
			format(STRING_GLOBAL, 32, "%d", Value);
			GameTextForPlayer(PlayerID, STRING_GLOBAL, 1500, 6);
		}
	}
	else
	{
		KillTimer(DrumTimer[drumid]);
		DrumRotation[drumid] = 0;
		format(STRING_GLOBAL, 600, "Выпало {f0e86b}%d", Value);
		SendClientMessage(CroupierID, COLOR_WHITE, STRING_GLOBAL);
		BusinessMoney = 0;
		for(new A; A != 5; A++)
		{
			PlayerID = CasinoGamesInfo[drumid][CG_PlayerID][A];
			if(PlayerID == -1) continue;
			if(!PlayerToPoint(5.0, PlayerID, 1601.9708, 983.9113, 1820.0557) && !PlayerToPoint(5.0, PlayerID, 1597.6998, 983.8762, 1820.0557) &&
				!PlayerToPoint(5.0, PlayerID, 1134.71582, -4.39510, 1000.57813) && !PlayerToPoint(5.0, PlayerID, 1125.13574, -4.39509, 1000.57813)) continue;
			format(STRING_GLOBAL, 600, "Выпало {f0e86b}%d", Value);
			SendClientMessage(PlayerID, COLOR_WHITE, STRING_GLOBAL);
			if(CG_RouletteStake[PlayerID][drumid][37] > 0
					|| CG_RouletteStake[PlayerID][drumid][38] > 0)
			{
				new bool:RedWinner;
				for(new B; B != 18; B++)
				{
					if(RedValue[B] == Value)
					{
						RedWinner = true;
						if(CG_RouletteStake[PlayerID][drumid][37] > 0)
						{
							format(STRING_GLOBAL, 600, "Ваша ставка на красный выйграна! Выйгрыш - {f0e86b}%d{FAEBD7} рублей", CG_RouletteStake[PlayerID][drumid][37]);
							SendClientMessage(PlayerID, COLOR_WHITE, STRING_GLOBAL);
							GiveMoney(PlayerID, CG_RouletteStake[PlayerID][drumid][37]*2, "Выйгрыш в рулетке");

							format(STRING_GLOBAL, 600, "%s выйграл {f0e86b}%d{FAEBD7} рублей", p_info[PlayerID][pName], CG_RouletteStake[PlayerID][drumid][37]);
							SendClientMessage(CroupierID, COLOR_WHITE, STRING_GLOBAL);
						}
						if(CG_RouletteStake[PlayerID][drumid][38] > 0)
						{
							SendClientMessage(PlayerID, COLOR_WHITE, "Ваша ставка на чёрный проиграна");
							BusinessMoney += CG_RouletteStake[PlayerID][drumid][38];
						}
					}
				}
				if(RedWinner == false && CG_RouletteStake[PlayerID][drumid][38] > 0)
				{
					format(STRING_GLOBAL, 600, "Ваша ставка на чёрный выйграна! Выйгрыш - {f0e86b}%d{FAEBD7} рублей", CG_RouletteStake[PlayerID][drumid][38]);
					SendClientMessage(PlayerID, COLOR_WHITE, STRING_GLOBAL);
					GiveMoney(PlayerID, CG_RouletteStake[PlayerID][drumid][38]*2, "Выйгрыш в рулетке");

					format(STRING_GLOBAL, 600, "%s выйграл {f0e86b}%d{FAEBD7} рублей", p_info[PlayerID][pName], CG_RouletteStake[PlayerID][drumid][38]);
					SendClientMessage(CroupierID, COLOR_WHITE, STRING_GLOBAL);
				}
				if(RedWinner == false && CG_RouletteStake[PlayerID][drumid][37] > 0)
				{
					SendClientMessage(PlayerID, COLOR_WHITE, "Ваша ставка на красный проиграна");
					BusinessMoney += CG_RouletteStake[PlayerID][drumid][37];
				}
			}
			for(new B; B != 37; B++)
			{
				if(Value == B && CG_RouletteStake[PlayerID][drumid][Value] > 0)
				{
					format(STRING_GLOBAL, 600, "Ваша ставка на %d выйграна! Выйгрыш - {f0e86b}%d{FAEBD7} рублей", Value, CG_RouletteStake[PlayerID][drumid][Value]*36);
					SendClientMessage(PlayerID, COLOR_WHITE, STRING_GLOBAL);
					GiveMoney(PlayerID, CG_RouletteStake[PlayerID][drumid][Value]*36, "Выйгрыш в рулетке");
					
					format(STRING_GLOBAL, 600, "%s выйграл {f0e86b}%d{FAEBD7} рублей", p_info[PlayerID][pName], CG_RouletteStake[PlayerID][drumid][Value]*36);
					SendClientMessage(CroupierID, COLOR_WHITE, STRING_GLOBAL);
					continue;
				}
				else if(CG_RouletteStake[PlayerID][drumid][B] > 0)
				{
					format(STRING_GLOBAL, 600, "Ваша ставка на %d проиграна", B);
					SendClientMessage(PlayerID, COLOR_WHITE, STRING_GLOBAL);
					BusinessMoney += CG_RouletteStake[PlayerID][drumid][B];
				}
			}
		}
		format(STRING_GLOBAL, 600, "За эту игру вы получили {f0e86b}%d{FAEBD7} рублей", BusinessMoney*15/100);
		SendClientMessage(CroupierID, COLOR_WHITE, STRING_GLOBAL);
		GiveMoney(CroupierID, floatround(BusinessMoney*15/100), "з/п крупье рулетка");
		for(new A; A != 5; A++) CasinoGamesInfo[drumid][CG_PlayerID][A] = -1;
		foreach(new A: Player) for(new B; B != 39; B++) CG_RouletteStake[A][drumid][B] = 0;
		
		new i = GetPVarInt(CroupierID, "PlayerBizz");
		BizzInfo[i][bMoneyHour] += floatround(BusinessMoney*85/100);
		BizzPay[i] += floatround(BusinessMoney*85/100);
		BizzInfo[i][bProduct] -= 10;
		MysqlUpdateBizzInt(i, "bizzpay", BizzPay[i]);
		MysqlUpdateBizzInt(i, "product", BizzInfo[i][bProduct]);
	}
	return 1;
}

cmd:tupdate(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 10.0, 708.7665, -210.8824, 3006.7998))
	{
	    if(GetPVarInt(playerid, "CTOColors") == 1)
		{
		    ShowPlayerDialogEx(playerid, D_CTO+5, DIALOG_STYLE_MSGBOX, "{ebec86}>> Перекраска", "{FFFFFF}Вы уверены, что хотите перекрасить транспортное средство?", "Перекрасить", "Назад");
			return 1;
		}
		ShowDetals(playerid);
	}
	return 1;
}

stock ShowDetals(playerid)
{
	STRING_GLOBAL = "";
	new dstirng[150], count = 4;
	new idx = GetPVarInt(playerid,"CTObizzid");
	new till = BizzInfo[idx][bTill];
	format(dstirng, sizeof(dstirng), "{FAEBD7}1. Удалить тюнинг\n");
	strcat(STRING_GLOBAL, dstirng);
	strcat(STRING_GLOBAL, "{FAEBD7}2. Ремонт двигателя\n");
	strcat(STRING_GLOBAL, "{FAEBD7}3. Perfomance тюнинг\n");
	format(dstirng, sizeof(dstirng),"{FAEBD7}4. Перекраска ({f0e86b}%i{FAEBD7} рублей)\n",till*500);
	strcat(STRING_GLOBAL, dstirng);

	for(new i; i < MAX_VEHICLE_COMPONENT; i++)
	{
	    if(!IsVehicleUpgradeCompatible(GetVehicleModel(p_info[playerid][pOwnableCar]),AllTuningComponentsInfo[i][idcomp])) continue;
		format(dstirng, sizeof(dstirng), "{FAEBD7}%i. %s - %s ({f0e86b}%i{FAEb7} рублей)\n", count, AllTuningComponentsInfo[i][Type], AllTuningComponentsInfo[i][Name], till*AllTuningComponentsInfo[i][Cost]);
		strcat(STRING_GLOBAL, dstirng);
		AwtomasMassiveID[playerid][count-4] = i;
		count++;
	}
	ShowPlayerDialogEx(playerid, 6500, 2, "{ebec86}>> Доступные детали", STRING_GLOBAL, "Далее", "Выйти");
	
	return 1;
}

CMD:sellgun(playerid, params[])
{
    if(p_info[playerid][pLevel] == 3 && p_info[playerid][pExp] < 3) return SendErr(playerid, "Для продажи авто нужно отыграть 3 часа");
 	if(sscanf(params, "udd", params[0], params[1], params[2])) return SendInf(playerid, "/sellgun [id игрока] [патроны] [цена]");
  	if(!IsPlayerConnected(params[0]) || params[0] == playerid) return SendErr(playerid, "Неверный ID игрока");
   	if(!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Вы далеко друг от друга");
    if(params[2] < 1) return SendErr(playerid, "Цена должна быть не меньше 1 рубля");
    if(params[1] < 1) return SendErr(playerid, "Неверное количество патронов");
    new weaponid = GetPlayerWeapon(playerid);
    new ammo = GetPlayerAmmo(playerid);
    if(!weaponid) return SendErr(playerid, "Возьмите в руку то оружие, которое хотите продать");
    if(ammo < params[1]) return SendErr(playerid, "У вас недостаточно патронов");
    SetPVarInt(playerid,"gunoffee",params[0]);
    SetPVarInt(params[0],"gunoffee",params[0]);
    SetPVarInt(params[0],"gunoffer",playerid);
    SetPVarInt(params[0],"gunprice",params[2]);
    SetPVarInt(params[0],"gunammo",params[1]);
    SetPVarInt(params[0],"gunid",weaponid);
    SetPVarInt(params[0],"pxa",ammo);
    new weapname[24];
    GetWeaponName(weaponid, weapname, 24);
    format(STRING_GLOBAL, 256, "Вы предложили %s [%d] купить у вас {f0e86b}%s{FFFFFF} за {f0e86b}%d{FFFFFF} рублей. Патронов: {f0e86b}%d", p_info[params[0]][pName], params[0], weapname, params[2], params[1]);
    SendInf(playerid, STRING_GLOBAL);
    format(STRING_GLOBAL, 256, "%s [%d] предложил(а) вам купить {f0e86b}%s{FFFFFF} за {f0e86b}%d{FFFFFF} рублей. Патронов: {f0e86b}%d", p_info[playerid][pName], playerid, weapname, params[2], params[1]);
    SendInf(params[0], STRING_GLOBAL);
    SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");
    return 1;
}

AC_GivePlayerWeapon(playerid, weaponid, ammo)
{
	new slot = GetGunSlot(weaponid);
	GunPlayer[playerid][slot][0] = weaponid;
	if(ammo > 0) GunPlayer[playerid][slot][1] += ammo;
	else GunPlayer[playerid][slot][1] -= ammo;
	GivePlayerWeapon(playerid, weaponid, ammo);
	AC_GunCheattime[playerid] = unix + 3;
	return 1;
}

AC_ResetPlayerWeapons(playerid)
{
	for(new i = 0; i < 12; i++)
	{
		GunPlayer[playerid][i][0] = 0;
		GunPlayer[playerid][i][1] = 0;
	}
	ResetPlayerWeapons(playerid);
	AC_GunCheattime[playerid] = unix + 3;
	return 1;
}

stock GetGunSlot(weaponid)
{
	switch(weaponid)
	{
	    case 0,1: return 0;
	    case 2..9: return 1;
	    case 22..24: return 2;
	    case 25..27: return 3;
	    case 28,29, 32: return 4;
	    case 30,31: return 5;
	    case 33,34: return 6;
	    case 35..38: return 7;
	    case 16..18, 39: return 8;
	    case 41..43: return 9;
	    case 10..15: return 10;
	    case 44..46: return 11;
	    case 40: return 12;
	}
	return -1;
}

CMD:gocs(playerid)
{
    if(p_info[playerid][pAdmin] < 9) return 1;
    if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши действия на сервере заблокированы по подозрению во взломе");
	ShowPlayerDialogEx(playerid, dialog_GOCS, DIALOG_STYLE_MSGBOX, "{ebec86}>> Counter-Strike", "{FFFFFF}Вы желаете начать мероприятие?", "Начать", "Отмена");
	return 1;
}

CMD:gozaezd(playerid)
{
    if(p_info[playerid][pAdmin] < 9) return 1;
    if(admin_ban_time[playerid] > 0) return SendErr(playerid, "Ваши действия на сервере заблокированы по подозрению во взломе");
	ShowPlayerDialogEx(playerid, dialog_GOZAEZD, DIALOG_STYLE_MSGBOX, "{ebec86}>> Трек", "{FFFFFF}Вы желаете начать мероприятие?", "Начать", "Отмена");
	return 1;
}

forward ClearZaezd();
public ClearZaezd()
{
    SendClientMessageToAll(0x99FFFFFF,"* Мероприятие 'Трек' завершено. Список победителей: /tracklist");

    foreach(new i: Player)
	{
		if(p_info[i][data_CT_VEH] != INVALID_VEHICLE_ID)
		{
		    DestroyVehicle(p_info[i][data_CT_VEH]);
			p_info[i][data_CT_VEH] = INVALID_VEHICLE_ID;
			DisablePlayerRaceCheckpoint(i);
		}
		p_info[i][data_CT_NUMBER] = 0;
	}


	cartrack_open = false;
	return 1;
}

forward StartZaezdGO();
public StartZaezdGO()
{
	if(cartrack_people > 1)
	{
		foreach(new i: Player)
		{
			if(p_info[i][data_CT_NUMBER] != 0)
			{
			    if(p_info[i][pAFK] > 5 || p_info[i][pJail] != 0)
		    	{
		        	p_info[i][data_CT_NUMBER] = 0;
		        	continue;
		    	}

			    new id = p_info[i][data_CT_NUMBER]-1;
			    p_info[i][data_CT_VEH] = CreateVehicle(562, pos_cartrack[id][0], pos_cartrack[id][1], pos_cartrack[id][2], 180.0, 1, 1, 36000);
                Fuel[p_info[i][data_CT_VEH]] = 100;
				PutPlayerInVehicle(i, p_info[i][data_CT_VEH], 0);

				p_info[i][data_CHEK] = 0;
				SetPlayerRaceCheckpoint(i, 0, chek_cartrack[0][0],chek_cartrack[0][1],chek_cartrack[0][2],chek_cartrack[0][3],chek_cartrack[0][4],chek_cartrack[0][5], 15.0);
				GameTextForPlayer(i, "~w~GO GO GO!", 3000, 6);
				GetVehicleParamsEx(p_info[i][data_CT_VEH],engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(p_info[i][data_CT_VEH],true,lights,alarm,doors,bonnet,boot,objective);
				Engine[p_info[i][data_CT_VEH]] = true;
			}
		}
		SendClientMessageToAll(0x99FFFFFF,"* Мероприятие 'Трек' началось!");
		SetTimer("ClearZaezd",1000*60*10,false);
	}
	else
	{
	    foreach(new i: Player)
		{
		    p_info[i][data_CT_NUMBER] = 0;
		}


	    cartrack_open = false;
	    SendClientMessageToAll(0x99FFFFFF,"* Гоночный заезд не состоялся из-за нехватки участников");
	}
	cartrack_status = false;
	return 1;
}

forward StartCSGO();
public StartCSGO()
{
	if(cs_people > 1)
	{
	    CS_CARD = random(3)+1;
		foreach(new i: Player)
		{
			if(p_info[i][data_CS_TEAM] != 0)
			{
			    if(p_info[i][pAFK] > 5 || p_info[i][pJail] != 0)
		    	{
		        	p_info[i][data_CS_TEAM] = 0;
		        	continue;
		    	}

    			if(p_info[i][data_CS_TEAM] == 1)
	            {
					if(CS_CARD == 1)
				    {
				        new t1 = random(9);
					    SetPlayerPos(i, cspos_team1[t1][0],cspos_team1[t1][1],cspos_team1[t1][2]);
						SetPlayerFacingAngle(i, cspos_team1[t1][3]);
						SetPlayerVirtualWorld(i, 228);
					}
					if(CS_CARD == 2)
				    {
				        new t1 = random(2);
				        SetPlayerPos(i, cspos_team3[t1][0],cspos_team3[t1][1],cspos_team3[t1][2]);
						SetPlayerFacingAngle(i, cspos_team3[t1][3]);
						SetPlayerVirtualWorld(i, 228);
				    }
				    if(CS_CARD == 3)
				    {
				        new t1 = random(2);
				        SetPlayerPos(i, cspos_team5[t1][0],cspos_team5[t1][1],cspos_team5[t1][2]);
						SetPlayerFacingAngle(i, cspos_team5[t1][3]);
						SetPlayerVirtualWorld(i, 228);
				    }
				    SetPlayerSkin(i, 287);
					SetPlayerColor(i, 0xCC333330);
					SetHealth(i, 100);
				}
				else if(p_info[i][data_CS_TEAM] == 2)
				{
				    if(CS_CARD == 1)
				    {
				        new t1 = random(9);
						SetPlayerPos(i, cspos_team2[t1][0],cspos_team2[t1][1],cspos_team2[t1][2]);
						SetPlayerFacingAngle(i, cspos_team2[t1][3]);
						SetPlayerVirtualWorld(i, 228);
					}
					if(CS_CARD == 2)
				    {
				        new t1 = random(2);
				        SetPlayerPos(i, cspos_team4[t1][0],cspos_team4[t1][1],cspos_team4[t1][2]);
						SetPlayerFacingAngle(i, cspos_team4[t1][3]);
						SetPlayerVirtualWorld(i, 228);
				    }
				    if(CS_CARD == 3)
				    {
				        new t1 = random(2);
				        SetPlayerPos(i, cspos_team6[t1][0],cspos_team6[t1][1],cspos_team6[t1][2]);
						SetPlayerFacingAngle(i, cspos_team6[t1][3]);
						SetPlayerVirtualWorld(i, 228);
				    }
				    SetPlayerSkin(i, 285);
					SetPlayerColor(i, 0x3366CC30);
					SetHealth(i, 100);
				}
				
				cash_cs[i] = 300;
				kill_cs[i] = 0;
			}
		}
		if(CS_CARD == 1)
		{
			SendClientMessageToAll(0x99FFFFFF,"* Мероприятие 'Counter-Strike' началось!");
			SendClientMessageToAll(0x99FFFFFF,"* Карта: возвращение домой");
		}
		else if(CS_CARD == 2)
		{
			SendClientMessageToAll(0x99FFFFFF,"* Мероприятие 'Counter-Strike' началось!");
			SendClientMessageToAll(0x99FFFFFF,"* Карта: складское помещение");
		}
		else if(CS_CARD == 3)
		{
			SendClientMessageToAll(0x99FFFFFF,"* Мероприятие 'Counter-Strike' началось!");
			SendClientMessageToAll(0x99FFFFFF,"* Карта: городские джунгли");
		}
		cs_time = 300;
		
		cs_score[0] = 0;
		cs_score[1] = 0;
	}
	else
	{
	    foreach(new i: Player)
		{
		    p_info[i][data_CS_TEAM] = 0;
		}

	    cs_open = false;
	    SendClientMessageToAll(0x99FFFFFF,"* Игра Counter-Strike не состоялась из-за нехватки участников");
	}
	cs_status = false;
	return 1;
}

forward StartCS();
public StartCS()
{
    SendClientMessageToAll(0x99FFFFFF,"* Через 2 минуты стартует командная игра Counter-Strike (/gps > Мероприятия(Евенты) > Counter-Strike)");
	SetTimer("StartCSGO",1000*60*2, false);
	return 1;
}

stock GOCS()
{
    if(cs_open == true) return 1;
	cs_open = true;

    SetTimer("StartCS",1000*60*3,false);
	cs_status = true;
	cs_people = 0;

	SendClientMessageToAll(0x99FFFFFF,"* Через 5 минут стартует командная игра Counter-Strike (/gps > Мероприятия(Евенты) > Counter-Strike)");
	return 1;
}

forward StartZaezd();
public StartZaezd()
{
    SendClientMessageToAll(0x99FFFFFF,"* Через 2 минуты стартует гоночное мероприятие 'Трек' (/gps > Мероприятия(Евенты) > Трек)");
	SetTimer("StartZaezdGO",1000*60*2, false);
	return 1;
}

stock GOZaezd()
{
    if(cartrack_open == true) return 1;
	cartrack_open = true;

	for(new i = 0; i < 10; i++)
	{
		CT_DATA[i][data_STATUS] = 0;
		strmid(CT_DATA[i][data_NAME], "нет", 0, 24, 24);
	}

    SetTimer("StartZaezd",1000*60*3,false);
	cartrack_status = true;
	cartrack_people = 0;

	SendClientMessageToAll(0x99FFFFFF,"* Через 5 минут стартует гоночное мероприятие 'Трек' (/gps > Мероприятия(Евенты) > Трек)");
	return 1;
}

CMD:tracklist(playerid,params[])
{
	STRING_GLOBAL = "";
    for(new t = 0; t < 10; t++)
    {
        format(STRING_GLOBAL, 1024, "%s{FFFFFF}%d - %s\n", STRING_GLOBAL, t+1, CT_DATA[t][data_NAME]);
    }
    ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> ТОП Трэка", STRING_GLOBAL, "Закрыть", "");
	return 1;
}

stock GivePlayerStats(playerid, stats, num)
{
	if(0 <= p_info[playerid][pStats][stats]+num <= 100) p_info[playerid][pStats][stats] += num;
	else return 1;
	switch(stats)
	{
	case 0:
		{
			if(num > 0)
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, COLOR_WHITE, "Вы потолстели. Ваш вес - очень маленький");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, COLOR_WHITE, "Вы потолстели. Ваш вес - маленький");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, COLOR_WHITE, "Вы потолстели. Ваш вес - нормальный");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, COLOR_WHITE, "Вы потолстели. Ваш вес - большой");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, COLOR_WHITE, "Вы потолстели. Ваш вес - очень большой");
			}
			else
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, COLOR_WHITE, "Вы похудели. Ваш вес - очень маленький");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, COLOR_WHITE, "Вы похудели. Ваш вес - маленький");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, COLOR_WHITE, "Вы похудели. Ваш вес - нормальный");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, COLOR_WHITE, "Вы похудели. Ваш вес - большой");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, COLOR_WHITE, "Вы похудели. Ваш вес - очень большой");
			}
			MysqlUpdatePlayerInt(playerid, "pStats0", p_info[playerid][pStats][stats]);
		}
	case 1:
		{
			if(num > 0)
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, COLOR_WHITE, "Ваша выносливость улучшена. Ваша выносливость - очень плохая");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, COLOR_WHITE, "Ваша выносливость улучшена. Ваша выносливость - плохая");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, COLOR_WHITE, "Ваша выносливость улучшена. Ваша выносливость - нормальная");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, COLOR_WHITE, "Ваша выносливость улучшена. Ваша выносливость - хорошая");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, COLOR_WHITE, "Ваша выносливость улучшена. Ваша выносливость - очень хорошая");
			}
			else
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, COLOR_WHITE, "Ваша выносливость ухудшена. Ваша выносливость - очень плохая");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, COLOR_WHITE, "Ваша выносливость ухудшена. Ваша выносливость - плохая");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, COLOR_WHITE, "Ваша выносливость ухудшена. Ваша выносливость - нормальная");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, COLOR_WHITE, "Ваша выносливость ухудшена. Ваша выносливость - хорошая");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, COLOR_WHITE, "Ваша выносливость ухудшена. Ваша выносливость - очень хорошая");
			}
			MysqlUpdatePlayerInt(playerid, "pStats1", p_info[playerid][pStats][stats]);
		}
	case 2:
		{
			if(num > 0)
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, COLOR_WHITE, "Ваша сила улучшена. Ваша сила - очень маленькая");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, COLOR_WHITE, "Ваша сила улучшена. Ваша сила - маленькая");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, COLOR_WHITE, "Ваша сила улучшена. Ваша сила - нормальная");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, COLOR_WHITE, "Ваша сила улучшена. Ваша сила - большая");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, COLOR_WHITE, "Ваша сила улучшена. Ваша сила - очень большая");
			}
			else
			{
				if(p_info[playerid][pStats][stats] <= 10) SCM(playerid, COLOR_WHITE, "Ваша сила ухудшена. Ваша сила - очень маленькая");
				if(p_info[playerid][pStats][stats] >= 11 && p_info[playerid][pStats][stats] <= 30) SCM(playerid, COLOR_WHITE, "Ваша сила ухудшена. Ваша сила - маленькая");
				if(p_info[playerid][pStats][stats] >= 31 && p_info[playerid][pStats][stats] <= 70) SCM(playerid, COLOR_WHITE, "Ваша сила ухудшена. Ваша сила - нормальная");
				if(p_info[playerid][pStats][stats] >= 71 && p_info[playerid][pStats][stats] <= 90) SCM(playerid, COLOR_WHITE, "Ваша сила ухудшена. Ваша сила - большая");
				if(p_info[playerid][pStats][stats] >= 91) SCM(playerid, COLOR_WHITE, "Ваша сила ухудшена. Ваша сила - очень большая");
			}
			MysqlUpdatePlayerInt(playerid, "pStats2", p_info[playerid][pStats][stats]);
		}
	}
	return 1;
}

stock DP_SetPlayerFightingStyle(playerid)
{
	new Style[10];
	switch(p_info[playerid][P_Style][0])
	{
		case 1000: for(new A; A != 7; A++) Style[A] = 1;
		case 800..999: for(new A; A != 6; A++) Style[A] = 1;
		case 640..799: for(new A; A != 5; A++) Style[A] = 1;
		case 480..639: for(new A; A != 4; A++) Style[A] = 1;
		case 320..479: for(new A; A != 3; A++) Style[A] = 1;
		case 160..319: for(new A; A != 2; A++) Style[A] = 1;
		case 1..159: Style[0] = 1;
	}
	switch(p_info[playerid][P_Style][1])
	{
		case 1000: for(new A = 7; A != 10; A++) Style[A] = 1;
		case 600..999: for(new A = 7; A != 9; A++) Style[A] = 1;
		case 300..599: for(new A = 7; A != 8; A++) Style[A] = 1;
		case 1..299: Style[7] = 1;
	}
	MysqlUpdatePlayerInt(playerid, "P_Style0", p_info[playerid][P_Style][0]);
	MysqlUpdatePlayerInt(playerid, "P_Style1", p_info[playerid][P_Style][1]);
	new ChooseStyle = random(10);
	for(new A; A != 7; A++) if(A == ChooseStyle && Style[A] == 1) return SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	for(new A = 7; A != 10; A++) if(A == ChooseStyle && Style[A] == 1) return SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	return 1;
}

stock CreatePlayerFuelDraw(playerid)
{
	PTD_Fuel[playerid][0] = CreatePlayerTextDraw(playerid,215.302551, 186.666748, "usebox");
	PlayerTextDrawLetterSize(playerid,PTD_Fuel[playerid][0], 0.000468, 0.830738);
	PlayerTextDrawTextSize(playerid,PTD_Fuel[playerid][0], 403.739807, -43.166656);
	PlayerTextDrawAlignment(playerid,PTD_Fuel[playerid][0], 1);
	PlayerTextDrawColor(playerid,PTD_Fuel[playerid][0], 0);
	PlayerTextDrawUseBox(playerid,PTD_Fuel[playerid][0], true);
	PlayerTextDrawBoxColor(playerid,PTD_Fuel[playerid][0], 0xa24646FF);
	PlayerTextDrawSetShadow(playerid,PTD_Fuel[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid,PTD_Fuel[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid,PTD_Fuel[playerid][0], 0x00000000);
	PlayerTextDrawFont(playerid,PTD_Fuel[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Fuel[playerid][0], 1);

	PTD_Fuel[playerid][1] = CreatePlayerTextDraw(playerid,320.937194, 184.333312, "76.0 FUEL");
	PlayerTextDrawLetterSize(playerid,PTD_Fuel[playerid][1], 0.339897, 1.191666);
	PlayerTextDrawAlignment(playerid,PTD_Fuel[playerid][1], 2);
	PlayerTextDrawColor(playerid,PTD_Fuel[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid,PTD_Fuel[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid,PTD_Fuel[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid,PTD_Fuel[playerid][1], 0x00000000);
	PlayerTextDrawFont(playerid,PTD_Fuel[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid,PTD_Fuel[playerid][1], 1);
	return 1;
}

stock TD_EndFuel(playerid)
{
	for(new i = 0; i < 8; i++)
	{
		TextDrawHideForPlayer(playerid,TD_Fuel[i]);
	}
	PlayerTextDrawHide(playerid,PTD_Fuel[playerid][0]);
	PlayerTextDrawHide(playerid,PTD_Fuel[playerid][1]);

	PlayerTextDrawDestroy(playerid,PTD_Fuel[playerid][0]);
	PlayerTextDrawDestroy(playerid,PTD_Fuel[playerid][1]);

	CancelSelectTextDraw(playerid);

	DeletePVar(playerid,"fuel_show");
	DeletePVar(playerid,"td_fuel");
	DeletePVar(playerid,"start_step");
	return 1;
}

forward FuelCar(playerid);
public FuelCar(playerid)
{
	new step = GetPVarInt(playerid,"td_step");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(!vehicleid) return 0;
	if(FuelVeh[playerid] >= (step * 5.0) || Fuel[vehicleid] >= 100)
	{
	    FuelVeh[playerid] = 0;
		DeletePVar(playerid, "td_step");
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		SetVehicleParamsEx(vehicleid,(Engine[vehicleid])?(false):(true),lights,alarm,doors,bonnet,boot,objective);
		Engine[vehicleid] = (Engine[vehicleid])?(false):(true);
		GameTextForPlayer(playerid, (Engine[vehicleid]) ? ("~w~ENGINE ~g~ON") : ("~w~ENGINE ~r~OFF"), 5000, 6);
		return 1;
	}
	
	if(Engine[vehicleid] == true)
	{
	    Engine[vehicleid] = false;
	    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
	}
	
	FuelVeh[playerid]++;
	Fuel[vehicleid]++;
	SetTimerEx("FuelCar", 500, 0, "i", playerid);
	
	format(STRING_GLOBAL, 64, "~w~FILLING: ~g~%i", Fuel[vehicleid]);
	GameTextForPlayer(playerid, STRING_GLOBAL, 5000, 6);
	return 1;
}

CMD:mpanel(playerid, params[])
{
	if(p_info[playerid][pAdmin] > 7)
	{
	    if(sscanf(params, "i", params[0])) return SendInf(playerid,"/mpanel [1 - панель губернатора, 2 - панель Советник мэра]");
	    if(params[0] == 1)
	    {
	        ShowPlayerDialogEx(playerid, 143, 2, "{ebec86}>> Мэрия: Панель управления","- Государственный бюджет\n- Цены области\n- Городские цены\n- Зарплата организаций\n- Зарплата рабочих\n- Налоги","Выбрать","Отмена");
	    }
	    if(params[0] == 2)
	    {
	        ShowPlayerDialogEx(playerid, 143, 2, "{ebec86}>> Советник мэра: Панель управления","- Цена на лечение в больнице\n- Цена на лечение\n- Премия за доставку боеприпасов\n- Запрет на использование тяжёлой техники\n- Премия за поимку преступника\n- Премия за убийство при задержании\n- Штраф за превышение скорости\n- Центр лицензирования","Выбрать","Отмена");
	    }
	    return 1;
	}
	if(p_info[playerid][pMember] == TEAM_MERIA)
	{
	    if(p_info[playerid][pRank] == 10)
	    {
	        ShowPlayerDialogEx(playerid, 143, 2, "{ebec86}>> Мэрия: Панель управления","- Государственный бюджет\n- Цены области\n- Городские цены\n- Зарплата организаций\n- Зарплата рабочих\n- Налоги","Выбрать","Отмена");
	    }
	    if(p_info[playerid][pRank] == 9)
	    {
	        ShowPlayerDialogEx(playerid, 143, 2, "{ebec86}>> Советник мэра: Панель управления","- Цена на лечение в больнице\n- Цена на лечение\n- Премия за доставку боеприпасов\n- Запрет на использование тяжёлой техники\n- Премия за поимку преступника\n- Премия за убийство при задержании\n- Штраф за превышение скорости\n- Центр лицензирования","Выбрать","Отмена");
	    }
	    return 1;
	}
	return 1;
}

stock SaveSalary()
{
	new String[200];
	for(new A; A != 18; A++)
	{
	    //if(A >= 4 && A <= 7 || A >= 16 && A <= 18) continue;
		format(String, sizeof(String), "UPDATE `salary` SET `Salary` = '%d' WHERE `Organise` = '%d'", SalaryStatus[A], A);
		mysql_tquery(dbHandle, String, "", "");
	}
	for(new A; A != 44; A++)
	{
		format(String, sizeof(String), "UPDATE `work_salary` SET `Salary` = '%d' WHERE `Work` = '%d'", WorkSalary[A], A);
		mysql_tquery(dbHandle, String, "", "");
	}
	return 1;
}

forward LoadSalary();
public LoadSalary()
{
    new Rows, Fields;
    cache_get_data(Rows, Fields);
    for(new A; A != Rows; A++)
	{
 		new LoadOrganise = cache_get_field_content_int(A, "Organise");
   		SalaryStatus[LoadOrganise] = cache_get_field_content_int(A, "Salary");
	}
	return 1;
}

forward LoadWorkSalary();
public LoadWorkSalary()
{
    new Rows, Fields;
    cache_get_data(Rows, Fields);
    for(new A; A != Rows; A++)
	{
 		new LoadWork = cache_get_field_content_int(A, "Work");
   		WorkSalary[LoadWork] = cache_get_field_content_int(A, "Salary");
	}
	return 1;
}

forward LoadGarages();
public LoadGarages()
{
    new time = GetTickCount();

	new class_text[32], garage_text[256], temp[10], rows, fields;
	cache_get_data(rows, fields);

	if(rows)
    {
    	for(new g = 0; g < rows; g++)
    	{
			cache_get_field_content(g, "id", temp), GARAGE_DATA[g][g_ID] = strval (temp);
	        cache_get_field_content(g, "enter_x", temp), GARAGE_DATA[g][G_ENTER_X] = floatstr (temp);
	        cache_get_field_content(g, "enter_y", temp), GARAGE_DATA[g][G_ENTER_Y] = floatstr (temp);
	        cache_get_field_content(g, "enter_z", temp), GARAGE_DATA[g][G_ENTER_Z] = floatstr (temp);
	        cache_get_field_content(g, "enter_x_car", temp), GARAGE_DATA[g][g_ENTER_X_CAR] = floatstr (temp);
	        cache_get_field_content(g, "enter_y_car", temp), GARAGE_DATA[g][g_ENTER_Y_CAR] = floatstr (temp);
	        cache_get_field_content(g, "enter_z_car", temp), GARAGE_DATA[g][g_ENTER_Z_CAR] = floatstr (temp);
	        cache_get_field_content(g, "enter_a_car", temp), GARAGE_DATA[g][g_ENTER_A_CAR] = floatstr (temp);
	        cache_get_field_content(g, "exit_x", temp), GARAGE_DATA[g][g_EXIT_X] = floatstr (temp);
	        cache_get_field_content(g, "exit_y", temp), GARAGE_DATA[g][g_EXIT_Y] = floatstr (temp);
	        cache_get_field_content(g, "exit_z", temp), GARAGE_DATA[g][g_EXIT_Z] = floatstr (temp);
	        cache_get_field_content(g, "lock", temp), GARAGE_DATA[g][g_LOCK] = strval (temp);
	        cache_get_field_content(g, "type", temp), GARAGE_DATA[g][g_TYPE] = strval (temp);
	        cache_get_field_content(g, "owner", GARAGE_DATA[g][g_OWNER], dbHandle, MAX_PLAYER_NAME);
	        cache_get_field_content(g, "owned", temp), GARAGE_DATA[g][g_OWNED] = strval (temp);
	        cache_get_field_content(g, "price", temp), GARAGE_DATA[g][g_PRICE] = strval (temp);
	        cache_get_field_content(g, "int", temp), GARAGE_DATA[g][g_INT] = strval (temp);
	        cache_get_field_content(g, "world", temp), GARAGE_DATA[g][g_WORLD] = strval (temp);
	        cache_get_field_content(g, "day", temp), GARAGE_DATA[g][g_DAY] = strval (temp);
	        
	        cache_get_field_content(g, "drugs", temp), GARAGE_DATA[g][g_DRUGS] = strval (temp);
	        cache_get_field_content(g, "patron", temp), GARAGE_DATA[g][g_PATRON] = strval (temp);
	        cache_get_field_content(g, "metall", temp), GARAGE_DATA[g][g_METALL] = strval (temp);
	        cache_get_field_content(g, "money", temp), GARAGE_DATA[g][g_MONEY] = strval (temp);

			switch(GARAGE_DATA[g][g_TYPE])
			{
			    case 1: class_text = "Низкий";
			    case 2: class_text = "Средний";
			    case 3: class_text = "Премиум";
			}

			if(GARAGE_DATA[g][g_OWNED] == 0)
			{
			    format(garage_text, sizeof garage_text, "{5AB4E4}- Гараж №%d -\n\n{FFFFFF}Владелец: государство\nКласс: %s\nЦена: %d рублей\n\n{C9CBCC}/buygarage - купить гараж", TotalGarages+1, class_text, GARAGE_DATA[g][g_PRICE]);
				GARAGE_DATA[g][g_TEXT] = CreateDynamic3DTextLabel(garage_text, 0xFFFFFFFF, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z], 15.0);
			}
			else
			{
			    format(garage_text, sizeof garage_text, "{5AB4E4}- Гараж №%d -\n{FFFFFF}Владелец: %s\n\n{C9CBCC}Меню гаража: /garage\n{C9CBCC}Попасть в гараж: ALT(пешком), H(за рулем)", TotalGarages+1, GARAGE_DATA[g][g_OWNER]);
				GARAGE_DATA[g][g_TEXT] = CreateDynamic3DTextLabel(garage_text, 0xFFFFFFFF, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z], 15.0);
			}
			GARAGE_DATA[g][g_ICON] = CreateDynamicMapIcon(GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z], 35, -1, 0, -1, -1, 200.0);
			GARAGE_DATA[g][g_PIC] = CreateDynamicPickup(1085, 23, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z]);
	        TotalGarages++;
		}
	}
	return printf("Load garages. Load: %d g. Time: %d ms.", TotalGarages, GetTickCount()-time);
}

stock CreateGarage(playerid)
{

	new
		Float:enter_x = GetPVarFloat(playerid, "GARAGE_X"),
		Float:enter_y = GetPVarFloat(playerid, "GARAGE_Y"),
		Float:enter_z = GetPVarFloat(playerid, "GARAGE_Z"),

		Float:enter_x_car = GetPVarFloat(playerid, "GARAGE_CAR_X"),
		Float:enter_y_car = GetPVarFloat(playerid, "GARAGE_CAR_Y"),
		Float:enter_z_car = GetPVarFloat(playerid, "GARAGE_CAR_Z"),
		Float:enter_a_car = GetPVarFloat(playerid, "GARAGE_CAR_A"),

		Float:exit_x = GetPVarFloat(playerid, "GARAGE_EXIT_X"),
		Float:exit_y = GetPVarFloat(playerid, "GARAGE_EXIT_Y"),
		Float:exit_z = GetPVarFloat(playerid, "GARAGE_EXIT_Z"),

		garage_type = GetPVarInt(playerid, "GARAGE_CLASS"),
		garage_price = GetPVarInt(playerid, "GARAGE_PRICE"),

		garage_text[256],
		class_text[32],

		g = TotalGarages
	;

	GARAGE_DATA[g][G_ENTER_X] = enter_x;
	GARAGE_DATA[g][G_ENTER_Y] = enter_y;
	GARAGE_DATA[g][G_ENTER_Z] = enter_z;
	GARAGE_DATA[g][g_ENTER_X_CAR] = enter_x_car;
	GARAGE_DATA[g][g_ENTER_Y_CAR] = enter_y_car;
	GARAGE_DATA[g][g_ENTER_Z_CAR] = enter_z_car;
	GARAGE_DATA[g][g_ENTER_A_CAR] = enter_a_car;
	GARAGE_DATA[g][g_EXIT_X] = exit_x;
	GARAGE_DATA[g][g_EXIT_Y] = exit_y;
	GARAGE_DATA[g][g_EXIT_Z] = exit_z;
	GARAGE_DATA[g][g_TYPE] = garage_type;
	GARAGE_DATA[g][g_LOCK] = 1;
	GARAGE_DATA[g][g_OWNED] = 0;
	GARAGE_DATA[g][g_PRICE] = garage_price;
	GARAGE_DATA[g][g_INT] = 0;
	GARAGE_DATA[g][g_WORLD] = TotalGarages;
	strmid(GARAGE_DATA[g][g_OWNER], "None", 0, strlen(GARAGE_DATA[g][g_OWNER]), 24);

	switch(GARAGE_DATA[g][g_TYPE])
	{
	    case 1: class_text = "Низкий";
	    case 2: class_text = "Средний";
	    case 3: class_text = "Премиум";
	}

	format(garage_text, sizeof garage_text, "{5AB4E4}- Гараж №%d -\n\n{FFFFFF}Владелец: государство\nКласс: %s\nЦена: %d рублей\n\n{C9CBCC}/buygarage - купить гараж", TotalGarages + 1, class_text, GARAGE_DATA[g][g_PRICE]);

    GARAGE_DATA[g][g_ICON] = CreateDynamicMapIcon(GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z], 35, -1, 0, -1, -1, 100.0);
	GARAGE_DATA[g][g_TEXT] = CreateDynamic3DTextLabel(garage_text, 0xFFFFFFFF, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, -1, -1);
	GARAGE_DATA[g][g_PIC] = CreateDynamicPickup(1085, 23, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z]);

    TotalGarages++;
 	GARAGE_DATA[g][g_ID] = TotalGarages;

	new query[512];

    mysql_format(dbHandle, query, sizeof query, "\
	INSERT INTO `garages`\
	(`enter_x`, `enter_y`, `enter_z`,\
	`enter_x_car`, `enter_y_car`, `enter_z_car`, `enter_a_car`,\
	`exit_x`, `exit_y`, `exit_z`, `lock`,\
	`type`, `owner`, `owned`, `price`, `int`, `world`) VALUES \
	( '%f', '%f', '%f', \
	'%f', '%f', '%f', '%f',\
	'%f', '%f', '%f', '1',\
	'%d', '%s', '%d', '%d', '%d', '%d')",
	GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z],
	GARAGE_DATA[g][g_ENTER_X_CAR], GARAGE_DATA[g][g_ENTER_Y_CAR], GARAGE_DATA[g][g_ENTER_Z_CAR], GARAGE_DATA[g][g_ENTER_A_CAR],
	GARAGE_DATA[g][g_EXIT_X], GARAGE_DATA[g][g_EXIT_Y], GARAGE_DATA[g][g_EXIT_Z],
	GARAGE_DATA[g][g_TYPE], GARAGE_DATA[g][g_OWNER], GARAGE_DATA[g][g_OWNED], GARAGE_DATA[g][g_PRICE],
	GARAGE_DATA[g][g_INT], GARAGE_DATA[g][g_WORLD]);
    mysql_function_query(dbHandle, query, false, "", "");

    SetPlayerPos(playerid, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z]);

	DeletePVar(playerid, "CREATE_GARAGE");

	new g_add[128];
	format(g_add, sizeof g_add, "Гараж №%d успешно добавлен на сервер", TotalGarages);
	return SendClientMessage(playerid, COLOR_GREEN, g_add);
}

CMD:buygarage(playerid)
{
	for(new g = 0; g < TotalGarages; g++)
	{
	    if(PlayerToPoint(3.0, playerid, GARAGE_DATA[g][G_ENTER_X], GARAGE_DATA[g][G_ENTER_Y], GARAGE_DATA[g][G_ENTER_Z]))
		{
			if(GetMoney(playerid) < GARAGE_DATA[g][g_PRICE]) return SendErr(playerid, "На Вашем счету недостаточно средств для покупки данного гаража");
			if(p_info[playerid][data_GARAGE] != -1) return SendErr(playerid, "У Вас уже имеется гараж");
			if(GARAGE_DATA[g][g_OWNED] != 0) return SendErr(playerid, "Вы не можете приобрести уже купленный гараж");
			SetPVarInt(playerid, "garage_id", g);
			new garage_text[256], class_text[20];

			switch(GARAGE_DATA[g][g_TYPE])
			{
			    case 1: class_text = "Низкий";
			    case 2: class_text = "Средний";
			    case 3: class_text = "Высокий";
			}

			format(garage_text, sizeof garage_text, "\
			{FFFFFF}Номер гаража: \t\t\t№%d\n\
			Класс гаража: \t\t\t%s\n\
			Стоимость: \t\t\t\t{43C928}%d рублей\n\n\
			{FFFFFF}Для того, чтобы купить гараж, нажмите 'Купить'\n\
			Для того, чтобы отменить покупку, нажмите 'Отмена'",
			g+1, class_text, GARAGE_DATA[g][g_PRICE]);

			ShowPlayerDialogEx
				(
					playerid,
					dialog_BUYGARAGE,
					DIALOG_STYLE_MSGBOX,
					"{ebec86}>> Покупка гаража",
					garage_text,
					"Купить", "Отмена"
				)
			;
			return 1;
		}
	}
	return 1;
}

stock SaveGarageData(g)
{
	new String[256];
	format(String, 256, "UPDATE `garages` SET `owner` = '%s', `owned` = '%d', `lock` = '%d', `day` = '%d' WHERE `id` = '%d' LIMIT 1",
	GARAGE_DATA[g][g_OWNER], GARAGE_DATA[g][g_OWNED], GARAGE_DATA[g][g_LOCK], GARAGE_DATA[g][g_DAY], GARAGE_DATA[g][g_ID]);
	mysql_tquery(dbHandle, String, "", "");
	return 1;
}

stock SaveGarageSklad(g)
{
	new String[256];
	format(String, 256, "UPDATE `garages` SET `drugs` = '%d', `patron` = '%d', `metall` = '%d', `money` = '%d' WHERE `id` = '%d' LIMIT 1",
	GARAGE_DATA[g][g_DRUGS], GARAGE_DATA[g][g_PATRON], GARAGE_DATA[g][g_METALL], GARAGE_DATA[g][g_MONEY], GARAGE_DATA[g][g_ID]);
	mysql_tquery(dbHandle, String, "", "");
	return 1;
}

stock UpdateGarageData(g)
{

	new class_text[20], garage_text[256];

	switch(GARAGE_DATA[g][g_TYPE])
	{
	    case 1: class_text = "Низкий";
	    case 2: class_text = "Средний";
	    case 3: class_text = "Высокий";
	}

	if(GARAGE_DATA[g][g_OWNED] == 0)
	{
	    format(garage_text, sizeof garage_text, "{5AB4E4}- Гараж №%d -\n\n{FFFFFF}Владелец: государство\nКласс: %s\nЦена: %d рублей\n\n{C9CBCC}/buygarage - купить гараж", g + 1, class_text, GARAGE_DATA[g][g_PRICE]);
        UpdateDynamic3DTextLabelText(GARAGE_DATA[g][g_TEXT], -1, garage_text);
	}
	else
	{
	    format(garage_text, sizeof garage_text, "{5AB4E4}- Гараж №%d -\n{FFFFFF}Владелец: %s\n\n{C9CBCC}Меню гаража: /garage\n{C9CBCC}Попасть в гараж: ALT(пешком), H(за рулем)", g + 1, GARAGE_DATA[g][g_OWNER], class_text);
		UpdateDynamic3DTextLabelText(GARAGE_DATA[g][g_TEXT], -1, garage_text);
	}

	return 1;
}

CMD:garage(playerid)
{

	if(p_info[playerid][data_GARAGE] == -1)
	    return SendErr(playerid, "Вы не имеете гараж");

    new g = p_info[playerid][data_GARAGE], title_str[64];

    format(title_str, sizeof title_str, "{ebec86}>> Управление гаражем №%d", g + 1);

    ShowPlayerDialogEx
		(
		    playerid,
			dialog_GARAGEMENU,
			DIALOG_STYLE_LIST,
			title_str,
			"{43B5E6}1. Информация о гараже\n\
			{FFFFFF}2. Отметить гараж на GPS\n\
			3. Открыть / закрыть гараж\n\
			4. Отремонтировать автомобиль\n\
			{FA6442}5. Дополнительные действия\n\
			6. Склад гаража",
			"Выбрать", "Отмена"
		)
	;


	return 1;
}

CMD:adg(playerid)
{
    if(p_info[playerid][pAdmin] < 9) return 1;
	if(!GetPVarInt(playerid, "CREATE_GARAGE"))
	    return SendErr(playerid, "Вы еще не начали создавать гараж");

    new Float:PosX, Float:PosY, Float:PosZ;
    GetPlayerPos(playerid, PosX, PosY, PosZ);

    SetPVarInt(playerid, "CREATE_GARAGE", 1);

    SetPVarFloat(playerid, "GARAGE_X", PosX);
    SetPVarFloat(playerid, "GARAGE_Y", PosY);
    SetPVarFloat(playerid, "GARAGE_Z", PosZ);

    SendClientMessage(playerid, COLOR_GREEN, "Теперь отойдите на расстояние от текстур, чтобы машина не попала в текстуры, и введите /nextgarage");

	return 1;
}

CMD:nextgarage(playerid)
{
    if(p_info[playerid][pAdmin] < 9) return 1;
    if(!GetPVarInt(playerid, "CREATE_GARAGE")) return SendErr(playerid, "Вы еще не начали создавать гараж");
    if(GetPlayerInterior(playerid) != 0) return SendErr(playerid, "В интерьере нельзя создать гараж");

	new Float:X, Float:Y, Float:Z, Float:A;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);

	garage_car[playerid] = CreateVehicle(466, X, Y, Z, A, -1, -1, 80000);
	PutPlayerInVehicle(playerid, garage_car[playerid], 0);

	SendClientMessage(playerid, COLOR_GREEN, "Теперь выберите место, где будет появляться машина после выезда из гаража, и введите /endgarage");

	return 1;
}

CMD:endgarage(playerid)
{
	if(p_info[playerid][pAdmin] < 9) return 1;
    if(!GetPVarInt(playerid, "CREATE_GARAGE")) return 1;
    if(GetPlayerInterior(playerid) != 0) return SendErr(playerid, "В интерьере нельзя создать гараж");

    new Float:carX, Float:carY, Float:carZ, Float:carA;
    GetVehiclePos(garage_car[playerid], carX, carY, carZ);
    GetVehicleZAngle(garage_car[playerid], carA);

    if(!IsPlayerInAnyVehicle(playerid) && GetPlayerVehicleID(playerid) != garage_car[playerid])
        return SendErr(playerid, "Вы должны быть в специально-созданном автомобиле для установки гаража");

    SetPVarFloat(playerid, "GARAGE_CAR_X", carX);
    SetPVarFloat(playerid, "GARAGE_CAR_Y", carY);
    SetPVarFloat(playerid, "GARAGE_CAR_Z", carZ);
    SetPVarFloat(playerid, "GARAGE_CAR_A", carA);

    DestroyVehicle(garage_car[playerid]), garage_car[playerid] = INVALID_VEHICLE_ID;

    ShowPlayerDialogEx
		(
			playerid,
			dialog_CREATE_GARAGE_END,
			DIALOG_STYLE_LIST,
			"{ebec86}>> Выберите класс гаража", "\
			{FFFFFF}1. Низкий класс {5AB4E4}1 автомобиль | Цена: 120.000 рублей\n\
			{FFFFFF}2. Средний класс {5AB4E4}2 автомобиля | Цена: 250.000 рублей\n\
			{FFFFFF}3. Премиум класс {5AB4E4}3 автомобиля | Цена: 550.000 рублей",
			"Выбрать", "Выход"
  		);
	return 1;
}

CMD:caraction(playerid, params[])
{
    new length = strlen(params), a_do_string[5][35];
	if(playerText_ame_Action[playerid][1] != Text3D:-1)
	{
	    SendErr(playerid, "Вы удалили своё действие на игрока");
	    DestroyDynamic3DTextLabel(playerText_ame_Action[playerid][1]);
	    playerText_ame_Action[playerid][1] = Text3D:-1;
	    return 1;
	}

	if( GetPlayerState ( playerid ) != 2 ) return SendErr(playerid, "Вы должны быть в машине");

	if(strlen(params) >= 150) return SendInf(playerid, "/caraction [действие (150 символов)]");
	if(isnull(params)) return SendInf(playerid, "/caraction [действие (150 символов)]");
 	else if(IsIpFound(params)) return PlayerGetsChatBan(playerid, params);

    if(length > 0) 		strmid(a_do_string[0], params, 0, length);
    if(length > 30) 	strmid(a_do_string[1], params, 30, 60);
    if(length > 60) 	strmid(a_do_string[2], params, 60, 90);
    if(length > 90) 	strmid(a_do_string[3], params, 90, 120);
    if(length > 120) 	strmid(a_do_string[4], params, 120, 150);


	STRING_GLOBAL[0] = EOS;
	if(length > 0) 		strcat(STRING_GLOBAL, a_do_string[0]), 	strcat(STRING_GLOBAL, "\n");
	if(length > 30) 	strcat(STRING_GLOBAL, a_do_string[1]),	strcat(STRING_GLOBAL, "\n");
	if(length > 60) 	strcat(STRING_GLOBAL, a_do_string[2]),	strcat(STRING_GLOBAL, "\n");
	if(length > 90) 	strcat(STRING_GLOBAL, a_do_string[3]),	strcat(STRING_GLOBAL, "\n");
	if(length > 120) 	strcat(STRING_GLOBAL, a_do_string[4]);


	new Float:x, Float:y, Float:z;
	GetVehiclePos(GetPlayerVehicleID(playerid),x,y,z);

    playerText_ame_Action[playerid][1] = CreateDynamic3DTextLabel(STRING_GLOBAL,  0xE75480FF, x,y,z, 10.5, GetPlayerVirtualWorld(playerid));
    Attach3DTextLabelToVehicle(playerText_ame_Action[playerid][1], GetPlayerVehicleID(playerid), 0.0, 1.0, 4.0);

	SendInf(playerid, "Вы успешно создали действие на игрока");
	SendErr(playerid, "Введите /caraction еще раз чтобы удалить");
	return 1;
}

CMD:ado(playerid, params[])
{
    new length = strlen(params), a_do_string[5][35];

	if(playerText_ame_Action[playerid][0] != Text3D:-1)
	{
	    SendErr(playerid, "Вы удалили своё действие на игрока");
	    DestroyDynamic3DTextLabel(playerText_ame_Action[playerid][0]);
	    playerText_ame_Action[playerid][0] = Text3D:-1;
	    return 1;
	}

	if(strlen(params) >= 150) return SendInf(playerid, "/ado [действие (150 символов)]");
	if(isnull(params)) return SendInf(playerid, "/ado [действие (150 символов)]");
 	else if(IsIpFound(params)) return PlayerGetsChatBan(playerid, params);

    if(length > 0) 		strmid(a_do_string[0], params, 0, length);
    if(length > 30) 	strmid(a_do_string[1], params, 30, 60);
    if(length > 60) 	strmid(a_do_string[2], params, 60, 90);
    if(length > 90) 	strmid(a_do_string[3], params, 90, 120);
    if(length > 120) 	strmid(a_do_string[4], params, 120, 150);


	STRING_GLOBAL[0] = EOS;
	if(length > 0) 		strcat(STRING_GLOBAL, a_do_string[0]), 	strcat(STRING_GLOBAL, "\n");
	if(length > 30) 	strcat(STRING_GLOBAL, a_do_string[1]),	strcat(STRING_GLOBAL, "\n");
	if(length > 60) 	strcat(STRING_GLOBAL, a_do_string[2]),	strcat(STRING_GLOBAL, "\n");
	if(length > 90) 	strcat(STRING_GLOBAL, a_do_string[3]),	strcat(STRING_GLOBAL, "\n");
	if(length > 120) 	strcat(STRING_GLOBAL, a_do_string[4]);


	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);

    playerText_ame_Action[playerid][0] = CreateDynamic3DTextLabel(STRING_GLOBAL, 0xE75480FF, x, y, z, 10.5, GetPlayerVirtualWorld(playerid));
    Attach3DTextLabelToPlayer(playerText_ame_Action[playerid][0], playerid, 0.0, 0.0, 1.0);

	SendInf(playerid, "Вы успешно создали действие на игрока");
	SendErr(playerid, "Введите /ado еще раз чтобы удалить");
	return 1;
}

CMD:todo(playerid,params[])
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid,"У вас бан чата");
	new Text_[60], Deistvie_[60];
	if(sscanf(params, "p<*>s[60]s[60]", Text_,Deistvie_)) return SendInf(playerid,"/todo [текст]*[действие]");
	STRING_GLOBAL="";
	format(STRING_GLOBAL, 500, "\"{FFFFFF}%s{E75480}\", - сказал %s, %s",Text_,p_info[playerid][pName],Deistvie_);
	SendStreamMessage(15.0, playerid, STRING_GLOBAL, 0xE75480FF);
	return 1;
}

CMD:action(playerid, params[])
{
	if(p_info[playerid][pMuted] > 0) return SendErr(playerid,"У вас бан чата");
	new ActText[144];
	if(sscanf(params, "s[144]", ActText)) return SendInf(playerid,"/action [текст]");
	if(GetPVarInt(playerid,"PlayerUseAction")) return SendErr(playerid,"Вы уже устанавливали действие своего персонажа. (( /dellaction ))");

	new Float:sp_X, Float:sp_Y, Float:sp_Z;
	GetPlayerPos(playerid, sp_X, sp_Y, sp_Z);

	STRING_GLOBAL="";
	format(STRING_GLOBAL,500,"%s\n(( %s[%d] ))",ActText,p_info[playerid][pName],playerid);
	SetPVarInt(playerid,"playerTextAction",_:CreateDynamic3DTextLabel(STRING_GLOBAL,0xE75480FF, sp_X, sp_Y, sp_Z, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1));
	SetPVarInt(playerid,"playerUseAction",1);
	SendInf(playerid,"Вы установили действие своего персонажа. (( /dellaction ))");
	return 1;
}

CMD:adellaction(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 2) return SendErr(playerid, "Вы не уполномочены использовать эту команду");
	if(sscanf(params, "is[60]", params[0],params[1])) return SendInf(playerid,"/adellaction [playerid] [причина]");
	if(!GetPVarInt(params[0],"PlayerUseAction")) return SendErr(playerid,"Данный игрок не устанавливал какое-либо действие");

	DeletePVar(params[0],"playerUseAction");
	if(IsValidDynamic3DTextLabel(Text3D:GetPVarInt(params[0],"playerTextAction"))) DestroyDynamic3DTextLabel(Text3D:GetPVarInt(params[0],"playerTextAction"));
	DeletePVar(params[0],"playerTextAction");

	SendInf(playerid,"Вы удалили действие данного игрока");

	format(STRING_GLOBAL,128,"%s удалил ваше действие. Причина: %s",p_info[playerid][pName],params[1]);
	SendInf(params[0], STRING_GLOBAL);
	return 1;
}

CMD:dellaction(playerid, params[])
{
	if(!GetPVarInt(playerid,"PlayerUseAction")) return SendErr(playerid,"Вы не устанавливали действие своего персонажа");
	DeletePVar(playerid,"playerUseAction");
	if(IsValidDynamic3DTextLabel(Text3D:GetPVarInt(playerid,"playerTextAction"))) DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid,"playerTextAction"));
	DeletePVar(playerid,"playerTextAction");
	SendInf(playerid,"Вы удалили действие своего персонажа");
	return 1;
}

SendStreamMessage(Float:radius, playerid, mes[], color)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	foreach(new i:Player)
	{
		if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
		{
			if(PlayerToPoint(radius,i,X,Y,Z)) SCM(i, color, mes);
		}
	}
}

CMD:setbizname(playerid, params[])
{
    if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Вы не уполномочены использовать эту команду");
	if(sscanf(params, "s[32]", params[0])) return SendInf(playerid,"/setbizname [название]");
	for(new i = TOTALBIZZ; i > 0; i --)
	{
	    if(PlayerToPoint(3.0, playerid, BizzInfo[i][bEntrx], BizzInfo[i][bEntry], BizzInfo[i][bEntrz]))
		{
		
			strmid(BizzInfo[i][bName], params[0], 0, strlen(params[0]), 32);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "UPDATE "T_BIZZ" SET name = '%s' WHERE id = '%d' LIMIT 1",
			BizzInfo[i][bName], i);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			SendInf(playerid, "Вы успешно изменили название бизнеса");
			UpdateBizz(i);
		}
	}
	return 1;
}

cmd:bizlock(playerid)
{
    if(p_info[playerid][pAdmin] < 9) return SendErr(playerid, "Вы не уполномочены использовать эту команду");
	for(new bizzid = TOTALBIZZ; bizzid > 0; bizzid --)
	{
	    if(PlayerToPoint(3.0, playerid, BizzInfo[bizzid][bEntrx], BizzInfo[bizzid][bEntry], BizzInfo[bizzid][bEntrz]))
		{
		    SendInf(playerid, "Вы закрыли бизнес");
		    BizzInfo[bizzid][bLock] = 1;
		    MysqlUpdateBizzInt(bizzid, "block", BizzInfo[bizzid][bLock]);
		}
	}
	return 1;
}

stock LoadTexture(playerid)
{
    if(gLoadTime{playerid} > 0) return 1;
    
    ShowLoadTexture(playerid);
    
    TextDrawShowForPlayer(playerid, fstd[0]);
    TextDrawShowForPlayer(playerid, fstd[1]);
//    TextDrawShowForPlayer(playerid, fstd[2]);
  //  TextDrawShowForPlayer(playerid, fstd[3]);

    SetTimerEx("@__LoadTextureForPlayer", 100, false, "i", playerid);
    return 1;
}

@__LoadTextureForPlayer(playerid);
@__LoadTextureForPlayer(playerid)
{
    if(gLoadTime{playerid} >= 59)
    {
        TextDrawHideForPlayer(playerid, fstd[0]);
        TextDrawHideForPlayer(playerid, fstd[1]);
       // TextDrawHideForPlayer(playerid, fstd[2]);
      //  TextDrawHideForPlayer(playerid, fstd[3]);

        HideLoadTexture(playerid);

        gLoadTime{playerid} = 0;
        return 1;
    }
    gLoadTime{playerid} += 1;
    PlayerTextDrawShow(playerid, fstd_p[playerid][gLoadTime{playerid}]);
    SetTimerEx("@__LoadTextureForPlayer", 70, false, "i", playerid);
    return 1;
}

stock ShowLoadTexture(playerid)
{
    static buff_default_textdraw_text[] = !".";
    fstd_p[playerid][59] = CreatePlayerTextDraw(playerid, 320.000000, 175.000000, buff_default_textdraw_text);
	fstd_p[playerid][58] = CreatePlayerTextDraw(playerid, 321.567932, 175.082169, buff_default_textdraw_text);
	fstd_p[playerid][57] = CreatePlayerTextDraw(playerid, 323.118683, 175.327789, buff_default_textdraw_text);
	fstd_p[playerid][56] = CreatePlayerTextDraw(playerid, 324.635254, 175.734146, buff_default_textdraw_text);
	fstd_p[playerid][55] = CreatePlayerTextDraw(playerid, 326.101044, 176.296814, buff_default_textdraw_text);
	fstd_p[playerid][54] = CreatePlayerTextDraw(playerid, 327.500000, 177.009613, buff_default_textdraw_text);
	fstd_p[playerid][53] = CreatePlayerTextDraw(playerid, 328.816772, 177.864746, buff_default_textdraw_text);
	fstd_p[playerid][52] = CreatePlayerTextDraw(playerid, 330.036957, 178.852829, buff_default_textdraw_text);
	fstd_p[playerid][51] = CreatePlayerTextDraw(playerid, 331.147186, 179.963043, buff_default_textdraw_text);
	fstd_p[playerid][50] = CreatePlayerTextDraw(playerid, 332.135254, 181.183228, buff_default_textdraw_text);
	fstd_p[playerid][49] = CreatePlayerTextDraw(playerid, 332.990387, 182.500000, buff_default_textdraw_text);
	fstd_p[playerid][48] = CreatePlayerTextDraw(playerid, 333.703186, 183.898956, buff_default_textdraw_text);
	fstd_p[playerid][47] = CreatePlayerTextDraw(playerid, 334.265839, 185.364746, buff_default_textdraw_text);
	fstd_p[playerid][46] = CreatePlayerTextDraw(playerid, 334.672211, 186.881317, buff_default_textdraw_text);
	fstd_p[playerid][45] = CreatePlayerTextDraw(playerid, 334.917816, 188.432068, buff_default_textdraw_text);
	fstd_p[playerid][44] = CreatePlayerTextDraw(playerid, 335.000000, 190.000000, buff_default_textdraw_text);
	fstd_p[playerid][43] = CreatePlayerTextDraw(playerid, 334.917816, 191.567932, buff_default_textdraw_text);
	fstd_p[playerid][42] = CreatePlayerTextDraw(playerid, 334.672211, 193.118668, buff_default_textdraw_text);
	fstd_p[playerid][41] = CreatePlayerTextDraw(playerid, 334.265839, 194.635254, buff_default_textdraw_text);
	fstd_p[playerid][40] = CreatePlayerTextDraw(playerid, 333.703186, 196.101059, buff_default_textdraw_text);
	fstd_p[playerid][39] = CreatePlayerTextDraw(playerid, 332.990387, 197.500000, buff_default_textdraw_text);
	fstd_p[playerid][38] = CreatePlayerTextDraw(playerid, 332.135254, 198.816772, buff_default_textdraw_text);
	fstd_p[playerid][37] = CreatePlayerTextDraw(playerid, 331.147186, 200.036957, buff_default_textdraw_text);
	fstd_p[playerid][36] = CreatePlayerTextDraw(playerid, 330.036957, 201.147171, buff_default_textdraw_text);
	fstd_p[playerid][35] = CreatePlayerTextDraw(playerid, 328.816772, 202.135254, buff_default_textdraw_text);
	fstd_p[playerid][34] = CreatePlayerTextDraw(playerid, 327.500000, 202.990387, buff_default_textdraw_text);
	fstd_p[playerid][33] = CreatePlayerTextDraw(playerid, 326.101044, 203.703186, buff_default_textdraw_text);
	fstd_p[playerid][32] = CreatePlayerTextDraw(playerid, 324.635254, 204.265854, buff_default_textdraw_text);
	fstd_p[playerid][31] = CreatePlayerTextDraw(playerid, 323.118683, 204.672211, buff_default_textdraw_text);
	fstd_p[playerid][30] = CreatePlayerTextDraw(playerid, 321.567932, 204.917831, buff_default_textdraw_text);
	fstd_p[playerid][29] = CreatePlayerTextDraw(playerid, 320.000000, 205.000000, buff_default_textdraw_text);
	fstd_p[playerid][28] = CreatePlayerTextDraw(playerid, 318.432068, 204.917831, buff_default_textdraw_text);
	fstd_p[playerid][27] = CreatePlayerTextDraw(playerid, 316.881317, 204.672211, buff_default_textdraw_text);
	fstd_p[playerid][26] = CreatePlayerTextDraw(playerid, 315.364746, 204.265839, buff_default_textdraw_text);
	fstd_p[playerid][25] = CreatePlayerTextDraw(playerid, 313.898956, 203.703186, buff_default_textdraw_text);
	fstd_p[playerid][24] = CreatePlayerTextDraw(playerid, 312.500000, 202.990387, buff_default_textdraw_text);
	fstd_p[playerid][23] = CreatePlayerTextDraw(playerid, 311.183228, 202.135254, buff_default_textdraw_text);
	fstd_p[playerid][22] = CreatePlayerTextDraw(playerid, 309.963043, 201.147171, buff_default_textdraw_text);
	fstd_p[playerid][21] = CreatePlayerTextDraw(playerid, 308.852814, 200.036957, buff_default_textdraw_text);
	fstd_p[playerid][20] = CreatePlayerTextDraw(playerid, 307.864746, 198.816788, buff_default_textdraw_text);
	fstd_p[playerid][19] = CreatePlayerTextDraw(playerid, 307.009613, 197.500000, buff_default_textdraw_text);
	fstd_p[playerid][18] = CreatePlayerTextDraw(playerid, 306.296814, 196.101059, buff_default_textdraw_text);
	fstd_p[playerid][17] = CreatePlayerTextDraw(playerid, 305.734161, 194.635254, buff_default_textdraw_text);
	fstd_p[playerid][16] = CreatePlayerTextDraw(playerid, 305.327789, 193.118668, buff_default_textdraw_text);
	fstd_p[playerid][15] = CreatePlayerTextDraw(playerid, 305.082184, 191.567932, buff_default_textdraw_text);
	fstd_p[playerid][14] = CreatePlayerTextDraw(playerid, 305.000000, 190.000000, buff_default_textdraw_text);
	fstd_p[playerid][13] = CreatePlayerTextDraw(playerid, 305.082184, 188.432068, buff_default_textdraw_text);
	fstd_p[playerid][12] = CreatePlayerTextDraw(playerid, 305.327789, 186.881332, buff_default_textdraw_text);
	fstd_p[playerid][11] = CreatePlayerTextDraw(playerid, 305.734161, 185.364746, buff_default_textdraw_text);
	fstd_p[playerid][10] = CreatePlayerTextDraw(playerid, 306.296814, 183.898956, buff_default_textdraw_text);
	fstd_p[playerid][9] = CreatePlayerTextDraw(playerid, 307.009613, 182.500000, buff_default_textdraw_text);
	fstd_p[playerid][8] = CreatePlayerTextDraw(playerid, 307.864746, 181.183212, buff_default_textdraw_text);
	fstd_p[playerid][7] = CreatePlayerTextDraw(playerid, 308.852814, 179.963043, buff_default_textdraw_text);
	fstd_p[playerid][6] = CreatePlayerTextDraw(playerid, 309.963043, 178.852829, buff_default_textdraw_text);
	fstd_p[playerid][5] = CreatePlayerTextDraw(playerid, 311.183228, 177.864746, buff_default_textdraw_text);
	fstd_p[playerid][4] = CreatePlayerTextDraw(playerid, 312.500000, 177.009613, buff_default_textdraw_text);
	fstd_p[playerid][3] = CreatePlayerTextDraw(playerid, 313.898956, 176.296814, buff_default_textdraw_text);
	fstd_p[playerid][2] = CreatePlayerTextDraw(playerid, 315.364746, 175.734161, buff_default_textdraw_text);
	fstd_p[playerid][1] = CreatePlayerTextDraw(playerid, 316.881317, 175.327789, buff_default_textdraw_text);
	fstd_p[playerid][0] = CreatePlayerTextDraw(playerid, 318.432068, 175.082169, buff_default_textdraw_text);
}

stock HideLoadTexture(playerid)
{
    for(new i; i < 60; i ++) PlayerTextDrawHide(playerid, fstd_p[playerid][i]);
    for(new i; i < 60; i ++) PlayerTextDrawDestroy(playerid, fstd_p[playerid][i]);
}

GetPatron(playerid)
{
	new stringer[256];
	if(GetPVarInt(playerid,"mes_patron")) return 1;
	if(GetPVarInt(playerid,"get_patron") >= 20000 && GetPVarInt(playerid,"get_metall") >= 10000)
	{
	    if(GetPVarInt(playerid,"get_metall") >= 10000) SetPVarInt(playerid, "get_metall", 10000);
	    if(GetPVarInt(playerid,"get_patron") >= 20000) SetPVarInt(playerid, "get_patron", 20000);
		SendErr(playerid, "Ваш грузовик полон");
		switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
		{
			case 433: SendInf(playerid, "Чтобы разгрузиться выберите место, используя клавишу 'Y'");
		}
	}
	else
	{
		if(GetPVarInt(playerid,"get_metall") < 10000)
		{
		    if(gArmyWarehouse[1] > 500) SetPVarInt(playerid, "get_metall", GetPVarInt(playerid,"get_metall")+random(500)+1);
		}
		if(GetPVarInt(playerid,"get_patron") < 20000)
		{
			if(gArmyWarehouse[0] > 1000) SetPVarInt(playerid, "get_patron", GetPVarInt(playerid,"get_patron")+random(1000)+1);
		}
		GameTextForPlayer(playerid, "~y~~h~LOADING...", 2900, 6);
		if(PatronText[playerid]==Text3D:-1)
		{
			format(stringer, 256, "Металла: {FFFFFF}%i% / 10000 кг\n{ebec86}Патронов: {FFFFFF}%i% / 20000 пт", GetPVarInt(playerid, "get_metall"), GetPVarInt(playerid, "get_patron"));
			PatronText[playerid] = CreateDynamic3DTextLabel(stringer, 0xa24646FF, 0, 0, 2.5, 20.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
			SendInf(playerid,"Загрузка боеприпасов начата, если Вы покинете фуру - Вы потеряете весь груз");
		}
		else
		{
			format(stringer, 256, "Металла: {FFFFFF}%i% / 10000 кг\n{ebec86}Патронов: {FFFFFF}%i% / 20000 пт", GetPVarInt(playerid, "get_metall"), GetPVarInt(playerid, "get_patron"));
			UpdateDynamic3DTextLabelText(PatronText[playerid], 0xa24646FF, stringer);
		}
	}
	return 1;
}

PutPatron(playerid)
{
	new put = GetPVarInt(playerid,"get_patron");
	new put1 = GetPVarInt(playerid,"get_metall");
	if(!put && !put1)
	{
		SendErr(playerid, "Ваш грузовик пуст");
	}
	else
	{
		for(new place = 0; place < MAX_FRACTIONS; place++)
		{
		    if(IsAArmy(playerid))
		    {
			    if(PlayerToPoint(10.0, playerid, frac_place_put[place][0], frac_place_put[place][1], frac_place_put[place][2]))
				{
					frac_patron[place] += put;
					frac_metall[place] += put1;
					UpdateFractionStore(place);
					break;
				}
			}
		}
		if(IsAArmy(playerid))
		{
		    p_info[playerid][pPayCheck] += WorkSalary[22];
		   	MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

			SendInf(playerid, "Вам была выписана премия за доставку боеприпасов");
		}
		GameTextForPlayer(playerid, "~y~~h~PUT PATRON", 5000, 6);
		SendInf(playerid, "Вы разгрузили матовоз");
		DropPatron(playerid);
	}
}

DropPatron(playerid)
{
	if(IsValidDynamic3DTextLabel(PatronText[playerid])) DestroyDynamic3DTextLabel(PatronText[playerid]);
	PatronText[playerid] = Text3D:-1;

	DeletePVar(playerid,"get_patron");
	DeletePVar(playerid,"get_metall");
	DeletePVar(playerid,"get_type");
}

CMD:setpatr(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 8) return 1;
	if(sscanf(params,"dd",params[0],params[1])) return SendInf(playerid, "/setpatr [id fraction] [count]");
	if(params[1] < 1) return SendInf(playerid, "/setpatr [id fraction] [count]");
	if(params[0] < 1 || params[0] >= MAX_FRACTIONS) return SendErr(playerid, "Неверный ID фракции");
	frac_patron[params[0]] = params[1];
	UpdateFractionStore(params[0]);
	UpdateStoreGang(params[0]);
	SendInf(playerid, "Вы успешно пополнили склад");
	return 1;
}

CMD:setmats(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 8) return 1;
	if(sscanf(params,"dd",params[0],params[1])) return SendInf(playerid, "/setmats [id fraction] [count]");
	if(params[1] < 1) return SendInf(playerid, "/setmats [id fraction] [count]");
	if(params[0] < 1 || params[0] >= MAX_FRACTIONS) return SendErr(playerid, "Неверный ID фракции");
	frac_metall[params[0]] = params[1];
	UpdateFractionStore(params[0]);
	UpdateStoreGang(params[0]);
	SendInf(playerid, "Вы успешно пополнили склад");
	return 1;
}

stock DoorsRobbery()
{
    MoveDynamicObject(Dvers[15], 745.25, 481.94, 1035.78, 0.5, 0.00, 0.00, 0.00);
	return 1;
}

stock DoorsRobbery1()
{
    MoveDynamicObject(Dvers[16], 745.25, 481.94, 1035.78, 0.5, 0.00, 0.00, 0.00);
	return 1;
}

stock DoorsRobbery2()
{
    MoveDynamicObject(Dvers[17], 745.25, 481.94, 1035.78, 0.5, 0.00, 0.00, 0.00);
	return 1;
}

stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return 1;
	return 0;
}

forward LoadAllMembers(playerid);
public LoadAllMembers(playerid)
{
    new rows, fields, full = 0, afk = 0, text[20];
    cache_get_data(rows, fields);

	STRING_GLOBAL[0] = EOS;
	strcat(STRING_GLOBAL, "{FFFF00}ID\tУровень\tТелефон\tРанг\tИмя игрока\n\n");
	foreach(new i: Player)
	{
		if(p_info[i][pMember] == p_info[playerid][pMember])
		{
		    if(p_info[i][pAFK] >= 3) afk++;
			if(p_info[i][pPhoneNumber] <= 1) format(text, sizeof(text), "None\t\t");
			else format(text, sizeof(text), "%i\t\t", p_info[i][pPhoneNumber]);
			format(STRING_GLOBAL, sizeof(STRING_GLOBAL),"%s{FFFFFF}%i\t%i\t\t%s%i\t%s\n", STRING_GLOBAL, i, p_info[i][pLevel], text, p_info[i][pRank], GetName(i));
			full++;
		}
	}
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s\n{FFFFFF}Члены организации в AFK: {f0e86b}%i{FFFFFF} человек(а)", STRING_GLOBAL, afk);
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s\n{FFFFFF}В игре членов организации: {f0e86b}%i{FFFFFF} человек(а)", STRING_GLOBAL, full);
	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s\n{FFFFFF}Общее количество членов организации: {f0e86b}%i{FFFFFF} человек(а)", STRING_GLOBAL, rows);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Члены организации", STRING_GLOBAL, "Закрыть", "");
	return 1;
}

CMD:bl(playerid, params[])
{
	new string[144], sendername[24], playername[24];
	if(!IsAMafia(playerid)) return SendErr(playerid, "Вы не член мафии");
	new fracid = GetFracID(playerid);
	new query[356];
	if(sscanf(params, "uS(none)[36]", params[0], params[1]))
	{
		SendInf(playerid, "/bl [id] [причина] {bbbbbb}(Чтобы вычеркнуть оставьте поле 'причина' пустым)");
		format(query, sizeof query, "SELECT (SELECT `name` FROM `accounts` WHERE `id`=`accused`),`mink`,FROM_UNIXTIME(`date`),\
		(SELECT `name` FROM `accounts` WHERE `id`=`accuser`),`reason` FROM `blacklist` WHERE `f_id`='%i'", fracid);
		mysql_tquery(dbHandle, query, "Bl_Show", "ii", playerid, fracid);
		return 1;
	}
	if(!IsPlayerConnected(params[0]) || params[0] == INVALID_PLAYER_ID) return 1;
	if(p_info[playerid][pRank] < f_info [ p_info [ playerid ] [ pMember ] ] [ f_bl_config ] [ 0 ])
	{
		format(STRING_GLOBAL, 128, "Доступно с %i ранга", f_info [ p_info [ playerid ] [ pMember ] ] [ f_bl_config ] [ 0 ]);
		SendErr(playerid, STRING_GLOBAL);
		return 1;
	}
	else
	{
		if(strcmp(params[1], "none", false) == 0)
		{
			if(!Bl_Info[params[0]][Bl_onFrac][fracid]) return SendErr(playerid, "Этого игрока нет в вашем ЧС");
			Bl_Remove(params[0], fracid);
			getname(playerid->sendername, params[0]->playername);
			format(string, sizeof string, "[BLACK LIST]: %s %s вычеркнул Вас из черного списка %s", GetRank(fracid, p_info[playerid][pRank]), sendername, Fractions[fracid][fractionName]);
			SCM(params[0], COLOR_LIGHTBLUE, string);
			format(string, sizeof string, "[BLACK LIST]: %s %s вычеркнул %s из черного списка %s", GetRank(fracid, p_info[playerid][pRank]), sendername, playername, Fractions[fracid][fractionName]);
			SendFMes(fracid, COLOR_LIGHTBLUE, string);
		}
		else
		{
			if(fracid == GetFracID(params[0])) return SendErr(playerid, "Этот игрок состоит в вашей организации");
			if(Bl_Info[params[0]][Bl_onFrac][fracid]) return SendErr(playerid, "Этот игрок уже есть в вашем ЧС");
			if(strlen(params[1]) > 30) return SendErr(playerid, "Слишком длинная причина");
			Bl_Add(params[0], playerid, params[1]);
			getname(playerid -> sendername, params[0] -> playername);
			format(string, sizeof string, "[BLACK LIST]: %s %s внес Вас в черный список %s, причина: %s", GetRank(fracid, p_info[playerid][pRank]), sendername, Fractions[fracid][fractionName], params[1]);
			SCM(params[0], COLOR_LIGHTBLUE, string);
			format(string, sizeof string, "[BLACK LIST]: %s %s внес %s в черный список %s, причина: %s", GetRank(fracid, p_info[playerid][pRank]), sendername, playername, Fractions[fracid][fractionName], params[1]);
			SendFMes(fracid, COLOR_LIGHTBLUE, string);
		}
	}
	return 1;
}

CMD:jackcar(playerid)
{
	if(p_info[playerid][pWanted] > 0) return SendErr(playerid, "Вы находитесь в розыске");
	if(!IsAMafia(playerid) && robbery_role[playerid] != 4) return SendErr(playerid, "Вам не доступна данная команда");
	else if(!p_info[playerid][pJackCar]) return SendErr(playerid, "У вас нету отмычек");
	new Float:X, Float:Y, Float:Z;
	new bool:check_vehicle=false;
	foreach(new i:Player)
	{
		if(p_info[i][pOwnableCar])
		{
			GetVehiclePos(p_info[i][pOwnableCar],X,Y,Z);
			if(PlayerToPoint(4.0,playerid,X,Y,Z))
			{
				SetPVarInt(playerid, "CarJack", p_info[i][pOwnableCar]);
				check_vehicle=true;
				break;
			}
		}
	}
	if(!check_vehicle) return SendErr(playerid, "Можно взламывать только личные т/с игроков");
	ShowPlayerDialogEx(playerid,d_carjack,0," ","{FFFFFF}Вы хотите воспользоваться\nотмычкой и угнать транспорт?","Да","Нет");
	ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.1, 1, 0, 0, 0, 0, 0);
	return 1;
}

stock MafiaBattleCheck()
{
	foreach(new A: Player)
	{
		if(p_info[A][pMember] == MafiaBattle[0][0] || p_info[A][pMember] == MafiaBattle[1][0])
	    {
	        if(PlayerToKvadrat(A, MafiaBattleZone[2], MafiaBattleZone[3], MafiaBattleZone[0], MafiaBattleZone[1]))
	        {
	            if(p_info[A][pMember] == MafiaBattle[0][0]) MafiaBattle[0][1]++;
	            if(p_info[A][pMember] == MafiaBattle[1][0]) MafiaBattle[1][1]++;
			}
			
			new temp[32];
			format(temp, sizeof temp, "~r~%s", ConvertTime(MafiaBattle[0][3]));
			TextDrawSetString(txdw2, temp);
			
			new td_string [ 80 ] ;
			format ( td_string, sizeof ( td_string ), "~r~(%d) %s vs %s (%d)", MafiaBattle[0][1], GetMafiaName(MafiaBattle[0][0], 1), GetMafiaName(MafiaBattle[1][0], 1), MafiaBattle[1][1] ) ;
			PlayerTextDrawSetString(A, capture_td [ A ], td_string ) ;
	    }
	}
	return 1;
}

stock MafiaBattleFinish()
{
	if(MafiaBattle[1][1] > MafiaBattle[0][1] || MafiaBattle[1][1] == MafiaBattle[0][1])
	{
	    foreach(new A: Player)
	    {
	        if(p_info[A][pMember] == MafiaBattle[1][0]) SendInf(A, "Вы отстояли свой бизнес");
			if(p_info[A][pMember] == MafiaBattle[0][0]) SendInf(A, "Вы не смогли захватить бизнес");
			PlayerTextDrawHide(A, capture_td [ A ]);
			TextDrawHideForPlayer(A, txdw2);
	    }
	}
	else if(MafiaBattle[1][1] < MafiaBattle[0][1])
	{
		foreach(new A: Player)
	    {
	        if(p_info[A][pMember] == MafiaBattle[1][0]) SendInf(A, "Ваш бизнес захватили");
			if(p_info[A][pMember] == MafiaBattle[0][0]) SendInf(A, "Вы захватили бизнес");
			PlayerTextDrawHide(A, capture_td [ A ]);
			TextDrawHideForPlayer(A, txdw2);
		}
		
		MafiaTotalBizz[MafiaBattle[1][0]]--;
		UpdateStoreGang(MafiaBattle[1][0]);
		
	    BizzInfo[MafiaBattle[0][2]][bMafia] = MafiaBattle[0][0];
	    MysqlUpdateBizzInt(MafiaBattle[0][2], "mafia", BizzInfo[MafiaBattle[0][2]][bMafia]);
	    
	    MafiaTotalBizz[MafiaBattle[0][0]]++;
	    UpdateStoreGang(MafiaBattle[0][0]);
	}
	GangZoneDestroy(MafiaBattleZoneID);
	MafiaBattleZoneID = 0;
	StartMafiaWar[MafiaBattle[0][0]] = 0;
	StartMafiaWar[MafiaBattle[1][0]] = 0;
	MafiaBattle[1][1] = 0;
	MafiaBattle[0][1] = 0;
	MafiaBattle[0][3] = 0;
	return 1;
}

stock GetMafiaName(fraction, launch = 0)
{
	switch(fraction)
	{
	    case 7:
		{
			if(!launch) GangName = "Южная";
			else GangName = "Южная";
		}
		case 8:
		{
			if(!launch) GangName = "Арзамасская";
			else GangName = "Арзамасская";
		}
	    case 15:
		{
			if(!launch) GangName = "Лыткаринская";
			else GangName = "Лыткаринская";
		}
		case 16:
		{
			if(!launch) GangName = "Батыревская";
			else GangName = "Батыревская";
		}
	}
	return GangName;
}

stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(gangzonex)
	{
	    case 7: zx = 0xfcfc0099;
	    case 8: zx = 0x66EEEE99;
        case 15: zx = 0xf8440099;
		case 16: zx = 0x17196c99;
		default: zx = 0xFFFFFF99;
	}
	return zx;
}

CMD:spy(playerid,params[])
{
	if(p_info[playerid][pMember] != TEAM_FBI) return SendErr(playerid, "Вы не агент ФСБ");
	if(p_info[playerid][pRank] < 8) return SendErr(playerid, "Команда доступна с 8 ранга");
	if(sscanf(params, "u", params[0])) return SendInf(playerid, "/spy [id игрока]");
	
	if(GetPVarInt(params[0], "spy_member"))
	{
		SetPlayerSkin(params[0], p_info[params[0]][pMemberSkin]);
		SetPlayerColorEx(params[0], TeamColors[GetTeamID(params[0])]);
		DeletePVar(params[0], "spy_member");
		return 1;
	}
	
	if(!ProxDetectorS(5.0, playerid, params[0])) return SendErr(playerid, "Сотрудник слишком далеко для того, чтоб выдать ему маскировку");
	SetPVarInt(playerid, "actplayerid", params[0]);
	ShowPlayerDialogEx(playerid, dSpy, DIALOG_STYLE_LIST, "{ebec86}>> Выберите организацию", "1. УГИБДД\n2. ГУВД\n3. Спецназ\n4. Армия\n5. Итальянская Мафия\n6. Русская Мафия", "Выбрать", "Закрыть");
	return 1;
}

CMD:spikes(playerid)
{
    if(!IsACop(playerid)) return SendErr(playerid, "Вам недоступна данная команда");
	if(IsACop(playerid) && p_info[playerid][pRank] < 5 || p_info[playerid][pMember] == TEAM_FBI && p_info[playerid][pRank] < 3) return SCM(playerid,COLOR_WHITE, "Вам недоступна установка шипов");
	if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	if(GetPlayerInterior(playerid) != 0) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return SendErr(playerid, "Нельзя использовать в машине");
	new Float: X, Float: Y, Float: Z, Float: ANGLE;
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, ANGLE);
	if(!GetPVarInt(playerid,"block"))
	{
		format(STRING_GLOBAL, 128, "Установил шипы: %s(%i)", GetName(playerid), playerid);
		ShipText[playerid] = CreateDynamic3DTextLabel(STRING_GLOBAL,-1,X,Y,Z,5.0,INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0);
		SetPVarInt(playerid,"Ships",CreateDynamicSphere(X, Y, Z, 3.5, -1, -1, -1));
		SetPVarInt(playerid,"ObjectShip",CreateDynamicObject(2899, X, Y, Z-0.8, 0, 0, ANGLE,0,0));
		SetPVarInt(playerid,"block", true);
		SCM(playerid, 0x07f6b3FF, "Вы установили шипы новейшей технологии. Они имеют радиуправляемый интерфейс");
		SCM(playerid, 0x07f6b3FF, "Этот интерфейс даёт возможность деактивировать шипы на приличном расстоянии от них. (/spikes)");
		ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 0, 1, 1, 1, 1);
		Itter_AddInternal(_:_Y_ITER_C0:shipPlayer@YSII_Cg,_:_Y_ITER_C0:shipPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(shipPlayer));
	}
	else
	{
		Itter_RemoveInternal(_:_Y_ITER_C0:shipPlayer@YSII_Cg,_:_Y_ITER_C0:shipPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(shipPlayer));
		if(IsValidDynamic3DTextLabel(ShipText[playerid])) DestroyDynamic3DTextLabel(ShipText[playerid]);
		DestroyDynamicObject(GetPVarInt(playerid,"ObjectShip"));
		DestroyDynamicArea(GetPVarInt(playerid,"Ships"));
		DeletePVar(playerid,"block");
		DeletePVar(playerid,"Ships");
		SendInf(playerid, "Шипы деактивированы");
	}
	return 1;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
    if ( objectid == gate_info [ gates_count ] [ g_object ] )
	{
		if ( gates_adding == 1 )
		{
			if(response == EDIT_RESPONSE_FINAL)
			{
				gate_info [ gates_count ] [ g_pos ] [ 0 ] = x ;
				gate_info [ gates_count ] [ g_pos ] [ 1 ] = y ;
				gate_info [ gates_count ] [ g_pos ] [ 2 ] = z ;
				gate_info [ gates_count ] [ g_pos ] [ 3 ] = rx ;
				gate_info [ gates_count ] [ g_pos ] [ 4 ] = ry ;
				gate_info [ gates_count ] [ g_pos ] [ 5 ] = rz ;
				gates_adding = 2 ;
				SendInf(playerid, "Установите позицию открытых ворот. (/hgatecreate)" ) ;
			}
			else if(response == EDIT_RESPONSE_CANCEL)
			{
				DestroyDynamicObject ( gate_info [ gates_count ] [ g_object ] ) ;
				gates_adding = 0 ;
				SendErr(playerid, "Создание ворот отменено" ) ;
			}
		}
		else if ( gates_adding == 2 )
		{
			if(response == EDIT_RESPONSE_FINAL)
			{
				gate_info [ gates_count ] [ g_opened_pos ] [ 0 ] = x ;
				gate_info [ gates_count ] [ g_opened_pos ] [ 1 ] = y ;
				gate_info [ gates_count ] [ g_opened_pos ] [ 2 ] = z ;
				gate_info [ gates_count ] [ g_opened_pos ] [ 3 ] = rx ;
				gate_info [ gates_count ] [ g_opened_pos ] [ 4 ] = ry ;
				gate_info [ gates_count ] [ g_opened_pos ] [ 5 ] = rz ;

				DestroyDynamicObject ( gate_info [ gates_count ] [ g_object ] ) ;
				gate_info [ gates_count ] [ g_object ] = CreateDynamicObject ( GetPVarInt ( playerid, "gate_model" ),
																 gate_info [ gates_count ] [ g_pos ] [ 0 ],
																 gate_info [ gates_count ] [ g_pos ] [ 1 ],
																 gate_info [ gates_count ] [ g_pos ] [ 2 ],
																 gate_info [ gates_count ] [ g_pos ] [ 3 ],
																 gate_info [ gates_count ] [ g_pos ] [ 4 ],
																 gate_info [ gates_count ] [ g_pos ] [ 5 ]) ;
				Streamer_Update ( playerid ) ;

				new sql_string [ 512 ] ;
				format ( sql_string, sizeof ( sql_string ),
				"INSERT INTO `houses_gates` (`g_model`,`g_house`,`g_select`,`g_pos_0`,`g_pos_1`,`g_pos_2`,`g_pos_3`,`g_pos_4`,`g_pos_5`,`g_o_pos_0`,`g_o_pos_1`,`g_o_pos_2`,`g_o_pos_3`,`g_o_pos_4`,`g_o_pos_5`) VALUES ('%d','%d','%d','%f','%f','%f','%f','%f','%f','%f','%f','%f','%f','%f','%f')",
				GetPVarInt ( playerid, "gate_model" ), gate_info [ gates_count ] [ g_house ], gate_info [ gates_count ] [ g_select ],
				gate_info [ gates_count ] [ g_pos ] [ 0 ],
				gate_info [ gates_count ] [ g_pos ] [ 1 ],
				gate_info [ gates_count ] [ g_pos ] [ 2 ],
				gate_info [ gates_count ] [ g_pos ] [ 3 ],
				gate_info [ gates_count ] [ g_pos ] [ 4 ],
				gate_info [ gates_count ] [ g_pos ] [ 5 ],
				gate_info [ gates_count ] [ g_opened_pos ] [ 0 ],
				gate_info [ gates_count ] [ g_opened_pos ] [ 1 ],
				gate_info [ gates_count ] [ g_opened_pos ] [ 2 ],
				gate_info [ gates_count ] [ g_opened_pos ] [ 3 ],
				gate_info [ gates_count ] [ g_opened_pos ] [ 4 ],
				gate_info [ gates_count ] [ g_opened_pos ] [ 5 ] ) ;
				DeletePVar ( playerid, "gate_model" ) ;
				mysql_tquery ( dbHandle, sql_string ) ;

				gates_count ++ ;
				SendInf(playerid, "Ворота установлены" ) ;
				gates_adding = 0 ;
			}
			else if(response == EDIT_RESPONSE_CANCEL)
			{
				DestroyDynamicObject ( gate_info [ gates_count ] [ g_object ] ) ;
				gates_adding = 0 ;
				SendErr(playerid, "Создание ворот отменено" ) ;
			}
		}
	}
    if(GetPVarInt(playerid, "LoadATM") > 0 || GetPVarInt(playerid, "LoadSprunk") > 0)
	{
		if(!objectid)
		{
			if(!IsValidDynamicObject(objectid)) return 1;
			MoveDynamicObject(objectid, x, y, z, 10.0, rx, ry, rz);
		}
		if(response == EDIT_RESPONSE_FINAL)
		{
		    if(GetPVarInt(playerid, "LoadATM"))
		    {
				TOTALATM++;
				ATMInfo[TOTALATM][aX] = x;
				ATMInfo[TOTALATM][aY] = y;
				ATMInfo[TOTALATM][aZ] = z;
				ATMInfo[TOTALATM][arX] = rx;
				ATMInfo[TOTALATM][arY] = ry;
				ATMInfo[TOTALATM][arZ] = rz;
				SendClientMessage(playerid,COLOR_YELLOW,"ИНФО: Вы установили банкомат");
				DestroyDynamicObject(GetPVarInt(playerid, "LoadATM")-1);
				
				ATM[TOTALATM] = CreateDynamicObject(2942, x, y, z, rx, ry, rz);
				LABELATM[TOTALATM] = CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите ALT", 0xFFFFFFFF, ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ]+1.1,10.0);
				
				DeletePVar(playerid, "LoadATM");
				CancelEdit(playerid);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"INSERT INTO "T_ATM" (ID, aX, aY, aZ, arX, arY, arZ) VALUES (%i,'%f','%f','%f','%f', '%f', '%f')",
				TOTALATM,ATMInfo[TOTALATM][aX],ATMInfo[TOTALATM][aY],ATMInfo[TOTALATM][aZ], ATMInfo[TOTALATM][arX], ATMInfo[TOTALATM][arY], ATMInfo[TOTALATM][arZ]);
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			}
			if(GetPVarInt(playerid, "LoadSprunk"))
		    {
				TOTALSPRUNK++;
				SPRInfo[TOTALSPRUNK][aX] = x;
				SPRInfo[TOTALSPRUNK][aY] = y;
				SPRInfo[TOTALSPRUNK][aZ] = z;
				SPRInfo[TOTALSPRUNK][arX] = rx;
				SPRInfo[TOTALSPRUNK][arY] = ry;
				SPRInfo[TOTALSPRUNK][arZ] = rz;
				SendClientMessage(playerid,COLOR_YELLOW,"ИНФО: Вы установили автомат с газировкой");
				DestroyDynamicObject(GetPVarInt(playerid, "LoadSprunk")-1);

				SPR[TOTALSPRUNK] = CreateDynamicObject(10012, x, y, z, rx, ry, rz);
				LABELSPR[TOTALSPRUNK] = CreateDynamic3DTextLabel("Использовать\n{f0e86b}Нажмите ALT", 0xFFFFFFFF, SPRInfo[TOTALSPRUNK][aX], SPRInfo[TOTALSPRUNK][aY], SPRInfo[TOTALSPRUNK][aZ]+2.0,10.0);

				DeletePVar(playerid, "LoadSprunk");
				CancelEdit(playerid);

				STRING_GLOBAL[0] = EOS;
				format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"INSERT INTO "T_SPRUNK" (ID, aX, aY, aZ, arX, arY, arZ) VALUES (%i,'%f','%f','%f','%f', '%f', '%f')",
				TOTALSPRUNK,SPRInfo[TOTALSPRUNK][aX],SPRInfo[TOTALSPRUNK][aY],SPRInfo[TOTALSPRUNK][aZ], SPRInfo[TOTALSPRUNK][arX], SPRInfo[TOTALSPRUNK][arY], SPRInfo[TOTALSPRUNK][arZ]);
				mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
			}
		}
		if(response == EDIT_RESPONSE_CANCEL)
		{
		    if(GetPVarInt(playerid, "LoadATM"))
		    {
				DeletePVar(playerid, "LoadATM");
				SendClientMessage(playerid, COLOR_RED, "Установка банкомата отменена");
				DestroyDynamicObject(GetPVarInt(playerid, "LoadATM")-1);
				CancelEdit(playerid);
			}
			if(GetPVarInt(playerid, "LoadSprunk"))
		    {
				DeletePVar(playerid, "LoadSprunk");
				SendClientMessage(playerid, COLOR_RED, "Установка автомата с газировкой отменена");
				DestroyDynamicObject(GetPVarInt(playerid, "LoadSprunk")-1);
				CancelEdit(playerid);
			}
		}
		return 1;
	}
    /*if(objectid == br_player[playerid][br_object_text][0] && br_player[playerid][br_object_text][0] != INVALID_OBJECT)
	{
	    if(response == EDIT_RESPONSE_FINAL)
	    {
	        MoveDynamicObject ( br_player[playerid][br_object_text][0] , x , y , z , 15.0, 0.0 , 0.0 , rz ) ;

			if(blocktext[playerid] == Text3D:-1)
			{
				format(STRING_GLOBAL, 128, "Табличку установил: {AFAFAF}%s [%d]", GetName(playerid), playerid);
        		blocktext[playerid] = CreateDynamic3DTextLabel(STRING_GLOBAL, -1, x, y, z + 1.5, 3.0, GetPlayerVirtualWorld(playerid));
			}

			if(br_player[playerid][br_object_text][1] == INVALID_OBJECT)
			{
		     	br_player[playerid][br_object_text][1] = CreateDynamicObject(19477,x - 0.05 * floatsin(-rz, degrees), y - 0.05 * floatcos(-rz, degrees), z + 2.6, 0.000, 0.000, rz - 90.0);
				SetDynamicObjectMaterialText(br_player[playerid][br_object_text][1], 0, br_player[playerid][br_text],  120, "Ariel", 33, 1, -8943463, 0 , 1 );
				br_player[playerid][br_text][0] = EOS;
			}

			Streamer_Update(playerid);
		}
		else if(response == EDIT_RESPONSE_CANCEL)
		{
		  	if(blocktext[playerid] != Text3D:-1)
			{
		        DestroyDynamic3DTextLabel(blocktext[playerid]);

		        blocktext[playerid] = Text3D:-1;
			}
		    if(br_player[playerid][br_object_text][0] != INVALID_OBJECT)
		    {
			    DestroyDynamicObject(br_player[playerid][br_object_text][0]);
			    br_player[playerid][br_object_text][0] = INVALID_OBJECT;
		    }
		    br_player[playerid][br_text][0] = EOS;
		}
	}*/
	return 1 ;
}

stock SetVehicleSpeed(vehicleid, Float:speed)
{
    new Float:_v_velocity[4];
    GetVehicleZAngle(vehicleid, _v_velocity[0] ) ;
    GetVehicleVelocity(vehicleid, _v_velocity[1], _v_velocity[2], _v_velocity[3] ) ;
    SetVehicleVelocity(vehicleid, floatsin(-_v_velocity[0],degrees)*(speed/99), floatcos(-_v_velocity[0],degrees)*(speed/99), _v_velocity[3] ) ;
    return 1;
}

stock GetVehicleRotation(vehicleid,&Float:rx,&Float:ry,&Float:rz){
	new Float:qw,Float:qx,Float:qy,Float:qz;
	GetVehicleRotationQuat(vehicleid,qw,qx,qy,qz ) ;
	rx = asin(2*qy*qz-2*qx*qw ) ;
	ry = -atan2(qx*qz+qy*qw,0.5-qx*qx-qy*qy ) ;
	rz = -atan2(qx*qy+qz*qw,0.5-qx*qx-qz*qz ) ;
}

stock IsVehicleDrivingBackwards ( vehicleid )
{
    new Float:float_var [ 3 ] ; 
    if(GetVehicleVelocity(vehicleid, float_var [ 1 ], float_var [ 2 ], float_var [ 0 ] ) )
	{ 
        GetVehicleZAngle ( vehicleid, float_var[0] ) ; 
        if(float_var[0] < 90) { 
            if(float_var[1] > 0 && float_var[2] < 0) return 1;
        } 
        else if(float_var[0] < 180) { 
            if(float_var[1] > 0 && float_var[2] > 0) return 1;
        } 
        else if(float_var[0] < 270) { 
            if(float_var[1] < 0 && float_var[2] > 0) return 1;
        } 
        else if(float_var[1] < 0 && float_var[2] < 0) return 1;
    } 
    return 0;
} 

stock GetVehicleSpeed ( vehicleid )
{
    new Float:X, Float:Y, Float:Z, Float:_speed;
    GetVehicleVelocity(vehicleid, X, Y, Z ) ;
    _speed = ( (floatsqroot( (X*X) + (Y*Y) )*10) / 1.65 ) * 30;
    return floatround ( _speed, floatround_round ) ;
}

CMD:setcars(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 9) return 1;
	if(sscanf(params, "i", params[0])) SendInf(playerid, "/setcars [id]");

	VehInfo [ params[0] ] [ vPos_X ] = 0;
	VehInfo [ params[0] ] [ vPos_Y ] = 0;
	VehInfo [ params[0] ] [ vPos_Z ] = 0;
	VehInfo [ params[0] ] [ vPos_FA ] = 0;
	
	SetVehiclePos(params[0], VehInfo [ params[0] ] [ vPos_X ], VehInfo [ params[0] ] [ vPos_Y ], VehInfo [ params[0] ] [ vPos_Z ]);
	
	new sql_string[300];
	mysql_format(dbHandle, sql_string, 300, "UPDATE "T_VEHICLE" SET `x` = '0',`y` = '0',`z` = '0',`fa` = '0' WHERE `id` = '%d'", params[0] );
	mysql_query ( dbHandle, sql_string ) ;
	SendInf(playerid, "Вы успешно удалили транспорт с сервера");
	return 1;
}

CMD:setpos(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 9) return 1;
	if(sscanf(params, "ii", params[0], params[1]))
	{
		SendInf(playerid, "/setpos [параметр] [id]");
		SendErr(playerid, "Параметры: 1 - подъезд, 2 - бизнес, 3 - дом");
		return 1;
	}
	new Float:X_pos, Float:Y_pos, Float:Z_pos;
	if(params[0] == 1)
	{
		DestroyDynamicPickup(PodezdInfo[params[1]][poPickup]);
		DestroyDynamicArea(PodezdInfo[params[1]][poSphereEnter]);

	    GetPlayerPos(playerid, X_pos, Y_pos, Z_pos);

	    PodezdInfo[params[1]][poX] = X_pos;
	    PodezdInfo[params[1]][poY] = Y_pos;
	    PodezdInfo[params[1]][poZ] = Z_pos;
	
	    PodezdInfo[params[1]][poSphereEnter] = CreateDynamicSphere(PodezdInfo[params[1]][poX], PodezdInfo[params[1]][poY], PodezdInfo[params[1]][poZ], 1.2, 0, 0);
		PodezdInfo[params[1]][poPickup] = CreateDynamicPickup(19133, 1, PodezdInfo[params[1]][poX], PodezdInfo[params[1]][poY], PodezdInfo[params[1]][poZ], 0);
		
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"UPDATE "T_PODEZD" SET poX = '%f', poY = '%f', poZ = '%f' WHERE idpodezd = '%d'",
		PodezdInfo[params[1]][poX],PodezdInfo[params[1]][poY],PodezdInfo[params[1]][poZ] , params[1]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(params[0] == 2)
	{
	    DestroyDynamicMapIcon(BizzInfo[params[1]][bIcon]);
		DestroyDynamicPickup(BizzInfo[params[1]][bPickup]);
		DestroyDynamic3DTextLabel(LABELBIZZ[params[1]]);
		DestroyDynamicArea(BizzInfo[params[1]][bArea]);

	    GetPlayerPos(playerid, X_pos, Y_pos, Z_pos);
	
	    BizzInfo[params[1]][bEntrx] = X_pos;
	    BizzInfo[params[1]][bEntry] = Y_pos;
	    BizzInfo[params[1]][bEntrz] = Z_pos;
	
	    BizzInfo[params[1]][bIcon] = CreateDynamicMapIcon(BizzInfo[params[1]][bEntrx],BizzInfo[params[1]][bEntry],BizzInfo[params[1]][bEntrz], BizzInfo[params[1]][bMIcon], 0,-1,-1,-1,200.0);

		if(BizzInfo[params[1]][bType] != 2 && BizzInfo[params[1]][bType] != 7)
		{
			new string[300];
			BizzInfo[params[1]][bArea] = CreateDynamicSphere(BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz], 1.3, BizzInfo[params[1]][bVirtual], -1);
			BizzInfo[params[1]][bPickup] = CreateDynamicPickup(19132,1,BizzInfo[params[1]][bEntrx],BizzInfo[params[1]][bEntry],BizzInfo[params[1]][bEntrz], 0);
			if(!strcmp(BizzInfo[params[1]][bOwner],"None",true))
			{
				format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[params[1]][bName]);
				LABELBIZZ[params[1]] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
			else
			{
				format(string, sizeof(string), ">> %s <<\n\n{f0e86b}ALT{FFFFFF} - войти в бизнес", BizzInfo[params[1]][bName]);
				LABELBIZZ[params[1]] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
		}
		else if(BizzInfo[params[1]][bType] == 2)
		{
			new string[300];
			if(!strcmp(BizzInfo[params[1]][bOwner],"None",true))
			{
				format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[params[1]][bName]);
				LABELBIZZ[params[1]] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				CreateDynamicPickup(1650,1,BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz]+0.7);
			}
			else
			{
				format(string, sizeof(string), ">> %s <<\n\n{f0e86b}H{FFFFFF} - Меню АЗС\n{FFFFFF}Цена за 1 литр бензина: {f0e86b}%i{FFFFFF} рублей", BizzInfo[params[1]][bName], BizzInfo[params[1]][bTill]*WorkSalary[15]);
				LABELBIZZ[params[1]] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID);
				CreateDynamicPickup(1650,1,BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz]+0.7);
			}
		}
		else if(BizzInfo[params[1]][bType] == 7)
		{
			new string[300];
			if(!strcmp(BizzInfo[params[1]][bOwner],"None",true))
			{
				format(string, sizeof(string), ">> %s <<\n\n{f0e86b}/buybiz{FFFFFF} - купить бизнес", BizzInfo[params[1]][bName]);
				LABELBIZZ[params[1]] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				CreateDynamicPickup(1085,1,BizzInfo[params[1]][bEntrx],BizzInfo[params[1]][bEntry],BizzInfo[params[1]][bEntrz]);
			}
			else
			{
				format(string, sizeof(string), ">> %s <<\n\n{f0e86b}H{FFFFFF} - Заехать в СТО", BizzInfo[params[1]][bName]);
				LABELBIZZ[params[1]] = CreateDynamic3DTextLabel(string,0x18BA28FF,BizzInfo[params[1]][bEntrx], BizzInfo[params[1]][bEntry], BizzInfo[params[1]][bEntrz]+0.7,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
				CreateDynamicPickup(1085,1,BizzInfo[params[1]][bEntrx],BizzInfo[params[1]][bEntry],BizzInfo[params[1]][bEntrz]);
			}
		}
		
		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"UPDATE "T_BIZZ" SET x = '%f', y = '%f', z = '%f' WHERE id = '%d'",
		BizzInfo[params[1]][bEntrx],BizzInfo[params[1]][bEntry],BizzInfo[params[1]][bEntrz] , params[1]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	if(params[0] == 3)
	{
	    DestroyDynamicMapIcon(HouseInfo[params[1]][hMIcon]);
		DestroyDynamicPickup(HouseInfo[params[1]][hPickup]);
		DestroyDynamicArea(HouseInfo[params[1]][hArea]);
	
	    GetPlayerPos(playerid, X_pos, Y_pos, Z_pos);
	
	    HouseInfo[params[1]][hEntrx] = X_pos;
	    HouseInfo[params[1]][hEntry] = Y_pos;
	    HouseInfo[params[1]][hEntrz] = Z_pos;
	    HouseInfo[params[1]][hMIcon] = CreateDynamicMapIcon(HouseInfo[params[1]][hEntrx], HouseInfo[params[1]][hEntry], HouseInfo[params[1]][hEntrz], 31, 0,-1,-1,-1,150.0);
		HouseInfo[params[1]][hPickup] = CreateDynamicPickup(1273,1, HouseInfo[params[1]][hEntrx], HouseInfo[params[1]][hEntry], HouseInfo[params[1]][hEntrz], 0);
        HouseInfo[params[1]][hArea] = CreateDynamicSphere(HouseInfo[params[1]][hEntrx], HouseInfo[params[1]][hEntry], HouseInfo[params[1]][hEntrz], 1.3, HouseInfo[params[1]][hVirtual], -1);

		STRING_GLOBAL[0] = EOS;
		format(STRING_GLOBAL,sizeof(STRING_GLOBAL),"UPDATE "T_HOUSE" SET hEntrx = '%f', hEntry = '%f', hEntrz = '%f' WHERE id = '%d'",
		HouseInfo[params[1]][hEntrx],HouseInfo[params[1]][hEntry],HouseInfo[params[1]][hEntrz] , params[1]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	return 1;
}

stock CreateCasinoTD(playerid)
{
	dice_ptd [ playerid ] [ 0 ] = CreatePlayerTextDraw(playerid, 467.000000, 167.000000, "LD_SPAC:WHITE" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 0 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 0 ], 4 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 0 ], 0.500000, 1.000000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 0 ], 488514303 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 0 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 0 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 0 ], 1 ) ;
	PlayerTextDrawUseBox(playerid, dice_ptd [ playerid ] [ 0 ], 1 ) ;
	PlayerTextDrawBoxColor(playerid, dice_ptd [ playerid ] [ 0 ], 558012159 ) ;
	PlayerTextDrawTextSize(playerid, dice_ptd [ playerid ] [ 0 ], 124.000000, 168.000000 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 0 ], 0 ) ;

	dice_ptd [ playerid ] [ 1 ] = CreatePlayerTextDraw(playerid, 463.000000, 162.000000, "LD_SPAC:WHITE" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 1 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 1 ], 4 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 1 ], 0.500000, 1.000000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 1 ], 927687935 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 1 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 1 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 1 ], 1 ) ;
	PlayerTextDrawUseBox(playerid, dice_ptd [ playerid ] [ 1 ], 1 ) ;
	PlayerTextDrawBoxColor(playerid, dice_ptd [ playerid ] [ 1 ], 558012159 ) ;
	PlayerTextDrawTextSize(playerid, dice_ptd [ playerid ] [ 1 ], 132.000000, 22.000000 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 1 ], 0 ) ;

	new table [ 14 ] ;
	if(GetPVarInt(playerid,"Stol")==1)table="dice table 1";
	else if(GetPVarInt(playerid,"Stol")==2)table="dice table 2";
	else if(GetPVarInt(playerid,"Stol")==3)table="dice table 3";
	else if(GetPVarInt(playerid,"Stol")==4)table="dice table 4";

	dice_ptd [ playerid ] [ 2 ] = CreatePlayerTextDraw(playerid, 494.000000, 166.000000, table ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 2 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 2 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 2 ], 0.300000, 1.400000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 2 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 2 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 2 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 2 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 2 ], 0 ) ;

	new Player1[30],Player2[30],Player3[30],Player4[30],Player5[30];

    if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]==INVALID_PLAYER_ID){
		if(GetPVarInt(playerid,"krup")==0)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]=playerid,SetPVarInt(playerid,"Mesto",1),format(Player1,sizeof(Player1),"1. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]][pName] ) ;
		//else if(p_info[playerid][pCasino]!=0&&p_info[playerid][pRank]!=2)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]=playerid,SetPVarInt(playerid,"Mesto",1),format(Player1,sizeof(Player1),"1. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]][name] ) ;
		else if(GetPVarInt(playerid,"krup")==1)format(Player1,sizeof(Player1),"1. -----" ) ;
	}
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]!=playerid)format(Player1,sizeof(Player1),"1. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]][pName] ) ;
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]==INVALID_PLAYER_ID)format(Player1,sizeof(Player1),"1. -----" ) ;

	if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]==INVALID_PLAYER_ID&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]!=playerid){
		if(GetPVarInt(playerid,"krup")==0)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]=playerid,SetPVarInt(playerid,"Mesto",2),format(Player2,sizeof(Player2),"2. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]][pName] ) ;
		//else if(p_info[playerid][pCasino]!=0&&p_info[playerid][pRank]!=2)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]=playerid,SetPVarInt(playerid,"Mesto",2),format(Player2,sizeof(Player2),"2. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]][name] ) ;
        else if(GetPVarInt(playerid,"krup")==1)format(Player2,sizeof(Player2),"2. -----" ) ;
	}
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]!=INVALID_PLAYER_ID)format(Player2,sizeof(Player2),"2. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]][pName] ) ;
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]==INVALID_PLAYER_ID)format(Player2,sizeof(Player2),"2. -----" ) ;

	if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]==INVALID_PLAYER_ID&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]!=playerid){
		if(GetPVarInt(playerid,"krup")==0)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]=playerid,SetPVarInt(playerid,"Mesto",3),format(Player3,sizeof(Player3),"3. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]][pName] ) ;
		//else if(p_info[playerid][pCasino]!=0&&p_info[playerid][pRank]!=2)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]=playerid,SetPVarInt(playerid,"Mesto",3),format(Player3,sizeof(Player3),"3. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]][name] ) ;
        else if(GetPVarInt(playerid,"krup")==1)format(Player3,sizeof(Player3),"3. -----" ) ;
	}
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]!=INVALID_PLAYER_ID)format(Player3,sizeof(Player3),"3. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]][pName] ) ;
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]==INVALID_PLAYER_ID)format(Player3,sizeof(Player3),"3. -----" ) ;

	if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]==INVALID_PLAYER_ID&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]!=playerid){
		if(GetPVarInt(playerid,"krup")==0)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]=playerid,SetPVarInt(playerid,"Mesto",4),format(Player4,sizeof(Player4),"4. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]][pName] ) ;
		//else if(p_info[playerid][pCasino]!=0&&p_info[playerid][pRank]!=2)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]=playerid,SetPVarInt(playerid,"Mesto",4),format(Player4,sizeof(Player4),"4. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]][name] ) ;
        else if(GetPVarInt(playerid,"krup")==1)format(Player4,sizeof(Player4),"4. -----" ) ;
	}
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]!=INVALID_PLAYER_ID)format(Player4,sizeof(Player4),"4. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]][pName] ) ;
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]==INVALID_PLAYER_ID)format(Player4,sizeof(Player4),"4. -----" ) ;

	if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]==INVALID_PLAYER_ID&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 0 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 1 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 2 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 3 ]!=playerid){
		if(GetPVarInt(playerid,"krup")==0)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]=playerid,SetPVarInt(playerid,"Mesto",5),format(Player5,sizeof(Player5),"5. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]][pName] ) ;
		//else if(p_info[playerid][pCasino]!=0&&p_info[playerid][pRank]!=2)dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]=playerid,SetPVarInt(playerid,"Mesto",5),format(Player5,sizeof(Player5),"5. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]][name] ) ;
        else if(GetPVarInt(playerid,"krup")==1)format(Player5,sizeof(Player5),"5. -----" ) ;
	}
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]!=playerid&&dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]!=INVALID_PLAYER_ID)format(Player5,sizeof(Player5),"5. %s",p_info[dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]][pName] ) ;
	else if(dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_player ][ 4 ]==INVALID_PLAYER_ID)format(Player5,sizeof(Player5),"5. -----" ) ;

	dice_ptd [ playerid ] [ 3 ] = CreatePlayerTextDraw ( playerid, 469.000000, 193.000000, Player1 ) ;
	dice_ptd [ playerid ] [ 4 ] = CreatePlayerTextDraw ( playerid, 469.000000, 208.000000, Player2 ) ;
	dice_ptd [ playerid ] [ 5 ] = CreatePlayerTextDraw ( playerid, 469.000000, 223.000000, Player3 ) ;
	dice_ptd [ playerid ] [ 6 ] = CreatePlayerTextDraw ( playerid, 469.000000, 238.000000, Player4 ) ;
	dice_ptd [ playerid ] [ 7 ] = CreatePlayerTextDraw ( playerid, 469.000000, 253.000000, Player5 ) ;

	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 3 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 3 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 3 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 3 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 3 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 3 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 3 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 3 ], 0 ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 4 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 4 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 4 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 4 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 4 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 4 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 4 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 4 ], 0 ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 5 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 5 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 5 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 5 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 5 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 5 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 5 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 5 ], 0 ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 6 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 6 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 6 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 6 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 6 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 6 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 6 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 6 ], 0 ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 7 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 7 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 7 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 7 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 7 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 7 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 7 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 7 ], 0 ) ;

	dice_ptd [ playerid ] [ 8 ] = CreatePlayerTextDraw(playerid, 581.000000, 193.000000, "0" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 8 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 8 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 8 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 8 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 8 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 8 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 8 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 8 ], 0 ) ;

	dice_ptd [ playerid ] [ 9 ] = CreatePlayerTextDraw(playerid, 581.000000, 208.000000, "0" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 9 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 9 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 9 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 9 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 9 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 9 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 9 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 9 ], 0 ) ;

	dice_ptd [ playerid ] [ 10 ] = CreatePlayerTextDraw(playerid, 581.000000, 223.000000, "0" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 10 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 10 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 10 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 10 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 10 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 10 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 10 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 10 ], 0 ) ;

	dice_ptd [ playerid ] [ 11 ] = CreatePlayerTextDraw(playerid, 581.000000, 238.000000, "0" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 11 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 11 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 11 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 11 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 11 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 11 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 11 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 11 ], 0 ) ;

	dice_ptd [ playerid ] [ 12 ] = CreatePlayerTextDraw(playerid, 581.000000, 253.000000, "0" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 12 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 12 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 12 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 12 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 12 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 12 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 12 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 12 ], 0 ) ;

	new string [ 42 ] ;
	format ( string, sizeof ( string ), "СТАВКА: %d РУБ~n~БАНК: %d РУБ", dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_bet ], dice_info [ GetPVarInt(playerid,"Stol")-1 ] [ b_bank ] ) ;

	dice_ptd [ playerid ] [ 13 ] = CreatePlayerTextDraw(playerid, 469.000000, 268.000000, string ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 13 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 13 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 13 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 13 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 13 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 13 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 13 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 13 ], 0 ) ;

	dice_ptd [ playerid ] [ 14 ] = CreatePlayerTextDraw(playerid, 474.000000, 294.000000, "LD_SPAC:WHITE" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 14 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 14 ], 4 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 14 ], 0.500000, 1.000000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 14 ], 656879615 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 14 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 14 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 14 ], 1 ) ;
	PlayerTextDrawUseBox(playerid, dice_ptd [ playerid ] [ 14 ], 1 ) ;
	PlayerTextDrawBoxColor(playerid, dice_ptd [ playerid ] [ 14 ], 558012159 ) ;
	PlayerTextDrawTextSize(playerid, dice_ptd [ playerid ] [ 14 ], 52.000000, 16.000000 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 14 ], 1 ) ;

	dice_ptd [ playerid ] [ 15 ] = CreatePlayerTextDraw(playerid, 530.000000, 294.000000, "LD_SPAC:WHITE" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 15 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 15 ], 4 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 15 ], 0.500000, 1.000000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 15 ], 656879615 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 15 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 15 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 15 ], 1 ) ;
	PlayerTextDrawUseBox(playerid, dice_ptd [ playerid ] [ 15 ], 1 ) ;
	PlayerTextDrawBoxColor(playerid, dice_ptd [ playerid ] [ 15 ], 558012159 ) ;
	PlayerTextDrawTextSize(playerid, dice_ptd [ playerid ] [ 15 ], 52.000000, 16.000000 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 15 ], 1 ) ;

	dice_ptd [ playerid ] [ 16 ] = CreatePlayerTextDraw(playerid, 488.000000, 296.000000, "set bet" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 16 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 16 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 16 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 16 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 16 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 16 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 16 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 16 ], 0 ) ;

	dice_ptd [ playerid ] [ 17 ] = CreatePlayerTextDraw(playerid, 549.000000, 296.000000, "dice" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 17 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 17 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 17 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 17 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 17 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 17 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 17 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 17 ], 0 ) ;

	dice_ptd [ playerid ] [ 18 ] = CreatePlayerTextDraw(playerid, 503.000000, 314.000000, "LD_SPAC:WHITE" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 18 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 18 ], 4 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 18 ], 0.500000, 1.000000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 18 ], 656879615 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 18 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 18 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 18 ], 1 ) ;
	PlayerTextDrawUseBox(playerid, dice_ptd [ playerid ] [ 18 ], 1 ) ;
	PlayerTextDrawBoxColor(playerid, dice_ptd [ playerid ] [ 18 ], 558012159 ) ;
	PlayerTextDrawTextSize(playerid, dice_ptd [ playerid ] [ 18 ], 52.000000, 16.000000 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 18 ], 1 ) ;

	dice_ptd [ playerid ] [ 19 ] = CreatePlayerTextDraw(playerid, 522.000000, 316.000000, "exit" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 19 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 19 ], 2 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 19 ], 0.170000, 1.100000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 19 ], -1 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 19 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 19 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 19 ], 1 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 19 ], 0 ) ;

	dice_ptd [ playerid ] [ 20 ] = CreatePlayerTextDraw(playerid, 474.000000, 294.000000, "LD_SPAC:WHITE" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 20 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 20 ], 4 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 20 ], 0.500000, 1.000000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 20 ], 927687935 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 20 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 20 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 20 ], 1 ) ;
	PlayerTextDrawUseBox(playerid, dice_ptd [ playerid ] [ 20 ], 1 ) ;
	PlayerTextDrawBoxColor(playerid, dice_ptd [ playerid ] [ 20 ], 558012159 ) ;
	PlayerTextDrawTextSize(playerid, dice_ptd [ playerid ] [ 20 ], 4.000000, 16.000000 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 20 ], 0 ) ;

	dice_ptd [ playerid ] [ 21 ] = CreatePlayerTextDraw(playerid, 530.000000, 294.000000, "LD_SPAC:WHITE" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 21 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 21 ], 4 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 21 ], 0.500000, 1.000000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 21 ], 927687935 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 21 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 21 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 21 ], 1 ) ;
	PlayerTextDrawUseBox(playerid, dice_ptd [ playerid ] [ 21 ], 1 ) ;
	PlayerTextDrawBoxColor(playerid, dice_ptd [ playerid ] [ 21 ], 558012159 ) ;
	PlayerTextDrawTextSize(playerid, dice_ptd [ playerid ] [ 21 ], 4.000000, 16.000000 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 21 ], 0 ) ;

	dice_ptd [ playerid ] [ 22 ] = CreatePlayerTextDraw(playerid, 503.000000, 314.000000, "LD_SPAC:WHITE" ) ;
	PlayerTextDrawBackgroundColor(playerid, dice_ptd [ playerid ] [ 22 ], 0 ) ;
	PlayerTextDrawFont(playerid, dice_ptd [ playerid ] [ 22 ], 4 ) ;
	PlayerTextDrawLetterSize(playerid, dice_ptd [ playerid ] [ 22 ], 0.500000, 1.000000 ) ;
	PlayerTextDrawColor(playerid, dice_ptd [ playerid ] [ 22 ], 927687935 ) ;
	PlayerTextDrawSetOutline(playerid, dice_ptd [ playerid ] [ 22 ], 0 ) ;
	PlayerTextDrawSetProportional(playerid, dice_ptd [ playerid ] [ 22 ], 1 ) ;
	PlayerTextDrawSetShadow(playerid, dice_ptd [ playerid ] [ 22 ], 1 ) ;
	PlayerTextDrawUseBox(playerid, dice_ptd [ playerid ] [ 22 ], 1 ) ;
	PlayerTextDrawBoxColor(playerid, dice_ptd [ playerid ] [ 22 ], 558012159 ) ;
	PlayerTextDrawTextSize(playerid, dice_ptd [ playerid ] [ 22 ], 4.000000, 16.000000 ) ;
	PlayerTextDrawSetSelectable(playerid, dice_ptd [ playerid ] [ 22 ], 0 ) ;

	for ( new i = 0 ; i < 23 ; i ++ )PlayerTextDrawShow(playerid, dice_ptd [ playerid ] [ i ] ) ;

	SelectTextDraw(playerid, 0xB0C4DEFF ) ;
	return 1;
}

stock ExitBone(playerid)
{
	new null[2] = 0;
	if(GetPVarInt(playerid,"InGame") && dice_info[GetPVarInt(playerid,"Stol")-1][b_started] <= 0)
	{
		GiveMoney ( playerid, dice_info[GetPVarInt(playerid,"Stol")-1][b_bet], "Вышел с костей" ) ;
		dice_info[GetPVarInt(playerid,"Stol")-1][b_bank]-=dice_info[GetPVarInt(playerid,"Stol")-1][b_bet];
	}
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"Stol") == GetPVarInt(playerid,"Stol") && i != playerid && GetPVarInt(i,"InGame") == 1) null[0]++;
		if(GetPVarInt(i,"Stol") == GetPVarInt(playerid,"Stol") && i != playerid && GetPVarInt(i,"InGame") > 1) null[1]++;
	}
	if(null[0] == 0 && null[1] > 0) ShowItog(GetPVarInt(playerid,"Stol")-1 ) ;
	if(dice_info[GetPVarInt(playerid,"Stol")-1][b_crupie] == playerid) dice_info[GetPVarInt(playerid,"Stol")-1][b_crupie] = INVALID_PLAYER_ID;
	for(new i_ = 0; i_ != 5; i_++) if(dice_info[GetPVarInt(playerid,"Stol")-1][ b_player ][i_] == playerid) dice_info[GetPVarInt(playerid,"Stol")-1][ b_player ][i_] = INVALID_PLAYER_ID;
	UpdateBone(GetPVarInt(playerid,"Stol")-1 ) ;

	for ( new i = 0 ; i < 23 ; i ++ )
	{
		PlayerTextDrawDestroy ( playerid, dice_ptd [ playerid ] [ i ] ) ;
		dice_ptd [ playerid ] [ i ] = PlayerText:-1 ;
	}
	DeletePVar ( playerid,"Stol" ) ;
	DeletePVar ( playerid,"InGame" ) ;
	CancelSelectTextDraw ( playerid ) ;
	return 1 ;
}

stock UpdateBone(idx)
{
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"Stol") - 1 == idx)
		{
			new td_str [ 42 ] ;
			format ( td_str, sizeof ( td_str ), "СТАВКА: %d РУБ~n~БАНК: %d РУБ", dice_info [ GetPVarInt(i,"Stol")-1 ] [ b_bet ], dice_info [ GetPVarInt(i,"Stol")-1 ] [ b_bank ] ) ;
			PlayerTextDrawSetString ( i, dice_ptd [ i ] [ 13 ], td_str ) ;

			for ( new i_ = 0; i_ < 5; i_ ++ )
			{
				if ( dice_info [ idx ] [ b_player ][i_] != INVALID_PLAYER_ID )
				{
					format ( td_str,sizeof( td_str ),"%d. %s", i_ + 1, p_info [ dice_info [ idx ] [ b_player ] [ i_ ] ] [ pName ] ) ;
					PlayerTextDrawSetString ( i, dice_ptd [ i ] [ i_ + 3 ], td_str ) ;

					new in_game_stat = GetPVarInt ( dice_info [ idx ] [ b_player ][i_], "InGame" ) ;
					if ( in_game_stat > 1 )
					{
						format ( td_str,sizeof( td_str ),"%d", in_game_stat ) ;
						PlayerTextDrawSetString ( i, dice_ptd [ i ] [ i_ + 8 ], td_str ) ;
					}
					else PlayerTextDrawSetString ( i, dice_ptd [ i ] [ i_ + 8 ], "0" ) ;
				}
				else
				{
					format ( td_str,sizeof( td_str ),"%d. -----", i_ + 1 ) ;
					PlayerTextDrawSetString ( i, dice_ptd [ i ] [ i_ + 3 ], td_str ) ;

					PlayerTextDrawSetString ( i, dice_ptd [ i ] [ i_ + 8 ], "0" ) ;
				}
			}
		}
	}
	return 1;
}

stock ShowItog(idx)
{
	new itog [ 3 ] = -1 ;

	itog[0] = -1; itog[1] = -1; itog[2] = -1;
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"Stol")-1 == idx && GetPVarInt(i,"InGame") > 1 && GetPVarInt(i,"InGame") > itog[0]) itog[0] = GetPVarInt(i,"InGame"), itog[1] = i;
		if(GetPVarInt(i,"Stol")-1 == idx && GetPVarInt(i,"InGame") > 1 && i != itog[1] && GetPVarInt(i,"InGame") == itog[0]) itog[2] = i;
	}
	if(itog[2] > -1)
	{
		foreach(new i: Player)
		{
			if(GetPVarInt(i,"Stol")-1 == idx && GetPVarInt(i,"InGame") > 1 && GetPVarInt(i,"InGame") == itog[0]) SetPVarInt(i,"InGame",1), dice_info[idx][b_started] = 30, SendInf(i, "Вы попали в следующий раунд. У вас есть 30 секунд, чтобы бросить кости" ) ;
			else if(GetPVarInt(i,"Stol")-1 == idx) DeletePVar(i,"InGame" ) ;
		}
		UpdateBone(idx ) ;
	}
	else if(itog[1] > -1 && dice_info[idx][b_bank] > 0 )
	{
		new  string [ 100 + MAX_PLAYER_NAME ], strings [ 100 + MAX_PLAYER_NAME ] ;
		format ( string, sizeof ( string ), "%s побеждает. Количество очков: %i. Банк составил: {f0e86b}%d{FFFFFF} рублей", p_info [ itog [ 1 ] ] [ pName ], itog [ 0 ], dice_info[idx][b_bank] ) ;
		if(dice_info[idx][b_crupie] != INVALID_PLAYER_ID)
		{
		    format ( strings, sizeof ( strings ), "Вы забрали свой процент в размере: {f0e86b}%d{FFFFFF} рублей", dice_info[idx][b_bank]/100 ) ;
			SendInf ( dice_info[idx][b_crupie], strings ) ;
			GiveMoney(dice_info[idx][b_crupie], dice_info[idx][b_bank]/100, "з/п крупье кости" ) ;
			
			new j = GetPVarInt(dice_info[idx][b_crupie], "PlayerBizz");
			BizzInfo[j][bMoneyHour] +=floatround(dice_info[idx][b_bank]/10);
			BizzPay[j] += floatround(dice_info[idx][b_bank]/10);
			BizzInfo[j][bProduct] -= 10;
			MysqlUpdateBizzInt(j, "bizzpay", BizzPay[j]);
			MysqlUpdateBizzInt(j, "product", BizzInfo[j][bProduct]);
		}

		GiveMoney(itog[1], dice_info[idx][b_bank]-(dice_info[idx][b_bank]/10), "Выйгрыш в кости" ) ;

		dice_info[idx][b_started] = 0 ;
		dice_info[idx][b_bet] = 0;
		dice_info[idx][b_bank] = 0;

		foreach ( new i:Player)
		{
			if(GetPVarInt(i,"Stol")-1 == idx)
			{
				SendInf ( i, string ) ;
				DeletePVar ( i, "InGame" ) ;
				UpdateBone ( idx ) ;
			}
			if ( GetPVarInt ( i, "Stol" )-1 == idx && IsPlayerNearDice ( i ) != idx )
			{
				if(GetPVarInt(i,"InGame") && dice_info[GetPVarInt(i,"Stol")-1][b_started] <= 0)
				{
					GiveMoney(i, dice_info[GetPVarInt(i,"Stol")-1][b_bet], "Вйгрыш в кости" ) ;
					dice_info[GetPVarInt(i,"Stol")-1][b_bank] -= dice_info[GetPVarInt(i,"Stol")-1][b_bet];
				}
				if(dice_info[GetPVarInt(i,"Stol")-1][b_crupie] == i)
				{
					dice_info[GetPVarInt(i,"Stol")-1][b_crupie] = INVALID_PLAYER_ID;
				}
				for(new i_ = 0; i_ != 5; i_++) if(dice_info[GetPVarInt(i,"Stol")-1][ b_player ][i_] == i) dice_info[GetPVarInt(i,"Stol")-1][ b_player ][i_] = INVALID_PLAYER_ID;
				UpdateBone(GetPVarInt(i,"Stol")-1 ) ;

				for(new j = 0; j < 23; j++)
				{
					PlayerTextDrawDestroy(i, dice_ptd [ i ] [ j ] ) ;
					dice_ptd [ i ] [ j ] = PlayerText:-1 ;
				}
				DeletePVar(i,"Stol" ) ;
				DeletePVar(i,"InGame" ) ;
				CancelSelectTextDraw(i ) ;
			}
		}
	}
	return 1;
}

stock IsPlayerNearDice ( playerid )
{
	for ( new i ; i < sizeof ( dice_positions ) ; i ++ ) if ( IsPlayerInRangeOfPoint ( playerid, 2.0, dice_positions [ i ] [ 0 ], dice_positions [ i ] [ 1 ], dice_positions [ i ] [ 2 ] ) ) return i;
	return -1 ;
}

stock cm_status ( playerid, bool:status )
{
	if ( status )
	{
		SetPVarInt ( playerid, "cm_used", 1 ) ;
		cm_ptd [ playerid ] [ 0 ] = CreatePlayerTextDraw(playerid, 165.000000, 82.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 0 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 0 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 0 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 0 ], 488514303 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 0 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 0 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 0 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 0 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 0 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 0 ], 166.000000, 254.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 0 ], 0 ) ;

		cm_ptd [ playerid ] [ 1 ] = CreatePlayerTextDraw(playerid, 336.000000, 82.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 1 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 1 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 1 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 1 ], 488514303 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 1 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 1 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 1 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 1 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 1 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 1 ], 137.000000, 254.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 1 ], 0 ) ;

		for ( new j = 2 ; j < 37 ; j ++ )
		{
			cm_ptd [ playerid ] [ j ] = CreatePlayerTextDraw(playerid, cm_td_pos [ j - 2 ] [ 0 ], cm_td_pos [ j - 2 ] [ 1 ], "LD_SPAC:white" ) ;
			PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ j ], 0 ) ;
			PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ j ], 4 ) ;
			PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ j ], 0.500000, 1.000000 ) ;
			PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ j ], 656879615 ) ;
			PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ j ], 0 ) ;
			PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ j ], 1 ) ;
			PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ j ], 1 ) ;
			PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ j ], 0 ) ;
			PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ j ], 255 ) ;
			PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ j ], 30.000000, 30.000000 ) ;
			PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ j ], 1 ) ;
		}

		cm_ptd [ playerid ] [ 37 ] = CreatePlayerTextDraw(playerid, 392.000000, 310.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 37 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 37 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 37 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 37 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 37 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 37 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 37 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 37 ], 1 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 37 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 37 ], 67.000000, 18.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 37 ], 1 ) ;

		cm_ptd [ playerid ] [ 38 ] = CreatePlayerTextDraw(playerid, 340.000000, 314.000000, "1.20               stop 1.20" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 38 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 38 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 38 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 38 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 38 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 38 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 38 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 38 ], 0 ) ;

		cm_ptd [ playerid ] [ 39 ] = CreatePlayerTextDraw(playerid, 392.000000, 276.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 39 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 39 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 39 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 39 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 39 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 39 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 39 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 39 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 39 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 39 ], 67.000000, 18.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 39 ], 1 ) ;

		cm_ptd [ playerid ] [ 40 ] = CreatePlayerTextDraw(playerid, 340.000000, 280.000000, "1.50               stop 1.50" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 40 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 40 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 40 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 40 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 40 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 40 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 40 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 40 ], 0 ) ;

		cm_ptd [ playerid ] [ 41 ] = CreatePlayerTextDraw(playerid, 392.000000, 242.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 41 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 41 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 41 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 41 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 41 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 41 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 41 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 41 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 41 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 41 ], 67.000000, 18.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 41 ], 1 ) ;

		cm_ptd [ playerid ] [ 42 ] = CreatePlayerTextDraw(playerid, 340.000000, 246.000000, "2.00              stop 2.00" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 42 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 42 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 42 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 42 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 42 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 42 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 42 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 42 ], 0 ) ;

		cm_ptd [ playerid ] [ 43 ] = CreatePlayerTextDraw(playerid, 392.000000, 209.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 43 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 43 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 43 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 43 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 43 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 43 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 43 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 43 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 43 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 43 ], 67.000000, 18.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 43 ], 1 ) ;

		cm_ptd [ playerid ] [ 44 ] = CreatePlayerTextDraw(playerid, 340.000000, 213.000000, "2.50              stop 2.50" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 44 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 44 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 44 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 44 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 44 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 44 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 44 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 44 ], 0 ) ;

		cm_ptd [ playerid ] [ 45 ] = CreatePlayerTextDraw(playerid, 392.000000, 176.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 45 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 45 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 45 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 45 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 45 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 45 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 45 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 45 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 45 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 45 ], 67.000000, 18.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 45 ], 1 ) ;

		cm_ptd [ playerid ] [ 46 ] = CreatePlayerTextDraw(playerid, 340.000000, 180.000000, "3.00              stop 3.00" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 46 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 46 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 46 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 46 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 46 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 46 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 46 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 46 ], 0 ) ;

		cm_ptd [ playerid ] [ 47 ] = CreatePlayerTextDraw(playerid, 392.000000, 143.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 47 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 47 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 47 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 47 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 47 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 47 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 47 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 47 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 47 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 47 ], 67.000000, 18.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 47 ], 1 ) ;

		cm_ptd [ playerid ] [ 48 ] = CreatePlayerTextDraw(playerid, 340.000000, 147.000000, "3.50              stop 3.50" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 48 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 48 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 48 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 48 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 48 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 48 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 48 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 48 ], 0 ) ;

		cm_ptd [ playerid ] [ 49 ] = CreatePlayerTextDraw(playerid, 392.000000, 110.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 49 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 49 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 49 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 49 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 49 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 49 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 49 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 49 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 49 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 49 ], 67.000000, 18.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 49 ], 1 ) ;

		cm_ptd [ playerid ] [ 50 ] = CreatePlayerTextDraw(playerid, 340.000000, 114.000000, "4.50              stop 4.50" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 50 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 50 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 50 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 50 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 50 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 50 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 50 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 50 ], 0 ) ;

		cm_ptd [ playerid ] [ 51 ] = CreatePlayerTextDraw(playerid, 165.000000, 82.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 51 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 51 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 51 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 51 ], 927687935 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 51 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 51 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 51 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 51 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 51 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 51 ], 308.000000, 19.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 51 ], 0 ) ;

		cm_ptd [ playerid ] [ 52 ] = CreatePlayerTextDraw(playerid, 229.000000, 84.000000, "KAMIKAZE" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 52 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 52 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 52 ], 0.267082, 1.540001 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 52 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 52 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 52 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 52 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 52 ], 0 ) ;

		cm_ptd [ playerid ] [ 53 ] = CreatePlayerTextDraw(playerid, 410.000000, 84.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 53 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 53 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 53 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 53 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 53 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 53 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 53 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 53 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 53 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 53 ], 50.000000, 16.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 53 ], 1 ) ;

		cm_ptd [ playerid ] [ 54 ] = CreatePlayerTextDraw(playerid, 424.000000, 87.000000, "exit" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 54 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 54 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 54 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 54 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 54 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 54 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 54 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 54 ], 0 ) ;

		cm_ptd [ playerid ] [ 55 ] = CreatePlayerTextDraw(playerid, 349.000000, 84.000000, "LD_SPAC:white" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 55 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 55 ], 4 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 55 ], 0.500000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 55 ], 656879615 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 55 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 55 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 55 ], 1 ) ;
		PlayerTextDrawUseBox(playerid, cm_ptd [ playerid ] [ 55 ], 0 ) ;
		PlayerTextDrawBoxColor(playerid, cm_ptd [ playerid ] [ 55 ], 255 ) ;
		PlayerTextDrawTextSize(playerid, cm_ptd [ playerid ] [ 55 ], 50.000000, 16.000000 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 55 ], 1 ) ;

		cm_ptd [ playerid ] [ 56 ] = CreatePlayerTextDraw(playerid, 364.000000, 87.000000, "BET" ) ;
		PlayerTextDrawBackgroundColor(playerid, cm_ptd [ playerid ] [ 56 ], 0 ) ;
		PlayerTextDrawFont(playerid, cm_ptd [ playerid ] [ 56 ], 2 ) ;
		PlayerTextDrawLetterSize(playerid, cm_ptd [ playerid ] [ 56 ], 0.270000, 1.000000 ) ;
		PlayerTextDrawColor(playerid, cm_ptd [ playerid ] [ 56 ], -1 ) ;
		PlayerTextDrawSetOutline(playerid, cm_ptd [ playerid ] [ 56 ], 0 ) ;
		PlayerTextDrawSetProportional(playerid, cm_ptd [ playerid ] [ 56 ], 1 ) ;
		PlayerTextDrawSetShadow(playerid, cm_ptd [ playerid ] [ 56 ], 1 ) ;
		PlayerTextDrawSetSelectable(playerid, cm_ptd [ playerid ] [ 56 ], 0 ) ;

		for ( new i = 0 ; i < 57 ; i ++ )PlayerTextDrawShow(playerid, cm_ptd [ playerid ] [ i ] ) ;
		TogglePlayerControllable ( playerid, false ) ;
		SelectTextDraw(playerid, 0xB0C4DEFF ) ;
		roulette_bet [ playerid ] = 0 ;
		roulette_number [ playerid ] = 0 ;
	}
	else
	{
		for ( new i = 0 ; i < 57 ; i ++ )
		{
			PlayerTextDrawDestroy(playerid, cm_ptd [ playerid ] [ i ] ) ;
			cm_ptd [ playerid ] [ i ] = PlayerText:-1 ;
		}
		for ( new i = 57 ; i < 64 ; i ++ )
		{
			if ( cm_ptd [ playerid ] [ i ] != PlayerText:-1 )
			{
				PlayerTextDrawDestroy(playerid, cm_ptd [ playerid ] [ i ] ) ;
				cm_ptd [ playerid ] [ i ] = PlayerText:-1 ;
			}
		}
		TogglePlayerControllable ( playerid, true ) ;
		roulette_bet [ playerid ] = 0 ;
		roulette_number [ playerid ] = -1 ;
		SetPVarInt ( playerid, "cm_used", 0 ) ;
		CancelSelectTextDraw ( playerid ) ;
	}
	return 1 ;
}

forward kamikaze_reset ( playerid );
public kamikaze_reset ( playerid )
{
	for ( new i = 57 ; i < 64 ; i ++ )
	{
		if ( cm_ptd [ playerid ] [ i ] != PlayerText:-1 )
		{
			PlayerTextDrawDestroy(playerid, cm_ptd [ playerid ] [ i ] ) ;
			cm_ptd [ playerid ] [ i ] = PlayerText:-1 ;
		}
	}
	return 1 ;
}

CMD:referals(playerid, params[])
{
	STRING_GLOBAL = "";
    new tName[24], tLevel, RAZ;
    format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "SELECT `name`, `level`, `pRAZ` FROM `accounts` WHERE `referal` = '%s'", GetName(playerid));
	new Cache:result = mysql_query(dbHandle, STRING_GLOBAL);
	new accounts = cache_get_row_count(dbHandle);
	if(accounts == 0) return SendErr(playerid, "Вас никто не указывал, как реферала");
	
	STRING_GLOBAL = "";
    for(new i; i < accounts; i ++)
	{
		cache_get_field_content(i, "name", tName, dbHandle, 32);
		tLevel = cache_get_field_content_int(i, "level", dbHandle);
		RAZ = cache_get_field_content_int(i, "pRAZ", dbHandle);

        if(tLevel < 3) format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}%i. %s - {fcfc00}%d {FFFFFF}level, + {fcfc00}%d{FFFFFF} кредитов\n", STRING_GLOBAL, i+1, tName, tLevel, RAZ);
        else format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s{FFFFFF}%i. %s - {f0e86b}%d level, + {f0e86b}%d{FFFFFF} кредитов\n", STRING_GLOBAL, i+1, tName, tLevel, RAZ);
    }
	cache_delete(result, dbHandle);
    ShowPlayerDialogEx(playerid, D_NULL, 2, "{ebec86}>> Приглашенные игроки", STRING_GLOBAL, "Принять", "");
	return 1;
}

forward MysqlPayAZCheck(playerid, money);
public MysqlPayAZCheck(playerid, money)
{
	new Referal[24], string[256];
	cache_get_row(0, 0, Referal, dbHandle);
	if(strcmp(Referal,"None",false) != 0)
	{
		new refid = GetNameID(Referal);
		if(refid != INVALID_PLAYER_ID && IsPlayerConnected(refid))
		{
			p_info[playerid][pRAZ] += money;
			p_info[refid][pCredits] += money;

			MysqlUpdatePlayerInt(playerid, "pRAZ", p_info[playerid][pRAZ]);
			MysqlUpdatePlayerInt(refid, "credits", p_info[refid][pCredits]);
		}
		else
		{
		    p_info[playerid][pRAZ] += money;
		    MysqlUpdatePlayerInt(playerid, "pRAZ", p_info[playerid][pRAZ]);

			format(string, sizeof(string), "UPDATE `accounts` SET `credits`=`credits`+money WHERE `referal`='%s'", Referal);
			mysql_tquery(dbHandle, string);
		}
	}
	return 1;
}

stock GetNameID(name[])
{
    new ID = INVALID_PLAYER_ID;
	sscanf(name,"u",ID);
	if(IsPlayerConnected(ID)) return ID;
	return INVALID_PLAYER_ID;
}

forward AC_SpawnTimer(playerid);
public AC_SpawnTimer(playerid)
{
	playerSpawn{playerid} = 0;
	playerSpawnTimer[playerid] = 0;
}

stock AC_TogglePlayerSpectating(playerid, type)
{
	if(!type)
	{
	    if(playerSpawnTimer[playerid])
		{
			KillTimer(playerSpawnTimer[playerid]);
			playerSpawnTimer[playerid] = 0;
		}
		playerSpawn{playerid} = 1;
	}
    return TogglePlayerSpectating(playerid, type);
}

stock AC_SpawnPlayer(playerid)
{
	if(GetPlayerVehicleID(playerid))
	{
		new Float:pos_x, Float:pos_y, Float:pos_z;
		GetPlayerPos(playerid, pos_x, pos_y, pos_z);
		SetPlayerPos(playerid, pos_x, pos_y, (pos_z + 2.0));
	}
	if(playerSpawnTimer[playerid])
	{
		KillTimer(playerSpawnTimer[playerid]);
		playerSpawnTimer[playerid] = 0;
	}
	playerSpawn{playerid} = 1;
	return SpawnPlayer(playerid);
}

stock speedometr_status ( playerid, bool:status )
{
	if ( status == true )
	{
		ptd_sp[playerid][0] = CreatePlayerTextDraw(playerid, 484.7380, 415.1671, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][0], 19.0000, 22.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][0], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][0], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][0], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][0], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][0], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][0], 0);

		ptd_sp[playerid][1] = CreatePlayerTextDraw(playerid, 517.0651, 415.1671, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][1], 19.0000, 22.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][1], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][1], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][1], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][1], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][1], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][1], 0);

		ptd_sp[playerid][2] = CreatePlayerTextDraw(playerid, 493.6398, 418.6671, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][2], 33.0000, 15.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][2], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][2], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][2], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][2], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][2], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][2], 0);

		ptd_sp[playerid][3] = CreatePlayerTextDraw(playerid, 468.8080, 369.0837, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][3], 19.0000, 22.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][3], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][3], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][3], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][3], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][3], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][3], 0);

		ptd_sp[playerid][4] = CreatePlayerTextDraw(playerid, 501.1361, 369.0837, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][4], 19.0000, 22.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][4], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][4], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][4], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][4], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][4], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][4], 0);

		ptd_sp[playerid][5] = CreatePlayerTextDraw(playerid, 477.7098, 372.5837, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][5], 33.0000, 15.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][5], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][5], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][5], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][5], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][5], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][5], 0);

		ptd_sp[playerid][6] = CreatePlayerTextDraw(playerid, 485.8424, 373.1666, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][6], -1.2244, 4.0616);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][6], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][6], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][6], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][6], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][6], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][6], 0);

		ptd_sp[playerid][7] = CreatePlayerTextDraw(playerid, 493.8073, 395.9166, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][7], -1.2244, 4.0616);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][7], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][7], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][7], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][7], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][7], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][7], 0);

		ptd_sp[playerid][8] = CreatePlayerTextDraw(playerid, 525.1973, 368.5002, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][8], -1.2244, 4.0616);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][8], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][8], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][8], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][8], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][8], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][8], 0);

		ptd_sp[playerid][9] = CreatePlayerTextDraw(playerid, 532.6939, 390.0833, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][9], -1.2244, 4.0616);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][9], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][9], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][9], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][9], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][9], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][9], 0);

		ptd_sp[playerid][10] = CreatePlayerTextDraw(playerid, 504.1156, 362.0835, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][10], -2.6354, 8.3198);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][10], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][10], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][10], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][10], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][10], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][10], 0);

		ptd_sp[playerid][11] = CreatePlayerTextDraw(playerid, 533.1632, 361.5002, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][11], -2.6354, 8.3198);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][11], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][11], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][11], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][11], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][11], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][11], 0);

		ptd_sp[playerid][12] = CreatePlayerTextDraw(playerid, 512.5490, 361.5002, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][12], -2.6354, 8.3198);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][12], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][12], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][12], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][12], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][12], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][12], 0);

		ptd_sp[playerid][13] = CreatePlayerTextDraw(playerid, 526.6032, 365.5833, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][13], -2.6354, 8.3198);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][13], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][13], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][13], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][13], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][13], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][13], 0);

		ptd_sp[playerid][14] = CreatePlayerTextDraw(playerid, 521.4497, 366.1666, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][14], -2.6354, 8.3198);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][14], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][14], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][14], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][14], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][14], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][14], 0);

		ptd_sp[playerid][15] = CreatePlayerTextDraw(playerid, 525.6649, 374.9165, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][15], -0.5655, 1.9033);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][15], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][15], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][15], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][15], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][15], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][15], 0);

		ptd_sp[playerid][16] = CreatePlayerTextDraw(playerid, 609.5313, 373.1665, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][16], -0.5655, 1.9033);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][16], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][16], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][16], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][16], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][16], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][16], 0);

		ptd_sp[playerid][17] = CreatePlayerTextDraw(playerid, 521.2802, 383.0834, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][17], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][17], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][17], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][17], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][17], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][17], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][17], 0);

		ptd_sp[playerid][18] = CreatePlayerTextDraw(playerid, 518.0006, 373.1664, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][18], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][18], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][18], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][18], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][18], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][18], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][18], 0);

		ptd_sp[playerid][19] = CreatePlayerTextDraw(playerid, 601.3983, 383.0834, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][19], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][19], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][19], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][19], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][19], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][19], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][19], 0);

		ptd_sp[playerid][20] = CreatePlayerTextDraw(playerid, 598.1187, 373.1668, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][20], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][20], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][20], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][20], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][20], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][20], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][20], 0);

		ptd_sp[playerid][21] = CreatePlayerTextDraw(playerid, 522.6857, 374.9166, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][21], 81.0000, 13.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][21], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][21], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][21], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][21], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][21], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][21], 0);

		ptd_sp[playerid][22] = CreatePlayerTextDraw(playerid, 525.0286, 379.5834, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][22], 81.0000, 13.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][22], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][22], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][22], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][22], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][22], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][22], 0);

		ptd_sp[playerid][23] = CreatePlayerTextDraw(playerid, 532.6932, 394.7500, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][23], -0.5655, 1.9033);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][23], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][23], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][23], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][23], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][23], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][23], 0);

		ptd_sp[playerid][24] = CreatePlayerTextDraw(playerid, 616.5598, 393.0000, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][24], -0.5655, 1.9033);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][24], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][24], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][24], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][24], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][24], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][24], 0);

		ptd_sp[playerid][25] = CreatePlayerTextDraw(playerid, 528.3084, 402.9169, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][25], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][25], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][25], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][25], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][25], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][25], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][25], 0);

		ptd_sp[playerid][26] = CreatePlayerTextDraw(playerid, 525.0286, 393.0000, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][26], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][26], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][26], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][26], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][26], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][26], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][26], 0);

		ptd_sp[playerid][27] = CreatePlayerTextDraw(playerid, 608.4268, 402.9169, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][27], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][27], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][27], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][27], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][27], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][27], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][27], 0);

		ptd_sp[playerid][28] = CreatePlayerTextDraw(playerid, 605.1469, 393.0003, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][28], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][28], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][28], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][28], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][28], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][28], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][28], 0);

		ptd_sp[playerid][29] = CreatePlayerTextDraw(playerid, 529.7136, 394.7500, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][29], 81.0000, 13.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][29], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][29], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][29], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][29], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][29], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][29], 0);

		ptd_sp[playerid][30] = CreatePlayerTextDraw(playerid, 532.0567, 399.4165, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][30], 81.0000, 13.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][30], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][30], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][30], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][30], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][30], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][30], 0);

		ptd_sp[playerid][31] = CreatePlayerTextDraw(playerid, 539.2529, 414.5830, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][31], -0.5655, 1.9033);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][31], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][31], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][31], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][31], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][31], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][31], 0);

		ptd_sp[playerid][32] = CreatePlayerTextDraw(playerid, 623.1187, 412.8330, "/"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][32], -0.5655, 1.9033);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][32], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][32], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][32], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][32], 1);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][32], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][32], 0);

		ptd_sp[playerid][33] = CreatePlayerTextDraw(playerid, 534.8679, 422.7500, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][33], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][33], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][33], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][33], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][33], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][33], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][33], 0);

		ptd_sp[playerid][34] = CreatePlayerTextDraw(playerid, 531.5880, 412.8330, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][34], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][34], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][34], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][34], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][34], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][34], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][34], 0);

		ptd_sp[playerid][35] = CreatePlayerTextDraw(playerid, 614.9857, 422.7500, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][35], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][35], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][35], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][35], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][35], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][35], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][35], 0);

		ptd_sp[playerid][36] = CreatePlayerTextDraw(playerid, 611.7061, 412.8334, "LD_BEAT:chit"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][36], 9.0000, 11.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][36], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][36], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][36], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][36], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][36], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][36], 0);

		ptd_sp[playerid][37] = CreatePlayerTextDraw(playerid, 536.2734, 414.5833, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][37], 81.0000, 13.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][37], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][37], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][37], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][37], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][37], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][37], 0);

		ptd_sp[playerid][38] = CreatePlayerTextDraw(playerid, 538.6162, 419.2500, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][38], 81.0000, 13.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][38], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][38], 724249599);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][38], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][38], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][38], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][38], 0);

		ptd_sp[playerid][39] = CreatePlayerTextDraw(playerid, 501.7723, 385.4171, "120"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][39], 0.5321, 2.9941);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][39], 2);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][39], -1);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][39], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][39], 3);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][39], 1);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][39], 0);

		ptd_sp[playerid][40] = CreatePlayerTextDraw(playerid, 499.4301, 412.2502, "km/h"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][40], 0.1488, 0.8241);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][40], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][40], -1);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][40], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][40], 2);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][40], 1);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][40], 0);

		ptd_sp[playerid][41] = CreatePlayerTextDraw(playerid, 544.4066, 377.8327, "fuel:_50l"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][41], 0.1368, 0.7832);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][41], 2);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][41], -1);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][41], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][41], 2);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][41], 1);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][41], 0);

		ptd_sp[playerid][42] = CreatePlayerTextDraw(playerid, 526.9028, 385.9996, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][42], 36.0000, 2.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][42], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][42], 7849813);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][42], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][42], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][42], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][42], 0);

		ptd_sp[playerid][43] = CreatePlayerTextDraw(playerid, 526.9028, 385.9996, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][43], 25.0000, 2.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][43], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][43], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][43], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][43], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][43], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][43], 0);

		ptd_sp[playerid][44] = CreatePlayerTextDraw(playerid, 585.1677, 377.8330, "1000hp"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][44], 0.1368, 0.7832);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][44], 2);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][44], -1);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][44], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][44], 2);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][44], 1);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][44], 0);

		ptd_sp[playerid][45] = CreatePlayerTextDraw(playerid, 567.1961, 385.9995, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][45], 36.0000, 2.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][45], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][45], 7849813);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][45], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][45], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][45], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][45], 0);

		ptd_sp[playerid][46] = CreatePlayerTextDraw(playerid, 567.1961, 385.9995, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][46], 25.0000, 2.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][46], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][46], 7849983);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][46], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][46], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][46], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][46], 0);

		ptd_sp[playerid][47] = CreatePlayerTextDraw(playerid, 542.3643, 426.8330, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][47], 21.0000, 1.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][47], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][47], -1254211841);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][47], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][47], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][47], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][47], 0);

		ptd_sp[playerid][48] = CreatePlayerTextDraw(playerid, 567.6649, 426.8330, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][48], 21.0000, 1.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][48], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][48], -1254211841);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][48], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][48], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][48], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][48], 0);

		ptd_sp[playerid][49] = CreatePlayerTextDraw(playerid, 592.9655, 426.8330, "LD_SPAC:white"); // ?????
		PlayerTextDrawTextSize(playerid, ptd_sp[playerid][49], 21.0000, 1.0000);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][49], 1);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][49], -1254211841);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][49], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][49], 4);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][49], 0);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][49], 0);

		ptd_sp[playerid][50] = CreatePlayerTextDraw(playerid, 551.9031, 418.6665, "Двиг."); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][50], 0.1368, 0.7832);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][50], 2);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][50], -1);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][50], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][50], 2);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][50], 1);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][50], 0);

		ptd_sp[playerid][51] = CreatePlayerTextDraw(playerid, 577.6723, 418.6665, "Фары"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][51], 0.1368, 0.7832);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][51], 2);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][51], -1);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][51], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][51], 2);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][51], 1);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][51], 0);

		ptd_sp[playerid][52] = CreatePlayerTextDraw(playerid, 603.4409, 418.6665, "Двери"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][52], 0.1368, 0.7832);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][52], 2);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][52], -1);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][52], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][52], 2);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][52], 1);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][52], 0);

		ptd_sp[playerid][53] = CreatePlayerTextDraw(playerid, 572.9865, 399.4166, "meliage:_0km"); // ?????
		PlayerTextDrawLetterSize(playerid, ptd_sp[playerid][53], 0.1368, 0.7832);
		PlayerTextDrawAlignment(playerid, ptd_sp[playerid][53], 2);
		PlayerTextDrawColor(playerid, ptd_sp[playerid][53], -1);
		PlayerTextDrawBackgroundColor(playerid, ptd_sp[playerid][53], 255);
		PlayerTextDrawFont(playerid, ptd_sp[playerid][53], 2);
		PlayerTextDrawSetProportional(playerid, ptd_sp[playerid][53], 1);
		PlayerTextDrawSetShadow(playerid, ptd_sp[playerid][53], 0);

		for ( new j = 0 ; j < 54 ; j ++ )
		{
			PlayerTextDrawShow ( playerid, ptd_sp [ playerid ] [ j ] ) ;
		}
	}
	else
	{
		for ( new j = 0 ; j < 54 ; j ++ )
		{
			PlayerTextDrawHide ( playerid, ptd_sp [ playerid ] [ j ] ) ;

			PlayerTextDrawDestroy ( playerid, ptd_sp [ playerid ] [ j ] ) ;
			ptd_sp [ playerid ] [ j ] = PlayerText:-1 ;
		}
	}
	return 1 ;
}

stock create_binder()
{
    	Binder[0] = TextDrawCreate(215.177169, 199.833343, "usebox");
		TextDrawLetterSize(Binder[0], 0.000000, 1.303704);
		TextDrawTextSize(Binder[0], 3.622254, 0.000000);
		TextDrawAlignment(Binder[0], 1);
		TextDrawColor(Binder[0], 0);
		TextDrawUseBox(Binder[0], true);
		TextDrawBoxColor(Binder[0], 0xa24646FF);
		TextDrawSetShadow(Binder[0], 0);
		TextDrawSetOutline(Binder[0], 0);
		TextDrawFont(Binder[0], 0);

		Binder[1] = TextDrawCreate(215.177169, 208.583328, "usebox");
		TextDrawLetterSize(Binder[1], 0.000000, 0.331481);
		TextDrawTextSize(Binder[1], 3.622254, 0.000000);
		TextDrawAlignment(Binder[1], 1);
		TextDrawColor(Binder[1], 0);
		TextDrawUseBox(Binder[1], true);
		TextDrawBoxColor(Binder[1], 102);
		TextDrawSetShadow(Binder[1], 0);
		TextDrawSetOutline(Binder[1], 0);
		TextDrawFont(Binder[1], 0);

		Binder[2] = TextDrawCreate(215.177169, 216.166687, "usebox");
		TextDrawLetterSize(Binder[2], 0.000000, 11.021287);
		TextDrawTextSize(Binder[2], 3.622253, 0.000000);
		TextDrawAlignment(Binder[2], 1);
		TextDrawColor(Binder[2], 0);
		TextDrawUseBox(Binder[2], true);
		TextDrawBoxColor(Binder[2], 269488383);
		TextDrawSetShadow(Binder[2], 0);
		TextDrawSetOutline(Binder[2], 0);
		TextDrawFont(Binder[2], 1);

		Binder[3] = TextDrawCreate(88.550514, 197.750015, "БИНДЕР");
		TextDrawLetterSize(Binder[3], 0.449999, 1.600000);
		TextDrawAlignment(Binder[3], 1);
		TextDrawColor(Binder[3], -1);
		TextDrawSetShadow(Binder[3], 0);
		TextDrawSetOutline(Binder[3], 0);
		TextDrawBackgroundColor(Binder[3], 51);
		TextDrawFont(Binder[3], 1);
		TextDrawSetProportional(Binder[3], 1);

		Binder[4] = TextDrawCreate(10.027877, 217.750030, "usebox");
		TextDrawLetterSize(Binder[4], 0.000000, 1.116296);
		TextDrawTextSize(Binder[4], 4.559296, 0.000000);
		TextDrawAlignment(Binder[4], 1);
		TextDrawColor(Binder[4], 0);
		TextDrawUseBox(Binder[4], true);
		TextDrawBoxColor(Binder[4], 0xa24646FF);
		TextDrawSetShadow(Binder[4], 0);
		TextDrawSetOutline(Binder[4], 0);
		TextDrawFont(Binder[4], 0);
		TextDrawSetSelectable(Binder[4], true);

		Binder[5] = TextDrawCreate(10.090835, 234.500015, "usebox");
		TextDrawLetterSize(Binder[5], 0.000000, 1.069442);
		TextDrawTextSize(Binder[5], 4.559296, 0.000000);
		TextDrawAlignment(Binder[5], 1);
		TextDrawColor(Binder[5], 0);
		TextDrawUseBox(Binder[5], true);
		TextDrawBoxColor(Binder[5], 0xa24646FF);
		TextDrawSetShadow(Binder[5], 0);
		TextDrawSetOutline(Binder[5], 0);
		TextDrawFont(Binder[5], 0);
		TextDrawSetSelectable(Binder[5], true);

		Binder[6] = TextDrawCreate(10.153792, 250.666656, "usebox");
		TextDrawLetterSize(Binder[6], 0.000000, 1.116296);
		TextDrawTextSize(Binder[6], 4.559297, 0.000000);
		TextDrawAlignment(Binder[6], 1);
		TextDrawColor(Binder[6], 0);
		TextDrawUseBox(Binder[6], true);
		TextDrawBoxColor(Binder[6], 0xa24646FF);
		TextDrawSetShadow(Binder[6], 0);
		TextDrawSetOutline(Binder[6], 0);
		TextDrawFont(Binder[6], 0);
		TextDrawSetSelectable(Binder[6], true);

		Binder[7] = TextDrawCreate(10.216752, 266.833343, "usebox");
		TextDrawLetterSize(Binder[7], 0.000000, 1.116296);
		TextDrawTextSize(Binder[7], 4.559297, 0.000000);
		TextDrawAlignment(Binder[7], 1);
		TextDrawColor(Binder[7], 0);
		TextDrawUseBox(Binder[7], true);
		TextDrawBoxColor(Binder[7], 0xa24646FF);
		TextDrawSetShadow(Binder[7], 0);
		TextDrawSetOutline(Binder[7], 0);
		TextDrawFont(Binder[7], 0);
		TextDrawSetSelectable(Binder[7], true);

		Binder[8] = TextDrawCreate(10.279708, 282.999938, "usebox");
		TextDrawLetterSize(Binder[8], 0.000000, 1.116296);
		TextDrawTextSize(Binder[8], 4.559296, 0.000000);
		TextDrawAlignment(Binder[8], 1);
		TextDrawColor(Binder[8], 0);
		TextDrawUseBox(Binder[8], true);
		TextDrawBoxColor(Binder[8], 0xa24646FF);
		TextDrawSetShadow(Binder[8], 0);
		TextDrawSetOutline(Binder[8], 0);
		TextDrawFont(Binder[8], 0);
		TextDrawSetSelectable(Binder[8], true);

		Binder[9] = TextDrawCreate(164.639846, 217.749969, "usebox");
		TextDrawLetterSize(Binder[9], 0.000000, 1.116296);
		TextDrawTextSize(Binder[9], 6.433382, 0.000000);
		TextDrawAlignment(Binder[9], 1);
		TextDrawColor(Binder[9], 0);
		TextDrawUseBox(Binder[9], true);
		TextDrawBoxColor(Binder[9], 522133503);
		TextDrawSetShadow(Binder[9], 0);
		TextDrawSetOutline(Binder[9], 0);
		TextDrawFont(Binder[9], 0);
		TextDrawSetSelectable(Binder[9], true);

		Binder[10] = TextDrawCreate(164.702804, 234.499969, "usebox");
		TextDrawLetterSize(Binder[10], 0.000000, 1.069442);
		TextDrawTextSize(Binder[10], 6.433382, 0.000000);
		TextDrawAlignment(Binder[10], 1);
		TextDrawColor(Binder[10], 0);
		TextDrawUseBox(Binder[10], true);
		TextDrawBoxColor(Binder[10], 522133503);
		TextDrawSetShadow(Binder[10], 0);
		TextDrawSetOutline(Binder[10], 0);
		TextDrawFont(Binder[10], 0);
		TextDrawSetSelectable(Binder[10], true);

		Binder[11] = TextDrawCreate(164.765762, 250.666625, "usebox");
		TextDrawLetterSize(Binder[11], 0.000000, 1.116296);
		TextDrawTextSize(Binder[11], 6.433381, 0.000000);
		TextDrawAlignment(Binder[11], 1);
		TextDrawColor(Binder[11], 0);
		TextDrawUseBox(Binder[11], true);
		TextDrawBoxColor(Binder[11], 522133503);
		TextDrawSetShadow(Binder[11], 0);
		TextDrawSetOutline(Binder[11], 0);
		TextDrawFont(Binder[11], 0);
		TextDrawSetSelectable(Binder[11], true);

		Binder[12] = TextDrawCreate(164.828720, 266.833282, "usebox");
		TextDrawLetterSize(Binder[12], 0.000000, 1.116296);
		TextDrawTextSize(Binder[12], 6.433381, 0.000000);
		TextDrawAlignment(Binder[12], 1);
		TextDrawColor(Binder[12], 0);
		TextDrawUseBox(Binder[12], true);
		TextDrawBoxColor(Binder[12], 522133503);
		TextDrawSetShadow(Binder[12], 0);
		TextDrawSetOutline(Binder[12], 0);
		TextDrawFont(Binder[12], 0);
		TextDrawSetSelectable(Binder[12], true);

		Binder[13] = TextDrawCreate(164.891677, 282.999969, "usebox");
		TextDrawLetterSize(Binder[13], 0.000000, 1.116296);
		TextDrawTextSize(Binder[13], 6.433381, 0.000000);
		TextDrawAlignment(Binder[13], 1);
		TextDrawColor(Binder[13], 0);
		TextDrawUseBox(Binder[13], true);
		TextDrawBoxColor(Binder[13], 522133503);
		TextDrawSetShadow(Binder[13], 0);
		TextDrawSetOutline(Binder[13], 0);
		TextDrawFont(Binder[13], 0);
		TextDrawSetSelectable(Binder[13], true);

		Binder[14] = TextDrawCreate(164.450942, 215.833343, "LD_SPAC:white");
		TextDrawLetterSize(Binder[14], 0.000000, 0.000000);
		TextDrawTextSize(Binder[14], 22.957550, 14.583317);
		TextDrawAlignment(Binder[14], 1);
		TextDrawColor(Binder[14], 0xa24646FF);
		TextDrawUseBox(Binder[14], true);
		TextDrawBoxColor(Binder[14], 255);
		TextDrawSetShadow(Binder[14], 0);
		TextDrawSetOutline(Binder[14], 0);
		TextDrawBackgroundColor(Binder[14], 522133503);
		TextDrawFont(Binder[14], 4);
		TextDrawSetSelectable(Binder[14], true);

		Binder[15] = TextDrawCreate(188.876998, 215.666656, "LD_SPAC:white");
		TextDrawLetterSize(Binder[15], 0.000000, 0.000000);
		TextDrawTextSize(Binder[15], 22.957550, 14.583316);
		TextDrawAlignment(Binder[15], 1);
		TextDrawColor(Binder[15], 0xa24646FF);
		TextDrawUseBox(Binder[15], true);
		TextDrawBoxColor(Binder[15], 255);
		TextDrawSetShadow(Binder[15], 0);
		TextDrawSetOutline(Binder[15], 0);
		TextDrawFont(Binder[15], 4);
		TextDrawSetSelectable(Binder[15], true);

		Binder[16] = TextDrawCreate(164.045379, 231.999984, "LD_SPAC:white");
		TextDrawLetterSize(Binder[16], 0.000000, 0.000000);
		TextDrawTextSize(Binder[16], 22.957550, 14.583317);
		TextDrawAlignment(Binder[16], 1);
		TextDrawColor(Binder[16], 0xa24646FF);
		TextDrawUseBox(Binder[16], true);
		TextDrawBoxColor(Binder[16], 255);
		TextDrawSetShadow(Binder[16], 0);
		TextDrawSetOutline(Binder[16], 0);
		TextDrawBackgroundColor(Binder[16], 522133503);
		TextDrawFont(Binder[16], 4);
		TextDrawSetSelectable(Binder[16], true);

		Binder[17] = TextDrawCreate(188.939956, 231.833328, "LD_SPAC:white");
		TextDrawLetterSize(Binder[17], 0.000000, 0.000000);
		TextDrawTextSize(Binder[17], 22.957550, 14.583317);
		TextDrawAlignment(Binder[17], 1);
		TextDrawColor(Binder[17], 0xa24646FF);
		TextDrawUseBox(Binder[17], true);
		TextDrawBoxColor(Binder[17], 255);
		TextDrawSetShadow(Binder[17], 0);
		TextDrawSetOutline(Binder[17], 0);
		TextDrawBackgroundColor(Binder[17], 522133503);
		TextDrawFont(Binder[17], 4);
		TextDrawSetSelectable(Binder[17], true);

		Binder[18] = TextDrawCreate(164.171295, 247.999969, "LD_SPAC:white");
		TextDrawLetterSize(Binder[18], 0.000000, 0.000000);
		TextDrawTextSize(Binder[18], 22.957550, 14.583317);
		TextDrawAlignment(Binder[18], 1);
		TextDrawColor(Binder[18], 0xa24646FF);
		TextDrawUseBox(Binder[18], true);
		TextDrawBoxColor(Binder[18], 255);
		TextDrawSetShadow(Binder[18], 0);
		TextDrawSetOutline(Binder[18], 0);
		TextDrawBackgroundColor(Binder[18], 522133503);
		TextDrawFont(Binder[18], 4);
		TextDrawSetSelectable(Binder[18], true);

		Binder[19] = TextDrawCreate(189.065872, 248.416625, "LD_SPAC:white");
		TextDrawLetterSize(Binder[19], 0.000000, 0.000000);
		TextDrawTextSize(Binder[19], 22.957550, 14.583317);
		TextDrawAlignment(Binder[19], 1);
		TextDrawColor(Binder[19], 0xa24646FF);
		TextDrawUseBox(Binder[19], true);
		TextDrawBoxColor(Binder[19], 255);
		TextDrawSetShadow(Binder[19], 0);
		TextDrawSetOutline(Binder[19], 0);
		TextDrawBackgroundColor(Binder[19], 522133503);
		TextDrawFont(Binder[19], 4);
		TextDrawSetSelectable(Binder[19], true);

		Binder[20] = TextDrawCreate(164.297210, 264.583312, "LD_SPAC:white");
		TextDrawLetterSize(Binder[20], 0.000000, 0.000000);
		TextDrawTextSize(Binder[20], 22.957550, 14.583317);
		TextDrawAlignment(Binder[20], 1);
		TextDrawColor(Binder[20], 0xa24646FF);
		TextDrawUseBox(Binder[20], true);
		TextDrawBoxColor(Binder[20], 255);
		TextDrawSetShadow(Binder[20], 0);
		TextDrawSetOutline(Binder[20], 0);
		TextDrawBackgroundColor(Binder[20], 522133503);
		TextDrawFont(Binder[20], 4);
		TextDrawSetSelectable(Binder[20], true);

		Binder[21] = TextDrawCreate(189.191787, 264.416625, "LD_SPAC:white");
		TextDrawLetterSize(Binder[21], 0.000000, 0.000000);
		TextDrawTextSize(Binder[21], 22.957550, 14.583316);
		TextDrawAlignment(Binder[21], 1);
		TextDrawColor(Binder[21], 0xa24646FF);
		TextDrawUseBox(Binder[21], true);
		TextDrawBoxColor(Binder[21], 255);
		TextDrawSetShadow(Binder[21], 0);
		TextDrawSetOutline(Binder[21], 0);
		TextDrawBackgroundColor(Binder[21], 522133503);
		TextDrawFont(Binder[21], 4);
		TextDrawSetSelectable(Binder[21], true);

		Binder[22] = TextDrawCreate(164.423126, 281.166687, "LD_SPAC:white");
		TextDrawLetterSize(Binder[22], 0.000000, 0.000000);
		TextDrawTextSize(Binder[22], 22.957550, 14.583316);
		TextDrawAlignment(Binder[22], 1);
		TextDrawColor(Binder[22], 0xa24646FF);
		TextDrawUseBox(Binder[22], true);
		TextDrawBoxColor(Binder[22], 255);
		TextDrawSetShadow(Binder[22], 0);
		TextDrawSetOutline(Binder[22], 0);
		TextDrawBackgroundColor(Binder[22], 522133503);
		TextDrawFont(Binder[22], 4);
		TextDrawSetSelectable(Binder[22], true);

		Binder[23] = TextDrawCreate(188.849182, 281.000000, "LD_SPAC:white");
		TextDrawLetterSize(Binder[23], 0.000000, 0.000000);
		TextDrawTextSize(Binder[23], 22.957550, 14.583316);
		TextDrawAlignment(Binder[23], 1);
		TextDrawColor(Binder[23], 0xa24646FF);
		TextDrawUseBox(Binder[23], true);
		TextDrawBoxColor(Binder[23], 255);
		TextDrawSetShadow(Binder[23], 0);
		TextDrawSetOutline(Binder[23], 0);
		TextDrawBackgroundColor(Binder[23], 522133503);
		TextDrawFont(Binder[23], 4);
		TextDrawSetSelectable(Binder[23], true);

		Binder[24] = TextDrawCreate(170.856506, 216.750091, "RP");
		TextDrawLetterSize(Binder[24], 0.252752, 1.185833);
		TextDrawAlignment(Binder[24], 1);
		TextDrawColor(Binder[24], -1);
		TextDrawSetShadow(Binder[24], 0);
		TextDrawSetOutline(Binder[24], 0);
		TextDrawBackgroundColor(Binder[24], 51);
		TextDrawFont(Binder[24], 1);
		TextDrawSetProportional(Binder[24], 1);

		Binder[25] = TextDrawCreate(170.919464, 233.500091, "RP");
		TextDrawLetterSize(Binder[25], 0.252752, 1.185833);
		TextDrawAlignment(Binder[25], 1);
		TextDrawColor(Binder[25], -1);
		TextDrawSetShadow(Binder[25], 0);
		TextDrawSetOutline(Binder[25], 0);
		TextDrawBackgroundColor(Binder[25], 51);
		TextDrawFont(Binder[25], 1);
		TextDrawSetProportional(Binder[25], 1);

		Binder[26] = TextDrawCreate(170.982421, 249.666748, "RP");
		TextDrawLetterSize(Binder[26], 0.252752, 1.185833);
		TextDrawAlignment(Binder[26], 1);
		TextDrawColor(Binder[26], -1);
		TextDrawSetShadow(Binder[26], 0);
		TextDrawSetOutline(Binder[26], 0);
		TextDrawBackgroundColor(Binder[26], 51);
		TextDrawFont(Binder[26], 1);
		TextDrawSetProportional(Binder[26], 1);

		Binder[27] = TextDrawCreate(171.045379, 265.833435, "RP");
		TextDrawLetterSize(Binder[27], 0.252752, 1.185833);
		TextDrawAlignment(Binder[27], 1);
		TextDrawColor(Binder[27], -1);
		TextDrawSetShadow(Binder[27], 0);
		TextDrawSetOutline(Binder[27], 0);
		TextDrawBackgroundColor(Binder[27], 51);
		TextDrawFont(Binder[27], 1);
		TextDrawSetProportional(Binder[27], 1);

		Binder[28] = TextDrawCreate(171.108337, 282.583465, "RP");
		TextDrawLetterSize(Binder[28], 0.252752, 1.185833);
		TextDrawAlignment(Binder[28], 1);
		TextDrawColor(Binder[28], -1);
		TextDrawSetShadow(Binder[28], 0);
		TextDrawSetOutline(Binder[28], 0);
		TextDrawBackgroundColor(Binder[28], 51);
		TextDrawFont(Binder[28], 1);
		TextDrawSetProportional(Binder[28], 1);

		Binder[29] = TextDrawCreate(192.723266, 217.083496, "OOC");
		TextDrawLetterSize(Binder[29], 0.252752, 1.185833);
		TextDrawAlignment(Binder[29], 1);
		TextDrawColor(Binder[29], -1);
		TextDrawSetShadow(Binder[29], 0);
		TextDrawSetOutline(Binder[29], 0);
		TextDrawBackgroundColor(Binder[29], 51);
		TextDrawFont(Binder[29], 1);
		TextDrawSetProportional(Binder[29], 1);

		Binder[30] = TextDrawCreate(192.317703, 233.250167, "OOC");
		TextDrawLetterSize(Binder[30], 0.252752, 1.185833);
		TextDrawAlignment(Binder[30], 1);
		TextDrawColor(Binder[30], -1);
		TextDrawSetShadow(Binder[30], 0);
		TextDrawSetOutline(Binder[30], 0);
		TextDrawBackgroundColor(Binder[30], 51);
		TextDrawFont(Binder[30], 1);
		TextDrawSetProportional(Binder[30], 1);

		Binder[31] = TextDrawCreate(192.380661, 249.416839, "OOC");
		TextDrawLetterSize(Binder[31], 0.252752, 1.185833);
		TextDrawAlignment(Binder[31], 1);
		TextDrawColor(Binder[31], -1);
		TextDrawSetShadow(Binder[31], 0);
		TextDrawSetOutline(Binder[31], 0);
		TextDrawBackgroundColor(Binder[31], 51);
		TextDrawFont(Binder[31], 1);
		TextDrawSetProportional(Binder[31], 1);

		Binder[32] = TextDrawCreate(192.443618, 266.166900, "OOC");
		TextDrawLetterSize(Binder[32], 0.252752, 1.185833);
		TextDrawAlignment(Binder[32], 1);
		TextDrawColor(Binder[32], -1);
		TextDrawSetShadow(Binder[32], 0);
		TextDrawSetOutline(Binder[32], 0);
		TextDrawBackgroundColor(Binder[32], 51);
		TextDrawFont(Binder[32], 1);
		TextDrawSetProportional(Binder[32], 1);

		Binder[33] = TextDrawCreate(192.038055, 282.333557, "OOC");
		TextDrawLetterSize(Binder[33], 0.252752, 1.185832);
		TextDrawAlignment(Binder[33], 1);
		TextDrawColor(Binder[33], -1);
		TextDrawSetShadow(Binder[33], 0);
		TextDrawSetOutline(Binder[33], 0);
		TextDrawBackgroundColor(Binder[33], 51);
		TextDrawFont(Binder[33], 1);
		TextDrawSetProportional(Binder[33], 1);

		Binder[34] = TextDrawCreate(18.838973, 300.666625, "LD_SPAC:white");
		TextDrawLetterSize(Binder[34], 0.000000, 0.000000);
		TextDrawTextSize(Binder[34], 45.446563, 13.416650);
		TextDrawAlignment(Binder[34], 1);
		TextDrawColor(Binder[34], 0xa24646FF);
		TextDrawUseBox(Binder[34], true);
		TextDrawBoxColor(Binder[34], 255);
		TextDrawSetShadow(Binder[34], 0);
		TextDrawSetOutline(Binder[34], 0);
		TextDrawBackgroundColor(Binder[34], 522133503);
		TextDrawFont(Binder[34], 4);
		TextDrawSetSelectable(Binder[34], true);

		Binder[35] = TextDrawCreate(153.836013, 300.499847, "LD_SPAC:white");
		TextDrawLetterSize(Binder[35], 0.000000, 0.000000);
		TextDrawTextSize(Binder[35], 45.446563, 13.416649);
		TextDrawAlignment(Binder[35], 1);
		TextDrawColor(Binder[35], 0xa24646FF);
		TextDrawUseBox(Binder[35], true);
		TextDrawBoxColor(Binder[35], 255);
		TextDrawSetShadow(Binder[35], 0);
		TextDrawSetOutline(Binder[35], 0);
		TextDrawBackgroundColor(Binder[35], 522133503);
		TextDrawFont(Binder[35], 4);
		TextDrawSetProportional(Binder[35], 1);
		TextDrawSetSelectable(Binder[35], true);

		Binder[36] = TextDrawCreate(66.187408, 314.166595, "usebox");
		TextDrawLetterSize(Binder[36], 0.000000, -0.251847);
		TextDrawTextSize(Binder[36], 16.740848, 0.000000);
		TextDrawAlignment(Binder[36], 1);
		TextDrawColor(Binder[36], 0);
		TextDrawUseBox(Binder[36], true);
		TextDrawBoxColor(Binder[36], 102);
		TextDrawSetShadow(Binder[36], 0);
		TextDrawSetOutline(Binder[36], 0);
		TextDrawFont(Binder[36], 0);

		Binder[37] = TextDrawCreate(202.121490, 313.999908, "usebox");
		TextDrawLetterSize(Binder[37], 0.000000, -0.251847);
		TextDrawTextSize(Binder[37], 151.674942, 0.000000);
		TextDrawAlignment(Binder[37], 1);
		TextDrawColor(Binder[37], 0);
		TextDrawUseBox(Binder[37], true);
		TextDrawBoxColor(Binder[37], 102);
		TextDrawSetShadow(Binder[37], 0);
		TextDrawSetOutline(Binder[37], 0);
		TextDrawFont(Binder[37], 0);

		Binder[38] = TextDrawCreate(27.111278, 301.750091, "Помощь");
		TextDrawLetterSize(Binder[38], 0.246661, 1.162499);
		TextDrawTextSize(Binder[38], 60.439228, 11.666666);
		TextDrawAlignment(Binder[38], 1);
		TextDrawColor(Binder[38], -1);
		TextDrawUseBox(Binder[38], true);
		TextDrawBoxColor(Binder[38], -256);
		TextDrawSetShadow(Binder[38], 0);
		TextDrawSetOutline(Binder[38], 0);
		TextDrawBackgroundColor(Binder[38], 51);
		TextDrawFont(Binder[38], 1);
		TextDrawSetProportional(Binder[38], 1);

		Binder[39] = TextDrawCreate(161.828689, 302.166809, "Закрыть");
		TextDrawLetterSize(Binder[39], 0.221360, 1.109999);
		TextDrawTextSize(Binder[39], 190.688110, 15.166666);
		TextDrawAlignment(Binder[39], 1);
		TextDrawColor(Binder[39], -1);
		TextDrawUseBox(Binder[39], true);
		TextDrawBoxColor(Binder[39], -256);
		TextDrawSetShadow(Binder[39], 0);
		TextDrawSetOutline(Binder[39], 0);
		TextDrawBackgroundColor(Binder[39], 51);
		TextDrawFont(Binder[39], 1);
		TextDrawSetProportional(Binder[39], 1);
		return 1;
}

stock acc_td_status ( playerid, bool: status )
{
	if(status)
	{
	    acc_td_player[playerid][0] = CreatePlayerTextDraw(playerid, 24.000000, 130.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][0], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][0], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][0], 0.500000, 16.100000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][0], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][0], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][0], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][0], 421075455);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][0], 161.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][0], 0);

		acc_td_player[playerid][1] = CreatePlayerTextDraw(playerid, 27.000000, 149.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][1], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][1], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][1], 0.500000, 13.500000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][1], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][1], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][1], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][1], 252645375);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][1], 157.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][1], 0);

		acc_td_player[playerid][2] = CreatePlayerTextDraw(playerid, 27.000000, 149.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][2], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][2], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][2], 0.500000, -0.599997);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][2], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][2], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][2], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][2], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][2], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][2], 676429311);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][2], 157.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][2], 0);

		acc_td_player[playerid][3] = CreatePlayerTextDraw(playerid, 27.000000, 133.000000, "АКСЕССУАРЫ");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][3], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][3], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][3], 0.250000, 1.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][3], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][3], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][3], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][3], 0);

		acc_td_player[playerid][4] = CreatePlayerTextDraw(playerid, 29.000000, 169.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][4], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][4], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][4], 0.500000, -2.199997);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][4], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][4], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][4], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][4], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][4], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][4], 676429311);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][4], 155.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][4], 0);

		acc_td_player[playerid][5] = CreatePlayerTextDraw(playerid, 29.000000, 189.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][5], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][5], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][5], 0.500000, -2.199997);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][5], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][5], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][5], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][5], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][5], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][5], 676429311);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][5], 155.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][5], 0);

		acc_td_player[playerid][6] = CreatePlayerTextDraw(playerid, 29.000000, 209.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][6], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][6], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][6], 0.500000, -2.199997);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][6], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][6], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][6], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][6], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][6], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][6], 676429311);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][6], 155.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][6], 0);

		acc_td_player[playerid][7] = CreatePlayerTextDraw(playerid, 29.000000, 229.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][7], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][7], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][7], 0.500000, -2.199997);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][7], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][7], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][7], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][7], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][7], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][7], 676429311);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][7], 155.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][7], 0);

		acc_td_player[playerid][8] = CreatePlayerTextDraw(playerid, 29.000000, 250.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][8], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][8], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][8], 0.500000, -2.199997);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][8], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][8], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][8], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][8], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][8], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][8], 676429311);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][8], 155.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][8], 0);

		acc_td_player[playerid][9] = CreatePlayerTextDraw(playerid, 29.000000, 150.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][9], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][9], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][9], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][9], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][9], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][9], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][9], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][9], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][9], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][9], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][9], 1);

		acc_td_player[playerid][10] = CreatePlayerTextDraw(playerid, 124.000000, 150.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][10], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][10], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][10], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][10], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][10], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][10], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][10], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][10], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][10], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][10], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][10], 1);

		acc_td_player[playerid][11] = CreatePlayerTextDraw(playerid, 61.000000, 150.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][11], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][11], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][11], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][11], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][11], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][11], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][11], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][11], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][11], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][11], 62.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][11], 0);

		acc_td_player[playerid][12] = CreatePlayerTextDraw(playerid, 37.000000, 152.000000, "<<<");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][12], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][12], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][12], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][12], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][12], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][12], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][12], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][12], 0);

		acc_td_player[playerid][13] = CreatePlayerTextDraw(playerid, 29.000000, 170.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][13], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][13], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][13], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][13], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][13], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][13], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][13], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][13], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][13], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][13], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][13], 1);

		acc_td_player[playerid][14] = CreatePlayerTextDraw(playerid, 65.000000, 152.000000, "ГОЛОВНОЙ УБОР");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][14], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][14], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][14], 0.170000, 1.100000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][14], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][14], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][14], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][14], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][14], 0);

		acc_td_player[playerid][15] = CreatePlayerTextDraw(playerid, 134.000000, 152.000000, ">>>");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][15], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][15], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][15], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][15], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][15], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][15], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][15], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][15], 0);

		acc_td_player[playerid][16] = CreatePlayerTextDraw(playerid, 29.000000, 190.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][16], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][16], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][16], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][16], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][16], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][16], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][16], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][16], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][16], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][16], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][16], 1);

		acc_td_player[playerid][17] = CreatePlayerTextDraw(playerid, 29.000000, 210.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][17], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][17], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][17], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][17], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][17], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][17], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][17], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][17], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][17], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][17], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][17], 1);

		acc_td_player[playerid][18] = CreatePlayerTextDraw(playerid, 29.000000, 231.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][18], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][18], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][18], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][18], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][18], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][18], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][18], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][18], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][18], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][18], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][18], 1);

		acc_td_player[playerid][19] = CreatePlayerTextDraw(playerid, 124.000000, 170.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][19], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][19], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][19], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][19], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][19], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][19], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][19], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][19], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][19], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][19], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][19], 1);

		acc_td_player[playerid][20] = CreatePlayerTextDraw(playerid, 124.000000, 190.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][20], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][20], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][20], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][20], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][20], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][20], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][20], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][20], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][20], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][20], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][20], 1);

		acc_td_player[playerid][21] = CreatePlayerTextDraw(playerid, 124.000000, 210.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][21], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][21], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][21], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][21], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][21], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][21], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][21], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][21], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][21], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][21], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][21], 1);

		acc_td_player[playerid][22] = CreatePlayerTextDraw(playerid, 124.000000, 231.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][22], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][22], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][22], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][22], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][22], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][22], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][22], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][22], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][22], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][22], 31.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][22], 1);

		acc_td_player[playerid][23] = CreatePlayerTextDraw(playerid, 61.000000, 170.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][23], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][23], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][23], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][23], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][23], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][23], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][23], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][23], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][23], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][23], 62.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][23], 0);

		acc_td_player[playerid][24] = CreatePlayerTextDraw(playerid, 61.000000, 190.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][24], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][24], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][24], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][24], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][24], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][24], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][24], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][24], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][24], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][24], 62.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][24], 0);

		acc_td_player[playerid][25] = CreatePlayerTextDraw(playerid, 61.000000, 210.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][25], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][25], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][25], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][25], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][25], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][25], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][25], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][25], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][25], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][25], 62.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][25], 0);

		acc_td_player[playerid][26] = CreatePlayerTextDraw(playerid, 61.000000, 231.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][26], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][26], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][26], 0.500000, -0.099999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][26], 252645375);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][26], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][26], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][26], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][26], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][26], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][26], 62.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][26], 0);

		acc_td_player[playerid][27] = CreatePlayerTextDraw(playerid, 37.000000, 172.000000, "<<<");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][27], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][27], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][27], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][27], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][27], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][27], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][27], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][27], 0);

		acc_td_player[playerid][28] = CreatePlayerTextDraw(playerid, 37.000000, 192.000000, "<<<");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][28], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][28], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][28], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][28], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][28], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][28], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][28], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][28], 0);

		acc_td_player[playerid][29] = CreatePlayerTextDraw(playerid, 37.000000, 212.000000, "<<<");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][29], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][29], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][29], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][29], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][29], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][29], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][29], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][29], 0);

		acc_td_player[playerid][30] = CreatePlayerTextDraw(playerid, 37.000000, 233.000000, "<<<");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][30], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][30], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][30], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][30], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][30], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][30], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][30], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][30], 0);

		acc_td_player[playerid][31] = CreatePlayerTextDraw(playerid, 134.000000, 172.000000, ">>>");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][31], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][31], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][31], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][31], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][31], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][31], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][31], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][31], 0);

		acc_td_player[playerid][32] = CreatePlayerTextDraw(playerid, 134.000000, 192.000000, ">>>");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][32], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][32], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][32], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][32], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][32], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][32], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][32], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][32], 0);

		acc_td_player[playerid][33] = CreatePlayerTextDraw(playerid, 134.000000, 212.000000, ">>>");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][33], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][33], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][33], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][33], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][33], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][33], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][33], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][33], 0);

		acc_td_player[playerid][34] = CreatePlayerTextDraw(playerid, 134.000000, 233.000000, ">>>");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][34], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][34], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][34], 0.180000, 1.200000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][34], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][34], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][34], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][34], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][34], 0);

		acc_td_player[playerid][35] = CreatePlayerTextDraw(playerid, 92.000000, 172.000000, "БАНДАНА");
		PlayerTextDrawAlignment(playerid, acc_td_player[playerid][35], 2);
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][35], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][35], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][35], 0.170000, 1.100000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][35], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][35], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][35], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][35], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][35], 0);

		acc_td_player[playerid][36] = CreatePlayerTextDraw(playerid, 92.000000, 192.000000, "ЧАСЫ");
		PlayerTextDrawAlignment(playerid, acc_td_player[playerid][36], 2);
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][36], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][36], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][36], 0.170000, 1.100000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][36], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][36], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][36], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][36], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][36], 0);

		acc_td_player[playerid][37] = CreatePlayerTextDraw(playerid, 92.000000, 212.000000, "РЮКЗАК");
		PlayerTextDrawAlignment(playerid, acc_td_player[playerid][37], 2);
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][37], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][37], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][37], 0.170000, 1.100000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][37], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][37], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][37], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][37], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][37], 0);

		acc_td_player[playerid][38] = CreatePlayerTextDraw(playerid, 92.000000, 233.000000, "ОЧКИ");
		PlayerTextDrawAlignment(playerid, acc_td_player[playerid][38], 2);
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][38], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][38], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][38], 0.170000, 1.100000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][38], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][38], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][38], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][38], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][38], 0);

		acc_td_player[playerid][39] = CreatePlayerTextDraw(playerid, 62.000000, 250.000000, "LD_SPAC:WHITE");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][39], 0);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][39], 4);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][39], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][39], 505290495);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][39], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][39], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][39], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][39], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][39], 255);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][39], 61.000000, 20.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][39], 1);

		acc_td_player[playerid][40] = CreatePlayerTextDraw(playerid, 63.000000, 271.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][40], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][40], 1);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][40], 0.500000, -0.499998);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][40], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][40], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][40], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][40], 1);
		PlayerTextDrawUseBox(playerid, acc_td_player[playerid][40], 1);
		PlayerTextDrawBoxColor(playerid, acc_td_player[playerid][40], 676429311);
		PlayerTextDrawTextSize(playerid, acc_td_player[playerid][40], 122.000000, 40.000000);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][40], 0);

		acc_td_player[playerid][41] = CreatePlayerTextDraw(playerid, 77.000000, 257.000000, "КУПИТЬ");
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][41], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][41], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][41], 0.210000, 1.100000);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][41], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][41], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][41], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][41], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][41], 0);

		acc_td_player[playerid][42] = CreatePlayerTextDraw(playerid, 94.000000, 249.000000, "ЦЕНА: ~g~0 РУБ");
		PlayerTextDrawAlignment(playerid, acc_td_player[playerid][42], 2);
		PlayerTextDrawBackgroundColor(playerid, acc_td_player[playerid][42], 255);
		PlayerTextDrawFont(playerid, acc_td_player[playerid][42], 2);
		PlayerTextDrawLetterSize(playerid, acc_td_player[playerid][42], 0.180000, 0.899999);
		PlayerTextDrawColor(playerid, acc_td_player[playerid][42], -1);
		PlayerTextDrawSetOutline(playerid, acc_td_player[playerid][42], 0);
		PlayerTextDrawSetProportional(playerid, acc_td_player[playerid][42], 1);
		PlayerTextDrawSetShadow(playerid, acc_td_player[playerid][42], 1);
		PlayerTextDrawSetSelectable(playerid, acc_td_player[playerid][42], 0);
		
		for ( new i = 0 ; i < 43 ; i ++ )
		{
			PlayerTextDrawShow ( playerid, acc_td_player [ playerid ] [ i ] ) ;
		}
	}
	else
	{
	    for ( new i = 0 ; i < 43 ; i ++ )
		{
		    PlayerTextDrawHide ( playerid, acc_td_player [ playerid ] [ i ] ) ;

			PlayerTextDrawDestroy ( playerid, acc_td_player [ playerid ] [ i ] ) ;
			acc_td_player [ playerid ] [ i ] = PlayerText:-1;
		}
	}
}

stock taxi_td_status ( playerid, bool: status )
{
	if(status)
	{
	    taxi_td_player[playerid][0] = CreatePlayerTextDraw(playerid, 494.000000, 304.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][0], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][0], 1);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][0], 0.500000, 5.199998);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][0], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][0], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][0], 1);
		PlayerTextDrawUseBox(playerid, taxi_td_player[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, taxi_td_player[playerid][0], 421075455);
		PlayerTextDrawTextSize(playerid, taxi_td_player[playerid][0], 630.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][0], 0);

		taxi_td_player[playerid][1] = CreatePlayerTextDraw(playerid, 494.000000, 301.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][1], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][1], 1);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][1], 0.500000, 0.799998);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][1], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][1], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][1], 1);
		PlayerTextDrawUseBox(playerid, taxi_td_player[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, taxi_td_player[playerid][1], 676429311);
		PlayerTextDrawTextSize(playerid, taxi_td_player[playerid][1], 630.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][1], 0);

		taxi_td_player[playerid][2] = CreatePlayerTextDraw(playerid, 560.000000, 298.000000, "ТАКСИ");
		PlayerTextDrawAlignment(playerid, taxi_td_player[playerid][2], 2);
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][2], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][2], 2);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][2], 0.250000, 0.899999);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][2], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][2], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][2], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][2], 0);

		taxi_td_player[playerid][3] = CreatePlayerTextDraw(playerid, 494.000000, 335.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][3], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][3], 1);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][3], 0.500000, -0.200000);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][3], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][3], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][3], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][3], 1);
		PlayerTextDrawUseBox(playerid, taxi_td_player[playerid][3], 1);
		PlayerTextDrawBoxColor(playerid, taxi_td_player[playerid][3], 676429311);
		PlayerTextDrawTextSize(playerid, taxi_td_player[playerid][3], 630.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][3], 0);

		taxi_td_player[playerid][4] = CreatePlayerTextDraw(playerid, 560.000000, 311.000000, "КЛИЕНТЫ");
		PlayerTextDrawAlignment(playerid, taxi_td_player[playerid][4], 2);
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][4], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][4], 2);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][4], 0.250000, 0.799998);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][4], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][4], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][4], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][4], 0);

		taxi_td_player[playerid][5] = CreatePlayerTextDraw(playerid, 494.000000, 353.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][5], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][5], 1);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][5], 0.500000, -0.200000);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][5], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][5], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][5], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][5], 1);
		PlayerTextDrawUseBox(playerid, taxi_td_player[playerid][5], 1);
		PlayerTextDrawBoxColor(playerid, taxi_td_player[playerid][5], 676429311);
		PlayerTextDrawTextSize(playerid, taxi_td_player[playerid][5], 630.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][5], 0);

		taxi_td_player[playerid][6] = CreatePlayerTextDraw(playerid, 517.000000, 322.000000, "всего");
		PlayerTextDrawAlignment(playerid, taxi_td_player[playerid][6], 2);
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][6], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][6], 2);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][6], 0.250000, 0.899999);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][6], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][6], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][6], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][6], 0);

		taxi_td_player[playerid][7] = CreatePlayerTextDraw(playerid, 604.000000, 322.000000, "активны");
		PlayerTextDrawAlignment(playerid, taxi_td_player[playerid][7], 2);
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][7], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][7], 2);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][7], 0.250000, 0.899999);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][7], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][7], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][7], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][7], 0);

		taxi_td_player[playerid][8] = CreatePlayerTextDraw(playerid, 517.000000, 311.000000, "~y~250");
		PlayerTextDrawAlignment(playerid, taxi_td_player[playerid][8], 2);
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][8], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][8], 2);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][8], 0.250000, 0.899999);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][8], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][8], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][8], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][8], 1);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][8], 0);

		taxi_td_player[playerid][9] = CreatePlayerTextDraw(playerid, 604.000000, 311.000000, "~y~0");
		PlayerTextDrawAlignment(playerid, taxi_td_player[playerid][9], 2);
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][9], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][9], 2);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][9], 0.250000, 0.899999);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][9], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][9], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][9], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][9], 1);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][9], 0);

		taxi_td_player[playerid][10] = CreatePlayerTextDraw(playerid, 604.000000, 337.000000, "~y~00:00");
		PlayerTextDrawAlignment(playerid, taxi_td_player[playerid][10], 2);
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][10], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][10], 2);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][10], 0.230000, 1.199998);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][10], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][10], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][10], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][10], 1);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][10], 0);

		taxi_td_player[playerid][11] = CreatePlayerTextDraw(playerid, 498.000000, 337.000000, "ЗАРАБОТАНО: ~g~0 РУБ");
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][11], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][11], 2);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][11], 0.170000, 1.200000);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][11], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][11], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][11], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][11], 1);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][11], 0);
		
		taxi_td_player[playerid][12] = CreatePlayerTextDraw(playerid, 494.000000, 309.000000, "_");
		PlayerTextDrawBackgroundColor(playerid, taxi_td_player[playerid][12], 255);
		PlayerTextDrawFont(playerid, taxi_td_player[playerid][12], 1);
		PlayerTextDrawLetterSize(playerid, taxi_td_player[playerid][12], 0.500000, -0.100000);
		PlayerTextDrawColor(playerid, taxi_td_player[playerid][12], -1);
		PlayerTextDrawSetOutline(playerid, taxi_td_player[playerid][12], 0);
		PlayerTextDrawSetProportional(playerid, taxi_td_player[playerid][12], 1);
		PlayerTextDrawSetShadow(playerid, taxi_td_player[playerid][12], 1);
		PlayerTextDrawUseBox(playerid, taxi_td_player[playerid][12], 1);
		PlayerTextDrawBoxColor(playerid, taxi_td_player[playerid][12], 102);
		PlayerTextDrawTextSize(playerid, taxi_td_player[playerid][12], 630.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, taxi_td_player[playerid][12], 0);
		
		for ( new i = 0 ; i < 13 ; i ++ )
		{
			PlayerTextDrawShow ( playerid, taxi_td_player [ playerid ] [ i ] ) ;
		}
	}
	else
	{
	    for ( new i = 0 ; i < 13 ; i ++ )
		{
		    PlayerTextDrawHide ( playerid, taxi_td_player [ playerid ] [ i ] ) ;

			PlayerTextDrawDestroy ( playerid, taxi_td_player [ playerid ] [ i ] ) ;
			taxi_td_player [ playerid ] [ i ] = PlayerText:-1;
		}
	}
}

stock lic_td_status ( playerid, bool: status )
{
	if(status)
	{
	    LicPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 470.333282, 160.948135, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][0], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][0], 18.000013, 19.911096);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][0], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][0], 41215);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][0], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][0], 4);

		LicPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 612.666320, 161.533309, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][1], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][1], 18.000013, 19.911096);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][1], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][1], 41215);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][1], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][1], 4);

		LicPlayer[playerid][2] = CreatePlayerTextDraw(playerid, 613.000427, 257.940643, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][2], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][2], 18.000013, 19.911096);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][2], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][2], 41215);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][2], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][2], 4);

		LicPlayer[playerid][3] = CreatePlayerTextDraw(playerid, 470.666687, 257.696380, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][3], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][3], 18.000013, 19.911096);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][3], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][3], 41215);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][3], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][3], 4);

		LicPlayer[playerid][4] = CreatePlayerTextDraw(playerid, 623.333374, 162.862960, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][4], 0.000000, 12.450407);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][4], 477.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][4], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][4], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][4], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][4], 41215);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][4], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][4], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][4], 0);

		LicPlayer[playerid][5] = CreatePlayerTextDraw(playerid, 631.666870, 171.329589, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][5], 0.000000, 10.417076);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][5], 469.333312, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][5], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][5], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][5], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][5], 41215);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][5], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][5], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][5], 0);

		LicPlayer[playerid][6] = CreatePlayerTextDraw(playerid, 471.333343, 162.192626, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][6], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][6], 16.333332, 18.251867);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][6], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][6], 848744703);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][6], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][6], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][6], 4);

		LicPlayer[playerid][7] = CreatePlayerTextDraw(playerid, 613.333312, 161.948211, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][7], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][7], 16.333332, 18.251867);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][7], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][7], 848744703);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][7], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][7], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][7], 4);

		LicPlayer[playerid][8] = CreatePlayerTextDraw(playerid, 613.333374, 257.526031, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][8], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][8], 16.333332, 18.251867);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][8], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][8], 848744703);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][8], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][8], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][8], 4);

		LicPlayer[playerid][9] = CreatePlayerTextDraw(playerid, 471.333435, 257.281524, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][9], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][9], 16.333332, 18.251867);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][9], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][9], 848744703);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][9], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][9], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][9], 4);

		LicPlayer[playerid][10] = CreatePlayerTextDraw(playerid, 624.333435, 164.107406, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][10], 0.000000, 12.119956);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][10], 477.666687, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][10], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][10], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][10], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][10], 848744703);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][10], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][10], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][10], 0);

		LicPlayer[playerid][11] = CreatePlayerTextDraw(playerid, 630.666687, 170.914779, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][11], 0.000000, 10.519948);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][11], 470.666656, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][11], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][11], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][11], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][11], 848744703);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][11], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][11], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][11], 0);

		LicPlayer[playerid][12] = CreatePlayerTextDraw(playerid, 477.332855, 235.614715, "Ld_tatt:9rasta");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][12], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][12], 38.333332, 38.577793);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][12], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][12], 848742143);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][12], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][12], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][12], 4);

		LicPlayer[playerid][13] = CreatePlayerTextDraw(playerid, 520.666625, 163.437011, "ld_drv:gold");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][13], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][13], 108.999984, 110.755554);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][13], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][13], -125);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][13], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][13], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][13], 4);

		LicPlayer[playerid][14] = CreatePlayerTextDraw(playerid, 628.666687, 174.477783, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][14], 0.000000, -0.040123);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][14], 472.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][14], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][14], 1996491219);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][14], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][14], 486569056);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][14], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][14], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][14], 0);

		LicPlayer[playerid][15] = CreatePlayerTextDraw(playerid, 626.000000, 188.996292, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][15], 0.000000, -0.178394);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][15], 553.666625, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][15], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][15], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][15], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][15], 144);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][15], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][15], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][15], 0);

		LicPlayer[playerid][16] = CreatePlayerTextDraw(playerid, 626.999938, 204.099975, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][16], 0.000000, -0.178394);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][16], 553.666564, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][16], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][16], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][16], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][16], 144);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][16], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][16], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][16], 0);

		LicPlayer[playerid][17] = CreatePlayerTextDraw(playerid, 628.333251, 220.033279, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][17], 0.000000, -0.178394);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][17], 553.999877, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][17], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][17], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][17], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][17], 144);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][17], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][17], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][17], 0);

		LicPlayer[playerid][18] = CreatePlayerTextDraw(playerid, 629.666625, 235.966629, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][18], 0.000000, -0.178394);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][18], 554.333251, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][18], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][18], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][18], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][18], 144);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][18], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][18], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][18], 0);

		LicPlayer[playerid][19] = CreatePlayerTextDraw(playerid, 630.000000, 251.070327, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][19], 0.000000, -0.178394);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][19], 553.666625, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][19], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][19], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][19], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][19], 144);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][19], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][19], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][19], 0);

		LicPlayer[playerid][20] = CreatePlayerTextDraw(playerid, 590.666809, 272.396209, "usebox");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][20], 0.000000, -0.178394);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][20], 513.333251, 0.000000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][20], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][20], 0);
		PlayerTextDrawUseBox(playerid, LicPlayer[playerid][20], true);
		PlayerTextDrawBoxColor(playerid, LicPlayer[playerid][20], 144);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][20], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][20], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][20], 0);

		LicPlayer[playerid][21] = CreatePlayerTextDraw(playerid, 500.000030, 161.362930, "ВОДИТЕЛЬСКОЕ");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][21], 0.287999, 1.172741);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][21], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][21], 174);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][21], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][21], 0);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][21], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][21], 2);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][21], 1);

		LicPlayer[playerid][22] = CreatePlayerTextDraw(playerid, 535.999572, 177.540893, "И/Ф");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][22], 0.171995, 0.961183);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][22], 2);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][22], 173);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][22], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][22], 0);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][22], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][22], 2);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][22], 1);

		LicPlayer[playerid][23] = CreatePlayerTextDraw(playerid, 536.666137, 223.266784, "T/C");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][23], 0.172664, 1.052441);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][23], 2);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][23], 172);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][23], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][23], 0);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][23], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][23], 2);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][23], 1);

		LicPlayer[playerid][24] = CreatePlayerTextDraw(playerid, 529.999328, 238.370513, "КАТЕГОРИЯ");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][24], 0.174329, 1.027554);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][24], 2);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][24], 172);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][24], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][24], 0);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][24], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][24], 2);

		LicPlayer[playerid][25] = CreatePlayerTextDraw(playerid, 497.999450, 265.089141, "ПОДПИСЬ");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][25], 0.164995, 0.981921);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][25], 2);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][25], 173);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][25], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][25], 0);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][25], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][25], 2);

		LicPlayer[playerid][26] = CreatePlayerTextDraw(playerid, 556.333679, 176.711135, "Kody_Landino");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][26], 0.208333, 1.019258);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][26], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][26], -1);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][26], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][26], 1);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][26], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][26], 1);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][26], 1);

		LicPlayer[playerid][27] = CreatePlayerTextDraw(playerid, 557.000366, 192.229660, "00000001");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][27], 0.208333, 1.019258);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][27], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][27], -1);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][27], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][27], 1);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][27], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][27], 1);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][27], 1);

		LicPlayer[playerid][28] = CreatePlayerTextDraw(playerid, 541.332946, 192.644454, "НОМЕР");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][28], 0.166329, 0.977774);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][28], 2);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][28], 173);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][28], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][28], 0);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][28], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][28], 2);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][28], 1);

		LicPlayer[playerid][29] = CreatePlayerTextDraw(playerid, 540.332702, 207.333435, "ДАТА");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][29], 0.174997, 1.035850);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][29], 2);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][29], 171);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][29], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][29], 0);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][29], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][29], 2);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][29], 1);

		LicPlayer[playerid][30] = CreatePlayerTextDraw(playerid, 557.000244, 207.748199, "25/05/2012");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][30], 0.208333, 1.019258);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][30], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][30], -1);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][30], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][30], 1);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][30], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][30], 1);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][30], 1);

		LicPlayer[playerid][31] = CreatePlayerTextDraw(playerid, 557.000244, 223.681533, "Sabre");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][31], 0.208333, 1.019258);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][31], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][31], -1);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][31], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][31], 1);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][31], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][31], 1);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][31], 1);

		LicPlayer[playerid][32] = CreatePlayerTextDraw(playerid, 557.333618, 238.785232, "A B C D");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][32], 0.208333, 1.019258);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][32], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][32], -1);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][32], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][32], 1);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][32], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][32], 1);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][32], 1);

		LicPlayer[playerid][33] = CreatePlayerTextDraw(playerid, 535.333740, 253.059280, "KL");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][33], 0.410999, 1.960886);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][33], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][33], 152);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][33], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][33], 0);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][33], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][33], 0);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][33], 1);

		LicPlayer[playerid][34] = CreatePlayerTextDraw(playerid, 617.999877, 163.022216, "ld_beat:cross");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][34], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][34], 10.000000, 11.614789);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][34], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][34], -69);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][34], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][34], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][34], 4);
		PlayerTextDrawSetSelectable(playerid, LicPlayer[playerid][34], true);

		LicPlayer[playerid][35] = CreatePlayerTextDraw(playerid, 606.666809, 251.377883, "ld_pool:nib");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][35], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][35], 21.333326, 24.059257);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][35], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][35], -84);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][35], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][35], 0);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][35], 4);

		LicPlayer[playerid][36] = CreatePlayerTextDraw(playerid, 614.000000, 254.696258, "P");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][36], 0.449999, 1.600000);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][36], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][36], -83);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][36], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][36], 1);
		PlayerTextDrawBackgroundColor(playerid, LicPlayer[playerid][36], 51);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][36], 1);
		PlayerTextDrawSetProportional(playerid, LicPlayer[playerid][36], 1);

		LicPlayer[playerid][37] = CreatePlayerTextDraw(playerid, 473.666656, 175.051879, "ld_otb2:butnb");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][37], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][37], 51.666652, 113.659233);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][37], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][37], 1420676335);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][37], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][37], 24);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][37], 4);
		
		LicPlayer[playerid][38] = CreatePlayerTextDraw(playerid, 473.666656, 175.051879, "hud:radar_gangB");
		PlayerTextDrawLetterSize(playerid, LicPlayer[playerid][38], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LicPlayer[playerid][38], 47.666652, 60.659233);
		PlayerTextDrawAlignment(playerid, LicPlayer[playerid][38], 1);
		PlayerTextDrawColor(playerid, LicPlayer[playerid][38], 1420676335);
		PlayerTextDrawSetShadow(playerid, LicPlayer[playerid][38], 0);
		PlayerTextDrawSetOutline(playerid, LicPlayer[playerid][38], 24);
		PlayerTextDrawFont(playerid, LicPlayer[playerid][38], 4);
		
		for ( new i = 0 ; i < 39 ; i ++ )
		{
			PlayerTextDrawShow ( playerid, LicPlayer [ playerid ] [ i ] ) ;
		}
		
		SetPVarInt(playerid, "LicPlayer", 1);
		SelectTextDraw(playerid, COLOR_ORANGE);
	}
	else
	{
	    for ( new i = 0 ; i < 39 ; i ++ )
		{
		    PlayerTextDrawHide ( playerid, LicPlayer [ playerid ] [ i ] ) ;

			PlayerTextDrawDestroy ( playerid, LicPlayer [ playerid ] [ i ] ) ;
			LicPlayer [ playerid ] [ i ] = PlayerText:-1;
		}
		DeletePVar(playerid, "LicPlayer");
		CancelSelectTextDraw(playerid);
	}
	return 1;
}

stock binder_td_status ( playerid, bool: status )
{
    if(status)
	{
    	for ( new i = 0 ; i < 40 ; i ++ )
		{
			TextDrawShowForPlayer ( playerid, Binder [ i ] ) ;
		}
		
		BinderPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 10.307478, 217.000015, "Текст не установлен");
		PlayerTextDrawLetterSize(playerid, BinderPlayer[playerid][0], 0.252752, 1.185833);
		PlayerTextDrawTextSize(playerid, BinderPlayer[playerid][0], 134.465576, 12.250000);
		PlayerTextDrawAlignment(playerid, BinderPlayer[playerid][0], 1);
		PlayerTextDrawColor(playerid, BinderPlayer[playerid][0], -1);
		PlayerTextDrawUseBox(playerid, BinderPlayer[playerid][0], true);
		PlayerTextDrawBoxColor(playerid, BinderPlayer[playerid][0], -256);
		PlayerTextDrawSetShadow(playerid, BinderPlayer[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, BinderPlayer[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, BinderPlayer[playerid][0], 51);
		PlayerTextDrawFont(playerid, BinderPlayer[playerid][0], 1);
		PlayerTextDrawSetProportional(playerid, BinderPlayer[playerid][0], 1);
		PlayerTextDrawSetSelectable(playerid, BinderPlayer[playerid][0], true);

		BinderPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 10.370436, 233.166687, "Текст не установлен");
		PlayerTextDrawLetterSize(playerid, BinderPlayer[playerid][1], 0.252752, 1.185833);
		PlayerTextDrawTextSize(playerid, BinderPlayer[playerid][1], 148.521209, 11.666666);
		PlayerTextDrawAlignment(playerid, BinderPlayer[playerid][1], 1);
		PlayerTextDrawColor(playerid, BinderPlayer[playerid][1], -1);
		PlayerTextDrawUseBox(playerid, BinderPlayer[playerid][1], true);
		PlayerTextDrawBoxColor(playerid, BinderPlayer[playerid][1], -256);
		PlayerTextDrawSetShadow(playerid, BinderPlayer[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, BinderPlayer[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, BinderPlayer[playerid][1], 51);
		PlayerTextDrawFont(playerid, BinderPlayer[playerid][1], 1);
		PlayerTextDrawSetProportional(playerid, BinderPlayer[playerid][1], 1);
		PlayerTextDrawSetSelectable(playerid, BinderPlayer[playerid][1], true);

		BinderPlayer[playerid][2] = CreatePlayerTextDraw(playerid, 10.433394, 249.916687, "Текст не установлен");
		PlayerTextDrawLetterSize(playerid, BinderPlayer[playerid][2], 0.252752, 1.185833);
		PlayerTextDrawTextSize(playerid, BinderPlayer[playerid][2], 155.080505, 15.749999);
		PlayerTextDrawAlignment(playerid, BinderPlayer[playerid][2], 1);
		PlayerTextDrawColor(playerid, BinderPlayer[playerid][2], -1);
		PlayerTextDrawUseBox(playerid, BinderPlayer[playerid][2], true);
		PlayerTextDrawBoxColor(playerid, BinderPlayer[playerid][2], -256);
		PlayerTextDrawSetShadow(playerid, BinderPlayer[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, BinderPlayer[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, BinderPlayer[playerid][2], 51);
		PlayerTextDrawFont(playerid, BinderPlayer[playerid][2], 1);
		PlayerTextDrawSetProportional(playerid, BinderPlayer[playerid][2], 1);
		PlayerTextDrawSetSelectable(playerid, BinderPlayer[playerid][2], true);

		BinderPlayer[playerid][3] = CreatePlayerTextDraw(playerid, 10.496352, 266.666717, "Текст не установлен");
		PlayerTextDrawLetterSize(playerid, BinderPlayer[playerid][3], 0.252752, 1.185833);
		PlayerTextDrawTextSize(playerid, BinderPlayer[playerid][3], 153.206420, 10.500000);
		PlayerTextDrawAlignment(playerid, BinderPlayer[playerid][3], 1);
		PlayerTextDrawColor(playerid, BinderPlayer[playerid][3], -1);
		PlayerTextDrawUseBox(playerid, BinderPlayer[playerid][3], true);
		PlayerTextDrawBoxColor(playerid, BinderPlayer[playerid][3], -256);
		PlayerTextDrawSetShadow(playerid, BinderPlayer[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, BinderPlayer[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, BinderPlayer[playerid][3], 51);
		PlayerTextDrawFont(playerid, BinderPlayer[playerid][3], 1);
		PlayerTextDrawSetProportional(playerid, BinderPlayer[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, BinderPlayer[playerid][3], true);

		BinderPlayer[playerid][4] = CreatePlayerTextDraw(playerid, 10.559309, 282.833404, "Текст не установлен");
		PlayerTextDrawLetterSize(playerid, BinderPlayer[playerid][4], 0.252752, 1.185833);
		PlayerTextDrawTextSize(playerid, BinderPlayer[playerid][4], 155.549026, 8.750000);
		PlayerTextDrawAlignment(playerid, BinderPlayer[playerid][4], 1);
		PlayerTextDrawColor(playerid, BinderPlayer[playerid][4], -1);
		PlayerTextDrawUseBox(playerid, BinderPlayer[playerid][4], true);
		PlayerTextDrawBoxColor(playerid, BinderPlayer[playerid][4], -256);
		PlayerTextDrawSetShadow(playerid, BinderPlayer[playerid][4], 0);
		PlayerTextDrawSetOutline(playerid, BinderPlayer[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, BinderPlayer[playerid][4], 51);
		PlayerTextDrawFont(playerid, BinderPlayer[playerid][4], 1);
		PlayerTextDrawSetProportional(playerid, BinderPlayer[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, BinderPlayer[playerid][4], true);
		
		for ( new i = 0 ; i < 5 ; i ++ )
		{
			PlayerTextDrawShow ( playerid, BinderPlayer [ playerid ] [ i ] ) ;
		}
		
		SelectTextDraw(playerid, COLOR_ORANGE);
		SetPVarInt(playerid, "BinderPlayer", 1);

	}
	else
	{
		for ( new i = 0 ; i < 40 ; i ++ )
		{
		    TextDrawHideForPlayer ( playerid, Binder [ i ] ) ;
		}
		for ( new i = 0 ; i < 5 ; i ++ )
		{
		    PlayerTextDrawHide ( playerid, BinderPlayer [ playerid ] [ i ] ) ;

			PlayerTextDrawDestroy ( playerid, BinderPlayer [ playerid ] [ i ] ) ;
			BinderPlayer [ playerid ] [ i ] = PlayerText:-1;
		}
		CancelSelectTextDraw(playerid);
		DeletePVar(playerid, "BinderPlayer");
	}
	return 1;
}

stock box_td_status ( playerid, bool:status)
{
	if(status)
	{
	    BoxPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 371.257904, 433.583312, "usebox");
		PlayerTextDrawLetterSize(playerid, BoxPlayer[playerid][0], 0.000000, 1.040555);
		PlayerTextDrawTextSize(playerid, BoxPlayer[playerid][0], 245.379180, 0.000000);
		PlayerTextDrawAlignment(playerid, BoxPlayer[playerid][0], 1);
		PlayerTextDrawColor(playerid, BoxPlayer[playerid][0], 269488383);
		PlayerTextDrawUseBox(playerid, BoxPlayer[playerid][0], true);
		PlayerTextDrawBoxColor(playerid, BoxPlayer[playerid][0], 102);
		PlayerTextDrawSetShadow(playerid, BoxPlayer[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, BoxPlayer[playerid][0], 0);
		PlayerTextDrawFont(playerid, BoxPlayer[playerid][0], 0);

		BoxPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 248.784774, 433.416687, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, BoxPlayer[playerid][1], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, BoxPlayer[playerid][1], 119.472915, 10.500000);
		PlayerTextDrawAlignment(playerid, BoxPlayer[playerid][1], 1);
		PlayerTextDrawColor(playerid, BoxPlayer[playerid][1], 522133503);
		PlayerTextDrawSetShadow(playerid, BoxPlayer[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, BoxPlayer[playerid][1], 0);
		PlayerTextDrawFont(playerid, BoxPlayer[playerid][1], 4);

		BoxPlayer[playerid][2] = CreatePlayerTextDraw(playerid, 248.784774, 433.416687, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, BoxPlayer[playerid][2], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, BoxPlayer[playerid][2], 0.000000, 10.500000);
		PlayerTextDrawAlignment(playerid, BoxPlayer[playerid][2], 1);
		PlayerTextDrawColor(playerid, BoxPlayer[playerid][2], 0xa24646FF);
		PlayerTextDrawSetShadow(playerid, BoxPlayer[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, BoxPlayer[playerid][2], 0);
		PlayerTextDrawFont(playerid, BoxPlayer[playerid][2], 4);

		BoxPlayer[playerid][3] = CreatePlayerTextDraw(playerid, 247.442153, 422.750152, "SEX");
		PlayerTextDrawLetterSize(playerid, BoxPlayer[playerid][3], 0.262591, 1.016666);
		PlayerTextDrawAlignment(playerid, BoxPlayer[playerid][3], 1);
		PlayerTextDrawColor(playerid, BoxPlayer[playerid][3], -1);
		PlayerTextDrawSetShadow(playerid, BoxPlayer[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, BoxPlayer[playerid][3], 1);
		PlayerTextDrawBackgroundColor(playerid, BoxPlayer[playerid][3], 51);
		PlayerTextDrawFont(playerid, BoxPlayer[playerid][3], 3);
		PlayerTextDrawSetProportional(playerid, BoxPlayer[playerid][3], 1);
		
		for ( new i = 0 ; i < 4 ; i ++ )
		{
			PlayerTextDrawShow ( playerid, BoxPlayer [ playerid ] [ i ] ) ;
		}

	}
	else
	{
		for ( new i = 0 ; i < 4 ; i ++ )
		{
		    PlayerTextDrawHide ( playerid, BoxPlayer [ playerid ] [ i ] ) ;

			PlayerTextDrawDestroy ( playerid, BoxPlayer [ playerid ] [ i ] ) ;
			BoxPlayer [ playerid ] [ i ] = PlayerText:-1;
		}
		FindStep { playerid } = 0 ;
	}
	return 1;
}

stock hospital_td_status ( playerid, bool:status )
{
	if(status)
	{
		ptd_hp[playerid][0] = CreatePlayerTextDraw(playerid, 139.745239, 276.250000, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][0], 0.020444, 5.860653);
		PlayerTextDrawTextSize(playerid, ptd_hp[playerid][0], -0.666665, 3.982222);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][0], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][0], 0);
		PlayerTextDrawUseBox(playerid, ptd_hp[playerid][0], true);
		PlayerTextDrawBoxColor(playerid, ptd_hp[playerid][0], 255);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][0], 0);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][0], 0);

		ptd_hp[playerid][1] = CreatePlayerTextDraw(playerid, 140.682281, 276.250030, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][1], 0.000000, 5.829813);
		PlayerTextDrawTextSize(playerid, ptd_hp[playerid][1], 135.276718, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][1], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][1], 0);
		PlayerTextDrawUseBox(playerid, ptd_hp[playerid][1], true);
		PlayerTextDrawBoxColor(playerid, ptd_hp[playerid][1], 0xa24646FF);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][1], 0);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][1], 0);

		ptd_hp[playerid][2] = CreatePlayerTextDraw(playerid, 3.279648, 277.666687, "hud:radar_girlfriend");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][2], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_hp[playerid][2], 14.992673, 14.583312);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][2], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][2], -1);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][2], 0);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][2], 4);

		ptd_hp[playerid][3] = CreatePlayerTextDraw(playerid, 21.083499, 278.250122, "ЗДОРОВЬЕ:_100");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][3], 0.159985, 1.634999);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][3], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][3], -1);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][3], 1);
		PlayerTextDrawBackgroundColor(playerid, ptd_hp[playerid][3], 51);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][3], 2);
		PlayerTextDrawSetProportional(playerid, ptd_hp[playerid][3], 1);

		ptd_hp[playerid][4] = CreatePlayerTextDraw(playerid, 3.748198, 291.666656, "ПРОГРЕСС");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][4], 0.171698, 1.594166);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][4], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][4], -1);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][4], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][4], 1);
		PlayerTextDrawBackgroundColor(playerid, ptd_hp[playerid][4], 51);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][4], 2);
		PlayerTextDrawSetProportional(playerid, ptd_hp[playerid][4], 1);

		ptd_hp[playerid][5] = CreatePlayerTextDraw(playerid, 113.976577, 303.666717, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][5], 0.000000, -0.233886);
		PlayerTextDrawTextSize(playerid, ptd_hp[playerid][5], 41.572471, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][5], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][5], 0);
		PlayerTextDrawUseBox(playerid, ptd_hp[playerid][5], true);
		PlayerTextDrawBoxColor(playerid, ptd_hp[playerid][5], 170524927);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][5], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][5], 0);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][5], 0);

		ptd_hp[playerid][6] = CreatePlayerTextDraw(playerid, 113.976577, 303.666717, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][6], 0.000000, -0.233886);
		PlayerTextDrawTextSize(playerid, ptd_hp[playerid][6], 41.572471, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][6], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][6], 0);
		PlayerTextDrawUseBox(playerid, ptd_hp[playerid][6], true);
		PlayerTextDrawBoxColor(playerid, ptd_hp[playerid][6], 763302655);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][6], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][6], 0);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][6], 0);

		ptd_hp[playerid][7] = CreatePlayerTextDraw(playerid, 114.787734, 293.416625, "100%");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][7], 0.207304, 1.378334);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][7], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][7], -1);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][7], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][7], 1);
		PlayerTextDrawBackgroundColor(playerid, ptd_hp[playerid][7], 51);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][7], 2);
		PlayerTextDrawSetProportional(playerid, ptd_hp[playerid][7], 1);

		ptd_hp[playerid][8] = CreatePlayerTextDraw(playerid, 22.957538, 304.499847, "ДО ВЫПИСКИ ПРИМЕРНО ~G~100~W~ СЕК");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][8], 0.140771, 1.366665);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][8], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][8], -1);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][8], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][8], 1);
		PlayerTextDrawBackgroundColor(playerid, ptd_hp[playerid][8], 51);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][8], 2);
		PlayerTextDrawSetProportional(playerid, ptd_hp[playerid][8], 1);

		ptd_hp[playerid][9] = CreatePlayerTextDraw(playerid, 2.342647, 316.749969, "ПРИ СВОРАЧИВАНИИ ИГРЫ ЛЕЧЕНИЕ ПРИОСТАНАВЛИВАЕТСЯ");
		PlayerTextDrawLetterSize(playerid, ptd_hp[playerid][9], 0.105636, 1.209164);
		PlayerTextDrawAlignment(playerid, ptd_hp[playerid][9], 1);
		PlayerTextDrawColor(playerid, ptd_hp[playerid][9], -2139062017);
		PlayerTextDrawSetShadow(playerid, ptd_hp[playerid][9], 0);
		PlayerTextDrawSetOutline(playerid, ptd_hp[playerid][9], 1);
		PlayerTextDrawBackgroundColor(playerid, ptd_hp[playerid][9], 51);
		PlayerTextDrawFont(playerid, ptd_hp[playerid][9], 2);
		PlayerTextDrawSetProportional(playerid, ptd_hp[playerid][9], 1);
		
		for ( new i = 0 ; i < 10 ; i ++ )
		{
			PlayerTextDrawShow ( playerid, ptd_hp [ playerid ] [ i ] ) ;
		}

	}
	else
	{
		for ( new i = 0 ; i < 10 ; i ++ )
		{
		    PlayerTextDrawHide ( playerid, ptd_hp [ playerid ] [ i ] ) ;

			PlayerTextDrawDestroy ( playerid, ptd_hp [ playerid ] [ i ] ) ;
			ptd_hp [ playerid ] [ i ] = PlayerText:-1;
		}
	}
	return 1;
}

stock action_td_status ( playerid, bool:status )
{
	if ( status )
	{
		TogglePlayerControllable(playerid, false);

		action_ptd [ playerid ] [ 0] = CreatePlayerTextDraw(playerid, 234.166610, 315.740783, "LD_SPAC:white" ) ;
		PlayerTextDrawLetterSize(playerid, action_ptd [ playerid ] [ 0 ], 0.000000, 0.000000 ) ;
		PlayerTextDrawTextSize(playerid, action_ptd [ playerid ] [ 0 ], 170.833282, 37.629592 ) ;
		PlayerTextDrawAlignment(playerid, action_ptd [ playerid ] [ 0 ], 1 ) ;
		PlayerTextDrawColor(playerid, action_ptd [ playerid ] [ 0 ], 269488383 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 0 ], 0 ) ;
		PlayerTextDrawSetOutline(playerid, action_ptd [ playerid ] [ 0 ], 0 ) ;
  		PlayerTextDrawBackgroundColor(playerid, action_ptd [ playerid ] [ 0 ], 255 ) ;
		PlayerTextDrawFont(playerid, action_ptd [ playerid ] [ 0 ], 4 ) ;
		PlayerTextDrawSetProportional(playerid, action_ptd [ playerid ] [ 0 ], 0 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 0 ], 0 ) ;

		action_ptd [ playerid ] [ 1] = CreatePlayerTextDraw(playerid, 236.666671, 337.000091, "LD_SPAC:white" ) ;
		PlayerTextDrawLetterSize(playerid, action_ptd [ playerid ] [ 1], 0.000000, 0.000000 ) ;
		PlayerTextDrawTextSize(playerid, action_ptd [ playerid ] [ 1], 165.416595, 12.740738 ) ;
		PlayerTextDrawAlignment(playerid, action_ptd [ playerid ] [ 1], 1 ) ;
		PlayerTextDrawColor(playerid, action_ptd [ playerid ] [ 1], 522133503 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 1], 0 ) ;
		PlayerTextDrawSetOutline(playerid, action_ptd [ playerid ] [ 1], 0 ) ;
		PlayerTextDrawBackgroundColor(playerid, action_ptd [ playerid ] [ 1], 255 ) ;
		PlayerTextDrawFont(playerid, action_ptd [ playerid ] [ 1], 4 ) ;
		PlayerTextDrawSetProportional(playerid, action_ptd [ playerid ] [ 1], 0 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 1], 0 ) ;

		action_ptd [ playerid ] [ 2] = CreatePlayerTextDraw(playerid, 236.666671, 337.000091, "LD_SPAC:white" ) ;
		PlayerTextDrawLetterSize(playerid, action_ptd [ playerid ] [ 2], 0.000000, 0.000000 ) ;
		PlayerTextDrawTextSize(playerid, action_ptd [ playerid ] [ 2], 0, 12.740738 ) ;
		PlayerTextDrawAlignment(playerid, action_ptd [ playerid ] [ 2], 1 ) ;
		PlayerTextDrawColor(playerid, action_ptd [ playerid ] [ 2], 0xa24646FF ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 2], 0 ) ;
		PlayerTextDrawSetOutline(playerid, action_ptd [ playerid ] [ 2], 0 ) ;
		PlayerTextDrawBackgroundColor(playerid, action_ptd [ playerid ] [ 2], 255 ) ;
		PlayerTextDrawFont(playerid, action_ptd [ playerid ] [ 2], 4 ) ;
		PlayerTextDrawSetProportional(playerid, action_ptd [ playerid ] [ 2], 0 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 2], 0 ) ;

		action_ptd [ playerid ] [ 3] = CreatePlayerTextDraw(playerid, 319.583343, 321.185180, "НАЖМИТЕ:_Y" ) ;
		PlayerTextDrawLetterSize(playerid, action_ptd [ playerid ] [ 3], 0.280833, 1.216295 ) ;
		PlayerTextDrawAlignment(playerid, action_ptd [ playerid ] [ 3], 2 ) ;
		PlayerTextDrawColor(playerid, action_ptd [ playerid ] [ 3], -1 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 3], 0 ) ;
		PlayerTextDrawSetOutline(playerid, action_ptd [ playerid ] [ 3], 0 ) ;
		PlayerTextDrawBackgroundColor(playerid, action_ptd [ playerid ] [ 3], 255 ) ;
		PlayerTextDrawFont(playerid, action_ptd [ playerid ] [ 3], 1 ) ;
		PlayerTextDrawSetProportional(playerid, action_ptd [ playerid ] [ 3], 1 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 3], 0 ) ;

		action_ptd [ playerid ] [ 4] = CreatePlayerTextDraw(playerid, 318.333435, 337.259277, "0/10" ) ;
		PlayerTextDrawLetterSize(playerid, action_ptd [ playerid ] [ 4], 0.280833, 1.216295 ) ;
		PlayerTextDrawAlignment(playerid, action_ptd [ playerid ] [ 4], 2 ) ;
		PlayerTextDrawColor(playerid, action_ptd [ playerid ] [ 4], -1 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 4], 0 ) ;
		PlayerTextDrawSetOutline(playerid, action_ptd [ playerid ] [ 4], 0 ) ;
		PlayerTextDrawBackgroundColor(playerid, action_ptd [ playerid ] [ 4], 255 ) ;
		PlayerTextDrawFont(playerid, action_ptd [ playerid ] [ 4], 1 ) ;
		PlayerTextDrawSetProportional(playerid, action_ptd [ playerid ] [ 4], 1 ) ;
		PlayerTextDrawSetShadow(playerid, action_ptd [ playerid ] [ 4], 0 ) ;

		switch ( random ( 2 ) )
		{
			case 0: action_key [ playerid ] = KEY_YES, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_Y" ) ;
			case 1: action_key [ playerid ] = KEY_NO, PlayerTextDrawSetString ( playerid, action_ptd [ playerid ] [ 3 ], "НАЖМИТЕ:_N" ) ;
		}
		for ( new i = 0 ; i < 5 ; i ++ )
		{
			PlayerTextDrawShow ( playerid, action_ptd [ playerid ] [ i ] ) ;
		}

	}
	else
	{
		TogglePlayerControllable(playerid, true);
		for ( new i = 0 ; i < 5 ; i ++ )
		{
		    PlayerTextDrawHide ( playerid, action_ptd [ playerid ] [ i ] ) ;
		
			PlayerTextDrawDestroy ( playerid, action_ptd [ playerid ] [ i ] ) ;
			action_ptd [ playerid ] [ i ] = PlayerText:-1;
		}
		action_types { playerid } = 0 ;
		action_step { playerid } = 0 ;
		action_key [ playerid ] = 0 ;
	}
	return 1;
}

stock UpdateFamilyStore(fracid)
{
	new scat[512];
	format(scat, 512, "UPDATE "T_FAMILY" SET `frac_patron` = '%d', `frac_metall` = '%d', `frac_money` = '%d', `frac_drugs` = '%d' WHERE `fam_id` = '%d' LIMIT 1", family_info[fracid][f_patron],family_info[fracid][f_metall],family_info[fracid][f_money],family_info[fracid][f_drugs],fracid);
	mysql_tquery(dbHandle,scat,"","");
	return 1;
}

cmd:addfamily(playerid)
{
	if(p_info[playerid][pAdmin] < 9) return 1;
	ShowPlayerDialogEx(playerid, 701, DIALOG_STYLE_INPUT, "{ebec86}>> Создание семьи","{FFFFFF}Для создании семьи необходимо иметь 500 кредитов и 10 уровень.\n\nНазвание семьи можно будет изменить в дальнейшем\nВведите название семьи:","Далее","Закрыть");
	return 1;
}

cmd:familylist(playerid, params[])
{
    if(p_info[playerid][pAdmin] < 9) return 1;
    new stringer1[128];
    STRING_GLOBAL = "";
    for(new i = 1; i <= family_count; i ++)
	{
	    new dial[100];
		format(dial, sizeof(dial), "№%d - {f0e86b}%s{ffffff}\n", i, family_info[i][f_name]);
		strcat(STRING_GLOBAL, dial);
  	}

	format(stringer1, 128, "{ebec86}>> Семьи сервера. (Количество: {FFFFFF}%d{ebec86})", family_count);
	ShowPlayerDialogEx(playerid, D_NULL, 2, stringer1, STRING_GLOBAL, "Принять", "");
	return 1;
}

cmd:setfamily(playerid, params[])
{
    if(p_info[playerid][pAdmin] < 9) return 1;
	if(sscanf(params, "ui", params[0], params[1])) return SendInf(playerid, "/setfamily [id игрока] [номер семьи]");
	p_info[params[0]][pFamily] = params[1];
	MysqlUpdatePlayerInt(params[0], "family", p_info[params[0]][pFamily]);
	p_info[params[0]][pFamilySozd] = params[1];
	MysqlUpdatePlayerInt(params[0], "familysozd", p_info[params[0]][pFamilySozd]);
	p_info[params[0]][pFamilyZam] = params[1];
	MysqlUpdatePlayerInt(params[0], "familyzam", p_info[params[0]][pFamilyZam]);
	
	strmid (family_info [params[1]] [f_creator], GetName(params[0]), 0, strlen(GetName(params[0])), strlen(GetName(params[0]))+5);
	new sql_string [200];
	mysql_format(dbHandle, sql_string, 200, "UPDATE "T_FAMILY" SET `fam_creator` = '%s' WHERE `fam_id` = '%d' LIMIT 1",
	family_info [ p_info[params[0]][pFamily] ] [ f_creator ],  p_info[params[0]][pFamily] );
	mysql_query(dbHandle, sql_string);
					
	SendInf(playerid, "Вы успешно установили семью игроку");
	return 1;
}

GiveRobbery(playerid)
{
	STRING_GLOBAL = "";
	new Float:pos[3];
	new str[128], name[MAX_PLAYER_NAME];
	new NoPlayers = 0;
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	if(IsPlayerConnected(playerid))
	{
		foreach(new i : Player)
		{
		    if(IsACop(i)) continue;
			if(!IsPlayerInRangeOfPoint(i, 10.0, pos[0],pos[1],pos[2])) continue;
			GetPlayerName(i,name,MAX_PLAYER_NAME);
			format(str,128,"%s [%d]\n",name, i);
			strcat(STRING_GLOBAL,str);
			p_info[playerid][pListPlayers][NoPlayers] = i;
			NoPlayers++;
		}
		ShowPlayerDialogEx(playerid, dRobbery+1, DIALOG_STYLE_LIST, "{ebec86}>> Выберите игрока", STRING_GLOBAL, "Далее", "Отмена");
	}
	if(!NoPlayers)
	{
	    robbery = 0;
	    ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Ошибка", "{FFFFFF}Поблизости нет игроков которым можно выдать роль", "Принять", "");
		foreach(new i : Player)
		{
			if(robbery_players[i] == -1) continue;

			robbery_team[0] = 0;
			robbery_players[i] = -1;
			DeletePVar(i, "RobberyPlayer");
		}
		return 1;
	}
	return 1;
}

ConvertTime(Seconds)
{
	new TimeStr[20];
	new Minutes = floatround(Seconds/60);
	Seconds -= Minutes*60;
	format(TimeStr, sizeof(TimeStr), "%02d:%02d", Minutes, Seconds);
	return TimeStr;
}

stock ReloadRobbery()
{
    robbery_time[0] = 0;
	robbery_team[0] = 0;
	robbery_bank[0] = -2;
	robbery_money[0] = 0;
	robbery_map[0] = 0;
	robbery_mask[0] = 0;
	robbery_gun[0] = 0;
	robbery_car[0] = 0;
}

CMD:logs(playerid)
{
	if(p_info[playerid][pAdmin] < 8) return 1;
    ShowPlayerDialogEx(playerid, 2299, 2, "{ebec86}>> Внутриигровое логирование", "1. Кикнутые игроки\n2. Заварненные игроки\n3. Забаненные игроки\n4. Разбаненные игроки\n5. Разварненные игроки\
	\n7. Лидерство\n8. Посаженные в тюрьму\n9. Замученные игроки\n10. Размученные игроки\n11. Выпущенные из тюрьмы\n12. Принятые игроки в орг\n13. Уволенные игроки\n14. Лог повышений\n15. Денежные операции\n16. Денежные операции орг\n17. Операции с /lmenu\n18. Действия ГА", "Выбрать", "Выйти");
    if(GetPVarInt(playerid, "GetTypeLogs")) DeletePVar(playerid, "GetTypeLogs");
	return 1;
}

forward GetLogs(playerid, Types);
public GetLogs(playerid, Types)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new sqlcmd[256];
	new level[128], awarn1, id;
	new Adminlevel, Helperlevel;
	if ( ! rows ) return SendErr ( playerid, "Активных логов не найдено." ) ;
	if(rows)
	{
  		for ( new i ; i < rows ; i ++ )
		{
			cache_get_field_content(i, "type", sqlcmd), id = strval(sqlcmd);
			cache_get_field_content(i, "Text", sqlcmd), strmid(level, sqlcmd, 0, strlen(sqlcmd), 128);
			cache_get_field_content(i, "day", sqlcmd), Adminlevel = strval(sqlcmd);
			cache_get_field_content(i, "month", sqlcmd), Helperlevel = strval(sqlcmd);
			cache_get_field_content(i, "year", sqlcmd), awarn1 = strval(sqlcmd);
			
			if(Types == id)
			{
				format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "%s%s, %d.%d.%d\n", STRING_GLOBAL, level, Adminlevel, Helperlevel, awarn1);
			}
		}
	}
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, "{ebec86}>> Внутриигровое логирование", STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward GetLogsRang(playerid, member);
public GetLogsRang(playerid, member)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new sqlcmd[256], stringer1[128];
	new level[128], awarn1, org, Adminlevel, Helperlevel;
	if ( ! rows ) return SendErr ( playerid, "Активных логов не найдено." ) ;
	if(rows)
	{
  		for ( new i ; i < rows ; i ++ )
		{
			cache_get_field_content(i, "member", sqlcmd), org = strval(sqlcmd);
			cache_get_field_content(i, "Text", sqlcmd), strmid(level, sqlcmd, 0, strlen(sqlcmd), 128);
			cache_get_field_content(i, "day", sqlcmd), Adminlevel = strval(sqlcmd);
			cache_get_field_content(i, "month", sqlcmd), Helperlevel = strval(sqlcmd);
			cache_get_field_content(i, "year", sqlcmd), awarn1 = strval(sqlcmd);

			if(member == org)
			{
				format(STRING_GLOBAL, 128, "%s%s, %d.%d.%d\n",
				STRING_GLOBAL, level, Adminlevel, Helperlevel, awarn1);
			}
		}
	}
	format(stringer1, sizeof stringer1, "{ebec86}>> Внутриигровое логирование (%s)", Fractions[member][fractionName]);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward GetLogsUval(playerid, member);
public GetLogsUval(playerid, member)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new sqlcmd[256], stringer1[128];
	new level[128], awarn1, org, Adminlevel, Helperlevel;
	if ( ! rows ) return SendErr ( playerid, "Активных логов не найдено." ) ;
	if(rows)
	{
  		for ( new i ; i < rows ; i ++ )
		{
			cache_get_field_content(i, "member", sqlcmd), org = strval(sqlcmd);
			cache_get_field_content(i, "Text", sqlcmd), strmid(level, sqlcmd, 0, strlen(sqlcmd), 128);
			cache_get_field_content(i, "day", sqlcmd), Adminlevel = strval(sqlcmd);
			cache_get_field_content(i, "month", sqlcmd), Helperlevel = strval(sqlcmd);
			cache_get_field_content(i, "year", sqlcmd), awarn1 = strval(sqlcmd);

			if(member == org)
			{
				format(STRING_GLOBAL, 128, "%s%s, Date: %d.%d.%d\n",
				STRING_GLOBAL, level, Adminlevel, Helperlevel, awarn1);
			}
		}
	}
	format(stringer1, sizeof stringer1, "{ebec86}>> Внутриигровое логирование (%s)", Fractions[member][fractionName]);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward GetLogsInvite(playerid, member);
public GetLogsInvite(playerid, member)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new sqlcmd[256], stringer1[128];
	new level[128], awarn1, org, Adminlevel, Helperlevel;
	if ( ! rows ) return SendErr ( playerid, "Активных логов не найдено." ) ;
	if(rows)
	{
  		for ( new i ; i < rows ; i ++ )
		{
			cache_get_field_content(i, "member", sqlcmd), org = strval(sqlcmd);
			cache_get_field_content(i, "Text", sqlcmd), strmid(level, sqlcmd, 0, strlen(sqlcmd), 128);
			cache_get_field_content(i, "day", sqlcmd), Adminlevel = strval(sqlcmd);
			cache_get_field_content(i, "month", sqlcmd), Helperlevel = strval(sqlcmd);
			cache_get_field_content(i, "year", sqlcmd), awarn1 = strval(sqlcmd);

			if(member == org)
			{
				format(STRING_GLOBAL, 128, "%s%s, Date: %d.%d.%d\n",
				STRING_GLOBAL, level, Adminlevel, Helperlevel, awarn1);
			}
		}
	}
	format(stringer1, sizeof stringer1, "{ebec86}>> Внутриигровое логирование (%s)", Fractions[member][fractionName]);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward GetLogsObwyak(playerid, member);
public GetLogsObwyak(playerid, member)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new sqlcmd[256], stringer1[128];
	new level[128], awarn1, org, Adminlevel, Helperlevel;
	if ( ! rows ) return SendErr ( playerid, "Активных логов не найдено." ) ;
	if(rows)
	{
  		for ( new i ; i < rows ; i ++ )
		{
			cache_get_field_content(i, "member", sqlcmd), org = strval(sqlcmd);
			cache_get_field_content(i, "Text", sqlcmd), strmid(level, sqlcmd, 0, strlen(sqlcmd), 128);
			cache_get_field_content(i, "day", sqlcmd), Adminlevel = strval(sqlcmd);
			cache_get_field_content(i, "month", sqlcmd), Helperlevel = strval(sqlcmd);
			cache_get_field_content(i, "year", sqlcmd), awarn1 = strval(sqlcmd);

			if(member == org)
			{
				format(STRING_GLOBAL, 128, "%s%s, %d.%d.%d\n",
				STRING_GLOBAL, level, Adminlevel, Helperlevel, awarn1);
			}
		}
	}
	format(stringer1, sizeof stringer1, "{ebec86}>> Внутриигровое логирование (%s)", Fractions[member][fractionName]);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward GetLogsLmenu(playerid, member);
public GetLogsLmenu(playerid, member)
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new sqlcmd[256], stringer1[128];
	new level[128], awarn1, org, Adminlevel, Helperlevel;
	if ( ! rows ) return SendErr ( playerid, "Активных логов не найдено." ) ;
	if(rows)
	{
  		for ( new i ; i < rows ; i ++ )
		{
			cache_get_field_content(i, "member", sqlcmd), org = strval(sqlcmd);
			cache_get_field_content(i, "Text", sqlcmd), strmid(level, sqlcmd, 0, strlen(sqlcmd), 128);
			cache_get_field_content(i, "day", sqlcmd), Adminlevel = strval(sqlcmd);
			cache_get_field_content(i, "month", sqlcmd), Helperlevel = strval(sqlcmd);
			cache_get_field_content(i, "year", sqlcmd), awarn1 = strval(sqlcmd);

			if(member == org)
			{
				format(STRING_GLOBAL, 128, "%s%s, %d.%d.%d\n",
				STRING_GLOBAL, level, Adminlevel, Helperlevel, awarn1);
			}
		}
	}
	format(stringer1, sizeof stringer1, "{ebec86}>> Внутриигровое логирование (%s)", Fractions[member][fractionName]);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward GetLogsMoney(playerid, name[]);
public GetLogsMoney(playerid, name[])
{
    STRING_GLOBAL[0] = EOS;
	new rows, fields;
	cache_get_data(rows, fields);
	new sqlcmd[256], stringer1[128];
	new text[32], awarn1, org[32], Adminlevel, Helperlevel;
	if ( ! rows ) return SendErr ( playerid, "Активных логов не найдено." ) ;
	if(rows)
	{
  		for ( new i ; i < rows ; i ++ )
		{
			cache_get_field_content(i, "Name", sqlcmd), strmid(name, sqlcmd, 0, strlen(sqlcmd), 32);
			cache_get_field_content(i, "Cash", sqlcmd), Adminlevel = strval(sqlcmd);
			cache_get_field_content(i, "Remain", sqlcmd), Helperlevel = strval(sqlcmd);
			cache_get_field_content(i, "Money", sqlcmd), awarn1 = strval(sqlcmd);
			cache_get_field_content(i, "Action", sqlcmd), strmid(org, sqlcmd, 0, strlen(sqlcmd), 32);
			cache_get_field_content(i, "Date", sqlcmd), strmid(text, sqlcmd, 0, strlen(sqlcmd), 32);

			format(STRING_GLOBAL, 128, "%sВсего: %d, Стало: %d, %d, %s, %s\n",
			STRING_GLOBAL, Adminlevel, Helperlevel, awarn1, org, text);
		}
	}
	format(stringer1, sizeof stringer1, "{ebec86}>> Внутриигровое логирование. (%s)", name);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, stringer1, STRING_GLOBAL, "Закрыть", "");
	return 1;
}

stock WriteLog(type, text[])
{
	new day, month, year;
	getdate(year, month, day);

	format(STRING_GLOBAL, 256, "INSERT INTO `wrp_log`(`member`, `type`, `Text`, `day`, `month`, `year`) VALUES ('0','%d','%s','%02d','%02d','%d')", type, text, day, month, year);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

stock WriteLogs(org, type, text[])
{
	new day, month, year;
	getdate(year, month, day);

	format(STRING_GLOBAL, 256, "INSERT INTO `wrp_log`(`member`, `type`, `Text`, `day`, `month`, `year`) VALUES ('%d','%d','%s','%02d','%02d','%d')", org, type, text, day, month, year);
	mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	return 1;
}

CMD:unhgatecreate ( playerid )
{
    if(p_info[playerid][pAdmin] < 7) return 1;
	if ( ! gates_adding ) return SendErr(playerid, "Никто не добавляет ворота" ) ;
	DestroyDynamicObject ( gate_info [ gates_count ] [ g_object ] ) ;
	gates_adding = 0 ;
	SendInf(playerid, "Создание ворот отменено" ) ;
	return 1 ;
}

CMD:hgatecreate ( playerid, params [ ] )
{
	if(gates_adding == 2)
	{
	    EditDynamicObject ( playerid,  gate_info [ gates_count ] [ g_object ] ) ;
	    return 1;
	}
    if(p_info[playerid][pAdmin] < 7) return 1;
	if ( gates_adding ) return SendErr(playerid, "Кто-то уже добавляет ворота" ) ;
	if ( sscanf(params, "dd", params [ 0 ], params [ 1 ], params [ 2 ] ) ) return SendInf(playerid, "/hgatecreate [модель] [дом] [1 - Ворота, 2 - Забор]" ) ;
	SetPVarInt ( playerid, "gate_model", params [ 0 ] ) ;

	GetPlayerPos(playerid, gate_info [ gates_count ] [ g_pos ] [ 0 ], gate_info [ gates_count ] [ g_pos ] [ 1 ], gate_info [ gates_count ] [ g_pos ] [ 2 ] ) ;
	gates_adding = 1 ;
	gate_info [ gates_count ] [ g_house ] = params [ 1 ] ;
	gate_info [ gates_count ] [ g_select ] = params [ 2 ] ;
	gate_info [ gates_count ] [ g_object ] = CreateDynamicObject ( params [ 0 ],
																 gate_info [ gates_count ] [ g_pos ] [ 0 ],
																 gate_info [ gates_count ] [ g_pos ] [ 1 ],
																 gate_info [ gates_count ] [ g_pos ] [ 2 ],
																 gate_info [ gates_count ] [ g_pos ] [ 3 ],
																 gate_info [ gates_count ] [ g_pos ] [ 4 ],
																 gate_info [ gates_count ] [ g_pos ] [ 5 ]) ;
	EditDynamicObject ( playerid,  gate_info [ gates_count ] [ g_object ] ) ;
	SendInf(playerid, "Установите позицию закрытых ворот" ) ;

	return 1 ;
}

forward gates_loading ( ) ;
public gates_loading ( )
{
	new rows, fields;
	cache_get_data(rows, fields);
	for(new i = 0; i < rows; i++)
	{
		gate_info [ i ] [ g_inc ] = cache_get_field_content_int ( i, "g_id", dbHandle ) ;
		new gate_model = cache_get_field_content_int ( i, "g_model", dbHandle ) ;
		gate_info [ i ] [ g_house ] = cache_get_field_content_int ( i, "g_house", dbHandle ) ;
		gate_info [ i ] [ g_select ] = cache_get_field_content_int ( i, "g_select", dbHandle ) ;

		gate_info [ i ] [ g_pos ] [ 0 ] = cache_get_field_content_float ( i,"g_pos_0", dbHandle ) ;
		gate_info [ i ] [ g_pos ] [ 1 ] = cache_get_field_content_float ( i,"g_pos_1", dbHandle ) ;
		gate_info [ i ] [ g_pos ] [ 2 ] = cache_get_field_content_float ( i,"g_pos_2", dbHandle ) ;
		gate_info [ i ] [ g_pos ] [ 3 ] = cache_get_field_content_float ( i,"g_pos_3", dbHandle ) ;
		gate_info [ i ] [ g_pos ] [ 4 ] = cache_get_field_content_float ( i,"g_pos_4", dbHandle ) ;
		gate_info [ i ] [ g_pos ] [ 5 ] = cache_get_field_content_float ( i,"g_pos_5", dbHandle ) ;

		gate_info [ i ] [ g_opened_pos ] [ 0 ] = cache_get_field_content_float ( i,"g_o_pos_0", dbHandle ) ;
		gate_info [ i ] [ g_opened_pos ] [ 1 ] = cache_get_field_content_float ( i,"g_o_pos_1", dbHandle ) ;
		gate_info [ i ] [ g_opened_pos ] [ 2 ] = cache_get_field_content_float ( i,"g_o_pos_2", dbHandle ) ;
		gate_info [ i ] [ g_opened_pos ] [ 3 ] = cache_get_field_content_float ( i,"g_o_pos_3", dbHandle ) ;
		gate_info [ i ] [ g_opened_pos ] [ 4 ] = cache_get_field_content_float ( i,"g_o_pos_4", dbHandle ) ;
		gate_info [ i ] [ g_opened_pos ] [ 5 ] = cache_get_field_content_float ( i,"g_o_pos_5", dbHandle ) ;

		gate_info [ i ] [ g_object ] = CreateDynamicObject ( gate_model, gate_info [ i ] [ g_pos ] [ 0 ], gate_info [ i ] [ g_pos ] [ 1 ], gate_info [ i ] [ g_pos ] [ 2 ], gate_info [ i ] [ g_pos ] [ 3 ], gate_info [ i ] [ g_pos ] [ 4 ], gate_info [ i ] [ g_pos ] [ 5 ], -1, -1, -1, 150.0, 150.0 ) ;
		gates_count++;
	}

	printf ( "-> Ворота загружены (%d ворот)", gates_count ) ;
	return 1;
}

forward house_gate_close ( i ) ;
public house_gate_close ( i )
{
	MoveDynamicObject ( gate_info [ i ] [ g_object ],
									gate_info [ i ] [ g_pos ] [ 0 ],
									gate_info [ i ] [ g_pos ] [ 1 ],
									gate_info [ i ] [ g_pos ] [ 2 ],
									5.0,
									gate_info [ i ] [ g_pos ] [ 3 ],
									gate_info [ i ] [ g_pos ] [ 4 ],
									gate_info [ i ] [ g_pos ] [ 5 ] ) ;

	return 1 ;
}

forward areas_loading ( ) ;
public areas_loading ( )
{
	area_count = cache_get_row_count() ;
	if ( area_count )
	{
       	for ( new t = 0; t < area_count ; t++ )
        {

			area_info [ t ] [ a_id ] = cache_get_field_content_int ( t, "area_id", dbHandle ) ;

			area_info [ t ] [ a_pick ] = cache_get_field_content_int ( t, "area_pickup", dbHandle ) ;
			area_info [ t ] [ a_house ] = cache_get_field_content_int ( t, "area_house", dbHandle ) ;

			area_info [ t ] [ a_pos ] [ 0 ] = cache_get_field_content_float ( t, "area_x", dbHandle ) ;
			area_info [ t ] [ a_pos ] [ 1 ] = cache_get_field_content_float ( t, "area_y", dbHandle ) ;
			area_info [ t ] [ a_pos ] [ 2 ] = cache_get_field_content_float ( t, "area_z", dbHandle ) ;
			area_info [ t ] [ a_pos ] [ 3 ] = cache_get_field_content_float ( t, "area_c", dbHandle ) ;
			area_info [ t ] [ a_to_pos ] [ 0 ] = cache_get_field_content_float ( t, "area_to_x", dbHandle ) ;
			area_info [ t ] [ a_to_pos ] [ 1 ] = cache_get_field_content_float ( t, "area_to_y", dbHandle ) ;
			area_info [ t ] [ a_to_pos ] [ 2 ] = cache_get_field_content_float ( t, "area_to_z", dbHandle ) ;
			area_info [ t ] [ a_to_pos ] [ 3 ] = cache_get_field_content_float ( t, "area_to_c", dbHandle ) ;

			area_info [ t ] [ a_virt_world ] [ 0 ] = cache_get_field_content_int ( t, "area_virtual_world", dbHandle ) ;
			area_info [ t ] [ a_virt_world ] [ 1 ] = cache_get_field_content_int ( t, "area_to_virtual_world", dbHandle ) ;
			area_info [ t ] [ a_interior ] [ 0 ] = cache_get_field_content_int ( t, "area_interior", dbHandle ) ;
			area_info [ t ] [ a_interior ] [ 1 ] = cache_get_field_content_int ( t, "area_to_interior", dbHandle ) ;

			CreateDynamicPickup ( area_info [ t ] [ a_pick ], 23, area_info [ t ] [ a_pos ] [ 0 ], area_info [ t ] [ a_pos ] [ 1 ], area_info [ t ] [ a_pos ] [ 2 ], area_info [ t ] [ a_virt_world ] [ 0 ] ) ;
			area_info [ t ] [ a_area ] [ 0 ] = CreateDynamicSphere ( area_info [ t ] [ a_pos ] [ 0 ], area_info [ t ] [ a_pos ] [ 1 ], area_info [ t ] [ a_pos ] [ 2 ], 1.0 ) ;
			CreateDynamicPickup ( area_info [ t ] [ a_pick ], 23, area_info [ t ] [ a_to_pos ] [ 0 ], area_info [ t ] [ a_to_pos ] [ 1 ], area_info [ t ] [ a_to_pos ] [ 2 ], area_info [ t ] [ a_virt_world ] [ 1 ] ) ;
			area_info [ t ] [ a_area ] [ 1 ] = CreateDynamicSphere ( area_info [ t ] [ a_to_pos ] [ 0 ], area_info [ t ] [ a_to_pos ] [ 1 ], area_info [ t ] [ a_to_pos ] [ 2 ], 1.0 ) ;

            area_type { area_info [ t ] [ a_area ] [ 0 ] } = area_type_house ;
			area_type { area_info [ t ] [ a_area ] [ 1 ] } = area_type_house ;
		}
    }
    printf ( "-> Areas загружены (%d areas)", area_count ) ;
	return 1;
}

CMD:createarea(playerid, params[])
{
    if(p_info[playerid][pAdmin] < 9) return 1;
	if ( area_count >= sizeof ( area_info ) ) return SendErr ( playerid, "Ошибка создания телепорта. Выход за пределы area_info" ) ;
	if ( area_adding ) return SendErr(playerid, "Кто-то уже добавляет телепорт" ) ;
	if ( sscanf(params, "d", params [ 0 ] ) ) return SendInf(playerid, "/createarea [дом]" ) ;

	area_adding = 1 ;
	SetPVarInt ( playerid, "area_creating", 1 ) ;

	area_info [ area_count ] [ a_house ] = params [ 0 ] ;

	area_info [ area_count ] [ a_virt_world ] [ 0 ] = GetPlayerVirtualWorld ( playerid ) ;
	area_info [ area_count ] [ a_interior ] [ 0 ] = GetPlayerInterior ( playerid ) ;
	GetPlayerPos ( playerid, area_info [ area_count ] [ a_pos ] [ 0 ], area_info [ area_count ] [ a_pos ] [ 1 ], area_info [ area_count ] [ a_pos ] [ 2 ] ) ;
	GetPlayerFacingAngle ( playerid, area_info [ area_count ] [ a_pos ] [ 3 ] ) ;

	SendInf ( playerid, "Переходите к следующему этапу создания. (/endarea [id пикапа] (если не знаете иды пикапов, то оставьте пустым)" ) ;
	return 1;
}

CMD:endarea(playerid, params[])
{
	if(p_info[playerid][pAdmin] < 9) return 1;
	if ( area_count >= sizeof ( area_info ) ) return SendErr ( playerid, "Ошибка создания телепорта. Выход за пределы area_info" ) ;
	if ( ! GetPVarInt ( playerid, "area_creating" ) ) return 1 ;

	if ( sscanf(params, "d", params [ 0 ] ) ) area_info [ area_count ] [ a_pick ] = 1318 ;
	else area_info [ area_count ] [ a_pick ] = params [ 0 ] ;

	DeletePVar ( playerid, "area_creating" ) ;

	area_info [ area_count ] [ a_virt_world ] [ 1 ] = GetPlayerVirtualWorld ( playerid ) ;
	area_info [ area_count ] [ a_interior ] [ 1 ] = GetPlayerInterior ( playerid ) ;
	GetPlayerPos ( playerid, area_info [ area_count ] [ a_to_pos ] [ 0 ], area_info [ area_count ] [ a_to_pos ] [ 1 ], area_info [ area_count ] [ a_to_pos ] [ 2 ] ) ;
	GetPlayerFacingAngle ( playerid, area_info [ area_count ] [ a_to_pos ] [ 3 ] ) ;

	CreateDynamicPickup ( area_info [ area_count ] [ a_pick ], 23, area_info [ area_count ] [ a_pos ] [ 0  ], area_info [ area_count ] [ a_pos ] [ 1  ], area_info [ area_count ] [ a_pos ] [ 2  ], area_info [ area_count ] [ a_virt_world ] [ 0 ] ) ;
	area_info [ area_count ] [ a_area ] [ 0 ] = CreateDynamicSphere ( area_info [ area_count ] [ a_pos ] [ 0  ], area_info [ area_count ] [ a_pos ] [ 1  ], area_info [ area_count ] [ a_pos ] [ 2  ], 1.0 ) ;
 	CreateDynamicPickup ( area_info [ area_count ] [ a_pick ], 23, area_info [ area_count ] [ a_to_pos ] [ 0  ], area_info [ area_count ] [ a_to_pos ] [ 1  ], area_info [ area_count ] [ a_to_pos ] [ 2  ], area_info [ area_count ] [ a_virt_world ] [ 1 ] ) ;
	area_info [ area_count ] [ a_area ] [ 1 ] = CreateDynamicSphere ( area_info [ area_count ] [ a_to_pos ] [ 0  ], area_info [ area_count ] [ a_to_pos ] [ 1  ], area_info [ area_count ] [ a_to_pos ] [ 2  ], 1.0 ) ;

    area_type { area_info [ area_count ] [ a_area ] [ 0 ] } = area_type_house ;
	area_type { area_info [ area_count ] [ a_area ] [ 1 ] } = area_type_house ;

	area_adding = 0 ;

	new sql_string [ 526 ];
	format ( sql_string, sizeof sql_string, "INSERT INTO `teleport_areas` ( `area_x`, `area_y`, `area_z`, `area_c`, `area_to_x`, `area_to_y`, `area_to_z`, `area_to_c`, `area_virtual_world`, `area_to_virtual_world`, `area_interior`, `area_to_interior`,`area_pickup`,`area_house`) VALUES ( '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d','%d','%d','%d')",
	area_info [ area_count ] [ a_pos ] [ 0  ], area_info [ area_count ] [ a_pos ] [ 1  ], area_info [ area_count ] [ a_pos ] [ 2  ], area_info [ area_count ] [ a_pos ] [ 3 ],
	area_info [ area_count ] [ a_to_pos ] [ 0  ], area_info [ area_count ] [ a_to_pos ] [ 1  ], area_info [ area_count ] [ a_to_pos ] [ 2  ], area_info [ area_count ] [ a_to_pos ] [ 3 ],
	area_info [ area_count ] [ a_virt_world ] [ 0 ], area_info [ area_count ] [ a_virt_world ] [ 1 ],
	area_info [ area_count ] [ a_interior ] [ 0 ], area_info [ area_count ] [ a_interior ] [ 1 ],
	area_info [ area_count ] [ a_pick ], area_info [ area_count ] [ a_house ] ) ;
	mysql_tquery ( dbHandle, sql_string ) ;

	area_count ++ ;
	SendInf ( playerid, "Домашний телепорт создан" ) ;
	return 1;
}

CMD:hdonate ( playerid )
{
	new v_id, line_string [ 128 ], dialog_string [ 128 * 10 ], text[11], text1[11], text2[11] ;

	foreach(new i: Player)
	{
		if(!p_info[i][pDonateH][0] && !p_info[i][pDonateH][1] && !p_info[i][pDonateH][2]) continue;
		format ( line_string, 32, "vline_hdonate_%d", v_id ) ;
		SetPVarInt ( playerid, line_string, i ) ;
		if(p_info[i][pDonateH][0] > 0 || p_info[i][pDonateH][1] > 0 || p_info[i][pDonateH][2] > 0)
		{
			if(p_info[i][pDonateH][0] > 0) text = "Да";
			else text = "Нет";
			if(p_info[i][pDonateH][1] > 0) text1 = "Да";
			else text1 = "Нет";
			if(p_info[i][pDonateH][2] > 0) text2 = "Да";
			else text2 = "Нет";
			
			format ( line_string, sizeof ( line_string ), "{f0e86b}%s[%d]{FFFFFF}, Лифт: %s, Забор: %s, Т/С: %s\n", GetName(i), i, text, text1, text2) ;
			strcat ( dialog_string, line_string ) ;
			v_id ++ ;
		}
	}
	if(p_info[playerid][pAdmin] < 9) ShowPlayerDialogEx ( playerid, D_NULL, DIALOG_STYLE_LIST, "{ebec86}>> Игрокие, купившие донат-услуги", dialog_string, "Закрыть", "" ) ;
	else ShowPlayerDialogEx ( playerid, 15777, DIALOG_STYLE_LIST, "{ebec86}>> Игрокие, купившие донат-услуги", dialog_string, "Обнулить", "Закрыть" ) ;
	return 1 ;
}

CMD:towcar ( playerid )
{
	if ( GetPlayerHouse(playerid) == 0 && p_info[playerid][pRentHouse] == -1 ) return SendErr ( playerid, "У Вас нет дома" ) ;

	new v_id,
		line_string [ 128 ],
		dialog_string [ 128 * 10 ] ;

 	for(new v = TOTALVEH; v > 0; v --)
	{
		if ( VehInfo [ v ] [ vHouse ] == GetPVarInt(playerid, "PlayerHouse") || VehInfo [ v ] [ vHouse ] == p_info[playerid][pRentHouse] )
		{
			format ( line_string, 12, "vline_%d", v_id ) ;
			SetPVarInt ( playerid, line_string, VehInfo [ v ] [ vVehicle ] ) ;
			new v_model_v = GetVehicleModel ( VehInfo [ v ] [ vVehicle ] ) ;
			format ( line_string, sizeof ( line_string ), "%s (Модель: %d), (ID: %d) {AFAFAF}* Доп. авто\n", VehicleNames [ v_model_v - 400 ], v_model_v, VehInfo [ v ] [ vVehicle ] ) ;
			strcat ( dialog_string, line_string ) ;
			v_id ++ ;
		}
	}
	ShowPlayerDialogEx ( playerid, dTowCar, DIALOG_STYLE_LIST, "{ebec86}>> Выберите транспорт", dialog_string, "Выбрать", "Отмена" ) ;
	return 1 ;
}

forward hvehicles_loading ( ) ;
public hvehicles_loading ( )
{
	new rows = cache_get_row_count();
	if(rows)
	{
		for ( new i = 0; i < rows; i++ )
		{
		    if(i == 0)
		    {
                TOTALVEH++;
		    }
			VehInfo [ TOTALVEH ] [ vID ] = cache_get_field_content_int ( i, "hc_id", dbHandle ) ;
			VehInfo [ TOTALVEH ] [ vModel ] = cache_get_field_content_int ( i, "hc_model", dbHandle ) ;
			VehInfo [ TOTALVEH ] [ vHouse ] = cache_get_field_content_int ( i, "hc_house", dbHandle ) ;
			VehInfo [ TOTALVEH ] [ vColor ] [ 0 ] = cache_get_field_content_int ( i, "hc_color_1", dbHandle ) ;
			VehInfo [ TOTALVEH ] [ vColor ] [ 1 ] = cache_get_field_content_int ( i, "hc_color_2", dbHandle ) ;
			VehInfo [ TOTALVEH ] [ vPos_X ] = cache_get_field_content_float ( i,"hc_pos_x", dbHandle ) ;
			VehInfo [ TOTALVEH ] [ vPos_Y ] = cache_get_field_content_float ( i,"hc_pos_y", dbHandle ) ;
			VehInfo [ TOTALVEH ] [ vPos_Z ] = cache_get_field_content_float ( i,"hc_pos_z", dbHandle ) ;
			VehInfo [ TOTALVEH ] [ vPos_FA ] = cache_get_field_content_float ( i,"hc_pos_a", dbHandle ) ;

            VehInfo [ TOTALVEH ] [ vVehicle ] = CreateVehicle ( VehInfo [ TOTALVEH ] [ vModel ], VehInfo [ TOTALVEH ] [ vPos_X ], VehInfo [ TOTALVEH ] [ vPos_Y ], VehInfo [ TOTALVEH ] [ vPos_Z ], VehInfo [ TOTALVEH ] [ vPos_FA ],
																		VehInfo [ TOTALVEH ] [ vColor ] [ 0 ],
																		VehInfo [ TOTALVEH ] [ vColor ] [ 1 ], 900 ) ;

            new Text3D:attachedtext;
            format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{f0f0f0}Домашний транспорт\n[ "cBLUE"Принадлежит дому: №%d{FFFFFF} ]", VehInfo [ TOTALVEH ] [ vHouse ]);
			attachedtext = CreateDynamic3DTextLabel(STRING_GLOBAL, 0xFFFFFFFF, 77.77, 77.77, 77.77, 5.0, INVALID_PLAYER_ID, VehInfo [ TOTALVEH ] [ vVehicle ], 0, -1, -1, -1, 100.0);
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, attachedtext, E_STREAMER_ATTACH_OFFSET_Z, 2.0);
			
			TOTALVEH++;
		}
	}
    //Дом Эдика
	AddStaticVehicleEx(454, 191.5035, -2881.1096, 0.2531, -75.0000, -1, -1, 100);

	LSBus[0] = AddStaticVehicleEx(418,758.8998,723.5314,12.2439,248.7655,6,1, 900); // Маршрутка 1
	AddStaticVehicleEx(418,757.3745,719.7014,12.1885,249.3062,6,1, 900); // Маршрутка 2
	AddStaticVehicleEx(418,755.6907,715.4114,12.1333,248.9229,6,1, 900); // Маршрутка 3
	AddStaticVehicleEx(418,754.1324,711.1880,12.0992,249.3299,6,1, 900); // Маршрутка 4
	AddStaticVehicleEx(418,752.6511,707.2150,12.0903,248.8002,6,1, 900); // Маршрутка 5
	AddStaticVehicleEx(418,750.8207,702.5714,12.0930,248.1884,6,1, 900); // Маршрутка 6
	AddStaticVehicleEx(418,749.1871,698.3358,12.0932,249.0095,6,1, 900); // Маршрутка 7
	AddStaticVehicleEx(418,747.5515,694.0026,12.0930,249.3973,6,1, 900); // Маршрутка 8
	AddStaticVehicleEx(418,745.9255,689.8022,12.0931,249.8988,6,1, 900); // Маршрутка 9
	AddStaticVehicleEx(418,744.3026,685.6509,12.0931,249.3905,6,1, 900); // Маршрутка 10
	AddStaticVehicleEx(418,742.6512,681.3754,12.0930,249.4450,6,1, 900); // Маршрутка 11
	AddStaticVehicleEx(418,741.0107,677.0425,12.0931,249.4603,6,1, 900); // Маршрутка 12
	AddStaticVehicleEx(418,739.3386,672.7777,12.0929,249.4026,6,1, 900); // Маршрутка 13
	AddStaticVehicleEx(418,737.7796,668.5155,12.0930,249.2589,6,1, 900); // Маршрутка 14
	AddStaticVehicleEx(418,736.0520,663.8519,12.0930,250.1295,6,1, 900); // Маршрутка 15
	AddStaticVehicleEx(418,734.3118,659.4240,12.0928,249.0372,6,1, 900); // Маршрутка 16
	AddStaticVehicleEx(418,732.4960,654.7409,12.0930,249.3797,6,1, 900); // Маршрутка 17
	AddStaticVehicleEx(418,730.8508,650.4247,12.0930,249.0664,6,1, 900); // Маршрутка 18
	AddStaticVehicleEx(418,729.2156,645.9833,12.0930,249.3153,6,1, 900); // Маршрутка 19
	LSBus[1] = AddStaticVehicleEx(418,727.4211,641.1423,12.0930,249.6270,6,1, 900); // Маршрутка 20
	
	

	for(new i = 0; i < sizeof(ArendInfo); i ++)
	{
		ArendInfo[i][aID] = AddStaticVehicleEx(ArendInfo[i][aModel], ArendInfo[i][aPos_X], ArendInfo[i][aPos_Y], ArendInfo[i][aPos_Z], ArendInfo[i][aPos_A], ArendInfo[i][aColor_1], ArendInfo[i][aColor_2], 100000);
		SetVehicleParamsEx(ArendInfo[i][aID], false, false, false, false, false, false, false);
	}

	TaxiVehicle[0] = AddStaticVehicleEx(438,501.6323,1757.9569,11.8938,176.2031,6,1, 900); // Ж/Д вокзал, такси 1
	AddStaticVehicleEx(438,505.0952,1757.6876,11.8931,175.8430,6,1, 900); // Ж/Д вокзал, такси 2
	AddStaticVehicleEx(420,508.3364,1757.6006,11.8818,175.8649,6,1, 900); // Ж/Д вокзал, такси 3
	AddStaticVehicleEx(420,511.7741,1757.2988,11.8811,176.4038,6,1, 900); // Ж/Д вокзал, такси 4
	AddStaticVehicleEx(420,515.0672,1757.0718,11.8793,175.5950,6,1, 900); // Ж/Д вокзал, такси 5
	AddStaticVehicleEx(420,518.3334,1756.8132,11.8793,175.4676,6,1, 900); // Ж/Д вокзал, такси 6
	AddStaticVehicleEx(420,521.7852,1756.5070,11.8793,175.7498,6,1, 900); // Ж/Д вокзал, такси 7

	AddStaticVehicleEx(438,1872.5802,2260.5298,15.1562,90.4024,6,1, 900); // Автошкола, такси 1
	AddStaticVehicleEx(438,1872.5099,2264.3132,15.1572,90.1363,6,1, 900); // Автошкола, такси 2
	AddStaticVehicleEx(420,1872.5029,2267.6094,15.1456,90.0060,6,1, 900); // Автошкола, такси 3
	AddStaticVehicleEx(420,1872.4307,2270.8154,15.1490,90.4211,6,1, 900); // Автошкола, такси 4
	AddStaticVehicleEx(420,1872.4064,2273.9580,15.1511,90.3450,6,1, 900); // Автошкола, такси 5
	
	AddStaticVehicleEx(438,2693.7136,-2465.9980,21.9260,-148.3800,1,1, 900); // ЮЖ, такси 1
	AddStaticVehicleEx(438,2693.9387,-2461.1528,21.9260,-148.3800,1,1, 900); // ЮЖ, такси 2
	AddStaticVehicleEx(420,2693.9133,-2456.0869,21.9260,-148.3800,1,1, 900); // ЮЖ, такси 3
	AddStaticVehicleEx(420,2694.0095,-2451.0759,21.9260,-148.3800,1,1, 900); // ЮЖ, такси 4
	
	AddStaticVehicleEx(438,2244.0754,-1889.7006,18.8462,89.6803,1,1, 900); // ЮЖ, такси 1
	AddStaticVehicleEx(438,2244.0754,-1896.0203,18.8462,89.4857,1,1, 900); // ЮЖ, такси 2
	AddStaticVehicleEx(420,2244.0754,-1902.4309,18.8462,90.3039,1,1, 900); // ЮЖ, такси 3
	AddStaticVehicleEx(420,2244.0754,-1909.2180,18.8462,90.2202,1,1, 900); // ЮЖ, такси 4
	AddStaticVehicleEx(420,2244.0754,-1915.0583,18.8462,89.7149,1,1, 900); // ЮЖ, такси 5

	AddStaticVehicleEx(438,-2490.6890,2846.5657,37.5173,89.6803,6,1, 900); // Эдово, такси 1
	AddStaticVehicleEx(438,-2490.6812,2842.3467,37.5189,89.4857,6,1, 900); // Эдово, такси 2
	AddStaticVehicleEx(420,-2490.6860,2838.0046,37.5068,90.3039,6,1, 900); // Эдово, такси 3
	AddStaticVehicleEx(420,-2490.7419,2833.7920,37.5068,90.2202,6,1, 900); // Эдово, такси 4
	AddStaticVehicleEx(420,-2490.8013,2829.9333,37.5071,89.7149,6,1, 900); // Эдово, такси 5

	AddStaticVehicleEx(420,-245.0356,453.3494,12.7324,73.8823,6,1, 900); // Больница, такси 1
	AddStaticVehicleEx(420,-246.2037,449.3405,12.7325,74.0256,6,1, 900); // Больница, такси 2
	AddStaticVehicleEx(420,-247.3436,445.4543,12.7325,73.9557,6,1, 900); // Больница, такси 3
	AddStaticVehicleEx(438,-248.5921,441.2789,12.7437,73.4070,6,1, 900); // Больница, такси 4
	AddStaticVehicleEx(438,-249.6691,437.3716,12.7437,73.7906,6,1, 900); // Больница, такси 5

	AddStaticVehicleEx(420,-2399.8335,197.4634,21.0467,258.4910,6,1, 900); // Лыткарино, такси 1
	AddStaticVehicleEx(420,-2400.6265,193.7770,21.0451,258.1457,6,1, 900); // Лыткарино, такси 2
	AddStaticVehicleEx(420,-2401.4087,189.9429,21.0426,258.7071,6,1, 900); // Лыткарино, такси 3
	AddStaticVehicleEx(438,-2402.0530,186.2944,21.0539,259.4415,6,1, 900); // Лыткарино, такси 4
	TaxiVehicle[1] = AddStaticVehicleEx(438,-2402.9199,182.1572,21.0538,259.6259,6,1, 900); // Лыткарино, такси 5

	MechanicVehicle[0] = AddStaticVehicleEx(525,1142.9878,2486.9973,12.3509,301.8680,1,6, 900); // Механики 1
	AddStaticVehicleEx(525,1141.0784,2490.1216,12.3592,301.2564,1,6, 900); // Механики 2
	AddStaticVehicleEx(525,1201.8059,2502.0313,12.1630,31.30580,1,6, 900); // Механики 3
	AddStaticVehicleEx(525,1205.4995,2504.3215,12.1629,30.81340,1,6, 900); // Механики 4
	AddStaticVehicleEx(525,1209.2325,2506.6006,12.1630,31.90060,1,6, 900); // Механики 5
	AddStaticVehicleEx(525,1212.8977,2508.8955,12.1630,31.02640,1,6, 900); // Механики 6
	AddStaticVehicleEx(525,1208.6957,2527.5200,12.1629,122.4859,1,6, 900); // Механики 7
	AddStaticVehicleEx(525,1206.5468,2530.8984,12.1629,122.8413,1,6, 900); // Механики 8
	AddStaticVehicleEx(525,1203.7800,2534.8557,12.3507,122.1955,1,6, 900); // Механики 9
	AddStaticVehicleEx(525,1201.6656,2538.2449,12.3544,122.2750,1,6, 900); // Механики 10
	AddStaticVehicleEx(525,1139.1326,2493.2759,12.3495,302.2898,1,6, 900); // Механики 11
	MechanicVehicle[1] = AddStaticVehicleEx(525,1137.2019,2496.4790,12.3578,302.6617,1,6, 900); // Механики 12
	//===== Скутера //Убрать
	spawnskyter[0] = AddStaticVehicleEx(462,-255.9164,575.9592,12.8560,329.9065,86,0,900);//Болька
	AddStaticVehicleEx(462,-258.9164,576.9592,12.8560,329.9065,86,0,900);//Болька
	AddStaticVehicleEx(462,-261.9164,576.9592,12.8560,329.9065,86,0,900);//Болька
	AddStaticVehicleEx(462,-264.9164,576.9592,12.8560,329.9065,86,0,900);//Болька
	AddStaticVehicleEx(462,-267.9164,577.9592,12.8560,329.9065,86,0,900);//Болька
	AddStaticVehicleEx(462,-270.9164,577.9592,12.8560,329.9065,86,0,900);//Болька
	AddStaticVehicleEx(462,-273.9164,577.9592,12.8560,329.9065,86,0,900);//Болька
	AddStaticVehicleEx(462,-276.9164,577.9592,12.8560,329.9065,86,0,900);//Болька
	spawnskyter[1] = AddStaticVehicleEx(462,-276.9164,577.9592,12.8560,329.9065,86,0,900);//Болька

	TruckerVehicle[0] = AddStaticVehicleEx(403, 2675.0618, -2370.4192, 18.1101, -90.0000, -1, -1, 900);
	AddStaticVehicleEx(403, 2675.0618, -2366.5054, 18.1101, -90.0000, -1, -1, 900);
	AddStaticVehicleEx(403, 2675.0618, -2362.5818, 18.1101, -90.0000, -1, -1, 900);
	AddStaticVehicleEx(403, 2675.0618, -2358.3179, 18.1101, -90.0000, -1, -1, 900);
	AddStaticVehicleEx(403, 2674.4172, -2353.9575, 18.0985, -90.0000, -1, -1, 900);
	AddStaticVehicleEx(403, 2674.4172, -2346.1897, 18.0985, -90.0000, -1, -1, 900);
	TruckerVehicle[1] = AddStaticVehicleEx(403, 2674.4172, -2350.0254, 18.0985, -90.0000, -1, -1, 900);

	TruckerVehicle[2] = AddStaticVehicleEx(435, 2722.5793, -2367.9395, 18.0864, -90.0000, -1, -1, 900);
	TruckerVehicle[3] = AddStaticVehicleEx(435, 2722.5793, -2362.8174, 18.0864, -90.0000, -1, -1, 900);
	TruckerVehicle[4] = AddStaticVehicleEx(435, 2722.5793, -2357.9529, 18.0864, -90.0000, -1, -1, 900);
	TruckerVehicle[5] = AddStaticVehicleEx(435, 2722.5793, -2352.9226, 18.0864, -90.0000, -1, -1, 900);
	TruckerVehicle[6] = AddStaticVehicleEx(584, 2720.8833, -2331.9070, 18.9079, -90.0000, -1, -1, 900);
	TruckerVehicle[7] = AddStaticVehicleEx(584, 2720.8833, -2336.0488, 18.9079, -90.0000, -1, -1, 900);
	TruckerVehicle[8] = AddStaticVehicleEx(584, 2720.8833, -2340.0278, 18.9079, -90.0000, -1, -1, 900);
	TruckerVehicle[9] = AddStaticVehicleEx(584, 2720.8833, -2343.7573, 18.9079, -90.0000, -1, -1, 900);

    AddStaticVehicle(462,2568.0833,-2110.9590,21.9040,83.5621,-1,-1); //
	AddStaticVehicle(462,2568.1165,-2112.6484,21.9023,88.6668,-1,-1); //
	AddStaticVehicle(462,2568.1665,-2114.7610,21.9026,85.9568,-1,-1); //
	AddStaticVehicle(462,2567.9827,-2116.9277,21.9039,89.2969,-1,-1); //
	AddStaticVehicle(462,2568.0896,-2119.4294,21.9039,87.1397,-1,-1); //
	AddStaticVehicle(462,2568.1555,-2121.9597,21.9021,92.1391,-1,-1); //
	AddStaticVehicle(462,2568.3511,-2123.9961,21.9252,86.2842,-1,-1); //
	AddStaticVehicle(462,2568.1277,-2125.9619,21.9004,99.9863,-1,-1); //

	AddStaticVehicleEx(519, 1726.4985, 1673.2324, 16.6340, 0.0000, -1, -1, 900);
	AddStaticVehicleEx(519, 1765.3191, 1673.2324, 16.6340, 0.0000, -1, -1, 900);
	AddStaticVehicleEx(519, 1689.0078, 1673.2324, 16.6340, 0.0000, -1, -1, 900);
	AddStaticVehicleEx(519, 1809.2125, 1673.2324, 16.6340, 0.0000, -1, -1, 900);
	AddStaticVehicleEx(513, 1707.1201, 1737.5679, 15.9716, 180.0000, -1, -1, 900);
	AddStaticVehicleEx(513, 1725.3978, 1737.5679, 15.9716, 180.0000, -1, -1, 900);
	AddStaticVehicleEx(513, 1744.5007, 1737.5679, 15.9716, 180.0000, -1, -1, 900);

	TempJobsInit();

	for(new i = MAX_VEHICLES; i != 0; i --)
	{
		if(!IsValidVehicle(i)) continue;
		
		if(i >= TruckerVehicle[2] && i <= TruckerVehicle[5]) TrailerInfo[i] = CreateDynamic3DTextLabel("Доставка продуктов\n{FFFFFF}Загрузка 0 / 10000 п", 0xa24646FF, 0, 0, 2.5, 50, INVALID_PLAYER_ID, i, 1);
		if(i >= TruckerVehicle[6] && i <= TruckerVehicle[9]) TrailerInfo[i] = CreateDynamic3DTextLabel("Доставка топлива\n{FFFFFF}Загрузка 0 / 8000 л", 0xa24646FF, 0, 0, 2.5, 50, INVALID_PLAYER_ID, i, 1);
		
		SetVehicleParamsEx(i, false, false, false, false, false, false, false);
		Engine[i] = Lights[i] = false;
		Fuel[i] = 50;
		SetVehicleNumberPlate(i, "Г777ОС");
		TaxiVehicleDriver[i] = -1;
		MechanicVehicleDriver[i] = -1;
	}
	printf ( "-> Домашний транспорт загружен (%d т/с)", rows ) ;
	return 1;
}

CMD:addhcar(playerid,params[])
{
    if(p_info[playerid][pAdmin] < 9) return 1;
 	if ( GetPlayerState(playerid) != 2 ) return SendErr(playerid, "Вы не в машине" ) ;
    if ( sscanf ( params, "iiii", params [ 0 ], params [ 1 ], params [ 2 ], params [ 3 ] ) )
	{
		SendInf(playerid, "/addhcar [модель] [дом] [цвет 1] [цвет 2]");
		return 1;
	}

	TOTALVEH++;
	new veh_id = GetPlayerVehicleID(playerid), Float:X, Float:Z, Float:Y, Float:A ;
	GetVehiclePos ( veh_id, X, Y, Z ) ;
	GetVehicleZAngle ( veh_id, A ) ;
	VehInfo [ TOTALVEH ] [ vHouse ] = params [ 1 ] ;
	VehInfo [ TOTALVEH ] [ vColor ] [ 0 ] = params [ 2 ] ;
	VehInfo [ TOTALVEH ] [ vColor ] [ 1 ] = params [ 3 ] ;
	VehInfo [ TOTALVEH ] [ vModel ] = params [ 0 ] ;

	STRING_GLOBAL = "";
	format ( STRING_GLOBAL, 512, "INSERT INTO `h_vehicles`(`hc_model`,`hc_house`,`hc_color_1`, `hc_color_2`, `hc_pos_x`,`hc_pos_y`, `hc_pos_z`, `hc_pos_a`)\
	VALUES ('%d','%d','%d','%d','%f','%f','%f','%f')",
	VehInfo [ TOTALVEH ] [ vModel ],
	VehInfo [ TOTALVEH ] [ vHouse ],
	VehInfo [ TOTALVEH ] [ vColor ] [ 0 ],
	VehInfo [ TOTALVEH ] [ vColor ] [ 1 ],
	X,
	Y,
	Z,
	A );
	mysql_tquery ( dbHandle, STRING_GLOBAL, "", "" ) ;

	DestroyVehicle(veh_id);
	TotalAdminVehicles--;

	VehInfo [ TOTALVEH ] [ vVehicle ] = CreateVehicle ( VehInfo [ TOTALVEH ] [ vModel ], X, Y, Z, A, VehInfo [ TOTALVEH ] [ vColor ] [ 0 ], VehInfo [ TOTALVEH ] [ vColor ] [ 1 ], 900 ) ;

    STRING_GLOBAL = "";
	new Text3D:attachedtext;
 	format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "{f0f0f0}Домашний транспорт\n[ "cBLUE"Принадлежит дому: №%d{FFFFFF} ]", VehInfo [ TOTALVEH ] [ vHouse ]);
	attachedtext = CreateDynamic3DTextLabel(STRING_GLOBAL, 0xFFFFFFFF, 77.77, 77.77, 77.77, 5.0, INVALID_PLAYER_ID, VehInfo [ TOTALVEH ] [ vVehicle ] , 0, -1, -1, -1, 100.0);
	Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL, attachedtext, E_STREAMER_ATTACH_OFFSET_Z, 2.0);
	return 1;
}

stock ShowMakeGunList(playerid)
{
	new message[512];
	for(new i; i < 6; i++)
	{
		new gunnameD[24];
		GetWeaponName(gGunID[i],gunnameD,24);
		if(!i) format(message,sizeof(message),"%s {ebec86}(Для сборки требуется %d металла){FFFFFF}",gunnameD, gGunAmount[i]);
		else format(message,sizeof(message),"%s\n%s {ebec86}(Для сборки требуется %d металла){FFFFFF}",message, gunnameD, gGunAmount[i]);
	}
	ShowPlayerDialogEx(playerid, dMakeGun, DIALOG_STYLE_LIST, "{ebec86}>> Сборка оружия", message, "Далее", "Отмена");
}

stock ClearBankAccountInfo(playerid, accountid)
{
	strmid(g_bank_account[playerid][accountid][BA_NAME], "None", 0, 21, 21);

	SetBankAccountData(playerid, accountid, BA_ID, 0);
	SetBankAccountData(playerid, accountid, BA_PIN_CODE, 0);

	SetBankAccountData(playerid, accountid, BA_BALANCE, 0);
	SetBankAccountData(playerid, accountid, BA_REG_TIME, 0);
}

stock ClearBankAccountsData(playerid)
{
	for(new idx; idx < MAX_BANK_ACCOUNTS; idx ++)
	{
		ClearBankAccountInfo(playerid, idx);
	}
}

stock ShowPlayerBankDialog(playerid)
{
	ShowPlayerDialogEx
	(
		playerid, DIALOG_BANK, DIALOG_STYLE_LIST,
		"{ebec86}>> Банк",
		"Мои счета\n"\
		"Открыть новый счет",
		"Выбрать", "Отмена"
	);
}

stock ShowPlayerBankAccounts(playerid)
{
	new query[158];
	new Cache: result;
	new rows;
	new bank_accounts_list[1024];

	format(query, sizeof query, "SELECT * FROM bank_accounts WHERE uid=%d LIMIT %d", p_info[playerid][pID], MAX_BANK_ACCOUNTS);
	result = mysql_query(dbHandle, query);
	rows = cache_num_rows();

	bank_accounts_list = "{ebec86}Основной счет\n";
	for(new idx, count; idx < MAX_BANK_ACCOUNTS; idx ++)
	{
		ClearBankAccountInfo(playerid, idx);

		if(idx < rows)
		{
			SetBankAccountData(playerid, idx, BA_ID, cache_get_row_int(idx, 0));

			cache_get_row(idx, 2, g_bank_account[playerid][idx][BA_NAME], dbHandle, 21);
			cache_get_row(idx, 3, g_bank_account[playerid][idx][BA_BALANCE], dbHandle, 11);
			cache_get_row(idx, 4, g_bank_account[playerid][idx][BA_PIN_CODE], dbHandle, 9);

			SetBankAccountData(playerid, idx, BA_BALANCE, cache_get_row_int(idx, 3));
			SetBankAccountData(playerid, idx, BA_REG_TIME, cache_get_row_int(idx, 5));

			format(query, sizeof query, "%s - Номер счета: {f0e86b}%d{FFFFFF} - {f0e86b}%d{FFFFFF} рублей\n", GetBankAccountData(playerid, idx, BA_NAME), GetBankAccountData(playerid, idx, BA_ID), GetBankAccountData(playerid, idx, BA_BALANCE));
			strcat(bank_accounts_list, query);

			SetPlayerListitemValue(playerid, count ++, idx);
		}
	}
	cache_delete(result);

	return ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNTS, DIALOG_STYLE_LIST, "{ebec86}>> Ваши счета", bank_accounts_list, "Операции", "Назад");
}

stock IsValidBankAccount(playerid, accountid)
{
	if(0 <= accountid <= MAX_BANK_ACCOUNTS-1)
	{
		if(GetBankAccountData(playerid, accountid, BA_ID) > 0)
		{
			return 1;
		}
	}
	return 0;
}

stock UpdateBankAccountData(playerid, accountid)
{
	if(IsValidBankAccount(playerid, accountid))
	{
		new query[64];
		new Cache: result;

		format(query, sizeof query, "SELECT balance FROM bank_accounts WHERE id=%d LIMIT 1", GetBankAccountData(playerid, accountid, BA_ID));
		result = mysql_query(dbHandle, query);

		if(cache_num_rows())
			SetBankAccountData(playerid, accountid, BA_BALANCE, cache_get_row_int(0, 0));

		cache_delete(result);
	}
}

stock ShowPlayerBankAccountOperation(playerid)
{
	ShowPlayerDialogEx
	(
		playerid, DIALOG_BANK_ACCOUNT_OPERATION, DIALOG_STYLE_LIST,
		"{ebec86}>> Список операций",
		"1. Информация о счете\n"\
		"2. История операций\n"\
		"3. Снять деньги со счета\n"\
		"4. Положить деньги на счет\n"\
		"5. Перевести на другой счет\n"\
		"6. Переименовать счет\n"\
		"7. Изменить PIN-код",
		"Выбрать", "Назад"
	);
	return 1;
}

stock ShowPlayerBankAccountTransfer(playerid, accountid)
{
	if(IsValidBankAccount(playerid, accountid))
	{
		new fmt_str[128];
		format
		(
			fmt_str, sizeof fmt_str,
			"{FFFFFF}Исходный счет:\t%d\n"\
			"Назначение:\t\t\"%s\", №%d\n\n"\
			"Введите сумму для перевода:",
			GetBankAccountData(playerid, accountid, BA_ID),
			GetPlayerBankTransfer(playerid, BT_NAME),
			GetPlayerBankTransfer(playerid, BT_ID)
		);
		ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_TRANSFER_2, DIALOG_STYLE_INPUT, "{ebec86}>> Перевод средств", fmt_str, "Перевести", "Отмена");
	}
	return 1;
}

stock ShowPlayerATMTransfer(playerid)
{
	new transfer_id = GetPlayerBankTransfer(playerid, BT_ID);
	if(transfer_id)
	{
		new fmt_str[64 + 1];

		format
		(
			fmt_str, sizeof fmt_str,
			"{FFFFFF}Вы выполняете перевод на счет №%d\n"\
			"Укажите сумму:",
			transfer_id
		);
		ShowPlayerDialogEx(playerid, DIALOG_ATM_TRANSFER_MONEY_2, DIALOG_STYLE_INPUT, "{ebec86}>> Безналичный перевод", fmt_str, "Перевести", "Отмена");
	}
	return 1;
}

stock IsABadBankAccountName(dest[], pos=0)
{
	new is_bad_name = false;
	do
	{
		switch(dest[pos])
		{
			case
				'a'..'z', 'A'..'Z', 'а'..'я', 'А'..'Я', '0'..'9', ' ', '_': continue;

			default:
				is_bad_name = true;

		}
	}
	while(dest[++pos]);

	return is_bad_name;
}

stock BankAccountLog(playerid, accountid, description[])
{
	new query[180 + 1];

	mysql_format(dbHandle, query, sizeof query, "INSERT INTO bank_accounts_log (acc_id,uip,time,description) VALUES (%d,'%e',%d,'%s')", accountid, p_info[playerid][pIP], gettime(), description);
	mysql_query(dbHandle, query, false);

	return 1;
}

stock ShowPlayerBankAccountLog(playerid, accountid)
{
	new fmt_str[128];
	new Cache: result;
	new rows;

	format(fmt_str, sizeof fmt_str, "SELECT FROM_UNIXTIME(time,'%%Y-%%m-%%d') AS date,description FROM bank_accounts_log WHERE acc_id=%d ORDER BY id DESC LIMIT 10", accountid);
	result = mysql_query(dbHandle, fmt_str);

	rows = cache_num_rows();

	if(rows)
	{
		new text[900] = "{FFFFFF}";
		new day, month, year;

		for(new idx; idx < rows; idx ++)
		{
			cache_get_row(idx, 0, fmt_str);
			sscanf(fmt_str, "P<->ddd", year, month, day);

			cache_get_row(idx, 1, fmt_str);

			format(fmt_str, sizeof fmt_str, "%d %s %d г.\t\t%s\n", day, GetMonthName(month), year, fmt_str);
			strcat(text, fmt_str);
		}
		ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_INFO, DIALOG_STYLE_MSGBOX, "{ebec86}>> Последние 10 операций", text, "Вернуться", "");
	}
	else ShowPlayerDialogEx(playerid, DIALOG_BANK_ACCOUNT_INFO, DIALOG_STYLE_MSGBOX, "{ebec86}>> История", "{FFFFFF}История операций пуста", "Вернуться", "");

	cache_delete(result);
	return 1;
}

stock ShowPlayerATMDialog(playerid)
{
	ShowPlayerDialogEx(playerid, 6550, DIALOG_STYLE_LIST, "{ebec86}>> Банковские услуги", "{f0e86b}Дом{ffffff}\n- Оплатить дом\n{FF6347}Недвижимость{ffffff}\n- Оплатить бизнес\n- Снять со счета бизнеса\n- Оплатить гараж\n{FFCC00}Прочее{ffffff}\n- Баланс счета\n- Пополнить счет\n- Снять со счета\n- Перевести на счет\n- Кредит\n- Выкупиться из ЧС\n- Призовой фонд", "Выбрать", "Отмена");
	return 1;
}

stock IsGangConnected(gangid)
{
	new count;
    foreach(new i: Player)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(p_info[i][pMember] == gangid)
	        {
				count++;
	        }
		}
	}
	return count;
}

CMD:renthome(playerid)
{
    SetPVarInt(playerid, "PlayerHouse", 0);
    GetPlayerHouse(playerid);
	for(new idx = TOTALHOUSE; idx > 0; idx --)
	{
		if(PlayerToPoint(1.0, playerid, HouseInfo[idx][hEntrx], HouseInfo[idx][hEntry], HouseInfo[idx][hEntrz]))
		{
			if(!HouseInfo[idx][gRentStatus]) return SendErr(playerid, "Аренда в этом доме отключена");
			if(GetPVarInt(playerid, "PlayerHouse") == idx) return SendErr(playerid, "Вы не можете арендовать свой дом");
			if(p_info[playerid][pRentHouse]) return SendErr(playerid, "Вы уже арендуете дом");
			p_info[playerid][pRentHouse] = idx;
			SendInf(playerid, "Вы арендовали дом");
			MysqlUpdatePlayerInt(playerid, "renthouse", p_info[playerid][pRentHouse]);
		}
	}
	return 1;
}

CMD:unrenthome(playerid)
{
    if(!p_info[playerid][pRentHouse]) return SendErr(playerid, "Вы не арендуете дом");
    p_info[playerid][pRentHouse] = -1;
	SendInf(playerid, "Вы закончили аренду дома");
	MysqlUpdatePlayerInt(playerid, "renthouse", p_info[playerid][pRentHouse]);
	return 1;
}

stock EndPlayerTempJob(playerid, job, bool:annul = false)
{
	if(GetPlayerTempJob(playerid) == job)
	{
		SetPlayerTempJobCheckAnim(playerid, false);

		RemovePlayerAttachedObjects(playerid);
		
		if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
		else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
		SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);

		new items = GetPlayerJobLoadItems(playerid);
		new pay_sum = items * GetTempJobInfo(job, TJ_PAY_FOR_LOAD);

		if(doubling_job) pay_sum = pay_sum * 2;

		new fmt_str[128];
		switch(job)
		{
			case TEMP_JOB_LOADER:
			{
				DisablePlayerCheckpoint(playerid);
				DisablePlayerRaceCheckpoint(playerid);

				if(!annul)
				{
					new ts_pay = false;
					if(pay_sum > 0)
						format(fmt_str, sizeof fmt_str, ". Заработано {FFFF00}%d руб", pay_sum);

					strins(fmt_str, "Рабочий день завершен", 0, sizeof fmt_str);
					SendClientMessage(playerid, 0x3399FFFF, fmt_str);

					if(ts_pay)
					{
						format(fmt_str, sizeof fmt_str, "%d руб {3399FF}за работу на погрузчике", pay_sum);
						SendInf(playerid, fmt_str);
					}

					if(pay_sum > 0)
						GiveMoney(playerid, pay_sum, "Зарплата на работе грузчика");

					format(fmt_str, sizeof fmt_str, "~b~~h~+%d rub", pay_sum);
					GameTextForPlayer(playerid, fmt_str, 4000, 6);
				}
				else SendClientMessage(playerid, 0xa24646FF, "Вы покинули территорию склада. Заработок был аннулирован");

				items = GetPlayerVehicleID(playerid);
				if(items == VEHICLE_ACTION_TYPE_LOADER)
				{
					SetVehicleToRespawn(items);
				}
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 1, 0);
			}
			case TEMP_JOB_MINER:
			{
				DisablePlayerCheckpoint(playerid);

				if(!annul)
				{
					if(items > 0)
					{
						format(fmt_str, sizeof fmt_str, "Рабочий день завершен. Вы добыли %d кг руды", items);
						SendClientMessage(playerid, 0x3399FFFF, fmt_str);

						format(fmt_str, sizeof fmt_str, "Всего заработано %d руб", pay_sum);
						SendClientMessage(playerid, 0x3399FFFF, fmt_str);

						GiveMoney(playerid, pay_sum, "Зарплата на работе шахтера");

						format(fmt_str, sizeof fmt_str, "~b~~h~+%d rub", pay_sum);
						GameTextForPlayer(playerid, fmt_str, 4000, 6);
					}
					else SendClientMessage(playerid, 0x3399FFFF, "Рабочий день завершен");
				}
				else SendClientMessage(playerid, 0xa24646FF, "Вы покинули территорию шахты. Заработок был аннулирован");

				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 1, 0);
			}
			case TEMP_JOB_FACTORY:
			{
				pay_sum = GetPlayerJobWage(playerid);

				new bad_items = GetPVarInt(playerid, "factory_bad_prods");
				new skill = GetPVarInt(playerid, "factory_skill");
				new waste_sum = bad_items * (random(16) + 5);

				if(!annul)
				{
					SendClientMessage(playerid, 0x3399FFFF, "Рабочий день завершен");
					if(pay_sum > 0 && waste_sum < pay_sum)
					{
						format(fmt_str, sizeof fmt_str, "Всего создано {FFFF00}%d {66CC00}продуктов, забракованно {FFFF00}%d шт.", items, bad_items) ;
						SendClientMessage(playerid, 0x66CC00FF, fmt_str);

						if(skill > 0)
						{
							format(fmt_str, sizeof fmt_str, "Рабочий навык увеличился {66CCFF}на %d единиц(ы)", skill);
						}
						else fmt_str = "Рабочий навык не изменился";
						SendClientMessage(playerid, 0x66CC00FF, fmt_str);

						format(fmt_str, sizeof fmt_str, "Заработано {00CC00}%d руб, {FFFFFF}из них {FF6347}%d руб {FFFFFF}- штраф за брак продуктов", pay_sum, waste_sum);
						SendClientMessage(playerid, 0xFFFFFFFF, fmt_str);

						pay_sum -= waste_sum;
						format(fmt_str, sizeof fmt_str, "~b~~h~+%d rub", pay_sum);
						GameTextForPlayer(playerid, fmt_str, 4000, 6);

						GiveMoney(playerid, pay_sum, "Зарплата на работе в цеху (завод)");
					}
				}
				else SendClientMessage(playerid, 0xa24646FF, "Вы покинули территорию завода. Выручка была аннулирована");

				skill = GetPlayerData(playerid, P_FACTORY_USE_DESK);
				SetPlayerFactoryDeskUse(playerid, skill, false);
			}
			case TEMP_JOB_LUMBERJACK:
			{
				DisablePlayerCheckpoint(playerid);

				if(!annul)
				{
					if(items > 0)
					{
						format(fmt_str, sizeof fmt_str, "Рабочий день завершен. Вы принесли %d шт дров", items);
						SendClientMessage(playerid, 0x3399FFFF, fmt_str);

						format(fmt_str, sizeof fmt_str, "Всего заработано %d руб", pay_sum);
						SendClientMessage(playerid, 0x3399FFFF, fmt_str);

						GiveMoney(playerid, pay_sum, "Зарплата на работе лесоруба");

						format(fmt_str, sizeof fmt_str, "~b~~h~+%d rub", pay_sum);
						GameTextForPlayer(playerid, fmt_str, 4000, 6);
					}
					else SendClientMessage(playerid, 0x3399FFFF, "Рабочий день завершен");
				}
				else SendClientMessage(playerid, 0xa24646FF, "Вы покинули территорию лесопилки. Заработок был аннулирован");

				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 1, 0);
			}
		}

		SetPlayerJobLoadItems(playerid, 0);
		SetPlayerData(playerid, P_JOB_WAGE, 0);
		SetPlayerTempJob(playerid, TEMP_JOB_NONE);
	}
}

stock TogglePlayerFactoryCP(playerid, toggle)
{
	for(new idx; idx < sizeof factory_desk; idx ++)
	{
		TogglePlayerDynamicCP(playerid, factory_desk[idx][FD_CHEK_ID], toggle);
	}
}

stock KillEndJobTimer(playerid)
{
	KillTimer(GetPlayerData(playerid, P_END_JOB_TIMER));
	SetPlayerData(playerid, P_END_JOB_TIMER, -1);
}

stock StartEndJobTimer(playerid, time = 15_000)
{
	if(GetPlayerData(playerid, P_END_JOB_TIMER) == -1)
		SetPlayerData(playerid, P_END_JOB_TIMER, SetTimerEx("EndPlayerJob", time, false, "i", playerid));
}

stock ShowPlayerBuyMetalDialog(playerid)
{
	ShowPlayerDialogEx
	(
		playerid, DIALOG_MINER_BUY_METALL, DIALOG_STYLE_INPUT,
		"{ebec86}>> Покупка металла",
		"{FFFFFF}Сколько кг металла вы хотите купить?\n"\
		"{00CC00}Цена за кг: 15 рублей",
		"Купить", "Отмена"
	);
}

stock SetPlayerMinerJobLoadCP(playerid, bool: status = false)
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_MINER)
	{
		for(new i; i < sizeof miner_job_load_cp; i ++)
			TogglePlayerDynamicCP(playerid, miner_job_load_cp[i], status ^ true);

		SetPlayerTempJobState(playerid, TEMP_JOB_STATE_MINER_LOAD);
	}
}

stock SetPlayerMinerJobUnLoadCP(playerid)
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_MINER)
	{
		//SetPlayerCheckpoint(playerid, 2712.590332, -1551.885620, 1401.908935, 2.0, CP_ACTION_TYPE_MINER_JOB_PUT);

		SetPlayerTempJobState(playerid, TEMP_JOB_STATE_MINER_UNLOAD);
	}
}

stock SetPlayerLoaderJobUnLoadCP(playerid) // установить чекпоинт где ложить груз
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_LOADER)
	{
		new rand = random(sizeof loader_job_unload_cp);

		SetPlayerCheckpoint(playerid, loader_job_unload_cp[rand][0], loader_job_unload_cp[rand][1], loader_job_unload_cp[rand][2], 2.0);
		SetPlayerTempJobState(playerid, TEMP_JOB_STATE_LOADER_UNLOAD);
		
		SetPVarInt(playerid, "Job", 2);
		
		SetPlayerTempJobCheckAnim(playerid, true);
	}
}

forward SetPlayerLoaderJobLoadCP(playerid);
public SetPlayerLoaderJobLoadCP(playerid) // установить чекпоинт где брать груз
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_LOADER)
	{
		SetPlayerTempJobCheckAnim(playerid, false);
		
		SetPVarInt(playerid, "Job", 1);

		SetPlayerTempJobState(playerid, TEMP_JOB_STATE_LOADER_LOAD);
		SetPlayerCheckpoint(playerid, 528.8989, 1641.3206, 12.5027, 2.0);
	}
}

stock SetPlayerLumberJackChopCP(playerid)
{
	new rand = random(sizeof lumberjack_job_chop_cp);

	SetPlayerCheckpoint(playerid, lumberjack_job_chop_cp[rand][0], lumberjack_job_chop_cp[rand][1], 12.0020, 2.0);
	
	SetPVarInt(playerid, "Job", 3);
}

stock TempJobsInit()
{
	new idx;
	for(idx = 0; idx < sizeof g_temp_jobs; idx ++)
	{
		if(idx == 3) continue; // пикап в заводе (создается отдельно от всех)

		CreatePickupAC(1275, 23, GetTempJobInfo(idx, TJ_POS_X), GetTempJobInfo(idx, TJ_POS_Y), GetTempJobInfo(idx, TJ_POS_Z), -1, PICKUP_ACTION_TYPE_TEMP_JOB, idx);
	}

	// шахта
	for(idx = 0; idx < sizeof miner_carriage; idx ++)
	{
		miner_carriage[idx][MC_STATUS] = false;
		miner_carriage[idx][MC_OBJECT_ID] = CreateDynamicObject(1769, miner_carriage[idx][MC_START_POS_X], miner_carriage[idx][MC_START_POS_Y], miner_carriage[idx][MC_START_POS_Z], 0.0, 0.0, 90.0);

		Streamer_SetIntData(STREAMER_TYPE_OBJECT, miner_carriage[idx][MC_OBJECT_ID], E_STREAMER_EXTRA_ID, OBJECT_TYPE_CARRIAGE);

		miner_carriage[idx][MC_LABEL] = CreateDynamic3DTextLabel("Загрузка\n\n{FFCC00}Количество руды\n0 / 10000 кг", 0x66CC00FF, -2375.1228, 294.7194, -15.4815 + 3.0, 10.0);
		miner_carriage[idx][MC_PICKUP_ID] = CreatePickupAC(19135, 23, -2375.1228, 296.8900, -15.7689, -1, PICKUP_ACTION_TYPE_MINER_CARRI);
	}

	for(new i; i < sizeof miner_job_load_pos; i ++)
	{
		CreateDynamic3DTextLabel("Место\nдобычи руды", 0xFFFF00AA, miner_job_load_pos[i][0], miner_job_load_pos[i][1], miner_job_load_pos[i][2], 10.0);
		miner_job_load_cp[i] = CreateDynamicCP(miner_job_load_pos[i][0], miner_job_load_pos[i][1], miner_job_load_pos[i][2], 1.2, _, _, _, 1.3);
	}

	CreatePickupAC(19134, 23, 2305.8884, 1738.6920, 1.7285, 0, PICKUP_ACTION_TYPE_MINER_SELL_M);
	CreateDynamic3DTextLabel("Продажа металла\n{00CC00}15 рублей {FFFFFF}за 1 кг", 0x9966FFBB,  2305.8884, 1738.6920, 1.7285 + 1.2, 10.0);

	CreateDynamic3DTextLabel("Шахта\n\n{3399CC}1. Выдача инструментов\n2. Получение зарплаты", 0x009933FF, GetTempJobInfo(TEMP_JOB_MINER, TJ_POS_X), GetTempJobInfo(TEMP_JOB_MINER, TJ_POS_Y), GetTempJobInfo(TEMP_JOB_MINER, TJ_POS_Z) + 0.82, 5.0);

	// завод
	for(idx = 0; idx < 3; idx ++)
	{
		CreatePickupAC(1275, 33, 264.4713, -217.2706 + float(idx * 2), 1006.5694, -1, PICKUP_ACTION_TYPE_TEMP_JOB, TEMP_JOB_FACTORY);
	}
	for(idx = 0; idx < sizeof factory_take_metall_pos; idx ++)
	{
		CreatePickupAC(19135, 23, factory_take_metall_pos[idx][0], factory_take_metall_pos[idx][1], factory_take_metall_pos[idx][2] - 0.4, -1, PICKUP_ACTION_TYPE_FACTORY_MET);
	}

	new Float: x = 311.6580, Float: y = -207.6711, Float: z = 1006.5694;
	for(idx = 0; idx < sizeof factory_desk; idx ++)
	{
		if(idx && !(idx % 4))
			y -= (idx != 8 ? 2.9917 : 3.0085);

		factory_desk[idx][FD_POS_X] = x - (float(idx % 4) * 5.5003);
		factory_desk[idx][FD_POS_Y] = y;
		factory_desk[idx][FD_POS_Z] = z;

		factory_desk[idx][FD_USED] = false;
		factory_desk[idx][FD_OBJECT_ID] = -1;

		factory_desk[idx][FD_CHEK_ID] = CreateDynamicCP(factory_desk[idx][FD_POS_X], factory_desk[idx][FD_POS_Y], factory_desk[idx][FD_POS_Z], 0.3, _, _, _, 0.3);
		factory_desk[idx][FD_LABEl] = CreateDynamic3DTextLabel("Рабочее место", 0xFFFFFFEE, factory_desk[idx][FD_POS_X], factory_desk[idx][FD_POS_Y], factory_desk[idx][FD_POS_Z] + 1.0, 5.0);

		CallLocalFunction("UpdateFactoryDesk", "i", idx);
	}
	factory_put_zone = CreateDynamicRectangle(264.8033, -199.8648, 296.8693, -202.0421);

	// --------------- Завод
	car_metall[0] = AddStaticVehicleEx(406, -1076.2706, 2204.9490, 38.4303, 180.0, 125, 1,900); // фургон для перевози металла
	AddStaticVehicleEx(406, -1081.3639, 2204.7727, 38.4130, 180.0, 125, 1, 900); // фургон для перевози металла
	AddStaticVehicleEx(406, -1086.3571, 2204.7319, 38.3786, 180.0, 125, 1, 900); // фургон для перевози металла
	AddStaticVehicleEx(406, -1090.8806, 2204.7322, 38.3446, 180.0, 125, 1, 900); // фургон для перевози металла

	AddStaticVehicleEx(514, -1116.3119, 2205.5913, 38.2890, 179.9556, 6, 6, 900); // фура для перевозки топлива
	car_metall[1] = AddStaticVehicleEx(514, -1107.9980, 2205.7349, 38.1867, 180.4830, 6, 6, 900); // фура для перевозки топлива

	car_factory[0] = AddStaticVehicleEx(584,-1121.6831, 2190.3965, 38.0457, 263.2740, 1, 1, 900); // цистерна
	car_factory[1] = AddStaticVehicleEx(584,-1121.6831, 2181.3005, 38.0457, 263.2740, 1, 1, 900); // цистерна

	// Лесопилка
	CreatePickupAC(19197, 23, 2376.6016, -603.0489, 12.1172, 0, PICKUP_ACTION_TYPE_LUMBERJACK_P, 0);
	CreatePickupAC(19197, 23, 2376.6008, -606.8954, 12.1172, 0, PICKUP_ACTION_TYPE_LUMBERJACK_P, 1);
}

public OnPlayerPickUpPickupEx(playerid, pickupid, action_type, action_id)
{
    if(GetPVarInt(playerid, "PickupID") == pickupid) return 1;
	SetPVarInt(playerid, "PickupID", pickupid);
	SetTimerEx("ResetAntiFloodPick", 3000, 0, "i", playerid);
	if(GetPVarInt(playerid, "PickupTime") > gettime()) return 1;
	SetPVarInt(playerid, "PickupTime", gettime()+3);
	
	if(IsPlayerInRangeOfPoint(playerid, 5.0, GetPickupInfo(pickupid, P_POS_X), GetPickupInfo(pickupid, P_POS_Y), GetPickupInfo(pickupid, P_POS_Z)))
	{
		switch(action_type)
		{
		    case PICKUP_ACTION_TYPE_TEMP_JOB:
			{
				new job = GetPlayerTempJob(playerid);
				if(job != action_id && IsPlayerInJob(playerid) || GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_NONE)
				{
					job = TEMP_JOB_NONE - 1;
				}

				switch(action_id)
				{
					case TEMP_JOB_LOADER:
					{
						if(job == TEMP_JOB_NONE)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_LOADER_START, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Работа грузчика",
								"{FFFFFF}Вы хотите устроиться на работу грузчиком?",
								"Да", "Нет"
							);
						}
						else if(job == action_id)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_LOADER_END, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Работа грузчика",
								"{FFFFFF}Вы уверены что хотите завершить рабочий день?",
								"Да", "Нет"
							);
						}
						else SendErr(playerid, "Чтобы устроиться сюда закончите текущую работу");
					}
					case TEMP_JOB_MINER:
					{
						if(job == TEMP_JOB_NONE)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_MINER_START, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Работа шахтера",
								"{FFFFFF}Вы хотите устроиться на работу шахтера?",
								"Да", "Нет"
							);
						}
						else if(job == action_id)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_MINER_END, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Работа шахтера",
								"{FFFFFF}Вы уверены что хотите завершить рабочий день?",
								"Да", "Нет"
							);
						}
						else SendErr(playerid, "В данный момент устроиться на эту работу нельзя");
					}
					case TEMP_JOB_FACTORY_TRUCKER:
					{
						if(job == TEMP_JOB_NONE)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_FACTORY_TRUCKER, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Завод",
								"{FFFFFF}Вы хотите начать работу в отделе доставки исходных материалов?",
								"Да", "Нет"
							);
						}
						else if(job == action_id)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_FACTORY_TRUCKER, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Завод",
								"{FFFFFF}Закончить работу в отделе доставки исходных материалов?",
								"Да", "Нет"
							);
						}
						else SendErr(playerid, "В данный момент устроиться на эту работу нельзя");
					}
					case TEMP_JOB_FACTORY:
					{
						if(job == TEMP_JOB_NONE)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_FACTORY, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Завод",
								"{FFFFFF}Вы хотите начать работу в производственном цеху?",
								"Да", "Нет"
							);
						}
						else if(job == action_id)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_FACTORY, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Завод",
								"{FFFFFF}Закончить работу в производственном цеху?",
								"Да", "Нет"
							);
						}
						else SendErr(playerid, "В данный момент устроиться на эту работу нельзя");
					}
					case TEMP_JOB_LUMBERJACK:
					{
						if(job == TEMP_JOB_NONE)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_LUMBERJACK_ST, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Работа лесоруба",
								"{FFFFFF}Вы хотите устроиться на работу лесоруба?",
								"Да", "Нет"
							);
						}
						else if(job == action_id)
						{
							ShowPlayerDialogEx
							(
								playerid, DIALOG_TEMP_JOB_LUMBERJACK_END, DIALOG_STYLE_MSGBOX,
								"{ebec86}>> Работа лесоруба",
								"{FFFFFF}Вы уверены что хотите завершить рабочий день?",
								"Да", "Нет"
							);
						}
						else SendErr(playerid, "В данный момент устроиться на эту работу нельзя");
					}
				}
			}
			case PICKUP_ACTION_TYPE_MINER_SELL_M:
			{
				ShowPlayerBuyMetalDialog(playerid);
			}
			case PICKUP_ACTION_TYPE_FACTORY_MET:
			{
				if(GetPlayerTempJob(playerid) == TEMP_JOB_FACTORY)
				{
					new j_state = GetPlayerTempJobState(playerid);
					switch(j_state)
					{
						case TEMP_JOB_STATE_FACTORY_TAKE_MET:
						{
							new factory_metal = GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_AMOUNT);
							new factory_fuel = GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL, R_AMOUNT);

							new take_metall = random(2) + 1;
							if(factory_metal > take_metall && factory_fuel > (take_metall * 6))
							{
								SetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_AMOUNT, factory_metal - take_metall);
								UpdateRepository(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL);

								new fmt_str[16];
								SetPVarInt(playerid, "factory_take_metall", take_metall);

								format(fmt_str, sizeof fmt_str, "~b~~h~+%d kg", take_metall);
								GameTextForPlayer(playerid, fmt_str, 4000, 1);

								SetPlayerTempJobState(playerid, TEMP_JOB_STATE_FACTORY_CREATE_P);
							}
							else GameTextForPlayer(playerid, "~r~no fuel or metal", 4000, 1);
						}
						case TEMP_JOB_STATE_FACTORY_CREATE_P:
						{
							SendErr(playerid, "Вы уже взяли металл");
						}
					}
				}
			}
			case PICKUP_ACTION_TYPE_LUMBERJACK_P:
			{
				if(GetPlayerTempJob(playerid) == TEMP_JOB_LUMBERJACK)
				{
					if(GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_LUMBERJACK_PUT)
					{
						new desk;

						SetPlayerTempJobState(playerid, TEMP_JOB_STATE_LUMBERJACK_CHOP);
						ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 1, 0, 1, 0, 800, 0);

						RemovePlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND);
						SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, 326, A_OBJECT_BONE_RIGHT_HAND, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0);

						SetPlayerJobLoadItems(playerid, GetPlayerJobLoadItems(playerid) + 1);

						new fmt_text[65];

						format(fmt_text, sizeof fmt_text, "Дрова доставлены на склад! Всего перенесено дров: {66CC00}%d шт", GetPlayerJobLoadItems(playerid));
						SendClientMessage(playerid, 0x66CC00FF, fmt_text);

						SetPlayerLumberJackChopCP(playerid);

						desk = GetPickupInfo(pickupid, P_ACTION_ID);

						new objectid;
						if(!desk)
						{
							objectid = CreateDynamicObject(1463, 2378.1465, -603.0632, 12.0885, 0.0, 0.0, 90.0);
							MoveDynamicObject(objectid, 2382.3528, -603.0815, 12.0885, 2.0, 0.0, 0.0, 0.0);
						}
						else
						{
							objectid = CreateDynamicObject(1463, 2378.1465, -606.80481, 12.0885, 0.0, 0.0, 90.0);
							MoveDynamicObject(objectid, 2382.3528, -606.80481, 12.0885, 2.0, 0.0, 0.0, 0.0);
						}

						Streamer_SetIntData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, OBJECT_TYPE_WOOD);
					}
				}
			}
			case PICKUP_ACTION_TYPE_MINER_CARRI:
			{
				if(GetPlayerTempJob(playerid) == TEMP_JOB_MINER
				&& GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_MINER_UNLOAD)
				{
					if(!miner_carriage[0][MC_STATUS])
					{
						new fmt_str[64];

						new rand = random(45) + 16;
						new items = GetPlayerJobLoadItems(playerid) + rand;

						RemovePlayerAttachedObjects(playerid);
						SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, 18634, A_OBJECT_BONE_RIGHT_HAND, 0.07, 0.03, 0.04, 0.0, 270.0, 270.0, 1.5, 2.1, 1.8, 0);

						ApplyAnimation(playerid, "CARRY", "putdwn", 4.0, 0, 0, 0, 0, 0);
						SetPlayerJobLoadItems(playerid, items);

						format(fmt_str, sizeof fmt_str, "Вы доставили в вагонетку {00bbff}%d кг {66CC00}руды", rand);
						SendClientMessage(playerid, 0x66CC00FF, fmt_str);

						format(fmt_str, sizeof fmt_str, "Общее количество добытого сырья: {00bbff}%d кг", items);
						SendClientMessage(playerid, 0x3399FFFF, fmt_str);

						format(fmt_str, sizeof fmt_str, "+ %d кг", rand);
						SetPlayerChatBubble(playerid, fmt_str, 0x66CC00FF, 10.0, 2000);

						miner_carriage[0][MC_ORE_COUNT] += rand;

						if(miner_carriage[0][MC_ORE_COUNT] >= 10000)
						{
							DestroyPickupAC(miner_carriage[0][MC_PICKUP_ID]);
							miner_carriage[0][MC_PICKUP_ID] = -1;

							SetTimerEx("MinerCarriageMove", 7_000, false, "i", 0);

							UpdateDynamic3DTextLabelText(miner_carriage[0][MC_LABEL], 0xFFFF00FF, "Ожидание...");
						}
						else
						{
							format(fmt_str, sizeof fmt_str, "Загрузка\n\n{FFCC00}Количество руды\n%d / 10000 кг", miner_carriage[0][MC_ORE_COUNT]);
							UpdateDynamic3DTextLabelText(miner_carriage[0][MC_LABEL], 0x66CC00FF, fmt_str);
						}

						SetPlayerMinerJobLoadCP(playerid);
					}
				}
			}
		}
	}
	return 1;
}

forward SetPlayerLoaderJobLoad(playerid);
public SetPlayerLoaderJobLoad(playerid) // брать груз
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_LOADER)
	{
		if(GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_LOADER_LOAD)
		{
			new rand = random(sizeof loader_job_attach_obj);

			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 1, 1, 1, 1, 1, 0);
			SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, loader_job_attach_obj[rand][L_OBJECT], A_OBJECT_BONE_RIGHT_HAND, loader_job_attach_obj[rand][L_POS_X], loader_job_attach_obj[rand][L_POS_Y], loader_job_attach_obj[rand][L_POS_Z], loader_job_attach_obj[rand][L_ROT_X], loader_job_attach_obj[rand][L_ROT_Y], loader_job_attach_obj[rand][L_ROT_Z], 1.0, 1.0, 1.0, 0);

			SetPlayerLoaderJobUnLoadCP(playerid);

			if(!random(6))
				SetPlayerTempJobState(playerid, TEMP_JOB_STATE_LOADER_DROP_LOAD);
		}
	}
}

forward SetPlayerMinerJobTakeOre(playerid, step);
public SetPlayerMinerJobTakeOre(playerid, step)
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_MINER)
	{
		new time = 1000;
		switch(step)
		{
			case 1:
			{
				RemovePlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND);

				ClearAnimations(playerid);
				ApplyAnimation(playerid, "CARRY", "liftup", 8.0, 0, 0, 0, 0, 0, 0);

				SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, 905, A_OBJECT_BONE_LEFT_HAND, 0.1, 0.05, -0.1, 0.0, 90.0, 0.0, 0.2, 0.2, 0.2, 0);
				SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND + 1, 2936, A_OBJECT_BONE_RIGHT_HAND, 0.1, 0.05, 0.1, 0.0, 90.0, 0.0, 0.2, 0.2, 0.2, 0);
			}
			case 2:
			{
				ApplyAnimation(playerid, "GHANDS", "gsign3LH", 4.1, 0, 1, 1, 1, 2250, 0);

				time = 2500;
			}
			case 3:
			{
				RemovePlayerAttachedObjectEx(playerid, A_OBJECT_SLOT_HAND, A_OBJECT_SLOT_HAND + 1);

				SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_SPINE, 1458, A_OBJECT_BONE_SPINE, -0.9, 0.7, 0.02, 0.0, 90.0, 0.0, 0.58, 0.6, 0.4, 0);
				SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_SPINE + 1, 816, A_OBJECT_BONE_SPINE, -0.63, 1.3, 0.0, 270.0, 75.0, 0.0, 0.5, 0.4, 0.8, 0);

				SetPlayerMinerJobUnLoadCP(playerid);
				return ;
			}
			default:
				return ;
		}
		SetTimerEx("SetPlayerMinerJobTakeOre", time, false, "ii", playerid, step + 1);
	}
}

forward SetPlayerLumberJackTakeWood(playerid);
public SetPlayerLumberJackTakeWood(playerid)
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_LUMBERJACK)
	{
		if(GetPlayerAnimationIndex(playerid) != 20)
			LumberJackPlayerDrop(playerid, false);
		else
		{
			SetPlayerTempJobState(playerid, TEMP_JOB_STATE_LUMBERJACK_PUT);

			RemovePlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND);
			ApplyAnimation(playerid, "CARRY", "liftup", 4.1, 1, 0, 1, 0, 1500, 0);

			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 1, 0, 1, 1, 1);
			SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, 1463, A_OBJECT_BONE_RIGHT_HAND, 0.006, 0.138, -0.192, -109.8, -2.2, -102.9, 0.505, 0.328, 0.57);

			if(!random(5))
				SetTimerEx("LumberJackPlayerDrop", 500, false, "dd", playerid, true);
		}
	}
}

forward LumberJackPlayerDrop(playerid, bool: message);
public LumberJackPlayerDrop(playerid, bool: message)
{
	SetPlayerTempJobState(playerid, TEMP_JOB_STATE_LUMBERJACK_CHOP);

	if(message)
		SendClientMessage(playerid, 0xa24646FF, "Вы уронили дрова");

	RemovePlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND);
	SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, 326, A_OBJECT_BONE_RIGHT_HAND, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0);

	ApplyAnimation(playerid, "MISC", "Idle_Chat_02", 4.1, 0, 0, 0, 0, 1, 0);

	SetPlayerLumberJackChopCP(playerid);

	return 1;
}

forward MinerCarriageUpdate(carriageid);
public MinerCarriageUpdate(carriageid)
{
	if(miner_carriage[carriageid][MC_STATUS] && !miner_carriage[carriageid][MC_IN_MOVE])
	{
		if(miner_carriage[carriageid][MC_ORE_COUNT] >= 500)
		{
			new fmt_str[55],
				items = GetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE, R_AMOUNT);

			miner_carriage[carriageid][MC_ORE_COUNT] -= 500;

			SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE, R_AMOUNT, items + 500);
			UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE);

			format(fmt_str, sizeof fmt_str, "Разгрузка\n\n{FFCC00}Количество руды\n%d / 10000 кг", miner_carriage[carriageid][MC_ORE_COUNT]);
			UpdateDynamic3DTextLabelText(miner_carriage[carriageid][MC_LABEL], 0x66CCFFFF, fmt_str);
		}

		else if(miner_carriage[carriageid][MC_ORE_COUNT] <= 0)
		{
			miner_carriage[carriageid][MC_IN_MOVE] = true;

			SetTimerEx("MinerCarriageMove", 7_000, false, "i", carriageid);
			UpdateDynamic3DTextLabelText(miner_carriage[carriageid][MC_LABEL], 0xFFFF00FF, "Ожидание...");
		}
	}
}

forward MinerCarriageMove(carriageid);
public MinerCarriageMove(carriageid)
{
	new bool: status = miner_carriage[carriageid][MC_STATUS];
	if(status)
	{
		MoveDynamicObject(miner_carriage[carriageid][MC_OBJECT_ID], miner_carriage[carriageid][MC_START_POS_X], miner_carriage[carriageid][MC_START_POS_Y], miner_carriage[carriageid][MC_START_POS_Z], 10.0, 0.0, 0.0, 90.0);
	}
	else
	{
		MoveDynamicObject(miner_carriage[carriageid][MC_OBJECT_ID], miner_carriage[carriageid][MC_END_POS_X], miner_carriage[carriageid][MC_END_POS_Y], miner_carriage[carriageid][MC_END_POS_Z], 10.0, 0.0, 0.0, 90.0);
	}

	DestroyDynamic3DTextLabel(miner_carriage[carriageid][MC_LABEL]);

	miner_carriage[carriageid][MC_IN_MOVE] = true;

	miner_carriage[carriageid][MC_STATUS] = (status ^ true);
}

forward MinerCarriageSetState(carriageid);
public MinerCarriageSetState(carriageid)
{
	if(miner_carriage[carriageid][MC_STATUS]) // вагонетка
	{
		miner_carriage[carriageid][MC_LABEL] = CreateDynamic3DTextLabel("Разгрузка\n\n{FFCC00}Количество руды\n10000 / 10000 кг", 0x66CCFFFF, -2548.1213, 294.7194, -15.4815 + 3.0, 10.0);
		miner_carriage[carriageid][MC_ORE_COUNT] = 10_000;
	}
	else
	{
		miner_carriage[carriageid][MC_LABEL] = CreateDynamic3DTextLabel("Загрузка\n\n{FFCC00}Количество руды\n0 / 10000 кг", 0x66CC00FF, -2375.1228, 294.7194, -15.4815 + 3.0, 10.0);
		miner_carriage[carriageid][MC_PICKUP_ID] = CreatePickupAC(19135, 23, -2375.1228, 296.8900, -15.7689, -1, PICKUP_ACTION_TYPE_MINER_CARRI);
		miner_carriage[carriageid][MC_ORE_COUNT] = 0;
	}
}

stock RemovePlayerAttachedObjects(playerid)
{
	for(new idx; idx < MAX_PLAYER_ATTACHED_OBJECTS; idx ++)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, idx))
		{
			RemovePlayerAttachedObject(playerid, idx);
		}
	}
}

stock RemovePlayerAttachedObjectEx(playerid, ...)
{
	new args = numargs()-1;
	for(new idx; idx < args; idx ++)
		RemovePlayerAttachedObject(playerid, getarg(idx + 1));
}

stock FactoryPlayerDrop(playerid, bool: reject = true)
{
	if(GetPlayerTempJob(playerid) == TEMP_JOB_FACTORY)
	{
		if(reject)
		{
			if(GetPlayerTempJobState(playerid) != TEMP_JOB_STATE_FACTORY_CREATED) return ;

			SetPlayerChatBubble(playerid, "Брак", 0xFF0000FF, 10.0, 1500);
			ApplyAnimation(playerid, "OTB", "WTCHRACE_LOSE", 4.1, 0, 0, 0, 0, 0, 0);
		}
		else
		{
			if(GetPlayerTempJobState(playerid) != TEMP_JOB_STATE_FACTORY_DROP_P) return ;
			SetPlayerTempJobCheckAnim(playerid, false);

			RemovePlayerAttachedObject(playerid, A_OBJECT_SLOT_FOREARM);
			SetPlayerFactoryDeskUse(playerid, GetPlayerData(playerid, P_FACTORY_USE_DESK), false);

			ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, 0, 0, 0, 0, 1, 0);
			SendClientMessage(playerid, 0xa24646FF, "Вы уронили продукт");
		}

		new bad_prods = GetPVarInt(playerid, "factory_bad_prods") + 1;
		SetPVarInt(playerid, "factory_bad_prods", bad_prods);

		GameTextForPlayer(playerid, "~r~~h~fail", 4000, 1);
		SetPlayerTempJobState(playerid, TEMP_JOB_STATE_FACTORY_TAKE_MET);
	}
}

stock SetPlayerFactoryDeskUse(playerid, deskid, bool: status)
{
	if(!(0 <= deskid <= sizeof factory_desk-1)) return ;

	if(GetPlayerTempJob(playerid) == TEMP_JOB_FACTORY)
	{
		if(status)
		{
			if(!factory_desk[deskid][FD_USED] && GetPlayerData(playerid, P_FACTORY_USE_DESK) == -1)
			{
				if(GetPlayerTempJobState(playerid) == TEMP_JOB_STATE_FACTORY_CREATE_P)
				{
					factory_desk[deskid][FD_USED] = true;

					new Float: angle;

					new take_metall = GetPVarInt(playerid, "factory_take_metall");
					new factory_fuel = GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL, R_AMOUNT);

					SetPlayerData(playerid, P_FACTORY_USE_DESK, deskid);
					TogglePlayerFactoryCP(playerid, false);

					if(!((deskid / 4) % 2))
					{
						angle = 180.0;
					}
					else angle = 0.0;
					SetPlayerFacingAngle(playerid, angle);

					ApplyAnimation(playerid, "OTB", "betslp_loop", 4.1, 1, 0, 0, 1, 20_000, 0);

					SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND, 18644, A_OBJECT_BONE_RIGHT_HAND, 0.06, 0.02, 0.0, 30.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0);
					SetPlayerAttachedObject(playerid, A_OBJECT_SLOT_HAND + 1, 18635, A_OBJECT_BONE_LEFT_HAND, 0.1, 0.06, -0.1, 180.0, 80.0, 0.0, 1.0, 1.0, 1.0, 0);

					SetPlayerTempJobState(playerid, TEMP_JOB_STATE_FACTORY_CREATED);
					SetTimerEx("CreateFactoryProd", 18_000, false, "i", playerid);

					SetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL, R_AMOUNT, factory_fuel - (take_metall * 6));
					UpdateRepository(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL);
				}
				else
				{
					if(GetPlayerTempJobState(playerid) != TEMP_JOB_STATE_FACTORY_PUT_PROD)
						SendErr(playerid, "Возьмите металл у раздаточного стола");
				}
			}
		}
		else
		{
			if(factory_desk[deskid][FD_USED])
			{
				if(GetPlayerData(playerid, P_FACTORY_USE_DESK) == deskid)
				{
					TogglePlayerFactoryCP(playerid, true);
					SetPlayerData(playerid, P_FACTORY_USE_DESK, -1);

					factory_desk[deskid][FD_USED] = false;
				}
			}
		}
		UpdateFactoryDesk(deskid);
	}
}

forward RepositoriesLoad();
public RepositoriesLoad()
{
	new rows, fields, type, action_id;
	cache_get_data(rows, fields);
	for(new idx; idx <= rows; idx++)
	{
		type = cache_get_row_int(idx, 1);
		action_id = cache_get_row_int(idx, 2);

		if(0 <= type <= sizeof g_repository-1)
		{
			if(0 <= action_id <= sizeof g_repository[]-1)
			{
				SetRepositoryData(type, action_id, R_AMOUNT, cache_get_row_int(idx, 3));
			}
		}
	}
	RepositoriesInit();
}

stock RepositoriesInit()
{
	// шахта

	SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL, R_LABEL, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 2387.6606, 1757.4240, -1.8463 + 1.0, 20.0));
	SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL, R_LABEL_2, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 2317.1355, 1738.4092, 5.0, 25.0));

	UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL);

	// ----------------------
	SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE, R_LABEL, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, -2568.2881, 297.3934, -15.7620 + 2.5, 15.0));
	SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE, R_LABEL_2, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 2382.7622, 1720.6998, 4.0, 30.0));

	UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE);

	// ----------------------
	SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_REMELTI, R_LABEL, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 2387.6606, 1752.0416, -1.8463 + 1.0, 20.0));
	UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_REMELTI);

	SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_REMELTI, R_NOT_SAVE, true);
	SetTimer("UpdateMinerRemelting", 10_000, false);

	// завод
	SetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_LABEL, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, -1046.6550,2208.5771, 41.0, 20.0));
	SetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_LABEL_2, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 263.7803, -203.8183, 1010.0, 15.0));

	factory_store_label[0] = CreateDynamic3DTextLabel("На складе:\n{66CC00}Топливо: 0 / 1000000 л\n\n{6699FF}/sellf", 0xFFFFFFFF, -1112.0723,2167.1243, 42.0, 20.0); // топливо
	factory_store_label[1] = CreateDynamic3DTextLabel("На складе:\n{66CC00}Металл: 0 / 1000000 кг\n\n{6699FF}/sellm", 0xFFFFFFFF, -1042.4534,2170.3594, 42.0, 20.0); // метал

	CreateDynamic3DTextLabel("Склад\nпроизводственного\nцеха\n\n{6699FF}/sellf\n/sellm\n{f0e86b}/buyprod", 0xFFFFFFFF, -1046.6550, 2208.5771, 42.0, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, _, _, _, _, 50.0);
	UpdateRepository(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL);

	// нефтезавод
	CreateDynamic3DTextLabel("Прямо\n\n{FFFFFF}Продажа топлива для АЗС", 0xa24646FF, 977.3191, 630.5245, 12.1154 - 0.5, 20.0);
	CreateDynamic3DTextLabel("Направо\n\n{FFFFFF}Продажа топлива для завода", 0xa24646FF, 977.3191, 635.4105, 12.1154 - 0.5, 20.0);

	SetRepositoryData(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F, R_LABEL, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 935.9503, 662.1276, 12.0029 + 5.0, 35.0)); // для азс
	SetRepositoryData(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F, R_LABEL_2, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 1002.7327, 679.4678, 12.0029 + 5.0, 35.0)); // для завода

	UpdateRepository(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F);
	SetTimer("UpdateOilFactory", 30_000, false);
	
	// воинская часть
	SetRepositoryData(REPOSITORY_TYPE_ARMY, REPOSITORY_ACTION_ARMY_METAL, R_LABEL, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 0.0, -0.0, 0.0 + 1.5, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 18, 3)); // металл
	SetRepositoryData(REPOSITORY_TYPE_ARMY, REPOSITORY_ACTION_ARMY_AMMO, R_LABEL, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 0.0, -0.0, 0.0 + 1.5, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 18, 3)); // патроны

	UpdateRepository(REPOSITORY_TYPE_ARMY, REPOSITORY_ACTION_ARMY_METAL);
	UpdateRepository(REPOSITORY_TYPE_ARMY, REPOSITORY_ACTION_ARMY_AMMO);

	// лесопилка
	SetRepositoryData(REPOSITORY_TYPE_SAWMILL, REPOSITORY_ACTION_SAWMILL_WOOD, R_LABEL, CreateDynamic3DTextLabel("-No Init-", 0xFFFFFFFF, 2411.6389,-599.9781,12.3683 + 2.0, 10.0)); // дерево на лесопилке

	UpdateRepository(REPOSITORY_TYPE_SAWMILL, REPOSITORY_ACTION_SAWMILL_WOOD);

	printf("[Repositories]: Все склады загружнены");
}

stock UpdateRepository(type, actionid)
{
	new fmt_str[128];
	new amount = GetRepositoryData(type, actionid, R_AMOUNT);
	new Text3D: label = GetRepositoryData(type, actionid, R_LABEL);
	new Text3D: label_2 = GetRepositoryData(type, actionid, R_LABEL_2);

	switch(type)
	{
		case REPOSITORY_TYPE_MINER:
		{
			switch(actionid)
			{
				case REPOSITORY_ACTION_MINER_METAL:
				{
					format(fmt_str, sizeof fmt_str, "Покупка металла\n(для развозчиков)\n\n{FFCD00}На складе %d кг\nКупить: /buym", amount);
					UpdateDynamic3DTextLabelText(label_2, 0xFFFFFFFF, fmt_str);

					format(fmt_str, sizeof fmt_str, "Металл\n{0099CC}На складе:\n%d кг", amount);
					UpdateDynamic3DTextLabelText(label, 0xFFFFFFFF, fmt_str);
				}
				case REPOSITORY_ACTION_MINER_ORE:
				{
					format(fmt_str, sizeof fmt_str, "Руда\n{00CC00}На складе:\n%d кг", amount);
					UpdateDynamic3DTextLabelText(label, 0xFFFFFFFF, fmt_str);

					UpdateDynamic3DTextLabelText(label_2, 0xFFFFFFFF, fmt_str);
				}
				case REPOSITORY_ACTION_MINER_REMELTI:
				{
					format(fmt_str, sizeof fmt_str, "Кузница\n{CC9900}%d кг руды\nна переплавке", amount);
					UpdateDynamic3DTextLabelText(label, 0xFFFFFFFF, fmt_str);
				}
			}
		}
		case REPOSITORY_TYPE_FACTORY:
		{
			switch(actionid)
			{
				case REPOSITORY_ACTION_FACTORY_METAL..REPOSITORY_ACTION_FACTORY_PROD:
				{
					if(actionid != REPOSITORY_ACTION_FACTORY_PROD)
					{
						format(fmt_str, sizeof fmt_str, "На складе:\n{66CC00}Топливо: %d / 1000000 л\n\n{6699FF}/sellf", GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL, R_AMOUNT));
						UpdateDynamic3DTextLabelText(factory_store_label[0], 0xFFFFFFFF, fmt_str);

						format(fmt_str, sizeof fmt_str, "На складе:\n{66CC00}Металл: %d / 1000000 кг\n\n{6699FF}/sellm", GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_AMOUNT));
						UpdateDynamic3DTextLabelText(factory_store_label[1], 0xFFFFFFFF, fmt_str);
					}

					label = GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_LABEL);
					label_2 = GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_LABEL_2);

					format
					(
						fmt_str, sizeof fmt_str,
						"Исходные материалы:\n"\
						"{66CC00}Топливо: %d / 1000000 л\n"\
						"Металл: %d / 1000000 кг\n"\
						"{f0e86b}Продукты: %d шт.",
						GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL, R_AMOUNT),
						GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_AMOUNT),
						GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_PROD, R_AMOUNT)
					);
					UpdateDynamic3DTextLabelText(label, 0xFFFFFFFF, fmt_str);
					UpdateDynamic3DTextLabelText(label_2, 0xFFFFFFFF, fmt_str);
				}
			}
		}
		case REPOSITORY_TYPE_OIL_FACTORY:
		{
			switch(actionid)
			{
				case REPOSITORY_ACTION_OIL_FACTORY_F:
				{
					format(fmt_str, sizeof fmt_str, "Топливо для АЗС\n\n{FFCD00}На складе\n%d л топлива\n{33FF00}Купить: /buyf", amount);
					UpdateDynamic3DTextLabelText(label, 0xFFFFFFFF, fmt_str);

					format(fmt_str, sizeof fmt_str, "Топливо для завода\n\n{FFCD00}На складе\n%d л топлива\n{33FF00}Купить: /buyf", amount);
					UpdateDynamic3DTextLabelText(label_2, 0xFFFFFFFF, fmt_str);
				}
			}
		}
		case REPOSITORY_TYPE_ARMY:
		{
			switch(actionid)
			{
				case REPOSITORY_ACTION_ARMY_METAL:
				{
					format(fmt_str, sizeof fmt_str, "Металл на складе:\n{66cc33}%d кг\n\n{9999ff}/takem\n/putm", amount);
					UpdateDynamic3DTextLabelText(label, 0xFFFFFFFF, fmt_str);
				}
				case REPOSITORY_ACTION_ARMY_AMMO:
				{
					format(fmt_str, sizeof fmt_str, "Патроны на складе:\n%d / 200000 шт.", amount);
					UpdateDynamic3DTextLabelText(label, 0xFFCD00FF, fmt_str);
				}
			}
		}
		case REPOSITORY_TYPE_SAWMILL:
		{
			switch(actionid)
			{
				case REPOSITORY_ACTION_SAWMILL_WOOD:
				{
					format(fmt_str, sizeof fmt_str, "На складе:\n{66CC00}Дерево: %d / 1000000 ед", GetRepositoryData(REPOSITORY_TYPE_SAWMILL, REPOSITORY_ACTION_SAWMILL_WOOD, R_AMOUNT));
					UpdateDynamic3DTextLabelText(label, 0xFFFFFFFF, fmt_str);
				}
			}
		}
	}
}

forward UpdateOilFactory();
public UpdateOilFactory()
{
	new add_fuels = (random(2500) + 500);
	new fuels = GetRepositoryData(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F, R_AMOUNT) + add_fuels;

	new time = (random(fuels <= 20_000 ? 1 : 180) + 60) * 1000;

	SetRepositoryData(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F, R_AMOUNT, fuels);
	UpdateRepository(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F);

	SetTimer("UpdateOilFactory", time, false);
}

forward UpdateMinerRemelting();
public UpdateMinerRemelting()
{
	new remelting = GetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_REMELTI, R_AMOUNT);
	new ore = GetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE, R_AMOUNT);
	new metall = GetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL, R_AMOUNT);
	new rand;

	// берем с переплавки руду
	rand = random(90) + 11; // от 10 до 100;
	if(remelting > 0) // если на переплавке есть руда
	{
		if(rand > remelting) // если взяли больше чем было
			rand = remelting; // берем все что осталось

		remelting -= rand;

		SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_REMELTI, R_AMOUNT, remelting); // забрали с переплавки
		SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL, R_AMOUNT, metall + rand); // добавили на склад металл
	}

	// берем со склада руду
	rand = random(90) + 11; // от 10 до 100;
	if(remelting < 100) // если на пререплавке меньше 100 кг
	{
		if(rand > ore) // если взяли больше чем на складе
			rand = ore; // берем все что осталось

		SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE, R_AMOUNT, ore - rand); // взяли со склада
		SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_REMELTI, R_AMOUNT, remelting + rand); // добавили в переплавку
	}

	UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_ORE);
	UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_REMELTI);

	UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL);

	SetTimer("UpdateMinerRemelting", (random(16)+15) * 1000, false);
}

stock SaveRepository(type = -1, actionid = -1)
{
	new fmt_str[128];

	if(type != -1 && actionid != -1)
	{
		format(fmt_str, sizeof fmt_str, "UPDATE repositories SET amount=%d WHERE type=%d AND action_id=%d LIMIT 1", GetRepositoryData(type, actionid, R_AMOUNT), type, actionid);
		mysql_query(dbHandle, fmt_str, false);
	}
	else
	{
		for(new idx, idx_2; idx < sizeof g_repository; idx ++)
		{
			for(idx_2 = 0; idx_2 < sizeof g_repository[]; idx_2 ++)
			{
				if(GetRepositoryData(idx, idx_2, R_NOT_SAVE)) continue;

				format(fmt_str, sizeof fmt_str, "UPDATE repositories SET amount=%d WHERE type=%d AND action_id=%d LIMIT 1", GetRepositoryData(idx, idx_2, R_AMOUNT), idx, idx_2);
				mysql_query(dbHandle, fmt_str, false);
			}
		}
	}
}

forward EndPlayerJob(playerid);
public EndPlayerJob(playerid)
{
	if(IsPlayerInJob(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(vehicleid != INVALID_VEHICLE_ID)
		{
			SetVehicleToRespawn(vehicleid);
			DeletePVar(playerid, "JobInFactory");
			if(CreateVehicleLabel[playerid] != Text3D:-1) DestroyDynamic3DTextLabel(CreateVehicleLabel[playerid]);
		}
	}
	KillEndJobTimer(playerid);

	new fmt_str[128];
	new wage = GetPlayerJobWage(playerid);

	SetPlayerData(playerid, P_JOB_WAGE, 0);
	SendInf(playerid, "Рабочий день завершен!");

	SetPlayerData(playerid, P_IN_JOB, false);
	switch(GetPlayerTempJob(playerid))
	{
		case TEMP_JOB_FACTORY_TRUCKER:
		{
			RemovePlayerAttachedObjects(playerid);
					
			if(p_info[playerid][pMember]) SetPlayerSkin(playerid, p_info[playerid][pMemberSkin]);
			else SetPlayerSkin(playerid, ClosetSkins[playerid][0]);
			SetPlayerColorEx(playerid, TeamColors[GetTeamID(playerid)]);

			format(fmt_str, sizeof fmt_str, "Ваша общая чистая прибыль составляет {00CC00}%d руб", wage);
			SendClientMessage(playerid, 0xFFFFFFFF, fmt_str);

			SetPlayerJobLoadItems(playerid, 0);
			SetPlayerTempJob(playerid, TEMP_JOB_NONE);
		}
	}
	SendClientMessage(playerid, 0x66CC00FF, "Деньги будут перечислены на Ваш счет во время зарплаты");
	
	p_info[playerid][pPayCheck] += wage;
	MysqlUpdatePlayerInt(playerid, "paycheck", p_info[playerid][pPayCheck]);

	return 1;
}

forward UpdateFactoryDesk(deskid);
public UpdateFactoryDesk(deskid)
{
	new fmt_str[64];

	format(fmt_str, sizeof fmt_str, "Рабочее место №%d\n%s", deskid + 1, factory_desk[deskid][FD_USED] ? ("{FF6347}Занято") : ("{f0e86b}Свободно"));
	UpdateDynamic3DTextLabelText(factory_desk[deskid][FD_LABEl], 0xFFFFFFEE, fmt_str);
}

CMD:buym(playerid, params[])
{
	new modelid;

	if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
		modelid = GetVehicleModel(GetPlayerVehicleID(playerid));

	if(GetPlayerTempJob(playerid) != TEMP_JOB_FACTORY_TRUCKER || modelid != 406)
		return SendErr(playerid, "Вы не работник службы доставки завода");

	if(!strlen(params))
		return SendErr(playerid, "Используйте: /buym [кол-во в кг]");

	extract params -> new buy_metal_count;

	new metall_loaded_count = GetPlayerJobLoadItems(playerid);
	new miner_metal = GetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL, R_AMOUNT);

	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2317.2356, 1741.5924, 1.2725) || !IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid)))
		return SendErr(playerid, "Вы должны находиться у склада шахты в рабочем транспорте");

	if(!(1 <= buy_metal_count <= 500))
		return SendErr(playerid, "Можно загрузить от 1 до 500 кг металла");

	if(miner_metal < buy_metal_count)
		return SendErr(playerid, "На складе шахты нет такого количества металла");

	if((metall_loaded_count + buy_metal_count) > 500)
		return SendErr(playerid, "В фургон столько не поместится");

	if(GetMoney(playerid) < (buy_metal_count * 15))
		return SendErr(playerid, "Недостаточно денег для покупки такого количества металла");

	GiveMoney(playerid, -(buy_metal_count * 15), "Покупка металла (развозчик)");

	SetRepositoryData(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL, R_AMOUNT, miner_metal - buy_metal_count);
	UpdateRepository(REPOSITORY_TYPE_MINER, REPOSITORY_ACTION_MINER_METAL);

	SetPlayerJobLoadItems(playerid, metall_loaded_count + buy_metal_count);

	new fmt_str[64];

	format(fmt_str, sizeof fmt_str, "Вы загрузили %d кг металла общей стоимостью %d руб", buy_metal_count, buy_metal_count * 15);
	SendInf(playerid, fmt_str);

	format(fmt_str, sizeof fmt_str, "Доставка металла\n{FFFFFF}Загрузка %d / 500 кг", metall_loaded_count + buy_metal_count);
	UpdateDynamic3DTextLabelText(CreateVehicleLabel[playerid], 0x3399FFFF, fmt_str);

	return 1;
}

CMD:sellm(playerid, params[])
{
	if(!strlen(params))
		return SendErr(playerid, "Используйте: /sellm [кол-во в кг]");

	extract params -> new sell_metal_count;

	if(!IsPlayerInRangeOfPoint(playerid, 20.0, -1042.5638, 2170.3940, 38.3904))
		return SendErr(playerid, "Вы должны находиться у склада металла завода");

	if(!(1 <= sell_metal_count <= 500))
		return SendErr(playerid, "Можно продать от 1 до 500 кг металла");

	new factory_metal = GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_AMOUNT);

	if((factory_metal + sell_metal_count) > 1_000_000)
		return SendErr(playerid, "Склад металла завода заполнен");

	new fmt_str[90];

	new modelid;

	if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
		modelid = GetVehicleModel(GetPlayerVehicleID(playerid));

	if(GetPlayerTempJob(playerid) == TEMP_JOB_FACTORY_TRUCKER && IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid)) && modelid == 406)
	{
		new metall_loaded_count = GetPlayerJobLoadItems(playerid);

		if(metall_loaded_count < sell_metal_count)
			return SendErr(playerid, "В Вашем фургоне нет такого количества металла");

		metall_loaded_count -= sell_metal_count;
		SetPlayerJobLoadItems(playerid, metall_loaded_count);

		format(fmt_str, sizeof fmt_str, "Доставка металла\n{FFFFFF}Загрузка %d / 500 кг", metall_loaded_count);
		UpdateDynamic3DTextLabelText(CreateVehicleLabel[playerid], 0x3399FFFF, fmt_str);

		AddPlayerData(playerid, P_JOB_WAGE, +, sell_metal_count * 3);
		GiveMoney(playerid, (sell_metal_count * 18), "Продажа металла заводу (развозчик)");
		
		format(fmt_str, sizeof fmt_str, "Вы продали заводу %d кг металла на сумму %d руб", sell_metal_count, sell_metal_count * 18);
		SendClientMessage(playerid, 0x66CC00FF, fmt_str);

		format(fmt_str, sizeof fmt_str, "Ваша чистая выручка составляет {66CC00}%d руб", sell_metal_count * 3);
		SendClientMessage(playerid, 0x66CC00FF, fmt_str);

		SetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL, R_AMOUNT, factory_metal + sell_metal_count);
		UpdateRepository(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_METAL);
	}
	else SendErr(playerid, "Вы не работник службы доставки завода");
	return 1;
}

CMD:buyf(playerid, params[])
{
	new factory_fuels = GetRepositoryData(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F, R_AMOUNT);

	if(!IsPlayerInAnyVehicle(playerid))
		return SendErr(playerid, "Вы должны находиться на нефтезаводе в рабочем транспорте");

	new modelid;

    if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
		modelid = GetVehicleModel(GetPlayerVehicleID(playerid));

	if(IsPlayerInRangeOfPoint(playerid, 20.0, 994.1306, 679.8422, 12.0653))  // для завода
	{
		if(GetPlayerTempJob(playerid) != TEMP_JOB_FACTORY_TRUCKER || modelid != 514)
			return SendErr(playerid, "Вы не работаете в отделе доставки завода или заняли не ту линию");
	}
	else if(IsPlayerInRangeOfPoint(playerid, 25.0, 935.9503, 662.1276, 12.0029))  // для азс
	{
		if(GetPlayerJob(playerid) != JOB_TRUCKER || modelid != 514)
			return SendErr(playerid, "Вы не работаете развозчиком топлива или заняли не ту линию");
	}
	else
		return SendErr(playerid, "Вы должны находиться на нефтезаводе");

	new total_litres = GetPlayerJobLoadItems(playerid);

	if(!IsPlayerInVehicle(playerid, GetPlayerVehicleID(playerid)))
		return SendErr(playerid, "Вы должны находиться на нефтезаводе в рабочем транспорте");

	if(!strlen(params))
		return SendErr(playerid, "Используйте: /buyf [кол-во в литрах]");

	if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
		return SendErr(playerid, "У Вашего транспорта отсутствует цистерна для топлива");

	extract params -> new load_fuel;

	if(!(1 <= load_fuel <= 8000))
		return SendErr(playerid, "Можно загрузить от 1 до 8000 л топлива");

	if(factory_fuels < load_fuel)
		return SendErr(playerid, "На нефтезаводе нет такого количества топлива");

	if((total_litres + load_fuel) > 8000)
		return SendErr(playerid, "В цистерну столько не поместится");

	if(GetMoney(playerid) < (load_fuel * 10))
		return SendErr(playerid, "Недостаточно денег для покупки такого количества топлива");

	GiveMoney(playerid, -(load_fuel * 10), "Покупка топлива (нефтезавод)");

	SetRepositoryData(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F, R_AMOUNT, factory_fuels - load_fuel);
	UpdateRepository(REPOSITORY_TYPE_OIL_FACTORY, REPOSITORY_ACTION_OIL_FACTORY_F);

	SetPlayerJobLoadItems(playerid, total_litres + load_fuel);

	new fmt_str[64];

	format(fmt_str, sizeof fmt_str, "Вы загрузили %d л топлива общей стоимостью %d руб", load_fuel, load_fuel * 10);
	SendInf(playerid, fmt_str);

	format(fmt_str, sizeof fmt_str, "~g~+ %d litres~n~~b~total %d litres", load_fuel, total_litres + load_fuel);
	GameTextForPlayer(playerid, fmt_str, 2000, 6);

	if(p_info[playerid][pJob] == JOB_TRUCKER)
	{
	    new VehicleID = GetVehicleTrailer(GetPlayerVehicleID(playerid));
		if(VehicleID >= TruckerVehicle[6] && VehicleID <= TruckerVehicle[9]) format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Доставка топлива\n{FFFFFF}Загрузка %d / 8000 л", GetPlayerJobLoadItems(playerid));
		UpdateDynamic3DTextLabelText(TrailerInfo[VehicleID], COLOR_WHITE, STRING_GLOBAL);
	}
	else
	{
	    format(fmt_str, sizeof fmt_str, "Доставка топлива\n{FFFFFF}Загрузка %d / 8000 л", total_litres + load_fuel);
		UpdateDynamic3DTextLabelText(CreateVehicleLabel[playerid], 0xa24646FF, fmt_str);
	}
	return 1;
}

CMD:sellf(playerid, params[])
{
	new modelid;
	
	if(GetPlayerVehicleID(playerid) != INVALID_VEHICLE_ID)
		modelid = GetVehicleModel(GetPlayerVehicleID(playerid));

	if(GetPlayerTempJob(playerid) != TEMP_JOB_FACTORY_TRUCKER || modelid != 514)
		return SendErr(playerid, "Вы не работаете в службе доставки завода");

	if(!IsPlayerInRangeOfPoint(playerid, 10.0, -1111.9989, 2169.4163, 38.0353))
		return SendErr(playerid, "Вы должны находиться у склада топлива завода");

	new total_litres = GetPlayerJobLoadItems(playerid);

	new factory_fuels = GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL, R_AMOUNT);

	if(!strlen(params))
		return SendErr(playerid, "Используйте: /sellf [кол-во в литрах]");

	extract params -> new sell_fuels;

	if(!(1 <= sell_fuels <= 8000))
		return SendErr(playerid, "Можно продать от 1 до 8000 л топлива");

	if(GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID || !IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) || total_litres < sell_fuels)
		return SendErr(playerid, "В Вашей фуре нет такого количества топлива или цистерна не прицеплена");

	if((factory_fuels + sell_fuels) > 1000000)
		return SendErr(playerid, "Склад топлива завода заполнен");

	GiveMoney(playerid, (sell_fuels * 12), "Продажа топлива (завод)");

	SetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL, R_AMOUNT, factory_fuels + sell_fuels);
	UpdateRepository(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_FUEL);

	SetPlayerJobLoadItems(playerid, total_litres - sell_fuels);
	AddPlayerData(playerid, P_JOB_WAGE, +, sell_fuels * 2);

	new fmt_str[64];

	format(fmt_str, sizeof fmt_str, "Вы продали заводу %d л топлива на сумму %d руб", sell_fuels, sell_fuels * 12);
	SendClientMessage(playerid, 0x66CC00FF, fmt_str);

	format(fmt_str, sizeof fmt_str, "Ваша чистая выручка составляет {66CC00}%d руб", sell_fuels * 2);
	SendClientMessage(playerid, 0x66CC00FF, fmt_str);

    if(p_info[playerid][pJob] == JOB_TRUCKER)
	{
	    new VehicleID = GetVehicleTrailer(GetPlayerVehicleID(playerid));
		if(VehicleID >= TruckerVehicle[6] && VehicleID <= TruckerVehicle[9]) format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Доставка топлива\n{FFFFFF}Загрузка %d / 8000 л", GetPlayerJobLoadItems(playerid));
		UpdateDynamic3DTextLabelText(TrailerInfo[VehicleID], COLOR_WHITE, STRING_GLOBAL);
	}
	else
	{
		format(fmt_str, sizeof fmt_str, "Доставка топлива\n{FFFFFF}Загрузка %d / 8000 л", total_litres - sell_fuels);
		UpdateDynamic3DTextLabelText(CreateVehicleLabel[playerid], 0xa24646FF, fmt_str);
	}
	return 1;
}

CMD:buyprod(playerid, params[])
{
	if(p_info[playerid][pJob] != JOB_TRUCKER)
		return SendErr(playerid, "Вы должны работать дальнобойщиком");

	extract params -> new buy_prod_count; else return SendInf(playerid, "/buyprod [кол-во]. Стоимость 1 продукта 24 руб.");

	if(!IsPlayerInRangeOfPoint(playerid, 20.0, -1046.5460,2203.9644,38.2055))
		return SendErr(playerid, "Вы должны находиться у склада исходных материалов завода");
		
    if(!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
		return SendErr(playerid, "У Вашего транспорта отсутствует прицеп для продуктов");

	else if(!(1 <= buy_prod_count <= 10000))
		return SendErr(playerid, "Можно загрузить от 1 до 10000 шт. продуктов");

	else if(GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_PROD, R_AMOUNT) < buy_prod_count)
		return SendErr(playerid, "На складе исходных материалов нет такого количества продуктов");

	else if((buy_prod_count + GetPlayerJobLoadItems(playerid)) > 10000)
		return SendErr(playerid, "В фургон столько не поместится, максимум 10000 шт.");

	if(GetMoney(playerid) < (buy_prod_count * 24))
		return SendErr(playerid, "Недостаточно денег для покупки такого количества продуктов");

	GiveMoney(playerid, -(buy_prod_count * 24), "Покупка продуктов (разв. продуктов)");

	SetPlayerJobLoadItems(playerid, GetPlayerJobLoadItems(playerid) + buy_prod_count);

	SetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_PROD, R_AMOUNT, GetRepositoryData(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_PROD, R_AMOUNT) - buy_prod_count);
	UpdateRepository(REPOSITORY_TYPE_FACTORY, REPOSITORY_ACTION_FACTORY_PROD);

	new fmt_msg[64];

	format(fmt_msg, sizeof fmt_msg, "Вы купили %d продуктов на сумму %d руб.", buy_prod_count, buy_prod_count * 24);
	SendClientMessage(playerid, 0x66CC00FF, fmt_msg);

	format(fmt_msg, sizeof fmt_msg, "Текущее кол-во загруженных продуктов: %d из 10000", GetPlayerJobLoadItems(playerid));
	SendClientMessage(playerid, 0xFFFF00FF, fmt_msg);
	
	new VehicleID = GetVehicleTrailer(GetPlayerVehicleID(playerid));
	if(VehicleID >= TruckerVehicle[2] && VehicleID <= TruckerVehicle[5]) format(STRING_GLOBAL, sizeof(STRING_GLOBAL), "Доставка продуктов\n{FFFFFF}Загрузка %d / 10000 п", GetPlayerJobLoadItems(playerid));
	UpdateDynamic3DTextLabelText(TrailerInfo[VehicleID], COLOR_WHITE, STRING_GLOBAL);
	return 1;
}

stock IsATaxi(carid)
{
	return (carid >= TaxiVehicle[0] && carid <= TaxiVehicle[1]);
}

CMD:beginwork(playerid)
{
	new VehicleID = GetPlayerVehicleID(playerid);
 	if(p_info[playerid][pJob] != 1) return SendErr(playerid, "Вы не работаете водителем автобуса");
   	if(VehicleID >= LSBus[0] && VehicleID <= LSBus[1])
 	{
		if(GetPVarInt(playerid, "StartBusRoute") != -1) ShowPlayerDialogEx(playerid, 186, DIALOG_STYLE_MSGBOX, "{ebec86}>> Заверешение работы", "{FFFFFF}Вы действительно хотите завершить работу?", "Да", "Выйти");
		else
		{
		    ShowPlayerDialogEx
			(
			playerid, DIALOG_BUS_ROUTE_SELECTION, DIALOG_STYLE_LIST,
			"{ebec86}>> Выберите маршрут",
			g_bus_routes_list,
			"Выбрать", "Отмена"
			);
		}
	}
	else SendErr(playerid, "Вы не в рабочем транспорте");
	return 1;
}

forward NextBusRouteCP(playerid);
public NextBusRouteCP(playerid)
{
	if(p_info[playerid][pJob] == 1)
	{
		new route_step = GetPVarInt(playerid, "BusRouteCheckpoint");
		new route_id = GetPVarInt(playerid, "StartBusRoute");
		new next_cp = route_step + 1;

		if(g_bus_route[route_id][next_cp][BRS_POS_X] == 0.0)
		{
			next_cp = 0;
		}

		SetPlayerRaceCheckpoint
		(
			playerid,
			g_bus_route[route_id][route_step][BRS_STOP],
			g_bus_route[route_id][route_step][BRS_POS_X],
			g_bus_route[route_id][route_step][BRS_POS_Y],
			g_bus_route[route_id][route_step][BRS_POS_Z],
			g_bus_route[route_id][next_cp][BRS_POS_X],
			g_bus_route[route_id][next_cp][BRS_POS_Y],
			g_bus_route[route_id][next_cp][BRS_POS_Z],
			4.0
		);
		SetPVarInt(playerid, "BusRouteCheckpoint", GetPVarInt(playerid, "BusRouteCheckpoint") + 1);
	}
}

forward LoadKillTextDraw(playerid);
public LoadKillTextDraw(playerid)
{
    if(kill_welcome_td[playerid]) KillTimer(kill_welcome_td[playerid]);
    PlayerTextDrawDestroy(playerid, welcome_td[playerid]);
    return 1;
}

stock BusRoutesInit()
{
	new fmt_str[64];

	for(new idx; idx < sizeof g_bus_routes; idx ++)
	{
		format(fmt_str, sizeof fmt_str, "%d.  %s\n", idx + 1, g_bus_routes[idx][BR_NAME]);
		strcat(g_bus_routes_list, fmt_str);

		if(g_bus_routes[idx][BR_COLOR] > 0)
		{
			g_bus_routes[idx][BR_COLOR] = 0x66CC00FF;
		}
		else g_bus_routes[idx][BR_COLOR] = 0x3399FFFF;
	}
}

CMD:bind(playerid)
{
    binder_td_status(playerid, true);
    
	if(strcmp(player_binder[playerid][0],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 0 ], "Текст этого бинда установлен" ) ;
    if(strcmp(player_binder[playerid][1],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 1 ], "Текст этого бинда установлен" ) ;
    if(strcmp(player_binder[playerid][2],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 2 ], "Текст этого бинда установлен" ) ;
    if(strcmp(player_binder[playerid][3],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 3 ], "Текст этого бинда установлен" ) ;
    if(strcmp(player_binder[playerid][4],"None",false)) PlayerTextDrawSetString ( playerid, BinderPlayer [ playerid ] [ 4 ], "Текст этого бинда установлен" ) ;
	return 1;
}

CMD:wbook(playerid, params[])
{
	if(sscanf(params,"d",params[0])) return SendInf(playerid, "/wbook [id игрока]");
	if(!IsPlayerConnected(params[0])) return SendErr(playerid, "Такого игрока нет в игре");
	if(!IsPlayerStream(8.0, playerid, params[0])) return SendErr(playerid, "Игрок слишком далеко");

	if(GetPVarInt(playerid,"wbook_proposal")) DeletePVar(playerid,"wbook_proposal");
	if(playerid == params[0])
	{
		MeAction(playerid,"просматривает свою трудовую книжку");
		STRING_GLOBAL = "";
		format(STRING_GLOBAL, 512, "SELECT * FROM `employment_history` WHERE `name_player` = '%s' AND `data_un_invite` != 'No-ne'", GetName(playerid));
		mysql_tquery(dbHandle, STRING_GLOBAL, "callback_employment_history", "is", playerid, GetName(playerid));
		return 1;
	}

	format(STRING_GLOBAL, 128, "Вы предложили {ebec86}%s{FFFFFF} посмотреть Вашу трудовую книжку", GetName(params[0]));
	SendInf(playerid, STRING_GLOBAL);

	format(STRING_GLOBAL, 128, "%s хочет показать Вам свою трудовую книжку", GetName(playerid));
	SendClientMessage(params[0], 0x3399ffAA, STRING_GLOBAL);
 	SendInf(params [ 0 ], "Нажмите {f0e86b}Y{FFFFFF} (чтобы согласиться) или {FF6347}N{FFFFFF} (чтобы отказаться)");

	playerid_wbook = playerid;
	id_player_wbook = params[0];

	SetPVarInt(params[0],"wbook_proposal", true);
	return 1;
}

forward callback_employment_history(const id_player, const name_wbook[]);
public callback_employment_history(const id_player, const name_wbook[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		STRING_GLOBAL=""cWHITE"";
		strcat(STRING_GLOBAL,"В трудовой книге отсутсвуют записи. Первая запись появится после ухода из организации: \n\n");
		strcat(STRING_GLOBAL,"1. Если у вас был 3 ранг и выше\n");
		strcat(STRING_GLOBAL,"2. Вы были уволены из организации\n");
		strcat(STRING_GLOBAL,"3. Вы состояли в гос. организации\n");
		ShowPlayerDialogEx(id_player,D_NULL,DIALOG_STYLE_MSGBOX, "{ebec86}>> Трудовая книжка",STRING_GLOBAL,"Принять","");

		return 1;
	}

	STRING_GLOBAL = "{FFFF00}\tДата принятия\t\tУвольнение\t\tРанг\t\tОрганизация\t\tДолжность\n\n"cWHITE"";
	for(new row = 0; row < rows; row++)
	{
		if(strlen(STRING_GLOBAL) > 2000) break;
		new str_data[32];

		cache_get_field_content(row, "data_invite", str_data); format(STRING_GLOBAL,2400,"%s\t%s",STRING_GLOBAL,str_data);
		cache_get_field_content(row, "data_un_invite", str_data); format(STRING_GLOBAL,2400,"%s\t\t%s",STRING_GLOBAL,str_data);
		format(STRING_GLOBAL,2400,"%s\t%i",STRING_GLOBAL,cache_get_field_content_int(row, "rang"));
		cache_get_field_content(row, "organization", str_data); format(STRING_GLOBAL,2400,"%s\t\t%s",STRING_GLOBAL,str_data);
		cache_get_field_content(row, "organization_position", str_data); format(STRING_GLOBAL,2400,"%s\t\t%s",STRING_GLOBAL,str_data);

		strcat(STRING_GLOBAL,"\n");
	}

	ShowPlayerDialogEx(id_player,D_NULL,DIALOG_STYLE_MSGBOX, "{ebec86}>> Трудовая книжка",STRING_GLOBAL,"Принять","");
	return 1;
}

stock SetWBook(playerid, uninvite = false)
{
	new day, month, year, hour, minuite, second;
	getdate(year, month, day);
	gettime(hour, minuite, second);

	new data2[32];
	if(minuite < 10) format(data2, 32, "%02d.%02d.%d в %02d:0%d",day,month,year,hour,minuite);
	else format(data2, 32, "%02d.%02d.%d в %02d:%d",day,month,year,hour,minuite);

	if(uninvite)
	{
		STRING_GLOBAL = "";
		format(STRING_GLOBAL, 1000, "UPDATE `employment_history` SET `data_un_invite` = '%s' WHERE `name_player` = '%s' AND `rang` = '%i' AND `data_un_invite` = 'No-ne' LIMIT 1", data2, GetName(playerid), p_info[playerid][pRank]);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	else
	{
		STRING_GLOBAL = "";
		format(STRING_GLOBAL, 1000, "INSERT INTO `employment_history`(`name_player`, `rang`, `organization`, `organization_position`,`data_invite`) VALUES ('%s','%i','%s','%s','%s')",GetName(playerid), p_info[playerid][pRank], Fractions[p_info[playerid][pMember]][fractionName], GetRank(p_info[playerid][pMember], p_info[playerid][pRank]), data2);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}

	return 1;
}

stock SetPlayerAnimation(playerid, animid)
{
	if(0 <= animid <= sizeof anim_list-1)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			switch(animid+1)
			{
				case 1..4:
				{
				    SetPVarInt(playerid, "Animation", 1);
					TextDrawShowForPlayer(playerid, AnimDraw);
					
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1 + animid);
				}
				default:
				{
 					SetPVarInt(playerid, "Animation", 1);
					TextDrawShowForPlayer(playerid, AnimDraw);
					
					ApplyAnimation(playerid, GetAnimListData(animid, AL_LIB), GetAnimListData(animid, AL_NAME), GetAnimListData(animid, AL_DELTA), (GetAnimListData(animid, AL_LOOP) % 2), GetAnimListData(animid, AL_LOCK_X), GetAnimListData(animid, AL_LOCK_Y), GetAnimListData(animid, AL_FREEZE), GetAnimListData(animid, AL_TIME), 0);
				}
			}
		}
		return 1;
	}
	return 0;
}

stock AnimListInit()
{
	new fmt_str[64];
	for(new idx; idx < sizeof anim_list; idx ++)
	{
		format(fmt_str, sizeof fmt_str, "%d. %s\n", idx + 1, GetAnimListData(idx, AL_DESCRIPTION));
		strcat(anim_list_items, fmt_str);

		if(GetAnimListData(idx, AL_LOOP) > 2)
			anim_list[idx][AL_DESCRIPTION] = 2;
	}
	strcat(anim_list_items, "{ebec86}Информация");
}

CMD:dipinfo(playerid)
{
 	if( !IsAMafia ( playerid ) ) return SendErr(playerid, "Отказано в доступе");
	STRING_GLOBAL = "";
	new line_string [ 128 ];
	for ( new i = 1 ; i < MAX_FRACTIONS ; i ++ )
	{
	    if ( i != 7 && i != 8 && i != 15 && i != 16 ) continue ;
		if ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == 0 ) continue ;
		if ( i == p_info [ playerid ] [ pMember ] ) continue ;

		format ( line_string, sizeof ( line_string ), "%i - %s - %s\n", i, Fractions[i][fractionName], ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == status_war ) ? ( "{FF6347}Война{FFFFFF}" ) : ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == status_neutral ) ? ( "{fcfc00}Нейтралитет{FFFFFF}" ) : ( "{f0e86b}Союз{FFFFFF}" ) ) ;
		strcat ( STRING_GLOBAL, line_string ) ;
	}
	if(p_info[playerid][pLeader] > 0) ShowPlayerDialogEx(playerid, dDipMenu, DIALOG_STYLE_LIST, "{ebec86}>> Дипломатия", STRING_GLOBAL, "Изменить", "Выйти") ;
	else ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_LIST, "{ebec86}>> Дипломатия", STRING_GLOBAL, "Закрыть", "") ;
	return 1;
}

CMD:dip(playerid)
{
 	if( !IsAMafia ( playerid ) ) return SendErr ( playerid, "Отказано в доступе" ) ;
	if ( ! p_info [ playerid ] [ pLeader ] ) return SendErr ( playerid, "Отказано в доступе" ) ;

	new query_string [ 156 ] ;
	format ( query_string, sizeof ( query_string ), "SELECT * FROM `dip_invites` WHERE `to_f`='%d'", p_info [ playerid ] [ pMember ] ) ;
	mysql_tquery ( dbHandle, query_string, "dip_callback", "d", playerid ) ;

	return 1;
}

forward dip_callback ( playerid ) ;
public dip_callback ( playerid )
{
	new rows = cache_get_row_count() ;
	if ( ! rows ) return SendErr(playerid, "У Вас нет дипломатических запросов" ) ;
	new from_f,
		new_status,
		line_string [ 70 ],
		dialog_string [ 150 ] ;


	for ( new i = 0; i < rows; i++ )
	{
		from_f = cache_get_field_content_int ( i, "from_f", dbHandle ) ;
		new_status = cache_get_field_content_int ( i, "new_status", dbHandle ) ;
		format ( line_string, sizeof ( line_string ), "%s предлагает вам заключить %s\n", Fractions[from_f][fractionName], ( new_status == status_neutral ) ? ( "{fcfc00}нейтралитет{FFFFFF}" ) : ( "{f0e86b}союз{FFFFFF}" ) ) ;
		strcat ( dialog_string, line_string ) ;
		new pvar_string [ 12 ] ;
		format ( pvar_string, 12, "%d_from", i ) ;
		SetPVarInt ( playerid, pvar_string, from_f ) ;
		format ( pvar_string, 12, "%d_status", i ) ;
		SetPVarInt ( playerid, pvar_string, new_status ) ;
	}
	ShowPlayerDialogEx(playerid,dDipInviteList,DIALOG_STYLE_LIST,"{ebec86}>> Дипломатия", dialog_string, "Выбрать", "Закрыть" ) ;
	return 1 ;
}

stock SaveFracDiplomacy ( fraction )
{
	STRING_GLOBAL = "";
	format ( STRING_GLOBAL, 512, "UPDATE `fractions` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|0' WHERE `f_id` = '%d'",
	dip_status [ fraction ] [ 0 ], dip_status [ fraction ] [ 1 ], dip_status [ fraction ] [ 2 ], dip_status [ fraction ] [ 3 ], dip_status [ fraction ] [ 4 ],
	dip_status [ fraction ] [ 5 ], dip_status [ fraction ] [ 6 ], dip_status [ fraction ] [ 7 ], dip_status [ fraction ] [ 8 ], dip_status [ fraction ] [ 9 ],
	dip_status [ fraction ] [ 10 ], dip_status [ fraction ] [ 11 ], dip_status [ fraction ] [ 12 ], dip_status [ fraction ] [ 13 ], dip_status [ fraction ] [ 14 ],
	dip_status [ fraction ] [ 15 ], dip_status [ fraction ] [ 16 ], dip_status [ fraction ] [ 17 ],dip_status [ fraction ] [ 18 ], dip_status [ fraction ] [ 19 ],
	dip_status [ fraction ] [ 20 ], dip_status [ fraction ] [ 21 ], dip_status [ fraction ] [ 22 ], dip_status [ fraction ] [ 23 ], dip_status [ fraction ] [ 24 ],
	fraction ) ;
	mysql_tquery ( dbHandle, STRING_GLOBAL, "", "" ) ;
	return 1 ;
}

stock SendZahvatMessage(attack, defend, color, const string[])
{
	foreach(new A: Player)
	{
	    if(p_info[A][pMember] == attack || p_info[A][pMember] == defend)
	    {
			SendClientMessage(A, color, string);
		}
	}
}

cmd:u(playerid, params[])
{
	if(p_info[playerid][pMember] >= 7 && p_info[playerid][pMember] <= 11 || p_info[playerid][pMember] >= 13 && p_info[playerid][pMember] <= 17)
	{
		if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(isnull(params)) return SendInf(playerid, "/u [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[U] (%s) %s %s[%d]: %s", Fractions[p_info[playerid][pMember]][fractionName], GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[0]);
		SendUnionMessage(p_info[playerid][pMember], mesid);
		SendFMes(p_info[playerid][pMember], UNION_COLOR, mesid);

		SetPlayerChatBubble(playerid, "Cказал(а) что-то в чат альянса", COLOR_PURPLE, 10.0, 3000);

		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else if(GetPVarInt(playerid, "spy_member") >= 7 && GetPVarInt(playerid, "spy_member") <= 11 || GetPVarInt(playerid, "spy_member") >= 13 && GetPVarInt(playerid, "spy_member") <= 17)
	{
	    if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(isnull(params)) return SendInf(playerid, "/u [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[U] (%s) %s %s[%d]: %s", Fractions[GetPVarInt(playerid, "spy_member")][fractionName], GetRank(GetPVarInt(playerid, "spy_member"), 7), GetName(playerid), playerid, params[0]);
		SendUnionMessage(GetPVarInt(playerid, "spy_member"), mesid);
		SendFMes(GetPVarInt(playerid, "spy_member"), UNION_COLOR, mesid);

		SetPlayerChatBubble(playerid, "Cказал(а) что-то в чат альянса", COLOR_PURPLE, 10.0, 3000);

		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

cmd:un(playerid, params[])
{
	if(p_info[playerid][pMember] >= 7 && p_info[playerid][pMember] <= 11 || p_info[playerid][pMember] >= 13 && p_info[playerid][pMember] <= 17)
	{
		if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(isnull(params)) return SendInf(playerid, "/un [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[U] (( (%s) %s %s[%d]: %s ))", Fractions[p_info[playerid][pMember]][fractionName], GetRank(p_info[playerid][pMember],p_info[playerid][pRank]), GetName(playerid), playerid, params[0]);
		SendUnionMessage(p_info[playerid][pMember], mesid);
		SendFMes(p_info[playerid][pMember], UNION_COLOR, mesid);

		SetPlayerChatBubble(playerid, "Cказал(а) что-то в чат альянса", COLOR_PURPLE, 10.0, 3000);

		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else if(GetPVarInt(playerid, "spy_member") >= 7 && GetPVarInt(playerid, "spy_member") <= 11 || GetPVarInt(playerid, "spy_member") >= 13 && GetPVarInt(playerid, "spy_member") <= 17)
	{
	    if(p_info[playerid][pMuted] > 0) return SendErr(playerid, "У вас бан чата. (/time)" ) ;
		else if(isnull(params)) return SendInf(playerid, "/un [текст]");
		else if(TextReset[playerid] > gettime() && GetString(OldMessage[playerid], params[0])) return SendErr(playerid, "Вы слишком часто пытаетесь отправить сообщение");
		else if(IsIpFound(params[0]) || CheckString(params[0])) return PlayerGetsChatBan(playerid, params[0]);
		new mesid[128];
		format(mesid, sizeof(mesid), "[U] (( (%s) %s %s[%d]: %s ))", Fractions[GetPVarInt(playerid, "spy_member")][fractionName], GetRank(GetPVarInt(playerid, "spy_member"), 7), GetName(playerid), playerid, params[0]);
		SendUnionMessage(GetPVarInt(playerid, "spy_member"), mesid);
		SendFMes(GetPVarInt(playerid, "spy_member"), UNION_COLOR, mesid);

		SetPlayerChatBubble(playerid, "Cказал(а) что-то в чат альянса", COLOR_PURPLE, 10.0, 3000);

		SetString(OldMessage[playerid], params[0]);
		TextReset[playerid] = gettime()+3;
	}
	else SendErr(playerid, "Вам недоступна данная возможность");
	return 1;
}

stock SendUnionMessage(frac, string[])
{
    for(new i = 1; i < MAX_FRACTIONS; i++)
	{
	    if(dip_status [ frac ] [ i ] == status_alliance)
	    {
			SendFMes(i, UNION_COLOR, string);
		}
	}
}

stock CreatePirs()
{
    armyzagruz[0] = CreateDynamicPickup(3013, 23, -2777.4641,-11.3470,1.9300, -1);
    armyzagruz[1] = CreateDynamicPickup(3013, 23, -2771.3120,-11.1957,1.9300, -1);
    armyzagruz[2] = CreateDynamicPickup(3013, 23, -2766.6494,-6.8193,1.9300, -1);
    armyzagruz[3] = CreateDynamicPickup(3013, 23, -2756.1824,-6.5266,1.9300, -1);
    
    army_text[0] = CreateDynamic3DTextLabel("[ "cBLUE"Загрузка металла/патронов{FFFFFF} ]", -1, -2777.4641,-11.3470,1.9300+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
    army_text[1] = CreateDynamic3DTextLabel("[ "cBLUE"Загрузка металла/патронов{FFFFFF} ]", -1, -2771.3120,-11.1957,1.9300+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
    army_text[2] = CreateDynamic3DTextLabel("[ "cBLUE"Загрузка металла/патронов{FFFFFF} ]", -1, -2766.6494,-6.8193,1.9300+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
    army_text[3] = CreateDynamic3DTextLabel("[ "cBLUE"Загрузка металла/патронов{FFFFFF} ]", -1, -2756.1824,-6.5266,1.9300+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
    
    podlodka_icon = CreateDynamicMapIcon(-2758.1260, -61.5177, 1.9300, 9, 0);
    
    podlodka = CreateDynamicObject(1612, -2793.31, -56.06, 5.56,   0.00, 0.00, 0.00, -1, -1, -1, 300.0, 300.0);
    return 1;
}

stock DeletePirs()
{
	for(new i; i < 4; i++) DestroyDynamicPickup(armyzagruz[i]);
	for(new i; i < 4; i++) DestroyDynamic3DTextLabel(army_text[i]);
	DestroyDynamicMapIcon(podlodka_icon);
	DestroyDynamicObject(podlodka);
	return 1;
}

stock CreateCamel()
{
    narko_camel = CreateDynamicPickup(1279, 23, 1912.2225, 1550.4187, 15.2560, -1);
    narko_text = CreateDynamic3DTextLabel("[ "cBLUE"Загрузка наркотиков{FFFFFF} ]", -1, 1912.2225, 1550.4187, 15.2560+0.8, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID);
    narko_icon = CreateDynamicMapIcon(1912.2225, 1550.4187, 15.2560, 23, 0);
	return 1;
}

stock DeleteCamel()
{
    DestroyDynamicPickup(narko_camel);
	DestroyDynamic3DTextLabel(narko_text);
	DestroyDynamicMapIcon(narko_icon);
	
	SetTimer("CamelUletel", 60000*10, false);
	return 1;
}

forward CamelUletel();
public CamelUletel()
{
	DestroyDynamicObject(camel);
	return 0;
}

stock Bizz_Clear()
{
	new query[256];
	format(query, sizeof query, "UPDATE "T_BIZZ" SET owner = 'None' WHERE `lastvisit` <= '%i'", gettime());
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

stock Car_Clear()
{
	new query[256];
	format(query, sizeof query, "UPDATE ownable_cars SET number = -1 WHERE `lastvisit` <= '%i'", gettime());
	mysql_tquery(dbHandle, query, "", "");
	return 1;
}

CMD:tow(playerid, params[])
{
	if(!IsACop(playerid)) return SendErr(playerid, "Вы не сотрудник правоохранительных органов");
    if(GetPlayerState(playerid) != 2) return SendErr(playerid, "Вы не за рулём");
    new carid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(carid) != 525) return SendErr(playerid, "Вы не за рулём эвакуатора");
    if(IsTrailerAttachedToVehicle(carid)) DetachTrailerFromVehicle(carid);
	else
	{
     	/*for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
		{
			if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
			{
				SendErr(playerid, "Авто припарковано не в Зелёной Зоне");
				return 1;
			}
		}*/
		for(new i; i < sizeof(AreaInfo[arGreenZone]); i++)
		{
			if(IsPlayerInDynamicArea(playerid, AreaInfo[arGreenZone][i]))
			{
		     	new Float:X, Float:Y, Float:Z;
				new bool:check_vehicle=false;
				foreach(new j:Player)
				{
					if(p_info[j][pOwnableCar])
					{
						GetVehiclePos(p_info[j][pOwnableCar], X, Y, Z);
						if(PlayerToPoint(4.0, playerid, X, Y, Z))
						{
							AttachTrailerToVehicle(p_info[j][pOwnableCar], carid);
							check_vehicle = true;
							break;
						}
					}
				}
				if(!check_vehicle) return SendErr(playerid, "Буксировать можно только личные т/с игроков");
			}
		}
    }
 	return 1;
}

stock GetAccFreeSlot(playerid)
{
	for(new i = 0; i < 5; i++)
	{
		if(acc_player[playerid][acc_object_id][i] == -1) return i;
	}
	return -1;
}

stock InitAttachedAccesories(playerid, accesories_id)
{
	new Float:fx, Float:fy, Float:fz, Float:frx, Float:fry, Float:frz;
	count_acc_show[playerid] = 0;

	GetOffsetAttachedAccesories(id_acc[accesories_id][count_acc_show[playerid]],fx,fy,fz,frx,fry,frz);
	if ( accesories_id == 9 ) SetPlayerAttachedObject(playerid,0,id_acc[accesories_id][count_acc_show[playerid]],6,fx,fy,fz,frx,fry,frz);
	else if ( accesories_id == 10 ) SetPlayerAttachedObject(playerid,0,id_acc[accesories_id][count_acc_show[playerid]],1,fx,fy,fz,frx,fry,frz);
	else SetPlayerAttachedObject(playerid,0,id_acc[accesories_id][count_acc_show[playerid]],2,fx,fy,fz,frx,fry,frz);

	return 1;
}

stock GetOffsetAttachedAccesories(modelid, &Float:fx, &Float:fy, &Float:fz, &Float:frx, &Float:fry, &Float:frz)
{
	switch(modelid)
	{
		case 3026:
		{
			fx = -0.15; fy = -0.10; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 371:
		{
			fx = 0.0; fy = -0.10; fz = 0.0; frx = 0.0; fry = 90.0; frz = 0.0;
		}
		case 19559:
		{
			fx = 0.0; fy = 0.0; fz = 0.0; frx = 0.0; fry = 90.0; frz = 0.0;
		}
		case 19039,19040,19041,19042,19043,19044,19045,19046,19047,19048,19049,19050,19051,19052,19053:
		{
			fx = 0.00; fy = -0.02; fz = 0.03; frx = 0.0; fry = 90.0; frz = 180.0;
		}
		case 19553:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = -20.0; frz = -20.0;
		}
		case 18947,18948,19519:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19487:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 0.0;
		}
		case 18962,19095,19096,19097,19098,19099,19100,19528:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 180.0; frz = 180.0;
		}
		case 18971:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920:
		{
			fx = 0.05; fy = 0.02; fz = 0.00; frx = 90.0; fry = 180.0; frz = 90.0;
		}
		case 19006,19009,19010,19011,19013,19014,19015,19016,19017,19018,19020,19021,19022,19023,19024,19026,19027,19029,19030,19032,19033,19035:
		{
			fx = 0.1; fy = 0.04; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18891,18892,18893,18894,18895,18896,18897,18898,18899:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 90.0; fry = 180.0; frz = 90.0;
		}
		case 18922,18923,18924,18925:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19102,19103,19104,19105,19106,19107,19108,19109,19110:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 18955,18956,18957,18958,18959:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18939,18940,18941,18942,18943,18927,18928,18929,18930,18931,18933,18934,18935:
		{
			fx = 0.18; fy = 0.01; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19111,19112,19113,19117,19118,19119:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 18967:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 19554:
		{
			fx = 0.18; fy = -0.01; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19069:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18953,18954:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 18970,18969,18968,18973,18972:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 18950,18949,18951,18946,18932,18926,18945:
		{
			fx = 0.15; fy = 0.03; fz = 0.0; frx = 0.0; fry = 0.0; frz = 0.0;
		}
		case 19140,19139,19138,19133,19034,19031,19028,19025,19019,19012,19008,19007:
		{
			fx = 0.1; fy = 0.04; fz = 0.0; frx = 0.0; fry = 90.0; frz = 90.0;
		}
		case 19421,19422,19423,19424:
		{
			fx = 0.06; fy = 0.02; fz = 0.0; frx = 90.0; fry = 180.0; frz = 90.0;
		}
	}
	return 1;
}

stock UpdateAccesories(playerid)
{
	new mysql_update_acc_string [ 600 ] ;
	format ( mysql_update_acc_string , 600 , "UPDATE `accounts` SET `acc_player_0` = '%d,%.4f,%.4f,%.4f',`acc_player_1` = '%d,%.4f,%.4f,%.4f',`acc_player_2` = '%d,%.4f,%.4f,%.4f',`acc_player_3` = '%d,%.4f,%.4f,%.4f',`acc_player_4` = '%d,%.4f,%.4f,%.4f' WHERE `name` = '%s' LIMIT 1",
	acc_player[playerid][acc_object_id][0],acc_player[playerid][acc_object_x][0],acc_player[playerid][acc_object_y][0],acc_player[playerid][acc_object_z][0],
	acc_player[playerid][acc_object_id][1],acc_player[playerid][acc_object_x][1],acc_player[playerid][acc_object_y][1],acc_player[playerid][acc_object_z][1],
	acc_player[playerid][acc_object_id][2],acc_player[playerid][acc_object_x][2],acc_player[playerid][acc_object_y][2],acc_player[playerid][acc_object_z][2],
	acc_player[playerid][acc_object_id][3],acc_player[playerid][acc_object_x][3],acc_player[playerid][acc_object_y][3],acc_player[playerid][acc_object_z][3],
	acc_player[playerid][acc_object_id][4],acc_player[playerid][acc_object_x][4],acc_player[playerid][acc_object_y][4],acc_player[playerid][acc_object_z][4], GetName(playerid));
	mysql_tquery(dbHandle, mysql_update_acc_string, "", "");
	return 1;
}

CMD:vzad(playerid)
{
    new Float:x,Float:y,Float:z,Float:a;
	if(idaofcar[playerid] != 0)
	{
	    idaofcar[playerid] = 0;
	}
 	for(new c = 1; c < MAX_VEHICLES; c++)
	{
	    if(!IsValidVehicle(c))continue;
	    if(!IsACar(c)) continue;
		GetVehicleShiftPos(c,1,x,y,z,2.0);
		if(IsPlayerInRangeOfPoint(playerid,2,x,y,z))
		{
		    foreach(new i: Player)
		    {
				if(c == p_info[i][pOwnableCar])
				{
				    if((TrunkInfo[c][tOpen] && c != p_info[playerid][pOwnableCar])) return SendErr(playerid, "Багажник закрыт");
				}
		    }
		    if(VehInfo[VehInfo[c][vVehicle]][vFraction] != 0)
		    {
		        if(TrunkInfo[c][tOpen] && VehInfo[VehInfo[c][vVehicle]][vFraction] != p_info[playerid][pMember]) return SendErr(playerid, "Багажник закрыт");
		    }
		    if(VehInfo[VehInfo[c][vVehicle]][vFamily] != 0)
		    {
		        if(TrunkInfo[c][tOpen] && VehInfo[VehInfo[c][vVehicle]][vFraction] != p_info[playerid][pFamily]) return SendErr(playerid, "Багажник закрыт");
		    }
			GetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, boot, objective);
			if ( boot != VEHICLE_PARAMS_ON )
			{
			    PlayerTextDrawHide(playerid, HungerProgress[playerid]);
				TextDrawHideForPlayer(playerid, HungerBackground[0]);
				TextDrawHideForPlayer(playerid, HungerBackground[1]);

				new Float:pos_y,Float:pos_z;
				GetPlayerPos(playerid,pos_y,pos_y,pos_z);
				GetVehicleZAngle(c, a);
				AnimationTrunk(playerid,Float:x,Float:y,Float:z,Float:a,Float:pos_y,Float:pos_z);
				new f = (c == p_info[playerid][pOwnableCar]) ? (22) : (21);
				for(new tr = 0; tr < f; tr++) TextDrawShowForPlayer(playerid,trunk_ball[tr]);
				SelectTextDraw(playerid, 0x66CC00FF);
				UpdateTDOpenCloseTrunk(playerid, c);
				SetVehicleParamsEx(c, engine, lights, alarm, doors, bonnet, VEHICLE_PARAMS_ON, objective);
				if ( VehInfo [ c ] [ vVehicle ] ) idaofcar[playerid] = VehInfo[c][vVehicle];
				else idaofcar [ playerid ] = c ;
			}
			break;
		}
	}
	return 1;
}

stock SaveTrunk(vehicleid)
{
	foreach(new i: Player)
	{
	    if(vehicleid == p_info[i][pOwnableCar])
	    {
		    STRING_GLOBAL[0] = EOS;
			format ( STRING_GLOBAL , 600 , "UPDATE ownable_cars SET `TrunkGuns` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d', `pTrunkMoney` = %d, `pTrunkDrugs` = %d, `pTrunkMats` = %d, `pTrunkArmours` = %d, `pTrunkKanistra` = %d, `pTrunkDee` = %d WHERE id = %d LIMIT 1",
			TrunkInfo[vehicleid][tGun][0], TrunkInfo[vehicleid][tAmmo][0], TrunkInfo[vehicleid][tGun][1], TrunkInfo[vehicleid][tAmmo][1],
			TrunkInfo[vehicleid][tGun][2], TrunkInfo[vehicleid][tAmmo][2], TrunkInfo[vehicleid][tGun][3], TrunkInfo[vehicleid][tAmmo][3],
			TrunkInfo[vehicleid][tGun][4], TrunkInfo[vehicleid][tAmmo][4], TrunkInfo[vehicleid][tGun][5], TrunkInfo[vehicleid][tAmmo][5],
			TrunkInfo[vehicleid][tGun][6], TrunkInfo[vehicleid][tAmmo][6], TrunkInfo[vehicleid][tGun][7], TrunkInfo[vehicleid][tAmmo][7],
			TrunkInfo[vehicleid][tGun][8], TrunkInfo[vehicleid][tAmmo][8], TrunkInfo[vehicleid][tMoney], TrunkInfo[vehicleid][tDrugs], TrunkInfo[vehicleid][tMats], TrunkInfo[vehicleid][tArmours], TrunkInfo[vehicleid][tKanistra], TrunkInfo[vehicleid][tDee],
		 	ownable_car[i][v_sql]);
			mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
		}
	}
	if(VehInfo[vehicleid][vFraction] != 0 || VehInfo[vehicleid][vFamily] != 0)
    {
	    STRING_GLOBAL[0] = EOS;
		format ( STRING_GLOBAL , 600 , "UPDATE "T_VEHICLE" SET `TrunkGuns` = '%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d', `pTrunkMoney` = %d, `pTrunkDrugs` = %d, `pTrunkMats` = %d, `pTrunkArmours` = %d, `pTrunkKanistra` = %d, `pTrunkDee` = %d WHERE id = %d LIMIT 1",
		TrunkInfo[vehicleid][tGun][0], TrunkInfo[vehicleid][tAmmo][0], TrunkInfo[vehicleid][tGun][1], TrunkInfo[vehicleid][tAmmo][1],
		TrunkInfo[vehicleid][tGun][2], TrunkInfo[vehicleid][tAmmo][2], TrunkInfo[vehicleid][tGun][3], TrunkInfo[vehicleid][tAmmo][3],
		TrunkInfo[vehicleid][tGun][4], TrunkInfo[vehicleid][tAmmo][4], TrunkInfo[vehicleid][tGun][5], TrunkInfo[vehicleid][tAmmo][5],
		TrunkInfo[vehicleid][tGun][6], TrunkInfo[vehicleid][tAmmo][6], TrunkInfo[vehicleid][tGun][7], TrunkInfo[vehicleid][tAmmo][7],
		TrunkInfo[vehicleid][tGun][8], TrunkInfo[vehicleid][tAmmo][8], TrunkInfo[vehicleid][tMoney], TrunkInfo[vehicleid][tDrugs], TrunkInfo[vehicleid][tMats], TrunkInfo[vehicleid][tArmours], TrunkInfo[vehicleid][tKanistra], TrunkInfo[vehicleid][tDee],
	 	vehicleid);
		mysql_tquery(dbHandle, STRING_GLOBAL, "", "");
	}
	return 1;
}

stock GetStoreGunSlot(gunid)
{
	switch(gunid)
	{
		case 34: return 0;
		case 33: return 1;
		case 31: return 2;
		case 30: return 3;
		case 29: return 4;
		case 25: return 5;
		case 24: return 6;
		case 23: return 7;
		case 5:  return 8;
	}
	return -1;
}

stock GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance)
{
	new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style)
	{
	case 0:
		{
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
	case 1:
		{
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	case 2:
		{
			a += 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	case 3:
		{
			a -= 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	default: return 0;
	}
	return 1;
}

GetVehicleState(vehicleid)
{
	return VehicleState[vehicleid];
}

stock IsACar(carid)
{
	return (GetVehicleState(carid) == VEHICLE_STATE_CAR);
}

forward SetCameraBehindPlayerDelay(playerid);
public SetCameraBehindPlayerDelay(playerid)
{
	SetCameraBehindPlayer(playerid);
}

/*forward GetPlayerAckSent(playerid);
public GetPlayerAckSent(playerid)
{
    new stringstats[50];
    GetPlayerNetworkStats(playerid, stats, sizeof(stats));
    new len = strfind(stats, "Acks sent: ");
    new packetloss = -1;
    if(len != -1)
	{
        strmid(stringstats, stats, len, len+11+15+10);
        new len2 = strfind(stringstats, "Acks in send");
        if(len2 != -1)
		{
	        strdel(stringstats,len2-1, sizeof(stringstats)-1);
	        len = strfind(stringstats, "Acks sent: ");
	        strdel(stringstats,0, len+11);
	        packetloss = strval(stringstats);
        }
    }
    return packetloss;
}

forward GetPlayerBytesReceived(playerid);
public GetPlayerBytesReceived(playerid)
{
    new stringstats[41];
    GetPlayerNetworkStats(playerid, stats, sizeof(stats));
    new len = strfind(stats, "Bytes received: ");
    new packetloss = -1;
    if(len != -1)
	{
        strmid(stringstats, stats, len, len+16+15+10);
        new len2 = strfind(stringstats, "Acks received: ");
        if(len2 != -1)
		{
	        strdel(stringstats,len2-1, sizeof(stringstats)-1);
	        len = strfind(stringstats, "Bytes received: ");
	        strdel(stringstats,0, len+16);
		    packetloss = strval(stringstats);
        }
    }
    return packetloss;
}*/

forward AnimationWalk(playerid);
public AnimationWalk(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if(p_info[playerid][pSetWalk] != 0)
	{
		if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
			KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
			ApplyAnimation(playerid,"PED",Anims[p_info[playerid][pSetWalk] - 1],4.1,1,1,1,1,1);
			SetPVarInt(playerid,"playerWalkTimer",_:SetTimerEx("AnimationWalk",200,0,"d",playerid));
		}
		else
		{
			ApplyAnimation(playerid,"PED",Anims[p_info[playerid][pSetWalk] - 1],4.0,0,0,0,0,1);
			KillTimer(GetPVarInt(playerid,"playerWalkTimer"));
		}
	}
	return 1;
}

stock CreateShotTD(&Text:txdw1)
{
    txdw1 = TextDrawCreate(318.000000, 173.000000, "-50hp");
	TextDrawAlignment(txdw1, 2);
	TextDrawBackgroundColor(txdw1, 255);
	TextDrawFont(txdw1, 1);
	TextDrawLetterSize(txdw1, 0.340000, 1.200000);
	TextDrawColor(txdw1, -1);
	TextDrawSetOutline(txdw1, 0);
	TextDrawSetProportional(txdw1, 1);
	TextDrawSetShadow(txdw1, 1);
	TextDrawSetSelectable(txdw1, 0);
	return 1;
}

forward onDamage(playerid);
public onDamage(playerid)
{
	TextDrawHideForPlayer(playerid, DamageTD[playerid]);
	TextDrawDestroy(DamageTD[playerid]);
	KillTimer(Damage[playerid]);
	Damage[playerid] = 0;
	return 1;
}

CMD:tipster(playerid, params[])
{
	if(p_info[playerid][pMember] != TEAM_FBI) return SendErr(playerid, "Доступно только ФСБ");
	if(!GetPVarInt(playerid,"tipster")) return SendErr(playerid, "У вас нету жучка. Возьмите его на базе организации");
	new param[40];
	if(sscanf(params, "s[32]S()[64]", param, params))
	{
		SendInf(playerid, "/tipster [действие]");
		SendInf(playerid, "SET - Прикрепить жучок к игроку");
		SendInf(playerid, "REMOVE - Деактивировать жучок");
		SendInf(playerid, "LISTEN - Начать прослушивание чата фракции");
		return 1;
	}
	else if(!strcmp(param, "set",true))
	{
		new giveplayerid;
		if(sscanf(params, "i", giveplayerid)) return SendErr(playerid, "/tipster set [ид игрока]");
		if(!IsPlayerConnected(giveplayerid)) return SendErr(playerid, "Данного игрока нету в игре");
		if(!p_info[giveplayerid][pMember]) return SendErr(playerid, "Игрок не состоит в организации");
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(giveplayerid,X,Y,Z);
		if(!PlayerToPoint(10.0,playerid,X,Y,Z)) return SendErr(playerid, "Игрок не рядом с вами");
		SetPVarInt(playerid,"tipster_set", giveplayerid + 1);
		format(STRING_GLOBAL, 200, "Вы поставили жучок на {f0e86b}%s{FFFFFF}. (/tipster listen)", GetName(giveplayerid));
		SendInf(playerid, STRING_GLOBAL);
	}
	else if(!strcmp(param, "listen",true))
	{
		if(!GetPVarInt(playerid,"tipster_set")) return SendErr(playerid, "Сначала поставьте на игрока жучок. (/tipster set)");

		new giveplayerid = GetPVarInt(playerid,"tipster_set")-1;

		format(STRING_GLOBAL, 128, "Вы начали прослушку за игроком {f0e86b}%s", GetName(giveplayerid));
		SendInf(playerid, STRING_GLOBAL);

		SetPVarInt(playerid,"tipster_listen", p_info[giveplayerid][pMember]);
		DeletePVar(playerid,"tipster_set");
	}
	else if(!strcmp(param, "remove",true))
	{
		if(GetPVarInt(playerid,"tipster_set"))		DeletePVar(playerid,"tipster_set");
		if(GetPVarInt(playerid,"tipster_listen"))	DeletePVar(playerid,"tipster_listen");
		if(GetPVarInt(playerid,"tipster"))			DeletePVar(playerid,"tipster");
		SendErr(playerid, "Вы деактивировали жучок");
	}
	return 1;
}

SendSpyMessage(fraca, color, mes[])
{
	foreach(new i: Player)
	{
		if(GetPVarInt(i,"tipster_listen") == fraca && GetPVarInt(i,"tipster_listen") > 0)
		{
			format(STRING_GLOBAL, 144, "[ПРОСЛУШКА]: %s", mes);
			SCM(i, color, STRING_GLOBAL);
		}
	}
	return 1;
}

stock BotReport(playerid)
{
	SendClientMessage(playerid, COLOR_RED, "* Администрация сервера ничего не выдает!");
	SendClientMessage(playerid, COLOR_RED, "* Не нужно спрашивать: когда обзвонят. Или: дайте лидерку/админку");
	SendClientMessage(playerid, COLOR_RED, "* Есть соотвествующие темы в группе, где вы сможете оставить заявку. ("SERVER_GROUP")");
	return 1;
}

stock CheckReport(string[])
{
	static const RepBot[][] = {"дайте","можно мне","выдайте","админку","админ права","лидерку","кредиты"};
	for(new i = 0; i < sizeof(RepBot); i++) if(strfind(string, RepBot[i], true) != -1) return 1;
	return 0;
}

stock ShowPlayerDrivingTutorial(playerid)
{
	ShowPlayerDialogEx
	(
		playerid, DIALOG_DRIVING_TUTORIAL_START, DIALOG_STYLE_MSGBOX,
		"{ebec86}>> Введение",
		"{FFFFFF}Это пособие поможет вам хорошо подготовиться\n"\
		"к экзамену по вождению\n\n"\
		"{CC9900}Для того, чтобы начать обучение нажмите \"Далее\"",
		"Далее", "Отмена"
	);
	return 1;
}

stock ShowDrivingTutorialSection(playerid, step)
{
	if(0 <= step <= sizeof driving_tutorial-1)
	{
		ShowPlayerDialogEx
		(
			playerid, DIALOG_DRIVING_TUTORIAL, DIALOG_STYLE_MSGBOX,
			driving_tutorial[step][DT_TITLE],
			driving_tutorial[step][DT_INFO],
			"Далее", "Назад"
		);
		SetPVarInt(playerid, "driving_tutorial_step", step);
	}
}

stock ShowPlayerDrivingExam(playerid, step)
{
	if(0 <= step <= sizeof driving_exam - 1)
	{
		ShowPlayerDialogEx
		(
			playerid, DIALOG_DRIVING_EXAM, DIALOG_STYLE_LIST,
			driving_exam[step][DE_TITLE],
			driving_exam[step][DE_LIST_ITEMS],
			"Ответить", ""
		);
		SetPlayerDrivingExamInfo(playerid, DE_EXAM_STEP, step);
	}
	else if(step >= sizeof driving_exam)
	{
		new points = GetPlayerDrivingExamInfo(playerid, DE_POINTS);
		SetPlayerDrivingExamInfo(playerid, DE_EXAM_STEP, 0);
		SetPlayerDrivingExamInfo(playerid, DE_ROUTE_STEP, 0);

		if(points >= 9) SetPVarInt(playerid, "DrivingTest", 1);

		new fmt_str[256];
		format(fmt_str, sizeof fmt_str, "{FFFFFF}Количество правильных ответов: {f0e86b}%d\n\n", points);

		if(points == 9)
		{
			strcat
			(
				fmt_str,
				"{6699FF}Поздравляем!\n"\
				"Вы набрали минимальное количество баллов, чтобы приступить ко второй части экзамена!"
			);
		}
		else if(points >= 10)
		{
			static const
				medal_name[3][12] = {"бронзовую", "серебрянную", "золотую"};

			format(fmt_str, sizeof fmt_str, "%s{6699FF}Поздравляем!\nВы получаете %s медаль за теоретическую часть экзамена!", fmt_str, medal_name[points - 10]);
		}
		else
		{
		    DeletePVar(playerid, "DrivingTest");
			ClearPlayerDrivingExamInfo(playerid);
			strcat
			(
				fmt_str,
				"{FF6600}К сожалению вы не набрали необходимого количества баллов\n"\
				"В следующий раз внимательно прочитайте обучающий раздел\n"\
				"Ждем вас на пересдаче!"
			);
		}

		ShowPlayerDialogEx
		(
			playerid, DIALOG_DRIVING_EXAM_RESULT, DIALOG_STYLE_MSGBOX,
			"{ebec86}>> Результаты теоретической части",
			fmt_str,
			"Ок", ""
		);
	}
	return 1;
}

stock NextDrivingExamRouteCP(playerid)
{
	new step = GetPlayerDrivingExamInfo(playerid, DE_ROUTE_STEP);

	SetPlayerRaceCheckpoint
	(
		playerid,
		0,
		driving_exam_route[step][0],
		driving_exam_route[step][1],
		driving_exam_route[step][2],
		driving_exam_route[step + 1][0],
		driving_exam_route[step + 1][1],
		driving_exam_route[step + 1][2],
		4.0
	);
	SetPlayerDrivingExamInfo(playerid, DE_ROUTE_STEP, step + 1);
}

stock DrivingSchoolInit()
{
	new fmt_str[64];
	for(new idx; idx < sizeof driving_tutorial; idx ++)
	{
		format(fmt_str, sizeof fmt_str, "{ebec86}>> Раздел %d: ", idx + 1);
		strins(driving_tutorial[idx][DT_TITLE], fmt_str, 0, 64);
	}

	for(new idx; idx < sizeof driving_exam; idx ++)
	{
		strins(driving_exam[idx][DE_TITLE], "{ebec86}>> ", 0, 64);
	}
}

forward ShowOrgAllPlayers2(playerid);
public ShowOrgAllPlayers2(playerid)
{
	new rows = cache_num_rows();

	new p_name[24];
	new lvl[24], rang[32];

	STRING_GLOBAL[0] = EOS;
	strcat(STRING_GLOBAL, "{FFFF00}Имя\t\tАдминистратор\tПричина{FFFFFF}\n\n");

	new idx, j = rows;
	if(j > 45)
		j = 45;

	for(idx = 0; idx < j; idx ++)
	{
		cache_get_field_content(idx, "name", lvl, dbHandle, 24);
		cache_get_field_content(idx, "whobanned", p_name, dbHandle, 24);
		cache_get_field_content(idx, "reason", rang, dbHandle, 32);

		format(STRING_GLOBAL, 128, "%s%s\t%s\t\t%s\n", STRING_GLOBAL, lvl, p_name, rang);
	}
	format(STRING_GLOBAL, 128, "%s\nПоказаны {f0e86b}%d/%d{FFFFFF} игроков", STRING_GLOBAL, idx, rows);
	ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Список забаненных игроков", STRING_GLOBAL, "Закрыть", "");
	return 1;
}

forward RespawnTrailer(vehicleid);
public RespawnTrailer(vehicleid)
{
	AC_SetVehicleToRespawn(vehicleid);
	return 1;
}

CMD:prodlist(playerid, params[])
{
	if(p_info[playerid][pJob] != JOB_TRUCKER)
		return SendErr(playerid, "Вы должны работать дальнобойщиком");

	new vehicleid = GetPlayerVehicleID(playerid);

	if(vehicleid == -1)
		return SendErr(playerid, "Вы должны находиться в рабочем транспорте");

	if(vehicleid >= TruckerVehicle[0] && vehicleid <= TruckerVehicle[1])
	{
		STRING_GLOBAL = "";
		new fmt_str[128];
		new count;
		new v_id;

		for(new i = TOTALBIZZ; i > 0; i --)
		{
			if(BizzInfo[i][bType] == 3) continue;
			if(BizzInfo[i][bProdJob] == 0) continue;

			format ( fmt_str, 32, "vline_biz_%d", v_id ) ;
			SetPVarInt ( playerid, fmt_str, i ) ;

			format(fmt_str, sizeof fmt_str, "Бизнес №%d:\t%d прод. по %d руб.\t|Итого: %d руб.\n",
			i, BizzInfo[i][bProdJob], floatround(3*WorkSalary[14]*(BizzInfo[i][bTill]/10)), BizzInfo[i][bProdJob]*floatround(3*WorkSalary[14]*(BizzInfo[i][bTill]/10)));

			strcat(STRING_GLOBAL, fmt_str);
			count ++;
		}
		if(!count) return SendErr(playerid, "Сейчас нет ни одного заказа");

		ShowPlayerDialogEx(playerid, DIALOG_BIZ_ORDERS, DIALOG_STYLE_LIST, "{ebec86}>> Заказы продуктов от бизнесов", STRING_GLOBAL, "Выполнить", "Закрыть");
		return 1;
	}
	else return SendErr(playerid, "Вы должны находиться в транспорте для доставки продуктов");
}

CMD:fuellist(playerid, params[])
{
	if(p_info[playerid][pJob] != JOB_TRUCKER)
		return SendErr(playerid, "Вы должны работать дальнобойщиком");

	new vehicleid = GetPlayerVehicleID(playerid);

	if(vehicleid == -1)
		return SendErr(playerid, "Вы должны находиться в рабочем транспорте");

	if(vehicleid >= TruckerVehicle[0] && vehicleid <= TruckerVehicle[1])
	{
		STRING_GLOBAL = "";
		new fmt_str[128];
		new count;
		new v_id;

		for(new i = TOTALBIZZ; i > 0; i --)
		{
			if(BizzInfo[i][bType] != 3) continue;
			if(BizzInfo[i][bProdJob] == 0) continue;

			format ( fmt_str, 32, "vline_biz_%d", v_id ) ;
			SetPVarInt ( playerid, fmt_str, i ) ;

			format(fmt_str, sizeof fmt_str, "АЗС №%d:\t%d л. по %d руб.\t|Итого: %d руб.\n",
			i, BizzInfo[i][bProdJob], floatround(3*WorkSalary[14]*(BizzInfo[i][bTill]/10)), BizzInfo[i][bProdJob]*floatround(3*WorkSalary[14]*(BizzInfo[i][bTill]/10)));

			strcat(STRING_GLOBAL, fmt_str);
			count ++;
		}
		if(!count) return SendErr(playerid, "Сейчас нет ни одного заказа");

		ShowPlayerDialogEx(playerid, DIALOG_FS_ORDERS, DIALOG_STYLE_LIST, "{ebec86}>> Заказы продуктов от АЗС", STRING_GLOBAL, "Выполнить", "Закрыть");
		return 1;
	}
    else return SendErr(playerid, "Вы должны находиться в транспорте для доставки топлива");
}

CMD:recorder(playerid, params[])
{
	if(!GetPVarInt(playerid, "boomBox")) return SendErr(playerid, "У Вас нет магнитофона, купите его в 24/7");
	if(GetPVarInt(playerid, "PlacedBB")) return SendErr(playerid, "Вы уже установили магнитофон");
	new Float:BBCoord[4];
	GetPlayerPos(playerid, BBCoord[0], BBCoord[1], BBCoord[2]);
	GetPlayerFacingAngle(playerid, BBCoord[3]);
	SetPVarFloat(playerid, "BBX", BBCoord[0]);
	SetPVarFloat(playerid, "BBY", BBCoord[1]);
	SetPVarFloat(playerid, "BBZ", BBCoord[2]);
	BBCoord[0] += (2 * floatsin(-BBCoord[3], degrees));
	BBCoord[1] += (2 * floatcos(-BBCoord[3], degrees));
	BBCoord[2] -= 1.0;
	foreach(new i: Player)
	{
		if(!GetPVarType(i, "PlacedBB") || !IsPlayerInRangeOfPoint(playerid, 30.0, GetPVarFloat(i, "BBX"), GetPVarFloat(i, "BBY"), GetPVarFloat(i, "BBZ"))) continue;
		return SendInf(playerid, "Магнитофон установлен на землю");
	}
	MeAction(playerid, "установил магнитофон");
	SetPVarInt(playerid, "PlacedBB", CreateDynamicObject(19320, BBCoord[0], BBCoord[1], BBCoord[2], 0.0, 0.0, 0.0, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	format(STRING_GLOBAL, 128, "Установил: %s (%i)\n/setrecorder - Поставить песню\n/drecorder - Убрать", GetName(playerid), playerid);
	SetPVarInt(playerid, "BBLabel", _:CreateDynamic3DTextLabel(STRING_GLOBAL, -1, BBCoord[0], BBCoord[1], BBCoord[2]+0.6, 8, .worldid = GetPlayerVirtualWorld(playerid), .interiorid = GetPlayerInterior(playerid)));
	SetPVarInt(playerid, "BBArea", CreateDynamicSphere(BBCoord[0], BBCoord[1], BBCoord[2], 15.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid)));
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
	Itter_AddInternal(_:_Y_ITER_C0:boxPlayer@YSII_Cg,_:_Y_ITER_C0:boxPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(boxPlayer));
	return 1;
}

CMD:setrecorder(playerid, params[])
{
	if(!GetPVarType(playerid, "PlacedBB")) return SendErr(playerid, "Магнитофон не установлен");
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "BBX"), GetPVarFloat(playerid, "BBY"), GetPVarFloat(playerid, "BBZ"))) return SendErr(playerid, "Вы не возле магнитофона");
	ShowPlayerDialogEx(playerid, 9345, DIALOG_STYLE_LIST, "{ebec86}>> Выберите радиостанцию", "1. Радио Шансон\n2. Наше Радио\n3. Радио Рекорд\n4. Зайцев.FM (Pop)\n5. Зайцев.FM (RnB)", "Выбор", "Выход");
	return 1;
}

CMD:drecorder(playerid, params[])
{
	if(!GetPVarInt(playerid, "PlacedBB")) return SendErr(playerid, "Вы не ставили магнитофон");
	foreach(new i: Player)
	{
		if(IsPlayerInDynamicArea(i, GetPVarInt(playerid, "BBArea"))) StopStream(i);
	}
	Itter_RemoveInternal(_:_Y_ITER_C0:boxPlayer@YSII_Cg,_:_Y_ITER_C0:boxPlayer@YSII_Ag,playerid,_Y_ITER_ARRAY_SIZE(boxPlayer));
	DeletePVar(playerid, "BBArea");
	DestroyDynamicObject(GetPVarInt(playerid, "PlacedBB"));
	DestroyDynamic3DTextLabel(Text3D:GetPVarInt(playerid, "BBLabel"));
	DeletePVar(playerid, "PlacedBB"); DeletePVar(playerid, "BBLabel");
	DeletePVar(playerid, "BBX"); DeletePVar(playerid, "BBY"); DeletePVar(playerid, "BBZ");
	DeletePVar(playerid, "BBStation");
	SendInf(playerid, "Вы убрали магнитофон");
	DeletePVar(playerid,"boomBox");
	return 1;
}

StopStream(playerid)
{
	DeletePVar(playerid, "pAudioStream");
	StopAudioStreamForPlayer(playerid);
}

PlayStream(playerid, url[], Float:posX = 0.0, Float:posY = 0.0, Float:posZ = 0.0, Float:distance = 50.0, usepos = 0)
{
	if(GetPVarType(playerid, #pAudioStream)) StopAudioStreamForPlayer(playerid);
	else SetPVarInt(playerid, #pAudioStream, 1);
	PlayAudioStreamForPlayer(playerid, url, posX, posY, posZ, distance, usepos);
}

CMD:objectall(playerid)
{
	if(p_info[playerid][pAdmin] < 7) return 1;
	new Float:pos[3], randaa;
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	foreach(new i: Player)
	{
		if(!IsPlayerInRangeOfPoint(i, 20.0, pos[0], pos[1], pos[2])) continue;
		randaa = random(13)+1;
		if(randaa == 1) SetPlayerAttachedObject(i, 8, 19270, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
		else if(randaa == 2) SetPlayerAttachedObject(i, 8, 3528, 2, 0.111052, 0.021643, -0.000846, 92.280899, 92.752510, 358.071044, 0.100000, 0.100000, 0.100000);
		else if(randaa == 3) SetPlayerAttachedObject(i, 8, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		else if(randaa == 4) SetPlayerAttachedObject(i, 8, 18646, 2, 0.411052, 0.021643, 0.020846, 92.280899, 92.752510, 358.071044, 1.200000, 1.283168, 1.200000);
		else if(randaa == 5) SetPlayerAttachedObject(i, 8, 18637, 14, 0.0, 0.0, 0.0, 0.0, 180.0, 180.0, 1, 1, 1);
		else if(randaa == 6) SetPlayerAttachedObject(i, 8, 19086, 8, -0.049768, -0.014062, -0.108385, 87.458297, 263.478149, 184.123764, 0.622413, 1.041609, 1.012);
		else if(randaa == 7) SetPlayerAttachedObject(i, 8, 1371, 1, 0.1, 0, 0, 180, 90, 0, 1, 1, 1);
		else if(randaa == 8) SetPlayerAttachedObject(i, 8, 1273, 2, 0.411052, 0.011643, 0.060846, 180.280899, 95.752510, 355.071044, 1.200000, 1.283168, 1.200000);
		else if(randaa == 9) SetPlayerAttachedObject(i, 8, 1272, 2, 0.411052, 0.011643, 0.060846, 180.280899, 95.752510, 355.071044, 1.200000, 1.283168, 1.200000);
		else if(randaa == 10) SetPlayerAttachedObject(i, 8, 1210, 6, 0.29, 0.1, 0.04, 0.0, 260.0, 0.0, 1, 1, 1);
		else if(randaa == 11) SetPlayerAttachedObject(i, 8, 1550, 1, 0.0000, -0.3319, 0.0000, 1.09, 91.20, 1.70, 1.00, 1.00, 1.00);
		else if(randaa == 12) SetPlayerAttachedObject(i, 8, 18890, 6, 0.0, 0.0, 0.0, 0.0, 180.0, 90.0, 1, 1, 1);
		else if(randaa == 13) SetPlayerAttachedObject(i, 8, 18963, 2, 0.0, 0.0, -0.02, 0.0, 90.0, 91.0, 2, 2, 2);
		SendClientMessage(i, COLOR_YELLOW, "* Администратор установил Вам объект, /rmho чтобы удалить его");
	}
	SendClientMessage(playerid, COLOR_YELLOW, "* Вы выдали объекты всем игрокам в радиусе 20 метров");
	return 1;
}

CMD:rmho(playerid)
{
	if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8);
	SendErr(playerid, "Объект удален");
	return 1;
}

CMD:takeweaponall(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 7) return 1;
	new Float:ps;
	if(sscanf(params, "f", ps)) return SendInf(playerid, "/takeweaponall [Radius]");
	if(params[0] < 20 || params[0] > 200) return SendErr(playerid, "Радиус от 20 до 200");
	new Float:pos[3];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	foreach(new i : Player)
	{
		if(!IsPlayerInRangeOfPoint(i, ps, pos[0],pos[1],pos[2])) continue;
		AC_ResetPlayerWeapons(i);
		SendClientMessage(i, COLOR_YELLOW, "* Администратор забрал у Вас оружие");
	}
	SendClientMessage(playerid, COLOR_YELLOW, "* Вы успешно забрали оружие у игроков");
	return 1;
}

CMD:hpall(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 7) return 1;
	new Float:ps;
	if(sscanf(params, "fi", ps, params[1])) return SendInf(playerid, "/hpall [Radius] [Health]");
	if(params[1] < 1 || params[1] > 100) return SendErr(playerid, "Жизни от 1 до 100");
	if(params[0] < 20 || params[0] > 200) return SendErr(playerid, "Радиус от 20 до 200");
	new Float:pos[3];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	foreach(new i : Player)
	{
		if(!IsPlayerInRangeOfPoint(i, ps, pos[0],pos[1],pos[2])) continue;
		SetHealth(i, 100);
		SetArmour(i, 0);
		SendClientMessage(i, COLOR_YELLOW, "* Администратор изменил Вам уровень здоровья");
	}
	SendClientMessage(playerid, COLOR_YELLOW, "* Вы успешно изменили HP игрокам в радиусе");
	return 1;
}

CMD:givegunall(playerid,params[])
{
	if(p_info[playerid][pAdmin] < 7) return 1;
	new gun,ammo,radius;
	if(sscanf(params,"iii",radius,gun,ammo)) return SendInf(playerid, "/givegunall [Radius] [ID оружия] [патроны(1-999)]");
	if(radius < 1 || radius > 200) return SendErr(playerid, "Радиус от 20 до 200");
	if(gun < 1 || gun > 46 || gun == 38 || gun == 36 || gun == 35 || gun == 37) return SendErr(playerid, "Неверный ID оружия");
	if(ammo < 1 || ammo > 999) return SendErr(playerid, "Патронов может быть от 1 до 999");
	new Float:pos[3];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	new weaponname[70];
	new string[144];
	new players;
	foreach(new i : Player)
	{
		if(!IsPlayerInRangeOfPoint(i, radius, pos[0], pos[1], pos[2])) continue;
		GetWeaponName(gun,weaponname,sizeof(weaponname));
		AC_GivePlayerWeapon(i,gun,ammo);
		format(string, sizeof string, "* Вы получили %s с %d патронами", weaponname, ammo);
		SendClientMessage(i, COLOR_YELLOW, string);
		players++;
	}
	format(string, sizeof string, "* Оружие выдано %i игрокам в радиусе %i метров", players, radius);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:givewar(playerid)
{
    STRING_GLOBAL = "";
	new line_string[128];
    if(p_info[playerid][pLeader] < 1) return 1;
    if(!IsAMafia(playerid)) return 1;
  	for ( new i = 1 ; i < MAX_FRACTIONS ; i ++ )
	{
	  	if ( i != 7 && i != 8 && i != 15 && i != 16 ) continue ;
		if ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == 0 ) continue ;
		if ( i == p_info [ playerid ] [ pMember ] ) continue ;

		format ( line_string, sizeof ( line_string ), "%i - %s - %s\n", i, Fractions[i][fractionName], ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == status_war ) ? ( "{FF6347}Война{FFFFFF}" ) : ( dip_status [ p_info [ playerid ] [ pMember ] ] [ i ] == status_neutral ) ? ( "{fcfc00}Нейтралитет{FFFFFF}" ) : ( "{f0e86b}Союз{FFFFFF}" ) ) ;
		strcat ( STRING_GLOBAL, line_string ) ;
	}
	ShowPlayerDialogEx(playerid, 9123, DIALOG_STYLE_LIST, "{ebec86}>> Передача бизнеса", STRING_GLOBAL, "Выбрать", "Выйти") ;
	return 1;
}

forward OnPlayerCaptchaLoaded(playerid);
public OnPlayerCaptchaLoaded(playerid)
{
	STRING_GLOBAL = "";
    new rows, fields;
    new string[128], ip[32], _date[32];
    cache_get_data(rows, fields);
    for(new z; z < rows; z++)
    {
        cache_get_field_content(z, "clIP", ip);
        cache_get_field_content(z, "clDate", _date);

  		format(string, sizeof(string), "{FFFFFF}%d. Дата: %s | IP: %s\n", z+1, _date, ip);
        strcat(STRING_GLOBAL, string);
	}
    ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация об авторизации", STRING_GLOBAL, "Принять", "");
	return 1;
}

stock SecurityPlayer(playerid)
{
	STRING_GLOBAL = "";
    if(strfind(p_info[playerid][pMail], "@", false) == -1 || strfind(p_info[playerid][pMail], ".", false) == -1 || p_info[playerid][pCheckCode] == 0 || strlen(p_info[playerid][pPassword]) <= 8)
	{
		new podemail[34], podip[34], passwordlevel[29];
		if(strfind(p_info[playerid][pMail], "@", false) != -1 || strfind(p_info[playerid][pMail], ".", false) != -1) podemail = "{f0e86b}Подтвержден";
		else podemail = "{FF6347}Не подтвержден";
		if(p_info[playerid][pCheckCode] != 0) podip = "{f0e86b}Активирована{ffffff}";
		else podip = "{FF6347}Не активирована{ffffff}";
		if(strlen(p_info[playerid][pPassword]) > 8) passwordlevel = "{f0e86b}Надежный{ffffff}";
		else passwordlevel = "{FF6347}Не надежный{ffffff}";

		format(STRING_GLOBAL, 256, "{FFFFFF}Внимание! Ваш аккаунт под угрозой взлома!\n\nПароль: %s\nЗащита по IP-адресу: %s\nЭлектронный адрес: %s", passwordlevel, podip, podemail);
		ShowPlayerDialogEx(playerid, D_NULL, DIALOG_STYLE_MSGBOX, "{ebec86}>> Безопасность аккаунта", STRING_GLOBAL, "Принять", "");
	}
	return 1;
}

cmd:antiac(playerid)
{
	if(p_info[playerid][pAdmin] < 9) return 1;
	if(anticheat == 1)
	{
	    anticheat = 0;
	    SendInf(playerid, "Вы выключили 'Bike Crash'");
	    return 1;
	}
	if(anticheat == 0)
	{
	    anticheat = 1;
	    SendInf(playerid, "Вы включили 'Bike Crash'");
	    return 1;
	}
	return 1;
}

stock AddCheater(playerid, strokaID)
{
	new str[3];
 	if(strokaID == 1)
	{
 		format(str, sizeof(str), "%d", playerid);
   		TextDrawSetString(CheatShow[strokaID][Cheat], str);
     	Cheat ++;
      	if(Cheat > 9) Cheat = 0;
	}
	else
	{
 		format(str, sizeof(str), "%d", playerid);
   		TextDrawSetString(CheatShow[strokaID][Cheat1], str);
     	Cheat1 ++;
      	if(Cheat1 > 9) Cheat1 = 0;
	}
	return 1;
}

forward callback_offmembers ( playerid );
public callback_offmembers ( playerid )
{
	new rows, fields ;
	cache_get_data ( rows, fields ) ;
	if ( ! rows ) return SendErr ( playerid, "Игроки с данными параметрами не найдены" );

	new rows_list = GetPVarInt ( playerid, "ofm_list_page" ) - 1 ;
	SetPVarInt ( playerid, "ofm_list_rows", rows ) ;
	new line_string [ MAX_PLAYER_NAME + 100 ], pl_ofm_name [ 20 ], pl_ofm_rank, pl_ofm_online [ 16 ] ;
	new dialog_string [ 10 * sizeof(line_string) + 50 ] ;
	strcat ( dialog_string, "{ebec86}Предыдущая страница{ebec86}\nСледующая страница\n{FFFFFF}" ) ;
	for ( new i = rows_list * 10 ; i <  rows_list * 10 + 10 ; i ++ )
	{
		if ( i >= rows ) break ;

		cache_get_field_content ( i, "name", pl_ofm_name, dbHandle, 20 ) ;
		pl_ofm_rank = cache_get_field_content_int ( i, "rank", dbHandle ) ;
		cache_get_field_content ( i, "datavhod", pl_ofm_online, dbHandle, 16 ) ;

		new pvar_string [ 8 ] ;
		format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", i - rows_list * 10 ) ;
		SetPVarString ( playerid, pvar_string, pl_ofm_name ) ;

		format ( line_string, sizeof ( line_string ), "%s - {ebec86}%s (%d){ffffff} - %s\n", pl_ofm_name, GetRank(p_info [ playerid ] [ pMember ], pl_ofm_rank), pl_ofm_rank, pl_ofm_online ) ;
		strcat ( dialog_string, line_string ) ;

	}

	ShowPlayerDialogEx ( playerid, d_offmembers_list, DIALOG_STYLE_LIST, "{ebec86}>> Члены организации оффлайн", dialog_string, "Выбрать", "Назад" ) ;
	return 1 ;
}

forward callback_offmembers_info ( playerid );
public callback_offmembers_info ( playerid )
{
	new rows, fields;
	cache_get_data ( rows, fields ) ;
	if ( rows )
	{
		new pl_rank, last_date [ 16 ], fraction_date [ 16 ] ;

		pl_rank = cache_get_field_content_int ( 0, "rank", dbHandle ) ;
		cache_get_field_content(0, "datavhod", last_date, dbHandle, 16 ) ;
		cache_get_field_content(0, "fraction_date", fraction_date, dbHandle, 16 ) ;

		new pvar_string [ 20 ], pl_name [ 20 ] ;
		format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
		GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;

		new dialog_string [ 186 ] ;
		format ( dialog_string, sizeof ( dialog_string ), "{FFFFFF}Имя: {ebec86}%s{FFFFFF}\nРанг: {ebec86}%s (%d){FFFFFF}\nВ организации с {ebec86}%s{FFFFFF}\nПоследний вход: {ebec86}%s{FFFFFF}", pl_name, GetRank(p_info [ playerid ] [ pMember ], pl_rank), pl_rank, fraction_date, last_date ) ;
		ShowPlayerDialogEx ( playerid, d_offmembers_pl_menu_info, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация об игроке", dialog_string, "Назад", "" ) ;
	}
	if ( ! rows )
	{
		new query_string [ 128 ];
		DeletePVar( playerid, "ofm_listitem" ) ;
		if( ! GetPVarInt ( playerid, "ofm_type" ) )
		{
			mysql_format ( dbHandle, query_string, 98, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
			mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
			return 1;
		}
		mysql_format ( dbHandle, query_string, sizeof query_string, "SELECT `name`,`rank`,`datavhod` FROM `accounts` WHERE `member` = '%d' AND `rank` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ], GetPVarInt ( playerid, "ofm_type" ) ) ;
		mysql_tquery ( dbHandle, query_string, "callback_offmembers", "i", playerid ) ;
	}
	return 1 ;
}

forward callback_offamily ( playerid );
public callback_offamily ( playerid )
{
	new rows, fields ;
	cache_get_data ( rows, fields ) ;
	if ( ! rows ) return SendErr ( playerid, "Игроки с данными параметрами не найдены" );

	new rows_list = GetPVarInt ( playerid, "ofm_list_page" ) - 1 ;
	SetPVarInt ( playerid, "ofm_list_rows", rows ) ;
	new line_string [ MAX_PLAYER_NAME + 37 ], pl_ofm_name [ 20 ], pl_ofm_online [ 16 ] ;
	new dialog_string [ 10 * sizeof(line_string) + 50 ] ;
	strcat ( dialog_string, "{ebec86}Предыдущая страница{ebec86}\nСледующая страница\n{FFFFFF}" ) ;
	for ( new i = rows_list * 10 ; i <  rows_list * 10 + 10 ; i ++ )
	{
		if ( i >= rows ) break ;

		cache_get_field_content ( i, "name", pl_ofm_name, dbHandle, 20 ) ;
		cache_get_field_content ( i, "datavhod", pl_ofm_online, dbHandle, 16 ) ;

		new pvar_string [ 8 ] ;
		format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", i - rows_list * 10 ) ;
		SetPVarString ( playerid, pvar_string, pl_ofm_name ) ;

		format ( line_string, sizeof ( line_string ), "%s - {ebec86}%s{ffffff}\n", pl_ofm_name, pl_ofm_online ) ;
		strcat ( dialog_string, line_string ) ;

	}

	ShowPlayerDialogEx ( playerid, d_offmembers_list1, DIALOG_STYLE_LIST, "{ebec86}>> Члены семьи оффлайн", dialog_string, "Выбрать", "Назад" ) ;
	return 1 ;
}

forward callback_offamily_info ( playerid );
public callback_offamily_info ( playerid )
{
	new rows, fields;
	cache_get_data ( rows, fields ) ;
	if ( rows )
	{
		new pl_rank [ 16 ], f_rank, last_date [ 16 ], fraction_date [ 16 ] ;

		f_rank = cache_get_field_content_int ( 0, "familyzam", dbHandle ) ;
		cache_get_field_content(0, "datavhod", last_date, dbHandle, 16 ) ;
		cache_get_field_content(0, "family_date", fraction_date, dbHandle, 16 ) ;

		new pvar_string [ 20 ], pl_name [ 20 ] ;
		format ( pvar_string, sizeof ( pvar_string ), "ofm_%d", GetPVarInt ( playerid, "ofm_listitem" ) ) ;
		GetPVarString ( playerid, pvar_string, pl_name, 20 ) ;
		
		if(f_rank > 0)
		{
		    pl_rank = "Заместитель";
		}
		else
		{
		    pl_rank = "Нет";
		}

		new dialog_string [ 186 ] ;
		format ( dialog_string, sizeof ( dialog_string ), "{FFFFFF}Имя: {ebec86}%s{FFFFFF}\nДолжность: {ebec86}%s{FFFFFF}\nВ семье с {ebec86}%s{FFFFFF}\nПоследний вход: {ebec86}%s{FFFFFF}", pl_name, pl_rank, fraction_date, last_date ) ;
		ShowPlayerDialogEx ( playerid, d_offmembers_pl_menu_info1, DIALOG_STYLE_MSGBOX, "{ebec86}>> Информация об игроке", dialog_string, "Назад", "" ) ;
	}
	if ( ! rows )
	{
		new query_string [ 128 ];
		DeletePVar( playerid, "ofm_listitem" ) ;
		if( ! GetPVarInt ( playerid, "ofm_type" ) )
		{
			mysql_format ( dbHandle, query_string, 98, "SELECT `name`,`datavhod` FROM `accounts` WHERE `family` = '%d' AND `online` = '0'", p_info [ playerid ] [ pMember ] ) ;
			mysql_tquery ( dbHandle, query_string, "callback_offamily", "i", playerid ) ;
			return 1;
		}
	}
	return 1 ;
}

ShowHouseUpdateDialog(playerid)
{
    new i = GetPVarInt(playerid, "PlayerHouse");
	if(HouseInfo[i][hUpdate] == 0)  ShowPlayerDialogEx(playerid,111,DIALOG_STYLE_LIST, "{ebec86}>> Дом (Улучшения)", "1. Автоматические двери - {f0e86b}8.000{FFFFFF} рублей\n2. Домашняя аптечка - {f0e86b}13.000{FFFFFF} рублей\n3. Оформить субсидию - {f0e86b}18.000{FFFFFF} рублей\n4. Улучшить шкаф - {f0e86b}25.000{FFFFFF} рублей\n{f0e86b}Информация", "Выбрать", "Закрыть");
	if(HouseInfo[i][hUpdate] == 1)  ShowPlayerDialogEx(playerid,111,DIALOG_STYLE_LIST, "{ebec86}>> Дом (Улучшения)", "1. Автоматические двери - {f0e86b}Куплено\n2. Домашняя аптечка - {f0e86b}13.000{FFFFFF} рублей\n3. Оформить субсидию - {f0e86b}18.000{FFFFFF} рублей\n4. Улучшить шкаф - {f0e86b}25.000{FFFFFF} рублей\n{f0e86b}Информация", "Выбрать", "Закрыть");
	if(HouseInfo[i][hUpdate] == 2)  ShowPlayerDialogEx(playerid,111,DIALOG_STYLE_LIST, "{ebec86}>> Дом (Улучшения)", "1. Автоматические двери - {f0e86b}Куплено\n2. Домашняя аптечка - {f0e86b}Куплено\n3. Оформить субсидию - {f0e86b}18.000{FFFFFF} рублей\n4. Улучшить шкаф - {f0e86b}25.000{FFFFFF} рублей\n{f0e86b}Информация", "Выбрать", "Закрыть");
	if(HouseInfo[i][hUpdate] == 3)  ShowPlayerDialogEx(playerid,111,DIALOG_STYLE_LIST, "{ebec86}>> Дом (Улучшения)", "1. Автоматические двери - {f0e86b}Куплено\n2. Домашняя аптечка - {f0e86b}Куплено\n3. Оформить субсидию - {f0e86b}Куплено\n4. Улучшить шкаф - {f0e86b}25.000{FFFFFF} рублей\n{f0e86b}Информация", "Выбрать", "Закрыть");
	if(HouseInfo[i][hUpdate] == 4)  ShowPlayerDialogEx(playerid,111,DIALOG_STYLE_LIST, "{ebec86}>> Дом (Улучшения)", "1. Автоматические двери - {f0e86b}Куплено\n2. Домашняя аптечка - {f0e86b}Куплено\n3. Оформить субсидию - {f0e86b}Куплено\n4. Улучшить шкаф - {f0e86b}Куплено\n{f0e86b}Информация", "Выбрать", "Закрыть");
}

ShowSafeMenu(playerid, houseid)
{
	STRING_GLOBAL = "";
	format(STRING_GLOBAL, 512, "\
	{ffffff}Деньги - {f0e86b}%d {ffffff}рублей\n\
	{ffffff}Металл - {f0e86b}%d {ffffff}кг\n\
	{ffffff}Патроны - {f0e86b}%d {ffffff}шт.\n\
	{ffffff}Наркотики - {f0e86b}%d {ffffff}гр. %s",
	HouseInfo[houseid][hMoney],
	HouseInfo[houseid][hMetall],
	HouseInfo[houseid][hPatrons],
	HouseInfo[houseid][hDrugs],
	(HouseInfo[houseid][hUpdate] == 4) ? ("\n{ffffff}Арсенал") : (""));
	ShowPlayerDialog(playerid, D_SAFE_MAIN, DIALOG_STYLE_LIST, "{ebec86}>> Шкаф", STRING_GLOBAL, "Выбрать", "Отмена");
	return 1;
}

UpdateHouseSafe(house)
{
	STRING_GLOBAL = "";
	format(STRING_GLOBAL, 512, "UPDATE `house` SET `hPatrons` = '%d',`hMetall` = '%d',`hDrugs` = '%d',`hMoney` = '%d' WHERE `id` = '%d' LIMIT 1",
	HouseInfo[house][hPatrons],
	HouseInfo[house][hMetall],
	HouseInfo[house][hDrugs],
	HouseInfo[house][hMoney],
	HouseInfo[house][hID]);
	mysql_tquery(dbHandle, STRING_GLOBAL);
}

UpdateHouseGunSafe(h)
{
	STRING_GLOBAL = "";
	format(STRING_GLOBAL, 512, "UPDATE `house` SET \
	`hSafeGun0` = '%d',\
	`hSafeGun1` = '%d',\
	`hSafeGun2` = '%d',\
	`hSafeGun3` = '%d',\
	`hSafeGun4` = '%d',\
	`hSafeGun5` = '%d',\
	`hSafeAmmo0` = '%d',\
	`hSafeAmmo1` = '%d',\
	`hSafeAmmo2` = '%d',\
	`hSafeAmmo3` = '%d',\
	`hSafeAmmo4` = '%d',\
	`hSafeAmmo5` = '%d'\
	WHERE `hID` = '%d' LIMIT 1",
	HouseInfo[h][hSafeGun][0],
	HouseInfo[h][hSafeGun][1],
	HouseInfo[h][hSafeGun][2],
	HouseInfo[h][hSafeGun][3],
	HouseInfo[h][hSafeGun][4],
	HouseInfo[h][hSafeGun][5],
	HouseInfo[h][hSafeAmmos][0],
	HouseInfo[h][hSafeAmmos][1],
	HouseInfo[h][hSafeAmmos][2],
	HouseInfo[h][hSafeAmmos][3],
	HouseInfo[h][hSafeAmmos][4],
	HouseInfo[h][hSafeAmmos][5],
	HouseInfo[h][hID]);
	mysql_tquery(dbHandle, STRING_GLOBAL);
}

ShowPlayerGunSafe(playerid)
{
    STRING_GLOBAL = "";
	new h = GetPVarInt(playerid, "PlayerHouse"), gunname[32], str[64];
	for (new x; x < 6; x ++)
	{
		if (HouseInfo[h][hSafeGun][x] != 0) GetWeaponName(HouseInfo[h][hSafeGun][x], gunname, 32);
		else gunname = "Свободный слот";

		format(str, sizeof(str), "%d. %s - %d\n", x + 1, gunname, HouseInfo[h][hSafeAmmos][x]);
		strcat(STRING_GLOBAL, str);
	}
	return ShowPlayerDialogEx(playerid, D_GUNSAFE_MAIN, DIALOG_STYLE_LIST, "{ebec86}>> Арсенал", STRING_GLOBAL, "Выбрать", "Отмена");
}

ShowSafeUsingMenu(playerid, listitem)
{
    STRING_GLOBAL = "";
	new name[12];
	switch(listitem)
	{
		case 0: name = "Деньги", SetPVarInt(playerid, "SAFEUSEID", 0);
		case 1: name = "Металл", SetPVarInt(playerid, "SAFEUSEID", 1);
		case 2: name = "Патроны", SetPVarInt(playerid, "SAFEUSEID", 2);
		case 3: name = "Наркотики", SetPVarInt(playerid, "SAFEUSEID", 3);
	}

	format(STRING_GLOBAL, 256, "\
	{ffff00}%s{ffffff}\n\
	Для того чтобы взять: \"-\" и количество.\n\
	Для того чтобы положить: \"+\" и количество.", name);

	return ShowPlayerDialogEx(playerid, D_SAFE_USE, DIALOG_STYLE_INPUT, "{ebec86}>> Шкаф", STRING_GLOBAL, "Ввести", "Отмена");
}
forward AnnounceTextDraw();
public AnnounceTextDraw()
{
    UpDateTextDraw(Announce);
    TD_Position -= 1.0;

    if(floatcmp(TD_Position, -385.0) <= 0)
    {
        RemoveAnnounce();
        TD_Position = 521.0000;
        return 1;
    }

    if(floatcmp(TD_Position, 520.0) >= 0)//640
    {
        TextDrawSetString(Announce , sAnnounce);
    }
    return SetTimer("AnnounceTextDraw", 50, false);
}
RemoveAnnounce()
{
    aProgress = false;
    TextDrawHideForAll(Announce);
    return 1;
}
UpDateTextDraw(Text:TextId)
{
    EditAnnounceType(TextId);
    return TextDrawShowForAll(TextId);
}
EditAnnounceType(Text:TextId)
{
    TextDrawDestroy(TextId);
    TextId = TextDrawCreate(TD_Position, 4, sAnnounce);
    TextDrawBackgroundColor(TextId, 0x00000050);
    TextDrawFont(TextId, 2);
    TextDrawLetterSize(TextId, 0.4,1.2);
    TextDrawColor(TextId, 0xFFFFFFFF);
    TextDrawSetShadow(TextId, -112);
    TextDrawSetOutline(TextId, 0);
    TextDrawSetProportional(TextId, 1);
}
stock ShowPlayerRubbishDialog(playerid)
{
	switch(random(2))
	{
 		case 0:
		{
			ShowPlayerDialog(playerid, RUBBISH_ID, DIALOG_STYLE_LIST, "Мусорка", "\
			[1] Огурцы\n\
			[2] Тухлое мясо\n\
			[3] Молоко\n\
			[4] Помидор\n\
			[5] Картошка\n\
			[6] Сметана\n\
			{B3B3B3}[7] Искать ещё...\
			", "Выбрать", "Отмена");
		}
  		case 1:
  		{
			ShowPlayerDialog(playerid, RUBBISH_ID+1, DIALOG_STYLE_LIST, "Мусорка", "\
			[1] Пирожоное\n\
			[2] Кусок хлеба\n\
			[3] Картошка\n\
			[4] Морковка\n\
			[5] Тухлая рыба\n\
			{B3B3B3}[6] Искать ещё...\
			", "Выбрать", "Отмена");
		}
  		case 2:
  		{
			ShowPlayerDialog(playerid, RUBBISH_ID+2, DIALOG_STYLE_LIST, "Мусорка", "\
			[1] Тухлое мясо\n\
			[2] Тухлая рыба\n\
			[3] Кефир\n\
			[4] Салат\n\
			[5] Кусок хлеба\n\
			{B3B3B3}[6] Искать ещё...\
			", "Выбрать", "Отмена");
		}
	}
	return 1;
}

stock IsRubbish(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 0.5,2443.2617,-1862.2729,21.9619)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2271.9358,-1838.0479,21.9619)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2148.5620,-1766.6434,18.9692)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2117.8237,-1845.4420,18.9650)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2221.7566,-2165.6611,21.9619)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2312.8315,-2142.3462,21.9619)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2340.5208,-2202.4761,21.9759)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2245.8237,-2353.9624,21.9430)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2072.4258,-2350.8037,21.9430)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2245.8242,-2353.9956,21.9430)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2312.5459,-2373.7324,21.9716)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2434.8503,-2322.2559,21.9668)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2357.8181,-2560.5583,21.7855)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2360.5564,-2648.9390,21.7855)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2337.9502,-2627.3018,22.0207)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2493.8474,-2570.4839,21.9977)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2510.7158,-2502.7151,22.0041)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2582.0962,-2445.5144,21.9957)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2582.0969,-2388.3677,22.0078)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2578.0078,-2142.0610,21.9544)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2617.8586,-2194.3740,21.9863)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2452.2268,-2174.2856,21.9710)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2446.7185,-2140.7563,21.9611)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2370.3855,-2142.0261,21.9588)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2312.9417,-2142.3467,21.9619)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2394.3640,-2097.4258,21.9701)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2351.8137,-2034.0162,21.9701)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2404.0034,-1984.8534,21.9701)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2452.2261,-1981.0767,21.9619)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,2439.0342,-1915.7362,22.0043)
	|| IsPlayerInRangeOfPoint(playerid, 0.5,1876.4237,-2226.6179,11.2510)) return 1;
	return 0;
}
stock CancelFlyMode(playerid)
{
	DeletePVar(playerid, "FlyMode");
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);

	DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	return 1;
}
 
 
stock FlyMode(playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);

	TogglePlayerSpectating(playerid, true);
	AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);

	SetPVarInt(playerid, "FlyMode", 1);
	noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;
	return 1;
} 
stock GetMoveDirectionFromKeys(ud, lr)
{
	new direction = 0;
	if(lr < 0)
	{
			if(ud < 0) direction = MOVE_FORWARD_LEFT;
			else if(ud > 0) direction = MOVE_BACK_LEFT;
			else direction = MOVE_LEFT;
	}
	else if(lr > 0)
	{
			if(ud < 0) direction = MOVE_FORWARD_RIGHT;
			else if(ud > 0) direction = MOVE_BACK_RIGHT;
			else direction = MOVE_RIGHT;
	}
	else if(ud < 0) direction = MOVE_FORWARD;
	else if(ud > 0) direction = MOVE_BACK;
	return direction;
}
//--------------------------------------------------
stock MoveCamera(playerid)
{
	new Float:FV[3], Float:CPR[3];
	GetPlayerCameraPos(playerid, CPR[0], CPR[1], CPR[2]);
	GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);

	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;

	new Float:speed = MOVE_SPEED * noclipdata[playerid][accelmul];

	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][mode], CPR, FV, X, Y, Z);
	MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);

	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}
//--------------------------------------------------
stock GetNextCameraPosition(move_mode, Float:CPR[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode)
	{
		case MOVE_FORWARD:
		{
			X = CPR[0]+OFFSET_X;
			Y = CPR[1]+OFFSET_Y;
			Z = CPR[2]+OFFSET_Z;
		}
		case MOVE_BACK:
		{
			X = CPR[0]-OFFSET_X;
			Y = CPR[1]-OFFSET_Y;
			Z = CPR[2]-OFFSET_Z;
		}
		case MOVE_LEFT:
		{
			X = CPR[0]-OFFSET_Y;
			Y = CPR[1]+OFFSET_X;
			Z = CPR[2];
		}
		case MOVE_RIGHT:
		{
			X = CPR[0]+OFFSET_Y;
			Y = CPR[1]-OFFSET_X;
			Z = CPR[2];
		}
		case MOVE_BACK_LEFT:
		{
			X = CPR[0]+(-OFFSET_X - OFFSET_Y);
			Y = CPR[1]+(-OFFSET_Y + OFFSET_X);
			Z = CPR[2]-OFFSET_Z;
		}
		case MOVE_BACK_RIGHT:
		{
			X = CPR[0]+(-OFFSET_X + OFFSET_Y);
			Y = CPR[1]+(-OFFSET_Y - OFFSET_X);
			Z = CPR[2]-OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT:
		{
			X = CPR[0]+(OFFSET_X  - OFFSET_Y);
			Y = CPR[1]+(OFFSET_Y  + OFFSET_X);
			Z = CPR[2]+OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT:
		{
			X = CPR[0]+(OFFSET_X  + OFFSET_Y);
			Y = CPR[1]+(OFFSET_Y  - OFFSET_X);
			Z = CPR[2]+OFFSET_Z;
		}
	}
}
public FallingChecker()
{
	new Float:x,Float:y,Float:z,Float:d;
	for(new i =0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && (GetPlayerState(i) != 2 && GetPlayerState(i) !=3))
		{
			GetPlayerPos(i,x,y,z);
			d = floatsqroot((x-LastX[i] * x-LastX[i]) + (y-LastY[i] * y-LastY[i]));
			if(d < 3 && (LastZ[i] - z) > 1.5) IsPlayerFalling[i] = true;
			else IsPlayerFalling[i] = false;
			LastX[i] = x;
			LastY[i] = y;
			LastZ[i] = z;
		}
	}
	return true;
}
public most1Close()
{
    MoveObject(Dvers[20], 2751.55, -1023.33, 23.34-0.0004, 0.0004, 0.00, -90.00, -180.00);
    KillTimer(most1Timer);
	SDvers[20] = 0;
    return 1;
}	
public most2Close()
{
    MoveObject(Dvers[19], 2743.17, -1023.33, 23.34-0.0004, 0.0004, 0.00, -90.00, 0.00);
    KillTimer(most2Timer);
	SDvers[19] = 0;
    return 1;
}
public pps2Close()
{
    MoveObject(Dvers[14], 2579.79, -2438.72, 21.53-0.0004, 0.0004, 0.00, -90.00, -90.00);
    KillTimer(pps2Timer);
	SDvers[14] = 0;
    return 1;
}
public park1Close()
{
    MoveObject(Dvers[21], 1857.37, -2487.21, 10.73-0.0004, 0.0004, 0.00, 90.00, 180.00);
    KillTimer(park1Timer);
	SDvers[21] = 0;
    return 1;
}
public park2Close()
{
    MoveObject(Dvers[22], 2082.83, -2039.74, 18.53-0.0004, 0.0004, 0.00, 90.00, 180.00);
    KillTimer(park2Timer);
	SDvers[22] = 0;
    return 1;
}
public park3Close()
{
    MoveObject(Dvers[23], 2259.43, -2099.47, 21.60-0.0004, 0.0004, 0.00, 90.00, 270.00);
    KillTimer(park3Timer);
	SDvers[23] = 0;
    return 1;
}
public UnFreezSp(playerid) 
{ 
  spr[playerid]  =  0; 
  TogglePlayerControllable(playerid, 1); 
  ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0); 
  return 1; 
}
public IsAInkasator(carid)// Транспорт инкассаторов   
{   
     if(carid >= Inkasator[0] && carid <= Inkasator[4])   
     {   
         return 1;   
     }   
     return 0;   
}
// сперма
forward sperma(playerid); 
public sperma(playerid) 
	{ 
		ClearAnimations(playerid); 
		GiveMoney(playerid, 5000, "Сдача спермы");
		SendClientMessage(playerid, 0xFFCC00FF, "Поздравляем! Вы сдали сперму!");
		RemovePlayerAttachedObject(playerid, 1); 
		SetPVarInt(playerid,"Sperm",0); 
		return 1;  
    }
// погода
forward ChangeWeather();
public ChangeWeather()
{
    new weather;
    weather = random(9);
    switch(weather)
    {
        case 0: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ????? ?????? {00ff00}(+1)"); SetWeather(0);}
        case 1: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ????? ?????? {00ff00}(-7)"); SetWeather(1);}
        case 2: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ????? ?????? {00ff00}(-10)"); SetWeather(2);}
        case 3: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ????? ?????? {00ff00}(-2)"); SetWeather(3);}
        case 4: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ????? ?????? {00ff00}(-18)"); SetWeather(4);}
        case 5: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ????? ?????? {00ff00}(-12)"); SetWeather(5);}
        case 6: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ????? ?????? {00ff00}(-11)"); SetWeather(6);}
        case 7: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ????? ?????? {00ff00}(-24)"); SetWeather(7);}
        case 8: {SendClientMessageToAll(COLOR_RED,"{0da1e8}? ??????? ????????? ?????? {00ff00}(-2)"); SetWeather(16);}
    }
    return 1;
}

